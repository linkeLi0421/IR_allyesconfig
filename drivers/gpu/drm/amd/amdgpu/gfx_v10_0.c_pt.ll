; ModuleID = '/llk/IR_all_yes/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c_pt.bc'
source_filename = "../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.amd_ip_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_ip_block_version = type { i32, i32, i32, i32, ptr }
%struct.kiq_pm4_funcs = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32 }
%struct.amdgpu_ring_funcs = type { i32, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.amdgpu_irq_src_funcs = type { ptr, ptr }
%struct.amdgpu_rlc_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cs_section_def = type { ptr, i32 }
%struct.cs_extent_def = type { ptr, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.anon.113 = type { i32, i32, i32 }
%struct.amdgpu_gfx_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.soc15_reg_golden = type { i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_device = type { ptr, ptr, %struct.drm_device, %struct.amdgpu_acp, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, i8, i8, i8, %struct.notifier_block, [16 x ptr], %struct.debugfs_blob_wrapper, %struct.debugfs_blob_wrapper, %struct.mutex, %struct.mutex, %struct.dev_pm_domain, i8, i8, i8, ptr, i32, i32, [16 x i32], i32, i32, ptr, %struct.spinlock, %struct.amdgpu_mmio_remap, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.amdgpu_doorbell, %struct.amdgpu_clock, %struct.amdgpu_gmc, %struct.amdgpu_gart, i32, %struct.amdgpu_vm_manager, [3 x %struct.amdgpu_vmhub], i32, %struct.amdgpu_mman, %struct.amdgpu_vram_scratch, %struct.amdgpu_wb, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.anon.97, i8, ptr, %struct.amdgpu_mode_info, %struct.work_struct, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i64, i32, [28 x ptr], i8, [3 x %struct.amdgpu_sa_manager], [9 x [3 x %struct.amdgpu_sched]], %struct.amdgpu_irq, %struct.amd_powerplay, i8, %struct.smu_context, %struct.amdgpu_pm, i32, i32, %struct.amdgpu_nbio, %struct.amdgpu_hdp, %struct.amdgpu_smuio, %struct.amdgpu_mmhub, %struct.amdgpu_gfxhub, %struct.amdgpu_gfx, %struct.amdgpu_sdma, %struct.amdgpu_uvd, %struct.amdgpu_vce, %struct.amdgpu_vcn, %struct.amdgpu_jpeg, %struct.amdgpu_firmware, %struct.psp_context, %struct.amdgpu_gds, %struct.amdgpu_kfd_dev, %struct.amdgpu_umc, %struct.amdgpu_display_manager, i8, %struct.amdgpu_mes, %struct.amdgpu_df, %struct.amdgpu_mca, [16 x %struct.amdgpu_ip_block], i32, i32, %struct.mutex, [128 x %struct.hlist_head], %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, [31 x [10 x ptr]], %struct.delayed_work, %struct.amdgpu_virt, %struct.list_head, %struct.mutex, i8, [64 x i8], i8, i8, i8, i8, %struct.atomic_t, i32, %struct.rw_semaphore, %struct.amdgpu_doorbell_index, %struct.mutex, i32, %struct.work_struct, %struct.list_head, i32, i32, i32, i32, i64, [4 x i64], i8, i8, i8, i8, i8, i8, [16 x i8], [64 x i8], [20 x i8], %struct.atomic_t, %struct.ratelimit_state, i32, i32, i8, ptr, i32, ptr, [31 x [10 x i32]], i8 }
%struct.drm_device = type { i32, %struct.kref, ptr, %struct.anon.79, ptr, ptr, ptr, ptr, i8, ptr, i32, i8, ptr, ptr, %struct.mutex, %struct.mutex, %struct.atomic_t, %struct.mutex, %struct.list_head, %struct.list_head, %struct.mutex, %struct.list_head, i8, ptr, %struct.spinlock, %struct.spinlock, i32, %struct.list_head, %struct.spinlock, i32, %struct.drm_mode_config, %struct.mutex, %struct.idr, ptr, ptr, i32, ptr, %struct.list_head, ptr, %struct.list_head, %struct.mutex, %struct.idr, %struct.list_head, %struct.drm_open_hash, %struct.list_head, ptr, i32, i32, %struct.spinlock, i32, %struct.atomic_t, %struct.anon.89, ptr, i32, ptr, i8, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.anon.79 = type { %struct.list_head, ptr, %struct.spinlock }
%struct.drm_mode_config = type { %struct.mutex, %struct.drm_modeset_lock, ptr, %struct.mutex, %struct.idr, %struct.idr, %struct.mutex, i32, %struct.list_head, %struct.spinlock, i32, %struct.ida, %struct.list_head, %struct.llist_head, %struct.work_struct, i32, %struct.list_head, i32, %struct.list_head, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, ptr, i32, i8, i8, i8, %struct.delayed_work, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, ptr, i32, i32, ptr, ptr }
%struct.drm_modeset_lock = type { %struct.ww_mutex, %struct.list_head }
%struct.ww_mutex = type { %struct.mutex, ptr, ptr }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.llist_head = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.drm_open_hash = type { ptr, i8 }
%struct.anon.89 = type { i32, ptr }
%struct.amdgpu_acp = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.debugfs_blob_wrapper = type { ptr, i32 }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_mmio_remap = type { i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.amdgpu_doorbell = type { i32, i32, ptr, i32 }
%struct.amdgpu_clock = type { [3 x %struct.amdgpu_pll], %struct.amdgpu_pll, %struct.amdgpu_pll, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_pll = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_gmc = type { i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i64, i32, i64, ptr, i32, %struct.amdgpu_irq_src, i32, i8, i32, i8, i32, i64, i64, i64, i64, %struct.spinlock, i8, ptr, %struct.atomic_t, [256 x %struct.amdgpu_gmc_fault], [256 x %struct.anon.96], i8, i8, ptr, %struct.amdgpu_xgmi, %struct.amdgpu_irq_src, i32, i32, i32, ptr, ptr }
%struct.amdgpu_gmc_fault = type { i56, %struct.atomic64_t }
%struct.anon.96 = type { i8, [7 x i8] }
%struct.amdgpu_xgmi = type { i64, i64, i64, i32, i32, %struct.list_head, i8, ptr, i8, i8, ptr }
%struct.amdgpu_gart = type { ptr, ptr, i32, i32, i32, i8, i64 }
%struct.amdgpu_vm_manager = type { [3 x %struct.amdgpu_vmid_mgr], i32, i8, i64, [28 x i32], i64, i32, i32, i32, i32, i64, ptr, [28 x ptr], i32, ptr, %struct.spinlock, %struct.atomic_t, i32, %struct.xarray }
%struct.amdgpu_vmid_mgr = type { %struct.mutex, i32, %struct.list_head, [16 x %struct.amdgpu_vmid], %struct.atomic_t }
%struct.amdgpu_vmid = type { %struct.list_head, %struct.amdgpu_sync, ptr, i64, i64, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_sync = type { [16 x %struct.hlist_head], ptr }
%struct.hlist_head = type { ptr }
%struct.amdgpu_vmhub = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_mman = type { %struct.ttm_device, i8, ptr, ptr, ptr, i8, %struct.mutex, %struct.drm_sched_entity, %struct.amdgpu_vram_mgr, %struct.amdgpu_gtt_mgr, %struct.amdgpu_preempt_mgr, i64, ptr, i64, ptr, i8, ptr, i64, i64, ptr, i32, ptr, i64, i64, ptr, ptr }
%struct.ttm_device = type { %struct.list_head, ptr, %struct.ttm_resource_manager, [8 x ptr], ptr, %struct.ttm_pool, %struct.spinlock, %struct.list_head, %struct.list_head, ptr, %struct.delayed_work }
%struct.ttm_resource_manager = type { i8, i8, i64, ptr, %struct.spinlock, [4 x %struct.list_head], ptr }
%struct.ttm_pool = type { ptr, i8, i8, [3 x %struct.anon.93] }
%struct.anon.93 = type { [12 x %struct.ttm_pool_type] }
%struct.ttm_pool_type = type { ptr, i32, i32, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.drm_sched_entity = type { %struct.list_head, ptr, ptr, i32, i32, %struct.spinlock, %struct.spsc_queue, %struct.atomic_t, i64, ptr, %struct.dma_fence_cb, ptr, ptr, ptr, i8, %struct.completion }
%struct.spsc_queue = type { ptr, %struct.atomic_t, %struct.atomic_t }
%struct.dma_fence_cb = type { %struct.list_head, ptr }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.amdgpu_vram_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.atomic64_t, %struct.atomic64_t }
%struct.drm_mm = type { ptr, %struct.list_head, %struct.drm_mm_node, %struct.rb_root_cached, %struct.rb_root_cached, %struct.rb_root, i32 }
%struct.drm_mm_node = type { i32, i64, i64, ptr, %struct.list_head, %struct.list_head, %struct.rb_node, %struct.rb_node, %struct.rb_node, i64, i64, i64, i32, i32 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.amdgpu_gtt_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.atomic64_t }
%struct.amdgpu_preempt_mgr = type { %struct.ttm_resource_manager, %struct.atomic64_t }
%struct.amdgpu_vram_scratch = type { ptr, ptr, i64 }
%struct.amdgpu_wb = type { ptr, ptr, i64, i32, [8 x i32] }
%struct.anon.97 = type { %struct.spinlock, i64, i64, i64, i32 }
%struct.amdgpu_mode_info = type { ptr, ptr, i8, [6 x ptr], [6 x ptr], [9 x ptr], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i8, %struct.amdgpu_audio, i32, i32, i32, i32, ptr, ptr }
%struct.amdgpu_audio = type { i8, [9 x %struct.amdgpu_audio_pin], i32 }
%struct.amdgpu_audio_pin = type { i32, i32, i32, i8, i8, i32, i8, i32 }
%struct.amdgpu_irq_src = type { i32, ptr, ptr }
%struct.amdgpu_sa_manager = type { %struct.wait_queue_head, ptr, ptr, [32 x %struct.list_head], %struct.list_head, i32, i64, ptr, i32, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.amdgpu_sched = type { i32, [8 x ptr] }
%struct.amdgpu_irq = type { i8, i32, %struct.spinlock, [32 x %struct.amdgpu_irq_client], i8, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, ptr, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.amdgpu_irq_src, ptr, [256 x i32], i32 }
%struct.amdgpu_irq_client = type { ptr }
%struct.amdgpu_ih_ring = type { i32, i32, i32, i8, i8, ptr, ptr, i64, i64, ptr, i64, ptr, i8, i32, %struct.amdgpu_ih_regs, %struct.wait_queue_head, i64 }
%struct.amdgpu_ih_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amd_powerplay = type { ptr, ptr }
%struct.smu_context = type { ptr, %struct.amdgpu_irq_src, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, i64, %struct.smu_table_context, %struct.smu_dpm_context, %struct.smu_power_context, %struct.smu_feature, ptr, %struct.smu_baco_context, %struct.smu_temperature_range, ptr, %struct.smu_umd_pstate_table, i32, i32, i8, i32, i32, i32, i32, i32, ptr, i8, i8, i32, i32, i8, i32, [7 x i32], [7 x i32], i32, i32, i8, i8, i32, i32, i32, i8, i8, %struct.work_struct, %struct.atomic64_t, %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, %struct.smu_user_dpm_profile, %struct.stb_context }
%struct.smu_table_context = type { ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, %struct.smu_bios_boot_up_values, ptr, ptr, [15 x %struct.smu_table], %struct.smu_table, %struct.smu_table, %struct.smu_table, i8, ptr, ptr, ptr, i32, ptr }
%struct.smu_bios_boot_up_values = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i32, i32, i32, i32, i32, i32 }
%struct.smu_table = type { i64, i32, i8, i64, ptr, ptr }
%struct.smu_dpm_context = type { i32, ptr, ptr, i8, i32, i32, i32, ptr, ptr, ptr }
%struct.smu_power_context = type { ptr, i32, %struct.smu_power_gate }
%struct.smu_power_gate = type { i8, i8, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.mutex }
%struct.smu_feature = type { i32, [2 x i32], [2 x i32], [2 x i32], %struct.mutex }
%struct.smu_baco_context = type { %struct.mutex, i32, i8 }
%struct.smu_temperature_range = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.smu_umd_pstate_table = type { %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq }
%struct.pstates_clk_freq = type { i32, i32, i32, %struct.smu_freq_info, %struct.smu_freq_info }
%struct.smu_freq_info = type { i32, i32, i32 }
%struct.smu_user_dpm_profile = type { i32, i32, i32, i32, i32, i32, [23 x i32], i32 }
%struct.stb_context = type { i32, i8, %struct.spinlock }
%struct.amdgpu_pm = type { %struct.mutex, i32, i32, i32, i32, ptr, i8, i32, ptr, i8, i8, i8, i8, i8, i8, %struct.amdgpu_dpm, ptr, i32, i32, i32, %struct.amd_pp_display_configuration, i32, ptr, i8, i32, %struct.i2c_adapter, %struct.mutex, %struct.list_head, [14 x %struct.atomic_t], i32 }
%struct.amdgpu_dpm = type { ptr, i32, ptr, ptr, ptr, ptr, i32, [6 x %struct.amd_vce_state], i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, %struct.amdgpu_dpm_dynamic_state, %struct.amdgpu_dpm_fan, i32, i32, i32, i32, i32, i16, i32, i16, i8, i8, i8, i8, %struct.amdgpu_dpm_thermal, i32 }
%struct.amd_vce_state = type { i32, i32, i32, i32, i8, i8 }
%struct.amdgpu_dpm_dynamic_state = type { %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_uvd_clock_voltage_dependency_table, %struct.amdgpu_vce_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_array, %struct.amdgpu_clock_array, %struct.amdgpu_clock_and_voltage_limits, %struct.amdgpu_clock_and_voltage_limits, i32, i32, i16, i16, %struct.amdgpu_cac_leakage_table, %struct.amdgpu_phase_shedding_limits_table, ptr, ptr }
%struct.amdgpu_uvd_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_vce_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_clock_voltage_dependency_table = type { i32, ptr }
%struct.amdgpu_clock_array = type { i32, ptr }
%struct.amdgpu_clock_and_voltage_limits = type { i32, i32, i16, i16 }
%struct.amdgpu_cac_leakage_table = type { i32, ptr }
%struct.amdgpu_phase_shedding_limits_table = type { i32, ptr }
%struct.amdgpu_dpm_fan = type { i16, i16, i16, i16, i16, i16, i8, i32, i16, i8, i16, i16, i16, i8 }
%struct.amdgpu_dpm_thermal = type { %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.amdgpu_irq_src }
%struct.amd_pp_display_configuration = type { i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.single_display_configuration], i32, i32, i8, i32, i32, i8, i32, i32, i32, i32 }
%struct.single_display_configuration = type { i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32 }
%struct.i2c_adapter = type { ptr, i32, ptr, ptr, ptr, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i32, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr }
%struct.rt_mutex = type { %struct.rt_mutex_base, %struct.lockdep_map }
%struct.rt_mutex_base = type { %struct.raw_spinlock, %struct.rb_root_cached, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.amdgpu_nbio = type { ptr, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, ptr, ptr, ptr }
%struct.amdgpu_hdp = type { ptr, ptr, ptr }
%struct.amdgpu_smuio = type { ptr }
%struct.amdgpu_mmhub = type { ptr, ptr, ptr }
%struct.amdgpu_gfxhub = type { ptr }
%struct.amdgpu_gfx = type { %struct.mutex, %struct.amdgpu_gfx_config, %struct.amdgpu_rlc, %struct.amdgpu_pfp, %struct.amdgpu_ce, %struct.amdgpu_me, %struct.amdgpu_mec, %struct.amdgpu_kiq, %struct.amdgpu_scratch, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_ring], i32, [8 x %struct.amdgpu_ring], i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.sq_work, i32, i32, %struct.amdgpu_cu_info, ptr, i32, i32, i8, %struct.mutex, i32, %struct.delayed_work, %struct.mutex, [4 x i32], ptr, ptr }
%struct.amdgpu_gfx_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x i32], [16 x i32], %struct.gb_addr_config, [4 x [2 x %struct.amdgpu_rb_config]], i32, i32, i32, i32, i32, i64 }
%struct.gb_addr_config = type { i16, i8, i8, i8, i8, i8, i8 }
%struct.amdgpu_rb_config = type { i32, i32, i32, i32 }
%struct.amdgpu_rlc = type { ptr, i64, ptr, ptr, i32, ptr, i64, ptr, ptr, i32, ptr, i64, ptr, i32, i8, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, ptr, i64, ptr, ptr, i64, ptr }
%struct.amdgpu_pfp = type { ptr, i64, ptr }
%struct.amdgpu_ce = type { ptr, i64, ptr }
%struct.amdgpu_me = type { ptr, i64, ptr, i32, i32, i32, [2 x ptr], [4 x i32] }
%struct.amdgpu_mec = type { ptr, i64, ptr, i64, i32, i32, i32, [9 x ptr], [4 x i32] }
%struct.amdgpu_kiq = type { i64, ptr, %struct.spinlock, %struct.amdgpu_ring, %struct.amdgpu_irq_src, ptr }
%struct.amdgpu_ring = type { ptr, ptr, %struct.amdgpu_fence_driver, %struct.drm_gpu_scheduler, ptr, ptr, i32, i64, i64, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, ptr, i64, ptr, i64, i32, i8, i8, i32, i32, i64, [16 x i8], i32, i32, i64, ptr, i32, i64, ptr, i32, ptr, i8, i8, i32 }
%struct.amdgpu_fence_driver = type { i64, ptr, i32, %struct.atomic_t, i8, ptr, i32, %struct.timer_list, i32, %struct.spinlock, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.drm_gpu_scheduler = type { ptr, i32, i32, ptr, [4 x %struct.drm_sched_rq], %struct.wait_queue_head, %struct.wait_queue_head, %struct.atomic_t, %struct.atomic64_t, ptr, %struct.delayed_work, ptr, %struct.list_head, %struct.spinlock, i32, ptr, %struct.atomic_t, i8, i8 }
%struct.drm_sched_rq = type { %struct.spinlock, ptr, %struct.list_head, ptr }
%struct.amdgpu_scratch = type { i32, i32, i32 }
%struct.sq_work = type { %struct.work_struct, i32 }
%struct.amdgpu_cu_info = type { i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i32]], [4 x [4 x i32]] }
%struct.amdgpu_sdma = type { [8 x %struct.amdgpu_sdma_instance], %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i32, i32, i8, ptr, ptr }
%struct.amdgpu_sdma_instance = type { ptr, i32, i32, %struct.amdgpu_ring, %struct.amdgpu_ring, i8 }
%struct.amdgpu_uvd = type { ptr, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_uvd_inst], [40 x ptr], [40 x %struct.atomic_t], %struct.drm_sched_entity, %struct.delayed_work, i32, i32, i32, ptr }
%struct.amdgpu_uvd_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [2 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32 }
%struct.amdgpu_vce = type { ptr, i64, ptr, ptr, i32, i32, [16 x %struct.atomic_t], [16 x ptr], [16 x i32], %struct.delayed_work, %struct.mutex, ptr, [3 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32, %struct.drm_sched_entity, i32, i32 }
%struct.amdgpu_vcn = type { i32, %struct.delayed_work, ptr, i32, i32, i8, i8, [2 x %struct.amdgpu_vcn_inst], [2 x i8], %struct.amdgpu_vcn_reg, %struct.mutex, %struct.mutex, %struct.atomic_t, i32, ptr }
%struct.amdgpu_vcn_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [3 x %struct.amdgpu_ring], %struct.atomic_t, %struct.amdgpu_irq_src, %struct.amdgpu_vcn_reg, ptr, %struct.dpg_pause_state, ptr, i64, ptr, %struct.atomic_t, ptr, i64 }
%struct.dpg_pause_state = type { i32, i32 }
%struct.amdgpu_vcn_reg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_jpeg = type { i8, [2 x %struct.amdgpu_jpeg_inst], %struct.amdgpu_jpeg_reg, i32, %struct.delayed_work, i32, %struct.mutex, %struct.atomic_t }
%struct.amdgpu_jpeg_inst = type { %struct.amdgpu_ring, %struct.amdgpu_irq_src, %struct.amdgpu_jpeg_reg }
%struct.amdgpu_jpeg_reg = type { i32 }
%struct.amdgpu_firmware = type { [35 x %struct.amdgpu_firmware_info], i32, ptr, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i64 }
%struct.amdgpu_firmware_info = type { i32, ptr, i64, ptr, i32, i32, i32 }
%struct.psp_context = type { ptr, %struct.psp_ring, ptr, ptr, ptr, i64, ptr, ptr, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, ptr, i64, ptr, ptr, ptr, i64, ptr, ptr, i64, ptr, %struct.atomic_t, i8, i8, ptr, i32, %struct.ta_context, %struct.psp_xgmi_context, %struct.psp_ras_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.mutex, %struct.psp_memory_training_context, i32 }
%struct.psp_ring = type { i32, ptr, i64, ptr, i32, i32 }
%struct.psp_bin_desc = type { i32, i32, i32, ptr }
%struct.ta_context = type { i8, i32, %struct.ta_mem_context, %struct.psp_bin_desc, i32 }
%struct.ta_mem_context = type { ptr, i64, ptr, i32 }
%struct.psp_xgmi_context = type { %struct.ta_context, %struct.psp_xgmi_topology_info, i8 }
%struct.psp_xgmi_topology_info = type { i32, [64 x %struct.psp_xgmi_node_info] }
%struct.psp_xgmi_node_info = type { i64, i8, i8, i32, i8 }
%struct.psp_ras_context = type { %struct.ta_context, ptr }
%struct.ta_cp_context = type { %struct.ta_context, %struct.mutex }
%struct.psp_memory_training_context = type { i64, ptr, i64, i64, ptr, i32, i32, i8 }
%struct.amdgpu_gds = type { i32, i32, i32, i32 }
%struct.amdgpu_kfd_dev = type { ptr, i64, i8 }
%struct.amdgpu_umc = type { i32, i32, i32, i32, ptr, ptr, ptr, ptr }
%struct.amdgpu_display_manager = type { ptr, ptr, ptr, [5 x ptr], [5 x i8], ptr, ptr, ptr, i64, ptr, i32, ptr, ptr, ptr, i16, %struct.drm_private_obj, %struct.mutex, %struct.mutex, ptr, i8, [99 x %struct.list_head], [99 x %struct.list_head], [7 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [1 x %struct.common_irq_params], [1 x %struct.common_irq_params], %struct.spinlock, [2 x ptr], [2 x ptr], i8, [2 x %struct.amdgpu_dm_backlight_caps], ptr, ptr, ptr, ptr, %struct.dm_compressor_info, ptr, i32, ptr, ptr, [6 x %struct.amdgpu_encoder], i8, i8, i8, %struct.list_head, %struct.completion, ptr, [2 x i32] }
%struct.drm_private_obj = type { %struct.list_head, %struct.drm_modeset_lock, ptr, ptr }
%struct.common_irq_params = type { ptr, i32, %struct.atomic64_t }
%struct.amdgpu_dm_backlight_caps = type { ptr, i32, i32, i32, i32, i8, i8 }
%struct.dm_compressor_info = type { ptr, ptr, i64 }
%struct.amdgpu_encoder = type { %struct.drm_encoder, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.drm_display_mode, ptr, i32, i8, i16 }
%struct.drm_encoder = type { ptr, %struct.list_head, %struct.drm_mode_object, ptr, i32, i32, i32, i32, ptr, %struct.list_head, ptr, ptr }
%struct.drm_mode_object = type { i32, i32, ptr, %struct.kref, ptr }
%struct.drm_display_mode = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %struct.list_head, [32 x i8], i32, i32 }
%struct.amdgpu_mes = type { ptr, i32, i32, i32, i64, i64, %struct.amdgpu_ring, ptr, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i32, [8 x i32], [2 x i32], [2 x i32], [5 x i32], i32, i64, ptr, i32, i64, ptr, ptr }
%struct.amdgpu_df = type { %struct.amdgpu_df_hash_status, ptr }
%struct.amdgpu_df_hash_status = type { i8, i8, i8 }
%struct.amdgpu_mca = type { ptr, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras }
%struct.amdgpu_mca_ras = type { ptr, ptr }
%struct.amdgpu_ip_block = type { %struct.amdgpu_ip_block_status, ptr }
%struct.amdgpu_ip_block_status = type { i8, i8, i8, i8, i8 }
%struct.atomic64_t = type { i64 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.amdgpu_virt = type { i32, ptr, ptr, i8, i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.work_struct, %struct.amdgpu_mm_table, ptr, %struct.amdgpu_vf_error_buffer, %struct.amdgpu_virt_fw_reserve, i32, i32, i32, i8, ptr, i8, i32, %struct.delayed_work, i32, i8, i32, i32, i32, i32 }
%struct.amdgpu_mm_table = type { ptr, ptr, i64 }
%struct.amdgpu_vf_error_buffer = type { %struct.mutex, i32, i32, [16 x i16], [16 x i16], [16 x i64] }
%struct.amdgpu_virt_fw_reserve = type { ptr, ptr, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.amdgpu_doorbell_index = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, %union.anon.108, i32, i32, i32, i32 }
%union.anon.108 = type { %struct.anon.110 }
%struct.anon.110 = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.list_head = type { ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_job = type { %struct.drm_sched_job, ptr, %struct.amdgpu_sync, %struct.amdgpu_sync, ptr, %struct.dma_fence, ptr, i32, i32, i32, i8, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32 }
%struct.drm_sched_job = type { %struct.spsc_node, %struct.list_head, ptr, ptr, %union.anon.92, i64, %struct.atomic_t, i32, ptr, %struct.dma_fence_cb, %struct.xarray, i32 }
%struct.spsc_node = type { ptr }
%union.anon.92 = type { %struct.irq_work }
%struct.irq_work = type { %struct.__call_single_node, ptr, %struct.rcuwait }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.rcuwait = type { ptr }
%struct.dma_fence = type { ptr, ptr, %union.anon.85, i64, i64, i32, %struct.kref, i32 }
%union.anon.85 = type { i64 }
%struct.amdgpu_ib = type { ptr, i32, i64, ptr, i32 }
%struct.v10_de_ib_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_gmc_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.nbio_hdp_flush_reg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_nbio_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.v10_ce_ib_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_iv_entry = type { ptr, i32, i32, i32, i32, i32, i64, i32, i32, i32, [4 x i32], ptr }
%struct.firmware = type { i32, ptr, ptr }
%struct.common_firmware_header = type { i32, i32, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.sdma_firmware_header_v1_0 = type { %struct.common_firmware_header, i32, i32, i32, i32 }
%struct.gfx_firmware_header_v1_0 = type { %struct.common_firmware_header, i32, i32, i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.78, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.78 = type { ptr }
%struct.rlc_firmware_header_v2_0 = type { %struct.common_firmware_header, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.rlc_firmware_header_v2_1 = type { %struct.rlc_firmware_header_v2_0, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.rlc_firmware_header_v2_2 = type { %struct.rlc_firmware_header_v2_1, i32, i32, i32, i32 }
%struct.amdgpu_bo = type { i32, i32, [3 x %struct.ttm_place], %struct.ttm_placement, %struct.ttm_buffer_object, %struct.ttm_bo_kmap_obj, i64, ptr, ptr, %struct.mmu_interval_notifier, ptr }
%struct.ttm_place = type { i32, i32, i32, i32 }
%struct.ttm_placement = type { i32, ptr, i32, ptr }
%struct.ttm_buffer_object = type { %struct.drm_gem_object, ptr, i32, i32, ptr, %struct.kref, ptr, ptr, i8, %struct.list_head, %struct.list_head, ptr, i32, i32, ptr }
%struct.drm_gem_object = type { %struct.kref, i32, ptr, ptr, %struct.drm_vma_offset_node, i32, i32, ptr, ptr, ptr, %struct.dma_resv, ptr }
%struct.drm_vma_offset_node = type { %struct.rwlock_t, %struct.drm_mm_node, %struct.rb_root, ptr }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.dma_resv = type { %struct.ww_mutex, %struct.seqcount_ww_mutex, ptr, ptr }
%struct.seqcount_ww_mutex = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ttm_bo_kmap_obj = type { ptr, ptr, i32, ptr }
%struct.mmu_interval_notifier = type { %struct.interval_tree_node, ptr, ptr, %struct.hlist_node, i32 }
%struct.interval_tree_node = type { %struct.rb_node, i32, i32, i32 }
%struct._RLC_TABLE_OF_CONTENT = type { %union.anon.114, %union.anon.116, %union.anon.118, %union.anon.120 }
%union.anon.114 = type { i32 }
%union.anon.116 = type { i32 }
%union.anon.118 = type { i32 }
%union.anon.120 = type { i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.v10_gfx_mqd = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.v10_compute_mqd = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@__UNIQUE_ID_firmware343 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/navi10_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware344 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi10_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware345 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/navi10_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware346 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi10_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware347 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/navi10_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware348 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi10_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware349 = internal constant [41 x i8] c"amdgpu.firmware=amdgpu/navi14_ce_wks.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware350 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/navi14_pfp_wks.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware351 = internal constant [41 x i8] c"amdgpu.firmware=amdgpu/navi14_me_wks.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware352 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/navi14_mec_wks.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware353 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/navi14_mec2_wks.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware354 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/navi14_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware355 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi14_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware356 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/navi14_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware357 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi14_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware358 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/navi14_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware359 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi14_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware360 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/navi12_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware361 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi12_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware362 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/navi12_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware363 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi12_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware364 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/navi12_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware365 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/navi12_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware366 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/sienna_cichlid_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware367 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/sienna_cichlid_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware368 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/sienna_cichlid_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware369 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/sienna_cichlid_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware370 = internal constant [47 x i8] c"amdgpu.firmware=amdgpu/sienna_cichlid_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware371 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/sienna_cichlid_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware372 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/navy_flounder_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware373 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/navy_flounder_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware374 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/navy_flounder_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware375 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/navy_flounder_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware376 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/navy_flounder_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware377 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/navy_flounder_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware378 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vangogh_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware379 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/vangogh_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware380 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vangogh_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware381 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/vangogh_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware382 = internal constant [40 x i8] c"amdgpu.firmware=amdgpu/vangogh_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware383 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/vangogh_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware384 = internal constant [47 x i8] c"amdgpu.firmware=amdgpu/dimgrey_cavefish_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware385 = internal constant [48 x i8] c"amdgpu.firmware=amdgpu/dimgrey_cavefish_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware386 = internal constant [47 x i8] c"amdgpu.firmware=amdgpu/dimgrey_cavefish_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware387 = internal constant [48 x i8] c"amdgpu.firmware=amdgpu/dimgrey_cavefish_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware388 = internal constant [49 x i8] c"amdgpu.firmware=amdgpu/dimgrey_cavefish_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware389 = internal constant [48 x i8] c"amdgpu.firmware=amdgpu/dimgrey_cavefish_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware390 = internal constant [41 x i8] c"amdgpu.firmware=amdgpu/beige_goby_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware391 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/beige_goby_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware392 = internal constant [41 x i8] c"amdgpu.firmware=amdgpu/beige_goby_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware393 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/beige_goby_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware394 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/beige_goby_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware395 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/beige_goby_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware396 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/yellow_carp_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware397 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/yellow_carp_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware398 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/yellow_carp_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware399 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/yellow_carp_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware400 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/yellow_carp_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware401 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/yellow_carp_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware402 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware403 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware404 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware405 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware406 = internal constant [47 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware407 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware408 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish2_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware409 = internal constant [47 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish2_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware410 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish2_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware411 = internal constant [47 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish2_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware412 = internal constant [48 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish2_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware413 = internal constant [47 x i8] c"amdgpu.firmware=amdgpu/cyan_skillfish2_rlc.bin\00", section ".modinfo", align 1
@gfx_v10_0_ip_funcs = internal constant { %struct.amd_ip_funcs, [44 x i8] } { %struct.amd_ip_funcs { ptr @.str, ptr @gfx_v10_0_early_init, ptr @gfx_v10_0_late_init, ptr @gfx_v10_0_sw_init, ptr @gfx_v10_0_sw_fini, ptr null, ptr @gfx_v10_0_hw_init, ptr @gfx_v10_0_hw_fini, ptr null, ptr @gfx_v10_0_suspend, ptr @gfx_v10_0_resume, ptr @gfx_v10_0_is_idle, ptr @gfx_v10_0_wait_for_idle, ptr null, ptr null, ptr @gfx_v10_0_soft_reset, ptr null, ptr @gfx_v10_0_set_clockgating_state, ptr @gfx_v10_0_set_powergating_state, ptr @gfx_v10_0_get_clockgating_state, ptr null }, [44 x i8] zeroinitializer }, align 32
@gfx_v10_0_ip_block = dso_local constant { %struct.amdgpu_ip_block_version, [44 x i8] } { %struct.amdgpu_ip_block_version { i32 6, i32 10, i32 0, i32 0, ptr @gfx_v10_0_ip_funcs }, [44 x i8] zeroinitializer }, align 32
@.str = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"gfx_v10_0\00", [22 x i8] zeroinitializer }, align 32
@gfx_v10_0_kiq_pm4_funcs = internal constant { %struct.kiq_pm4_funcs, [56 x i8] } { %struct.kiq_pm4_funcs { ptr @gfx10_kiq_set_resources, ptr @gfx10_kiq_map_queues, ptr @gfx10_kiq_unmap_queues, ptr @gfx10_kiq_query_status, ptr @gfx10_kiq_invalidate_tlbs, i32 8, i32 7, i32 6, i32 7, i32 2 }, [56 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"amdgpu: writing more dwords to the ring than expected!\0A\00", [40 x i8] zeroinitializer }, align 32
@gfx_v10_0_ring_funcs_kiq = internal constant { %struct.amdgpu_ring_funcs, [32 x i8] } { %struct.amdgpu_ring_funcs { i32 9, i32 255, i32 -61440, i8 1, i8 0, i32 0, i32 0, ptr @gfx_v10_0_ring_get_rptr_compute, ptr @gfx_v10_0_ring_get_wptr_compute, ptr @gfx_v10_0_ring_set_wptr_compute, ptr null, ptr null, i32 116, i32 7, ptr @gfx_v10_0_ring_emit_ib_compute, ptr @gfx_v10_0_ring_emit_fence_kiq, ptr null, ptr null, ptr null, ptr null, ptr @gfx_v10_0_ring_test_ring, ptr @gfx_v10_0_ring_test_ib, ptr @amdgpu_ring_insert_nop, ptr null, ptr null, ptr @amdgpu_ring_generic_pad_ib, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @gfx_v10_0_ring_emit_rreg, ptr @gfx_v10_0_ring_emit_wreg, ptr @gfx_v10_0_ring_emit_reg_wait, ptr @gfx_v10_0_ring_emit_reg_write_reg_wait, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@gfx_v10_0_ring_funcs_gfx = internal constant { %struct.amdgpu_ring_funcs, [32 x i8] } { %struct.amdgpu_ring_funcs { i32 0, i32 255, i32 -61440, i8 1, i8 0, i32 0, i32 0, ptr @gfx_v10_0_ring_get_rptr_gfx, ptr @gfx_v10_0_ring_get_wptr_gfx, ptr @gfx_v10_0_ring_set_wptr_gfx, ptr null, ptr null, i32 192, i32 4, ptr @gfx_v10_0_ring_emit_ib_gfx, ptr @gfx_v10_0_ring_emit_fence, ptr @gfx_v10_0_ring_emit_pipeline_sync, ptr @gfx_v10_0_ring_emit_vm_flush, ptr @gfx_v10_0_ring_emit_hdp_flush, ptr @gfx_v10_0_ring_emit_gds_switch, ptr @gfx_v10_0_ring_test_ring, ptr @gfx_v10_0_ring_test_ib, ptr @amdgpu_ring_insert_nop, ptr null, ptr null, ptr @amdgpu_ring_generic_pad_ib, ptr @gfx_v10_0_ring_emit_init_cond_exec, ptr @gfx_v10_0_ring_emit_patch_cond_exec, ptr null, ptr null, ptr @gfx_v10_0_ring_emit_sb, ptr @gfx_v10_0_ring_emit_cntxcntl, ptr null, ptr @gfx_v10_0_ring_emit_wreg, ptr @gfx_v10_0_ring_emit_reg_wait, ptr @gfx_v10_0_ring_emit_reg_write_reg_wait, ptr @gfx_v10_0_ring_emit_frame_cntl, ptr @gfx_v10_0_ring_soft_recovery, ptr @gfx_v10_0_ring_preempt_ib, ptr @gfx_v10_0_emit_mem_sync, ptr null }, [32 x i8] zeroinitializer }, align 32
@gfx_v10_0_ring_funcs_compute = internal constant { %struct.amdgpu_ring_funcs, [32 x i8] } { %struct.amdgpu_ring_funcs { i32 1, i32 255, i32 -61440, i8 1, i8 0, i32 0, i32 0, ptr @gfx_v10_0_ring_get_rptr_compute, ptr @gfx_v10_0_ring_get_wptr_compute, ptr @gfx_v10_0_ring_set_wptr_compute, ptr null, ptr null, i32 124, i32 7, ptr @gfx_v10_0_ring_emit_ib_compute, ptr @gfx_v10_0_ring_emit_fence, ptr @gfx_v10_0_ring_emit_pipeline_sync, ptr @gfx_v10_0_ring_emit_vm_flush, ptr @gfx_v10_0_ring_emit_hdp_flush, ptr @gfx_v10_0_ring_emit_gds_switch, ptr @gfx_v10_0_ring_test_ring, ptr @gfx_v10_0_ring_test_ib, ptr @amdgpu_ring_insert_nop, ptr null, ptr null, ptr @amdgpu_ring_generic_pad_ib, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @gfx_v10_0_ring_emit_wreg, ptr @gfx_v10_0_ring_emit_reg_wait, ptr @gfx_v10_0_ring_emit_reg_write_reg_wait, ptr null, ptr null, ptr null, ptr @gfx_v10_0_emit_mem_sync, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"amdgpu: cp failed to get scratch reg (%d).\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"amdgpu: cp failed to lock ring %d (%d).\0A\00", [55 x i8] zeroinitializer }, align 32
@amdgpu_emu_mode = external dso_local local_unnamed_addr global i32, align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@amdgpu_mcbp = external dso_local local_unnamed_addr global i32, align 4
@.str.4 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"ring %d failed to preempt ib\0A\00", [34 x i8] zeroinitializer }, align 32
@gfx_v10_0_eop_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v10_0_set_eop_interrupt_state, ptr @gfx_v10_0_eop_irq }, [24 x i8] zeroinitializer }, align 32
@gfx_v10_0_kiq_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v10_0_kiq_set_interrupt_state, ptr @gfx_v10_0_kiq_irq }, [24 x i8] zeroinitializer }, align 32
@gfx_v10_0_priv_reg_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v10_0_set_priv_reg_fault_state, ptr @gfx_v10_0_priv_reg_irq }, [24 x i8] zeroinitializer }, align 32
@gfx_v10_0_priv_inst_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v10_0_set_priv_inst_fault_state, ptr @gfx_v10_0_priv_inst_irq }, [24 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"invalid pipe %d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"invalid me %d\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"IH: CP EOP\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"IH: CPC GENERIC2_INT, me:%d, pipe:%d, queue:%d\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Illegal register access in command stream\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Illegal instruction in command stream\0A\00", [57 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_funcs = internal constant { %struct.amdgpu_rlc_funcs, [36 x i8] } { %struct.amdgpu_rlc_funcs { ptr @gfx_v10_0_is_rlc_enabled, ptr @gfx_v10_0_set_safe_mode, ptr @gfx_v10_0_unset_safe_mode, ptr @gfx_v10_0_rlc_init, ptr @gfx_v10_0_get_csb_size, ptr @gfx_v10_0_get_csb_buffer, ptr null, ptr @gfx_v10_0_rlc_resume, ptr @gfx_v10_0_rlc_stop, ptr @gfx_v10_0_rlc_reset, ptr @gfx_v10_0_rlc_start, ptr @gfx_v10_0_update_spm_vmid, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_funcs_sriov = internal constant { %struct.amdgpu_rlc_funcs, [36 x i8] } { %struct.amdgpu_rlc_funcs { ptr @gfx_v10_0_is_rlc_enabled, ptr @gfx_v10_0_set_safe_mode, ptr @gfx_v10_0_unset_safe_mode, ptr @gfx_v10_0_rlc_init, ptr @gfx_v10_0_get_csb_size, ptr @gfx_v10_0_get_csb_buffer, ptr null, ptr @gfx_v10_0_rlc_resume, ptr @gfx_v10_0_rlc_stop, ptr @gfx_v10_0_rlc_reset, ptr @gfx_v10_0_rlc_start, ptr @gfx_v10_0_update_spm_vmid, ptr @gfx_v10_sriov_wreg, ptr @gfx_v10_sriov_rreg, ptr @gfx_v10_0_is_rlcg_access_range }, [36 x i8] zeroinitializer }, align 32
@gfx10_cs_data = internal constant { [2 x %struct.cs_section_def], [16 x i8] } { [2 x %struct.cs_section_def] [%struct.cs_section_def { ptr @gfx10_SECT_CONTEXT_defs, i32 1 }, %struct.cs_section_def zeroinitializer], [16 x i8] zeroinitializer }, align 32
@gfx10_SECT_CONTEXT_defs = internal constant { [9 x %struct.cs_extent_def], [52 x i8] } { [9 x %struct.cs_extent_def] [%struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_1, i32 40960, i32 215 }, %struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_2, i32 41176, i32 272 }, %struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_3, i32 41461, i32 4 }, %struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_4, i32 41471, i32 158 }, %struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_5, i32 41632, i32 2 }, %struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_6, i32 41635, i32 1 }, %struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_7, i32 41637, i32 66 }, %struct.cs_extent_def { ptr @gfx10_SECT_CONTEXT_def_8, i32 41717, i32 203 }, %struct.cs_extent_def zeroinitializer], [52 x i8] zeroinitializer }, align 32
@gfx10_SECT_CONTEXT_def_1 = internal constant { [215 x i32], [196 x i8] } { [215 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1073758208, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1376341, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -2147483648, i32 1073758208, i32 65535, i32 0, i32 1073758208, i32 0, i32 1073758208, i32 0, i32 1073758208, i32 0, i32 1073758208, i32 -1432769878, i32 0, i32 -1, i32 -1, i32 -2147483648, i32 1073758208, i32 0, i32 0, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 0, i32 0], [196 x i8] zeroinitializer }, align 32
@gfx10_SECT_CONTEXT_def_3 = internal constant { [4 x i32], [16 x i8] } zeroinitializer, align 32
@gfx10_SECT_CONTEXT_def_4 = internal constant { [158 x i32], [136 x i8] } { [158 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 589824, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 256, i32 128, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0], [136 x i8] zeroinitializer }, align 32
@gfx10_SECT_CONTEXT_def_5 = internal constant { [2 x i32], [24 x i8] } zeroinitializer, align 32
@gfx10_SECT_CONTEXT_def_6 = internal constant { [1 x i32], [28 x i8] } zeroinitializer, align 32
@gfx10_SECT_CONTEXT_def_2 = internal constant { <{ [223 x i32], [49 x i32] }>, [256 x i8] } { <{ [223 x i32], [49 x i32] }> <{ [223 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 5570645, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16777216, i32 16777216, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2], [49 x i32] zeroinitializer }>, [256 x i8] zeroinitializer }, align 32
@gfx10_SECT_CONTEXT_def_7 = internal constant { <{ i32, i32, i32, i32, i32, i32, [60 x i32] }>, [88 x i8] } { <{ i32, i32, i32, i32, i32, i32, [60 x i32] }> <{ i32 0, i32 0, i32 0, i32 0, i32 0, i32 255, [60 x i32] zeroinitializer }>, [88 x i8] zeroinitializer }, align 32
@gfx10_SECT_CONTEXT_def_8 = internal constant { <{ [35 x i32], [168 x i32] }>, [212 x i8] } { <{ [35 x i32], [168 x i32] }> <{ [35 x i32] [i32 0, i32 0, i32 4096, i32 0, i32 5, i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i32 0, i32 3, i32 0, i32 1048576, i32 0, i32 0, i32 30, i32 32], [168 x i32] zeroinitializer }>, [212 x i8] zeroinitializer }, align 32
@gfx_v10_0_wait_for_rlc_autoload_complete._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.15, ptr @.str.16, i32 5895, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"amdgpu: rlc autoload: gc ucode autoload timeout\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"gfx_v10_0_wait_for_rlc_autoload_complete\00", [55 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\00", [57 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@gfx_v10_0_wait_for_rlc_autoload_complete._entry_ptr = internal global ptr @gfx_v10_0_wait_for_rlc_autoload_complete._entry, section ".printk_index", align 4
@gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str.16, i32 5751, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"amdgpu: failed to invalidate instruction cache\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"gfx_v10_0_rlc_backdoor_autoload_config_me_cache\00", [48 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry_ptr = internal global ptr @gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry, section ".printk_index", align 4
@rlc_autoload_info = internal global { [38 x %struct.anon.113], [120 x i8] } zeroinitializer, align 32
@gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.21, ptr @.str.16, i32 5788, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"gfx_v10_0_rlc_backdoor_autoload_config_ce_cache\00", [48 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry_ptr = internal global ptr @gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry, section ".printk_index", align 4
@gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.22, ptr @.str.16, i32 5825, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache\00", [47 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry_ptr = internal global ptr @gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry, section ".printk_index", align 4
@gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.23, ptr @.str.16, i32 5862, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"gfx_v10_0_rlc_backdoor_autoload_config_mec_cache\00", [47 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry_ptr = internal global ptr @gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry, section ".printk_index", align 4
@.str.24 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Neither COLD_BOOT_EXIT nor VDDGFX_EXIT is set\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"RLC ROM should halt itself\0A\00", [36 x i8] zeroinitializer }, align 32
@amdgpu_pp_feature_mask = external dso_local local_unnamed_addr global i32, align 4
@.str.26 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Not program register by RLCG\0A\00", [34 x i8] zeroinitializer }, align 32
@gfx_v10_rlcg_rw.scratch_reg0 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v10_rlcg_rw.scratch_reg1 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v10_rlcg_rw.scratch_reg2 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v10_rlcg_rw.scratch_reg3 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v10_rlcg_rw.spare_int = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v10_rlcg_rw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.28, ptr @.str.16, i32 1556, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013amdgpu: The vfgate is disabled, program reg:0x%05x failed!\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"gfx_v10_rlcg_rw\00", [16 x i8] zeroinitializer }, align 32
@gfx_v10_rlcg_rw._entry_ptr = internal global ptr @gfx_v10_rlcg_rw._entry, section ".printk_index", align 4
@gfx_v10_rlcg_rw._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.28, ptr @.str.16, i32 1558, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013amdgpu: Wrong operation type, program reg:0x%05x failed!\0A\00", [36 x i8] zeroinitializer }, align 32
@gfx_v10_rlcg_rw._entry_ptr.31 = internal global ptr @gfx_v10_rlcg_rw._entry.29, section ".printk_index", align 4
@gfx_v10_rlcg_rw._entry.32 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.28, ptr @.str.16, i32 1560, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013amdgpu: The register is not in range, program reg:0x%05x failed!\0A\00", [60 x i8] zeroinitializer }, align 32
@gfx_v10_rlcg_rw._entry_ptr.34 = internal global ptr @gfx_v10_rlcg_rw._entry.32, section ".printk_index", align 4
@gfx_v10_rlcg_rw._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.28, ptr @.str.16, i32 1562, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013amdgpu: Unknown error type, program reg:0x%05x failed!\0A\00", [38 x i8] zeroinitializer }, align 32
@gfx_v10_rlcg_rw._entry_ptr.37 = internal global ptr @gfx_v10_rlcg_rw._entry.35, section ".printk_index", align 4
@gfx_v10_rlcg_rw._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.28, ptr @.str.16, i32 1564, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013amdgpu: timeout: rlcg program reg:0x%05x failed!\0A\00", [44 x i8] zeroinitializer }, align 32
@gfx_v10_rlcg_rw._entry_ptr.40 = internal global ptr @gfx_v10_rlcg_rw._entry.38, section ".printk_index", align 4
@.str.41 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to init rlc BOs!\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to init MEC BOs!\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to init KIQ BOs!\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Failed to load gfx firmware!\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.46 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"navi10\00", [25 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"navi14\00", [25 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"_wks\00", [27 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"navi12\00", [25 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sienna_cichlid\00", [17 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"navy_flounder\00", [18 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"vangogh\00", [24 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"dimgrey_cavefish\00", [47 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"beige_goby\00", [21 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"yellow_carp\00", [20 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"cyan_skillfish2\00", [16 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"cyan_skillfish\00", [17 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"amdgpu/%s_pfp%s.bin\00", [44 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"amdgpu/%s_me%s.bin\00", [45 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"amdgpu/%s_ce%s.bin\00", [45 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu/%s_rlc.bin\00", [46 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"amdgpu/%s_mec%s.bin\00", [44 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"amdgpu/%s_mec2%s.bin\00", [43 x i8] zeroinitializer }, align 32
@gfx_v10_0_init_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str.16, i32 4340, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"amdgpu: gfx10: Failed to load firmware \22%s\22\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"gfx_v10_0_init_microcode\00", [39 x i8] zeroinitializer }, align 32
@gfx_v10_0_init_microcode._entry_ptr = internal global ptr @gfx_v10_0_init_microcode._entry, section ".printk_index", align 4
@gfx_v10_0_check_fw_write_wait.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@gfx_v10_0_check_fw_write_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.68, ptr @.str.16, i32 3992, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014[drm] CP firmware version too old, please update!\00", [44 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"gfx_v10_0_check_fw_write_wait\00", [34 x i8] zeroinitializer }, align 32
@gfx_v10_0_check_fw_write_wait._entry_ptr = internal global ptr @gfx_v10_0_check_fw_write_wait._entry, section ".printk_index", align 4
@gfx_v10_0_mec_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.70, ptr @.str.16, i32 4519, ptr @.str.71, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"amdgpu: (%d) create HDP EOP bo failed\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"gfx_v10_0_mec_init\00", [45 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@gfx_v10_0_mec_init._entry_ptr = internal global ptr @gfx_v10_0_mec_init._entry, section ".printk_index", align 4
@gfx_v10_0_mec_init._entry.72 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.70, ptr @.str.16, i32 4543, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"amdgpu: (%d) failed to create mec fw bo\0A\00", [55 x i8] zeroinitializer }, align 32
@gfx_v10_0_mec_init._entry_ptr.74 = internal global ptr @gfx_v10_0_mec_init._entry.72, section ".printk_index", align 4
@.str.75 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"gfx_%d.%d.%d\00", [19 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"comp_%d.%d.%d\00", [18 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.77, ptr @.str.78, ptr @.str.16, i32 5544, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"amdgpu: (%d) failed to create fw autoload bo\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"gfx_v10_0_rlc_backdoor_autoload_buffer_init\00", [52 x i8] zeroinitializer }, align 32
@gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry_ptr = internal global ptr @gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry, section ".printk_index", align 4
@gfx_v10_0_calc_toc_total_size._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.80, ptr @.str.16, i32 5516, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"amdgpu: failed to parse rlc toc\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"gfx_v10_0_calc_toc_total_size\00", [34 x i8] zeroinitializer }, align 32
@gfx_v10_0_calc_toc_total_size._entry_ptr = internal global ptr @gfx_v10_0_calc_toc_total_size._entry, section ".printk_index", align 4
@gfx_v10_0_parse_rlc_toc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.82, ptr @.str.16, i32 5482, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"amdgpu: (%d) failed to create rlc toc bo\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"gfx_v10_0_parse_rlc_toc\00", [40 x i8] zeroinitializer }, align 32
@gfx_v10_0_parse_rlc_toc._entry_ptr = internal global ptr @gfx_v10_0_parse_rlc_toc._entry, section ".printk_index", align 4
@gfx_v10_0_gfx_funcs = internal constant { %struct.amdgpu_gfx_funcs, [32 x i8] } { %struct.amdgpu_gfx_funcs { ptr @gfx_v10_0_get_gpu_clock_counter, ptr @gfx_v10_0_select_se_sh, ptr @gfx_v10_0_read_wave_data, ptr @gfx_v10_0_read_wave_vgprs, ptr @gfx_v10_0_read_wave_sgprs, ptr @gfx_v10_0_select_me_pipe_q, ptr @gfx_v10_0_init_spm_golden_registers, ptr @gfx_v10_0_update_perfmon_mgcg }, [32 x i8] zeroinitializer }, align 32
@golden_settings_gc_rlc_spm_10_0_nv10 = internal constant { [1052 x %struct.soc15_reg_golden], [6304 x i8] } { [1052 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 -536870912, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 200 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 204 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 208 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 212 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 184 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 188 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 196 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 144 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 148 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 156 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 164 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 168 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 172 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 144 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 144 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 148 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 148 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 164 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 164 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 156 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 156 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 168 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 168 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 172 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 172 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 184 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 184 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 188 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 188 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 196 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 196 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 208 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 208 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 212 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 212 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 200 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 200 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 204 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 204 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 232 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 232 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 236 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 236 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 240 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 240 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 248 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 248 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 252 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 252 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 256 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 256 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 260 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 260 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 224 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 224 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 284 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 284 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 288 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 288 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 292 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 292 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 220 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 220 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 272 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 272 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 276 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 276 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 264 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 264 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 268 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 268 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 296 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 296 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 300 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 300 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 316 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 316 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 308 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 308 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 324 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 324 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 336 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 336 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 340 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 340 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 328 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 328 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 332 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 332 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 344 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 344 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 348 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 348 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 360 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 360 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 364 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 364 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 356 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 356 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 372 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 372 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 384 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 384 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 388 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 388 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 376 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 376 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 380 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 380 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 396 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 396 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 408 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 408 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 412 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 412 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 400 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 400 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 404 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 404 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 31 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 31 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15500, i32 255, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15501, i32 255, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15502, i32 255, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15502, i32 255, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15503, i32 255, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15503, i32 255, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15499, i32 255, i32 51 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 -1, i32 -536870912 }], [6304 x i8] zeroinitializer }, align 32
@golden_settings_gc_rlc_spm_10_1_nv14 = internal constant { [620 x %struct.soc15_reg_golden], [3712 x i8] } { [620 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 -536870912, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 30 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 30 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 30 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 30 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 30 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 30 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 144 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 148 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 164 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 156 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 168 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 172 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 184 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 188 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 196 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 208 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 212 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 200 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 204 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 220 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 232 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 236 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 224 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 228 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 256 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 260 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 264 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 268 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 272 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 276 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 284 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 248 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 308 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 316 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 296 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 300 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 288 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 292 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 240 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 324 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 336 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 340 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 328 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 332 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 344 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 348 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 360 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 364 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 356 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 372 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 384 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 388 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 376 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 380 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 396 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 408 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 412 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 400 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 404 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 416 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 420 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 432 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 436 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 424 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 428 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 440 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 444 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 456 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 460 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 448 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 452 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15500, i32 255, i32 38 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15501, i32 255, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15502, i32 255, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15502, i32 255, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15503, i32 255, i32 31 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15503, i32 255, i32 37 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15499, i32 255, i32 59 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 -1, i32 -536870912 }], [3712 x i8] zeroinitializer }, align 32
@golden_settings_gc_rlc_spm_10_1_2_nv12 = internal constant { [1052 x %struct.soc15_reg_golden], [6304 x i8] } { [1052 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 -536870912, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 200 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 204 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 208 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 212 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 184 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 188 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 196 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 144 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 2 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 148 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 156 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 164 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 168 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 172 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 8 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 28 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 36 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 40 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 56 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 60 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 24 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 80 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 84 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 88 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 92 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 72 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 76 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 64 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 26 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 96 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 100 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 116 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 108 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 120 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 124 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 136 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 140 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 128 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 132 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 144 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 144 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 148 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 148 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 164 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 164 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 156 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 156 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 168 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 168 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 172 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 172 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 184 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 184 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 188 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 188 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 196 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 196 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 208 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 208 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 212 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 212 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 200 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 200 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 204 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 204 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 232 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 232 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 236 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 236 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 22 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 240 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 240 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 248 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 248 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 252 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 252 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 256 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 256 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 19 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 260 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 260 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 224 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 224 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 284 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 284 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 288 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 288 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 292 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 292 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 220 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 220 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 272 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 272 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 276 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 276 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 20 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 264 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 264 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 268 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 268 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 27 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 296 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 296 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 300 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 300 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 316 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 316 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 18 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 308 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 308 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 15 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 324 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 324 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 336 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 336 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 340 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 340 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 328 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 328 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 332 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 332 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 7 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 344 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 344 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 348 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 348 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 360 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 360 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 10 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 364 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 364 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 9 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 356 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 356 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 372 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 372 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 384 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 384 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 388 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 388 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 376 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 376 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 380 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 380 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 396 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 396 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 5 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 408 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 408 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 12 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 412 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 412 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 400 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 400 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 14 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 404 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 404 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 48 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 52 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 17 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 29 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 31 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15506, i32 -1, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15507, i32 -1, i32 31 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15504, i32 -1, i32 44 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15505, i32 -1, i32 11 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15500, i32 255, i32 31 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15501, i32 255, i32 34 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15502, i32 255, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15502, i32 255, i32 6 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15503, i32 255, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 65536 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15503, i32 255, i32 21 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 16777215, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 15499, i32 255, i32 53 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 -1, i32 -536870912 }], [6304 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_1 = internal constant { [40 x %struct.soc15_reg_golden], [224 x i8] } { [40 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5154, i32 -1, i32 4194324 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20657, i32 -50360321, i32 -134217472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20608, i32 -855638016, i32 218104064 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20620, i32 1610616816, i32 1610612992 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20621, i32 1073741824, i32 1073742080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20612, i32 -28673, i32 -32512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20614, i32 -16805889, i32 -16809728 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11664, i32 -1, i32 -454761244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11668, i32 2, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8023, i32 2047, i32 1535 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5036, i32 536870912, i32 536870912 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5037, i32 -1, i32 1056 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 512, i32 512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 126877696, i32 76546048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5074, i32 65535, i32 63 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5050, i32 -1, i32 59113988 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5507, i32 535887871, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4100, i32 2047, i32 510 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11536, i32 -1, i32 -454761244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11813, i32 2004318071, i32 271716402 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11814, i32 2004318071, i32 36766257 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20652, i32 268435456, i32 268435712 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11777, i32 -1, i32 335675439 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -24577, i32 4488 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4252, i32 1073741823, i32 134217737 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4253, i32 4194304, i32 71565312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 2048, i32 2080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 65295, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5439, i32 -1, i32 -52991 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4591, i32 2031616, i32 459012 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20622, i32 -1, i32 -1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4268, i32 256, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20624, i32 -1, i32 -1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 6306, i32 1610612752, i32 1201405968 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20675, i32 -16838657, i32 1073742080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 12582912, i32 12582912 }], [224 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_0_nv10 = internal constant { [0 x %struct.soc15_reg_golden], [32 x i8] } zeroinitializer, align 32
@golden_settings_gc_10_1_1 = internal constant { [38 x %struct.soc15_reg_golden], [240 x i8] } { [38 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5154, i32 -1, i32 3932180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20615, i32 -28673, i32 -32512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20613, i32 -61441, i32 -65280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20608, i32 -855638016, i32 218104064 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20620, i32 -117501953, i32 1610612992 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20621, i32 1073745904, i32 1073742080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20612, i32 -28673, i32 -32512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20614, i32 -28673, i32 -32512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11664, i32 -1, i32 -454761244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11668, i32 2, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8023, i32 -2147481601, i32 1535 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5036, i32 -1, i32 536870912 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5037, i32 -1, i32 1056 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 512, i32 512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 76546048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5074, i32 65535, i32 63 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5050, i32 -1, i32 59113988 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5507, i32 535887871, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4100, i32 2047, i32 510 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11536, i32 -1, i32 -454761244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -25 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20652, i32 -61441, i32 268435712 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11777, i32 -1, i32 335675439 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -16385, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4252, i32 1073741823, i32 134217737 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4253, i32 4194304, i32 71565312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 2048, i32 2080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 65295, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5439, i32 -1, i32 -52991 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4591, i32 2031616, i32 459013 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20622, i32 -1, i32 -1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4268, i32 307, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20624, i32 -1, i32 -1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 6306, i32 1610612752, i32 1201405968 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 12582912, i32 12582912 }], [240 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_1_nv14 = internal constant { [0 x %struct.soc15_reg_golden], [32 x i8] } zeroinitializer, align 32
@golden_settings_gc_10_1_2 = internal constant { [42 x %struct.soc15_reg_golden], [240 x i8] } { [42 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5154, i32 4063263, i32 3932180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20615, i32 -28673, i32 -32512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20613, i32 -61441, i32 -65280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20608, i32 -8450049, i32 218104064 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20620, i32 -12289, i32 1610612992 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20621, i32 -61441, i32 1073742080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20612, i32 -28673, i32 -32512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20614, i32 -28673, i32 -32512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11664, i32 -1, i32 -454761244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11668, i32 3, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8023, i32 -2147481601, i32 1535 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5036, i32 -1, i32 536870912 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5037, i32 -1, i32 1056 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 -1, i32 512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 76546048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5074, i32 65535, i32 63 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5050, i32 -1, i32 59113988 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5086, i32 202899711, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5507, i32 535887871, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4100, i32 32767, i32 510 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11536, i32 -1, i32 -454761244 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11813, i32 2004318071, i32 271716402 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11814, i32 2004318071, i32 36766257 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20652, i32 -61441, i32 268435712 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11777, i32 -1, i32 335675439 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -16385, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4204, i32 -1, i32 -2077602814 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4252, i32 1073741823, i32 134217737 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4253, i32 -1, i32 71565312 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 2080, i32 2080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 65295, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5439, i32 -1, i32 -52991 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4591, i32 2031616, i32 459012 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20622, i32 -1, i32 -1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4268, i32 307, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20624, i32 -1, i32 -1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 6306, i32 -2129665, i32 1201405968 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 -1, i32 12582912 }], [240 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_1_2_nv12 = internal constant { [0 x %struct.soc15_reg_golden], [32 x i8] } zeroinitializer, align 32
@golden_settings_gc_10_3 = internal constant { [43 x %struct.soc15_reg_golden], [280 x i8] } { [43 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20604, i32 2013265920, i32 2013266176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20605, i32 -8450049, i32 2013266176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20602, i32 -8450049, i32 805306624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20603, i32 -8450049, i32 2113929472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8019, i32 524287, i32 49152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 -1, i32 640 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 8388608 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5055, i32 2147421983, i32 12058624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 6299, i32 -1, i32 269484288 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 6300, i32 -1, i32 385876104 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5504, i32 535953407, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5875, i32 -16777216, i32 -16744320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5595, i32 -16777216, i32 -16744320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4069, i32 4194303, i32 2622464 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11784, i32 -7340273, i32 1477382152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -134217729, i32 284690824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4258, i32 32, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4133, i32 -243269633, i32 18874375 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 -65, i32 2080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4591, i32 -1, i32 459012 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4256, i32 -528616321, i32 1572976 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14784, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14785, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14794, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14795, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14796, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14797, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14798, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14799, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14786, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14787, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14788, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14789, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14790, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14791, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14792, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14793, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4536, i32 65536, i32 65568 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 -4194305, i32 10485760 }], [280 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_3_sienna_cichlid = internal constant { [0 x %struct.soc15_reg_golden], [32 x i8] } zeroinitializer, align 32
@golden_settings_gc_10_3_2 = internal constant { [42 x %struct.soc15_reg_golden], [240 x i8] } { [42 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20604, i32 -8450049, i32 2013266176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20605, i32 -8450049, i32 2013266176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20602, i32 -8450049, i32 805306624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20603, i32 -8450049, i32 2113929472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8019, i32 524287, i32 49152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 -1, i32 640 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 8388608 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5055, i32 2147421983, i32 12058624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5504, i32 535953407, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5875, i32 -1, i32 -16744320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5595, i32 -28673, i32 -16744320 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4069, i32 4194303, i32 2622464 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11784, i32 -7340273, i32 1477382152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -134217729, i32 16255368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4133, i32 -243269633, i32 18874375 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 -65, i32 2080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4591, i32 -1, i32 459012 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4571, i32 255, i32 4 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4256, i32 -528616321, i32 1572976 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14784, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14785, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14794, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14795, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14796, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14797, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14798, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14799, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14786, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14787, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14788, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14789, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14790, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14791, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14792, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14793, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 -4194305, i32 10485760 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4105, i32 4095, i32 1023 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4258, i32 32, i32 32 }], [240 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_3_vangogh = internal constant { [25 x %struct.soc15_reg_golden], [136 x i8] } { [25 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20602, i32 -8450049, i32 805306624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20603, i32 -8450049, i32 2113929472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11664, i32 255, i32 228 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 -1, i32 512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 8388608 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5055, i32 2147421983, i32 12058624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5086, i32 202901503, i32 322 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5504, i32 535953407, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11536, i32 255, i32 228 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11813, i32 2004318071, i32 839922192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11814, i32 2004318071, i32 839922192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11784, i32 -7340273, i32 1477382152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -134217729, i32 16255368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4133, i32 -243269633, i32 18874375 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 -65, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 9281, i32 -1, i32 459011 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4282, i32 6143, i32 4096 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4536, i32 65536, i32 65568 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 -1, i32 4194304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4105, i32 4095, i32 255 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4258, i32 32, i32 32 }], [136 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_3_3 = internal constant { [20 x %struct.soc15_reg_golden], [96 x i8] } { [20 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20604, i32 -8450049, i32 2013266176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11664, i32 255, i32 228 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8019, i32 524287, i32 49664 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 -1, i32 640 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 8388608 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5086, i32 202901503, i32 578 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5507, i32 535953407, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11536, i32 255, i32 228 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11813, i32 2004318071, i32 839922192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11814, i32 2004318071, i32 839922192 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -13 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11784, i32 -7340273, i32 1477382152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -134217729, i32 16255368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4258, i32 511, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4133, i32 -243269633, i32 18874375 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 -65, i32 2080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 -1, i32 1048576 }], [96 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_3_4 = internal constant { [36 x %struct.soc15_reg_golden], [192 x i8] } { [36 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20604, i32 2013265920, i32 2013266176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20602, i32 805306368, i32 805306624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20603, i32 2113929216, i32 2113929472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8019, i32 524287, i32 49152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 640, i32 640 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 125829120, i32 8388608 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5504, i32 7424, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4069, i32 3932160, i32 2622464 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11784, i32 1073741824, i32 1477382152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 262144, i32 16255368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4133, i32 16777216, i32 18874375 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4208, i32 -1, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4220, i32 2048, i32 2080 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4256, i32 31, i32 1572976 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14784, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14785, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14794, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14795, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14796, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14797, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14798, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14799, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14786, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14787, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14788, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14789, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14790, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14791, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14792, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14793, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4536, i32 65536, i32 65568 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 16973824, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 60817408, i32 10485760 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4258, i32 32, i32 32 }], [192 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_3_5 = internal constant { [32 x %struct.soc15_reg_golden], [192 x i8] } { [32 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20604, i32 2013265920, i32 2013266176 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20602, i32 -1342173200, i32 805306624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20603, i32 -16777216, i32 2113929472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8019, i32 524287, i32 49152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 -1, i32 640 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 8388608 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5504, i32 535953407, i32 1280 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11784, i32 -7340273, i32 1477382152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 -134217729, i32 16255368 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4258, i32 511, i32 32 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4133, i32 -243269633, i32 18874375 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4256, i32 -528616321, i32 1572976 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14784, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14785, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14794, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14795, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14796, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14797, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14798, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14799, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14786, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14787, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14788, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14789, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14790, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14791, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14792, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 14793, i32 -252706305, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 -524289, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 -4194305, i32 10485760 }], [192 x i8] zeroinitializer }, align 32
@golden_settings_gc_10_0_cyan_skillfish = internal constant { [34 x %struct.soc15_reg_golden], [208 x i8] } { [34 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8704, i32 -1, i32 -536870912 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4072, i32 1073741823, i32 18750 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20657, i32 -50360321, i32 -134217472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20608, i32 -8450049, i32 1006633216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5155, i32 -1610612736, i32 -1610612736 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5154, i32 32768, i32 3964948 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11652, i32 16, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11664, i32 -1, i32 -656877352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11668, i32 3, i32 3 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 8023, i32 -2147481601, i32 1535 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5036, i32 -1, i32 536870912 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5038, i32 -1, i32 512 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5039, i32 -1, i32 75497472 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5050, i32 -1, i32 59114000 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5086, i32 202899711, i32 68 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5507, i32 40192, i32 34048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5906, i32 -1, i32 1048575 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11524, i32 16, i32 23 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11536, i32 -50529028, i32 -656877352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11813, i32 2003859312, i32 556802352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11814, i32 2003859312, i32 556802352 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11809, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11779, i32 -1, i32 -49 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20652, i32 268435456, i32 268435712 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11777, i32 -66977745, i32 -1811808209 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 11788, i32 8584, i32 392 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4252, i32 134217737, i32 134217737 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4204, i32 -868234237, i32 -2077602814 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 15, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5439, i32 -52983, i32 -52991 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4268, i32 256, i32 304 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 20624, i32 -1, i32 -1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4834, i32 196616, i32 16973824 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 5512, i32 8388608, i32 8388608 }], [208 x i8] zeroinitializer }, align 32
@amdgpu_async_gfx_ring = external dso_local local_unnamed_addr global i32, align 4
@gfx_v10_0_cp_gfx_load_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.84, ptr @.str.16, i32 6190, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"amdgpu: (%d) failed to load pfp fw\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"gfx_v10_0_cp_gfx_load_microcode\00", [32 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_microcode._entry_ptr = internal global ptr @gfx_v10_0_cp_gfx_load_microcode._entry, section ".printk_index", align 4
@gfx_v10_0_cp_gfx_load_microcode._entry.85 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.84, ptr @.str.16, i32 6196, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu: (%d) failed to load ce fw\0A\00", [61 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_microcode._entry_ptr.87 = internal global ptr @gfx_v10_0_cp_gfx_load_microcode._entry.85, section ".printk_index", align 4
@gfx_v10_0_cp_gfx_load_microcode._entry.88 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.84, ptr @.str.16, i32 6202, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu: (%d) failed to load me fw\0A\00", [61 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_microcode._entry_ptr.90 = internal global ptr @gfx_v10_0_cp_gfx_load_microcode._entry.88, section ".printk_index", align 4
@.str.91 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"failed to %s cp gfx\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"unhalt\00", [25 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"halt\00", [27 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_pfp_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @.str.95, ptr @.str.16, i32 5971, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"amdgpu: (%d) failed to create pfp fw bo\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"gfx_v10_0_cp_gfx_load_pfp_microcode\00", [60 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_pfp_microcode._entry_ptr = internal global ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry, section ".printk_index", align 4
@gfx_v10_0_cp_gfx_load_pfp_microcode._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.95, ptr @.str.16, i32 5996, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_pfp_microcode._entry_ptr.97 = internal global ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry.96, section ".printk_index", align 4
@gfx_v10_0_cp_gfx_load_ce_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.99, ptr @.str.16, i32 6049, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"amdgpu: (%d) failed to create ce fw bo\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"gfx_v10_0_cp_gfx_load_ce_microcode\00", [61 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_ce_microcode._entry_ptr = internal global ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry, section ".printk_index", align 4
@gfx_v10_0_cp_gfx_load_ce_microcode._entry.100 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.99, ptr @.str.16, i32 6074, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_ce_microcode._entry_ptr.101 = internal global ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry.100, section ".printk_index", align 4
@gfx_v10_0_cp_gfx_load_me_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.102, ptr @.str.103, ptr @.str.16, i32 6126, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"amdgpu: (%d) failed to create me fw bo\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"gfx_v10_0_cp_gfx_load_me_microcode\00", [61 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_me_microcode._entry_ptr = internal global ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry, section ".printk_index", align 4
@gfx_v10_0_cp_gfx_load_me_microcode._entry.104 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.103, ptr @.str.16, i32 6151, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_gfx_load_me_microcode._entry_ptr.105 = internal global ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry.104, section ".printk_index", align 4
@gfx_v10_0_cp_compute_load_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.106, ptr @.str.16, i32 6526, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"gfx_v10_0_cp_compute_load_microcode\00", [60 x i8] zeroinitializer }, align 32
@gfx_v10_0_cp_compute_load_microcode._entry_ptr = internal global ptr @gfx_v10_0_cp_compute_load_microcode._entry, section ".printk_index", align 4
@amdgpu_bo_reserve._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.108, ptr @.str.109, i32 179, ptr @.str.17, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"amdgpu: %p reserve failed\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu_bo_reserve\00", [46 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_object.h\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_bo_reserve._entry_ptr = internal global ptr @amdgpu_bo_reserve._entry, section ".printk_index", align 4
@.str.111 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"amdgpu: cp failed to lock ring (%d).\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Failed to lock KIQ (%d).\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"KGQ disable failed\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"KCQ disable failed\0A\00", [44 x i8] zeroinitializer }, align 32
@gfx_v10_0_soft_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.116, ptr @.str.16, i32 7686, ptr @.str.117, ptr @.str.18 }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: GRBM_SOFT_RESET=0x%08X\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"gfx_v10_0_soft_reset\00", [43 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@gfx_v10_0_soft_reset._entry_ptr = internal global ptr @gfx_v10_0_soft_reset._entry, section ".printk_index", align 4
@__const.gfx_v10_0_apply_medium_grain_clock_gating_workaround.tcp_ctrl_regs = private unnamed_addr constant [24 x i32] [i32 20499, i32 20503, i32 20507, i32 20511, i32 20515, i32 20519, i32 20523, i32 20527, i32 20531, i32 20535, i32 20579, i32 20583, i32 20539, i32 20543, i32 20547, i32 20551, i32 20555, i32 20559, i32 20563, i32 20567, i32 20571, i32 20575, i32 20587, i32 20591], align 4
@__const.gfx_v10_0_apply_medium_grain_clock_gating_workaround.tcp_ctrl_regs_nv12 = private unnamed_addr constant [20 x i32] [i32 20499, i32 20503, i32 20507, i32 20511, i32 20515, i32 20519, i32 20523, i32 20527, i32 20531, i32 20535, i32 20539, i32 20543, i32 20547, i32 20551, i32 20555, i32 20559, i32 20563, i32 20567, i32 20571, i32 20575], align 4
@__sancov_gen_cov_switch_values = internal global [12 x i64] [i64 10, i64 32, i64 655617, i64 655618, i64 655619, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.118 = internal global [12 x i64] [i64 10, i64 32, i64 655617, i64 655618, i64 655619, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.119 = internal global [12 x i64] [i64 10, i64 32, i64 655617, i64 655618, i64 655619, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.120 = internal global [12 x i64] [i64 10, i64 32, i64 655617, i64 655618, i64 655619, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.121 = internal global [5 x i64] [i64 3, i64 32, i64 655617, i64 655618, i64 655626]
@__sancov_gen_cov_switch_values.122 = internal global [8 x i64] [i64 6, i64 32, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.123 = internal global [4 x i64] [i64 2, i64 32, i64 656128, i64 656131]
@__sancov_gen_cov_switch_values.124 = internal global [4 x i64] [i64 2, i64 32, i64 656128, i64 656131]
@__sancov_gen_cov_switch_values.125 = internal global [5 x i64] [i64 3, i64 32, i64 655617, i64 655618, i64 655626]
@__sancov_gen_cov_switch_values.126 = internal global [11 x i64] [i64 9, i64 32, i64 655617, i64 655618, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.127 = internal global [5 x i64] [i64 3, i64 32, i64 655617, i64 655618, i64 655626]
@__sancov_gen_cov_switch_values.128 = internal global [11 x i64] [i64 9, i64 32, i64 655617, i64 655618, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.129 = internal global [4 x i64] [i64 2, i64 32, i64 656129, i64 656131]
@__sancov_gen_cov_switch_values.130 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.131 = internal global [12 x i64] [i64 10, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.132 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.133 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.134 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.135 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.136 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.137 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@__sancov_gen_cov_switch_values.138 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.139 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 11]
@__sancov_gen_cov_switch_values.140 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 11]
@__sancov_gen_cov_switch_values.141 = internal global [12 x i64] [i64 10, i64 32, i64 655617, i64 655618, i64 655619, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.142 = internal global [12 x i64] [i64 10, i64 32, i64 655617, i64 655618, i64 655619, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.143 = internal global [12 x i64] [i64 10, i64 32, i64 655617, i64 655618, i64 655619, i64 655626, i64 656128, i64 656129, i64 656130, i64 656131, i64 656132, i64 656133]
@__sancov_gen_cov_switch_values.144 = internal global [4 x i64] [i64 2, i64 32, i64 656129, i64 656131]
@__sancov_gen_cov_switch_values.145 = internal global [5 x i64] [i64 3, i64 32, i64 655617, i64 655618, i64 655626]
@__sancov_gen_cov_switch_values.146 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294966784]
@__sancov_gen_cov_switch_values.147 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294966784]
@__sancov_gen_cov_switch_values.148 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294966784]
@___asan_gen_.149 = private unnamed_addr constant [19 x i8] c"gfx_v10_0_ip_funcs\00", align 1
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9346, i32 34 }
@___asan_gen_.152 = private unnamed_addr constant [19 x i8] c"gfx_v10_0_ip_block\00", align 1
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9740, i32 38 }
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9347, i32 10 }
@___asan_gen_.158 = private unnamed_addr constant [24 x i8] c"gfx_v10_0_kiq_pm4_funcs\00", align 1
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3691, i32 35 }
@___asan_gen_.162 = private unnamed_addr constant [54 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ring.h\00", align 1
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.162, i32 314, i32 3 }
@___asan_gen_.164 = private unnamed_addr constant [25 x i8] c"gfx_v10_0_ring_funcs_kiq\00", align 1
@___asan_gen_.166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9455, i32 39 }
@___asan_gen_.167 = private unnamed_addr constant [25 x i8] c"gfx_v10_0_ring_funcs_gfx\00", align 1
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9364, i32 39 }
@___asan_gen_.170 = private unnamed_addr constant [29 x i8] c"gfx_v10_0_ring_funcs_compute\00", align 1
@___asan_gen_.172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9419, i32 39 }
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3853, i32 3 }
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3861, i32 3 }
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 8841, i32 3 }
@___asan_gen_.182 = private unnamed_addr constant [24 x i8] c"gfx_v10_0_eop_irq_funcs\00", align 1
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9499, i32 42 }
@___asan_gen_.185 = private unnamed_addr constant [24 x i8] c"gfx_v10_0_kiq_irq_funcs\00", align 1
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9514, i32 42 }
@___asan_gen_.188 = private unnamed_addr constant [29 x i8] c"gfx_v10_0_priv_reg_irq_funcs\00", align 1
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9504, i32 42 }
@___asan_gen_.191 = private unnamed_addr constant [30 x i8] c"gfx_v10_0_priv_inst_irq_funcs\00", align 1
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9509, i32 42 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9015, i32 4 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9019, i32 3 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9144, i32 2 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9316, i32 2 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9247, i32 2 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 9256, i32 2 }
@___asan_gen_.212 = private unnamed_addr constant [20 x i8] c"gfx_v10_0_rlc_funcs\00", align 1
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 8354, i32 38 }
@___asan_gen_.215 = private unnamed_addr constant [26 x i8] c"gfx_v10_0_rlc_funcs_sriov\00", align 1
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 8368, i32 38 }
@___asan_gen_.218 = private unnamed_addr constant [14 x i8] c"gfx10_cs_data\00", align 1
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 972, i32 36 }
@___asan_gen_.221 = private unnamed_addr constant [24 x i8] c"gfx10_SECT_CONTEXT_defs\00", align 1
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 961, i32 35 }
@___asan_gen_.224 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_1\00", align 1
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 24, i32 27 }
@___asan_gen_.227 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_3\00", align 1
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 515, i32 27 }
@___asan_gen_.230 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_4\00", align 1
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 521, i32 27 }
@___asan_gen_.233 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_5\00", align 1
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 681, i32 27 }
@___asan_gen_.236 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_6\00", align 1
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 685, i32 27 }
@___asan_gen_.239 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_2\00", align 1
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 241, i32 27 }
@___asan_gen_.242 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_7\00", align 1
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 688, i32 27 }
@___asan_gen_.245 = private unnamed_addr constant [25 x i8] c"gfx10_SECT_CONTEXT_def_8\00", align 1
@___asan_gen_.246 = private unnamed_addr constant [59 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h\00", align 1
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.246, i32 756, i32 27 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5895, i32 3 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5751, i32 3 }
@___asan_gen_.275 = private unnamed_addr constant [18 x i8] c"rlc_autoload_info\00", align 1
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5469, i32 3 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5788, i32 3 }
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5825, i32 3 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5862, i32 3 }
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5716, i32 3 }
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5722, i32 3 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1492, i32 3 }
@___asan_gen_.305 = private unnamed_addr constant [13 x i8] c"scratch_reg0\00", align 1
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1500, i32 15 }
@___asan_gen_.308 = private unnamed_addr constant [13 x i8] c"scratch_reg1\00", align 1
@___asan_gen_.310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1501, i32 15 }
@___asan_gen_.311 = private unnamed_addr constant [13 x i8] c"scratch_reg2\00", align 1
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1502, i32 15 }
@___asan_gen_.314 = private unnamed_addr constant [13 x i8] c"scratch_reg3\00", align 1
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1503, i32 15 }
@___asan_gen_.317 = private unnamed_addr constant [10 x i8] c"spare_int\00", align 1
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1504, i32 15 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1556, i32 6 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1558, i32 6 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1560, i32 6 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1562, i32 6 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1564, i32 5 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4870, i32 3 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4876, i32 3 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4917, i32 3 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4490, i32 3 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4061, i32 14 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4072, i32 2 }
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4076, i32 15 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4079, i32 15 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4082, i32 10 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4085, i32 15 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4088, i32 15 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4091, i32 15 }
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4094, i32 15 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4097, i32 15 }
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4100, i32 15 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4103, i32 15 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4107, i32 16 }
@___asan_gen_.406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4109, i32 16 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4115, i32 37 }
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4126, i32 37 }
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4137, i32 37 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4149, i32 38 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4206, i32 37 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4217, i32 37 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4338, i32 3 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3992, i32 3 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4519, i32 4 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4543, i32 4 }
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4747, i32 22 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4777, i32 22 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5544, i32 3 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5516, i32 3 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5482, i32 3 }
@___asan_gen_.494 = private unnamed_addr constant [20 x i8] c"gfx_v10_0_gfx_funcs\00", align 1
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 4648, i32 38 }
@___asan_gen_.497 = private unnamed_addr constant [37 x i8] c"golden_settings_gc_rlc_spm_10_0_nv10\00", align 1
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 322, i32 38 }
@___asan_gen_.500 = private unnamed_addr constant [37 x i8] c"golden_settings_gc_rlc_spm_10_1_nv14\00", align 1
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1608, i32 38 }
@___asan_gen_.503 = private unnamed_addr constant [39 x i8] c"golden_settings_gc_rlc_spm_10_1_2_nv12\00", align 1
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 2237, i32 38 }
@___asan_gen_.506 = private unnamed_addr constant [24 x i8] c"golden_settings_gc_10_1\00", align 1
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 273, i32 38 }
@___asan_gen_.509 = private unnamed_addr constant [29 x i8] c"golden_settings_gc_10_0_nv10\00", align 1
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 317, i32 38 }
@___asan_gen_.512 = private unnamed_addr constant [26 x i8] c"golden_settings_gc_10_1_1\00", align 1
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1378, i32 38 }
@___asan_gen_.515 = private unnamed_addr constant [29 x i8] c"golden_settings_gc_10_1_nv14\00", align 1
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1603, i32 38 }
@___asan_gen_.518 = private unnamed_addr constant [26 x i8] c"golden_settings_gc_10_1_2\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 1420, i32 38 }
@___asan_gen_.521 = private unnamed_addr constant [31 x i8] c"golden_settings_gc_10_1_2_nv12\00", align 1
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 2232, i32 38 }
@___asan_gen_.524 = private unnamed_addr constant [24 x i8] c"golden_settings_gc_10_3\00", align 1
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3293, i32 38 }
@___asan_gen_.527 = private unnamed_addr constant [39 x i8] c"golden_settings_gc_10_3_sienna_cichlid\00", align 1
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3340, i32 38 }
@___asan_gen_.530 = private unnamed_addr constant [26 x i8] c"golden_settings_gc_10_3_2\00", align 1
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3345, i32 38 }
@___asan_gen_.533 = private unnamed_addr constant [32 x i8] c"golden_settings_gc_10_3_vangogh\00", align 1
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3393, i32 38 }
@___asan_gen_.536 = private unnamed_addr constant [26 x i8] c"golden_settings_gc_10_3_3\00", align 1
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3424, i32 38 }
@___asan_gen_.539 = private unnamed_addr constant [26 x i8] c"golden_settings_gc_10_3_4\00", align 1
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3448, i32 38 }
@___asan_gen_.542 = private unnamed_addr constant [26 x i8] c"golden_settings_gc_10_3_5\00", align 1
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3488, i32 38 }
@___asan_gen_.545 = private unnamed_addr constant [39 x i8] c"golden_settings_gc_10_0_cyan_skillfish\00", align 1
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 3523, i32 38 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6190, i32 3 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6196, i32 3 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6202, i32 3 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5942, i32 3 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5971, i32 3 }
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 5996, i32 3 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6049, i32 3 }
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6074, i32 3 }
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6126, i32 3 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6151, i32 3 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6526, i32 3 }
@___asan_gen_.630 = private unnamed_addr constant [56 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_object.h\00", align 1
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.630, i32 179, i32 4 }
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6227, i32 3 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 6786, i32 3 }
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 7555, i32 5 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 7559, i32 4 }
@___asan_gen_.644 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.653 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.654 = private constant [42 x i8] c"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\00", align 1
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.654, i32 7686, i32 4 }
@llvm.compiler.used = appending global [269 x ptr] [ptr @__UNIQUE_ID_firmware343, ptr @__UNIQUE_ID_firmware344, ptr @__UNIQUE_ID_firmware345, ptr @__UNIQUE_ID_firmware346, ptr @__UNIQUE_ID_firmware347, ptr @__UNIQUE_ID_firmware348, ptr @__UNIQUE_ID_firmware349, ptr @__UNIQUE_ID_firmware350, ptr @__UNIQUE_ID_firmware351, ptr @__UNIQUE_ID_firmware352, ptr @__UNIQUE_ID_firmware353, ptr @__UNIQUE_ID_firmware354, ptr @__UNIQUE_ID_firmware355, ptr @__UNIQUE_ID_firmware356, ptr @__UNIQUE_ID_firmware357, ptr @__UNIQUE_ID_firmware358, ptr @__UNIQUE_ID_firmware359, ptr @__UNIQUE_ID_firmware360, ptr @__UNIQUE_ID_firmware361, ptr @__UNIQUE_ID_firmware362, ptr @__UNIQUE_ID_firmware363, ptr @__UNIQUE_ID_firmware364, ptr @__UNIQUE_ID_firmware365, ptr @__UNIQUE_ID_firmware366, ptr @__UNIQUE_ID_firmware367, ptr @__UNIQUE_ID_firmware368, ptr @__UNIQUE_ID_firmware369, ptr @__UNIQUE_ID_firmware370, ptr @__UNIQUE_ID_firmware371, ptr @__UNIQUE_ID_firmware372, ptr @__UNIQUE_ID_firmware373, ptr @__UNIQUE_ID_firmware374, ptr @__UNIQUE_ID_firmware375, ptr @__UNIQUE_ID_firmware376, ptr @__UNIQUE_ID_firmware377, ptr @__UNIQUE_ID_firmware378, ptr @__UNIQUE_ID_firmware379, ptr @__UNIQUE_ID_firmware380, ptr @__UNIQUE_ID_firmware381, ptr @__UNIQUE_ID_firmware382, ptr @__UNIQUE_ID_firmware383, ptr @__UNIQUE_ID_firmware384, ptr @__UNIQUE_ID_firmware385, ptr @__UNIQUE_ID_firmware386, ptr @__UNIQUE_ID_firmware387, ptr @__UNIQUE_ID_firmware388, ptr @__UNIQUE_ID_firmware389, ptr @__UNIQUE_ID_firmware390, ptr @__UNIQUE_ID_firmware391, ptr @__UNIQUE_ID_firmware392, ptr @__UNIQUE_ID_firmware393, ptr @__UNIQUE_ID_firmware394, ptr @__UNIQUE_ID_firmware395, ptr @__UNIQUE_ID_firmware396, ptr @__UNIQUE_ID_firmware397, ptr @__UNIQUE_ID_firmware398, ptr @__UNIQUE_ID_firmware399, ptr @__UNIQUE_ID_firmware400, ptr @__UNIQUE_ID_firmware401, ptr @__UNIQUE_ID_firmware402, ptr @__UNIQUE_ID_firmware403, ptr @__UNIQUE_ID_firmware404, ptr @__UNIQUE_ID_firmware405, ptr @__UNIQUE_ID_firmware406, ptr @__UNIQUE_ID_firmware407, ptr @__UNIQUE_ID_firmware408, ptr @__UNIQUE_ID_firmware409, ptr @__UNIQUE_ID_firmware410, ptr @__UNIQUE_ID_firmware411, ptr @__UNIQUE_ID_firmware412, ptr @__UNIQUE_ID_firmware413, ptr @amdgpu_bo_reserve._entry, ptr @amdgpu_bo_reserve._entry_ptr, ptr @gfx_v10_0_calc_toc_total_size._entry, ptr @gfx_v10_0_calc_toc_total_size._entry_ptr, ptr @gfx_v10_0_check_fw_write_wait._entry, ptr @gfx_v10_0_check_fw_write_wait._entry_ptr, ptr @gfx_v10_0_cp_compute_load_microcode._entry, ptr @gfx_v10_0_cp_compute_load_microcode._entry_ptr, ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry, ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry.100, ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry_ptr, ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry_ptr.101, ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry, ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry.104, ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry_ptr, ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry_ptr.105, ptr @gfx_v10_0_cp_gfx_load_microcode._entry, ptr @gfx_v10_0_cp_gfx_load_microcode._entry.85, ptr @gfx_v10_0_cp_gfx_load_microcode._entry.88, ptr @gfx_v10_0_cp_gfx_load_microcode._entry_ptr, ptr @gfx_v10_0_cp_gfx_load_microcode._entry_ptr.87, ptr @gfx_v10_0_cp_gfx_load_microcode._entry_ptr.90, ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry, ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry.96, ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry_ptr, ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry_ptr.97, ptr @gfx_v10_0_init_microcode._entry, ptr @gfx_v10_0_init_microcode._entry_ptr, ptr @gfx_v10_0_mec_init._entry, ptr @gfx_v10_0_mec_init._entry.72, ptr @gfx_v10_0_mec_init._entry_ptr, ptr @gfx_v10_0_mec_init._entry_ptr.74, ptr @gfx_v10_0_parse_rlc_toc._entry, ptr @gfx_v10_0_parse_rlc_toc._entry_ptr, ptr @gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry, ptr @gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry_ptr, ptr @gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry, ptr @gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry_ptr, ptr @gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry, ptr @gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry_ptr, ptr @gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry, ptr @gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry_ptr, ptr @gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry, ptr @gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry_ptr, ptr @gfx_v10_0_soft_reset._entry, ptr @gfx_v10_0_soft_reset._entry_ptr, ptr @gfx_v10_0_wait_for_rlc_autoload_complete._entry, ptr @gfx_v10_0_wait_for_rlc_autoload_complete._entry_ptr, ptr @gfx_v10_rlcg_rw._entry, ptr @gfx_v10_rlcg_rw._entry.29, ptr @gfx_v10_rlcg_rw._entry.32, ptr @gfx_v10_rlcg_rw._entry.35, ptr @gfx_v10_rlcg_rw._entry.38, ptr @gfx_v10_rlcg_rw._entry_ptr, ptr @gfx_v10_rlcg_rw._entry_ptr.31, ptr @gfx_v10_rlcg_rw._entry_ptr.34, ptr @gfx_v10_rlcg_rw._entry_ptr.37, ptr @gfx_v10_rlcg_rw._entry_ptr.40, ptr @gfx_v10_0_ip_funcs, ptr @gfx_v10_0_ip_block, ptr @.str, ptr @gfx_v10_0_kiq_pm4_funcs, ptr @.str.1, ptr @gfx_v10_0_ring_funcs_kiq, ptr @gfx_v10_0_ring_funcs_gfx, ptr @gfx_v10_0_ring_funcs_compute, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @gfx_v10_0_eop_irq_funcs, ptr @gfx_v10_0_kiq_irq_funcs, ptr @gfx_v10_0_priv_reg_irq_funcs, ptr @gfx_v10_0_priv_inst_irq_funcs, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @gfx_v10_0_rlc_funcs, ptr @gfx_v10_0_rlc_funcs_sriov, ptr @gfx10_cs_data, ptr @gfx10_SECT_CONTEXT_defs, ptr @gfx10_SECT_CONTEXT_def_1, ptr @gfx10_SECT_CONTEXT_def_3, ptr @gfx10_SECT_CONTEXT_def_4, ptr @gfx10_SECT_CONTEXT_def_5, ptr @gfx10_SECT_CONTEXT_def_6, ptr @gfx10_SECT_CONTEXT_def_2, ptr @gfx10_SECT_CONTEXT_def_7, ptr @gfx10_SECT_CONTEXT_def_8, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @rlc_autoload_info, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @gfx_v10_rlcg_rw.scratch_reg0, ptr @gfx_v10_rlcg_rw.scratch_reg1, ptr @gfx_v10_rlcg_rw.scratch_reg2, ptr @gfx_v10_rlcg_rw.scratch_reg3, ptr @gfx_v10_rlcg_rw.spare_int, ptr @.str.27, ptr @.str.28, ptr @.str.30, ptr @.str.33, ptr @.str.36, ptr @.str.39, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.73, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @gfx_v10_0_gfx_funcs, ptr @golden_settings_gc_rlc_spm_10_0_nv10, ptr @golden_settings_gc_rlc_spm_10_1_nv14, ptr @golden_settings_gc_rlc_spm_10_1_2_nv12, ptr @golden_settings_gc_10_1, ptr @golden_settings_gc_10_0_nv10, ptr @golden_settings_gc_10_1_1, ptr @golden_settings_gc_10_1_nv14, ptr @golden_settings_gc_10_1_2, ptr @golden_settings_gc_10_1_2_nv12, ptr @golden_settings_gc_10_3, ptr @golden_settings_gc_10_3_sienna_cichlid, ptr @golden_settings_gc_10_3_2, ptr @golden_settings_gc_10_3_vangogh, ptr @golden_settings_gc_10_3_3, ptr @golden_settings_gc_10_3_4, ptr @golden_settings_gc_10_3_5, ptr @golden_settings_gc_10_0_cyan_skillfish, ptr @.str.83, ptr @.str.84, ptr @.str.86, ptr @.str.89, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.98, ptr @.str.99, ptr @.str.102, ptr @.str.103, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117], section "llvm.metadata"
@0 = internal global [169 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_ip_funcs to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.149 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_ip_block to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_kiq_pm4_funcs to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_ring_funcs_kiq to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_ring_funcs_gfx to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.167 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_ring_funcs_compute to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_eop_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_kiq_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_priv_reg_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_priv_inst_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_rlc_funcs to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_rlc_funcs_sriov to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_cs_data to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_defs to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_1 to i32), i32 860, i32 1056, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_3 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_4 to i32), i32 632, i32 768, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_5 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_6 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_2 to i32), i32 1088, i32 1344, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_7 to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx10_SECT_CONTEXT_def_8 to i32), i32 812, i32 1024, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_wait_for_rlc_autoload_complete._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rlc_autoload_info to i32), i32 456, i32 576, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw.scratch_reg0 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw.scratch_reg1 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw.scratch_reg2 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw.scratch_reg3 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw.spare_int to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw._entry.32 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_rlcg_rw._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_init_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_check_fw_write_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_mec_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_mec_init._entry.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_calc_toc_total_size._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_parse_rlc_toc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_gfx_funcs to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_rlc_spm_10_0_nv10 to i32), i32 25248, i32 31552, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_rlc_spm_10_1_nv14 to i32), i32 14880, i32 18592, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_rlc_spm_10_1_2_nv12 to i32), i32 25248, i32 31552, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_1 to i32), i32 960, i32 1184, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_0_nv10 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_1_1 to i32), i32 912, i32 1152, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_1_nv14 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_1_2 to i32), i32 1008, i32 1248, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_1_2_nv12 to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_3 to i32), i32 1032, i32 1312, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_3_sienna_cichlid to i32), i32 0, i32 32, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_3_2 to i32), i32 1008, i32 1248, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_3_vangogh to i32), i32 600, i32 736, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_3_3 to i32), i32 480, i32 576, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_3_4 to i32), i32 864, i32 1056, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_3_5 to i32), i32 768, i32 960, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_10_0_cyan_skillfish to i32), i32 816, i32 1024, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_microcode._entry.85 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_microcode._entry.88 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry.100 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry.104 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_cp_compute_load_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_bo_reserve._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v10_0_soft_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_early_init(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 655626, label %entry.sw.epilog.sink.split_crit_edge
    i32 655617, label %entry.sw.epilog.sink.split_crit_edge18
    i32 655618, label %entry.sw.epilog.sink.split_crit_edge19
    i32 655619, label %entry.sw.epilog.sink.split_crit_edge20
    i32 656128, label %entry.sw.epilog.sink.split_crit_edge21
    i32 656130, label %entry.sw.epilog.sink.split_crit_edge22
    i32 656129, label %entry.sw.epilog.sink.split_crit_edge23
    i32 656132, label %entry.sw.epilog.sink.split_crit_edge24
    i32 656133, label %entry.sw.epilog.sink.split_crit_edge25
    i32 656131, label %entry.sw.epilog.sink.split_crit_edge26
  ]

entry.sw.epilog.sink.split_crit_edge26:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge25:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge24:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge23:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge22:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge21:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge20:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge19:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge18:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.epilog.sink.split:                             ; preds = %entry.sw.epilog.sink.split_crit_edge, %entry.sw.epilog.sink.split_crit_edge18, %entry.sw.epilog.sink.split_crit_edge19, %entry.sw.epilog.sink.split_crit_edge20, %entry.sw.epilog.sink.split_crit_edge21, %entry.sw.epilog.sink.split_crit_edge22, %entry.sw.epilog.sink.split_crit_edge23, %entry.sw.epilog.sink.split_crit_edge24, %entry.sw.epilog.sink.split_crit_edge25, %entry.sw.epilog.sink.split_crit_edge26
  %num_gfx_rings4 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %3 = ptrtoint ptr %num_gfx_rings4 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %num_gfx_rings4, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  %call = tail call i32 @amdgpu_gfx_get_num_kcq(ptr noundef %handle) #13
  %4 = tail call i32 @llvm.smin.i32(i32 %call, i32 8)
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 39
  %5 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %num_compute_rings, align 8
  %pmf.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 5
  %6 = ptrtoint ptr %pmf.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @gfx_v10_0_kiq_pm4_funcs, ptr %pmf.i, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 1
  %7 = ptrtoint ptr %funcs.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @gfx_v10_0_ring_funcs_kiq, ptr %funcs.i, align 4
  %num_gfx_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %8 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_gfx_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp23.not.i = icmp eq i32 %9, 0
  br i1 %cmp23.not.i, label %sw.epilog.for.cond4.preheader.i_crit_edge, label %sw.epilog.for.body.i_crit_edge

sw.epilog.for.body.i_crit_edge:                   ; preds = %sw.epilog
  br label %for.body.i

sw.epilog.for.cond4.preheader.i_crit_edge:        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond4.preheader.i

for.cond4.preheader.i:                            ; preds = %for.body.i.for.cond4.preheader.i_crit_edge, %sw.epilog.for.cond4.preheader.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp625.not.i = icmp eq i32 %4, 0
  br i1 %cmp625.not.i, label %for.cond4.preheader.i.gfx_v10_0_set_ring_funcs.exit_crit_edge, label %for.cond4.preheader.i.for.body7.i_crit_edge

for.cond4.preheader.i.for.body7.i_crit_edge:      ; preds = %for.cond4.preheader.i
  br label %for.body7.i

for.cond4.preheader.i.gfx_v10_0_set_ring_funcs.exit_crit_edge: ; preds = %for.cond4.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_set_ring_funcs.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %sw.epilog.for.body.i_crit_edge
  %i.024.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %sw.epilog.for.body.i_crit_edge ]
  %funcs3.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.024.i, i32 1
  %10 = ptrtoint ptr %funcs3.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @gfx_v10_0_ring_funcs_gfx, ptr %funcs3.i, align 4
  %inc.i = add nuw i32 %i.024.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %9
  br i1 %exitcond.not.i, label %for.body.i.for.cond4.preheader.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.body.i.for.cond4.preheader.i_crit_edge:       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond4.preheader.i

for.body7.i:                                      ; preds = %for.body7.i.for.body7.i_crit_edge, %for.cond4.preheader.i.for.body7.i_crit_edge
  %i.126.i = phi i32 [ %inc12.i, %for.body7.i.for.body7.i_crit_edge ], [ 0, %for.cond4.preheader.i.for.body7.i_crit_edge ]
  %funcs10.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.126.i, i32 1
  %11 = ptrtoint ptr %funcs10.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @gfx_v10_0_ring_funcs_compute, ptr %funcs10.i, align 4
  %inc12.i = add nuw i32 %i.126.i, 1
  %exitcond27.not.i = icmp eq i32 %inc12.i, %4
  br i1 %exitcond27.not.i, label %for.body7.i.gfx_v10_0_set_ring_funcs.exit_crit_edge, label %for.body7.i.for.body7.i_crit_edge

for.body7.i.for.body7.i_crit_edge:                ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body7.i

for.body7.i.gfx_v10_0_set_ring_funcs.exit_crit_edge: ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_set_ring_funcs.exit

gfx_v10_0_set_ring_funcs.exit:                    ; preds = %for.body7.i.gfx_v10_0_set_ring_funcs.exit_crit_edge, %for.cond4.preheader.i.gfx_v10_0_set_ring_funcs.exit_crit_edge
  %eop_irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 40
  %12 = ptrtoint ptr %eop_irq.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 10, ptr %eop_irq.i, align 4
  %funcs.i17 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 40, i32 2
  %13 = ptrtoint ptr %funcs.i17 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @gfx_v10_0_eop_irq_funcs, ptr %funcs.i17, align 4
  %irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 4
  %14 = ptrtoint ptr %irq.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %irq.i, align 8
  %funcs8.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 4, i32 2
  %15 = ptrtoint ptr %funcs8.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @gfx_v10_0_kiq_irq_funcs, ptr %funcs8.i, align 8
  %priv_reg_irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %16 = ptrtoint ptr %priv_reg_irq.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %priv_reg_irq.i, align 8
  %funcs13.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41, i32 2
  %17 = ptrtoint ptr %funcs13.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @gfx_v10_0_priv_reg_irq_funcs, ptr %funcs13.i, align 8
  %priv_inst_irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %18 = ptrtoint ptr %priv_inst_irq.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %priv_inst_irq.i, align 4
  %funcs18.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42, i32 2
  %19 = ptrtoint ptr %funcs18.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @gfx_v10_0_priv_inst_irq_funcs, ptr %funcs18.i, align 4
  %config.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1
  %max_cu_per_sh.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 2
  %20 = ptrtoint ptr %max_cu_per_sh.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max_cu_per_sh.i, align 8
  %max_sh_per_se.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 3
  %22 = ptrtoint ptr %max_sh_per_se.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %max_sh_per_se.i, align 4
  %24 = ptrtoint ptr %config.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %config.i, align 8
  %gds.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114
  %26 = ptrtoint ptr %gds.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 65536, ptr %gds.i, align 8
  %mul.i = shl i32 %21, 5
  %mul5.i = mul i32 %mul.i, %23
  %mul6.i = mul i32 %mul5.i, %25
  %sub.i = add i32 %mul6.i, -1
  %gds_compute_max_wave_id.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 3
  %27 = ptrtoint ptr %gds_compute_max_wave_id.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sub.i, ptr %gds_compute_max_wave_id.i, align 4
  %gws_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 1
  %28 = ptrtoint ptr %gws_size.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 64, ptr %gws_size.i, align 4
  %oa_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 2
  %29 = ptrtoint ptr %oa_size.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 16, ptr %oa_size.i, align 8
  %30 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx, align 4
  %32 = zext i32 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.118)
  switch i32 %31, label %gfx_v10_0_set_ring_funcs.exit.gfx_v10_0_set_rlc_funcs.exit_crit_edge [
    i32 655626, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge
    i32 655617, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge27
    i32 655619, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge28
    i32 656130, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge29
    i32 656129, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge30
    i32 656132, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge31
    i32 656133, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge32
    i32 656131, label %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge33
    i32 655618, label %gfx_v10_0_set_ring_funcs.exit.sw.bb2.i_crit_edge
    i32 656128, label %gfx_v10_0_set_ring_funcs.exit.sw.bb2.i_crit_edge34
  ]

gfx_v10_0_set_ring_funcs.exit.sw.bb2.i_crit_edge34: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

gfx_v10_0_set_ring_funcs.exit.sw.bb2.i_crit_edge: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb2.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge33: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge32: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge31: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge30: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge29: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge28: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge27: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.sink.split.i

gfx_v10_0_set_ring_funcs.exit.gfx_v10_0_set_rlc_funcs.exit_crit_edge: ; preds = %gfx_v10_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_set_rlc_funcs.exit

sw.bb2.i:                                         ; preds = %gfx_v10_0_set_ring_funcs.exit.sw.bb2.i_crit_edge, %gfx_v10_0_set_ring_funcs.exit.sw.bb2.i_crit_edge34
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %sw.bb2.i, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge27, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge28, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge29, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge30, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge31, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge32, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge33
  %gfx_v10_0_rlc_funcs_sriov.sink.i = phi ptr [ @gfx_v10_0_rlc_funcs_sriov, %sw.bb2.i ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge27 ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge28 ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge29 ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge30 ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge31 ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge32 ], [ @gfx_v10_0_rlc_funcs, %gfx_v10_0_set_ring_funcs.exit.sw.epilog.sink.split.i_crit_edge33 ]
  %funcs5.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %33 = ptrtoint ptr %funcs5.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %gfx_v10_0_rlc_funcs_sriov.sink.i, ptr %funcs5.i, align 4
  br label %gfx_v10_0_set_rlc_funcs.exit

gfx_v10_0_set_rlc_funcs.exit:                     ; preds = %sw.epilog.sink.split.i, %gfx_v10_0_set_ring_funcs.exit.gfx_v10_0_set_rlc_funcs.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_late_init(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %priv_reg_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %call = tail call i32 @amdgpu_irq_get(ptr noundef %handle, ptr noundef %priv_reg_irq, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %priv_inst_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %call2 = tail call i32 @amdgpu_irq_get(ptr noundef %handle, ptr noundef %priv_inst_irq, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call2, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_sw_init(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.119)
  switch i32 %1, label %sw.default [
    i32 655626, label %entry.sw.epilog_crit_edge
    i32 655617, label %entry.sw.epilog_crit_edge309
    i32 655618, label %entry.sw.epilog_crit_edge310
    i32 655619, label %entry.sw.epilog_crit_edge311
    i32 656128, label %entry.sw.bb12_crit_edge
    i32 656130, label %entry.sw.bb12_crit_edge312
    i32 656129, label %entry.sw.bb12_crit_edge313
    i32 656132, label %entry.sw.bb12_crit_edge314
    i32 656133, label %entry.sw.bb12_crit_edge315
    i32 656131, label %entry.sw.bb12_crit_edge316
  ]

entry.sw.bb12_crit_edge316:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12

entry.sw.bb12_crit_edge315:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12

entry.sw.bb12_crit_edge314:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12

entry.sw.bb12_crit_edge313:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12

entry.sw.bb12_crit_edge312:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12

entry.sw.bb12_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb12

entry.sw.epilog_crit_edge311:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

entry.sw.epilog_crit_edge310:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

entry.sw.epilog_crit_edge309:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry.sw.bb12_crit_edge, %entry.sw.bb12_crit_edge312, %entry.sw.bb12_crit_edge313, %entry.sw.bb12_crit_edge314, %entry.sw.bb12_crit_edge315, %entry.sw.bb12_crit_edge316
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge309, %entry.sw.epilog_crit_edge310, %entry.sw.epilog_crit_edge311
  %.sink306 = phi i32 [ 1, %sw.default ], [ 2, %sw.bb12 ], [ 2, %entry.sw.epilog_crit_edge ], [ 2, %entry.sw.epilog_crit_edge309 ], [ 2, %entry.sw.epilog_crit_edge310 ], [ 2, %entry.sw.epilog_crit_edge311 ]
  %.sink = phi i32 [ 8, %sw.default ], [ 4, %sw.bb12 ], [ 8, %entry.sw.epilog_crit_edge ], [ 8, %entry.sw.epilog_crit_edge309 ], [ 8, %entry.sw.epilog_crit_edge310 ], [ 8, %entry.sw.epilog_crit_edge311 ]
  %num_me33 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 3
  %3 = ptrtoint ptr %num_me33 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %num_me33, align 4
  %num_pipe_per_me36 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 4
  %4 = ptrtoint ptr %num_pipe_per_me36 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %num_pipe_per_me36, align 8
  %num_queue_per_pipe39 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 5
  %5 = ptrtoint ptr %num_queue_per_pipe39 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %num_queue_per_pipe39, align 4
  %num_mec42 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 4
  %6 = ptrtoint ptr %num_mec42 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %.sink306, ptr %num_mec42, align 8
  %num_pipe_per_mec45 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 5
  %7 = ptrtoint ptr %num_pipe_per_mec45 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 4, ptr %num_pipe_per_mec45, align 4
  %num_queue_per_pipe48 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 6
  %8 = ptrtoint ptr %num_queue_per_pipe48 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %.sink, ptr %num_queue_per_pipe48, align 8
  %irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 4
  %call = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 178, ptr noundef %irq) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %sw.epilog
  %eop_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 40
  %call52 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 181, ptr noundef %eop_irq) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end55, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end55:                                         ; preds = %if.end
  %priv_reg_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %call57 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 184, ptr noundef %priv_reg_irq) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %if.end60, label %if.end55.cleanup_crit_edge

if.end55.cleanup_crit_edge:                       ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end60:                                         ; preds = %if.end55
  %priv_inst_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %call62 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 185, ptr noundef %priv_inst_irq) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %if.end65, label %if.end60.cleanup_crit_edge

if.end60.cleanup_crit_edge:                       ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end65:                                         ; preds = %if.end60
  %gfx_current_status = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 46
  %9 = ptrtoint ptr %gfx_current_status to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %gfx_current_status, align 8
  %scratch.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 8
  %10 = ptrtoint ptr %scratch.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 8, ptr %scratch.i, align 8
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx2.i = getelementptr i32, ptr %12, i32 1
  %13 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx2.i, align 4
  %add.i = add i32 %14, 8256
  %reg_base.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 8, i32 1
  %15 = ptrtoint ptr %reg_base.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %add.i, ptr %reg_base.i, align 4
  %free_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 8, i32 2
  %16 = ptrtoint ptr %free_mask.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 255, ptr %free_mask.i, align 8
  %call67 = tail call fastcc i32 @gfx_v10_0_me_init(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call67)
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %if.end70, label %if.end65.cleanup_crit_edge

if.end65.cleanup_crit_edge:                       ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end70:                                         ; preds = %if.end65
  %call71 = tail call i32 @gfx_v10_0_rlc_init(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %if.end74, label %if.then73

if.then73:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.41) #13
  br label %cleanup

if.end74:                                         ; preds = %if.end70
  %call75 = tail call fastcc i32 @gfx_v10_0_mec_init(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75)
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %for.cond.preheader, label %if.then77

for.cond.preheader:                               ; preds = %if.end74
  %num_me81 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 3
  %17 = ptrtoint ptr %num_me81 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %num_me81, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp286.not = icmp eq i32 %18, 0
  br i1 %cmp286.not, label %for.cond.preheader.for.cond108.preheader_crit_edge, label %for.cond82.preheader.lr.ph

for.cond.preheader.for.cond108.preheader_crit_edge: ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond108.preheader

for.cond82.preheader.lr.ph:                       ; preds = %for.cond.preheader
  %num_queue_per_pipe85 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 5
  %num_pipe_per_me91 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 4
  %gfx_ring0.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 144, i32 11
  %gfx_ring1.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 144, i32 12
  br label %for.cond82.preheader

if.then77:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.42) #13
  br label %cleanup

for.cond82.preheader:                             ; preds = %for.inc105.for.cond82.preheader_crit_edge, %for.cond82.preheader.lr.ph
  %ring_id.0289 = phi i32 [ 0, %for.cond82.preheader.lr.ph ], [ %ring_id.1.lcssa, %for.inc105.for.cond82.preheader_crit_edge ]
  %i.0287 = phi i32 [ 0, %for.cond82.preheader.lr.ph ], [ %inc106, %for.inc105.for.cond82.preheader_crit_edge ]
  %19 = ptrtoint ptr %num_queue_per_pipe85 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %num_queue_per_pipe85, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp86281.not = icmp eq i32 %20, 0
  br i1 %cmp86281.not, label %for.cond82.preheader.for.inc105_crit_edge, label %for.cond82.preheader.for.cond88.preheader_crit_edge

for.cond82.preheader.for.cond88.preheader_crit_edge: ; preds = %for.cond82.preheader
  br label %for.cond88.preheader

for.cond82.preheader.for.inc105_crit_edge:        ; preds = %for.cond82.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc105

for.cond108.preheader:                            ; preds = %for.inc105.for.cond108.preheader_crit_edge, %for.cond.preheader.for.cond108.preheader_crit_edge
  %num_mec111 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 4
  %21 = ptrtoint ptr %num_mec111 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_mec111, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp112300.not = icmp eq i32 %22, 0
  br i1 %cmp112300.not, label %for.cond108.preheader.for.end142_crit_edge, label %for.cond114.preheader.lr.ph

for.cond108.preheader.for.end142_crit_edge:       ; preds = %for.cond108.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end142

for.cond114.preheader.lr.ph:                      ; preds = %for.cond108.preheader
  %num_queue_per_pipe117 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 6
  %num_pipe_per_mec123 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 5
  br label %for.cond114.preheader

for.cond88.preheader:                             ; preds = %for.inc102.for.cond88.preheader_crit_edge, %for.cond82.preheader.for.cond88.preheader_crit_edge
  %ring_id.1284 = phi i32 [ %ring_id.2.lcssa, %for.inc102.for.cond88.preheader_crit_edge ], [ %ring_id.0289, %for.cond82.preheader.for.cond88.preheader_crit_edge ]
  %j.0282 = phi i32 [ %inc103, %for.inc102.for.cond88.preheader_crit_edge ], [ 0, %for.cond82.preheader.for.cond88.preheader_crit_edge ]
  %23 = ptrtoint ptr %num_pipe_per_me91 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %num_pipe_per_me91, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp92277.not = icmp eq i32 %24, 0
  br i1 %cmp92277.not, label %for.cond88.preheader.for.inc102_crit_edge, label %for.cond88.preheader.for.body93_crit_edge

for.cond88.preheader.for.body93_crit_edge:        ; preds = %for.cond88.preheader
  br label %for.body93

for.cond88.preheader.for.inc102_crit_edge:        ; preds = %for.cond88.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc102

for.body93:                                       ; preds = %for.inc.for.body93_crit_edge, %for.cond88.preheader.for.body93_crit_edge
  %ring_id.2280 = phi i32 [ %ring_id.3, %for.inc.for.body93_crit_edge ], [ %ring_id.1284, %for.cond88.preheader.for.body93_crit_edge ]
  %k.0278 = phi i32 [ %inc101, %for.inc.for.body93_crit_edge ], [ 0, %for.cond88.preheader.for.body93_crit_edge ]
  %call94 = tail call zeroext i1 @amdgpu_gfx_is_me_queue_enabled(ptr noundef %handle, i32 noundef %i.0287, i32 noundef %k.0278, i32 noundef %j.0282) #13
  br i1 %call94, label %if.end96, label %for.body93.for.inc_crit_edge

for.body93.for.inc_crit_edge:                     ; preds = %for.body93
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.end96:                                         ; preds = %for.body93
  %me1.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280, i32 16
  %25 = ptrtoint ptr %me1.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %i.0287, ptr %me1.i, align 8
  %pipe2.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280, i32 17
  %26 = ptrtoint ptr %pipe2.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %k.0278, ptr %pipe2.i, align 4
  %queue3.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280, i32 18
  %27 = ptrtoint ptr %queue3.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %j.0282, ptr %queue3.i, align 8
  %ring_obj.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280, i32 4
  %28 = ptrtoint ptr %ring_obj.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %ring_obj.i, align 8
  %use_doorbell.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280, i32 24
  %29 = ptrtoint ptr %use_doorbell.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 1, ptr %use_doorbell.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ring_id.2280)
  %tobool.not.i = icmp eq i32 %ring_id.2280, 0
  %shl6.sink.in.in.i = select i1 %tobool.not.i, ptr %gfx_ring0.i, ptr %gfx_ring1.i
  %30 = ptrtoint ptr %shl6.sink.in.in.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %shl6.sink.in.i = load i32, ptr %shl6.sink.in.in.i, align 4
  %shl6.sink.i = shl i32 %shl6.sink.in.i, 1
  %31 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280, i32 23
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %shl6.sink.i, ptr %31, align 8
  %arrayidx.i271 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280
  %name.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %ring_id.2280, i32 29
  %call.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %name.i, ptr noundef nonnull @.str.75, i32 noundef %i.0287, i32 noundef %k.0278, i32 noundef %j.0282) #13
  %33 = ptrtoint ptr %pipe2.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %pipe2.i, align 4
  %call13.i = tail call i32 @amdgpu_ring_init(ptr noundef %handle, ptr noundef %arrayidx.i271, i32 noundef 1024, ptr noundef %eop_irq, i32 noundef %34, i32 noundef 1, ptr noundef null) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool98.not = icmp eq i32 %call13.i, 0
  br i1 %tobool98.not, label %if.end100, label %if.end96.cleanup_crit_edge

if.end96.cleanup_crit_edge:                       ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end100:                                        ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #15
  %inc = add i32 %ring_id.2280, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end100, %for.body93.for.inc_crit_edge
  %ring_id.3 = phi i32 [ %inc, %if.end100 ], [ %ring_id.2280, %for.body93.for.inc_crit_edge ]
  %inc101 = add nuw i32 %k.0278, 1
  %35 = ptrtoint ptr %num_pipe_per_me91 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %num_pipe_per_me91, align 8
  %cmp92 = icmp ult i32 %inc101, %36
  br i1 %cmp92, label %for.inc.for.body93_crit_edge, label %for.inc.for.inc102_crit_edge

for.inc.for.inc102_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc102

for.inc.for.body93_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body93

for.inc102:                                       ; preds = %for.inc.for.inc102_crit_edge, %for.cond88.preheader.for.inc102_crit_edge
  %ring_id.2.lcssa = phi i32 [ %ring_id.1284, %for.cond88.preheader.for.inc102_crit_edge ], [ %ring_id.3, %for.inc.for.inc102_crit_edge ]
  %inc103 = add nuw i32 %j.0282, 1
  %37 = ptrtoint ptr %num_queue_per_pipe85 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %num_queue_per_pipe85, align 4
  %cmp86 = icmp ult i32 %inc103, %38
  br i1 %cmp86, label %for.inc102.for.cond88.preheader_crit_edge, label %for.inc102.for.inc105_crit_edge

for.inc102.for.inc105_crit_edge:                  ; preds = %for.inc102
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc105

for.inc102.for.cond88.preheader_crit_edge:        ; preds = %for.inc102
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond88.preheader

for.inc105:                                       ; preds = %for.inc102.for.inc105_crit_edge, %for.cond82.preheader.for.inc105_crit_edge
  %ring_id.1.lcssa = phi i32 [ %ring_id.0289, %for.cond82.preheader.for.inc105_crit_edge ], [ %ring_id.2.lcssa, %for.inc102.for.inc105_crit_edge ]
  %inc106 = add nuw i32 %i.0287, 1
  %39 = ptrtoint ptr %num_me81 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %num_me81, align 4
  %cmp = icmp ult i32 %inc106, %40
  br i1 %cmp, label %for.inc105.for.cond82.preheader_crit_edge, label %for.inc105.for.cond108.preheader_crit_edge

for.inc105.for.cond108.preheader_crit_edge:       ; preds = %for.inc105
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond108.preheader

for.inc105.for.cond82.preheader_crit_edge:        ; preds = %for.inc105
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond82.preheader

for.cond114.preheader:                            ; preds = %for.inc140.for.cond114.preheader_crit_edge, %for.cond114.preheader.lr.ph
  %ring_id.4303 = phi i32 [ 0, %for.cond114.preheader.lr.ph ], [ %ring_id.5.lcssa, %for.inc140.for.cond114.preheader_crit_edge ]
  %i.1301 = phi i32 [ 0, %for.cond114.preheader.lr.ph ], [ %inc141, %for.inc140.for.cond114.preheader_crit_edge ]
  %41 = ptrtoint ptr %num_queue_per_pipe117 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %num_queue_per_pipe117, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp118295.not = icmp eq i32 %42, 0
  br i1 %cmp118295.not, label %for.cond114.preheader.for.inc140_crit_edge, label %for.cond114.preheader.for.cond120.preheader_crit_edge

for.cond114.preheader.for.cond120.preheader_crit_edge: ; preds = %for.cond114.preheader
  br label %for.cond120.preheader

for.cond114.preheader.for.inc140_crit_edge:       ; preds = %for.cond114.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc140

for.cond120.preheader:                            ; preds = %for.inc137.for.cond120.preheader_crit_edge, %for.cond114.preheader.for.cond120.preheader_crit_edge
  %ring_id.5298 = phi i32 [ %ring_id.6.lcssa, %for.inc137.for.cond120.preheader_crit_edge ], [ %ring_id.4303, %for.cond114.preheader.for.cond120.preheader_crit_edge ]
  %j.1296 = phi i32 [ %inc138, %for.inc137.for.cond120.preheader_crit_edge ], [ 0, %for.cond114.preheader.for.cond120.preheader_crit_edge ]
  %43 = ptrtoint ptr %num_pipe_per_mec123 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %num_pipe_per_mec123, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp124290.not = icmp eq i32 %44, 0
  br i1 %cmp124290.not, label %for.cond120.preheader.for.inc137_crit_edge, label %for.cond120.preheader.for.body125_crit_edge

for.cond120.preheader.for.body125_crit_edge:      ; preds = %for.cond120.preheader
  br label %for.body125

for.cond120.preheader.for.inc137_crit_edge:       ; preds = %for.cond120.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc137

for.body125:                                      ; preds = %for.inc134.for.body125_crit_edge, %for.cond120.preheader.for.body125_crit_edge
  %ring_id.6293 = phi i32 [ %ring_id.7, %for.inc134.for.body125_crit_edge ], [ %ring_id.5298, %for.cond120.preheader.for.body125_crit_edge ]
  %k.1291 = phi i32 [ %inc135, %for.inc134.for.body125_crit_edge ], [ 0, %for.cond120.preheader.for.body125_crit_edge ]
  %call126 = tail call zeroext i1 @amdgpu_gfx_is_mec_queue_enabled(ptr noundef %handle, i32 noundef %i.1301, i32 noundef %k.1291, i32 noundef %j.1296) #13
  br i1 %call126, label %if.end128, label %for.body125.for.inc134_crit_edge

for.body125.for.inc134_crit_edge:                 ; preds = %for.body125
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc134

if.end128:                                        ; preds = %for.body125
  %call129 = tail call fastcc i32 @gfx_v10_0_compute_ring_init(ptr noundef %handle, i32 noundef %ring_id.6293, i32 noundef %i.1301, i32 noundef %k.1291, i32 noundef %j.1296)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call129)
  %tobool130.not = icmp eq i32 %call129, 0
  br i1 %tobool130.not, label %if.end132, label %if.end128.cleanup_crit_edge

if.end128.cleanup_crit_edge:                      ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end132:                                        ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #15
  %inc133 = add i32 %ring_id.6293, 1
  br label %for.inc134

for.inc134:                                       ; preds = %if.end132, %for.body125.for.inc134_crit_edge
  %ring_id.7 = phi i32 [ %inc133, %if.end132 ], [ %ring_id.6293, %for.body125.for.inc134_crit_edge ]
  %inc135 = add nuw i32 %k.1291, 1
  %45 = ptrtoint ptr %num_pipe_per_mec123 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %num_pipe_per_mec123, align 4
  %cmp124 = icmp ult i32 %inc135, %46
  br i1 %cmp124, label %for.inc134.for.body125_crit_edge, label %for.inc134.for.inc137_crit_edge

for.inc134.for.inc137_crit_edge:                  ; preds = %for.inc134
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc137

for.inc134.for.body125_crit_edge:                 ; preds = %for.inc134
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body125

for.inc137:                                       ; preds = %for.inc134.for.inc137_crit_edge, %for.cond120.preheader.for.inc137_crit_edge
  %ring_id.6.lcssa = phi i32 [ %ring_id.5298, %for.cond120.preheader.for.inc137_crit_edge ], [ %ring_id.7, %for.inc134.for.inc137_crit_edge ]
  %inc138 = add nuw i32 %j.1296, 1
  %47 = ptrtoint ptr %num_queue_per_pipe117 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %num_queue_per_pipe117, align 8
  %cmp118 = icmp ult i32 %inc138, %48
  br i1 %cmp118, label %for.inc137.for.cond120.preheader_crit_edge, label %for.inc137.for.inc140_crit_edge

for.inc137.for.inc140_crit_edge:                  ; preds = %for.inc137
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc140

for.inc137.for.cond120.preheader_crit_edge:       ; preds = %for.inc137
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond120.preheader

for.inc140:                                       ; preds = %for.inc137.for.inc140_crit_edge, %for.cond114.preheader.for.inc140_crit_edge
  %ring_id.5.lcssa = phi i32 [ %ring_id.4303, %for.cond114.preheader.for.inc140_crit_edge ], [ %ring_id.6.lcssa, %for.inc137.for.inc140_crit_edge ]
  %inc141 = add nuw i32 %i.1301, 1
  %49 = ptrtoint ptr %num_mec111 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %num_mec111, align 8
  %cmp112 = icmp ult i32 %inc141, %50
  br i1 %cmp112, label %for.inc140.for.cond114.preheader_crit_edge, label %for.inc140.for.end142_crit_edge

for.inc140.for.end142_crit_edge:                  ; preds = %for.inc140
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end142

for.inc140.for.cond114.preheader_crit_edge:       ; preds = %for.inc140
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond114.preheader

for.end142:                                       ; preds = %for.inc140.for.end142_crit_edge, %for.cond108.preheader.for.end142_crit_edge
  %call143 = tail call i32 @amdgpu_gfx_kiq_init(ptr noundef %handle, i32 noundef 2048) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call143)
  %tobool144.not = icmp eq i32 %call143, 0
  br i1 %tobool144.not, label %if.end146, label %if.then145

if.then145:                                       ; preds = %for.end142
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.43) #13
  br label %cleanup

if.end146:                                        ; preds = %for.end142
  %ring = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3
  %call150 = tail call i32 @amdgpu_gfx_kiq_init_ring(ptr noundef %handle, ptr noundef %ring, ptr noundef %irq) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call150)
  %tobool151.not = icmp eq i32 %call150, 0
  br i1 %tobool151.not, label %if.end153, label %if.end146.cleanup_crit_edge

if.end146.cleanup_crit_edge:                      ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end153:                                        ; preds = %if.end146
  %call154 = tail call i32 @amdgpu_gfx_mqd_sw_init(ptr noundef %handle, i32 noundef 2048) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call154)
  %tobool155.not = icmp eq i32 %call154, 0
  br i1 %tobool155.not, label %if.end157, label %if.end153.cleanup_crit_edge

if.end153.cleanup_crit_edge:                      ; preds = %if.end153
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end157:                                        ; preds = %if.end153
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 112, i32 1
  %51 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %52)
  %cmp158 = icmp eq i32 %52, 3
  br i1 %cmp158, label %if.then159, label %if.end157.if.end164_crit_edge

if.end157.if.end164_crit_edge:                    ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end164

if.then159:                                       ; preds = %if.end157
  %call160 = tail call fastcc i32 @gfx_v10_0_rlc_backdoor_autoload_buffer_init(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call160)
  %tobool161.not = icmp eq i32 %call160, 0
  br i1 %tobool161.not, label %if.then159.if.end164_crit_edge, label %if.then159.cleanup_crit_edge

if.then159.cleanup_crit_edge:                     ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then159.if.end164_crit_edge:                   ; preds = %if.then159
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end164

if.end164:                                        ; preds = %if.then159.if.end164_crit_edge, %if.end157.if.end164_crit_edge
  %ce_ram_size = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 47
  %53 = ptrtoint ptr %ce_ram_size to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 65536, ptr %ce_ram_size, align 4
  tail call fastcc void @gfx_v10_0_gpu_early_init(ptr noundef %handle)
  br label %cleanup

cleanup:                                          ; preds = %if.end164, %if.then159.cleanup_crit_edge, %if.end153.cleanup_crit_edge, %if.end146.cleanup_crit_edge, %if.then145, %if.end128.cleanup_crit_edge, %if.end96.cleanup_crit_edge, %if.then77, %if.then73, %if.end65.cleanup_crit_edge, %if.end60.cleanup_crit_edge, %if.end55.cleanup_crit_edge, %if.end.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge
  %retval.0 = phi i32 [ %call71, %if.then73 ], [ %call75, %if.then77 ], [ %call143, %if.then145 ], [ 0, %if.end164 ], [ %call, %sw.epilog.cleanup_crit_edge ], [ %call52, %if.end.cleanup_crit_edge ], [ %call57, %if.end55.cleanup_crit_edge ], [ %call62, %if.end60.cleanup_crit_edge ], [ %call67, %if.end65.cleanup_crit_edge ], [ %call150, %if.end146.cleanup_crit_edge ], [ %call154, %if.end153.cleanup_crit_edge ], [ %call160, %if.then159.cleanup_crit_edge ], [ %call129, %if.end128.cleanup_crit_edge ], [ %call13.i, %if.end96.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_sw_fini(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %0 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp32.not = icmp eq i32 %1, 0
  br i1 %cmp32.not, label %entry.for.cond2.preheader_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.cond2.preheader_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.body.for.cond2.preheader_crit_edge, %entry.for.cond2.preheader_crit_edge
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 39
  %2 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_compute_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp434.not = icmp eq i32 %3, 0
  br i1 %cmp434.not, label %for.cond2.preheader.for.end10_crit_edge, label %for.cond2.preheader.for.body5_crit_edge

for.cond2.preheader.for.body5_crit_edge:          ; preds = %for.cond2.preheader
  br label %for.body5

for.cond2.preheader.for.end10_crit_edge:          ; preds = %for.cond2.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end10

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.033 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.033
  tail call void @amdgpu_ring_fini(ptr noundef %arrayidx) #13
  %inc = add nuw i32 %i.033, 1
  %4 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_gfx_rings, align 8
  %cmp = icmp ult i32 %inc, %5
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.cond2.preheader_crit_edge

for.body.for.cond2.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond2.preheader

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.body5:                                        ; preds = %for.body5.for.body5_crit_edge, %for.cond2.preheader.for.body5_crit_edge
  %i.135 = phi i32 [ %inc9, %for.body5.for.body5_crit_edge ], [ 0, %for.cond2.preheader.for.body5_crit_edge ]
  %arrayidx7 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.135
  tail call void @amdgpu_ring_fini(ptr noundef %arrayidx7) #13
  %inc9 = add nuw i32 %i.135, 1
  %6 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_compute_rings, align 8
  %cmp4 = icmp ult i32 %inc9, %7
  br i1 %cmp4, label %for.body5.for.body5_crit_edge, label %for.body5.for.end10_crit_edge

for.body5.for.end10_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end10

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body5

for.end10:                                        ; preds = %for.body5.for.end10_crit_edge, %for.cond2.preheader.for.end10_crit_edge
  tail call void @amdgpu_gfx_mqd_sw_fini(ptr noundef %handle) #13
  %ring = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3
  tail call void @amdgpu_gfx_kiq_free_ring(ptr noundef %ring) #13
  tail call void @amdgpu_gfx_kiq_fini(ptr noundef %handle) #13
  %pfp.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 3
  %pfp_fw_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 3, i32 1
  %pfp_fw_ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 3, i32 2
  tail call void @amdgpu_bo_free_kernel(ptr noundef %pfp.i, ptr noundef %pfp_fw_gpu_addr.i, ptr noundef %pfp_fw_ptr.i) #13
  %ce.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 4
  %ce_fw_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 4, i32 1
  %ce_fw_ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 4, i32 2
  tail call void @amdgpu_bo_free_kernel(ptr noundef %ce.i, ptr noundef %ce_fw_gpu_addr.i, ptr noundef %ce_fw_ptr.i) #13
  %me.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5
  %me_fw_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 1
  %me_fw_ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 5, i32 2
  tail call void @amdgpu_bo_free_kernel(ptr noundef %me.i, ptr noundef %me_fw_gpu_addr.i, ptr noundef %me_fw_ptr.i) #13
  %clear_state_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 5
  %clear_state_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 6
  %cs_ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 7
  tail call void @amdgpu_bo_free_kernel(ptr noundef %clear_state_obj.i, ptr noundef %clear_state_gpu_addr.i, ptr noundef %cs_ptr.i) #13
  %cp_table_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 10
  %cp_table_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 11
  %cp_table_ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 12
  tail call void @amdgpu_bo_free_kernel(ptr noundef %cp_table_obj.i, ptr noundef %cp_table_gpu_addr.i, ptr noundef %cp_table_ptr.i) #13
  %mec.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6
  tail call void @amdgpu_bo_free_kernel(ptr noundef %mec.i, ptr noundef null, ptr noundef null) #13
  %mec_fw_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 2
  tail call void @amdgpu_bo_free_kernel(ptr noundef %mec_fw_obj.i, ptr noundef null, ptr noundef null) #13
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 112, i32 1
  %8 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %9)
  %cmp12 = icmp eq i32 %9, 3
  br i1 %cmp12, label %if.then, label %for.end10.if.end_crit_edge

for.end10.if.end_crit_edge:                       ; preds = %for.end10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %for.end10
  call void @__sanitizer_cov_trace_pc() #15
  %rlc_toc_bo.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 42
  %rlc_toc_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 43
  %rlc_toc_buf.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 44
  tail call void @amdgpu_bo_free_kernel(ptr noundef %rlc_toc_bo.i, ptr noundef %rlc_toc_gpu_addr.i, ptr noundef %rlc_toc_buf.i) #13
  %rlc_autoload_bo.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 39
  %rlc_autoload_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 40
  %rlc_autoload_ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 41
  tail call void @amdgpu_bo_free_kernel(ptr noundef %rlc_autoload_bo.i, ptr noundef %rlc_autoload_gpu_addr.i, ptr noundef %rlc_autoload_ptr.i) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end10.if.end_crit_edge
  %pfp_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 11
  %10 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pfp_fw.i, align 4
  tail call void @release_firmware(ptr noundef %11) #13
  %12 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %pfp_fw.i, align 4
  %me_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 9
  %13 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %me_fw.i, align 4
  tail call void @release_firmware(ptr noundef %14) #13
  %15 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %me_fw.i, align 4
  %ce_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 13
  %16 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ce_fw.i, align 4
  tail call void @release_firmware(ptr noundef %17) #13
  %18 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %ce_fw.i, align 4
  %rlc_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 15
  %19 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %rlc_fw.i, align 4
  tail call void @release_firmware(ptr noundef %20) #13
  %21 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %rlc_fw.i, align 4
  %mec_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 17
  %22 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mec_fw.i, align 4
  tail call void @release_firmware(ptr noundef %23) #13
  %24 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %mec_fw.i, align 4
  %mec2_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 19
  %25 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mec2_fw.i, align 4
  tail call void @release_firmware(ptr noundef %26) #13
  %27 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %mec2_fw.i, align 4
  %register_list_format.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 31
  %28 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %register_list_format.i, align 4
  tail call void @kfree(ptr noundef %29) #13
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_hw_init(ptr noundef %handle) #0 align 64 {
entry:
  %disable_masks.i.i = alloca [8 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %0 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %1 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx.i, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.120)
  switch i32 %2, label %if.then.sw.epilog.i_crit_edge [
    i32 655626, label %sw.bb.i
    i32 655617, label %sw.bb2.i
    i32 655618, label %sw.bb3.i
    i32 656128, label %sw.bb4.i
    i32 656130, label %sw.bb5.i
    i32 656129, label %sw.bb6.i
    i32 656131, label %sw.bb7.i
    i32 656132, label %sw.bb8.i
    i32 656133, label %sw.bb9.i
    i32 655619, label %sw.bb10.i
  ]

if.then.sw.epilog.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_1, i32 noundef 40) #13
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_0_nv10, i32 noundef 0) #13
  br label %sw.epilogthread-pre-split.i

sw.bb2.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_1_1, i32 noundef 38) #13
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_1_nv14, i32 noundef 0) #13
  br label %sw.epilogthread-pre-split.i

sw.bb3.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_1_2, i32 noundef 42) #13
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_1_2_nv12, i32 noundef 0) #13
  br label %sw.epilogthread-pre-split.i

sw.bb4.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_3, i32 noundef 43) #13
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_3_sienna_cichlid, i32 noundef 0) #13
  br label %sw.epilogthread-pre-split.i

sw.bb5.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_3_2, i32 noundef 42) #13
  br label %sw.epilogthread-pre-split.i

sw.bb6.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_3_vangogh, i32 noundef 25) #13
  br label %sw.epilogthread-pre-split.i

sw.bb7.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_3_3, i32 noundef 20) #13
  br label %sw.epilogthread-pre-split.i

sw.bb8.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_3_4, i32 noundef 36) #13
  br label %sw.epilogthread-pre-split.i

sw.bb9.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_3_5, i32 noundef 32) #13
  br label %sw.epilogthread-pre-split.i

sw.bb10.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_10_0_cyan_skillfish, i32 noundef 34) #13
  br label %sw.epilogthread-pre-split.i

sw.epilogthread-pre-split.i:                      ; preds = %sw.bb10.i, %sw.bb9.i, %sw.bb8.i, %sw.bb7.i, %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pr.i = load i32, ptr %arrayidx.i, align 4
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.epilogthread-pre-split.i, %if.then.sw.epilog.i_crit_edge
  %5 = phi i32 [ %.pr.i, %sw.epilogthread-pre-split.i ], [ %2, %if.then.sw.epilog.i_crit_edge ]
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.121)
  switch i32 %5, label %sw.epilog.i.if.end_crit_edge [
    i32 655626, label %sw.bb.i.i
    i32 655617, label %sw.bb2.i.i
    i32 655618, label %sw.bb3.i.i
  ]

sw.epilog.i.if.end_crit_edge:                     ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

sw.bb.i.i:                                        ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_rlc_spm_10_0_nv10, i32 noundef 1052) #13
  br label %if.end

sw.bb2.i.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_rlc_spm_10_1_nv14, i32 noundef 620) #13
  br label %if.end

sw.bb3.i.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_rlc_spm_10_1_2_nv12, i32 noundef 1052) #13
  br label %if.end

if.end:                                           ; preds = %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb.i.i, %sw.epilog.i.if.end_crit_edge, %entry.if.end_crit_edge
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 112, i32 1
  %7 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp = icmp eq i32 %8, 0
  br i1 %cmp, label %if.then1, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then1:                                         ; preds = %if.end
  %flags = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 9
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 8
  %and = and i32 %10, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.then3, label %if.then1.if.end7_crit_edge

if.then1.if.end7_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.then3:                                         ; preds = %if.then1
  %call = tail call i32 @amdgpu_pm_load_smu_firmware(ptr noundef %handle, ptr noundef null) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.then3.if.end7_crit_edge, label %if.then3.cleanup_crit_edge

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then3.if.end7_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end7

if.end7:                                          ; preds = %if.then3.if.end7_crit_edge, %if.then1.if.end7_crit_edge
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %11 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %12, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end7.cond.false.i_crit_edge, label %land.lhs.true.i

if.end7.cond.false.i_crit_edge:                   ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %if.end7
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %13 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %14, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %14, i32 0, i32 13
  %15 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool6.not.i = icmp eq ptr %16, null
  br i1 %tobool6.not.i, label %land.lhs.true2.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true2.i.cond.false.i_crit_edge:          ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i69 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %17 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i69, align 8
  %arrayidx12.i = getelementptr i32, ptr %18, i32 1
  %19 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx12.i, align 4
  %add.i = add i32 %20, 23569
  %call.i = tail call i32 %16(ptr noundef %handle, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i

cond.false.i:                                     ; preds = %land.lhs.true2.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %if.end7.cond.false.i_crit_edge
  %arrayidx14.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %21 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx14.i, align 8
  %arrayidx16.i = getelementptr i32, ptr %22, i32 1
  %23 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx16.i, align 4
  %add17.i = add i32 %24, 23569
  %call18.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17.i, i32 noundef 0) #13
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call18.i, %cond.false.i ]
  %or.i = or i32 %cond.i, 8
  %25 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %virt.i, align 8
  %and21.i = and i32 %26, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool22.not.i = icmp eq i32 %and21.i, 0
  br i1 %tobool22.not.i, label %cond.end.i.cond.false43.i_crit_edge, label %land.lhs.true23.i

cond.end.i.cond.false43.i_crit_edge:              ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i

land.lhs.true23.i:                                ; preds = %cond.end.i
  %funcs26.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %27 = ptrtoint ptr %funcs26.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %funcs26.i, align 4
  %tobool27.not.i = icmp eq ptr %28, null
  br i1 %tobool27.not.i, label %land.lhs.true23.i.cond.false43.i_crit_edge, label %land.lhs.true28.i

land.lhs.true23.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i

land.lhs.true28.i:                                ; preds = %land.lhs.true23.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %28, i32 0, i32 12
  %29 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool32.not.i = icmp eq ptr %30, null
  br i1 %tobool32.not.i, label %land.lhs.true28.i.cond.false43.i_crit_edge, label %cond.true33.i

land.lhs.true28.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true28.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i

cond.true33.i:                                    ; preds = %land.lhs.true28.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx39.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %31 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx39.i, align 8
  %arrayidx41.i = getelementptr i32, ptr %32, i32 1
  %33 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx41.i, align 4
  %add42.i = add i32 %34, 23569
  tail call void %30(ptr noundef %handle, i32 noundef %add42.i, i32 noundef %or.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end49.i

cond.false43.i:                                   ; preds = %land.lhs.true28.i.cond.false43.i_crit_edge, %land.lhs.true23.i.cond.false43.i_crit_edge, %cond.end.i.cond.false43.i_crit_edge
  %arrayidx45.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %35 = ptrtoint ptr %arrayidx45.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx45.i, align 8
  %arrayidx47.i = getelementptr i32, ptr %36, i32 1
  %37 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx47.i, align 4
  %add48.i = add i32 %38, 23569
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add48.i, i32 noundef %or.i, i32 noundef 0) #13
  br label %cond.end49.i

cond.end49.i:                                     ; preds = %cond.false43.i, %cond.true33.i
  %39 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %virt.i, align 8
  %and52.i = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52.i)
  %tobool53.not.i = icmp eq i32 %and52.i, 0
  br i1 %tobool53.not.i, label %cond.end49.i.cond.false76.i_crit_edge, label %land.lhs.true54.i

cond.end49.i.cond.false76.i_crit_edge:            ; preds = %cond.end49.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.i

land.lhs.true54.i:                                ; preds = %cond.end49.i
  %funcs57.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %41 = ptrtoint ptr %funcs57.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %funcs57.i, align 4
  %tobool58.not.i = icmp eq ptr %42, null
  br i1 %tobool58.not.i, label %land.lhs.true54.i.cond.false76.i_crit_edge, label %land.lhs.true59.i

land.lhs.true54.i.cond.false76.i_crit_edge:       ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.i

land.lhs.true59.i:                                ; preds = %land.lhs.true54.i
  %sriov_rreg63.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %42, i32 0, i32 13
  %43 = ptrtoint ptr %sriov_rreg63.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %sriov_rreg63.i, align 4
  %tobool64.not.i = icmp eq ptr %44, null
  br i1 %tobool64.not.i, label %land.lhs.true59.i.cond.false76.i_crit_edge, label %cond.true65.i

land.lhs.true59.i.cond.false76.i_crit_edge:       ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.i

cond.true65.i:                                    ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx71.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %45 = ptrtoint ptr %arrayidx71.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx71.i, align 8
  %arrayidx73.i = getelementptr i32, ptr %46, i32 1
  %47 = ptrtoint ptr %arrayidx73.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx73.i, align 4
  %add74.i = add i32 %48, 23568
  %call75.i = tail call i32 %44(ptr noundef %handle, i32 noundef %add74.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end83.i

cond.false76.i:                                   ; preds = %land.lhs.true59.i.cond.false76.i_crit_edge, %land.lhs.true54.i.cond.false76.i_crit_edge, %cond.end49.i.cond.false76.i_crit_edge
  %arrayidx78.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %49 = ptrtoint ptr %arrayidx78.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx78.i, align 8
  %arrayidx80.i = getelementptr i32, ptr %50, i32 1
  %51 = ptrtoint ptr %arrayidx80.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx80.i, align 4
  %add81.i = add i32 %52, 23568
  %call82.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add81.i, i32 noundef 0) #13
  br label %cond.end83.i

cond.end83.i:                                     ; preds = %cond.false76.i, %cond.true65.i
  %cond84.i = phi i32 [ %call75.i, %cond.true65.i ], [ %call82.i, %cond.false76.i ]
  %or85.i = or i32 %cond84.i, 8
  %53 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %virt.i, align 8
  %and88.i = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88.i)
  %tobool89.not.i = icmp eq i32 %and88.i, 0
  br i1 %tobool89.not.i, label %cond.end83.i.cond.false111.i_crit_edge, label %land.lhs.true90.i

cond.end83.i.cond.false111.i_crit_edge:           ; preds = %cond.end83.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false111.i

land.lhs.true90.i:                                ; preds = %cond.end83.i
  %funcs93.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %55 = ptrtoint ptr %funcs93.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %funcs93.i, align 4
  %tobool94.not.i = icmp eq ptr %56, null
  br i1 %tobool94.not.i, label %land.lhs.true90.i.cond.false111.i_crit_edge, label %land.lhs.true95.i

land.lhs.true90.i.cond.false111.i_crit_edge:      ; preds = %land.lhs.true90.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false111.i

land.lhs.true95.i:                                ; preds = %land.lhs.true90.i
  %sriov_wreg99.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %56, i32 0, i32 12
  %57 = ptrtoint ptr %sriov_wreg99.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sriov_wreg99.i, align 4
  %tobool100.not.i = icmp eq ptr %58, null
  br i1 %tobool100.not.i, label %land.lhs.true95.i.cond.false111.i_crit_edge, label %cond.true101.i

land.lhs.true95.i.cond.false111.i_crit_edge:      ; preds = %land.lhs.true95.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false111.i

cond.true101.i:                                   ; preds = %land.lhs.true95.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx107.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %59 = ptrtoint ptr %arrayidx107.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx107.i, align 8
  %arrayidx109.i = getelementptr i32, ptr %60, i32 1
  %61 = ptrtoint ptr %arrayidx109.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx109.i, align 4
  %add110.i = add i32 %62, 23568
  tail call void %58(ptr noundef %handle, i32 noundef %add110.i, i32 noundef %or85.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end8

cond.false111.i:                                  ; preds = %land.lhs.true95.i.cond.false111.i_crit_edge, %land.lhs.true90.i.cond.false111.i_crit_edge, %cond.end83.i.cond.false111.i_crit_edge
  %arrayidx113.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %63 = ptrtoint ptr %arrayidx113.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx113.i, align 8
  %arrayidx115.i = getelementptr i32, ptr %64, i32 1
  %65 = ptrtoint ptr %arrayidx115.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx115.i, align 4
  %add116.i = add i32 %66, 23568
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add116.i, i32 noundef %or85.i, i32 noundef 0) #13
  br label %if.end8

if.end8:                                          ; preds = %cond.false111.i, %cond.true101.i, %if.end.if.end8_crit_edge
  %arrayidx.i70 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %67 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx.i70, align 4
  %69 = zext i32 %68 to i64
  call void @__sanitizer_cov_trace_switch(i64 %69, ptr @__sancov_gen_cov_switch_values.122)
  switch i32 %68, label %sw.default.i [
    i32 656128, label %if.end8.sw.bb.i74_crit_edge
    i32 656130, label %if.end8.sw.bb.i74_crit_edge246
    i32 656132, label %if.end8.sw.bb.i74_crit_edge247
    i32 656133, label %if.end8.sw.bb.i74_crit_edge248
    i32 656129, label %if.end8.if.end11_crit_edge
    i32 656131, label %if.end8.if.end11_crit_edge249
  ]

if.end8.if.end11_crit_edge249:                    ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end11

if.end8.if.end11_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end11

if.end8.sw.bb.i74_crit_edge248:                   ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i74

if.end8.sw.bb.i74_crit_edge247:                   ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i74

if.end8.sw.bb.i74_crit_edge246:                   ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i74

if.end8.sw.bb.i74_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i74

sw.bb.i74:                                        ; preds = %if.end8.sw.bb.i74_crit_edge, %if.end8.sw.bb.i74_crit_edge246, %if.end8.sw.bb.i74_crit_edge247, %if.end8.sw.bb.i74_crit_edge248
  %virt.i71 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %70 = ptrtoint ptr %virt.i71 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %virt.i71, align 8
  %and.i72 = and i32 %71, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i72)
  %tobool.not.i73 = icmp eq i32 %and.i72, 0
  br i1 %tobool.not.i73, label %sw.bb.i74.cond.false.i83_crit_edge, label %land.lhs.true.i76

sw.bb.i74.cond.false.i83_crit_edge:               ; preds = %sw.bb.i74
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i83

land.lhs.true.i76:                                ; preds = %sw.bb.i74
  %funcs.i75 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %72 = ptrtoint ptr %funcs.i75 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %funcs.i75, align 4
  %tobool2.not.i = icmp eq ptr %73, null
  br i1 %tobool2.not.i, label %land.lhs.true.i76.cond.false.i83_crit_edge, label %land.lhs.true3.i

land.lhs.true.i76.cond.false.i83_crit_edge:       ; preds = %land.lhs.true.i76
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i83

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i76
  %sriov_rreg.i77 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %73, i32 0, i32 13
  %74 = ptrtoint ptr %sriov_rreg.i77 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %sriov_rreg.i77, align 4
  %tobool7.not.i = icmp eq ptr %75, null
  br i1 %tobool7.not.i, label %land.lhs.true3.i.cond.false.i83_crit_edge, label %cond.true.i81

land.lhs.true3.i.cond.false.i83_crit_edge:        ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i83

cond.true.i81:                                    ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx12.i78 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %76 = ptrtoint ptr %arrayidx12.i78 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx12.i78, align 8
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %77, align 4
  %add.i79 = add i32 %79, 4033
  %call.i80 = tail call i32 %75(ptr noundef %handle, i32 noundef %add.i79, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i85

cond.false.i83:                                   ; preds = %land.lhs.true3.i.cond.false.i83_crit_edge, %land.lhs.true.i76.cond.false.i83_crit_edge, %sw.bb.i74.cond.false.i83_crit_edge
  %arrayidx16.i82 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %80 = ptrtoint ptr %arrayidx16.i82 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %arrayidx16.i82, align 8
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %81, align 4
  %add19.i = add i32 %83, 4033
  %call20.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add19.i, i32 noundef 0) #13
  br label %cond.end.i85

cond.end.i85:                                     ; preds = %cond.false.i83, %cond.true.i81
  %cond.i84 = phi i32 [ %call.i80, %cond.true.i81 ], [ %call20.i, %cond.false.i83 ]
  %84 = ptrtoint ptr %virt.i71 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %virt.i71, align 8
  %and23.i = and i32 %85, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.not.i = icmp eq i32 %and23.i, 0
  br i1 %tobool24.not.i, label %cond.end.i85.cond.false45.i_crit_edge, label %land.lhs.true25.i

cond.end.i85.cond.false45.i_crit_edge:            ; preds = %cond.end.i85
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45.i

land.lhs.true25.i:                                ; preds = %cond.end.i85
  %funcs28.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %86 = ptrtoint ptr %funcs28.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %funcs28.i, align 4
  %tobool29.not.i = icmp eq ptr %87, null
  br i1 %tobool29.not.i, label %land.lhs.true25.i.cond.false45.i_crit_edge, label %land.lhs.true30.i

land.lhs.true25.i.cond.false45.i_crit_edge:       ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45.i

land.lhs.true30.i:                                ; preds = %land.lhs.true25.i
  %sriov_wreg.i86 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %87, i32 0, i32 12
  %88 = ptrtoint ptr %sriov_wreg.i86 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %sriov_wreg.i86, align 4
  %tobool34.not.i = icmp eq ptr %89, null
  br i1 %tobool34.not.i, label %land.lhs.true30.i.cond.false45.i_crit_edge, label %cond.true35.i

land.lhs.true30.i.cond.false45.i_crit_edge:       ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45.i

cond.true35.i:                                    ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx41.i87 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %90 = ptrtoint ptr %arrayidx41.i87 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %arrayidx41.i87, align 8
  %92 = ptrtoint ptr %91 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %91, align 4
  %add44.i = add i32 %93, 4033
  tail call void %89(ptr noundef %handle, i32 noundef %add44.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end51.i

cond.false45.i:                                   ; preds = %land.lhs.true30.i.cond.false45.i_crit_edge, %land.lhs.true25.i.cond.false45.i_crit_edge, %cond.end.i85.cond.false45.i_crit_edge
  %arrayidx47.i88 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %94 = ptrtoint ptr %arrayidx47.i88 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %arrayidx47.i88, align 8
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %95, align 4
  %add50.i = add i32 %97, 4033
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add50.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end51.i

cond.end51.i:                                     ; preds = %cond.false45.i, %cond.true35.i
  %98 = ptrtoint ptr %virt.i71 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %virt.i71, align 8
  %and54.i = and i32 %99, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and54.i)
  %tobool55.not.i = icmp eq i32 %and54.i, 0
  br i1 %tobool55.not.i, label %cond.end51.i.cond.false77.i_crit_edge, label %land.lhs.true56.i

cond.end51.i.cond.false77.i_crit_edge:            ; preds = %cond.end51.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i

land.lhs.true56.i:                                ; preds = %cond.end51.i
  %funcs59.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %100 = ptrtoint ptr %funcs59.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %funcs59.i, align 4
  %tobool60.not.i = icmp eq ptr %101, null
  br i1 %tobool60.not.i, label %land.lhs.true56.i.cond.false77.i_crit_edge, label %land.lhs.true61.i

land.lhs.true56.i.cond.false77.i_crit_edge:       ; preds = %land.lhs.true56.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i

land.lhs.true61.i:                                ; preds = %land.lhs.true56.i
  %sriov_wreg65.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %101, i32 0, i32 12
  %102 = ptrtoint ptr %sriov_wreg65.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %sriov_wreg65.i, align 4
  %tobool66.not.i = icmp eq ptr %103, null
  br i1 %tobool66.not.i, label %land.lhs.true61.i.cond.false77.i_crit_edge, label %cond.true67.i

land.lhs.true61.i.cond.false77.i_crit_edge:       ; preds = %land.lhs.true61.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i

cond.true67.i:                                    ; preds = %land.lhs.true61.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx73.i89 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %104 = ptrtoint ptr %arrayidx73.i89 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %arrayidx73.i89, align 8
  %arrayidx75.i = getelementptr i32, ptr %105, i32 1
  %106 = ptrtoint ptr %arrayidx75.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx75.i, align 4
  %add76.i = add i32 %107, 8768
  tail call void %103(ptr noundef %handle, i32 noundef %add76.i, i32 noundef -559038737, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end83.i90

cond.false77.i:                                   ; preds = %land.lhs.true61.i.cond.false77.i_crit_edge, %land.lhs.true56.i.cond.false77.i_crit_edge, %cond.end51.i.cond.false77.i_crit_edge
  %arrayidx79.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %108 = ptrtoint ptr %arrayidx79.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %arrayidx79.i, align 8
  %arrayidx81.i = getelementptr i32, ptr %109, i32 1
  %110 = ptrtoint ptr %arrayidx81.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arrayidx81.i, align 4
  %add82.i = add i32 %111, 8768
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add82.i, i32 noundef -559038737, i32 noundef 0) #13
  br label %cond.end83.i90

cond.end83.i90:                                   ; preds = %cond.false77.i, %cond.true67.i
  %112 = ptrtoint ptr %virt.i71 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %virt.i71, align 8
  %and86.i = and i32 %113, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86.i)
  %tobool87.not.i = icmp eq i32 %and86.i, 0
  br i1 %tobool87.not.i, label %cond.end83.i90.cond.false110.i_crit_edge, label %land.lhs.true88.i

cond.end83.i90.cond.false110.i_crit_edge:         ; preds = %cond.end83.i90
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false110.i

land.lhs.true88.i:                                ; preds = %cond.end83.i90
  %funcs91.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %114 = ptrtoint ptr %funcs91.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %funcs91.i, align 4
  %tobool92.not.i = icmp eq ptr %115, null
  br i1 %tobool92.not.i, label %land.lhs.true88.i.cond.false110.i_crit_edge, label %land.lhs.true93.i

land.lhs.true88.i.cond.false110.i_crit_edge:      ; preds = %land.lhs.true88.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false110.i

land.lhs.true93.i:                                ; preds = %land.lhs.true88.i
  %sriov_rreg97.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %115, i32 0, i32 13
  %116 = ptrtoint ptr %sriov_rreg97.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %sriov_rreg97.i, align 4
  %tobool98.not.i = icmp eq ptr %117, null
  br i1 %tobool98.not.i, label %land.lhs.true93.i.cond.false110.i_crit_edge, label %cond.true99.i

land.lhs.true93.i.cond.false110.i_crit_edge:      ; preds = %land.lhs.true93.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false110.i

cond.true99.i:                                    ; preds = %land.lhs.true93.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx105.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %118 = ptrtoint ptr %arrayidx105.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %arrayidx105.i, align 8
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %119, align 4
  %add108.i = add i32 %121, 4033
  %call109.i = tail call i32 %117(ptr noundef %handle, i32 noundef %add108.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end117.i

cond.false110.i:                                  ; preds = %land.lhs.true93.i.cond.false110.i_crit_edge, %land.lhs.true88.i.cond.false110.i_crit_edge, %cond.end83.i90.cond.false110.i_crit_edge
  %arrayidx112.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %122 = ptrtoint ptr %arrayidx112.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %arrayidx112.i, align 8
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %123, align 4
  %add115.i = add i32 %125, 4033
  %call116.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add115.i, i32 noundef 0) #13
  br label %cond.end117.i

cond.end117.i:                                    ; preds = %cond.false110.i, %cond.true99.i
  %cond118.i = phi i32 [ %call109.i, %cond.true99.i ], [ %call116.i, %cond.false110.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -559038737, i32 %cond118.i)
  %cmp.i = icmp eq i32 %cond118.i, -559038737
  %126 = ptrtoint ptr %virt.i71 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %virt.i71, align 8
  %and121.i = and i32 %127, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and121.i)
  %tobool122.not.i = icmp eq i32 %and121.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %cond.end117.i
  br i1 %tobool122.not.i, label %if.then.i.cond.false144.i_crit_edge, label %land.lhs.true123.i

if.then.i.cond.false144.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false144.i

land.lhs.true123.i:                               ; preds = %if.then.i
  %funcs126.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %128 = ptrtoint ptr %funcs126.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %funcs126.i, align 4
  %tobool127.not.i = icmp eq ptr %129, null
  br i1 %tobool127.not.i, label %land.lhs.true123.i.cond.false144.i_crit_edge, label %land.lhs.true128.i

land.lhs.true123.i.cond.false144.i_crit_edge:     ; preds = %land.lhs.true123.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false144.i

land.lhs.true128.i:                               ; preds = %land.lhs.true123.i
  %sriov_wreg132.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %129, i32 0, i32 12
  %130 = ptrtoint ptr %sriov_wreg132.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %sriov_wreg132.i, align 4
  %tobool133.not.i = icmp eq ptr %131, null
  br i1 %tobool133.not.i, label %land.lhs.true128.i.cond.false144.i_crit_edge, label %cond.true134.i

land.lhs.true128.i.cond.false144.i_crit_edge:     ; preds = %land.lhs.true128.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false144.i

cond.true134.i:                                   ; preds = %land.lhs.true128.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx140.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %132 = ptrtoint ptr %arrayidx140.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %arrayidx140.i, align 8
  %arrayidx142.i = getelementptr i32, ptr %133, i32 1
  %134 = ptrtoint ptr %arrayidx142.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %arrayidx142.i, align 4
  %add143.i = add i32 %135, 8768
  tail call void %131(ptr noundef %handle, i32 noundef %add143.i, i32 noundef %cond.i84, i32 noundef 0, i32 noundef 1) #13
  br label %if.end11

cond.false144.i:                                  ; preds = %land.lhs.true128.i.cond.false144.i_crit_edge, %land.lhs.true123.i.cond.false144.i_crit_edge, %if.then.i.cond.false144.i_crit_edge
  %arrayidx146.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %136 = ptrtoint ptr %arrayidx146.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %arrayidx146.i, align 8
  %arrayidx148.i = getelementptr i32, ptr %137, i32 1
  %138 = ptrtoint ptr %arrayidx148.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %arrayidx148.i, align 4
  %add149.i = add i32 %139, 8768
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add149.i, i32 noundef %cond.i84, i32 noundef 0) #13
  br label %if.end11

if.else.i:                                        ; preds = %cond.end117.i
  br i1 %tobool122.not.i, label %if.else.i.cond.false176.i_crit_edge, label %land.lhs.true155.i

if.else.i.cond.false176.i_crit_edge:              ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false176.i

land.lhs.true155.i:                               ; preds = %if.else.i
  %funcs158.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %140 = ptrtoint ptr %funcs158.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %funcs158.i, align 4
  %tobool159.not.i = icmp eq ptr %141, null
  br i1 %tobool159.not.i, label %land.lhs.true155.i.cond.false176.i_crit_edge, label %land.lhs.true160.i

land.lhs.true155.i.cond.false176.i_crit_edge:     ; preds = %land.lhs.true155.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false176.i

land.lhs.true160.i:                               ; preds = %land.lhs.true155.i
  %sriov_wreg164.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %141, i32 0, i32 12
  %142 = ptrtoint ptr %sriov_wreg164.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %sriov_wreg164.i, align 4
  %tobool165.not.i = icmp eq ptr %143, null
  br i1 %tobool165.not.i, label %land.lhs.true160.i.cond.false176.i_crit_edge, label %cond.true166.i

land.lhs.true160.i.cond.false176.i_crit_edge:     ; preds = %land.lhs.true160.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false176.i

cond.true166.i:                                   ; preds = %land.lhs.true160.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx172.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %144 = ptrtoint ptr %arrayidx172.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %arrayidx172.i, align 8
  %146 = ptrtoint ptr %145 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %145, align 4
  %add175.i = add i32 %147, 4033
  tail call void %143(ptr noundef %handle, i32 noundef %add175.i, i32 noundef %cond.i84, i32 noundef 0, i32 noundef 1) #13
  br label %if.then10

cond.false176.i:                                  ; preds = %land.lhs.true160.i.cond.false176.i_crit_edge, %land.lhs.true155.i.cond.false176.i_crit_edge, %if.else.i.cond.false176.i_crit_edge
  %arrayidx178.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %148 = ptrtoint ptr %arrayidx178.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %arrayidx178.i, align 8
  %150 = ptrtoint ptr %149 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %149, align 4
  %add181.i = add i32 %151, 4033
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add181.i, i32 noundef %cond.i84, i32 noundef 0) #13
  br label %if.then10

sw.default.i:                                     ; preds = %if.end8
  %virt184.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %152 = ptrtoint ptr %virt184.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %virt184.i, align 8
  %and186.i = and i32 %153, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and186.i)
  %tobool187.not.i = icmp eq i32 %and186.i, 0
  br i1 %tobool187.not.i, label %sw.default.i.cond.false210.i_crit_edge, label %land.lhs.true188.i

sw.default.i.cond.false210.i_crit_edge:           ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false210.i

land.lhs.true188.i:                               ; preds = %sw.default.i
  %funcs191.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %154 = ptrtoint ptr %funcs191.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %funcs191.i, align 4
  %tobool192.not.i = icmp eq ptr %155, null
  br i1 %tobool192.not.i, label %land.lhs.true188.i.cond.false210.i_crit_edge, label %land.lhs.true193.i

land.lhs.true188.i.cond.false210.i_crit_edge:     ; preds = %land.lhs.true188.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false210.i

land.lhs.true193.i:                               ; preds = %land.lhs.true188.i
  %sriov_rreg197.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %155, i32 0, i32 13
  %156 = ptrtoint ptr %sriov_rreg197.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %sriov_rreg197.i, align 4
  %tobool198.not.i = icmp eq ptr %157, null
  br i1 %tobool198.not.i, label %land.lhs.true193.i.cond.false210.i_crit_edge, label %cond.true199.i

land.lhs.true193.i.cond.false210.i_crit_edge:     ; preds = %land.lhs.true193.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false210.i

cond.true199.i:                                   ; preds = %land.lhs.true193.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx205.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %158 = ptrtoint ptr %arrayidx205.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %arrayidx205.i, align 8
  %160 = ptrtoint ptr %159 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %159, align 4
  %add208.i = add i32 %161, 4050
  %call209.i = tail call i32 %157(ptr noundef %handle, i32 noundef %add208.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end217.i

cond.false210.i:                                  ; preds = %land.lhs.true193.i.cond.false210.i_crit_edge, %land.lhs.true188.i.cond.false210.i_crit_edge, %sw.default.i.cond.false210.i_crit_edge
  %arrayidx212.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %162 = ptrtoint ptr %arrayidx212.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %arrayidx212.i, align 8
  %164 = ptrtoint ptr %163 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %163, align 4
  %add215.i = add i32 %165, 4050
  %call216.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add215.i, i32 noundef 0) #13
  br label %cond.end217.i

cond.end217.i:                                    ; preds = %cond.false210.i, %cond.true199.i
  %cond218.i = phi i32 [ %call209.i, %cond.true199.i ], [ %call216.i, %cond.false210.i ]
  %166 = ptrtoint ptr %virt184.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %virt184.i, align 8
  %and221.i = and i32 %167, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and221.i)
  %tobool222.not.i = icmp eq i32 %and221.i, 0
  br i1 %tobool222.not.i, label %cond.end217.i.cond.false244.i_crit_edge, label %land.lhs.true223.i

cond.end217.i.cond.false244.i_crit_edge:          ; preds = %cond.end217.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false244.i

land.lhs.true223.i:                               ; preds = %cond.end217.i
  %funcs226.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %168 = ptrtoint ptr %funcs226.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %funcs226.i, align 4
  %tobool227.not.i = icmp eq ptr %169, null
  br i1 %tobool227.not.i, label %land.lhs.true223.i.cond.false244.i_crit_edge, label %land.lhs.true228.i

land.lhs.true223.i.cond.false244.i_crit_edge:     ; preds = %land.lhs.true223.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false244.i

land.lhs.true228.i:                               ; preds = %land.lhs.true223.i
  %sriov_wreg232.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %169, i32 0, i32 12
  %170 = ptrtoint ptr %sriov_wreg232.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %sriov_wreg232.i, align 4
  %tobool233.not.i = icmp eq ptr %171, null
  br i1 %tobool233.not.i, label %land.lhs.true228.i.cond.false244.i_crit_edge, label %cond.true234.i

land.lhs.true228.i.cond.false244.i_crit_edge:     ; preds = %land.lhs.true228.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false244.i

cond.true234.i:                                   ; preds = %land.lhs.true228.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx240.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %172 = ptrtoint ptr %arrayidx240.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %arrayidx240.i, align 8
  %174 = ptrtoint ptr %173 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %173, align 4
  %add243.i = add i32 %175, 4050
  tail call void %171(ptr noundef %handle, i32 noundef %add243.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end250.i

cond.false244.i:                                  ; preds = %land.lhs.true228.i.cond.false244.i_crit_edge, %land.lhs.true223.i.cond.false244.i_crit_edge, %cond.end217.i.cond.false244.i_crit_edge
  %arrayidx246.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %176 = ptrtoint ptr %arrayidx246.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %arrayidx246.i, align 8
  %178 = ptrtoint ptr %177 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %177, align 4
  %add249.i = add i32 %179, 4050
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add249.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end250.i

cond.end250.i:                                    ; preds = %cond.false244.i, %cond.true234.i
  %180 = ptrtoint ptr %virt184.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %virt184.i, align 8
  %and253.i = and i32 %181, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and253.i)
  %tobool254.not.i = icmp eq i32 %and253.i, 0
  br i1 %tobool254.not.i, label %cond.end250.i.cond.false276.i_crit_edge, label %land.lhs.true255.i

cond.end250.i.cond.false276.i_crit_edge:          ; preds = %cond.end250.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false276.i

land.lhs.true255.i:                               ; preds = %cond.end250.i
  %funcs258.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %182 = ptrtoint ptr %funcs258.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %funcs258.i, align 4
  %tobool259.not.i = icmp eq ptr %183, null
  br i1 %tobool259.not.i, label %land.lhs.true255.i.cond.false276.i_crit_edge, label %land.lhs.true260.i

land.lhs.true255.i.cond.false276.i_crit_edge:     ; preds = %land.lhs.true255.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false276.i

land.lhs.true260.i:                               ; preds = %land.lhs.true255.i
  %sriov_wreg264.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %183, i32 0, i32 12
  %184 = ptrtoint ptr %sriov_wreg264.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %sriov_wreg264.i, align 4
  %tobool265.not.i = icmp eq ptr %185, null
  br i1 %tobool265.not.i, label %land.lhs.true260.i.cond.false276.i_crit_edge, label %cond.true266.i

land.lhs.true260.i.cond.false276.i_crit_edge:     ; preds = %land.lhs.true260.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false276.i

cond.true266.i:                                   ; preds = %land.lhs.true260.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx272.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %186 = ptrtoint ptr %arrayidx272.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %arrayidx272.i, align 8
  %arrayidx274.i = getelementptr i32, ptr %187, i32 1
  %188 = ptrtoint ptr %arrayidx274.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %arrayidx274.i, align 4
  %add275.i = add i32 %189, 8768
  tail call void %185(ptr noundef %handle, i32 noundef %add275.i, i32 noundef -559038737, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end282.i

cond.false276.i:                                  ; preds = %land.lhs.true260.i.cond.false276.i_crit_edge, %land.lhs.true255.i.cond.false276.i_crit_edge, %cond.end250.i.cond.false276.i_crit_edge
  %arrayidx278.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %190 = ptrtoint ptr %arrayidx278.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %arrayidx278.i, align 8
  %arrayidx280.i = getelementptr i32, ptr %191, i32 1
  %192 = ptrtoint ptr %arrayidx280.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %arrayidx280.i, align 4
  %add281.i = add i32 %193, 8768
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add281.i, i32 noundef -559038737, i32 noundef 0) #13
  br label %cond.end282.i

cond.end282.i:                                    ; preds = %cond.false276.i, %cond.true266.i
  %194 = ptrtoint ptr %virt184.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %virt184.i, align 8
  %and285.i = and i32 %195, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and285.i)
  %tobool286.not.i = icmp eq i32 %and285.i, 0
  br i1 %tobool286.not.i, label %cond.end282.i.cond.false309.i_crit_edge, label %land.lhs.true287.i

cond.end282.i.cond.false309.i_crit_edge:          ; preds = %cond.end282.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false309.i

land.lhs.true287.i:                               ; preds = %cond.end282.i
  %funcs290.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %196 = ptrtoint ptr %funcs290.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %funcs290.i, align 4
  %tobool291.not.i = icmp eq ptr %197, null
  br i1 %tobool291.not.i, label %land.lhs.true287.i.cond.false309.i_crit_edge, label %land.lhs.true292.i

land.lhs.true287.i.cond.false309.i_crit_edge:     ; preds = %land.lhs.true287.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false309.i

land.lhs.true292.i:                               ; preds = %land.lhs.true287.i
  %sriov_rreg296.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %197, i32 0, i32 13
  %198 = ptrtoint ptr %sriov_rreg296.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %sriov_rreg296.i, align 4
  %tobool297.not.i = icmp eq ptr %199, null
  br i1 %tobool297.not.i, label %land.lhs.true292.i.cond.false309.i_crit_edge, label %cond.true298.i

land.lhs.true292.i.cond.false309.i_crit_edge:     ; preds = %land.lhs.true292.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false309.i

cond.true298.i:                                   ; preds = %land.lhs.true292.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx304.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %200 = ptrtoint ptr %arrayidx304.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %arrayidx304.i, align 8
  %202 = ptrtoint ptr %201 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %201, align 4
  %add307.i = add i32 %203, 4050
  %call308.i = tail call i32 %199(ptr noundef %handle, i32 noundef %add307.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end316.i

cond.false309.i:                                  ; preds = %land.lhs.true292.i.cond.false309.i_crit_edge, %land.lhs.true287.i.cond.false309.i_crit_edge, %cond.end282.i.cond.false309.i_crit_edge
  %arrayidx311.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %204 = ptrtoint ptr %arrayidx311.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %arrayidx311.i, align 8
  %206 = ptrtoint ptr %205 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %205, align 4
  %add314.i = add i32 %207, 4050
  %call315.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add314.i, i32 noundef 0) #13
  br label %cond.end316.i

cond.end316.i:                                    ; preds = %cond.false309.i, %cond.true298.i
  %cond317.i = phi i32 [ %call308.i, %cond.true298.i ], [ %call315.i, %cond.false309.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -559038737, i32 %cond317.i)
  %cmp318.i = icmp eq i32 %cond317.i, -559038737
  %208 = ptrtoint ptr %virt184.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %virt184.i, align 8
  %and322.i = and i32 %209, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and322.i)
  %tobool323.not.i = icmp eq i32 %and322.i, 0
  br i1 %cmp318.i, label %if.then319.i, label %if.else352.i

if.then319.i:                                     ; preds = %cond.end316.i
  br i1 %tobool323.not.i, label %if.then319.i.cond.false345.i_crit_edge, label %land.lhs.true324.i

if.then319.i.cond.false345.i_crit_edge:           ; preds = %if.then319.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false345.i

land.lhs.true324.i:                               ; preds = %if.then319.i
  %funcs327.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %210 = ptrtoint ptr %funcs327.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %funcs327.i, align 4
  %tobool328.not.i = icmp eq ptr %211, null
  br i1 %tobool328.not.i, label %land.lhs.true324.i.cond.false345.i_crit_edge, label %land.lhs.true329.i

land.lhs.true324.i.cond.false345.i_crit_edge:     ; preds = %land.lhs.true324.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false345.i

land.lhs.true329.i:                               ; preds = %land.lhs.true324.i
  %sriov_wreg333.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %211, i32 0, i32 12
  %212 = ptrtoint ptr %sriov_wreg333.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %sriov_wreg333.i, align 4
  %tobool334.not.i = icmp eq ptr %213, null
  br i1 %tobool334.not.i, label %land.lhs.true329.i.cond.false345.i_crit_edge, label %cond.true335.i

land.lhs.true329.i.cond.false345.i_crit_edge:     ; preds = %land.lhs.true329.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false345.i

cond.true335.i:                                   ; preds = %land.lhs.true329.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx341.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %214 = ptrtoint ptr %arrayidx341.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %arrayidx341.i, align 8
  %arrayidx343.i = getelementptr i32, ptr %215, i32 1
  %216 = ptrtoint ptr %arrayidx343.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx343.i, align 4
  %add344.i = add i32 %217, 8768
  tail call void %213(ptr noundef %handle, i32 noundef %add344.i, i32 noundef %cond218.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end11

cond.false345.i:                                  ; preds = %land.lhs.true329.i.cond.false345.i_crit_edge, %land.lhs.true324.i.cond.false345.i_crit_edge, %if.then319.i.cond.false345.i_crit_edge
  %arrayidx347.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %218 = ptrtoint ptr %arrayidx347.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %arrayidx347.i, align 8
  %arrayidx349.i = getelementptr i32, ptr %219, i32 1
  %220 = ptrtoint ptr %arrayidx349.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %arrayidx349.i, align 4
  %add350.i = add i32 %221, 8768
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add350.i, i32 noundef %cond218.i, i32 noundef 0) #13
  br label %if.end11

if.else352.i:                                     ; preds = %cond.end316.i
  br i1 %tobool323.not.i, label %if.else352.i.cond.false378.i_crit_edge, label %land.lhs.true357.i

if.else352.i.cond.false378.i_crit_edge:           ; preds = %if.else352.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false378.i

land.lhs.true357.i:                               ; preds = %if.else352.i
  %funcs360.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %222 = ptrtoint ptr %funcs360.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %funcs360.i, align 4
  %tobool361.not.i = icmp eq ptr %223, null
  br i1 %tobool361.not.i, label %land.lhs.true357.i.cond.false378.i_crit_edge, label %land.lhs.true362.i

land.lhs.true357.i.cond.false378.i_crit_edge:     ; preds = %land.lhs.true357.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false378.i

land.lhs.true362.i:                               ; preds = %land.lhs.true357.i
  %sriov_wreg366.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %223, i32 0, i32 12
  %224 = ptrtoint ptr %sriov_wreg366.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %sriov_wreg366.i, align 4
  %tobool367.not.i = icmp eq ptr %225, null
  br i1 %tobool367.not.i, label %land.lhs.true362.i.cond.false378.i_crit_edge, label %cond.true368.i

land.lhs.true362.i.cond.false378.i_crit_edge:     ; preds = %land.lhs.true362.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false378.i

cond.true368.i:                                   ; preds = %land.lhs.true362.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx374.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %226 = ptrtoint ptr %arrayidx374.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %arrayidx374.i, align 8
  %228 = ptrtoint ptr %227 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %227, align 4
  %add377.i = add i32 %229, 4050
  tail call void %225(ptr noundef %handle, i32 noundef %add377.i, i32 noundef %cond218.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.then10

cond.false378.i:                                  ; preds = %land.lhs.true362.i.cond.false378.i_crit_edge, %land.lhs.true357.i.cond.false378.i_crit_edge, %if.else352.i.cond.false378.i_crit_edge
  %arrayidx380.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %230 = ptrtoint ptr %arrayidx380.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %arrayidx380.i, align 8
  %232 = ptrtoint ptr %231 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %231, align 4
  %add383.i = add i32 %233, 4050
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add383.i, i32 noundef %cond218.i, i32 noundef 0) #13
  br label %if.then10

if.then10:                                        ; preds = %cond.false378.i, %cond.true368.i, %cond.false176.i, %cond.true166.i
  %virt.i91 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %234 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %virt.i91, align 8
  %and.i92 = and i32 %235, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i92)
  %tobool.not.i93 = icmp eq i32 %and.i92, 0
  br i1 %tobool.not.i93, label %cond.false.i94, label %if.then10.if.end11_crit_edge

if.then10.if.end11_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end11

cond.false.i94:                                   ; preds = %if.then10
  %arrayidx18.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %236 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx20.i = getelementptr i32, ptr %237, i32 1
  %238 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %arrayidx20.i, align 4
  %add21.i = add i32 %239, 23044
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add21.i, i32 noundef 0, i32 noundef 0) #13
  %240 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %arrayidx.i70, align 4
  %.off.i = add i32 %241, -656128
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 6
  %242 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx27.i = getelementptr i32, ptr %243, i32 1
  %244 = ptrtoint ptr %arrayidx27.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %arrayidx27.i, align 4
  %add28.i = add i32 %245, 8782
  %246 = ptrtoint ptr %243 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %243, align 4
  %add33.i = shl i32 %247, 16
  br i1 %switch.i, label %sw.bb.i96, label %sw.default.i99

sw.bb.i96:                                        ; preds = %cond.false.i94
  %shl34.i = add i32 %add33.i, 264437760
  %or.i95 = or i32 %shl34.i, %add28.i
  %248 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %virt.i91, align 8
  %and37.i = and i32 %249, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37.i)
  %tobool38.not.i = icmp eq i32 %and37.i, 0
  br i1 %tobool38.not.i, label %sw.bb.i96.cond.false60.i_crit_edge, label %land.lhs.true39.i

sw.bb.i96.cond.false60.i_crit_edge:               ; preds = %sw.bb.i96
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false60.i

land.lhs.true39.i:                                ; preds = %sw.bb.i96
  %funcs42.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %250 = ptrtoint ptr %funcs42.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %funcs42.i, align 4
  %tobool43.not.i = icmp eq ptr %251, null
  br i1 %tobool43.not.i, label %land.lhs.true39.i.cond.false60.i_crit_edge, label %land.lhs.true44.i

land.lhs.true39.i.cond.false60.i_crit_edge:       ; preds = %land.lhs.true39.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false60.i

land.lhs.true44.i:                                ; preds = %land.lhs.true39.i
  %sriov_wreg48.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %251, i32 0, i32 12
  %252 = ptrtoint ptr %sriov_wreg48.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %sriov_wreg48.i, align 4
  %tobool49.not.i = icmp eq ptr %253, null
  br i1 %tobool49.not.i, label %land.lhs.true44.i.cond.false60.i_crit_edge, label %cond.true50.i

land.lhs.true44.i.cond.false60.i_crit_edge:       ; preds = %land.lhs.true44.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false60.i

cond.true50.i:                                    ; preds = %land.lhs.true44.i
  call void @__sanitizer_cov_trace_pc() #15
  %add59.i = add i32 %245, 23046
  tail call void %253(ptr noundef %handle, i32 noundef %add59.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end66.i

cond.false60.i:                                   ; preds = %land.lhs.true44.i.cond.false60.i_crit_edge, %land.lhs.true39.i.cond.false60.i_crit_edge, %sw.bb.i96.cond.false60.i_crit_edge
  %add65.i = add i32 %245, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add65.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end66.i

cond.end66.i:                                     ; preds = %cond.false60.i, %cond.true50.i
  %254 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %virt.i91, align 8
  %and69.i = and i32 %255, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69.i)
  %tobool70.not.i = icmp eq i32 %and69.i, 0
  br i1 %tobool70.not.i, label %cond.end66.i.cond.false92.i_crit_edge, label %land.lhs.true71.i

cond.end66.i.cond.false92.i_crit_edge:            ; preds = %cond.end66.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92.i

land.lhs.true71.i:                                ; preds = %cond.end66.i
  %funcs74.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %256 = ptrtoint ptr %funcs74.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %funcs74.i, align 4
  %tobool75.not.i = icmp eq ptr %257, null
  br i1 %tobool75.not.i, label %land.lhs.true71.i.cond.false92.i_crit_edge, label %land.lhs.true76.i

land.lhs.true71.i.cond.false92.i_crit_edge:       ; preds = %land.lhs.true71.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92.i

land.lhs.true76.i:                                ; preds = %land.lhs.true71.i
  %sriov_wreg80.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %257, i32 0, i32 12
  %258 = ptrtoint ptr %sriov_wreg80.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %sriov_wreg80.i, align 4
  %tobool81.not.i = icmp eq ptr %259, null
  br i1 %tobool81.not.i, label %land.lhs.true76.i.cond.false92.i_crit_edge, label %cond.true82.i

land.lhs.true76.i.cond.false92.i_crit_edge:       ; preds = %land.lhs.true76.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92.i

cond.true82.i:                                    ; preds = %land.lhs.true76.i
  call void @__sanitizer_cov_trace_pc() #15
  %260 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx90.i = getelementptr i32, ptr %261, i32 1
  %262 = ptrtoint ptr %arrayidx90.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %arrayidx90.i, align 4
  %add91.i = add i32 %263, 23045
  tail call void %259(ptr noundef %handle, i32 noundef %add91.i, i32 noundef %or.i95, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end98.i

cond.false92.i:                                   ; preds = %land.lhs.true76.i.cond.false92.i_crit_edge, %land.lhs.true71.i.cond.false92.i_crit_edge, %cond.end66.i.cond.false92.i_crit_edge
  %264 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx96.i = getelementptr i32, ptr %265, i32 1
  %266 = ptrtoint ptr %arrayidx96.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %arrayidx96.i, align 4
  %add97.i = add i32 %267, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add97.i, i32 noundef %or.i95, i32 noundef 0) #13
  br label %cond.end98.i

cond.end98.i:                                     ; preds = %cond.false92.i, %cond.true82.i
  %268 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx102.i = getelementptr i32, ptr %269, i32 1
  %270 = ptrtoint ptr %arrayidx102.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %arrayidx102.i, align 4
  %add103.i = add i32 %271, 8784
  %272 = ptrtoint ptr %269 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %269, align 4
  %add109.i = shl i32 %273, 16
  %shl110.i = add i32 %add109.i, 264568832
  %or111.i = or i32 %shl110.i, %add103.i
  %274 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %virt.i91, align 8
  %and114.i = and i32 %275, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and114.i)
  %tobool115.not.i = icmp eq i32 %and114.i, 0
  br i1 %tobool115.not.i, label %cond.end98.i.cond.false137.i_crit_edge, label %land.lhs.true116.i

cond.end98.i.cond.false137.i_crit_edge:           ; preds = %cond.end98.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false137.i

land.lhs.true116.i:                               ; preds = %cond.end98.i
  %funcs119.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %276 = ptrtoint ptr %funcs119.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %funcs119.i, align 4
  %tobool120.not.i = icmp eq ptr %277, null
  br i1 %tobool120.not.i, label %land.lhs.true116.i.cond.false137.i_crit_edge, label %land.lhs.true121.i

land.lhs.true116.i.cond.false137.i_crit_edge:     ; preds = %land.lhs.true116.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false137.i

land.lhs.true121.i:                               ; preds = %land.lhs.true116.i
  %sriov_wreg125.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %277, i32 0, i32 12
  %278 = ptrtoint ptr %sriov_wreg125.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %sriov_wreg125.i, align 4
  %tobool126.not.i = icmp eq ptr %279, null
  br i1 %tobool126.not.i, label %land.lhs.true121.i.cond.false137.i_crit_edge, label %cond.true127.i

land.lhs.true121.i.cond.false137.i_crit_edge:     ; preds = %land.lhs.true121.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false137.i

cond.true127.i:                                   ; preds = %land.lhs.true121.i
  call void @__sanitizer_cov_trace_pc() #15
  %add136.i = add i32 %271, 23046
  tail call void %279(ptr noundef %handle, i32 noundef %add136.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end143.i

cond.false137.i:                                  ; preds = %land.lhs.true121.i.cond.false137.i_crit_edge, %land.lhs.true116.i.cond.false137.i_crit_edge, %cond.end98.i.cond.false137.i_crit_edge
  %add142.i = add i32 %271, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add142.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end143.i

cond.end143.i:                                    ; preds = %cond.false137.i, %cond.true127.i
  %280 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %virt.i91, align 8
  %and146.i = and i32 %281, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and146.i)
  %tobool147.not.i = icmp eq i32 %and146.i, 0
  br i1 %tobool147.not.i, label %cond.end143.i.cond.false169.i_crit_edge, label %land.lhs.true148.i

cond.end143.i.cond.false169.i_crit_edge:          ; preds = %cond.end143.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false169.i

land.lhs.true148.i:                               ; preds = %cond.end143.i
  %funcs151.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %282 = ptrtoint ptr %funcs151.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load ptr, ptr %funcs151.i, align 4
  %tobool152.not.i = icmp eq ptr %283, null
  br i1 %tobool152.not.i, label %land.lhs.true148.i.cond.false169.i_crit_edge, label %land.lhs.true153.i

land.lhs.true148.i.cond.false169.i_crit_edge:     ; preds = %land.lhs.true148.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false169.i

land.lhs.true153.i:                               ; preds = %land.lhs.true148.i
  %sriov_wreg157.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %283, i32 0, i32 12
  %284 = ptrtoint ptr %sriov_wreg157.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %sriov_wreg157.i, align 4
  %tobool158.not.i = icmp eq ptr %285, null
  br i1 %tobool158.not.i, label %land.lhs.true153.i.cond.false169.i_crit_edge, label %cond.true159.i

land.lhs.true153.i.cond.false169.i_crit_edge:     ; preds = %land.lhs.true153.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false169.i

cond.true159.i:                                   ; preds = %land.lhs.true153.i
  call void @__sanitizer_cov_trace_pc() #15
  %286 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx167.i = getelementptr i32, ptr %287, i32 1
  %288 = ptrtoint ptr %arrayidx167.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %arrayidx167.i, align 4
  %add168.i = add i32 %289, 23045
  tail call void %285(ptr noundef %handle, i32 noundef %add168.i, i32 noundef %or111.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end175.i

cond.false169.i:                                  ; preds = %land.lhs.true153.i.cond.false169.i_crit_edge, %land.lhs.true148.i.cond.false169.i_crit_edge, %cond.end143.i.cond.false169.i_crit_edge
  %290 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx173.i = getelementptr i32, ptr %291, i32 1
  %292 = ptrtoint ptr %arrayidx173.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %arrayidx173.i, align 4
  %add174.i = add i32 %293, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add174.i, i32 noundef %or111.i, i32 noundef 0) #13
  br label %cond.end175.i

cond.end175.i:                                    ; preds = %cond.false169.i, %cond.true159.i
  %294 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx179.i = getelementptr i32, ptr %295, i32 1
  %296 = ptrtoint ptr %arrayidx179.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %arrayidx179.i, align 4
  %add180.i = add i32 %297, 8801
  %298 = ptrtoint ptr %295 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %295, align 4
  %add186.i = shl i32 %299, 16
  %shl187.i = add i32 %add186.i, 264634368
  %or188.i = or i32 %shl187.i, %add180.i
  %300 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load i32, ptr %virt.i91, align 8
  %and191.i = and i32 %301, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and191.i)
  %tobool192.not.i97 = icmp eq i32 %and191.i, 0
  br i1 %tobool192.not.i97, label %cond.end175.i.cond.false214.i_crit_edge, label %land.lhs.true193.i98

cond.end175.i.cond.false214.i_crit_edge:          ; preds = %cond.end175.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false214.i

land.lhs.true193.i98:                             ; preds = %cond.end175.i
  %funcs196.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %302 = ptrtoint ptr %funcs196.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %funcs196.i, align 4
  %tobool197.not.i = icmp eq ptr %303, null
  br i1 %tobool197.not.i, label %land.lhs.true193.i98.cond.false214.i_crit_edge, label %land.lhs.true198.i

land.lhs.true193.i98.cond.false214.i_crit_edge:   ; preds = %land.lhs.true193.i98
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false214.i

land.lhs.true198.i:                               ; preds = %land.lhs.true193.i98
  %sriov_wreg202.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %303, i32 0, i32 12
  %304 = ptrtoint ptr %sriov_wreg202.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %sriov_wreg202.i, align 4
  %tobool203.not.i = icmp eq ptr %305, null
  br i1 %tobool203.not.i, label %land.lhs.true198.i.cond.false214.i_crit_edge, label %cond.true204.i

land.lhs.true198.i.cond.false214.i_crit_edge:     ; preds = %land.lhs.true198.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false214.i

cond.true204.i:                                   ; preds = %land.lhs.true198.i
  call void @__sanitizer_cov_trace_pc() #15
  %add213.i = add i32 %297, 23046
  tail call void %305(ptr noundef %handle, i32 noundef %add213.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end220.i

cond.false214.i:                                  ; preds = %land.lhs.true198.i.cond.false214.i_crit_edge, %land.lhs.true193.i98.cond.false214.i_crit_edge, %cond.end175.i.cond.false214.i_crit_edge
  %add219.i = add i32 %297, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add219.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end220.i

cond.end220.i:                                    ; preds = %cond.false214.i, %cond.true204.i
  %306 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %virt.i91, align 8
  %and223.i = and i32 %307, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and223.i)
  %tobool224.not.i = icmp eq i32 %and223.i, 0
  br i1 %tobool224.not.i, label %cond.end220.i.cond.false246.i_crit_edge, label %land.lhs.true225.i

cond.end220.i.cond.false246.i_crit_edge:          ; preds = %cond.end220.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false246.i

land.lhs.true225.i:                               ; preds = %cond.end220.i
  %funcs228.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %308 = ptrtoint ptr %funcs228.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %funcs228.i, align 4
  %tobool229.not.i = icmp eq ptr %309, null
  br i1 %tobool229.not.i, label %land.lhs.true225.i.cond.false246.i_crit_edge, label %land.lhs.true230.i

land.lhs.true225.i.cond.false246.i_crit_edge:     ; preds = %land.lhs.true225.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false246.i

land.lhs.true230.i:                               ; preds = %land.lhs.true225.i
  %sriov_wreg234.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %309, i32 0, i32 12
  %310 = ptrtoint ptr %sriov_wreg234.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %sriov_wreg234.i, align 4
  %tobool235.not.i = icmp eq ptr %311, null
  br i1 %tobool235.not.i, label %land.lhs.true230.i.cond.false246.i_crit_edge, label %cond.true236.i

land.lhs.true230.i.cond.false246.i_crit_edge:     ; preds = %land.lhs.true230.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false246.i

cond.true236.i:                                   ; preds = %land.lhs.true230.i
  call void @__sanitizer_cov_trace_pc() #15
  %312 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx244.i = getelementptr i32, ptr %313, i32 1
  %314 = ptrtoint ptr %arrayidx244.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %arrayidx244.i, align 4
  %add245.i = add i32 %315, 23045
  tail call void %311(ptr noundef %handle, i32 noundef %add245.i, i32 noundef %or188.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end252.i

cond.false246.i:                                  ; preds = %land.lhs.true230.i.cond.false246.i_crit_edge, %land.lhs.true225.i.cond.false246.i_crit_edge, %cond.end220.i.cond.false246.i_crit_edge
  %316 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx250.i = getelementptr i32, ptr %317, i32 1
  %318 = ptrtoint ptr %arrayidx250.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %arrayidx250.i, align 4
  %add251.i = add i32 %319, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add251.i, i32 noundef %or188.i, i32 noundef 0) #13
  br label %cond.end252.i

cond.end252.i:                                    ; preds = %cond.false246.i, %cond.true236.i
  %320 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx256.i = getelementptr i32, ptr %321, i32 1
  %322 = ptrtoint ptr %arrayidx256.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load i32, ptr %arrayidx256.i, align 4
  %add257.i = add i32 %323, 8783
  %324 = ptrtoint ptr %321 to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load i32, ptr %321, align 4
  %add263.i = shl i32 %325, 16
  %shl264.i = add i32 %add263.i, 264503296
  %or265.i = or i32 %shl264.i, %add257.i
  %326 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load i32, ptr %virt.i91, align 8
  %and268.i = and i32 %327, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and268.i)
  %tobool269.not.i = icmp eq i32 %and268.i, 0
  br i1 %tobool269.not.i, label %cond.end252.i.cond.false291.i_crit_edge, label %land.lhs.true270.i

cond.end252.i.cond.false291.i_crit_edge:          ; preds = %cond.end252.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false291.i

land.lhs.true270.i:                               ; preds = %cond.end252.i
  %funcs273.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %328 = ptrtoint ptr %funcs273.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %funcs273.i, align 4
  %tobool274.not.i = icmp eq ptr %329, null
  br i1 %tobool274.not.i, label %land.lhs.true270.i.cond.false291.i_crit_edge, label %land.lhs.true275.i

land.lhs.true270.i.cond.false291.i_crit_edge:     ; preds = %land.lhs.true270.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false291.i

land.lhs.true275.i:                               ; preds = %land.lhs.true270.i
  %sriov_wreg279.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %329, i32 0, i32 12
  %330 = ptrtoint ptr %sriov_wreg279.i to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %sriov_wreg279.i, align 4
  %tobool280.not.i = icmp eq ptr %331, null
  br i1 %tobool280.not.i, label %land.lhs.true275.i.cond.false291.i_crit_edge, label %cond.true281.i

land.lhs.true275.i.cond.false291.i_crit_edge:     ; preds = %land.lhs.true275.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false291.i

cond.true281.i:                                   ; preds = %land.lhs.true275.i
  call void @__sanitizer_cov_trace_pc() #15
  %add290.i = add i32 %323, 23046
  tail call void %331(ptr noundef %handle, i32 noundef %add290.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end297.i

cond.false291.i:                                  ; preds = %land.lhs.true275.i.cond.false291.i_crit_edge, %land.lhs.true270.i.cond.false291.i_crit_edge, %cond.end252.i.cond.false291.i_crit_edge
  %add296.i = add i32 %323, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add296.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end297.i

cond.end297.i:                                    ; preds = %cond.false291.i, %cond.true281.i
  %332 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %virt.i91, align 8
  %and300.i = and i32 %333, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and300.i)
  %tobool301.not.i = icmp eq i32 %and300.i, 0
  br i1 %tobool301.not.i, label %cond.end297.i.cond.false323.i_crit_edge, label %land.lhs.true302.i

cond.end297.i.cond.false323.i_crit_edge:          ; preds = %cond.end297.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false323.i

land.lhs.true302.i:                               ; preds = %cond.end297.i
  %funcs305.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %334 = ptrtoint ptr %funcs305.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %funcs305.i, align 4
  %tobool306.not.i = icmp eq ptr %335, null
  br i1 %tobool306.not.i, label %land.lhs.true302.i.cond.false323.i_crit_edge, label %land.lhs.true307.i

land.lhs.true302.i.cond.false323.i_crit_edge:     ; preds = %land.lhs.true302.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false323.i

land.lhs.true307.i:                               ; preds = %land.lhs.true302.i
  %sriov_wreg311.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %335, i32 0, i32 12
  %336 = ptrtoint ptr %sriov_wreg311.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %sriov_wreg311.i, align 4
  %tobool312.not.i = icmp eq ptr %337, null
  br i1 %tobool312.not.i, label %land.lhs.true307.i.cond.false323.i_crit_edge, label %cond.true313.i

land.lhs.true307.i.cond.false323.i_crit_edge:     ; preds = %land.lhs.true307.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false323.i

cond.true313.i:                                   ; preds = %land.lhs.true307.i
  call void @__sanitizer_cov_trace_pc() #15
  %338 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx321.i = getelementptr i32, ptr %339, i32 1
  %340 = ptrtoint ptr %arrayidx321.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %arrayidx321.i, align 4
  %add322.i = add i32 %341, 23045
  tail call void %337(ptr noundef %handle, i32 noundef %add322.i, i32 noundef %or265.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end329.i

cond.false323.i:                                  ; preds = %land.lhs.true307.i.cond.false323.i_crit_edge, %land.lhs.true302.i.cond.false323.i_crit_edge, %cond.end297.i.cond.false323.i_crit_edge
  %342 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx327.i = getelementptr i32, ptr %343, i32 1
  %344 = ptrtoint ptr %arrayidx327.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %arrayidx327.i, align 4
  %add328.i = add i32 %345, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add328.i, i32 noundef %or265.i, i32 noundef 0) #13
  br label %cond.end329.i

cond.end329.i:                                    ; preds = %cond.false323.i, %cond.true313.i
  %346 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx333.i = getelementptr i32, ptr %347, i32 1
  %348 = ptrtoint ptr %arrayidx333.i to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %arrayidx333.i, align 4
  %add334.i = add i32 %349, 8768
  %350 = ptrtoint ptr %347 to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load i32, ptr %347, align 4
  %add340.i = shl i32 %351, 16
  %shl341.i = add i32 %add340.i, 264306688
  %or342.i = or i32 %shl341.i, %add334.i
  %352 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load i32, ptr %virt.i91, align 8
  %and345.i = and i32 %353, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and345.i)
  %tobool346.not.i = icmp eq i32 %and345.i, 0
  br i1 %tobool346.not.i, label %cond.end329.i.cond.false368.i_crit_edge, label %land.lhs.true347.i

cond.end329.i.cond.false368.i_crit_edge:          ; preds = %cond.end329.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false368.i

land.lhs.true347.i:                               ; preds = %cond.end329.i
  %funcs350.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %354 = ptrtoint ptr %funcs350.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %funcs350.i, align 4
  %tobool351.not.i = icmp eq ptr %355, null
  br i1 %tobool351.not.i, label %land.lhs.true347.i.cond.false368.i_crit_edge, label %land.lhs.true352.i

land.lhs.true347.i.cond.false368.i_crit_edge:     ; preds = %land.lhs.true347.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false368.i

land.lhs.true352.i:                               ; preds = %land.lhs.true347.i
  %sriov_wreg356.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %355, i32 0, i32 12
  %356 = ptrtoint ptr %sriov_wreg356.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load ptr, ptr %sriov_wreg356.i, align 4
  %tobool357.not.i = icmp eq ptr %357, null
  br i1 %tobool357.not.i, label %land.lhs.true352.i.cond.false368.i_crit_edge, label %cond.true358.i

land.lhs.true352.i.cond.false368.i_crit_edge:     ; preds = %land.lhs.true352.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false368.i

cond.true358.i:                                   ; preds = %land.lhs.true352.i
  call void @__sanitizer_cov_trace_pc() #15
  %add367.i = add i32 %349, 23046
  tail call void %357(ptr noundef %handle, i32 noundef %add367.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end374.i

cond.false368.i:                                  ; preds = %land.lhs.true352.i.cond.false368.i_crit_edge, %land.lhs.true347.i.cond.false368.i_crit_edge, %cond.end329.i.cond.false368.i_crit_edge
  %add373.i = add i32 %349, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add373.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end374.i

cond.end374.i:                                    ; preds = %cond.false368.i, %cond.true358.i
  %358 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load i32, ptr %virt.i91, align 8
  %and377.i = and i32 %359, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and377.i)
  %tobool378.not.i = icmp eq i32 %and377.i, 0
  br i1 %tobool378.not.i, label %cond.end374.i.cond.false400.i_crit_edge, label %land.lhs.true379.i

cond.end374.i.cond.false400.i_crit_edge:          ; preds = %cond.end374.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false400.i

land.lhs.true379.i:                               ; preds = %cond.end374.i
  %funcs382.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %360 = ptrtoint ptr %funcs382.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load ptr, ptr %funcs382.i, align 4
  %tobool383.not.i = icmp eq ptr %361, null
  br i1 %tobool383.not.i, label %land.lhs.true379.i.cond.false400.i_crit_edge, label %land.lhs.true384.i

land.lhs.true379.i.cond.false400.i_crit_edge:     ; preds = %land.lhs.true379.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false400.i

land.lhs.true384.i:                               ; preds = %land.lhs.true379.i
  %sriov_wreg388.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %361, i32 0, i32 12
  %362 = ptrtoint ptr %sriov_wreg388.i to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load ptr, ptr %sriov_wreg388.i, align 4
  %tobool389.not.i = icmp eq ptr %363, null
  br i1 %tobool389.not.i, label %land.lhs.true384.i.cond.false400.i_crit_edge, label %cond.true390.i

land.lhs.true384.i.cond.false400.i_crit_edge:     ; preds = %land.lhs.true384.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false400.i

cond.true390.i:                                   ; preds = %land.lhs.true384.i
  call void @__sanitizer_cov_trace_pc() #15
  %364 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx398.i = getelementptr i32, ptr %365, i32 1
  %366 = ptrtoint ptr %arrayidx398.i to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %arrayidx398.i, align 4
  %add399.i = add i32 %367, 23045
  tail call void %363(ptr noundef %handle, i32 noundef %add399.i, i32 noundef %or342.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end406.i

cond.false400.i:                                  ; preds = %land.lhs.true384.i.cond.false400.i_crit_edge, %land.lhs.true379.i.cond.false400.i_crit_edge, %cond.end374.i.cond.false400.i_crit_edge
  %368 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx404.i = getelementptr i32, ptr %369, i32 1
  %370 = ptrtoint ptr %arrayidx404.i to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load i32, ptr %arrayidx404.i, align 4
  %add405.i = add i32 %371, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add405.i, i32 noundef %or342.i, i32 noundef 0) #13
  br label %cond.end406.i

cond.end406.i:                                    ; preds = %cond.false400.i, %cond.true390.i
  %372 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx410.i = getelementptr i32, ptr %373, i32 1
  %374 = ptrtoint ptr %arrayidx410.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %arrayidx410.i, align 4
  %add411.i = add i32 %375, 8769
  %376 = ptrtoint ptr %373 to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load i32, ptr %373, align 4
  %add417.i = shl i32 %377, 16
  %shl418.i = add i32 %add417.i, 264372224
  %or419.i = or i32 %shl418.i, %add411.i
  %378 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load i32, ptr %virt.i91, align 8
  %and422.i = and i32 %379, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and422.i)
  %tobool423.not.i = icmp eq i32 %and422.i, 0
  br i1 %tobool423.not.i, label %cond.end406.i.cond.false445.i_crit_edge, label %land.lhs.true424.i

cond.end406.i.cond.false445.i_crit_edge:          ; preds = %cond.end406.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false445.i

land.lhs.true424.i:                               ; preds = %cond.end406.i
  %funcs427.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %380 = ptrtoint ptr %funcs427.i to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load ptr, ptr %funcs427.i, align 4
  %tobool428.not.i = icmp eq ptr %381, null
  br i1 %tobool428.not.i, label %land.lhs.true424.i.cond.false445.i_crit_edge, label %land.lhs.true429.i

land.lhs.true424.i.cond.false445.i_crit_edge:     ; preds = %land.lhs.true424.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false445.i

land.lhs.true429.i:                               ; preds = %land.lhs.true424.i
  %sriov_wreg433.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %381, i32 0, i32 12
  %382 = ptrtoint ptr %sriov_wreg433.i to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %sriov_wreg433.i, align 4
  %tobool434.not.i = icmp eq ptr %383, null
  br i1 %tobool434.not.i, label %land.lhs.true429.i.cond.false445.i_crit_edge, label %cond.true435.i

land.lhs.true429.i.cond.false445.i_crit_edge:     ; preds = %land.lhs.true429.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false445.i

cond.true435.i:                                   ; preds = %land.lhs.true429.i
  call void @__sanitizer_cov_trace_pc() #15
  %add444.i = add i32 %375, 23046
  tail call void %383(ptr noundef %handle, i32 noundef %add444.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end451.i

cond.false445.i:                                  ; preds = %land.lhs.true429.i.cond.false445.i_crit_edge, %land.lhs.true424.i.cond.false445.i_crit_edge, %cond.end406.i.cond.false445.i_crit_edge
  %add450.i = add i32 %375, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add450.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end451.i

cond.end451.i:                                    ; preds = %cond.false445.i, %cond.true435.i
  %384 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load i32, ptr %virt.i91, align 8
  %and454.i = and i32 %385, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and454.i)
  %tobool455.not.i = icmp eq i32 %and454.i, 0
  br i1 %tobool455.not.i, label %cond.end451.i.cond.false477.i_crit_edge, label %land.lhs.true456.i

cond.end451.i.cond.false477.i_crit_edge:          ; preds = %cond.end451.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false477.i

land.lhs.true456.i:                               ; preds = %cond.end451.i
  %funcs459.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %386 = ptrtoint ptr %funcs459.i to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load ptr, ptr %funcs459.i, align 4
  %tobool460.not.i = icmp eq ptr %387, null
  br i1 %tobool460.not.i, label %land.lhs.true456.i.cond.false477.i_crit_edge, label %land.lhs.true461.i

land.lhs.true456.i.cond.false477.i_crit_edge:     ; preds = %land.lhs.true456.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false477.i

land.lhs.true461.i:                               ; preds = %land.lhs.true456.i
  %sriov_wreg465.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %387, i32 0, i32 12
  %388 = ptrtoint ptr %sriov_wreg465.i to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load ptr, ptr %sriov_wreg465.i, align 4
  %tobool466.not.i = icmp eq ptr %389, null
  br i1 %tobool466.not.i, label %land.lhs.true461.i.cond.false477.i_crit_edge, label %cond.true467.i

land.lhs.true461.i.cond.false477.i_crit_edge:     ; preds = %land.lhs.true461.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false477.i

cond.true467.i:                                   ; preds = %land.lhs.true461.i
  call void @__sanitizer_cov_trace_pc() #15
  %390 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx475.i = getelementptr i32, ptr %391, i32 1
  %392 = ptrtoint ptr %arrayidx475.i to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %arrayidx475.i, align 4
  %add476.i = add i32 %393, 23045
  tail call void %389(ptr noundef %handle, i32 noundef %add476.i, i32 noundef %or419.i, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog.i100

cond.false477.i:                                  ; preds = %land.lhs.true461.i.cond.false477.i_crit_edge, %land.lhs.true456.i.cond.false477.i_crit_edge, %cond.end451.i.cond.false477.i_crit_edge
  %394 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx481.i = getelementptr i32, ptr %395, i32 1
  %396 = ptrtoint ptr %arrayidx481.i to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load i32, ptr %arrayidx481.i, align 4
  %add482.i = add i32 %397, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add482.i, i32 noundef %or419.i, i32 noundef 0) #13
  br label %sw.epilog.i100

sw.default.i99:                                   ; preds = %cond.false.i94
  %shl508.i = add i32 %add33.i, 268566528
  %or509.i = or i32 %shl508.i, %add28.i
  %398 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load i32, ptr %virt.i91, align 8
  %and512.i = and i32 %399, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and512.i)
  %tobool513.not.i = icmp eq i32 %and512.i, 0
  br i1 %tobool513.not.i, label %sw.default.i99.cond.false535.i_crit_edge, label %land.lhs.true514.i

sw.default.i99.cond.false535.i_crit_edge:         ; preds = %sw.default.i99
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false535.i

land.lhs.true514.i:                               ; preds = %sw.default.i99
  %funcs517.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %400 = ptrtoint ptr %funcs517.i to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load ptr, ptr %funcs517.i, align 4
  %tobool518.not.i = icmp eq ptr %401, null
  br i1 %tobool518.not.i, label %land.lhs.true514.i.cond.false535.i_crit_edge, label %land.lhs.true519.i

land.lhs.true514.i.cond.false535.i_crit_edge:     ; preds = %land.lhs.true514.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false535.i

land.lhs.true519.i:                               ; preds = %land.lhs.true514.i
  %sriov_wreg523.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %401, i32 0, i32 12
  %402 = ptrtoint ptr %sriov_wreg523.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load ptr, ptr %sriov_wreg523.i, align 4
  %tobool524.not.i = icmp eq ptr %403, null
  br i1 %tobool524.not.i, label %land.lhs.true519.i.cond.false535.i_crit_edge, label %cond.true525.i

land.lhs.true519.i.cond.false535.i_crit_edge:     ; preds = %land.lhs.true519.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false535.i

cond.true525.i:                                   ; preds = %land.lhs.true519.i
  call void @__sanitizer_cov_trace_pc() #15
  %add534.i = add i32 %245, 23046
  tail call void %403(ptr noundef %handle, i32 noundef %add534.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end541.i

cond.false535.i:                                  ; preds = %land.lhs.true519.i.cond.false535.i_crit_edge, %land.lhs.true514.i.cond.false535.i_crit_edge, %sw.default.i99.cond.false535.i_crit_edge
  %add540.i = add i32 %245, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add540.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end541.i

cond.end541.i:                                    ; preds = %cond.false535.i, %cond.true525.i
  %404 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %virt.i91, align 8
  %and544.i = and i32 %405, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and544.i)
  %tobool545.not.i = icmp eq i32 %and544.i, 0
  br i1 %tobool545.not.i, label %cond.end541.i.cond.false567.i_crit_edge, label %land.lhs.true546.i

cond.end541.i.cond.false567.i_crit_edge:          ; preds = %cond.end541.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false567.i

land.lhs.true546.i:                               ; preds = %cond.end541.i
  %funcs549.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %406 = ptrtoint ptr %funcs549.i to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %funcs549.i, align 4
  %tobool550.not.i = icmp eq ptr %407, null
  br i1 %tobool550.not.i, label %land.lhs.true546.i.cond.false567.i_crit_edge, label %land.lhs.true551.i

land.lhs.true546.i.cond.false567.i_crit_edge:     ; preds = %land.lhs.true546.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false567.i

land.lhs.true551.i:                               ; preds = %land.lhs.true546.i
  %sriov_wreg555.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %407, i32 0, i32 12
  %408 = ptrtoint ptr %sriov_wreg555.i to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %sriov_wreg555.i, align 4
  %tobool556.not.i = icmp eq ptr %409, null
  br i1 %tobool556.not.i, label %land.lhs.true551.i.cond.false567.i_crit_edge, label %cond.true557.i

land.lhs.true551.i.cond.false567.i_crit_edge:     ; preds = %land.lhs.true551.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false567.i

cond.true557.i:                                   ; preds = %land.lhs.true551.i
  call void @__sanitizer_cov_trace_pc() #15
  %410 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx565.i = getelementptr i32, ptr %411, i32 1
  %412 = ptrtoint ptr %arrayidx565.i to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load i32, ptr %arrayidx565.i, align 4
  %add566.i = add i32 %413, 23045
  tail call void %409(ptr noundef %handle, i32 noundef %add566.i, i32 noundef %or509.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end573.i

cond.false567.i:                                  ; preds = %land.lhs.true551.i.cond.false567.i_crit_edge, %land.lhs.true546.i.cond.false567.i_crit_edge, %cond.end541.i.cond.false567.i_crit_edge
  %414 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx571.i = getelementptr i32, ptr %415, i32 1
  %416 = ptrtoint ptr %arrayidx571.i to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load i32, ptr %arrayidx571.i, align 4
  %add572.i = add i32 %417, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add572.i, i32 noundef %or509.i, i32 noundef 0) #13
  br label %cond.end573.i

cond.end573.i:                                    ; preds = %cond.false567.i, %cond.true557.i
  %418 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx577.i = getelementptr i32, ptr %419, i32 1
  %420 = ptrtoint ptr %arrayidx577.i to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load i32, ptr %arrayidx577.i, align 4
  %add578.i = add i32 %421, 8784
  %422 = ptrtoint ptr %419 to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load i32, ptr %419, align 4
  %add584.i = shl i32 %423, 16
  %shl585.i = add i32 %add584.i, 269352960
  %or586.i = or i32 %shl585.i, %add578.i
  %424 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load i32, ptr %virt.i91, align 8
  %and589.i = and i32 %425, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and589.i)
  %tobool590.not.i = icmp eq i32 %and589.i, 0
  br i1 %tobool590.not.i, label %cond.end573.i.cond.false612.i_crit_edge, label %land.lhs.true591.i

cond.end573.i.cond.false612.i_crit_edge:          ; preds = %cond.end573.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false612.i

land.lhs.true591.i:                               ; preds = %cond.end573.i
  %funcs594.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %426 = ptrtoint ptr %funcs594.i to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load ptr, ptr %funcs594.i, align 4
  %tobool595.not.i = icmp eq ptr %427, null
  br i1 %tobool595.not.i, label %land.lhs.true591.i.cond.false612.i_crit_edge, label %land.lhs.true596.i

land.lhs.true591.i.cond.false612.i_crit_edge:     ; preds = %land.lhs.true591.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false612.i

land.lhs.true596.i:                               ; preds = %land.lhs.true591.i
  %sriov_wreg600.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %427, i32 0, i32 12
  %428 = ptrtoint ptr %sriov_wreg600.i to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load ptr, ptr %sriov_wreg600.i, align 4
  %tobool601.not.i = icmp eq ptr %429, null
  br i1 %tobool601.not.i, label %land.lhs.true596.i.cond.false612.i_crit_edge, label %cond.true602.i

land.lhs.true596.i.cond.false612.i_crit_edge:     ; preds = %land.lhs.true596.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false612.i

cond.true602.i:                                   ; preds = %land.lhs.true596.i
  call void @__sanitizer_cov_trace_pc() #15
  %add611.i = add i32 %421, 23046
  tail call void %429(ptr noundef %handle, i32 noundef %add611.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end618.i

cond.false612.i:                                  ; preds = %land.lhs.true596.i.cond.false612.i_crit_edge, %land.lhs.true591.i.cond.false612.i_crit_edge, %cond.end573.i.cond.false612.i_crit_edge
  %add617.i = add i32 %421, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add617.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end618.i

cond.end618.i:                                    ; preds = %cond.false612.i, %cond.true602.i
  %430 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %virt.i91, align 8
  %and621.i = and i32 %431, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and621.i)
  %tobool622.not.i = icmp eq i32 %and621.i, 0
  br i1 %tobool622.not.i, label %cond.end618.i.cond.false644.i_crit_edge, label %land.lhs.true623.i

cond.end618.i.cond.false644.i_crit_edge:          ; preds = %cond.end618.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false644.i

land.lhs.true623.i:                               ; preds = %cond.end618.i
  %funcs626.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %432 = ptrtoint ptr %funcs626.i to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load ptr, ptr %funcs626.i, align 4
  %tobool627.not.i = icmp eq ptr %433, null
  br i1 %tobool627.not.i, label %land.lhs.true623.i.cond.false644.i_crit_edge, label %land.lhs.true628.i

land.lhs.true623.i.cond.false644.i_crit_edge:     ; preds = %land.lhs.true623.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false644.i

land.lhs.true628.i:                               ; preds = %land.lhs.true623.i
  %sriov_wreg632.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %433, i32 0, i32 12
  %434 = ptrtoint ptr %sriov_wreg632.i to i32
  call void @__asan_load4_noabort(i32 %434)
  %435 = load ptr, ptr %sriov_wreg632.i, align 4
  %tobool633.not.i = icmp eq ptr %435, null
  br i1 %tobool633.not.i, label %land.lhs.true628.i.cond.false644.i_crit_edge, label %cond.true634.i

land.lhs.true628.i.cond.false644.i_crit_edge:     ; preds = %land.lhs.true628.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false644.i

cond.true634.i:                                   ; preds = %land.lhs.true628.i
  call void @__sanitizer_cov_trace_pc() #15
  %436 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %436)
  %437 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx642.i = getelementptr i32, ptr %437, i32 1
  %438 = ptrtoint ptr %arrayidx642.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %arrayidx642.i, align 4
  %add643.i = add i32 %439, 23045
  tail call void %435(ptr noundef %handle, i32 noundef %add643.i, i32 noundef %or586.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end650.i

cond.false644.i:                                  ; preds = %land.lhs.true628.i.cond.false644.i_crit_edge, %land.lhs.true623.i.cond.false644.i_crit_edge, %cond.end618.i.cond.false644.i_crit_edge
  %440 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx648.i = getelementptr i32, ptr %441, i32 1
  %442 = ptrtoint ptr %arrayidx648.i to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load i32, ptr %arrayidx648.i, align 4
  %add649.i = add i32 %443, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add649.i, i32 noundef %or586.i, i32 noundef 0) #13
  br label %cond.end650.i

cond.end650.i:                                    ; preds = %cond.false644.i, %cond.true634.i
  %444 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx654.i = getelementptr i32, ptr %445, i32 1
  %446 = ptrtoint ptr %arrayidx654.i to i32
  call void @__asan_load4_noabort(i32 %446)
  %447 = load i32, ptr %arrayidx654.i, align 4
  %add655.i = add i32 %447, 8801
  %448 = ptrtoint ptr %445 to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load i32, ptr %445, align 4
  %add661.i = shl i32 %449, 16
  %shl662.i = add i32 %add661.i, 270008320
  %or663.i = or i32 %shl662.i, %add655.i
  %450 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load i32, ptr %virt.i91, align 8
  %and666.i = and i32 %451, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and666.i)
  %tobool667.not.i = icmp eq i32 %and666.i, 0
  br i1 %tobool667.not.i, label %cond.end650.i.cond.false689.i_crit_edge, label %land.lhs.true668.i

cond.end650.i.cond.false689.i_crit_edge:          ; preds = %cond.end650.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false689.i

land.lhs.true668.i:                               ; preds = %cond.end650.i
  %funcs671.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %452 = ptrtoint ptr %funcs671.i to i32
  call void @__asan_load4_noabort(i32 %452)
  %453 = load ptr, ptr %funcs671.i, align 4
  %tobool672.not.i = icmp eq ptr %453, null
  br i1 %tobool672.not.i, label %land.lhs.true668.i.cond.false689.i_crit_edge, label %land.lhs.true673.i

land.lhs.true668.i.cond.false689.i_crit_edge:     ; preds = %land.lhs.true668.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false689.i

land.lhs.true673.i:                               ; preds = %land.lhs.true668.i
  %sriov_wreg677.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %453, i32 0, i32 12
  %454 = ptrtoint ptr %sriov_wreg677.i to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load ptr, ptr %sriov_wreg677.i, align 4
  %tobool678.not.i = icmp eq ptr %455, null
  br i1 %tobool678.not.i, label %land.lhs.true673.i.cond.false689.i_crit_edge, label %cond.true679.i

land.lhs.true673.i.cond.false689.i_crit_edge:     ; preds = %land.lhs.true673.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false689.i

cond.true679.i:                                   ; preds = %land.lhs.true673.i
  call void @__sanitizer_cov_trace_pc() #15
  %add688.i = add i32 %447, 23046
  tail call void %455(ptr noundef %handle, i32 noundef %add688.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end695.i

cond.false689.i:                                  ; preds = %land.lhs.true673.i.cond.false689.i_crit_edge, %land.lhs.true668.i.cond.false689.i_crit_edge, %cond.end650.i.cond.false689.i_crit_edge
  %add694.i = add i32 %447, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add694.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end695.i

cond.end695.i:                                    ; preds = %cond.false689.i, %cond.true679.i
  %456 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load i32, ptr %virt.i91, align 8
  %and698.i = and i32 %457, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and698.i)
  %tobool699.not.i = icmp eq i32 %and698.i, 0
  br i1 %tobool699.not.i, label %cond.end695.i.cond.false721.i_crit_edge, label %land.lhs.true700.i

cond.end695.i.cond.false721.i_crit_edge:          ; preds = %cond.end695.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false721.i

land.lhs.true700.i:                               ; preds = %cond.end695.i
  %funcs703.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %458 = ptrtoint ptr %funcs703.i to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load ptr, ptr %funcs703.i, align 4
  %tobool704.not.i = icmp eq ptr %459, null
  br i1 %tobool704.not.i, label %land.lhs.true700.i.cond.false721.i_crit_edge, label %land.lhs.true705.i

land.lhs.true700.i.cond.false721.i_crit_edge:     ; preds = %land.lhs.true700.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false721.i

land.lhs.true705.i:                               ; preds = %land.lhs.true700.i
  %sriov_wreg709.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %459, i32 0, i32 12
  %460 = ptrtoint ptr %sriov_wreg709.i to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load ptr, ptr %sriov_wreg709.i, align 4
  %tobool710.not.i = icmp eq ptr %461, null
  br i1 %tobool710.not.i, label %land.lhs.true705.i.cond.false721.i_crit_edge, label %cond.true711.i

land.lhs.true705.i.cond.false721.i_crit_edge:     ; preds = %land.lhs.true705.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false721.i

cond.true711.i:                                   ; preds = %land.lhs.true705.i
  call void @__sanitizer_cov_trace_pc() #15
  %462 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx719.i = getelementptr i32, ptr %463, i32 1
  %464 = ptrtoint ptr %arrayidx719.i to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %arrayidx719.i, align 4
  %add720.i = add i32 %465, 23045
  tail call void %461(ptr noundef %handle, i32 noundef %add720.i, i32 noundef %or663.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end727.i

cond.false721.i:                                  ; preds = %land.lhs.true705.i.cond.false721.i_crit_edge, %land.lhs.true700.i.cond.false721.i_crit_edge, %cond.end695.i.cond.false721.i_crit_edge
  %466 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx725.i = getelementptr i32, ptr %467, i32 1
  %468 = ptrtoint ptr %arrayidx725.i to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load i32, ptr %arrayidx725.i, align 4
  %add726.i = add i32 %469, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add726.i, i32 noundef %or663.i, i32 noundef 0) #13
  br label %cond.end727.i

cond.end727.i:                                    ; preds = %cond.false721.i, %cond.true711.i
  %470 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx731.i = getelementptr i32, ptr %471, i32 1
  %472 = ptrtoint ptr %arrayidx731.i to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %arrayidx731.i, align 4
  %add732.i = add i32 %473, 8783
  %474 = ptrtoint ptr %471 to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load i32, ptr %471, align 4
  %add738.i = shl i32 %475, 16
  %shl739.i = add i32 %add738.i, 269221888
  %or740.i = or i32 %shl739.i, %add732.i
  %476 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %476)
  %477 = load i32, ptr %virt.i91, align 8
  %and743.i = and i32 %477, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and743.i)
  %tobool744.not.i = icmp eq i32 %and743.i, 0
  br i1 %tobool744.not.i, label %cond.end727.i.cond.false766.i_crit_edge, label %land.lhs.true745.i

cond.end727.i.cond.false766.i_crit_edge:          ; preds = %cond.end727.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false766.i

land.lhs.true745.i:                               ; preds = %cond.end727.i
  %funcs748.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %478 = ptrtoint ptr %funcs748.i to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load ptr, ptr %funcs748.i, align 4
  %tobool749.not.i = icmp eq ptr %479, null
  br i1 %tobool749.not.i, label %land.lhs.true745.i.cond.false766.i_crit_edge, label %land.lhs.true750.i

land.lhs.true745.i.cond.false766.i_crit_edge:     ; preds = %land.lhs.true745.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false766.i

land.lhs.true750.i:                               ; preds = %land.lhs.true745.i
  %sriov_wreg754.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %479, i32 0, i32 12
  %480 = ptrtoint ptr %sriov_wreg754.i to i32
  call void @__asan_load4_noabort(i32 %480)
  %481 = load ptr, ptr %sriov_wreg754.i, align 4
  %tobool755.not.i = icmp eq ptr %481, null
  br i1 %tobool755.not.i, label %land.lhs.true750.i.cond.false766.i_crit_edge, label %cond.true756.i

land.lhs.true750.i.cond.false766.i_crit_edge:     ; preds = %land.lhs.true750.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false766.i

cond.true756.i:                                   ; preds = %land.lhs.true750.i
  call void @__sanitizer_cov_trace_pc() #15
  %add765.i = add i32 %473, 23046
  tail call void %481(ptr noundef %handle, i32 noundef %add765.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end772.i

cond.false766.i:                                  ; preds = %land.lhs.true750.i.cond.false766.i_crit_edge, %land.lhs.true745.i.cond.false766.i_crit_edge, %cond.end727.i.cond.false766.i_crit_edge
  %add771.i = add i32 %473, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add771.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end772.i

cond.end772.i:                                    ; preds = %cond.false766.i, %cond.true756.i
  %482 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %482)
  %483 = load i32, ptr %virt.i91, align 8
  %and775.i = and i32 %483, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and775.i)
  %tobool776.not.i = icmp eq i32 %and775.i, 0
  br i1 %tobool776.not.i, label %cond.end772.i.cond.false798.i_crit_edge, label %land.lhs.true777.i

cond.end772.i.cond.false798.i_crit_edge:          ; preds = %cond.end772.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false798.i

land.lhs.true777.i:                               ; preds = %cond.end772.i
  %funcs780.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %484 = ptrtoint ptr %funcs780.i to i32
  call void @__asan_load4_noabort(i32 %484)
  %485 = load ptr, ptr %funcs780.i, align 4
  %tobool781.not.i = icmp eq ptr %485, null
  br i1 %tobool781.not.i, label %land.lhs.true777.i.cond.false798.i_crit_edge, label %land.lhs.true782.i

land.lhs.true777.i.cond.false798.i_crit_edge:     ; preds = %land.lhs.true777.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false798.i

land.lhs.true782.i:                               ; preds = %land.lhs.true777.i
  %sriov_wreg786.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %485, i32 0, i32 12
  %486 = ptrtoint ptr %sriov_wreg786.i to i32
  call void @__asan_load4_noabort(i32 %486)
  %487 = load ptr, ptr %sriov_wreg786.i, align 4
  %tobool787.not.i = icmp eq ptr %487, null
  br i1 %tobool787.not.i, label %land.lhs.true782.i.cond.false798.i_crit_edge, label %cond.true788.i

land.lhs.true782.i.cond.false798.i_crit_edge:     ; preds = %land.lhs.true782.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false798.i

cond.true788.i:                                   ; preds = %land.lhs.true782.i
  call void @__sanitizer_cov_trace_pc() #15
  %488 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %488)
  %489 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx796.i = getelementptr i32, ptr %489, i32 1
  %490 = ptrtoint ptr %arrayidx796.i to i32
  call void @__asan_load4_noabort(i32 %490)
  %491 = load i32, ptr %arrayidx796.i, align 4
  %add797.i = add i32 %491, 23045
  tail call void %487(ptr noundef %handle, i32 noundef %add797.i, i32 noundef %or740.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end804.i

cond.false798.i:                                  ; preds = %land.lhs.true782.i.cond.false798.i_crit_edge, %land.lhs.true777.i.cond.false798.i_crit_edge, %cond.end772.i.cond.false798.i_crit_edge
  %492 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %492)
  %493 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx802.i = getelementptr i32, ptr %493, i32 1
  %494 = ptrtoint ptr %arrayidx802.i to i32
  call void @__asan_load4_noabort(i32 %494)
  %495 = load i32, ptr %arrayidx802.i, align 4
  %add803.i = add i32 %495, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add803.i, i32 noundef %or740.i, i32 noundef 0) #13
  br label %cond.end804.i

cond.end804.i:                                    ; preds = %cond.false798.i, %cond.true788.i
  %496 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx808.i = getelementptr i32, ptr %497, i32 1
  %498 = ptrtoint ptr %arrayidx808.i to i32
  call void @__asan_load4_noabort(i32 %498)
  %499 = load i32, ptr %arrayidx808.i, align 4
  %add809.i = add i32 %499, 8768
  %500 = ptrtoint ptr %497 to i32
  call void @__asan_load4_noabort(i32 %500)
  %501 = load i32, ptr %497, align 4
  %add815.i = shl i32 %501, 16
  %shl816.i = add i32 %add815.i, 265420800
  %or817.i = or i32 %shl816.i, %add809.i
  %502 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %502)
  %503 = load i32, ptr %virt.i91, align 8
  %and820.i = and i32 %503, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and820.i)
  %tobool821.not.i = icmp eq i32 %and820.i, 0
  br i1 %tobool821.not.i, label %cond.end804.i.cond.false843.i_crit_edge, label %land.lhs.true822.i

cond.end804.i.cond.false843.i_crit_edge:          ; preds = %cond.end804.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false843.i

land.lhs.true822.i:                               ; preds = %cond.end804.i
  %funcs825.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %504 = ptrtoint ptr %funcs825.i to i32
  call void @__asan_load4_noabort(i32 %504)
  %505 = load ptr, ptr %funcs825.i, align 4
  %tobool826.not.i = icmp eq ptr %505, null
  br i1 %tobool826.not.i, label %land.lhs.true822.i.cond.false843.i_crit_edge, label %land.lhs.true827.i

land.lhs.true822.i.cond.false843.i_crit_edge:     ; preds = %land.lhs.true822.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false843.i

land.lhs.true827.i:                               ; preds = %land.lhs.true822.i
  %sriov_wreg831.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %505, i32 0, i32 12
  %506 = ptrtoint ptr %sriov_wreg831.i to i32
  call void @__asan_load4_noabort(i32 %506)
  %507 = load ptr, ptr %sriov_wreg831.i, align 4
  %tobool832.not.i = icmp eq ptr %507, null
  br i1 %tobool832.not.i, label %land.lhs.true827.i.cond.false843.i_crit_edge, label %cond.true833.i

land.lhs.true827.i.cond.false843.i_crit_edge:     ; preds = %land.lhs.true827.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false843.i

cond.true833.i:                                   ; preds = %land.lhs.true827.i
  call void @__sanitizer_cov_trace_pc() #15
  %add842.i = add i32 %499, 23046
  tail call void %507(ptr noundef %handle, i32 noundef %add842.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end849.i

cond.false843.i:                                  ; preds = %land.lhs.true827.i.cond.false843.i_crit_edge, %land.lhs.true822.i.cond.false843.i_crit_edge, %cond.end804.i.cond.false843.i_crit_edge
  %add848.i = add i32 %499, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add848.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end849.i

cond.end849.i:                                    ; preds = %cond.false843.i, %cond.true833.i
  %508 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %508)
  %509 = load i32, ptr %virt.i91, align 8
  %and852.i = and i32 %509, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and852.i)
  %tobool853.not.i = icmp eq i32 %and852.i, 0
  br i1 %tobool853.not.i, label %cond.end849.i.cond.false875.i_crit_edge, label %land.lhs.true854.i

cond.end849.i.cond.false875.i_crit_edge:          ; preds = %cond.end849.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false875.i

land.lhs.true854.i:                               ; preds = %cond.end849.i
  %funcs857.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %510 = ptrtoint ptr %funcs857.i to i32
  call void @__asan_load4_noabort(i32 %510)
  %511 = load ptr, ptr %funcs857.i, align 4
  %tobool858.not.i = icmp eq ptr %511, null
  br i1 %tobool858.not.i, label %land.lhs.true854.i.cond.false875.i_crit_edge, label %land.lhs.true859.i

land.lhs.true854.i.cond.false875.i_crit_edge:     ; preds = %land.lhs.true854.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false875.i

land.lhs.true859.i:                               ; preds = %land.lhs.true854.i
  %sriov_wreg863.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %511, i32 0, i32 12
  %512 = ptrtoint ptr %sriov_wreg863.i to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load ptr, ptr %sriov_wreg863.i, align 4
  %tobool864.not.i = icmp eq ptr %513, null
  br i1 %tobool864.not.i, label %land.lhs.true859.i.cond.false875.i_crit_edge, label %cond.true865.i

land.lhs.true859.i.cond.false875.i_crit_edge:     ; preds = %land.lhs.true859.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false875.i

cond.true865.i:                                   ; preds = %land.lhs.true859.i
  call void @__sanitizer_cov_trace_pc() #15
  %514 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %514)
  %515 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx873.i = getelementptr i32, ptr %515, i32 1
  %516 = ptrtoint ptr %arrayidx873.i to i32
  call void @__asan_load4_noabort(i32 %516)
  %517 = load i32, ptr %arrayidx873.i, align 4
  %add874.i = add i32 %517, 23045
  tail call void %513(ptr noundef %handle, i32 noundef %add874.i, i32 noundef %or817.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end881.i

cond.false875.i:                                  ; preds = %land.lhs.true859.i.cond.false875.i_crit_edge, %land.lhs.true854.i.cond.false875.i_crit_edge, %cond.end849.i.cond.false875.i_crit_edge
  %518 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %518)
  %519 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx879.i = getelementptr i32, ptr %519, i32 1
  %520 = ptrtoint ptr %arrayidx879.i to i32
  call void @__asan_load4_noabort(i32 %520)
  %521 = load i32, ptr %arrayidx879.i, align 4
  %add880.i = add i32 %521, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add880.i, i32 noundef %or817.i, i32 noundef 0) #13
  br label %cond.end881.i

cond.end881.i:                                    ; preds = %cond.false875.i, %cond.true865.i
  %522 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %522)
  %523 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx885.i = getelementptr i32, ptr %523, i32 1
  %524 = ptrtoint ptr %arrayidx885.i to i32
  call void @__asan_load4_noabort(i32 %524)
  %525 = load i32, ptr %arrayidx885.i, align 4
  %add886.i = add i32 %525, 8769
  %526 = ptrtoint ptr %523 to i32
  call void @__asan_load4_noabort(i32 %526)
  %527 = load i32, ptr %523, align 4
  %add892.i = shl i32 %527, 16
  %shl893.i = add i32 %add892.i, 265486336
  %or894.i = or i32 %shl893.i, %add886.i
  %528 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %528)
  %529 = load i32, ptr %virt.i91, align 8
  %and897.i = and i32 %529, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and897.i)
  %tobool898.not.i = icmp eq i32 %and897.i, 0
  br i1 %tobool898.not.i, label %cond.end881.i.cond.false920.i_crit_edge, label %land.lhs.true899.i

cond.end881.i.cond.false920.i_crit_edge:          ; preds = %cond.end881.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false920.i

land.lhs.true899.i:                               ; preds = %cond.end881.i
  %funcs902.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %530 = ptrtoint ptr %funcs902.i to i32
  call void @__asan_load4_noabort(i32 %530)
  %531 = load ptr, ptr %funcs902.i, align 4
  %tobool903.not.i = icmp eq ptr %531, null
  br i1 %tobool903.not.i, label %land.lhs.true899.i.cond.false920.i_crit_edge, label %land.lhs.true904.i

land.lhs.true899.i.cond.false920.i_crit_edge:     ; preds = %land.lhs.true899.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false920.i

land.lhs.true904.i:                               ; preds = %land.lhs.true899.i
  %sriov_wreg908.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %531, i32 0, i32 12
  %532 = ptrtoint ptr %sriov_wreg908.i to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load ptr, ptr %sriov_wreg908.i, align 4
  %tobool909.not.i = icmp eq ptr %533, null
  br i1 %tobool909.not.i, label %land.lhs.true904.i.cond.false920.i_crit_edge, label %cond.true910.i

land.lhs.true904.i.cond.false920.i_crit_edge:     ; preds = %land.lhs.true904.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false920.i

cond.true910.i:                                   ; preds = %land.lhs.true904.i
  call void @__sanitizer_cov_trace_pc() #15
  %add919.i = add i32 %525, 23046
  tail call void %533(ptr noundef %handle, i32 noundef %add919.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end926.i

cond.false920.i:                                  ; preds = %land.lhs.true904.i.cond.false920.i_crit_edge, %land.lhs.true899.i.cond.false920.i_crit_edge, %cond.end881.i.cond.false920.i_crit_edge
  %add925.i = add i32 %525, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add925.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end926.i

cond.end926.i:                                    ; preds = %cond.false920.i, %cond.true910.i
  %534 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load i32, ptr %virt.i91, align 8
  %and929.i = and i32 %535, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and929.i)
  %tobool930.not.i = icmp eq i32 %and929.i, 0
  br i1 %tobool930.not.i, label %cond.end926.i.cond.false952.i_crit_edge, label %land.lhs.true931.i

cond.end926.i.cond.false952.i_crit_edge:          ; preds = %cond.end926.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false952.i

land.lhs.true931.i:                               ; preds = %cond.end926.i
  %funcs934.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %536 = ptrtoint ptr %funcs934.i to i32
  call void @__asan_load4_noabort(i32 %536)
  %537 = load ptr, ptr %funcs934.i, align 4
  %tobool935.not.i = icmp eq ptr %537, null
  br i1 %tobool935.not.i, label %land.lhs.true931.i.cond.false952.i_crit_edge, label %land.lhs.true936.i

land.lhs.true931.i.cond.false952.i_crit_edge:     ; preds = %land.lhs.true931.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false952.i

land.lhs.true936.i:                               ; preds = %land.lhs.true931.i
  %sriov_wreg940.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %537, i32 0, i32 12
  %538 = ptrtoint ptr %sriov_wreg940.i to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load ptr, ptr %sriov_wreg940.i, align 4
  %tobool941.not.i = icmp eq ptr %539, null
  br i1 %tobool941.not.i, label %land.lhs.true936.i.cond.false952.i_crit_edge, label %cond.true942.i

land.lhs.true936.i.cond.false952.i_crit_edge:     ; preds = %land.lhs.true936.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false952.i

cond.true942.i:                                   ; preds = %land.lhs.true936.i
  call void @__sanitizer_cov_trace_pc() #15
  %540 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx950.i = getelementptr i32, ptr %541, i32 1
  %542 = ptrtoint ptr %arrayidx950.i to i32
  call void @__asan_load4_noabort(i32 %542)
  %543 = load i32, ptr %arrayidx950.i, align 4
  %add951.i = add i32 %543, 23045
  tail call void %539(ptr noundef %handle, i32 noundef %add951.i, i32 noundef %or894.i, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog.i100

cond.false952.i:                                  ; preds = %land.lhs.true936.i.cond.false952.i_crit_edge, %land.lhs.true931.i.cond.false952.i_crit_edge, %cond.end926.i.cond.false952.i_crit_edge
  %544 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %544)
  %545 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx956.i = getelementptr i32, ptr %545, i32 1
  %546 = ptrtoint ptr %arrayidx956.i to i32
  call void @__asan_load4_noabort(i32 %546)
  %547 = load i32, ptr %arrayidx956.i, align 4
  %add957.i = add i32 %547, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add957.i, i32 noundef %or894.i, i32 noundef 0) #13
  br label %sw.epilog.i100

sw.epilog.i100:                                   ; preds = %cond.false952.i, %cond.true942.i, %cond.false477.i, %cond.true467.i
  %.sink.i = phi i32 [ 300679168, %cond.false477.i ], [ 300679168, %cond.true467.i ], [ 299892736, %cond.false952.i ], [ 299892736, %cond.true942.i ]
  %548 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %548)
  %549 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx962.i = getelementptr i32, ptr %549, i32 1
  %550 = ptrtoint ptr %arrayidx962.i to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load i32, ptr %arrayidx962.i, align 4
  %add963.i = add i32 %551, 9280
  %552 = ptrtoint ptr %549 to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load i32, ptr %549, align 4
  %add969.i = shl i32 %553, 16
  %shl970.i = add i32 %add969.i, %.sink.i
  %or971.i = or i32 %shl970.i, %add963.i
  %554 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %554)
  %555 = load i32, ptr %virt.i91, align 8
  %and974.i = and i32 %555, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and974.i)
  %tobool975.not.i = icmp eq i32 %and974.i, 0
  br i1 %tobool975.not.i, label %sw.epilog.i100.cond.false997.i_crit_edge, label %land.lhs.true976.i

sw.epilog.i100.cond.false997.i_crit_edge:         ; preds = %sw.epilog.i100
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false997.i

land.lhs.true976.i:                               ; preds = %sw.epilog.i100
  %funcs979.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %556 = ptrtoint ptr %funcs979.i to i32
  call void @__asan_load4_noabort(i32 %556)
  %557 = load ptr, ptr %funcs979.i, align 4
  %tobool980.not.i = icmp eq ptr %557, null
  br i1 %tobool980.not.i, label %land.lhs.true976.i.cond.false997.i_crit_edge, label %land.lhs.true981.i

land.lhs.true976.i.cond.false997.i_crit_edge:     ; preds = %land.lhs.true976.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false997.i

land.lhs.true981.i:                               ; preds = %land.lhs.true976.i
  %sriov_wreg985.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %557, i32 0, i32 12
  %558 = ptrtoint ptr %sriov_wreg985.i to i32
  call void @__asan_load4_noabort(i32 %558)
  %559 = load ptr, ptr %sriov_wreg985.i, align 4
  %tobool986.not.i = icmp eq ptr %559, null
  br i1 %tobool986.not.i, label %land.lhs.true981.i.cond.false997.i_crit_edge, label %cond.true987.i

land.lhs.true981.i.cond.false997.i_crit_edge:     ; preds = %land.lhs.true981.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false997.i

cond.true987.i:                                   ; preds = %land.lhs.true981.i
  call void @__sanitizer_cov_trace_pc() #15
  %add996.i = add i32 %551, 23046
  tail call void %559(ptr noundef %handle, i32 noundef %add996.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end1003.i

cond.false997.i:                                  ; preds = %land.lhs.true981.i.cond.false997.i_crit_edge, %land.lhs.true976.i.cond.false997.i_crit_edge, %sw.epilog.i100.cond.false997.i_crit_edge
  %add1002.i = add i32 %551, 23046
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add1002.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end1003.i

cond.end1003.i:                                   ; preds = %cond.false997.i, %cond.true987.i
  %560 = ptrtoint ptr %virt.i91 to i32
  call void @__asan_load4_noabort(i32 %560)
  %561 = load i32, ptr %virt.i91, align 8
  %and1006.i = and i32 %561, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1006.i)
  %tobool1007.not.i = icmp eq i32 %and1006.i, 0
  br i1 %tobool1007.not.i, label %cond.end1003.i.cond.false1029.i_crit_edge, label %land.lhs.true1008.i

cond.end1003.i.cond.false1029.i_crit_edge:        ; preds = %cond.end1003.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1029.i

land.lhs.true1008.i:                              ; preds = %cond.end1003.i
  %funcs1011.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %562 = ptrtoint ptr %funcs1011.i to i32
  call void @__asan_load4_noabort(i32 %562)
  %563 = load ptr, ptr %funcs1011.i, align 4
  %tobool1012.not.i = icmp eq ptr %563, null
  br i1 %tobool1012.not.i, label %land.lhs.true1008.i.cond.false1029.i_crit_edge, label %land.lhs.true1013.i

land.lhs.true1008.i.cond.false1029.i_crit_edge:   ; preds = %land.lhs.true1008.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1029.i

land.lhs.true1013.i:                              ; preds = %land.lhs.true1008.i
  %sriov_wreg1017.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %563, i32 0, i32 12
  %564 = ptrtoint ptr %sriov_wreg1017.i to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load ptr, ptr %sriov_wreg1017.i, align 4
  %tobool1018.not.i = icmp eq ptr %565, null
  br i1 %tobool1018.not.i, label %land.lhs.true1013.i.cond.false1029.i_crit_edge, label %cond.true1019.i

land.lhs.true1013.i.cond.false1029.i_crit_edge:   ; preds = %land.lhs.true1013.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1029.i

cond.true1019.i:                                  ; preds = %land.lhs.true1013.i
  call void @__sanitizer_cov_trace_pc() #15
  %566 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %566)
  %567 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx1027.i = getelementptr i32, ptr %567, i32 1
  %568 = ptrtoint ptr %arrayidx1027.i to i32
  call void @__asan_load4_noabort(i32 %568)
  %569 = load i32, ptr %arrayidx1027.i, align 4
  %add1028.i = add i32 %569, 23045
  tail call void %565(ptr noundef %handle, i32 noundef %add1028.i, i32 noundef %or971.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end11

cond.false1029.i:                                 ; preds = %land.lhs.true1013.i.cond.false1029.i_crit_edge, %land.lhs.true1008.i.cond.false1029.i_crit_edge, %cond.end1003.i.cond.false1029.i_crit_edge
  %570 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load ptr, ptr %arrayidx18.i, align 8
  %arrayidx1033.i = getelementptr i32, ptr %571, i32 1
  %572 = ptrtoint ptr %arrayidx1033.i to i32
  call void @__asan_load4_noabort(i32 %572)
  %573 = load i32, ptr %arrayidx1033.i, align 4
  %add1034.i = add i32 %573, 23045
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add1034.i, i32 noundef %or971.i, i32 noundef 0) #13
  br label %if.end11

if.end11:                                         ; preds = %cond.false1029.i, %cond.true1019.i, %if.then10.if.end11_crit_edge, %cond.false345.i, %cond.true335.i, %cond.false144.i, %cond.true134.i, %if.end8.if.end11_crit_edge, %if.end8.if.end11_crit_edge249
  %virt.i101 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %574 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load i32, ptr %virt.i101, align 8
  %and.i102 = and i32 %575, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i102)
  %tobool.not.i103 = icmp eq i32 %and.i102, 0
  br i1 %tobool.not.i103, label %if.end11.cond.false76.sink.split.i_crit_edge, label %land.lhs.true.i106

if.end11.cond.false76.sink.split.i_crit_edge:     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.sink.split.i

land.lhs.true.i106:                               ; preds = %if.end11
  %funcs.i104 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %576 = ptrtoint ptr %funcs.i104 to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load ptr, ptr %funcs.i104, align 4
  %tobool1.not.i105 = icmp eq ptr %577, null
  br i1 %tobool1.not.i105, label %land.lhs.true.i106.cond.false76.sink.split.i_crit_edge, label %land.lhs.true2.i109

land.lhs.true.i106.cond.false76.sink.split.i_crit_edge: ; preds = %land.lhs.true.i106
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.sink.split.i

land.lhs.true2.i109:                              ; preds = %land.lhs.true.i106
  %sriov_wreg.i107 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %577, i32 0, i32 12
  %578 = ptrtoint ptr %sriov_wreg.i107 to i32
  call void @__asan_load4_noabort(i32 %578)
  %579 = load ptr, ptr %sriov_wreg.i107, align 4
  %tobool6.not.i108 = icmp eq ptr %579, null
  %arrayidx46408.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %580 = ptrtoint ptr %arrayidx46408.i to i32
  call void @__asan_load4_noabort(i32 %580)
  %581 = load ptr, ptr %arrayidx46408.i, align 8
  %582 = ptrtoint ptr %581 to i32
  call void @__asan_load4_noabort(i32 %582)
  %583 = load i32, ptr %581, align 4
  %add49409.i = add i32 %583, 3488
  %sriov_rreg63.i122 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %577, i32 0, i32 13
  %584 = ptrtoint ptr %sriov_rreg63.i122 to i32
  call void @__asan_load4_noabort(i32 %584)
  %585 = load ptr, ptr %sriov_rreg63.i122, align 4
  %tobool64.not.i123 = icmp eq ptr %585, null
  br i1 %tobool6.not.i108, label %land.lhs.true59.i124, label %cond.true.i113

cond.true.i113:                                   ; preds = %land.lhs.true2.i109
  br i1 %tobool64.not.i123, label %cond.false.i115, label %cond.true27.i

cond.true27.i:                                    ; preds = %cond.true.i113
  call void @__sanitizer_cov_trace_pc() #15
  %call.i114 = tail call i32 %585(ptr noundef %handle, i32 noundef %add49409.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i118

cond.false.i115:                                  ; preds = %cond.true.i113
  call void @__sanitizer_cov_trace_pc() #15
  %call42.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add49409.i, i32 noundef 0) #13
  br label %cond.end.i118

cond.end.i118:                                    ; preds = %cond.false.i115, %cond.true27.i
  %cond.i116 = phi i32 [ %call.i114, %cond.true27.i ], [ %call42.i, %cond.false.i115 ]
  %or.i117 = or i32 %cond.i116, 255
  tail call void %579(ptr noundef %handle, i32 noundef %add49409.i, i32 noundef %or.i117, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end87.i

land.lhs.true59.i124:                             ; preds = %land.lhs.true2.i109
  br i1 %tobool64.not.i123, label %land.lhs.true59.i124.cond.false76.i128_crit_edge, label %cond.true65.i126

land.lhs.true59.i124.cond.false76.i128_crit_edge: ; preds = %land.lhs.true59.i124
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.i128

cond.true65.i126:                                 ; preds = %land.lhs.true59.i124
  call void @__sanitizer_cov_trace_pc() #15
  %call75.i125 = tail call i32 %585(ptr noundef %handle, i32 noundef %add49409.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end83.i130

cond.false76.sink.split.i:                        ; preds = %land.lhs.true.i106.cond.false76.sink.split.i_crit_edge, %if.end11.cond.false76.sink.split.i_crit_edge
  %arrayidx46408415.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %586 = ptrtoint ptr %arrayidx46408415.i to i32
  call void @__asan_load4_noabort(i32 %586)
  %587 = load ptr, ptr %arrayidx46408415.i, align 8
  %588 = ptrtoint ptr %587 to i32
  call void @__asan_load4_noabort(i32 %588)
  %589 = load i32, ptr %587, align 4
  %add49409416.i = add i32 %589, 3488
  br label %cond.false76.i128

cond.false76.i128:                                ; preds = %cond.false76.sink.split.i, %land.lhs.true59.i124.cond.false76.i128_crit_edge
  %add49412.i = phi i32 [ %add49409.i, %land.lhs.true59.i124.cond.false76.i128_crit_edge ], [ %add49409416.i, %cond.false76.sink.split.i ]
  %call82.i127 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add49412.i, i32 noundef 0) #13
  br label %cond.end83.i130

cond.end83.i130:                                  ; preds = %cond.false76.i128, %cond.true65.i126
  %add49410.i = phi i32 [ %add49409.i, %cond.true65.i126 ], [ %add49412.i, %cond.false76.i128 ]
  %cond84.i129 = phi i32 [ %call75.i125, %cond.true65.i126 ], [ %call82.i127, %cond.false76.i128 ]
  %or86.i = or i32 %cond84.i129, 255
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add49410.i, i32 noundef %or86.i, i32 noundef 0) #13
  br label %cond.end87.i

cond.end87.i:                                     ; preds = %cond.end83.i130, %cond.end.i118
  %config.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1
  %max_backends_per_se.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 4
  %590 = ptrtoint ptr %max_backends_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %590)
  %591 = load i32, ptr %max_backends_per_se.i.i, align 8
  %max_sh_per_se.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 3
  %592 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %592)
  %593 = load i32, ptr %max_sh_per_se.i.i, align 4
  %div.i.i = udiv i32 %591, %593
  %grbm_idx_mutex.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i.i, i32 noundef 0) #13
  %594 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %594)
  %595 = load i32, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %595)
  %cmp402.not.i.i = icmp eq i32 %595, 0
  br i1 %cmp402.not.i.i, label %cond.end87.i.for.end29.i.i_crit_edge, label %for.cond5.preheader.lr.ph.i.i

cond.end87.i.for.end29.i.i_crit_edge:             ; preds = %cond.end87.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end29.i.i

for.cond5.preheader.lr.ph.i.i:                    ; preds = %cond.end87.i
  %funcs.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.cond5.preheader.i.i

for.cond5.preheader.i.i:                          ; preds = %for.inc27.i.i.for.cond5.preheader.i.i_crit_edge, %for.cond5.preheader.lr.ph.i.i
  %active_rbs.0405.i.i = phi i32 [ 0, %for.cond5.preheader.lr.ph.i.i ], [ %active_rbs.1.lcssa.i.i, %for.inc27.i.i.for.cond5.preheader.i.i_crit_edge ]
  %i.0403.i.i = phi i32 [ 0, %for.cond5.preheader.lr.ph.i.i ], [ %inc28.i.i, %for.inc27.i.i.for.cond5.preheader.i.i_crit_edge ]
  %596 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %596)
  %597 = load i32, ptr %max_sh_per_se.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %597)
  %cmp9398.not.i.i = icmp eq i32 %597, 0
  br i1 %cmp9398.not.i.i, label %for.cond5.preheader.i.i.for.inc27.i.i_crit_edge, label %for.body10.lr.ph.i.i

for.cond5.preheader.i.i.for.inc27.i.i_crit_edge:  ; preds = %for.cond5.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc27.i.i

for.body10.lr.ph.i.i:                             ; preds = %for.cond5.preheader.i.i
  %shl7.i.i.i = shl i32 %i.0403.i.i, 16
  %and8.i.i.i = and i32 %shl7.i.i.i, 16711680
  br label %for.body10.i.i

for.body10.i.i:                                   ; preds = %for.inc.i.i.for.body10.i.i_crit_edge, %for.body10.lr.ph.i.i
  %598 = phi i32 [ %597, %for.body10.lr.ph.i.i ], [ %621, %for.inc.i.i.for.body10.i.i_crit_edge ]
  %active_rbs.1401.i.i = phi i32 [ %active_rbs.0405.i.i, %for.body10.lr.ph.i.i ], [ %active_rbs.2.i.i, %for.inc.i.i.for.body10.i.i_crit_edge ]
  %j.0399.i.i = phi i32 [ 0, %for.body10.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body10.i.i_crit_edge ]
  %599 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %599)
  %600 = load i32, ptr %arrayidx.i70, align 4
  %601 = zext i32 %600 to i64
  call void @__sanitizer_cov_trace_switch(i64 %601, ptr @__sancov_gen_cov_switch_values.123)
  switch i32 %600, label %for.body10.i.i.if.end.i.i_crit_edge [
    i32 656128, label %for.body10.i.i.land.lhs.true.i.i_crit_edge
    i32 656131, label %for.body10.i.i.land.lhs.true.i.i_crit_edge250
  ]

for.body10.i.i.land.lhs.true.i.i_crit_edge250:    ; preds = %for.body10.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i.i

for.body10.i.i.land.lhs.true.i.i_crit_edge:       ; preds = %for.body10.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i.i

for.body10.i.i.if.end.i.i_crit_edge:              ; preds = %for.body10.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %for.body10.i.i.land.lhs.true.i.i_crit_edge, %for.body10.i.i.land.lhs.true.i.i_crit_edge250
  %mul.i.i = mul i32 %598, %i.0403.i.i
  %add.i.i = add i32 %j.0399.i.i, %mul.i.i
  %call.i.i = tail call fastcc i32 @gfx_v10_3_get_disabled_sa(ptr noundef %handle) #13
  %602 = shl nuw i32 1, %add.i.i
  %603 = and i32 %call.i.i, %602
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %603)
  %tobool.not.i.i = icmp eq i32 %603, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i.if.end.i.i_crit_edge, %for.body10.i.i.if.end.i.i_crit_edge
  %shl17.i.i.i = shl i32 %j.0399.i.i, 8
  %and18.i.i.i = and i32 %shl17.i.i.i, 65280
  %and8.i.op.i.i = or i32 %and8.i.i.i, %and18.i.i.i
  %data.2.i.i.i = or i32 %and8.i.op.i.i, 1073741824
  %604 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %604)
  %605 = load i32, ptr %virt.i101, align 8
  %and21.i.i.i = and i32 %605, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and21.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.cond.false.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end.i.i.cond.false.i.i.i_crit_edge:            ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end.i.i
  %606 = ptrtoint ptr %funcs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %606)
  %607 = load ptr, ptr %funcs.i.i.i, align 4
  %tobool22.not.i.i.i = icmp eq ptr %607, null
  br i1 %tobool22.not.i.i.i, label %land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge, label %land.lhs.true23.i.i.i

land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge:   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i

land.lhs.true23.i.i.i:                            ; preds = %land.lhs.true.i.i.i
  %sriov_wreg.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %607, i32 0, i32 12
  %608 = ptrtoint ptr %sriov_wreg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %608)
  %609 = load ptr, ptr %sriov_wreg.i.i.i, align 4
  %tobool27.not.i.i.i = icmp eq ptr %609, null
  br i1 %tobool27.not.i.i.i, label %land.lhs.true23.i.i.i.cond.false.i.i.i_crit_edge, label %cond.true.i.i.i

land.lhs.true23.i.i.i.cond.false.i.i.i_crit_edge: ; preds = %land.lhs.true23.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i

cond.true.i.i.i:                                  ; preds = %land.lhs.true23.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %610 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %610)
  %611 = load ptr, ptr %arrayidx.i.i.i, align 8
  %arrayidx33.i.i.i = getelementptr i32, ptr %611, i32 1
  %612 = ptrtoint ptr %arrayidx33.i.i.i to i32
  call void @__asan_load4_noabort(i32 %612)
  %613 = load i32, ptr %arrayidx33.i.i.i, align 4
  %add.i.i.i = add i32 %613, 8704
  tail call void %609(ptr noundef %handle, i32 noundef %add.i.i.i, i32 noundef %data.2.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_select_se_sh.exit.i.i

cond.false.i.i.i:                                 ; preds = %land.lhs.true23.i.i.i.cond.false.i.i.i_crit_edge, %land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge, %if.end.i.i.cond.false.i.i.i_crit_edge
  %614 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %614)
  %615 = load ptr, ptr %arrayidx.i.i.i, align 8
  %arrayidx37.i.i.i = getelementptr i32, ptr %615, i32 1
  %616 = ptrtoint ptr %arrayidx37.i.i.i to i32
  call void @__asan_load4_noabort(i32 %616)
  %617 = load i32, ptr %arrayidx37.i.i.i, align 4
  %add38.i.i.i = add i32 %617, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i.i.i, i32 noundef %data.2.i.i.i, i32 noundef 0) #13
  br label %gfx_v10_0_select_se_sh.exit.i.i

gfx_v10_0_select_se_sh.exit.i.i:                  ; preds = %cond.false.i.i.i, %cond.true.i.i.i
  %call20.i.i = tail call fastcc i32 @gfx_v10_0_get_rb_active_bitmap(ptr noundef %handle) #13
  %618 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %618)
  %619 = load i32, ptr %max_sh_per_se.i.i, align 4
  %mul24.i.i = mul i32 %619, %i.0403.i.i
  %add25.i.i = add i32 %mul24.i.i, %j.0399.i.i
  %mul26.i.i = mul i32 %add25.i.i, %div.i.i
  %shl.i.i = shl i32 %call20.i.i, %mul26.i.i
  %or.i.i = or i32 %shl.i.i, %active_rbs.1401.i.i
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %gfx_v10_0_select_se_sh.exit.i.i, %land.lhs.true.i.i.for.inc.i.i_crit_edge
  %active_rbs.2.i.i = phi i32 [ %active_rbs.1401.i.i, %land.lhs.true.i.i.for.inc.i.i_crit_edge ], [ %or.i.i, %gfx_v10_0_select_se_sh.exit.i.i ]
  %inc.i.i = add nuw i32 %j.0399.i.i, 1
  %620 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %620)
  %621 = load i32, ptr %max_sh_per_se.i.i, align 4
  %cmp9.i.i = icmp ult i32 %inc.i.i, %621
  br i1 %cmp9.i.i, label %for.inc.i.i.for.body10.i.i_crit_edge, label %for.inc.i.i.for.inc27.i.i_crit_edge

for.inc.i.i.for.inc27.i.i_crit_edge:              ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc27.i.i

for.inc.i.i.for.body10.i.i_crit_edge:             ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body10.i.i

for.inc27.i.i:                                    ; preds = %for.inc.i.i.for.inc27.i.i_crit_edge, %for.cond5.preheader.i.i.for.inc27.i.i_crit_edge
  %active_rbs.1.lcssa.i.i = phi i32 [ %active_rbs.0405.i.i, %for.cond5.preheader.i.i.for.inc27.i.i_crit_edge ], [ %active_rbs.2.i.i, %for.inc.i.i.for.inc27.i.i_crit_edge ]
  %inc28.i.i = add nuw i32 %i.0403.i.i, 1
  %622 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %622)
  %623 = load i32, ptr %config.i.i, align 8
  %cmp.i.i = icmp ult i32 %inc28.i.i, %623
  br i1 %cmp.i.i, label %for.inc27.i.i.for.cond5.preheader.i.i_crit_edge, label %for.inc27.i.i.for.end29.i.i_crit_edge

for.inc27.i.i.for.end29.i.i_crit_edge:            ; preds = %for.inc27.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end29.i.i

for.inc27.i.i.for.cond5.preheader.i.i_crit_edge:  ; preds = %for.inc27.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond5.preheader.i.i

for.end29.i.i:                                    ; preds = %for.inc27.i.i.for.end29.i.i_crit_edge, %cond.end87.i.for.end29.i.i_crit_edge
  %active_rbs.0.lcssa.i.i = phi i32 [ 0, %cond.end87.i.for.end29.i.i_crit_edge ], [ %active_rbs.1.lcssa.i.i, %for.inc27.i.i.for.end29.i.i_crit_edge ]
  %624 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %624)
  %625 = load i32, ptr %virt.i101, align 8
  %and21.i381.i.i = and i32 %625, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i381.i.i)
  %tobool.not.i382.i.i = icmp eq i32 %and21.i381.i.i, 0
  br i1 %tobool.not.i382.i.i, label %for.end29.i.i.cond.false.i396.i.i_crit_edge, label %land.lhs.true.i385.i.i

for.end29.i.i.cond.false.i396.i.i_crit_edge:      ; preds = %for.end29.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i396.i.i

land.lhs.true.i385.i.i:                           ; preds = %for.end29.i.i
  %funcs.i383.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %626 = ptrtoint ptr %funcs.i383.i.i to i32
  call void @__asan_load4_noabort(i32 %626)
  %627 = load ptr, ptr %funcs.i383.i.i, align 4
  %tobool22.not.i384.i.i = icmp eq ptr %627, null
  br i1 %tobool22.not.i384.i.i, label %land.lhs.true.i385.i.i.cond.false.i396.i.i_crit_edge, label %land.lhs.true23.i388.i.i

land.lhs.true.i385.i.i.cond.false.i396.i.i_crit_edge: ; preds = %land.lhs.true.i385.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i396.i.i

land.lhs.true23.i388.i.i:                         ; preds = %land.lhs.true.i385.i.i
  %sriov_wreg.i386.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %627, i32 0, i32 12
  %628 = ptrtoint ptr %sriov_wreg.i386.i.i to i32
  call void @__asan_load4_noabort(i32 %628)
  %629 = load ptr, ptr %sriov_wreg.i386.i.i, align 4
  %tobool27.not.i387.i.i = icmp eq ptr %629, null
  br i1 %tobool27.not.i387.i.i, label %land.lhs.true23.i388.i.i.cond.false.i396.i.i_crit_edge, label %cond.true.i392.i.i

land.lhs.true23.i388.i.i.cond.false.i396.i.i_crit_edge: ; preds = %land.lhs.true23.i388.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i396.i.i

cond.true.i392.i.i:                               ; preds = %land.lhs.true23.i388.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i389.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %630 = ptrtoint ptr %arrayidx.i389.i.i to i32
  call void @__asan_load4_noabort(i32 %630)
  %631 = load ptr, ptr %arrayidx.i389.i.i, align 8
  %arrayidx33.i390.i.i = getelementptr i32, ptr %631, i32 1
  %632 = ptrtoint ptr %arrayidx33.i390.i.i to i32
  call void @__asan_load4_noabort(i32 %632)
  %633 = load i32, ptr %arrayidx33.i390.i.i, align 4
  %add.i391.i.i = add i32 %633, 8704
  tail call void %629(ptr noundef %handle, i32 noundef %add.i391.i.i, i32 noundef -536870912, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_select_se_sh.exit397.i.i

cond.false.i396.i.i:                              ; preds = %land.lhs.true23.i388.i.i.cond.false.i396.i.i_crit_edge, %land.lhs.true.i385.i.i.cond.false.i396.i.i_crit_edge, %for.end29.i.i.cond.false.i396.i.i_crit_edge
  %arrayidx35.i393.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %634 = ptrtoint ptr %arrayidx35.i393.i.i to i32
  call void @__asan_load4_noabort(i32 %634)
  %635 = load ptr, ptr %arrayidx35.i393.i.i, align 8
  %arrayidx37.i394.i.i = getelementptr i32, ptr %635, i32 1
  %636 = ptrtoint ptr %arrayidx37.i394.i.i to i32
  call void @__asan_load4_noabort(i32 %636)
  %637 = load i32, ptr %arrayidx37.i394.i.i, align 4
  %add38.i395.i.i = add i32 %637, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i395.i.i, i32 noundef -536870912, i32 noundef 0) #13
  br label %gfx_v10_0_select_se_sh.exit397.i.i

gfx_v10_0_select_se_sh.exit397.i.i:               ; preds = %cond.false.i396.i.i, %cond.true.i392.i.i
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i.i) #13
  %backend_enable_mask.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 14
  %638 = ptrtoint ptr %backend_enable_mask.i.i to i32
  call void @__asan_store4_noabort(i32 %638)
  store i32 %active_rbs.0.lcssa.i.i, ptr %backend_enable_mask.i.i, align 8
  %call.i.i.i = tail call i32 @__sw_hweight32(i32 noundef %active_rbs.0.lcssa.i.i) #13
  %num_rbs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 24
  %639 = ptrtoint ptr %num_rbs.i.i to i32
  call void @__asan_store4_noabort(i32 %639)
  store i32 %call.i.i.i, ptr %num_rbs.i.i, align 8
  %cu_info.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %disable_masks.i.i) #13
  %tobool.not.i236.i = icmp eq ptr %handle, null
  %640 = call ptr @memset(ptr %disable_masks.i.i, i32 255, i32 32)
  br i1 %tobool.not.i236.i, label %gfx_v10_0_select_se_sh.exit397.i.i.gfx_v10_0_get_cu_info.exit.i_crit_edge, label %if.end.i239.i

gfx_v10_0_select_se_sh.exit397.i.i.gfx_v10_0_get_cu_info.exit.i_crit_edge: ; preds = %gfx_v10_0_select_se_sh.exit397.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_get_cu_info.exit.i

if.end.i239.i:                                    ; preds = %gfx_v10_0_select_se_sh.exit397.i.i
  call void @amdgpu_gfx_parse_disable_cu(ptr noundef nonnull %disable_masks.i.i, i32 noundef 4, i32 noundef 2) #13
  call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i.i, i32 noundef 0) #13
  %641 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %641)
  %642 = load i32, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %642)
  %cmp44.not.i.i = icmp eq i32 %642, 0
  br i1 %cmp44.not.i.i, label %if.end.i239.i.for.end66.i.i_crit_edge, label %for.cond2.preheader.lr.ph.i.i

if.end.i239.i.for.end66.i.i_crit_edge:            ; preds = %if.end.i239.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end66.i.i

for.cond2.preheader.lr.ph.i.i:                    ; preds = %if.end.i239.i
  %funcs.i.i243.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i.i244.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %max_cu_per_sh.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 2
  br label %for.cond2.preheader.i.i

for.cond2.preheader.i.i:                          ; preds = %for.inc64.i.i.for.cond2.preheader.i.i_crit_edge, %for.cond2.preheader.lr.ph.i.i
  %ao_cu_mask.048.i.i = phi i32 [ 0, %for.cond2.preheader.lr.ph.i.i ], [ %ao_cu_mask.1.lcssa.i.i, %for.inc64.i.i.for.cond2.preheader.i.i_crit_edge ]
  %active_cu_number.047.i.i = phi i32 [ 0, %for.cond2.preheader.lr.ph.i.i ], [ %active_cu_number.1.lcssa.i.i, %for.inc64.i.i.for.cond2.preheader.i.i_crit_edge ]
  %i.045.i.i = phi i32 [ 0, %for.cond2.preheader.lr.ph.i.i ], [ %inc65.i.i, %for.inc64.i.i.for.cond2.preheader.i.i_crit_edge ]
  %643 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %643)
  %644 = load i32, ptr %max_sh_per_se.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %644)
  %cmp537.not.i.i = icmp eq i32 %644, 0
  br i1 %cmp537.not.i.i, label %for.cond2.preheader.i.i.for.inc64.i.i_crit_edge, label %for.body6.lr.ph.i.i

for.cond2.preheader.i.i.for.inc64.i.i_crit_edge:  ; preds = %for.cond2.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc64.i.i

for.body6.lr.ph.i.i:                              ; preds = %for.cond2.preheader.i.i
  %shl7.i.i245.i = shl i32 %i.045.i.i, 16
  %and8.i.i246.i = and i32 %shl7.i.i245.i, 16711680
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %i.045.i.i)
  %cmp20.i.i = icmp slt i32 %i.045.i.i, 4
  %mul24.i248.i = shl i32 %i.045.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %i.045.i.i)
  %cmp49.i.i = icmp slt i32 %i.045.i.i, 2
  %mul53.i.i = shl i32 %i.045.i.i, 4
  br label %for.body6.i.i

for.body6.i.i:                                    ; preds = %for.inc61.i.i.for.body6.i.i_crit_edge, %for.body6.lr.ph.i.i
  %645 = phi i32 [ %644, %for.body6.lr.ph.i.i ], [ %686, %for.inc61.i.i.for.body6.i.i_crit_edge ]
  %ao_cu_mask.141.i.i = phi i32 [ %ao_cu_mask.048.i.i, %for.body6.lr.ph.i.i ], [ %ao_cu_mask.3.i.i, %for.inc61.i.i.for.body6.i.i_crit_edge ]
  %active_cu_number.140.i.i = phi i32 [ %active_cu_number.047.i.i, %for.body6.lr.ph.i.i ], [ %active_cu_number.2.i.i, %for.inc61.i.i.for.body6.i.i_crit_edge ]
  %j.038.i.i = phi i32 [ 0, %for.body6.lr.ph.i.i ], [ %inc62.i.i, %for.inc61.i.i.for.body6.i.i_crit_edge ]
  %646 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %646)
  %647 = load i32, ptr %arrayidx.i70, align 4
  %648 = zext i32 %647 to i64
  call void @__sanitizer_cov_trace_switch(i64 %648, ptr @__sancov_gen_cov_switch_values.124)
  switch i32 %647, label %for.body6.i.i.if.end19.i.i_crit_edge [
    i32 656128, label %for.body6.i.i.land.lhs.true.i252.i_crit_edge
    i32 656131, label %for.body6.i.i.land.lhs.true.i252.i_crit_edge251
  ]

for.body6.i.i.land.lhs.true.i252.i_crit_edge251:  ; preds = %for.body6.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i252.i

for.body6.i.i.land.lhs.true.i252.i_crit_edge:     ; preds = %for.body6.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i252.i

for.body6.i.i.if.end19.i.i_crit_edge:             ; preds = %for.body6.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19.i.i

land.lhs.true.i252.i:                             ; preds = %for.body6.i.i.land.lhs.true.i252.i_crit_edge, %for.body6.i.i.land.lhs.true.i252.i_crit_edge251
  %mul.i249.i = mul i32 %645, %i.045.i.i
  %add.i250.i = add i32 %j.038.i.i, %mul.i249.i
  %call.i251.i = call fastcc i32 @gfx_v10_3_get_disabled_sa(ptr noundef nonnull %handle) #13
  %649 = shl nuw i32 1, %add.i250.i
  %650 = and i32 %call.i251.i, %649
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %650)
  %tobool17.not.i.i = icmp eq i32 %650, 0
  br i1 %tobool17.not.i.i, label %land.lhs.true.i252.i.if.end19.i.i_crit_edge, label %land.lhs.true.i252.i.for.inc61.i.i_crit_edge

land.lhs.true.i252.i.for.inc61.i.i_crit_edge:     ; preds = %land.lhs.true.i252.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc61.i.i

land.lhs.true.i252.i.if.end19.i.i_crit_edge:      ; preds = %land.lhs.true.i252.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end19.i.i

if.end19.i.i:                                     ; preds = %land.lhs.true.i252.i.if.end19.i.i_crit_edge, %for.body6.i.i.if.end19.i.i_crit_edge
  %shl17.i.i253.i = shl i32 %j.038.i.i, 8
  %and18.i.i254.i = and i32 %shl17.i.i253.i, 65280
  %and8.i.op.i247.i = or i32 %and8.i.i246.i, %and18.i.i254.i
  %data.2.i.i255.i = or i32 %and8.i.op.i247.i, 1073741824
  %651 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %651)
  %652 = load i32, ptr %virt.i101, align 8
  %and21.i.i256.i = and i32 %652, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i256.i)
  %tobool.not.i.i257.i = icmp eq i32 %and21.i.i256.i, 0
  br i1 %tobool.not.i.i257.i, label %if.end19.i.i.cond.false.i.i268.i_crit_edge, label %land.lhs.true.i.i259.i

if.end19.i.i.cond.false.i.i268.i_crit_edge:       ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i268.i

land.lhs.true.i.i259.i:                           ; preds = %if.end19.i.i
  %653 = ptrtoint ptr %funcs.i.i243.i to i32
  call void @__asan_load4_noabort(i32 %653)
  %654 = load ptr, ptr %funcs.i.i243.i, align 4
  %tobool22.not.i.i258.i = icmp eq ptr %654, null
  br i1 %tobool22.not.i.i258.i, label %land.lhs.true.i.i259.i.cond.false.i.i268.i_crit_edge, label %land.lhs.true23.i.i262.i

land.lhs.true.i.i259.i.cond.false.i.i268.i_crit_edge: ; preds = %land.lhs.true.i.i259.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i268.i

land.lhs.true23.i.i262.i:                         ; preds = %land.lhs.true.i.i259.i
  %sriov_wreg.i.i260.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %654, i32 0, i32 12
  %655 = ptrtoint ptr %sriov_wreg.i.i260.i to i32
  call void @__asan_load4_noabort(i32 %655)
  %656 = load ptr, ptr %sriov_wreg.i.i260.i, align 4
  %tobool27.not.i.i261.i = icmp eq ptr %656, null
  br i1 %tobool27.not.i.i261.i, label %land.lhs.true23.i.i262.i.cond.false.i.i268.i_crit_edge, label %cond.true.i.i265.i

land.lhs.true23.i.i262.i.cond.false.i.i268.i_crit_edge: ; preds = %land.lhs.true23.i.i262.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i268.i

cond.true.i.i265.i:                               ; preds = %land.lhs.true23.i.i262.i
  call void @__sanitizer_cov_trace_pc() #15
  %657 = ptrtoint ptr %arrayidx.i.i244.i to i32
  call void @__asan_load4_noabort(i32 %657)
  %658 = load ptr, ptr %arrayidx.i.i244.i, align 8
  %arrayidx33.i.i263.i = getelementptr i32, ptr %658, i32 1
  %659 = ptrtoint ptr %arrayidx33.i.i263.i to i32
  call void @__asan_load4_noabort(i32 %659)
  %660 = load i32, ptr %arrayidx33.i.i263.i, align 4
  %add.i.i264.i = add i32 %660, 8704
  call void %656(ptr noundef %handle, i32 noundef %add.i.i264.i, i32 noundef %data.2.i.i255.i, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_select_se_sh.exit.i269.i

cond.false.i.i268.i:                              ; preds = %land.lhs.true23.i.i262.i.cond.false.i.i268.i_crit_edge, %land.lhs.true.i.i259.i.cond.false.i.i268.i_crit_edge, %if.end19.i.i.cond.false.i.i268.i_crit_edge
  %661 = ptrtoint ptr %arrayidx.i.i244.i to i32
  call void @__asan_load4_noabort(i32 %661)
  %662 = load ptr, ptr %arrayidx.i.i244.i, align 8
  %arrayidx37.i.i266.i = getelementptr i32, ptr %662, i32 1
  %663 = ptrtoint ptr %arrayidx37.i.i266.i to i32
  call void @__asan_load4_noabort(i32 %663)
  %664 = load i32, ptr %arrayidx37.i.i266.i, align 4
  %add38.i.i267.i = add i32 %664, 8704
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i.i267.i, i32 noundef %data.2.i.i255.i, i32 noundef 0) #13
  br label %gfx_v10_0_select_se_sh.exit.i269.i

gfx_v10_0_select_se_sh.exit.i269.i:               ; preds = %cond.false.i.i268.i, %cond.true.i.i265.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %j.038.i.i)
  %cmp22.i.i = icmp slt i32 %j.038.i.i, 2
  %or.cond1.i.i = select i1 %cmp20.i.i, i1 %cmp22.i.i, i1 false
  br i1 %or.cond1.i.i, label %if.then23.i.i, label %gfx_v10_0_select_se_sh.exit.i269.i.if.end27.i.i_crit_edge

gfx_v10_0_select_se_sh.exit.i269.i.if.end27.i.i_crit_edge: ; preds = %gfx_v10_0_select_se_sh.exit.i269.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27.i.i

if.then23.i.i:                                    ; preds = %gfx_v10_0_select_se_sh.exit.i269.i
  %add25.i270.i = add i32 %j.038.i.i, %mul24.i248.i
  %arrayidx26.i.i = getelementptr [8 x i32], ptr %disable_masks.i.i, i32 0, i32 %add25.i270.i
  %665 = ptrtoint ptr %arrayidx26.i.i to i32
  call void @__asan_load4_noabort(i32 %665)
  %666 = load i32, ptr %arrayidx26.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %666)
  %tobool.not.i3.i.i = icmp eq i32 %666, 0
  br i1 %tobool.not.i3.i.i, label %if.then23.i.i.if.end27.i.i_crit_edge, label %if.end.i.i.i

if.then23.i.i.if.end27.i.i_crit_edge:             ; preds = %if.then23.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27.i.i

if.end.i.i.i:                                     ; preds = %if.then23.i.i
  %shl.i.i.i = shl i32 %666, 16
  %667 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %667)
  %668 = load i32, ptr %virt.i101, align 8
  %and1.i.i.i = and i32 %668, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.cond.false.i11.i.i_crit_edge, label %land.lhs.true.i6.i.i

if.end.i.i.i.cond.false.i11.i.i_crit_edge:        ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i11.i.i

land.lhs.true.i6.i.i:                             ; preds = %if.end.i.i.i
  %669 = ptrtoint ptr %funcs.i.i243.i to i32
  call void @__asan_load4_noabort(i32 %669)
  %670 = load ptr, ptr %funcs.i.i243.i, align 4
  %tobool3.not.i.i.i = icmp eq ptr %670, null
  br i1 %tobool3.not.i.i.i, label %land.lhs.true.i6.i.i.cond.false.i11.i.i_crit_edge, label %land.lhs.true4.i.i.i

land.lhs.true.i6.i.i.cond.false.i11.i.i_crit_edge: ; preds = %land.lhs.true.i6.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i11.i.i

land.lhs.true4.i.i.i:                             ; preds = %land.lhs.true.i6.i.i
  %sriov_wreg.i7.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %670, i32 0, i32 12
  %671 = ptrtoint ptr %sriov_wreg.i7.i.i to i32
  call void @__asan_load4_noabort(i32 %671)
  %672 = load ptr, ptr %sriov_wreg.i7.i.i, align 4
  %tobool8.not.i.i.i = icmp eq ptr %672, null
  br i1 %tobool8.not.i.i.i, label %land.lhs.true4.i.i.i.cond.false.i11.i.i_crit_edge, label %cond.true.i10.i.i

land.lhs.true4.i.i.i.cond.false.i11.i.i_crit_edge: ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i11.i.i

cond.true.i10.i.i:                                ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %673 = ptrtoint ptr %arrayidx.i.i244.i to i32
  call void @__asan_load4_noabort(i32 %673)
  %674 = load ptr, ptr %arrayidx.i.i244.i, align 8
  %675 = ptrtoint ptr %674 to i32
  call void @__asan_load4_noabort(i32 %675)
  %676 = load i32, ptr %674, align 4
  %add.i9.i.i = add i32 %676, 4112
  call void %672(ptr noundef %handle, i32 noundef %add.i9.i.i, i32 noundef %shl.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end27.i.i

cond.false.i11.i.i:                               ; preds = %land.lhs.true4.i.i.i.cond.false.i11.i.i_crit_edge, %land.lhs.true.i6.i.i.cond.false.i11.i.i_crit_edge, %if.end.i.i.i.cond.false.i11.i.i_crit_edge
  %677 = ptrtoint ptr %arrayidx.i.i244.i to i32
  call void @__asan_load4_noabort(i32 %677)
  %678 = load ptr, ptr %arrayidx.i.i244.i, align 8
  %679 = ptrtoint ptr %678 to i32
  call void @__asan_load4_noabort(i32 %679)
  %680 = load i32, ptr %678, align 4
  %add19.i.i.i = add i32 %680, 4112
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add19.i.i.i, i32 noundef %shl.i.i.i, i32 noundef 0) #13
  br label %if.end27.i.i

if.end27.i.i:                                     ; preds = %cond.false.i11.i.i, %cond.true.i10.i.i, %if.then23.i.i.if.end27.i.i_crit_edge, %gfx_v10_0_select_se_sh.exit.i269.i.if.end27.i.i_crit_edge
  %call.i.i271.i = call fastcc i32 @gfx_v10_0_get_wgp_active_bitmap_per_sh(ptr noundef %handle) #13
  %and.i.i.i = and i32 %call.i.i271.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i12.i.i = icmp eq i32 %and.i.i.i, 0
  %or.i.i.i = select i1 %tobool.not.i12.i.i, i32 0, i32 3
  %and.1.i.i.i = and i32 %call.i.i271.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i.i.i)
  %tobool.not.1.i.i.i = icmp eq i32 %and.1.i.i.i, 0
  %or.1.i.i.i = select i1 %tobool.not.1.i.i.i, i32 0, i32 12
  %cu_active_bitmap.1.1.i.i.i = or i32 %or.1.i.i.i, %or.i.i.i
  %and.2.i.i.i = and i32 %call.i.i271.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2.i.i.i)
  %tobool.not.2.i.i.i = icmp eq i32 %and.2.i.i.i, 0
  %or.2.i.i.i = select i1 %tobool.not.2.i.i.i, i32 0, i32 48
  %cu_active_bitmap.1.2.i.i.i = or i32 %cu_active_bitmap.1.1.i.i.i, %or.2.i.i.i
  %and.3.i.i.i = and i32 %call.i.i271.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3.i.i.i)
  %tobool.not.3.i.i.i = icmp eq i32 %and.3.i.i.i, 0
  %or.3.i.i.i = select i1 %tobool.not.3.i.i.i, i32 0, i32 192
  %cu_active_bitmap.1.3.i.i.i = or i32 %cu_active_bitmap.1.2.i.i.i, %or.3.i.i.i
  %and.4.i.i.i = and i32 %call.i.i271.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4.i.i.i)
  %tobool.not.4.i.i.i = icmp eq i32 %and.4.i.i.i, 0
  %or.4.i.i.i = select i1 %tobool.not.4.i.i.i, i32 0, i32 768
  %cu_active_bitmap.1.4.i.i.i = or i32 %cu_active_bitmap.1.3.i.i.i, %or.4.i.i.i
  %and.5.i.i.i = and i32 %call.i.i271.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5.i.i.i)
  %tobool.not.5.i.i.i = icmp eq i32 %and.5.i.i.i, 0
  %or.5.i.i.i = select i1 %tobool.not.5.i.i.i, i32 0, i32 3072
  %cu_active_bitmap.1.5.i.i.i = or i32 %cu_active_bitmap.1.4.i.i.i, %or.5.i.i.i
  %and.6.i.i.i = and i32 %call.i.i271.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6.i.i.i)
  %tobool.not.6.i.i.i = icmp eq i32 %and.6.i.i.i, 0
  %or.6.i.i.i = select i1 %tobool.not.6.i.i.i, i32 0, i32 12288
  %cu_active_bitmap.1.6.i.i.i = or i32 %cu_active_bitmap.1.5.i.i.i, %or.6.i.i.i
  %and.7.i.i.i = and i32 %call.i.i271.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7.i.i.i)
  %tobool.not.7.i.i.i = icmp eq i32 %and.7.i.i.i, 0
  %or.7.i.i.i = select i1 %tobool.not.7.i.i.i, i32 0, i32 49152
  %cu_active_bitmap.1.7.i.i.i = or i32 %cu_active_bitmap.1.6.i.i.i, %or.7.i.i.i
  %and.8.i.i.i = and i32 %call.i.i271.i, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.8.i.i.i)
  %tobool.not.8.i.i.i = icmp eq i32 %and.8.i.i.i, 0
  %or.8.i.i.i = select i1 %tobool.not.8.i.i.i, i32 0, i32 196608
  %cu_active_bitmap.1.8.i.i.i = or i32 %cu_active_bitmap.1.7.i.i.i, %or.8.i.i.i
  %and.9.i.i.i = and i32 %call.i.i271.i, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.9.i.i.i)
  %tobool.not.9.i.i.i = icmp eq i32 %and.9.i.i.i, 0
  %or.9.i.i.i = select i1 %tobool.not.9.i.i.i, i32 0, i32 786432
  %cu_active_bitmap.1.9.i.i.i = or i32 %cu_active_bitmap.1.8.i.i.i, %or.9.i.i.i
  %and.10.i.i.i = and i32 %call.i.i271.i, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.10.i.i.i)
  %tobool.not.10.i.i.i = icmp eq i32 %and.10.i.i.i, 0
  %or.10.i.i.i = select i1 %tobool.not.10.i.i.i, i32 0, i32 3145728
  %cu_active_bitmap.1.10.i.i.i = or i32 %cu_active_bitmap.1.9.i.i.i, %or.10.i.i.i
  %and.11.i.i.i = and i32 %call.i.i271.i, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.11.i.i.i)
  %tobool.not.11.i.i.i = icmp eq i32 %and.11.i.i.i, 0
  %or.11.i.i.i = select i1 %tobool.not.11.i.i.i, i32 0, i32 12582912
  %cu_active_bitmap.1.11.i.i.i = or i32 %cu_active_bitmap.1.10.i.i.i, %or.11.i.i.i
  %and.12.i.i.i = and i32 %call.i.i271.i, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.12.i.i.i)
  %tobool.not.12.i.i.i = icmp eq i32 %and.12.i.i.i, 0
  %or.12.i.i.i = select i1 %tobool.not.12.i.i.i, i32 0, i32 50331648
  %cu_active_bitmap.1.12.i.i.i = or i32 %cu_active_bitmap.1.11.i.i.i, %or.12.i.i.i
  %and.13.i.i.i = and i32 %call.i.i271.i, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.13.i.i.i)
  %tobool.not.13.i.i.i = icmp eq i32 %and.13.i.i.i, 0
  %or.13.i.i.i = select i1 %tobool.not.13.i.i.i, i32 0, i32 201326592
  %cu_active_bitmap.1.13.i.i.i = or i32 %cu_active_bitmap.1.12.i.i.i, %or.13.i.i.i
  %and.14.i.i.i = and i32 %call.i.i271.i, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.14.i.i.i)
  %tobool.not.14.i.i.i = icmp eq i32 %and.14.i.i.i, 0
  %or.14.i.i.i = select i1 %tobool.not.14.i.i.i, i32 0, i32 805306368
  %cu_active_bitmap.1.14.i.i.i = or i32 %cu_active_bitmap.1.13.i.i.i, %or.14.i.i.i
  %and.15.i.i.i = and i32 %call.i.i271.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.15.i.i.i)
  %tobool.not.15.i.i.i = icmp eq i32 %and.15.i.i.i, 0
  %or.15.i.i.i = select i1 %tobool.not.15.i.i.i, i32 0, i32 -1073741824
  %cu_active_bitmap.1.15.i.i.i = or i32 %cu_active_bitmap.1.14.i.i.i, %or.15.i.i.i
  %arrayidx31.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 8, i32 %i.045.i.i, i32 %j.038.i.i
  %681 = ptrtoint ptr %arrayidx31.i.i to i32
  call void @__asan_store4_noabort(i32 %681)
  store i32 %cu_active_bitmap.1.15.i.i.i, ptr %arrayidx31.i.i, align 4
  %682 = ptrtoint ptr %max_cu_per_sh.i.i to i32
  call void @__asan_load4_noabort(i32 %682)
  %683 = load i32, ptr %max_cu_per_sh.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %683)
  %cmp3531.not.i.i = icmp eq i32 %683, 0
  br i1 %cmp3531.not.i.i, label %if.end27.i.i.for.end.i.i_crit_edge, label %if.end27.i.i.for.body36.i.i_crit_edge

if.end27.i.i.for.body36.i.i_crit_edge:            ; preds = %if.end27.i.i
  br label %for.body36.i.i

if.end27.i.i.for.end.i.i_crit_edge:               ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i.i

for.body36.i.i:                                   ; preds = %for.body36.i.i.for.body36.i.i_crit_edge, %if.end27.i.i.for.body36.i.i_crit_edge
  %ao_bitmap.035.i.i = phi i32 [ %ao_bitmap.2.i.i, %for.body36.i.i.for.body36.i.i_crit_edge ], [ 0, %if.end27.i.i.for.body36.i.i_crit_edge ]
  %mask.034.i.i = phi i32 [ %shl.i275.i, %for.body36.i.i.for.body36.i.i_crit_edge ], [ 1, %if.end27.i.i.for.body36.i.i_crit_edge ]
  %counter.033.i.i = phi i32 [ %counter.1.i.i, %for.body36.i.i.for.body36.i.i_crit_edge ], [ 0, %if.end27.i.i.for.body36.i.i_crit_edge ]
  %k.032.i.i = phi i32 [ %inc47.i.i, %for.body36.i.i.for.body36.i.i_crit_edge ], [ 0, %if.end27.i.i.for.body36.i.i_crit_edge ]
  %and37.i272.i = and i32 %mask.034.i.i, %cu_active_bitmap.1.15.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37.i272.i)
  %tobool38.not.i.i = icmp eq i32 %and37.i272.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %counter.033.i.i, i32 %683)
  %cmp43.i.i = icmp ult i32 %counter.033.i.i, %683
  %or.i273.i = select i1 %cmp43.i.i, i32 %mask.034.i.i, i32 0
  %not.tobool38.not.i.i = xor i1 %tobool38.not.i.i, true
  %inc.i274.i = zext i1 %not.tobool38.not.i.i to i32
  %counter.1.i.i = add i32 %counter.033.i.i, %inc.i274.i
  %spec.select.i.i = select i1 %tobool38.not.i.i, i32 0, i32 %or.i273.i
  %ao_bitmap.2.i.i = or i32 %spec.select.i.i, %ao_bitmap.035.i.i
  %shl.i275.i = shl i32 %mask.034.i.i, 1
  %inc47.i.i = add nuw i32 %k.032.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc47.i.i, %683
  br i1 %exitcond.not.i.i, label %for.body36.i.i.for.end.i.i_crit_edge, label %for.body36.i.i.for.body36.i.i_crit_edge

for.body36.i.i.for.body36.i.i_crit_edge:          ; preds = %for.body36.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body36.i.i

for.body36.i.i.for.end.i.i_crit_edge:             ; preds = %for.body36.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body36.i.i.for.end.i.i_crit_edge, %if.end27.i.i.for.end.i.i_crit_edge
  %counter.0.lcssa.i.i = phi i32 [ 0, %if.end27.i.i.for.end.i.i_crit_edge ], [ %counter.1.i.i, %for.body36.i.i.for.end.i.i_crit_edge ]
  %ao_bitmap.0.lcssa.i.i = phi i32 [ 0, %if.end27.i.i.for.end.i.i_crit_edge ], [ %ao_bitmap.2.i.i, %for.body36.i.i.for.end.i.i_crit_edge ]
  %add48.i.i = add i32 %counter.0.lcssa.i.i, %active_cu_number.140.i.i
  %or.cond2.i.i = select i1 %cmp49.i.i, i1 %cmp22.i.i, i1 false
  %mul54.i.i = shl i32 %j.038.i.i, 3
  %add55.i.i = add i32 %mul54.i.i, %mul53.i.i
  %shl56.i.i = shl i32 %ao_bitmap.0.lcssa.i.i, %add55.i.i
  %or57.i.i = select i1 %or.cond2.i.i, i32 %shl56.i.i, i32 0
  %ao_cu_mask.2.i.i = or i32 %or57.i.i, %ao_cu_mask.141.i.i
  %arrayidx60.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 7, i32 %i.045.i.i, i32 %j.038.i.i
  %684 = ptrtoint ptr %arrayidx60.i.i to i32
  call void @__asan_store4_noabort(i32 %684)
  store i32 %ao_bitmap.0.lcssa.i.i, ptr %arrayidx60.i.i, align 4
  br label %for.inc61.i.i

for.inc61.i.i:                                    ; preds = %for.end.i.i, %land.lhs.true.i252.i.for.inc61.i.i_crit_edge
  %active_cu_number.2.i.i = phi i32 [ %active_cu_number.140.i.i, %land.lhs.true.i252.i.for.inc61.i.i_crit_edge ], [ %add48.i.i, %for.end.i.i ]
  %ao_cu_mask.3.i.i = phi i32 [ %ao_cu_mask.141.i.i, %land.lhs.true.i252.i.for.inc61.i.i_crit_edge ], [ %ao_cu_mask.2.i.i, %for.end.i.i ]
  %inc62.i.i = add nuw i32 %j.038.i.i, 1
  %685 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %685)
  %686 = load i32, ptr %max_sh_per_se.i.i, align 4
  %cmp5.i.i = icmp ult i32 %inc62.i.i, %686
  br i1 %cmp5.i.i, label %for.inc61.i.i.for.body6.i.i_crit_edge, label %for.inc61.i.i.for.inc64.i.i_crit_edge

for.inc61.i.i.for.inc64.i.i_crit_edge:            ; preds = %for.inc61.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc64.i.i

for.inc61.i.i.for.body6.i.i_crit_edge:            ; preds = %for.inc61.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body6.i.i

for.inc64.i.i:                                    ; preds = %for.inc61.i.i.for.inc64.i.i_crit_edge, %for.cond2.preheader.i.i.for.inc64.i.i_crit_edge
  %active_cu_number.1.lcssa.i.i = phi i32 [ %active_cu_number.047.i.i, %for.cond2.preheader.i.i.for.inc64.i.i_crit_edge ], [ %active_cu_number.2.i.i, %for.inc61.i.i.for.inc64.i.i_crit_edge ]
  %ao_cu_mask.1.lcssa.i.i = phi i32 [ %ao_cu_mask.048.i.i, %for.cond2.preheader.i.i.for.inc64.i.i_crit_edge ], [ %ao_cu_mask.3.i.i, %for.inc61.i.i.for.inc64.i.i_crit_edge ]
  %inc65.i.i = add nuw i32 %i.045.i.i, 1
  %687 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %687)
  %688 = load i32, ptr %config.i.i, align 8
  %cmp.i276.i = icmp ult i32 %inc65.i.i, %688
  br i1 %cmp.i276.i, label %for.inc64.i.i.for.cond2.preheader.i.i_crit_edge, label %for.inc64.i.i.for.end66.i.i_crit_edge

for.inc64.i.i.for.end66.i.i_crit_edge:            ; preds = %for.inc64.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end66.i.i

for.inc64.i.i.for.cond2.preheader.i.i_crit_edge:  ; preds = %for.inc64.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond2.preheader.i.i

for.end66.i.i:                                    ; preds = %for.inc64.i.i.for.end66.i.i_crit_edge, %if.end.i239.i.for.end66.i.i_crit_edge
  %active_cu_number.0.lcssa.i.i = phi i32 [ 0, %if.end.i239.i.for.end66.i.i_crit_edge ], [ %active_cu_number.1.lcssa.i.i, %for.inc64.i.i.for.end66.i.i_crit_edge ]
  %ao_cu_mask.0.lcssa.i.i = phi i32 [ 0, %if.end.i239.i.for.end66.i.i_crit_edge ], [ %ao_cu_mask.1.lcssa.i.i, %for.inc64.i.i.for.end66.i.i_crit_edge ]
  %689 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %689)
  %690 = load i32, ptr %virt.i101, align 8
  %and21.i14.i.i = and i32 %690, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i14.i.i)
  %tobool.not.i15.i.i = icmp eq i32 %and21.i14.i.i, 0
  br i1 %tobool.not.i15.i.i, label %for.end66.i.i.cond.false.i29.i.i_crit_edge, label %land.lhs.true.i18.i.i

for.end66.i.i.cond.false.i29.i.i_crit_edge:       ; preds = %for.end66.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i29.i.i

land.lhs.true.i18.i.i:                            ; preds = %for.end66.i.i
  %funcs.i16.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %691 = ptrtoint ptr %funcs.i16.i.i to i32
  call void @__asan_load4_noabort(i32 %691)
  %692 = load ptr, ptr %funcs.i16.i.i, align 4
  %tobool22.not.i17.i.i = icmp eq ptr %692, null
  br i1 %tobool22.not.i17.i.i, label %land.lhs.true.i18.i.i.cond.false.i29.i.i_crit_edge, label %land.lhs.true23.i21.i.i

land.lhs.true.i18.i.i.cond.false.i29.i.i_crit_edge: ; preds = %land.lhs.true.i18.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i29.i.i

land.lhs.true23.i21.i.i:                          ; preds = %land.lhs.true.i18.i.i
  %sriov_wreg.i19.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %692, i32 0, i32 12
  %693 = ptrtoint ptr %sriov_wreg.i19.i.i to i32
  call void @__asan_load4_noabort(i32 %693)
  %694 = load ptr, ptr %sriov_wreg.i19.i.i, align 4
  %tobool27.not.i20.i.i = icmp eq ptr %694, null
  br i1 %tobool27.not.i20.i.i, label %land.lhs.true23.i21.i.i.cond.false.i29.i.i_crit_edge, label %cond.true.i25.i.i

land.lhs.true23.i21.i.i.cond.false.i29.i.i_crit_edge: ; preds = %land.lhs.true23.i21.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i29.i.i

cond.true.i25.i.i:                                ; preds = %land.lhs.true23.i21.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i22.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %695 = ptrtoint ptr %arrayidx.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %695)
  %696 = load ptr, ptr %arrayidx.i22.i.i, align 8
  %arrayidx33.i23.i.i = getelementptr i32, ptr %696, i32 1
  %697 = ptrtoint ptr %arrayidx33.i23.i.i to i32
  call void @__asan_load4_noabort(i32 %697)
  %698 = load i32, ptr %arrayidx33.i23.i.i, align 4
  %add.i24.i.i = add i32 %698, 8704
  call void %694(ptr noundef %handle, i32 noundef %add.i24.i.i, i32 noundef -536870912, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_select_se_sh.exit30.i.i

cond.false.i29.i.i:                               ; preds = %land.lhs.true23.i21.i.i.cond.false.i29.i.i_crit_edge, %land.lhs.true.i18.i.i.cond.false.i29.i.i_crit_edge, %for.end66.i.i.cond.false.i29.i.i_crit_edge
  %arrayidx35.i26.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %699 = ptrtoint ptr %arrayidx35.i26.i.i to i32
  call void @__asan_load4_noabort(i32 %699)
  %700 = load ptr, ptr %arrayidx35.i26.i.i, align 8
  %arrayidx37.i27.i.i = getelementptr i32, ptr %700, i32 1
  %701 = ptrtoint ptr %arrayidx37.i27.i.i to i32
  call void @__asan_load4_noabort(i32 %701)
  %702 = load i32, ptr %arrayidx37.i27.i.i, align 4
  %add38.i28.i.i = add i32 %702, 8704
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i28.i.i, i32 noundef -536870912, i32 noundef 0) #13
  br label %gfx_v10_0_select_se_sh.exit30.i.i

gfx_v10_0_select_se_sh.exit30.i.i:                ; preds = %cond.false.i29.i.i, %cond.true.i25.i.i
  call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i.i) #13
  %number.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 5
  %703 = ptrtoint ptr %number.i.i to i32
  call void @__asan_store4_noabort(i32 %703)
  store i32 %active_cu_number.0.lcssa.i.i, ptr %number.i.i, align 4
  %ao_cu_mask68.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 6
  %704 = ptrtoint ptr %ao_cu_mask68.i.i to i32
  call void @__asan_store4_noabort(i32 %704)
  store i32 %ao_cu_mask.0.lcssa.i.i, ptr %ao_cu_mask68.i.i, align 4
  %705 = ptrtoint ptr %cu_info.i to i32
  call void @__asan_store4_noabort(i32 %705)
  store i32 2, ptr %cu_info.i, align 4
  br label %gfx_v10_0_get_cu_info.exit.i

gfx_v10_0_get_cu_info.exit.i:                     ; preds = %gfx_v10_0_select_se_sh.exit30.i.i, %gfx_v10_0_select_se_sh.exit397.i.i.gfx_v10_0_get_cu_info.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %disable_masks.i.i) #13
  %706 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %706)
  %707 = load i32, ptr %arrayidx.i70, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 656127, i32 %707)
  %cmp.i278.i = icmp ugt i32 %707, 656127
  %708 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %708)
  %709 = load i32, ptr %virt.i101, align 8
  %and.i.i = and i32 %709, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i279.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp.i278.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %gfx_v10_0_get_cu_info.exit.i
  br i1 %tobool.not.i279.i, label %if.then.i.i.cond.false.i285.i_crit_edge, label %land.lhs.true.i280.i

if.then.i.i.cond.false.i285.i_crit_edge:          ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i285.i

land.lhs.true.i280.i:                             ; preds = %if.then.i.i
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %710 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %710)
  %711 = load ptr, ptr %funcs.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %711, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i280.i.cond.false.i285.i_crit_edge, label %land.lhs.true3.i.i

land.lhs.true.i280.i.cond.false.i285.i_crit_edge: ; preds = %land.lhs.true.i280.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i285.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i280.i
  %sriov_rreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %711, i32 0, i32 13
  %712 = ptrtoint ptr %sriov_rreg.i.i to i32
  call void @__asan_load4_noabort(i32 %712)
  %713 = load ptr, ptr %sriov_rreg.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %713, null
  br i1 %tobool7.not.i.i, label %land.lhs.true3.i.i.cond.false.i285.i_crit_edge, label %cond.true.i283.i

land.lhs.true3.i.i.cond.false.i285.i_crit_edge:   ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i285.i

cond.true.i283.i:                                 ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx12.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %714 = ptrtoint ptr %arrayidx12.i.i to i32
  call void @__asan_load4_noabort(i32 %714)
  %715 = load ptr, ptr %arrayidx12.i.i, align 8
  %arrayidx14.i.i = getelementptr i32, ptr %715, i32 1
  %716 = ptrtoint ptr %arrayidx14.i.i to i32
  call void @__asan_load4_noabort(i32 %716)
  %717 = load i32, ptr %arrayidx14.i.i, align 4
  %add.i281.i = add i32 %717, 20486
  %call.i282.i = call i32 %713(ptr noundef %handle, i32 noundef %add.i281.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i.i

cond.false.i285.i:                                ; preds = %land.lhs.true3.i.i.cond.false.i285.i_crit_edge, %land.lhs.true.i280.i.cond.false.i285.i_crit_edge, %if.then.i.i.cond.false.i285.i_crit_edge
  %arrayidx16.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %718 = ptrtoint ptr %arrayidx16.i.i to i32
  call void @__asan_load4_noabort(i32 %718)
  %719 = load ptr, ptr %arrayidx16.i.i, align 8
  %arrayidx18.i.i = getelementptr i32, ptr %719, i32 1
  %720 = ptrtoint ptr %arrayidx18.i.i to i32
  call void @__asan_load4_noabort(i32 %720)
  %721 = load i32, ptr %arrayidx18.i.i, align 4
  %add19.i.i = add i32 %721, 20486
  %call20.i284.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add19.i.i, i32 noundef 0) #13
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i285.i, %cond.true.i283.i
  %cond.i286.i = phi i32 [ %call.i282.i, %cond.true.i283.i ], [ %call20.i284.i, %cond.false.i285.i ]
  %722 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %722)
  %723 = load i32, ptr %virt.i101, align 8
  %and23.i.i = and i32 %723, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i.i)
  %tobool24.not.i.i = icmp eq i32 %and23.i.i, 0
  br i1 %tobool24.not.i.i, label %cond.end.i.i.cond.false47.i.i_crit_edge, label %land.lhs.true25.i.i

cond.end.i.i.cond.false47.i.i_crit_edge:          ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false47.i.i

land.lhs.true25.i.i:                              ; preds = %cond.end.i.i
  %funcs28.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %724 = ptrtoint ptr %funcs28.i.i to i32
  call void @__asan_load4_noabort(i32 %724)
  %725 = load ptr, ptr %funcs28.i.i, align 4
  %tobool29.not.i.i = icmp eq ptr %725, null
  br i1 %tobool29.not.i.i, label %land.lhs.true25.i.i.cond.false47.i.i_crit_edge, label %land.lhs.true30.i.i

land.lhs.true25.i.i.cond.false47.i.i_crit_edge:   ; preds = %land.lhs.true25.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false47.i.i

land.lhs.true30.i.i:                              ; preds = %land.lhs.true25.i.i
  %sriov_rreg34.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %725, i32 0, i32 13
  %726 = ptrtoint ptr %sriov_rreg34.i.i to i32
  call void @__asan_load4_noabort(i32 %726)
  %727 = load ptr, ptr %sriov_rreg34.i.i, align 4
  %tobool35.not.i.i = icmp eq ptr %727, null
  br i1 %tobool35.not.i.i, label %land.lhs.true30.i.i.cond.false47.i.i_crit_edge, label %cond.true36.i.i

land.lhs.true30.i.i.cond.false47.i.i_crit_edge:   ; preds = %land.lhs.true30.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false47.i.i

cond.true36.i.i:                                  ; preds = %land.lhs.true30.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx42.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %728 = ptrtoint ptr %arrayidx42.i.i to i32
  call void @__asan_load4_noabort(i32 %728)
  %729 = load ptr, ptr %arrayidx42.i.i, align 8
  %arrayidx44.i.i = getelementptr i32, ptr %729, i32 1
  %730 = ptrtoint ptr %arrayidx44.i.i to i32
  call void @__asan_load4_noabort(i32 %730)
  %731 = load i32, ptr %arrayidx44.i.i, align 4
  %add45.i.i = add i32 %731, 20487
  %call46.i.i = call i32 %727(ptr noundef %handle, i32 noundef %add45.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end54.i.i

cond.false47.i.i:                                 ; preds = %land.lhs.true30.i.i.cond.false47.i.i_crit_edge, %land.lhs.true25.i.i.cond.false47.i.i_crit_edge, %cond.end.i.i.cond.false47.i.i_crit_edge
  %arrayidx49.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %732 = ptrtoint ptr %arrayidx49.i.i to i32
  call void @__asan_load4_noabort(i32 %732)
  %733 = load ptr, ptr %arrayidx49.i.i, align 8
  %arrayidx51.i.i = getelementptr i32, ptr %733, i32 1
  %734 = ptrtoint ptr %arrayidx51.i.i to i32
  call void @__asan_load4_noabort(i32 %734)
  %735 = load i32, ptr %arrayidx51.i.i, align 4
  %add52.i.i = add i32 %735, 20487
  %call53.i.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add52.i.i, i32 noundef 0) #13
  br label %cond.end54.i.i

cond.end54.i.i:                                   ; preds = %cond.false47.i.i, %cond.true36.i.i
  %cond55.i.i = phi i32 [ %call46.i.i, %cond.true36.i.i ], [ %call53.i.i, %cond.false47.i.i ]
  %or.i287.i = or i32 %cond55.i.i, %cond.i286.i
  br label %gfx_v10_0_get_tcc_info.exit.i

if.else.i.i:                                      ; preds = %gfx_v10_0_get_cu_info.exit.i
  br i1 %tobool.not.i279.i, label %if.else.i.i.cond.false82.i.i_crit_edge, label %land.lhs.true60.i.i

if.else.i.i.cond.false82.i.i_crit_edge:           ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82.i.i

land.lhs.true60.i.i:                              ; preds = %if.else.i.i
  %funcs63.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %736 = ptrtoint ptr %funcs63.i.i to i32
  call void @__asan_load4_noabort(i32 %736)
  %737 = load ptr, ptr %funcs63.i.i, align 4
  %tobool64.not.i.i = icmp eq ptr %737, null
  br i1 %tobool64.not.i.i, label %land.lhs.true60.i.i.cond.false82.i.i_crit_edge, label %land.lhs.true65.i.i

land.lhs.true60.i.i.cond.false82.i.i_crit_edge:   ; preds = %land.lhs.true60.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82.i.i

land.lhs.true65.i.i:                              ; preds = %land.lhs.true60.i.i
  %sriov_rreg69.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %737, i32 0, i32 13
  %738 = ptrtoint ptr %sriov_rreg69.i.i to i32
  call void @__asan_load4_noabort(i32 %738)
  %739 = load ptr, ptr %sriov_rreg69.i.i, align 4
  %tobool70.not.i.i = icmp eq ptr %739, null
  br i1 %tobool70.not.i.i, label %land.lhs.true65.i.i.cond.false82.i.i_crit_edge, label %cond.true71.i.i

land.lhs.true65.i.i.cond.false82.i.i_crit_edge:   ; preds = %land.lhs.true65.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82.i.i

cond.true71.i.i:                                  ; preds = %land.lhs.true65.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx77.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %740 = ptrtoint ptr %arrayidx77.i.i to i32
  call void @__asan_load4_noabort(i32 %740)
  %741 = load ptr, ptr %arrayidx77.i.i, align 8
  %arrayidx79.i.i = getelementptr i32, ptr %741, i32 1
  %742 = ptrtoint ptr %arrayidx79.i.i to i32
  call void @__asan_load4_noabort(i32 %742)
  %743 = load i32, ptr %arrayidx79.i.i, align 4
  %add80.i.i = add i32 %743, 20490
  %call81.i.i = call i32 %739(ptr noundef %handle, i32 noundef %add80.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end89.i.i

cond.false82.i.i:                                 ; preds = %land.lhs.true65.i.i.cond.false82.i.i_crit_edge, %land.lhs.true60.i.i.cond.false82.i.i_crit_edge, %if.else.i.i.cond.false82.i.i_crit_edge
  %arrayidx84.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %744 = ptrtoint ptr %arrayidx84.i.i to i32
  call void @__asan_load4_noabort(i32 %744)
  %745 = load ptr, ptr %arrayidx84.i.i, align 8
  %arrayidx86.i.i = getelementptr i32, ptr %745, i32 1
  %746 = ptrtoint ptr %arrayidx86.i.i to i32
  call void @__asan_load4_noabort(i32 %746)
  %747 = load i32, ptr %arrayidx86.i.i, align 4
  %add87.i.i = add i32 %747, 20490
  %call88.i.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add87.i.i, i32 noundef 0) #13
  br label %cond.end89.i.i

cond.end89.i.i:                                   ; preds = %cond.false82.i.i, %cond.true71.i.i
  %cond90.i.i = phi i32 [ %call81.i.i, %cond.true71.i.i ], [ %call88.i.i, %cond.false82.i.i ]
  %748 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %748)
  %749 = load i32, ptr %virt.i101, align 8
  %and93.i.i = and i32 %749, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93.i.i)
  %tobool94.not.i.i = icmp eq i32 %and93.i.i, 0
  br i1 %tobool94.not.i.i, label %cond.end89.i.i.cond.false117.i.i_crit_edge, label %land.lhs.true95.i.i

cond.end89.i.i.cond.false117.i.i_crit_edge:       ; preds = %cond.end89.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i.i

land.lhs.true95.i.i:                              ; preds = %cond.end89.i.i
  %funcs98.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %750 = ptrtoint ptr %funcs98.i.i to i32
  call void @__asan_load4_noabort(i32 %750)
  %751 = load ptr, ptr %funcs98.i.i, align 4
  %tobool99.not.i.i = icmp eq ptr %751, null
  br i1 %tobool99.not.i.i, label %land.lhs.true95.i.i.cond.false117.i.i_crit_edge, label %land.lhs.true100.i.i

land.lhs.true95.i.i.cond.false117.i.i_crit_edge:  ; preds = %land.lhs.true95.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i.i

land.lhs.true100.i.i:                             ; preds = %land.lhs.true95.i.i
  %sriov_rreg104.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %751, i32 0, i32 13
  %752 = ptrtoint ptr %sriov_rreg104.i.i to i32
  call void @__asan_load4_noabort(i32 %752)
  %753 = load ptr, ptr %sriov_rreg104.i.i, align 4
  %tobool105.not.i.i = icmp eq ptr %753, null
  br i1 %tobool105.not.i.i, label %land.lhs.true100.i.i.cond.false117.i.i_crit_edge, label %cond.true106.i.i

land.lhs.true100.i.i.cond.false117.i.i_crit_edge: ; preds = %land.lhs.true100.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i.i

cond.true106.i.i:                                 ; preds = %land.lhs.true100.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx112.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %754 = ptrtoint ptr %arrayidx112.i.i to i32
  call void @__asan_load4_noabort(i32 %754)
  %755 = load ptr, ptr %arrayidx112.i.i, align 8
  %arrayidx114.i.i = getelementptr i32, ptr %755, i32 1
  %756 = ptrtoint ptr %arrayidx114.i.i to i32
  call void @__asan_load4_noabort(i32 %756)
  %757 = load i32, ptr %arrayidx114.i.i, align 4
  %add115.i.i = add i32 %757, 20491
  %call116.i.i = call i32 %753(ptr noundef %handle, i32 noundef %add115.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end124.i.i

cond.false117.i.i:                                ; preds = %land.lhs.true100.i.i.cond.false117.i.i_crit_edge, %land.lhs.true95.i.i.cond.false117.i.i_crit_edge, %cond.end89.i.i.cond.false117.i.i_crit_edge
  %arrayidx119.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %758 = ptrtoint ptr %arrayidx119.i.i to i32
  call void @__asan_load4_noabort(i32 %758)
  %759 = load ptr, ptr %arrayidx119.i.i, align 8
  %arrayidx121.i.i = getelementptr i32, ptr %759, i32 1
  %760 = ptrtoint ptr %arrayidx121.i.i to i32
  call void @__asan_load4_noabort(i32 %760)
  %761 = load i32, ptr %arrayidx121.i.i, align 4
  %add122.i.i = add i32 %761, 20491
  %call123.i.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add122.i.i, i32 noundef 0) #13
  br label %cond.end124.i.i

cond.end124.i.i:                                  ; preds = %cond.false117.i.i, %cond.true106.i.i
  %cond125.i.i = phi i32 [ %call116.i.i, %cond.true106.i.i ], [ %call123.i.i, %cond.false117.i.i ]
  %or126.i.i = or i32 %cond125.i.i, %cond90.i.i
  br label %gfx_v10_0_get_tcc_info.exit.i

gfx_v10_0_get_tcc_info.exit.i:                    ; preds = %cond.end124.i.i, %cond.end54.i.i
  %tcc_disable.0.i.i = phi i32 [ %or.i287.i, %cond.end54.i.i ], [ %or126.i.i, %cond.end124.i.i ]
  %shr.i.i = lshr i32 %tcc_disable.0.i.i, 16
  %762 = shl i32 %tcc_disable.0.i.i, 8
  %shl.i288.i = and i32 %762, 16711680
  %or130.i.i = or i32 %shl.i288.i, %shr.i.i
  %conv.i.i = zext i32 %or130.i.i to i64
  %tcc_disabled_mask.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 36
  %763 = ptrtoint ptr %tcc_disabled_mask.i.i to i32
  call void @__asan_store8_noabort(i32 %763)
  store i64 %conv.i.i, ptr %tcc_disabled_mask.i.i, align 8
  %764 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %764)
  %765 = load i32, ptr %arrayidx.i70, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 656127, i32 %765)
  %cmp.i291.i = icmp ugt i32 %765, 656127
  br i1 %cmp.i291.i, label %gfx_v10_0_get_tcc_info.exit.i.gfx_v10_0_init_pa_sc_tile_steering_override.exit.i_crit_edge, label %if.end.i296.i

gfx_v10_0_get_tcc_info.exit.i.gfx_v10_0_init_pa_sc_tile_steering_override.exit.i_crit_edge: ; preds = %gfx_v10_0_get_tcc_info.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_init_pa_sc_tile_steering_override.exit.i

if.end.i296.i:                                    ; preds = %gfx_v10_0_get_tcc_info.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %766 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %766)
  %767 = load i32, ptr %config.i.i, align 8
  %768 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %768)
  %769 = load i32, ptr %max_sh_per_se.i.i, align 4
  %mul.i294.i = mul i32 %769, %767
  %num_sc_per_sh.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 33
  %770 = ptrtoint ptr %num_sc_per_sh.i.i to i32
  call void @__asan_load4_noabort(i32 %770)
  %771 = load i32, ptr %num_sc_per_sh.i.i, align 4
  %mul6.i.i = mul i32 %mul.i294.i, %771
  %call.i295.i = call fastcc i32 @gfx_v10_0_get_rb_active_bitmap(ptr noundef %handle) #13
  %call.i.i313.i = call i32 @__sw_hweight32(i32 noundef %call.i295.i) #13
  %772 = ptrtoint ptr %num_sc_per_sh.i.i to i32
  call void @__asan_load4_noabort(i32 %772)
  %773 = load i32, ptr %num_sc_per_sh.i.i, align 4
  %div.i316.i = udiv i32 %call.i.i313.i, %773
  %num_packer_per_sc292.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 34
  %774 = ptrtoint ptr %num_packer_per_sc292.i.i to i32
  call void @__asan_load4_noabort(i32 %774)
  %775 = load i32, ptr %num_packer_per_sc292.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mul6.i.i)
  %cmp.i.i.i = icmp ugt i32 %mul6.i.i, 1
  %sub.i467.i.i = add i32 %mul6.i.i, -1
  %776 = call i32 @llvm.ctlz.i32(i32 %sub.i467.i.i, i1 false) #13, !range !477
  %.neg = mul nuw nsw i32 %776, 12288
  %.neg.op = and i32 %.neg, 12288
  %and323.i.i = select i1 %cmp.i.i.i, i32 %.neg.op, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %div.i316.i)
  %cmp.i469.i.i = icmp ugt i32 %div.i316.i, 1
  %sub.i470.i.i = add i32 %div.i316.i, -1
  %777 = call i32 @llvm.ctlz.i32(i32 %sub.i470.i.i, i1 false) #13, !range !477
  %.neg244 = mul nuw nsw i32 %777, 196608
  %.neg244.op = and i32 %.neg244, 196608
  %and358.i.i = select i1 %cmp.i469.i.i, i32 %.neg244.op, i32 0
  %or359.i.i = or i32 %and358.i.i, %and323.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %775)
  %cmp.i484.i.i = icmp ugt i32 %775, 1
  %sub.i485.i.i = add i32 %775, -1
  %778 = call i32 @llvm.ctlz.i32(i32 %sub.i485.i.i, i1 false) #13, !range !477
  %.neg245 = shl nuw nsw i32 %778, 20
  %.neg245.op = and i32 %.neg245, 1048576
  %and394.i.i = select i1 %cmp.i484.i.i, i32 %.neg245.op, i32 0
  %or395.i.i = or i32 %or359.i.i, %and394.i.i
  br label %gfx_v10_0_init_pa_sc_tile_steering_override.exit.i

gfx_v10_0_init_pa_sc_tile_steering_override.exit.i: ; preds = %if.end.i296.i, %gfx_v10_0_get_tcc_info.exit.i.gfx_v10_0_init_pa_sc_tile_steering_override.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %or395.i.i, %if.end.i296.i ], [ 0, %gfx_v10_0_get_tcc_info.exit.i.gfx_v10_0_init_pa_sc_tile_steering_override.exit.i_crit_edge ]
  %pa_sc_tile_steering_override.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 35
  %779 = ptrtoint ptr %pa_sc_tile_steering_override.i to i32
  call void @__asan_store4_noabort(i32 %779)
  store i32 %retval.0.i.i, ptr %pa_sc_tile_steering_override.i, align 4
  %srbm_mutex.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 20
  call void @mutex_lock_nested(ptr noundef %srbm_mutex.i, i32 noundef 0) #13
  %num_ids.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 65, i32 0, i32 0, i32 1
  %780 = ptrtoint ptr %num_ids.i to i32
  call void @__asan_load4_noabort(i32 %780)
  %781 = load i32, ptr %num_ids.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %781)
  %cmp413.not.i = icmp eq i32 %781, 0
  br i1 %cmp413.not.i, label %gfx_v10_0_init_pa_sc_tile_steering_override.exit.i.for.end.i_crit_edge, label %for.body.lr.ph.i

gfx_v10_0_init_pa_sc_tile_steering_override.exit.i.for.end.i_crit_edge: ; preds = %gfx_v10_0_init_pa_sc_tile_steering_override.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %gfx_v10_0_init_pa_sc_tile_steering_override.exit.i
  %funcs100.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx114.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %private_aperture_start.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 28
  %shared_aperture_start.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 26
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0414.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  call void @nv_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef %i.0414.i) #13
  %782 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %782)
  %783 = load i32, ptr %virt.i101, align 8
  %and95.i = and i32 %783, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and95.i)
  %tobool96.not.i = icmp eq i32 %and95.i, 0
  br i1 %tobool96.not.i, label %for.body.i.cond.false118.i_crit_edge, label %land.lhs.true97.i

for.body.i.cond.false118.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i

land.lhs.true97.i:                                ; preds = %for.body.i
  %784 = ptrtoint ptr %funcs100.i to i32
  call void @__asan_load4_noabort(i32 %784)
  %785 = load ptr, ptr %funcs100.i, align 4
  %tobool101.not.i = icmp eq ptr %785, null
  br i1 %tobool101.not.i, label %land.lhs.true97.i.cond.false118.i_crit_edge, label %land.lhs.true102.i

land.lhs.true97.i.cond.false118.i_crit_edge:      ; preds = %land.lhs.true97.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i

land.lhs.true102.i:                               ; preds = %land.lhs.true97.i
  %sriov_wreg106.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %785, i32 0, i32 12
  %786 = ptrtoint ptr %sriov_wreg106.i to i32
  call void @__asan_load4_noabort(i32 %786)
  %787 = load ptr, ptr %sriov_wreg106.i, align 4
  %tobool107.not.i = icmp eq ptr %787, null
  br i1 %tobool107.not.i, label %land.lhs.true102.i.cond.false118.i_crit_edge, label %cond.true108.i

land.lhs.true102.i.cond.false118.i_crit_edge:     ; preds = %land.lhs.true102.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i

cond.true108.i:                                   ; preds = %land.lhs.true102.i
  call void @__sanitizer_cov_trace_pc() #15
  %788 = ptrtoint ptr %arrayidx114.i to i32
  call void @__asan_load4_noabort(i32 %788)
  %789 = load ptr, ptr %arrayidx114.i, align 8
  %790 = ptrtoint ptr %789 to i32
  call void @__asan_load4_noabort(i32 %790)
  %791 = load i32, ptr %789, align 4
  %add117.i = add i32 %791, 4269
  call void %787(ptr noundef %handle, i32 noundef %add117.i, i32 noundef 49164, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end124.i

cond.false118.i:                                  ; preds = %land.lhs.true102.i.cond.false118.i_crit_edge, %land.lhs.true97.i.cond.false118.i_crit_edge, %for.body.i.cond.false118.i_crit_edge
  %792 = ptrtoint ptr %arrayidx114.i to i32
  call void @__asan_load4_noabort(i32 %792)
  %793 = load ptr, ptr %arrayidx114.i, align 8
  %794 = ptrtoint ptr %793 to i32
  call void @__asan_load4_noabort(i32 %794)
  %795 = load i32, ptr %793, align 4
  %add123.i = add i32 %795, 4269
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add123.i, i32 noundef 49164, i32 noundef 0) #13
  br label %cond.end124.i

cond.end124.i:                                    ; preds = %cond.false118.i, %cond.true108.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0414.i)
  %cmp125.not.i = icmp eq i32 %i.0414.i, 0
  br i1 %cmp125.not.i, label %cond.end124.i.for.inc.i_crit_edge, label %if.then.i131

cond.end124.i.for.inc.i_crit_edge:                ; preds = %cond.end124.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i

if.then.i131:                                     ; preds = %cond.end124.i
  %796 = ptrtoint ptr %private_aperture_start.i to i32
  call void @__asan_load8_noabort(i32 %796)
  %797 = load i64, ptr %private_aperture_start.i, align 8
  %shr.i = lshr i64 %797, 48
  %798 = ptrtoint ptr %shared_aperture_start.i to i32
  call void @__asan_load8_noabort(i32 %798)
  %799 = load i64, ptr %shared_aperture_start.i, align 8
  %800 = lshr i64 %799, 32
  %shl132.i = and i64 %800, 4294901760
  %or134.i = or i64 %shl132.i, %shr.i
  %conv135.i = trunc i64 %or134.i to i32
  %801 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %801)
  %802 = load i32, ptr %virt.i101, align 8
  %and138.i = and i32 %802, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and138.i)
  %tobool139.not.i = icmp eq i32 %and138.i, 0
  br i1 %tobool139.not.i, label %if.then.i131.cond.false161.i_crit_edge, label %land.lhs.true140.i

if.then.i131.cond.false161.i_crit_edge:           ; preds = %if.then.i131
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false161.i

land.lhs.true140.i:                               ; preds = %if.then.i131
  %803 = ptrtoint ptr %funcs100.i to i32
  call void @__asan_load4_noabort(i32 %803)
  %804 = load ptr, ptr %funcs100.i, align 4
  %tobool144.not.i = icmp eq ptr %804, null
  br i1 %tobool144.not.i, label %land.lhs.true140.i.cond.false161.i_crit_edge, label %land.lhs.true145.i

land.lhs.true140.i.cond.false161.i_crit_edge:     ; preds = %land.lhs.true140.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false161.i

land.lhs.true145.i:                               ; preds = %land.lhs.true140.i
  %sriov_wreg149.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %804, i32 0, i32 12
  %805 = ptrtoint ptr %sriov_wreg149.i to i32
  call void @__asan_load4_noabort(i32 %805)
  %806 = load ptr, ptr %sriov_wreg149.i, align 4
  %tobool150.not.i = icmp eq ptr %806, null
  br i1 %tobool150.not.i, label %land.lhs.true145.i.cond.false161.i_crit_edge, label %cond.true151.i

land.lhs.true145.i.cond.false161.i_crit_edge:     ; preds = %land.lhs.true145.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false161.i

cond.true151.i:                                   ; preds = %land.lhs.true145.i
  call void @__sanitizer_cov_trace_pc() #15
  %807 = ptrtoint ptr %arrayidx114.i to i32
  call void @__asan_load4_noabort(i32 %807)
  %808 = load ptr, ptr %arrayidx114.i, align 8
  %809 = ptrtoint ptr %808 to i32
  call void @__asan_load4_noabort(i32 %809)
  %810 = load i32, ptr %808, align 4
  %add160.i = add i32 %810, 4266
  call void %806(ptr noundef %handle, i32 noundef %add160.i, i32 noundef %conv135.i, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc.i

cond.false161.i:                                  ; preds = %land.lhs.true145.i.cond.false161.i_crit_edge, %land.lhs.true140.i.cond.false161.i_crit_edge, %if.then.i131.cond.false161.i_crit_edge
  %811 = ptrtoint ptr %arrayidx114.i to i32
  call void @__asan_load4_noabort(i32 %811)
  %812 = load ptr, ptr %arrayidx114.i, align 8
  %813 = ptrtoint ptr %812 to i32
  call void @__asan_load4_noabort(i32 %813)
  %814 = load i32, ptr %812, align 4
  %add166.i = add i32 %814, 4266
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add166.i, i32 noundef %conv135.i, i32 noundef 0) #13
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.false161.i, %cond.true151.i, %cond.end124.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.0414.i, 1
  %815 = ptrtoint ptr %num_ids.i to i32
  call void @__asan_load4_noabort(i32 %815)
  %816 = load i32, ptr %num_ids.i, align 4
  %cmp.i132 = icmp ult i32 %inc.i, %816
  br i1 %cmp.i132, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %gfx_v10_0_init_pa_sc_tile_steering_override.exit.i.for.end.i_crit_edge
  call void @nv_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  call void @mutex_unlock(ptr noundef %srbm_mutex.i) #13
  call void @mutex_lock_nested(ptr noundef %srbm_mutex.i, i32 noundef 0) #13
  %first_kfd_vmid.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 65, i32 1
  %817 = ptrtoint ptr %first_kfd_vmid.i.i to i32
  call void @__asan_load4_noabort(i32 %817)
  %818 = load i32, ptr %first_kfd_vmid.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %818)
  %cmp275.i.i = icmp slt i32 %818, 16
  br i1 %cmp275.i.i, label %for.body.lr.ph.i.i, label %for.end.i.for.end.i338.i_crit_edge

for.end.i.for.end.i338.i_crit_edge:               ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i338.i

for.body.lr.ph.i.i:                               ; preds = %for.end.i
  %funcs.i324.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i325.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i337.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.0276.i.i = phi i32 [ %818, %for.body.lr.ph.i.i ], [ %inc.i335.i, %for.inc.i337.i.for.body.i.i_crit_edge ]
  call void @nv_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef %i.0276.i.i) #13
  %819 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %819)
  %820 = load i32, ptr %virt.i101, align 8
  %and.i326.i = and i32 %820, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i326.i)
  %tobool.not.i327.i = icmp eq i32 %and.i326.i, 0
  br i1 %tobool.not.i327.i, label %for.body.i.i.cond.false.i332.i_crit_edge, label %land.lhs.true.i329.i

for.body.i.i.cond.false.i332.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i332.i

land.lhs.true.i329.i:                             ; preds = %for.body.i.i
  %821 = ptrtoint ptr %funcs.i324.i to i32
  call void @__asan_load4_noabort(i32 %821)
  %822 = load ptr, ptr %funcs.i324.i, align 4
  %tobool1.not.i328.i = icmp eq ptr %822, null
  br i1 %tobool1.not.i328.i, label %land.lhs.true.i329.i.cond.false.i332.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i329.i.cond.false.i332.i_crit_edge: ; preds = %land.lhs.true.i329.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i332.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i329.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %822, i32 0, i32 12
  %823 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %823)
  %824 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool6.not.i.i = icmp eq ptr %824, null
  br i1 %tobool6.not.i.i, label %land.lhs.true2.i.i.cond.false.i332.i_crit_edge, label %cond.true.i331.i

land.lhs.true2.i.i.cond.false.i332.i_crit_edge:   ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i332.i

cond.true.i331.i:                                 ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %825 = ptrtoint ptr %arrayidx.i325.i to i32
  call void @__asan_load4_noabort(i32 %825)
  %826 = load ptr, ptr %arrayidx.i325.i, align 8
  %827 = ptrtoint ptr %826 to i32
  call void @__asan_load4_noabort(i32 %827)
  %828 = load i32, ptr %826, align 4
  %add.i330.i = add i32 %828, 4269
  call void %824(ptr noundef %handle, i32 noundef %add.i330.i, i32 noundef 49164, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i333.i

cond.false.i332.i:                                ; preds = %land.lhs.true2.i.i.cond.false.i332.i_crit_edge, %land.lhs.true.i329.i.cond.false.i332.i_crit_edge, %for.body.i.i.cond.false.i332.i_crit_edge
  %829 = ptrtoint ptr %arrayidx.i325.i to i32
  call void @__asan_load4_noabort(i32 %829)
  %830 = load ptr, ptr %arrayidx.i325.i, align 8
  %831 = ptrtoint ptr %830 to i32
  call void @__asan_load4_noabort(i32 %831)
  %832 = load i32, ptr %830, align 4
  %add17.i.i = add i32 %832, 4269
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add17.i.i, i32 noundef 49164, i32 noundef 0) #13
  br label %cond.end.i333.i

cond.end.i333.i:                                  ; preds = %cond.false.i332.i, %cond.true.i331.i
  %833 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %833)
  %834 = load i32, ptr %virt.i101, align 8
  %and20.i.i = and i32 %834, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i.i)
  %tobool21.not.i.i = icmp eq i32 %and20.i.i, 0
  br i1 %tobool21.not.i.i, label %cond.end.i333.i.cond.false43.i.i_crit_edge, label %land.lhs.true22.i.i

cond.end.i333.i.cond.false43.i.i_crit_edge:       ; preds = %cond.end.i333.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i.i

land.lhs.true22.i.i:                              ; preds = %cond.end.i333.i
  %835 = ptrtoint ptr %funcs.i324.i to i32
  call void @__asan_load4_noabort(i32 %835)
  %836 = load ptr, ptr %funcs.i324.i, align 4
  %tobool26.not.i.i = icmp eq ptr %836, null
  br i1 %tobool26.not.i.i, label %land.lhs.true22.i.i.cond.false43.i.i_crit_edge, label %land.lhs.true27.i.i

land.lhs.true22.i.i.cond.false43.i.i_crit_edge:   ; preds = %land.lhs.true22.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i.i

land.lhs.true27.i.i:                              ; preds = %land.lhs.true22.i.i
  %sriov_wreg31.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %836, i32 0, i32 12
  %837 = ptrtoint ptr %sriov_wreg31.i.i to i32
  call void @__asan_load4_noabort(i32 %837)
  %838 = load ptr, ptr %sriov_wreg31.i.i, align 4
  %tobool32.not.i.i = icmp eq ptr %838, null
  br i1 %tobool32.not.i.i, label %land.lhs.true27.i.i.cond.false43.i.i_crit_edge, label %cond.true33.i.i

land.lhs.true27.i.i.cond.false43.i.i_crit_edge:   ; preds = %land.lhs.true27.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i.i

cond.true33.i.i:                                  ; preds = %land.lhs.true27.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %839 = ptrtoint ptr %arrayidx.i325.i to i32
  call void @__asan_load4_noabort(i32 %839)
  %840 = load ptr, ptr %arrayidx.i325.i, align 8
  %841 = ptrtoint ptr %840 to i32
  call void @__asan_load4_noabort(i32 %841)
  %842 = load i32, ptr %840, align 4
  %add42.i.i = add i32 %842, 4266
  call void %838(ptr noundef %handle, i32 noundef %add42.i.i, i32 noundef 1610637312, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc.i337.i

cond.false43.i.i:                                 ; preds = %land.lhs.true27.i.i.cond.false43.i.i_crit_edge, %land.lhs.true22.i.i.cond.false43.i.i_crit_edge, %cond.end.i333.i.cond.false43.i.i_crit_edge
  %843 = ptrtoint ptr %arrayidx.i325.i to i32
  call void @__asan_load4_noabort(i32 %843)
  %844 = load ptr, ptr %arrayidx.i325.i, align 8
  %845 = ptrtoint ptr %844 to i32
  call void @__asan_load4_noabort(i32 %845)
  %846 = load i32, ptr %844, align 4
  %add48.i334.i = add i32 %846, 4266
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add48.i334.i, i32 noundef 1610637312, i32 noundef 0) #13
  br label %for.inc.i337.i

for.inc.i337.i:                                   ; preds = %cond.false43.i.i, %cond.true33.i.i
  %inc.i335.i = add i32 %i.0276.i.i, 1
  %exitcond.not.i336.i = icmp eq i32 %inc.i335.i, 16
  br i1 %exitcond.not.i336.i, label %for.inc.i337.i.for.end.i338.i_crit_edge, label %for.inc.i337.i.for.body.i.i_crit_edge

for.inc.i337.i.for.body.i.i_crit_edge:            ; preds = %for.inc.i337.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

for.inc.i337.i.for.end.i338.i_crit_edge:          ; preds = %for.inc.i337.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i338.i

for.end.i338.i:                                   ; preds = %for.inc.i337.i.for.end.i338.i_crit_edge, %for.end.i.for.end.i338.i_crit_edge
  call void @nv_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  call void @mutex_unlock(ptr noundef %srbm_mutex.i) #13
  %847 = ptrtoint ptr %first_kfd_vmid.i.i to i32
  call void @__asan_load4_noabort(i32 %847)
  %848 = load i32, ptr %first_kfd_vmid.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %848)
  %cmp54277.i.i = icmp slt i32 %848, 16
  br i1 %cmp54277.i.i, label %for.body55.lr.ph.i.i, label %for.end.i338.i.gfx_v10_0_init_compute_vmid.exit.i_crit_edge

for.end.i338.i.gfx_v10_0_init_compute_vmid.exit.i_crit_edge: ; preds = %for.end.i338.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_init_compute_vmid.exit.i

for.body55.lr.ph.i.i:                             ; preds = %for.end.i338.i
  %funcs63.i339.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx77.i340.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.body55.i.i

for.body55.i.i:                                   ; preds = %for.inc195.i.i.for.body55.i.i_crit_edge, %for.body55.lr.ph.i.i
  %i.1278.i.i = phi i32 [ %848, %for.body55.lr.ph.i.i ], [ %inc196.i.i, %for.inc195.i.i.for.body55.i.i_crit_edge ]
  %849 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %849)
  %850 = load i32, ptr %virt.i101, align 8
  %and58.i.i = and i32 %850, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58.i.i)
  %tobool59.not.i.i = icmp eq i32 %and58.i.i, 0
  br i1 %tobool59.not.i.i, label %for.body55.i.i.cond.false82.i349.i_crit_edge, label %land.lhs.true60.i342.i

for.body55.i.i.cond.false82.i349.i_crit_edge:     ; preds = %for.body55.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82.i349.i

land.lhs.true60.i342.i:                           ; preds = %for.body55.i.i
  %851 = ptrtoint ptr %funcs63.i339.i to i32
  call void @__asan_load4_noabort(i32 %851)
  %852 = load ptr, ptr %funcs63.i339.i, align 4
  %tobool64.not.i341.i = icmp eq ptr %852, null
  br i1 %tobool64.not.i341.i, label %land.lhs.true60.i342.i.cond.false82.i349.i_crit_edge, label %land.lhs.true65.i344.i

land.lhs.true60.i342.i.cond.false82.i349.i_crit_edge: ; preds = %land.lhs.true60.i342.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82.i349.i

land.lhs.true65.i344.i:                           ; preds = %land.lhs.true60.i342.i
  %sriov_wreg69.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %852, i32 0, i32 12
  %853 = ptrtoint ptr %sriov_wreg69.i.i to i32
  call void @__asan_load4_noabort(i32 %853)
  %854 = load ptr, ptr %sriov_wreg69.i.i, align 4
  %tobool70.not.i343.i = icmp eq ptr %854, null
  br i1 %tobool70.not.i343.i, label %land.lhs.true65.i344.i.cond.false82.i349.i_crit_edge, label %cond.true71.i347.i

land.lhs.true65.i344.i.cond.false82.i349.i_crit_edge: ; preds = %land.lhs.true65.i344.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82.i349.i

cond.true71.i347.i:                               ; preds = %land.lhs.true65.i344.i
  call void @__sanitizer_cov_trace_pc() #15
  %855 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %855)
  %856 = load ptr, ptr %arrayidx77.i340.i, align 8
  %857 = ptrtoint ptr %856 to i32
  call void @__asan_load4_noabort(i32 %857)
  %858 = load i32, ptr %856, align 4
  %mul.i345.i = shl i32 %i.1278.i.i, 1
  %add80.i346.i = add i32 %mul.i345.i, 8352
  %add81.i.i = add i32 %add80.i346.i, %858
  call void %854(ptr noundef %handle, i32 noundef %add81.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end90.i.i

cond.false82.i349.i:                              ; preds = %land.lhs.true65.i344.i.cond.false82.i349.i_crit_edge, %land.lhs.true60.i342.i.cond.false82.i349.i_crit_edge, %for.body55.i.i.cond.false82.i349.i_crit_edge
  %859 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %859)
  %860 = load ptr, ptr %arrayidx77.i340.i, align 8
  %861 = ptrtoint ptr %860 to i32
  call void @__asan_load4_noabort(i32 %861)
  %862 = load i32, ptr %860, align 4
  %mul88.i.i = shl i32 %i.1278.i.i, 1
  %add87.i348.i = add i32 %mul88.i.i, 8352
  %add89.i.i = add i32 %add87.i348.i, %862
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add89.i.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end90.i.i

cond.end90.i.i:                                   ; preds = %cond.false82.i349.i, %cond.true71.i347.i
  %863 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %863)
  %864 = load i32, ptr %virt.i101, align 8
  %and93.i350.i = and i32 %864, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93.i350.i)
  %tobool94.not.i351.i = icmp eq i32 %and93.i350.i, 0
  br i1 %tobool94.not.i351.i, label %cond.end90.i.i.cond.false118.i.i_crit_edge, label %land.lhs.true95.i353.i

cond.end90.i.i.cond.false118.i.i_crit_edge:       ; preds = %cond.end90.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i.i

land.lhs.true95.i353.i:                           ; preds = %cond.end90.i.i
  %865 = ptrtoint ptr %funcs63.i339.i to i32
  call void @__asan_load4_noabort(i32 %865)
  %866 = load ptr, ptr %funcs63.i339.i, align 4
  %tobool99.not.i352.i = icmp eq ptr %866, null
  br i1 %tobool99.not.i352.i, label %land.lhs.true95.i353.i.cond.false118.i.i_crit_edge, label %land.lhs.true100.i355.i

land.lhs.true95.i353.i.cond.false118.i.i_crit_edge: ; preds = %land.lhs.true95.i353.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i.i

land.lhs.true100.i355.i:                          ; preds = %land.lhs.true95.i353.i
  %sriov_wreg104.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %866, i32 0, i32 12
  %867 = ptrtoint ptr %sriov_wreg104.i.i to i32
  call void @__asan_load4_noabort(i32 %867)
  %868 = load ptr, ptr %sriov_wreg104.i.i, align 4
  %tobool105.not.i354.i = icmp eq ptr %868, null
  br i1 %tobool105.not.i354.i, label %land.lhs.true100.i355.i.cond.false118.i.i_crit_edge, label %cond.true106.i358.i

land.lhs.true100.i355.i.cond.false118.i.i_crit_edge: ; preds = %land.lhs.true100.i355.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i.i

cond.true106.i358.i:                              ; preds = %land.lhs.true100.i355.i
  call void @__sanitizer_cov_trace_pc() #15
  %869 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %869)
  %870 = load ptr, ptr %arrayidx77.i340.i, align 8
  %871 = ptrtoint ptr %870 to i32
  call void @__asan_load4_noabort(i32 %871)
  %872 = load i32, ptr %870, align 4
  %mul116.i.i = shl i32 %i.1278.i.i, 1
  %add115.i356.i = add i32 %mul116.i.i, 8353
  %add117.i357.i = add i32 %add115.i356.i, %872
  call void %868(ptr noundef %handle, i32 noundef %add117.i357.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end126.i.i

cond.false118.i.i:                                ; preds = %land.lhs.true100.i355.i.cond.false118.i.i_crit_edge, %land.lhs.true95.i353.i.cond.false118.i.i_crit_edge, %cond.end90.i.i.cond.false118.i.i_crit_edge
  %873 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %873)
  %874 = load ptr, ptr %arrayidx77.i340.i, align 8
  %875 = ptrtoint ptr %874 to i32
  call void @__asan_load4_noabort(i32 %875)
  %876 = load i32, ptr %874, align 4
  %mul124.i.i = shl i32 %i.1278.i.i, 1
  %add123.i359.i = add i32 %mul124.i.i, 8353
  %add125.i.i = add i32 %add123.i359.i, %876
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add125.i.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end126.i.i

cond.end126.i.i:                                  ; preds = %cond.false118.i.i, %cond.true106.i358.i
  %877 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %877)
  %878 = load i32, ptr %virt.i101, align 8
  %and129.i360.i = and i32 %878, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and129.i360.i)
  %tobool130.not.i.i = icmp eq i32 %and129.i360.i, 0
  br i1 %tobool130.not.i.i, label %cond.end126.i.i.cond.false153.i.i_crit_edge, label %land.lhs.true131.i.i

cond.end126.i.i.cond.false153.i.i_crit_edge:      ; preds = %cond.end126.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false153.i.i

land.lhs.true131.i.i:                             ; preds = %cond.end126.i.i
  %879 = ptrtoint ptr %funcs63.i339.i to i32
  call void @__asan_load4_noabort(i32 %879)
  %880 = load ptr, ptr %funcs63.i339.i, align 4
  %tobool135.not.i.i = icmp eq ptr %880, null
  br i1 %tobool135.not.i.i, label %land.lhs.true131.i.i.cond.false153.i.i_crit_edge, label %land.lhs.true136.i.i

land.lhs.true131.i.i.cond.false153.i.i_crit_edge: ; preds = %land.lhs.true131.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false153.i.i

land.lhs.true136.i.i:                             ; preds = %land.lhs.true131.i.i
  %sriov_wreg140.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %880, i32 0, i32 12
  %881 = ptrtoint ptr %sriov_wreg140.i.i to i32
  call void @__asan_load4_noabort(i32 %881)
  %882 = load ptr, ptr %sriov_wreg140.i.i, align 4
  %tobool141.not.i.i = icmp eq ptr %882, null
  br i1 %tobool141.not.i.i, label %land.lhs.true136.i.i.cond.false153.i.i_crit_edge, label %cond.true142.i.i

land.lhs.true136.i.i.cond.false153.i.i_crit_edge: ; preds = %land.lhs.true136.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false153.i.i

cond.true142.i.i:                                 ; preds = %land.lhs.true136.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %883 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %883)
  %884 = load ptr, ptr %arrayidx77.i340.i, align 8
  %885 = ptrtoint ptr %884 to i32
  call void @__asan_load4_noabort(i32 %885)
  %886 = load i32, ptr %884, align 4
  %add151.i.i = add i32 %i.1278.i.i, 8384
  %add152.i.i = add i32 %add151.i.i, %886
  call void %882(ptr noundef %handle, i32 noundef %add152.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end160.i.i

cond.false153.i.i:                                ; preds = %land.lhs.true136.i.i.cond.false153.i.i_crit_edge, %land.lhs.true131.i.i.cond.false153.i.i_crit_edge, %cond.end126.i.i.cond.false153.i.i_crit_edge
  %887 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %887)
  %888 = load ptr, ptr %arrayidx77.i340.i, align 8
  %889 = ptrtoint ptr %888 to i32
  call void @__asan_load4_noabort(i32 %889)
  %890 = load i32, ptr %888, align 4
  %add158.i.i = add i32 %i.1278.i.i, 8384
  %add159.i361.i = add i32 %add158.i.i, %890
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add159.i361.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end160.i.i

cond.end160.i.i:                                  ; preds = %cond.false153.i.i, %cond.true142.i.i
  %891 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %891)
  %892 = load i32, ptr %virt.i101, align 8
  %and163.i.i = and i32 %892, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and163.i.i)
  %tobool164.not.i.i = icmp eq i32 %and163.i.i, 0
  br i1 %tobool164.not.i.i, label %cond.end160.i.i.cond.false187.i.i_crit_edge, label %land.lhs.true165.i.i

cond.end160.i.i.cond.false187.i.i_crit_edge:      ; preds = %cond.end160.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false187.i.i

land.lhs.true165.i.i:                             ; preds = %cond.end160.i.i
  %893 = ptrtoint ptr %funcs63.i339.i to i32
  call void @__asan_load4_noabort(i32 %893)
  %894 = load ptr, ptr %funcs63.i339.i, align 4
  %tobool169.not.i.i = icmp eq ptr %894, null
  br i1 %tobool169.not.i.i, label %land.lhs.true165.i.i.cond.false187.i.i_crit_edge, label %land.lhs.true170.i.i

land.lhs.true165.i.i.cond.false187.i.i_crit_edge: ; preds = %land.lhs.true165.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false187.i.i

land.lhs.true170.i.i:                             ; preds = %land.lhs.true165.i.i
  %sriov_wreg174.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %894, i32 0, i32 12
  %895 = ptrtoint ptr %sriov_wreg174.i.i to i32
  call void @__asan_load4_noabort(i32 %895)
  %896 = load ptr, ptr %sriov_wreg174.i.i, align 4
  %tobool175.not.i.i = icmp eq ptr %896, null
  br i1 %tobool175.not.i.i, label %land.lhs.true170.i.i.cond.false187.i.i_crit_edge, label %cond.true176.i.i

land.lhs.true170.i.i.cond.false187.i.i_crit_edge: ; preds = %land.lhs.true170.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false187.i.i

cond.true176.i.i:                                 ; preds = %land.lhs.true170.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %897 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %897)
  %898 = load ptr, ptr %arrayidx77.i340.i, align 8
  %899 = ptrtoint ptr %898 to i32
  call void @__asan_load4_noabort(i32 %899)
  %900 = load i32, ptr %898, align 4
  %add185.i.i = add i32 %i.1278.i.i, 8400
  %add186.i362.i = add i32 %add185.i.i, %900
  call void %896(ptr noundef %handle, i32 noundef %add186.i362.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc195.i.i

cond.false187.i.i:                                ; preds = %land.lhs.true170.i.i.cond.false187.i.i_crit_edge, %land.lhs.true165.i.i.cond.false187.i.i_crit_edge, %cond.end160.i.i.cond.false187.i.i_crit_edge
  %901 = ptrtoint ptr %arrayidx77.i340.i to i32
  call void @__asan_load4_noabort(i32 %901)
  %902 = load ptr, ptr %arrayidx77.i340.i, align 8
  %903 = ptrtoint ptr %902 to i32
  call void @__asan_load4_noabort(i32 %903)
  %904 = load i32, ptr %902, align 4
  %add192.i.i = add i32 %i.1278.i.i, 8400
  %add193.i.i = add i32 %add192.i.i, %904
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add193.i.i, i32 noundef 0, i32 noundef 0) #13
  br label %for.inc195.i.i

for.inc195.i.i:                                   ; preds = %cond.false187.i.i, %cond.true176.i.i
  %inc196.i.i = add i32 %i.1278.i.i, 1
  %exitcond280.not.i.i = icmp eq i32 %inc196.i.i, 16
  br i1 %exitcond280.not.i.i, label %for.inc195.i.i.gfx_v10_0_init_compute_vmid.exit.i_crit_edge, label %for.inc195.i.i.for.body55.i.i_crit_edge

for.inc195.i.i.for.body55.i.i_crit_edge:          ; preds = %for.inc195.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body55.i.i

for.inc195.i.i.gfx_v10_0_init_compute_vmid.exit.i_crit_edge: ; preds = %for.inc195.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_init_compute_vmid.exit.i

gfx_v10_0_init_compute_vmid.exit.i:               ; preds = %for.inc195.i.i.gfx_v10_0_init_compute_vmid.exit.i_crit_edge, %for.end.i338.i.gfx_v10_0_init_compute_vmid.exit.i_crit_edge
  %funcs.i364.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i365.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.body.i368.i

for.body.i368.i:                                  ; preds = %for.inc.i406.i.for.body.i368.i_crit_edge, %gfx_v10_0_init_compute_vmid.exit.i
  %vmid.0172.i.i = phi i32 [ 1, %gfx_v10_0_init_compute_vmid.exit.i ], [ %inc.i404.i, %for.inc.i406.i.for.body.i368.i_crit_edge ]
  %905 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %905)
  %906 = load i32, ptr %virt.i101, align 8
  %and.i366.i = and i32 %906, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i366.i)
  %tobool.not.i367.i = icmp eq i32 %and.i366.i, 0
  br i1 %tobool.not.i367.i, label %for.body.i368.i.cond.false.i377.i_crit_edge, label %land.lhs.true.i370.i

for.body.i368.i.cond.false.i377.i_crit_edge:      ; preds = %for.body.i368.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i377.i

land.lhs.true.i370.i:                             ; preds = %for.body.i368.i
  %907 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %907)
  %908 = load ptr, ptr %funcs.i364.i, align 4
  %tobool1.not.i369.i = icmp eq ptr %908, null
  br i1 %tobool1.not.i369.i, label %land.lhs.true.i370.i.cond.false.i377.i_crit_edge, label %land.lhs.true2.i373.i

land.lhs.true.i370.i.cond.false.i377.i_crit_edge: ; preds = %land.lhs.true.i370.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i377.i

land.lhs.true2.i373.i:                            ; preds = %land.lhs.true.i370.i
  %sriov_wreg.i371.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %908, i32 0, i32 12
  %909 = ptrtoint ptr %sriov_wreg.i371.i to i32
  call void @__asan_load4_noabort(i32 %909)
  %910 = load ptr, ptr %sriov_wreg.i371.i, align 4
  %tobool6.not.i372.i = icmp eq ptr %910, null
  br i1 %tobool6.not.i372.i, label %land.lhs.true2.i373.i.cond.false.i377.i_crit_edge, label %cond.true.i376.i

land.lhs.true2.i373.i.cond.false.i377.i_crit_edge: ; preds = %land.lhs.true2.i373.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i377.i

cond.true.i376.i:                                 ; preds = %land.lhs.true2.i373.i
  call void @__sanitizer_cov_trace_pc() #15
  %911 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %911)
  %912 = load ptr, ptr %arrayidx.i365.i, align 8
  %913 = ptrtoint ptr %912 to i32
  call void @__asan_load4_noabort(i32 %913)
  %914 = load i32, ptr %912, align 4
  %mul.i374.i = shl nuw i32 %vmid.0172.i.i, 1
  %add.i375.i = add nuw nsw i32 %mul.i374.i, 8352
  %add13.i.i = add i32 %add.i375.i, %914
  call void %910(ptr noundef %handle, i32 noundef %add13.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i380.i

cond.false.i377.i:                                ; preds = %land.lhs.true2.i373.i.cond.false.i377.i_crit_edge, %land.lhs.true.i370.i.cond.false.i377.i_crit_edge, %for.body.i368.i.cond.false.i377.i_crit_edge
  %915 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %915)
  %916 = load ptr, ptr %arrayidx.i365.i, align 8
  %917 = ptrtoint ptr %916 to i32
  call void @__asan_load4_noabort(i32 %917)
  %918 = load i32, ptr %916, align 4
  %mul19.i.i = shl nuw i32 %vmid.0172.i.i, 1
  %add18.i.i = add nuw nsw i32 %mul19.i.i, 8352
  %add20.i.i = add i32 %add18.i.i, %918
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add20.i.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end.i380.i

cond.end.i380.i:                                  ; preds = %cond.false.i377.i, %cond.true.i376.i
  %919 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %919)
  %920 = load i32, ptr %virt.i101, align 8
  %and23.i378.i = and i32 %920, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i378.i)
  %tobool24.not.i379.i = icmp eq i32 %and23.i378.i, 0
  br i1 %tobool24.not.i379.i, label %cond.end.i380.i.cond.false48.i.i_crit_edge, label %land.lhs.true25.i382.i

cond.end.i380.i.cond.false48.i.i_crit_edge:       ; preds = %cond.end.i380.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48.i.i

land.lhs.true25.i382.i:                           ; preds = %cond.end.i380.i
  %921 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %921)
  %922 = load ptr, ptr %funcs.i364.i, align 4
  %tobool29.not.i381.i = icmp eq ptr %922, null
  br i1 %tobool29.not.i381.i, label %land.lhs.true25.i382.i.cond.false48.i.i_crit_edge, label %land.lhs.true30.i384.i

land.lhs.true25.i382.i.cond.false48.i.i_crit_edge: ; preds = %land.lhs.true25.i382.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48.i.i

land.lhs.true30.i384.i:                           ; preds = %land.lhs.true25.i382.i
  %sriov_wreg34.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %922, i32 0, i32 12
  %923 = ptrtoint ptr %sriov_wreg34.i.i to i32
  call void @__asan_load4_noabort(i32 %923)
  %924 = load ptr, ptr %sriov_wreg34.i.i, align 4
  %tobool35.not.i383.i = icmp eq ptr %924, null
  br i1 %tobool35.not.i383.i, label %land.lhs.true30.i384.i.cond.false48.i.i_crit_edge, label %cond.true36.i386.i

land.lhs.true30.i384.i.cond.false48.i.i_crit_edge: ; preds = %land.lhs.true30.i384.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48.i.i

cond.true36.i386.i:                               ; preds = %land.lhs.true30.i384.i
  call void @__sanitizer_cov_trace_pc() #15
  %925 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %925)
  %926 = load ptr, ptr %arrayidx.i365.i, align 8
  %927 = ptrtoint ptr %926 to i32
  call void @__asan_load4_noabort(i32 %927)
  %928 = load i32, ptr %926, align 4
  %mul46.i.i = shl nuw i32 %vmid.0172.i.i, 1
  %add45.i385.i = add nuw nsw i32 %mul46.i.i, 8353
  %add47.i.i = add i32 %add45.i385.i, %928
  call void %924(ptr noundef %handle, i32 noundef %add47.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end56.i.i

cond.false48.i.i:                                 ; preds = %land.lhs.true30.i384.i.cond.false48.i.i_crit_edge, %land.lhs.true25.i382.i.cond.false48.i.i_crit_edge, %cond.end.i380.i.cond.false48.i.i_crit_edge
  %929 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %929)
  %930 = load ptr, ptr %arrayidx.i365.i, align 8
  %931 = ptrtoint ptr %930 to i32
  call void @__asan_load4_noabort(i32 %931)
  %932 = load i32, ptr %930, align 4
  %mul54.i387.i = shl nuw i32 %vmid.0172.i.i, 1
  %add53.i.i = add nuw nsw i32 %mul54.i387.i, 8353
  %add55.i388.i = add i32 %add53.i.i, %932
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add55.i388.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end56.i.i

cond.end56.i.i:                                   ; preds = %cond.false48.i.i, %cond.true36.i386.i
  %933 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %933)
  %934 = load i32, ptr %virt.i101, align 8
  %and59.i.i = and i32 %934, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59.i.i)
  %tobool60.not.i.i = icmp eq i32 %and59.i.i, 0
  br i1 %tobool60.not.i.i, label %cond.end56.i.i.cond.false83.i.i_crit_edge, label %land.lhs.true61.i.i

cond.end56.i.i.cond.false83.i.i_crit_edge:        ; preds = %cond.end56.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.i.i

land.lhs.true61.i.i:                              ; preds = %cond.end56.i.i
  %935 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %935)
  %936 = load ptr, ptr %funcs.i364.i, align 4
  %tobool65.not.i.i = icmp eq ptr %936, null
  br i1 %tobool65.not.i.i, label %land.lhs.true61.i.i.cond.false83.i.i_crit_edge, label %land.lhs.true66.i.i

land.lhs.true61.i.i.cond.false83.i.i_crit_edge:   ; preds = %land.lhs.true61.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.i.i

land.lhs.true66.i.i:                              ; preds = %land.lhs.true61.i.i
  %sriov_wreg70.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %936, i32 0, i32 12
  %937 = ptrtoint ptr %sriov_wreg70.i.i to i32
  call void @__asan_load4_noabort(i32 %937)
  %938 = load ptr, ptr %sriov_wreg70.i.i, align 4
  %tobool71.not.i.i = icmp eq ptr %938, null
  br i1 %tobool71.not.i.i, label %land.lhs.true66.i.i.cond.false83.i.i_crit_edge, label %cond.true72.i.i

land.lhs.true66.i.i.cond.false83.i.i_crit_edge:   ; preds = %land.lhs.true66.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.i.i

cond.true72.i.i:                                  ; preds = %land.lhs.true66.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %939 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %939)
  %940 = load ptr, ptr %arrayidx.i365.i, align 8
  %941 = ptrtoint ptr %940 to i32
  call void @__asan_load4_noabort(i32 %941)
  %942 = load i32, ptr %940, align 4
  %add81.i389.i = add nuw nsw i32 %vmid.0172.i.i, 8384
  %add82.i.i = add i32 %add81.i389.i, %942
  call void %938(ptr noundef %handle, i32 noundef %add82.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end90.i393.i

cond.false83.i.i:                                 ; preds = %land.lhs.true66.i.i.cond.false83.i.i_crit_edge, %land.lhs.true61.i.i.cond.false83.i.i_crit_edge, %cond.end56.i.i.cond.false83.i.i_crit_edge
  %943 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %943)
  %944 = load ptr, ptr %arrayidx.i365.i, align 8
  %945 = ptrtoint ptr %944 to i32
  call void @__asan_load4_noabort(i32 %945)
  %946 = load i32, ptr %944, align 4
  %add88.i.i = add nuw nsw i32 %vmid.0172.i.i, 8384
  %add89.i390.i = add i32 %add88.i.i, %946
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add89.i390.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end90.i393.i

cond.end90.i393.i:                                ; preds = %cond.false83.i.i, %cond.true72.i.i
  %947 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %947)
  %948 = load i32, ptr %virt.i101, align 8
  %and93.i391.i = and i32 %948, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93.i391.i)
  %tobool94.not.i392.i = icmp eq i32 %and93.i391.i, 0
  br i1 %tobool94.not.i392.i, label %cond.end90.i393.i.cond.false117.i403.i_crit_edge, label %land.lhs.true95.i395.i

cond.end90.i393.i.cond.false117.i403.i_crit_edge: ; preds = %cond.end90.i393.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i403.i

land.lhs.true95.i395.i:                           ; preds = %cond.end90.i393.i
  %949 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %949)
  %950 = load ptr, ptr %funcs.i364.i, align 4
  %tobool99.not.i394.i = icmp eq ptr %950, null
  br i1 %tobool99.not.i394.i, label %land.lhs.true95.i395.i.cond.false117.i403.i_crit_edge, label %land.lhs.true100.i398.i

land.lhs.true95.i395.i.cond.false117.i403.i_crit_edge: ; preds = %land.lhs.true95.i395.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i403.i

land.lhs.true100.i398.i:                          ; preds = %land.lhs.true95.i395.i
  %sriov_wreg104.i396.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %950, i32 0, i32 12
  %951 = ptrtoint ptr %sriov_wreg104.i396.i to i32
  call void @__asan_load4_noabort(i32 %951)
  %952 = load ptr, ptr %sriov_wreg104.i396.i, align 4
  %tobool105.not.i397.i = icmp eq ptr %952, null
  br i1 %tobool105.not.i397.i, label %land.lhs.true100.i398.i.cond.false117.i403.i_crit_edge, label %cond.true106.i400.i

land.lhs.true100.i398.i.cond.false117.i403.i_crit_edge: ; preds = %land.lhs.true100.i398.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i403.i

cond.true106.i400.i:                              ; preds = %land.lhs.true100.i398.i
  call void @__sanitizer_cov_trace_pc() #15
  %953 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %953)
  %954 = load ptr, ptr %arrayidx.i365.i, align 8
  %955 = ptrtoint ptr %954 to i32
  call void @__asan_load4_noabort(i32 %955)
  %956 = load i32, ptr %954, align 4
  %add115.i399.i = add nuw nsw i32 %vmid.0172.i.i, 8400
  %add116.i.i = add i32 %add115.i399.i, %956
  call void %952(ptr noundef %handle, i32 noundef %add116.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc.i406.i

cond.false117.i403.i:                             ; preds = %land.lhs.true100.i398.i.cond.false117.i403.i_crit_edge, %land.lhs.true95.i395.i.cond.false117.i403.i_crit_edge, %cond.end90.i393.i.cond.false117.i403.i_crit_edge
  %957 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %957)
  %958 = load ptr, ptr %arrayidx.i365.i, align 8
  %959 = ptrtoint ptr %958 to i32
  call void @__asan_load4_noabort(i32 %959)
  %960 = load i32, ptr %958, align 4
  %add122.i401.i = add nuw nsw i32 %vmid.0172.i.i, 8400
  %add123.i402.i = add i32 %add122.i401.i, %960
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add123.i402.i, i32 noundef 0, i32 noundef 0) #13
  br label %for.inc.i406.i

for.inc.i406.i:                                   ; preds = %cond.false117.i403.i, %cond.true106.i400.i
  %inc.i404.i = add nuw nsw i32 %vmid.0172.i.i, 1
  %exitcond.not.i405.i = icmp eq i32 %inc.i404.i, 16
  br i1 %exitcond.not.i405.i, label %gfx_v10_0_constants_init.exit, label %for.inc.i406.i.for.body.i368.i_crit_edge

for.inc.i406.i.for.body.i368.i_crit_edge:         ; preds = %for.inc.i406.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i368.i

gfx_v10_0_constants_init.exit:                    ; preds = %for.inc.i406.i
  %call12 = call i32 @gfx_v10_0_rlc_resume(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %gfx_v10_0_constants_init.exit.cleanup_crit_edge

gfx_v10_0_constants_init.exit.cleanup_crit_edge:  ; preds = %gfx_v10_0_constants_init.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end15:                                         ; preds = %gfx_v10_0_constants_init.exit
  %961 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %961)
  %962 = load i32, ptr %arrayidx.i70, align 4
  %963 = zext i32 %962 to i64
  call void @__sanitizer_cov_trace_switch(i64 %963, ptr @__sancov_gen_cov_switch_values.125)
  switch i32 %962, label %if.end15.if.end28_crit_edge [
    i32 655626, label %if.end15.if.then27_crit_edge
    i32 655617, label %if.end15.if.then27_crit_edge252
    i32 655618, label %if.end15.if.then27_crit_edge253
  ]

if.end15.if.then27_crit_edge253:                  ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then27

if.end15.if.then27_crit_edge252:                  ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then27

if.end15.if.then27_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then27

if.end15.if.end28_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.then27:                                        ; preds = %if.end15.if.then27_crit_edge, %if.end15.if.then27_crit_edge252, %if.end15.if.then27_crit_edge253
  %max_cu_per_sh.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 2
  %964 = ptrtoint ptr %max_cu_per_sh.i to i32
  call void @__asan_load4_noabort(i32 %964)
  %965 = load i32, ptr %max_cu_per_sh.i, align 8
  %shr.i133 = lshr i32 %965, 1
  %mul.i = and i32 %965, -2
  %add.i134 = add nuw i32 %shr.i133, 4
  %add1.i = add i32 %add.i134, %mul.i
  %sh_prom.i.i = zext i32 %add1.i to i64
  %notmask.i.i = shl nsw i64 -1, %sh_prom.i.i
  %966 = trunc i64 %notmask.i.i to i32
  %conv.i.i135 = xor i32 %966, -1
  %add4.i = shl i32 %mul.i, 1
  %add6.i = add i32 %add4.i, 5
  %sh_prom.i244.i = zext i32 %add6.i to i64
  %notmask.i245.i = shl nsw i64 -1, %sh_prom.i244.i
  %967 = trunc i64 %notmask.i245.i to i32
  %conv.i246.i = xor i32 %967, -1
  call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i.i, i32 noundef 0) #13
  %968 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %968)
  %969 = load i32, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %969)
  %cmp273.not.i = icmp eq i32 %969, 0
  br i1 %cmp273.not.i, label %if.then27.for.end168.i_crit_edge, label %for.cond10.preheader.lr.ph.i

if.then27.for.end168.i_crit_edge:                 ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end168.i

for.cond10.preheader.lr.ph.i:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %965)
  %cmp17265.not.i = icmp ult i32 %965, 2
  %mul55.i = shl i32 %shr.i133, 2
  %shl56.i = shl nsw i32 -1, %mul55.i
  %mul126.i = mul i32 %shr.i133, 3
  %shl127.i = shl nsw i32 -1, %mul126.i
  %umax.i = call i32 @llvm.umax.i32(i32 %shr.i133, i32 1) #13
  br label %for.cond10.preheader.i

for.cond10.preheader.i:                           ; preds = %for.inc166.i.for.cond10.preheader.i_crit_edge, %for.cond10.preheader.lr.ph.i
  %i.0274.i = phi i32 [ 0, %for.cond10.preheader.lr.ph.i ], [ %inc167.i, %for.inc166.i.for.cond10.preheader.i_crit_edge ]
  %970 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %970)
  %971 = load i32, ptr %max_sh_per_se.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %971)
  %cmp13271.not.i = icmp eq i32 %971, 0
  br i1 %cmp13271.not.i, label %for.cond10.preheader.i.for.inc166.i_crit_edge, label %for.body14.lr.ph.i

for.cond10.preheader.i.for.inc166.i_crit_edge:    ; preds = %for.cond10.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc166.i

for.body14.lr.ph.i:                               ; preds = %for.cond10.preheader.i
  %shl7.i.i = shl i32 %i.0274.i, 16
  %and8.i.i = and i32 %shl7.i.i, 16711680
  br label %for.body14.i

for.body14.i:                                     ; preds = %for.inc163.i.for.body14.i_crit_edge, %for.body14.lr.ph.i
  %j.0272.i = phi i32 [ 0, %for.body14.lr.ph.i ], [ %inc164.i, %for.inc163.i.for.body14.i_crit_edge ]
  %shl17.i.i = shl i32 %j.0272.i, 8
  %and18.i.i = and i32 %shl17.i.i, 65280
  %and8.i.op.i = or i32 %and8.i.i, %and18.i.i
  %data.2.i.i = or i32 %and8.i.op.i, 1073741824
  %972 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %972)
  %973 = load i32, ptr %virt.i101, align 8
  %and21.i.i = and i32 %973, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i)
  %tobool.not.i.i138 = icmp eq i32 %and21.i.i, 0
  br i1 %tobool.not.i.i138, label %for.body14.i.cond.false.i.i144_crit_edge, label %land.lhs.true.i.i139

for.body14.i.cond.false.i.i144_crit_edge:         ; preds = %for.body14.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i144

land.lhs.true.i.i139:                             ; preds = %for.body14.i
  %974 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %974)
  %975 = load ptr, ptr %funcs.i364.i, align 4
  %tobool22.not.i.i = icmp eq ptr %975, null
  br i1 %tobool22.not.i.i, label %land.lhs.true.i.i139.cond.false.i.i144_crit_edge, label %land.lhs.true23.i.i

land.lhs.true.i.i139.cond.false.i.i144_crit_edge: ; preds = %land.lhs.true.i.i139
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i144

land.lhs.true23.i.i:                              ; preds = %land.lhs.true.i.i139
  %sriov_wreg.i.i140 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %975, i32 0, i32 12
  %976 = ptrtoint ptr %sriov_wreg.i.i140 to i32
  call void @__asan_load4_noabort(i32 %976)
  %977 = load ptr, ptr %sriov_wreg.i.i140, align 4
  %tobool27.not.i.i = icmp eq ptr %977, null
  br i1 %tobool27.not.i.i, label %land.lhs.true23.i.i.cond.false.i.i144_crit_edge, label %cond.true.i.i142

land.lhs.true23.i.i.cond.false.i.i144_crit_edge:  ; preds = %land.lhs.true23.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i144

cond.true.i.i142:                                 ; preds = %land.lhs.true23.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %978 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %978)
  %979 = load ptr, ptr %arrayidx.i365.i, align 8
  %arrayidx33.i.i = getelementptr i32, ptr %979, i32 1
  %980 = ptrtoint ptr %arrayidx33.i.i to i32
  call void @__asan_load4_noabort(i32 %980)
  %981 = load i32, ptr %arrayidx33.i.i, align 4
  %add.i.i141 = add i32 %981, 8704
  call void %977(ptr noundef %handle, i32 noundef %add.i.i141, i32 noundef %data.2.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_select_se_sh.exit.i

cond.false.i.i144:                                ; preds = %land.lhs.true23.i.i.cond.false.i.i144_crit_edge, %land.lhs.true.i.i139.cond.false.i.i144_crit_edge, %for.body14.i.cond.false.i.i144_crit_edge
  %982 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %982)
  %983 = load ptr, ptr %arrayidx.i365.i, align 8
  %arrayidx37.i.i = getelementptr i32, ptr %983, i32 1
  %984 = ptrtoint ptr %arrayidx37.i.i to i32
  call void @__asan_load4_noabort(i32 %984)
  %985 = load i32, ptr %arrayidx37.i.i, align 4
  %add38.i.i143 = add i32 %985, 8704
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i.i143, i32 noundef %data.2.i.i, i32 noundef 0) #13
  br label %gfx_v10_0_select_se_sh.exit.i

gfx_v10_0_select_se_sh.exit.i:                    ; preds = %cond.false.i.i144, %cond.true.i.i142
  %call15.i = call fastcc i32 @gfx_v10_0_get_wgp_active_bitmap_per_sh(ptr noundef %handle) #13
  br i1 %cmp17265.not.i, label %gfx_v10_0_select_se_sh.exit.i.for.end.i151_crit_edge, label %gfx_v10_0_select_se_sh.exit.i.for.body18.i_crit_edge

gfx_v10_0_select_se_sh.exit.i.for.body18.i_crit_edge: ; preds = %gfx_v10_0_select_se_sh.exit.i
  br label %for.body18.i

gfx_v10_0_select_se_sh.exit.i.for.end.i151_crit_edge: ; preds = %gfx_v10_0_select_se_sh.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i151

for.body18.i:                                     ; preds = %for.inc.i150.for.body18.i_crit_edge, %gfx_v10_0_select_se_sh.exit.i.for.body18.i_crit_edge
  %utcl_invreq_disable.0269.i = phi i32 [ %utcl_invreq_disable.1.i, %for.inc.i150.for.body18.i_crit_edge ], [ 0, %gfx_v10_0_select_se_sh.exit.i.for.body18.i_crit_edge ]
  %gcrd_targets_disable_tcp.0268.i = phi i32 [ %gcrd_targets_disable_tcp.1.i, %for.inc.i150.for.body18.i_crit_edge ], [ 0, %gfx_v10_0_select_se_sh.exit.i.for.body18.i_crit_edge ]
  %k.0266.i = phi i32 [ %inc.i149, %for.inc.i150.for.body18.i_crit_edge ], [ 0, %gfx_v10_0_select_se_sh.exit.i.for.body18.i_crit_edge ]
  %shl.i = shl nuw i32 1, %k.0266.i
  %and.i145 = and i32 %shl.i, %call15.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i145)
  %tobool.not.i146 = icmp eq i32 %and.i145, 0
  br i1 %tobool.not.i146, label %if.then.i148, label %for.body18.i.for.inc.i150_crit_edge

for.body18.i.for.inc.i150_crit_edge:              ; preds = %for.body18.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i150

if.then.i148:                                     ; preds = %for.body18.i
  call void @__sanitizer_cov_trace_pc() #15
  %mul19.i = shl nuw i32 %k.0266.i, 1
  %shl20.i = shl i32 3, %mul19.i
  %or.i147 = or i32 %shl20.i, %gcrd_targets_disable_tcp.0268.i
  %add22.i = add i32 %k.0266.i, %mul.i
  %shl23.i = shl nuw i32 1, %add22.i
  %or24.i = or i32 %or.i147, %shl23.i
  %add27.i = add nuw i32 %k.0266.i, %shr.i133
  %mul28.i = shl i32 %add27.i, 1
  %shl29.i = shl i32 3, %mul28.i
  %or30.i = or i32 %shl20.i, %utcl_invreq_disable.0269.i
  %or31.i = or i32 %or30.i, %shl29.i
  br label %for.inc.i150

for.inc.i150:                                     ; preds = %if.then.i148, %for.body18.i.for.inc.i150_crit_edge
  %gcrd_targets_disable_tcp.1.i = phi i32 [ %gcrd_targets_disable_tcp.0268.i, %for.body18.i.for.inc.i150_crit_edge ], [ %or24.i, %if.then.i148 ]
  %utcl_invreq_disable.1.i = phi i32 [ %utcl_invreq_disable.0269.i, %for.body18.i.for.inc.i150_crit_edge ], [ %or31.i, %if.then.i148 ]
  %inc.i149 = add nuw nsw i32 %k.0266.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i149, %umax.i
  br i1 %exitcond.not.i, label %for.inc.i150.for.end.i151_crit_edge, label %for.inc.i150.for.body18.i_crit_edge

for.inc.i150.for.body18.i_crit_edge:              ; preds = %for.inc.i150
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body18.i

for.inc.i150.for.end.i151_crit_edge:              ; preds = %for.inc.i150
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i151

for.end.i151:                                     ; preds = %for.inc.i150.for.end.i151_crit_edge, %gfx_v10_0_select_se_sh.exit.i.for.end.i151_crit_edge
  %gcrd_targets_disable_tcp.0.lcssa.i = phi i32 [ 0, %gfx_v10_0_select_se_sh.exit.i.for.end.i151_crit_edge ], [ %gcrd_targets_disable_tcp.1.i, %for.inc.i150.for.end.i151_crit_edge ]
  %utcl_invreq_disable.0.lcssa.i = phi i32 [ 0, %gfx_v10_0_select_se_sh.exit.i.for.end.i151_crit_edge ], [ %utcl_invreq_disable.1.i, %for.inc.i150.for.end.i151_crit_edge ]
  %986 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %986)
  %987 = load i32, ptr %virt.i101, align 8
  %and32.i = and i32 %987, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i)
  %tobool33.not.i = icmp eq i32 %and32.i, 0
  br i1 %tobool33.not.i, label %for.end.i151.cond.false.i155_crit_edge, label %land.lhs.true.i152

for.end.i151.cond.false.i155_crit_edge:           ; preds = %for.end.i151
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i155

land.lhs.true.i152:                               ; preds = %for.end.i151
  %988 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %988)
  %989 = load ptr, ptr %funcs.i364.i, align 4
  %tobool35.not.i = icmp eq ptr %989, null
  br i1 %tobool35.not.i, label %land.lhs.true.i152.cond.false.i155_crit_edge, label %land.lhs.true36.i

land.lhs.true.i152.cond.false.i155_crit_edge:     ; preds = %land.lhs.true.i152
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i155

land.lhs.true36.i:                                ; preds = %land.lhs.true.i152
  %sriov_rreg.i153 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %989, i32 0, i32 13
  %990 = ptrtoint ptr %sriov_rreg.i153 to i32
  call void @__asan_load4_noabort(i32 %990)
  %991 = load ptr, ptr %sriov_rreg.i153, align 4
  %tobool40.not.i = icmp eq ptr %991, null
  br i1 %tobool40.not.i, label %land.lhs.true36.i.cond.false.i155_crit_edge, label %cond.true.i154

land.lhs.true36.i.cond.false.i155_crit_edge:      ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i155

cond.true.i154:                                   ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #15
  %992 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %992)
  %993 = load ptr, ptr %arrayidx.i365.i, align 8
  %994 = ptrtoint ptr %993 to i32
  call void @__asan_load4_noabort(i32 %994)
  %995 = load i32, ptr %993, align 4
  %add47.i = add i32 %995, 5514
  %call48.i = call i32 %991(ptr noundef %handle, i32 noundef %add47.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i157

cond.false.i155:                                  ; preds = %land.lhs.true36.i.cond.false.i155_crit_edge, %land.lhs.true.i152.cond.false.i155_crit_edge, %for.end.i151.cond.false.i155_crit_edge
  %996 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %996)
  %997 = load ptr, ptr %arrayidx.i365.i, align 8
  %998 = ptrtoint ptr %997 to i32
  call void @__asan_load4_noabort(i32 %998)
  %999 = load i32, ptr %997, align 4
  %add53.i = add i32 %999, 5514
  %call54.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add53.i, i32 noundef 0) #13
  br label %cond.end.i157

cond.end.i157:                                    ; preds = %cond.false.i155, %cond.true.i154
  %cond.i156 = phi i32 [ %call48.i, %cond.true.i154 ], [ %call54.i, %cond.false.i155 ]
  %and57.i = and i32 %cond.i156, %shl56.i
  %and58.i = and i32 %utcl_invreq_disable.0.lcssa.i, %conv.i246.i
  %or59.i = or i32 %and57.i, %and58.i
  %1000 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1000)
  %1001 = load i32, ptr %virt.i101, align 8
  %and62.i = and i32 %1001, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62.i)
  %tobool63.not.i = icmp eq i32 %and62.i, 0
  br i1 %tobool63.not.i, label %cond.end.i157.cond.false84.i_crit_edge, label %land.lhs.true64.i

cond.end.i157.cond.false84.i_crit_edge:           ; preds = %cond.end.i157
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false84.i

land.lhs.true64.i:                                ; preds = %cond.end.i157
  %1002 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1002)
  %1003 = load ptr, ptr %funcs.i364.i, align 4
  %tobool68.not.i = icmp eq ptr %1003, null
  br i1 %tobool68.not.i, label %land.lhs.true64.i.cond.false84.i_crit_edge, label %land.lhs.true69.i

land.lhs.true64.i.cond.false84.i_crit_edge:       ; preds = %land.lhs.true64.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false84.i

land.lhs.true69.i:                                ; preds = %land.lhs.true64.i
  %sriov_wreg.i158 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1003, i32 0, i32 12
  %1004 = ptrtoint ptr %sriov_wreg.i158 to i32
  call void @__asan_load4_noabort(i32 %1004)
  %1005 = load ptr, ptr %sriov_wreg.i158, align 4
  %tobool73.not.i = icmp eq ptr %1005, null
  br i1 %tobool73.not.i, label %land.lhs.true69.i.cond.false84.i_crit_edge, label %cond.true74.i

land.lhs.true69.i.cond.false84.i_crit_edge:       ; preds = %land.lhs.true69.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false84.i

cond.true74.i:                                    ; preds = %land.lhs.true69.i
  call void @__sanitizer_cov_trace_pc() #15
  %1006 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1006)
  %1007 = load ptr, ptr %arrayidx.i365.i, align 8
  %1008 = ptrtoint ptr %1007 to i32
  call void @__asan_load4_noabort(i32 %1008)
  %1009 = load i32, ptr %1007, align 4
  %add83.i = add i32 %1009, 5514
  call void %1005(ptr noundef %handle, i32 noundef %add83.i, i32 noundef %or59.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end90.i

cond.false84.i:                                   ; preds = %land.lhs.true69.i.cond.false84.i_crit_edge, %land.lhs.true64.i.cond.false84.i_crit_edge, %cond.end.i157.cond.false84.i_crit_edge
  %1010 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1010)
  %1011 = load ptr, ptr %arrayidx.i365.i, align 8
  %1012 = ptrtoint ptr %1011 to i32
  call void @__asan_load4_noabort(i32 %1012)
  %1013 = load i32, ptr %1011, align 4
  %add89.i = add i32 %1013, 5514
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add89.i, i32 noundef %or59.i, i32 noundef 0) #13
  br label %cond.end90.i

cond.end90.i:                                     ; preds = %cond.false84.i, %cond.true74.i
  %1014 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1014)
  %1015 = load i32, ptr %virt.i101, align 8
  %and93.i = and i32 %1015, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93.i)
  %tobool94.not.i159 = icmp eq i32 %and93.i, 0
  br i1 %tobool94.not.i159, label %cond.end90.i.cond.false117.i_crit_edge, label %land.lhs.true95.i160

cond.end90.i.cond.false117.i_crit_edge:           ; preds = %cond.end90.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i

land.lhs.true95.i160:                             ; preds = %cond.end90.i
  %1016 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1016)
  %1017 = load ptr, ptr %funcs.i364.i, align 4
  %tobool99.not.i = icmp eq ptr %1017, null
  br i1 %tobool99.not.i, label %land.lhs.true95.i160.cond.false117.i_crit_edge, label %land.lhs.true100.i

land.lhs.true95.i160.cond.false117.i_crit_edge:   ; preds = %land.lhs.true95.i160
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i

land.lhs.true100.i:                               ; preds = %land.lhs.true95.i160
  %sriov_rreg104.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1017, i32 0, i32 13
  %1018 = ptrtoint ptr %sriov_rreg104.i to i32
  call void @__asan_load4_noabort(i32 %1018)
  %1019 = load ptr, ptr %sriov_rreg104.i, align 4
  %tobool105.not.i = icmp eq ptr %1019, null
  br i1 %tobool105.not.i, label %land.lhs.true100.i.cond.false117.i_crit_edge, label %cond.true106.i

land.lhs.true100.i.cond.false117.i_crit_edge:     ; preds = %land.lhs.true100.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false117.i

cond.true106.i:                                   ; preds = %land.lhs.true100.i
  call void @__sanitizer_cov_trace_pc() #15
  %1020 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1020)
  %1021 = load ptr, ptr %arrayidx.i365.i, align 8
  %1022 = ptrtoint ptr %1021 to i32
  call void @__asan_load4_noabort(i32 %1022)
  %1023 = load i32, ptr %1021, align 4
  %add115.i161 = add i32 %1023, 5515
  %call116.i162 = call i32 %1019(ptr noundef %handle, i32 noundef %add115.i161, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end124.i163

cond.false117.i:                                  ; preds = %land.lhs.true100.i.cond.false117.i_crit_edge, %land.lhs.true95.i160.cond.false117.i_crit_edge, %cond.end90.i.cond.false117.i_crit_edge
  %1024 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1024)
  %1025 = load ptr, ptr %arrayidx.i365.i, align 8
  %1026 = ptrtoint ptr %1025 to i32
  call void @__asan_load4_noabort(i32 %1026)
  %1027 = load i32, ptr %1025, align 4
  %add122.i = add i32 %1027, 5515
  %call123.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add122.i, i32 noundef 0) #13
  br label %cond.end124.i163

cond.end124.i163:                                 ; preds = %cond.false117.i, %cond.true106.i
  %cond125.i = phi i32 [ %call116.i162, %cond.true106.i ], [ %call123.i, %cond.false117.i ]
  %and128.i = and i32 %cond125.i, %shl127.i
  %and129.i = and i32 %gcrd_targets_disable_tcp.0.lcssa.i, %conv.i.i135
  %or130.i = or i32 %and128.i, %and129.i
  %1028 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1028)
  %1029 = load i32, ptr %virt.i101, align 8
  %and133.i = and i32 %1029, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and133.i)
  %tobool134.not.i = icmp eq i32 %and133.i, 0
  br i1 %tobool134.not.i, label %cond.end124.i163.cond.false156.i_crit_edge, label %land.lhs.true135.i

cond.end124.i163.cond.false156.i_crit_edge:       ; preds = %cond.end124.i163
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false156.i

land.lhs.true135.i:                               ; preds = %cond.end124.i163
  %1030 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1030)
  %1031 = load ptr, ptr %funcs.i364.i, align 4
  %tobool139.not.i164 = icmp eq ptr %1031, null
  br i1 %tobool139.not.i164, label %land.lhs.true135.i.cond.false156.i_crit_edge, label %land.lhs.true140.i165

land.lhs.true135.i.cond.false156.i_crit_edge:     ; preds = %land.lhs.true135.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false156.i

land.lhs.true140.i165:                            ; preds = %land.lhs.true135.i
  %sriov_wreg144.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1031, i32 0, i32 12
  %1032 = ptrtoint ptr %sriov_wreg144.i to i32
  call void @__asan_load4_noabort(i32 %1032)
  %1033 = load ptr, ptr %sriov_wreg144.i, align 4
  %tobool145.not.i = icmp eq ptr %1033, null
  br i1 %tobool145.not.i, label %land.lhs.true140.i165.cond.false156.i_crit_edge, label %cond.true146.i

land.lhs.true140.i165.cond.false156.i_crit_edge:  ; preds = %land.lhs.true140.i165
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false156.i

cond.true146.i:                                   ; preds = %land.lhs.true140.i165
  call void @__sanitizer_cov_trace_pc() #15
  %1034 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1034)
  %1035 = load ptr, ptr %arrayidx.i365.i, align 8
  %1036 = ptrtoint ptr %1035 to i32
  call void @__asan_load4_noabort(i32 %1036)
  %1037 = load i32, ptr %1035, align 4
  %add155.i = add i32 %1037, 5515
  call void %1033(ptr noundef %handle, i32 noundef %add155.i, i32 noundef %or130.i, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc163.i

cond.false156.i:                                  ; preds = %land.lhs.true140.i165.cond.false156.i_crit_edge, %land.lhs.true135.i.cond.false156.i_crit_edge, %cond.end124.i163.cond.false156.i_crit_edge
  %1038 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1038)
  %1039 = load ptr, ptr %arrayidx.i365.i, align 8
  %1040 = ptrtoint ptr %1039 to i32
  call void @__asan_load4_noabort(i32 %1040)
  %1041 = load i32, ptr %1039, align 4
  %add161.i = add i32 %1041, 5515
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add161.i, i32 noundef %or130.i, i32 noundef 0) #13
  br label %for.inc163.i

for.inc163.i:                                     ; preds = %cond.false156.i, %cond.true146.i
  %inc164.i = add nuw i32 %j.0272.i, 1
  %1042 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %1042)
  %1043 = load i32, ptr %max_sh_per_se.i.i, align 4
  %cmp13.i = icmp ult i32 %inc164.i, %1043
  br i1 %cmp13.i, label %for.inc163.i.for.body14.i_crit_edge, label %for.inc163.i.for.inc166.i_crit_edge

for.inc163.i.for.inc166.i_crit_edge:              ; preds = %for.inc163.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc166.i

for.inc163.i.for.body14.i_crit_edge:              ; preds = %for.inc163.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body14.i

for.inc166.i:                                     ; preds = %for.inc163.i.for.inc166.i_crit_edge, %for.cond10.preheader.i.for.inc166.i_crit_edge
  %inc167.i = add nuw i32 %i.0274.i, 1
  %1044 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %1044)
  %1045 = load i32, ptr %config.i.i, align 8
  %cmp.i166 = icmp ult i32 %inc167.i, %1045
  br i1 %cmp.i166, label %for.inc166.i.for.cond10.preheader.i_crit_edge, label %for.inc166.i.for.end168.i_crit_edge

for.inc166.i.for.end168.i_crit_edge:              ; preds = %for.inc166.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end168.i

for.inc166.i.for.cond10.preheader.i_crit_edge:    ; preds = %for.inc166.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond10.preheader.i

for.end168.i:                                     ; preds = %for.inc166.i.for.end168.i_crit_edge, %if.then27.for.end168.i_crit_edge
  %1046 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1046)
  %1047 = load i32, ptr %virt.i101, align 8
  %and21.i248.i = and i32 %1047, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i248.i)
  %tobool.not.i249.i = icmp eq i32 %and21.i248.i, 0
  br i1 %tobool.not.i249.i, label %for.end168.i.cond.false.i263.i_crit_edge, label %land.lhs.true.i252.i167

for.end168.i.cond.false.i263.i_crit_edge:         ; preds = %for.end168.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i263.i

land.lhs.true.i252.i167:                          ; preds = %for.end168.i
  %1048 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1048)
  %1049 = load ptr, ptr %funcs.i364.i, align 4
  %tobool22.not.i251.i = icmp eq ptr %1049, null
  br i1 %tobool22.not.i251.i, label %land.lhs.true.i252.i167.cond.false.i263.i_crit_edge, label %land.lhs.true23.i255.i

land.lhs.true.i252.i167.cond.false.i263.i_crit_edge: ; preds = %land.lhs.true.i252.i167
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i263.i

land.lhs.true23.i255.i:                           ; preds = %land.lhs.true.i252.i167
  %sriov_wreg.i253.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1049, i32 0, i32 12
  %1050 = ptrtoint ptr %sriov_wreg.i253.i to i32
  call void @__asan_load4_noabort(i32 %1050)
  %1051 = load ptr, ptr %sriov_wreg.i253.i, align 4
  %tobool27.not.i254.i = icmp eq ptr %1051, null
  br i1 %tobool27.not.i254.i, label %land.lhs.true23.i255.i.cond.false.i263.i_crit_edge, label %cond.true.i259.i

land.lhs.true23.i255.i.cond.false.i263.i_crit_edge: ; preds = %land.lhs.true23.i255.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i263.i

cond.true.i259.i:                                 ; preds = %land.lhs.true23.i255.i
  call void @__sanitizer_cov_trace_pc() #15
  %1052 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1052)
  %1053 = load ptr, ptr %arrayidx.i365.i, align 8
  %arrayidx33.i257.i = getelementptr i32, ptr %1053, i32 1
  %1054 = ptrtoint ptr %arrayidx33.i257.i to i32
  call void @__asan_load4_noabort(i32 %1054)
  %1055 = load i32, ptr %arrayidx33.i257.i, align 4
  %add.i258.i = add i32 %1055, 8704
  call void %1051(ptr noundef %handle, i32 noundef %add.i258.i, i32 noundef -536870912, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_tcp_harvest.exit

cond.false.i263.i:                                ; preds = %land.lhs.true23.i255.i.cond.false.i263.i_crit_edge, %land.lhs.true.i252.i167.cond.false.i263.i_crit_edge, %for.end168.i.cond.false.i263.i_crit_edge
  %1056 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1056)
  %1057 = load ptr, ptr %arrayidx.i365.i, align 8
  %arrayidx37.i261.i = getelementptr i32, ptr %1057, i32 1
  %1058 = ptrtoint ptr %arrayidx37.i261.i to i32
  call void @__asan_load4_noabort(i32 %1058)
  %1059 = load i32, ptr %arrayidx37.i261.i, align 4
  %add38.i262.i = add i32 %1059, 8704
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i262.i, i32 noundef -536870912, i32 noundef 0) #13
  br label %gfx_v10_0_tcp_harvest.exit

gfx_v10_0_tcp_harvest.exit:                       ; preds = %cond.false.i263.i, %cond.true.i259.i
  call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i.i) #13
  br label %if.end28

if.end28:                                         ; preds = %gfx_v10_0_tcp_harvest.exit, %if.end15.if.end28_crit_edge
  %call29 = call fastcc i32 @gfx_v10_0_cp_resume(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end32, label %if.end28.cleanup_crit_edge

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end32:                                         ; preds = %if.end28
  %1060 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %1060)
  %1061 = load i32, ptr %arrayidx.i70, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 656128, i32 %1061)
  %cmp36 = icmp eq i32 %1061, 656128
  br i1 %cmp36, label %if.then37, label %if.end32.if.end38_crit_edge

if.end32.if.end38_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end38

if.then37:                                        ; preds = %if.end32
  %call.i168 = call fastcc i32 @gfx_v10_3_get_disabled_sa(ptr noundef %handle) #13
  %1062 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %1062)
  %1063 = load i32, ptr %max_sh_per_se.i.i, align 4
  %notmask.i = shl nsw i32 -1, %1063
  %sub.i = xor i32 %notmask.i, -1
  %1064 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %1064)
  %1065 = load i32, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1065)
  %cmp135.not.i = icmp eq i32 %1065, 0
  br i1 %cmp135.not.i, label %if.then37.if.end38thread-pre-split_crit_edge, label %if.then37.for.body.i176_crit_edge

if.then37.for.body.i176_crit_edge:                ; preds = %if.then37
  br label %for.body.i176

if.then37.if.end38thread-pre-split_crit_edge:     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end38thread-pre-split

for.cond.i:                                       ; preds = %for.body.i176
  %inc.i171 = add nuw i32 %se_index.0136.i, 1
  %exitcond.not.i172 = icmp eq i32 %inc.i171, %1065
  br i1 %exitcond.not.i172, label %for.cond.i.if.end38thread-pre-split_crit_edge, label %for.cond.i.for.body.i176_crit_edge

for.cond.i.for.body.i176_crit_edge:               ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i176

for.cond.i.if.end38thread-pre-split_crit_edge:    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end38thread-pre-split

for.body.i176:                                    ; preds = %for.cond.i.for.body.i176_crit_edge, %if.then37.for.body.i176_crit_edge
  %se_index.0136.i = phi i32 [ %inc.i171, %for.cond.i.for.body.i176_crit_edge ], [ 0, %if.then37.for.body.i176_crit_edge ]
  %mul.i173 = mul i32 %se_index.0136.i, %1063
  %shr.i174 = lshr i32 %call.i168, %mul.i173
  %and.i175 = and i32 %shr.i174, %sub.i
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i175, i32 %sub.i)
  %cmp4.i = icmp eq i32 %and.i175, %sub.i
  br i1 %cmp4.i, label %if.then.i179, label %for.cond.i

if.then.i179:                                     ; preds = %for.body.i176
  %1066 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1066)
  %1067 = load i32, ptr %virt.i101, align 8
  %and5.i = and i32 %1067, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool.not.i178 = icmp eq i32 %and5.i, 0
  br i1 %tobool.not.i178, label %if.then.i179.cond.false83.sink.split.i_crit_edge, label %land.lhs.true.i182

if.then.i179.cond.false83.sink.split.i_crit_edge: ; preds = %if.then.i179
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.sink.split.i

land.lhs.true.i182:                               ; preds = %if.then.i179
  %1068 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1068)
  %1069 = load ptr, ptr %funcs.i364.i, align 4
  %tobool7.not.i181 = icmp eq ptr %1069, null
  br i1 %tobool7.not.i181, label %land.lhs.true.i182.cond.false83.sink.split.i_crit_edge, label %land.lhs.true8.i

land.lhs.true.i182.cond.false83.sink.split.i_crit_edge: ; preds = %land.lhs.true.i182
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.sink.split.i

land.lhs.true8.i:                                 ; preds = %land.lhs.true.i182
  %sriov_wreg.i183 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1069, i32 0, i32 12
  %1070 = ptrtoint ptr %sriov_wreg.i183 to i32
  call void @__asan_load4_noabort(i32 %1070)
  %1071 = load ptr, ptr %sriov_wreg.i183, align 4
  %tobool12.not.i = icmp eq ptr %1071, null
  %1072 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1072)
  %1073 = load ptr, ptr %arrayidx.i365.i, align 8
  %1074 = ptrtoint ptr %1073 to i32
  call void @__asan_load4_noabort(i32 %1074)
  %1075 = load i32, ptr %1073, align 4
  %add56131.i = add i32 %1075, 4229
  %sriov_rreg70.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1069, i32 0, i32 13
  %1076 = ptrtoint ptr %sriov_rreg70.i to i32
  call void @__asan_load4_noabort(i32 %1076)
  %1077 = load ptr, ptr %sriov_rreg70.i, align 4
  %tobool71.not.i = icmp eq ptr %1077, null
  br i1 %tobool12.not.i, label %land.lhs.true66.i, label %cond.true.i188

cond.true.i188:                                   ; preds = %land.lhs.true8.i
  br i1 %tobool71.not.i, label %cond.false.i190, label %cond.true33.i189

cond.true33.i189:                                 ; preds = %cond.true.i188
  call void @__sanitizer_cov_trace_pc() #15
  %call43.i = call i32 %1077(ptr noundef %handle, i32 noundef %add56131.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i193

cond.false.i190:                                  ; preds = %cond.true.i188
  call void @__sanitizer_cov_trace_pc() #15
  %call49.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add56131.i, i32 noundef 0) #13
  br label %cond.end.i193

cond.end.i193:                                    ; preds = %cond.false.i190, %cond.true33.i189
  %cond.i191 = phi i32 [ %call43.i, %cond.true33.i189 ], [ %call49.i, %cond.false.i190 ]
  %or.i192 = or i32 %cond.i191, 8
  call void %1071(ptr noundef %handle, i32 noundef %add56131.i, i32 noundef %or.i192, i32 noundef 0, i32 noundef 1) #13
  br label %if.end38thread-pre-split

land.lhs.true66.i:                                ; preds = %land.lhs.true8.i
  br i1 %tobool71.not.i, label %land.lhs.true66.i.cond.false83.i_crit_edge, label %cond.true72.i

land.lhs.true66.i.cond.false83.i_crit_edge:       ; preds = %land.lhs.true66.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.i

cond.true72.i:                                    ; preds = %land.lhs.true66.i
  call void @__sanitizer_cov_trace_pc() #15
  %call82.i196 = call i32 %1077(ptr noundef %handle, i32 noundef %add56131.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end90.i197

cond.false83.sink.split.i:                        ; preds = %land.lhs.true.i182.cond.false83.sink.split.i_crit_edge, %if.then.i179.cond.false83.sink.split.i_crit_edge
  %1078 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1078)
  %1079 = load ptr, ptr %arrayidx.i365.i, align 8
  %1080 = ptrtoint ptr %1079 to i32
  call void @__asan_load4_noabort(i32 %1080)
  %1081 = load i32, ptr %1079, align 4
  %add56131138.i = add i32 %1081, 4229
  br label %cond.false83.i

cond.false83.i:                                   ; preds = %cond.false83.sink.split.i, %land.lhs.true66.i.cond.false83.i_crit_edge
  %add56134.i = phi i32 [ %add56131.i, %land.lhs.true66.i.cond.false83.i_crit_edge ], [ %add56131138.i, %cond.false83.sink.split.i ]
  %call89.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add56134.i, i32 noundef 0) #13
  br label %cond.end90.i197

cond.end90.i197:                                  ; preds = %cond.false83.i, %cond.true72.i
  %add56132.i = phi i32 [ %add56131.i, %cond.true72.i ], [ %add56134.i, %cond.false83.i ]
  %cond91.i = phi i32 [ %call82.i196, %cond.true72.i ], [ %call89.i, %cond.false83.i ]
  %or93.i = or i32 %cond91.i, 8
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add56132.i, i32 noundef %or93.i, i32 noundef 0) #13
  br label %if.end38thread-pre-split

if.end38thread-pre-split:                         ; preds = %cond.end90.i197, %cond.end.i193, %for.cond.i.if.end38thread-pre-split_crit_edge, %if.then37.if.end38thread-pre-split_crit_edge
  %1082 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %1082)
  %.pr = load i32, ptr %arrayidx.i70, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.end38thread-pre-split, %if.end32.if.end38_crit_edge
  %1083 = phi i32 [ %.pr, %if.end38thread-pre-split ], [ %1061, %if.end32.if.end38_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 656127, i32 %1083)
  %cmp42 = icmp ugt i32 %1083, 656127
  br i1 %cmp42, label %if.then43, label %if.end38.cleanup_crit_edge

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then43:                                        ; preds = %if.end38
  %1084 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1084)
  %1085 = load i32, ptr %virt.i101, align 8
  %and.i200 = and i32 %1085, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i200)
  %tobool.not.i201 = icmp eq i32 %and.i200, 0
  br i1 %tobool.not.i201, label %if.then43.cond.false.i215_crit_edge, label %land.lhs.true.i204

if.then43.cond.false.i215_crit_edge:              ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i215

land.lhs.true.i204:                               ; preds = %if.then43
  %1086 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1086)
  %1087 = load ptr, ptr %funcs.i364.i, align 4
  %tobool1.not.i203 = icmp eq ptr %1087, null
  br i1 %tobool1.not.i203, label %land.lhs.true.i204.cond.false.i215_crit_edge, label %land.lhs.true2.i207

land.lhs.true.i204.cond.false.i215_crit_edge:     ; preds = %land.lhs.true.i204
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i215

land.lhs.true2.i207:                              ; preds = %land.lhs.true.i204
  %sriov_wreg.i205 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1087, i32 0, i32 12
  %1088 = ptrtoint ptr %sriov_wreg.i205 to i32
  call void @__asan_load4_noabort(i32 %1088)
  %1089 = load ptr, ptr %sriov_wreg.i205, align 4
  %tobool6.not.i206 = icmp eq ptr %1089, null
  br i1 %tobool6.not.i206, label %land.lhs.true2.i207.cond.false.i215_crit_edge, label %cond.true.i211

land.lhs.true2.i207.cond.false.i215_crit_edge:    ; preds = %land.lhs.true2.i207
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i215

cond.true.i211:                                   ; preds = %land.lhs.true2.i207
  call void @__sanitizer_cov_trace_pc() #15
  %1090 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1090)
  %1091 = load ptr, ptr %arrayidx.i365.i, align 8
  %arrayidx12.i209 = getelementptr i32, ptr %1091, i32 1
  %1092 = ptrtoint ptr %arrayidx12.i209 to i32
  call void @__asan_load4_noabort(i32 %1092)
  %1093 = load i32, ptr %arrayidx12.i209, align 4
  %add.i210 = add i32 %1093, 8704
  call void %1089(ptr noundef %handle, i32 noundef %add.i210, i32 noundef -536870912, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i216

cond.false.i215:                                  ; preds = %land.lhs.true2.i207.cond.false.i215_crit_edge, %land.lhs.true.i204.cond.false.i215_crit_edge, %if.then43.cond.false.i215_crit_edge
  %1094 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1094)
  %1095 = load ptr, ptr %arrayidx.i365.i, align 8
  %arrayidx16.i213 = getelementptr i32, ptr %1095, i32 1
  %1096 = ptrtoint ptr %arrayidx16.i213 to i32
  call void @__asan_load4_noabort(i32 %1096)
  %1097 = load i32, ptr %arrayidx16.i213, align 4
  %add17.i214 = add i32 %1097, 8704
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add17.i214, i32 noundef -536870912, i32 noundef 0) #13
  br label %cond.end.i216

cond.end.i216:                                    ; preds = %cond.false.i215, %cond.true.i211
  %1098 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1098)
  %1099 = load i32, ptr %virt.i101, align 8
  %and20.i = and i32 %1099, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br i1 %tobool21.not.i, label %cond.end.i216.cond.false43.i224_crit_edge, label %land.lhs.true22.i

cond.end.i216.cond.false43.i224_crit_edge:        ; preds = %cond.end.i216
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i224

land.lhs.true22.i:                                ; preds = %cond.end.i216
  %1100 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1100)
  %1101 = load ptr, ptr %funcs.i364.i, align 4
  %tobool26.not.i217 = icmp eq ptr %1101, null
  br i1 %tobool26.not.i217, label %land.lhs.true22.i.cond.false43.i224_crit_edge, label %land.lhs.true27.i

land.lhs.true22.i.cond.false43.i224_crit_edge:    ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i224

land.lhs.true27.i:                                ; preds = %land.lhs.true22.i
  %sriov_wreg31.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1101, i32 0, i32 12
  %1102 = ptrtoint ptr %sriov_wreg31.i to i32
  call void @__asan_load4_noabort(i32 %1102)
  %1103 = load ptr, ptr %sriov_wreg31.i, align 4
  %tobool32.not.i218 = icmp eq ptr %1103, null
  br i1 %tobool32.not.i218, label %land.lhs.true27.i.cond.false43.i224_crit_edge, label %cond.true33.i221

land.lhs.true27.i.cond.false43.i224_crit_edge:    ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i224

cond.true33.i221:                                 ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #15
  %1104 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1104)
  %1105 = load ptr, ptr %arrayidx.i365.i, align 8
  %1106 = ptrtoint ptr %1105 to i32
  call void @__asan_load4_noabort(i32 %1106)
  %1107 = load i32, ptr %1105, align 4
  %add42.i220 = add i32 %1107, 8252
  call void %1103(ptr noundef %handle, i32 noundef %add42.i220, i32 noundef 1, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end49.i227

cond.false43.i224:                                ; preds = %land.lhs.true27.i.cond.false43.i224_crit_edge, %land.lhs.true22.i.cond.false43.i224_crit_edge, %cond.end.i216.cond.false43.i224_crit_edge
  %1108 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1108)
  %1109 = load ptr, ptr %arrayidx.i365.i, align 8
  %1110 = ptrtoint ptr %1109 to i32
  call void @__asan_load4_noabort(i32 %1110)
  %1111 = load i32, ptr %1109, align 4
  %add48.i223 = add i32 %1111, 8252
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add48.i223, i32 noundef 1, i32 noundef 0) #13
  br label %cond.end49.i227

cond.end49.i227:                                  ; preds = %cond.false43.i224, %cond.true33.i221
  %1112 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1112)
  %1113 = load i32, ptr %virt.i101, align 8
  %and52.i225 = and i32 %1113, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52.i225)
  %tobool53.not.i226 = icmp eq i32 %and52.i225, 0
  br i1 %tobool53.not.i226, label %cond.end49.i227.cond.false75.i_crit_edge, label %land.lhs.true54.i230

cond.end49.i227.cond.false75.i_crit_edge:         ; preds = %cond.end49.i227
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false75.i

land.lhs.true54.i230:                             ; preds = %cond.end49.i227
  %1114 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1114)
  %1115 = load ptr, ptr %funcs.i364.i, align 4
  %tobool58.not.i229 = icmp eq ptr %1115, null
  br i1 %tobool58.not.i229, label %land.lhs.true54.i230.cond.false75.i_crit_edge, label %land.lhs.true59.i232

land.lhs.true54.i230.cond.false75.i_crit_edge:    ; preds = %land.lhs.true54.i230
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false75.i

land.lhs.true59.i232:                             ; preds = %land.lhs.true54.i230
  %sriov_wreg63.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1115, i32 0, i32 12
  %1116 = ptrtoint ptr %sriov_wreg63.i to i32
  call void @__asan_load4_noabort(i32 %1116)
  %1117 = load ptr, ptr %sriov_wreg63.i, align 4
  %tobool64.not.i231 = icmp eq ptr %1117, null
  br i1 %tobool64.not.i231, label %land.lhs.true59.i232.cond.false75.i_crit_edge, label %cond.true65.i235

land.lhs.true59.i232.cond.false75.i_crit_edge:    ; preds = %land.lhs.true59.i232
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false75.i

cond.true65.i235:                                 ; preds = %land.lhs.true59.i232
  call void @__sanitizer_cov_trace_pc() #15
  %1118 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1118)
  %1119 = load ptr, ptr %arrayidx.i365.i, align 8
  %1120 = ptrtoint ptr %1119 to i32
  call void @__asan_load4_noabort(i32 %1120)
  %1121 = load i32, ptr %1119, align 4
  %add74.i234 = add i32 %1121, 8253
  call void %1117(ptr noundef %handle, i32 noundef %add74.i234, i32 noundef 16369665, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end81.i

cond.false75.i:                                   ; preds = %land.lhs.true59.i232.cond.false75.i_crit_edge, %land.lhs.true54.i230.cond.false75.i_crit_edge, %cond.end49.i227.cond.false75.i_crit_edge
  %1122 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1122)
  %1123 = load ptr, ptr %arrayidx.i365.i, align 8
  %1124 = ptrtoint ptr %1123 to i32
  call void @__asan_load4_noabort(i32 %1124)
  %1125 = load i32, ptr %1123, align 4
  %add80.i = add i32 %1125, 8253
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add80.i, i32 noundef 16369665, i32 noundef 0) #13
  br label %cond.end81.i

cond.end81.i:                                     ; preds = %cond.false75.i, %cond.true65.i235
  %1126 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1126)
  %1127 = load i32, ptr %virt.i101, align 8
  %and84.i = and i32 %1127, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84.i)
  %tobool85.not.i = icmp eq i32 %and84.i, 0
  br i1 %tobool85.not.i, label %cond.end81.i.cond.false107.i_crit_edge, label %land.lhs.true86.i

cond.end81.i.cond.false107.i_crit_edge:           ; preds = %cond.end81.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false107.i

land.lhs.true86.i:                                ; preds = %cond.end81.i
  %1128 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1128)
  %1129 = load ptr, ptr %funcs.i364.i, align 4
  %tobool90.not.i = icmp eq ptr %1129, null
  br i1 %tobool90.not.i, label %land.lhs.true86.i.cond.false107.i_crit_edge, label %land.lhs.true91.i

land.lhs.true86.i.cond.false107.i_crit_edge:      ; preds = %land.lhs.true86.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false107.i

land.lhs.true91.i:                                ; preds = %land.lhs.true86.i
  %sriov_wreg95.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1129, i32 0, i32 12
  %1130 = ptrtoint ptr %sriov_wreg95.i to i32
  call void @__asan_load4_noabort(i32 %1130)
  %1131 = load ptr, ptr %sriov_wreg95.i, align 4
  %tobool96.not.i236 = icmp eq ptr %1131, null
  br i1 %tobool96.not.i236, label %land.lhs.true91.i.cond.false107.i_crit_edge, label %cond.true97.i

land.lhs.true91.i.cond.false107.i_crit_edge:      ; preds = %land.lhs.true91.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false107.i

cond.true97.i:                                    ; preds = %land.lhs.true91.i
  call void @__sanitizer_cov_trace_pc() #15
  %1132 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1132)
  %1133 = load ptr, ptr %arrayidx.i365.i, align 8
  %1134 = ptrtoint ptr %1133 to i32
  call void @__asan_load4_noabort(i32 %1134)
  %1135 = load i32, ptr %1133, align 4
  %add106.i = add i32 %1135, 8240
  call void %1131(ptr noundef %handle, i32 noundef %add106.i, i32 noundef 40996, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end113.i

cond.false107.i:                                  ; preds = %land.lhs.true91.i.cond.false107.i_crit_edge, %land.lhs.true86.i.cond.false107.i_crit_edge, %cond.end81.i.cond.false107.i_crit_edge
  %1136 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1136)
  %1137 = load ptr, ptr %arrayidx.i365.i, align 8
  %1138 = ptrtoint ptr %1137 to i32
  call void @__asan_load4_noabort(i32 %1138)
  %1139 = load i32, ptr %1137, align 4
  %add112.i = add i32 %1139, 8240
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add112.i, i32 noundef 40996, i32 noundef 0) #13
  br label %cond.end113.i

cond.end113.i:                                    ; preds = %cond.false107.i, %cond.true97.i
  %1140 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1140)
  %1141 = load i32, ptr %virt.i101, align 8
  %and116.i = and i32 %1141, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116.i)
  %tobool117.not.i = icmp eq i32 %and116.i, 0
  br i1 %tobool117.not.i, label %cond.end113.i.cond.false139.i_crit_edge, label %land.lhs.true118.i

cond.end113.i.cond.false139.i_crit_edge:          ; preds = %cond.end113.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false139.i

land.lhs.true118.i:                               ; preds = %cond.end113.i
  %1142 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1142)
  %1143 = load ptr, ptr %funcs.i364.i, align 4
  %tobool122.not.i238 = icmp eq ptr %1143, null
  br i1 %tobool122.not.i238, label %land.lhs.true118.i.cond.false139.i_crit_edge, label %land.lhs.true123.i239

land.lhs.true118.i.cond.false139.i_crit_edge:     ; preds = %land.lhs.true118.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false139.i

land.lhs.true123.i239:                            ; preds = %land.lhs.true118.i
  %sriov_wreg127.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1143, i32 0, i32 12
  %1144 = ptrtoint ptr %sriov_wreg127.i to i32
  call void @__asan_load4_noabort(i32 %1144)
  %1145 = load ptr, ptr %sriov_wreg127.i, align 4
  %tobool128.not.i = icmp eq ptr %1145, null
  br i1 %tobool128.not.i, label %land.lhs.true123.i239.cond.false139.i_crit_edge, label %cond.true129.i

land.lhs.true123.i239.cond.false139.i_crit_edge:  ; preds = %land.lhs.true123.i239
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false139.i

cond.true129.i:                                   ; preds = %land.lhs.true123.i239
  call void @__sanitizer_cov_trace_pc() #15
  %1146 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1146)
  %1147 = load ptr, ptr %arrayidx.i365.i, align 8
  %1148 = ptrtoint ptr %1147 to i32
  call void @__asan_load4_noabort(i32 %1148)
  %1149 = load i32, ptr %1147, align 4
  %add138.i = add i32 %1149, 8224
  call void %1145(ptr noundef %handle, i32 noundef %add138.i, i32 noundef 26, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end145.i

cond.false139.i:                                  ; preds = %land.lhs.true123.i239.cond.false139.i_crit_edge, %land.lhs.true118.i.cond.false139.i_crit_edge, %cond.end113.i.cond.false139.i_crit_edge
  %1150 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1150)
  %1151 = load ptr, ptr %arrayidx.i365.i, align 8
  %1152 = ptrtoint ptr %1151 to i32
  call void @__asan_load4_noabort(i32 %1152)
  %1153 = load i32, ptr %1151, align 4
  %add144.i = add i32 %1153, 8224
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add144.i, i32 noundef 26, i32 noundef 0) #13
  br label %cond.end145.i

cond.end145.i:                                    ; preds = %cond.false139.i, %cond.true129.i
  %1154 = ptrtoint ptr %virt.i101 to i32
  call void @__asan_load4_noabort(i32 %1154)
  %1155 = load i32, ptr %virt.i101, align 8
  %and148.i = and i32 %1155, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148.i)
  %tobool149.not.i = icmp eq i32 %and148.i, 0
  br i1 %tobool149.not.i, label %cond.end145.i.cond.false171.i_crit_edge, label %land.lhs.true150.i

cond.end145.i.cond.false171.i_crit_edge:          ; preds = %cond.end145.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false171.i

land.lhs.true150.i:                               ; preds = %cond.end145.i
  %1156 = ptrtoint ptr %funcs.i364.i to i32
  call void @__asan_load4_noabort(i32 %1156)
  %1157 = load ptr, ptr %funcs.i364.i, align 4
  %tobool154.not.i = icmp eq ptr %1157, null
  br i1 %tobool154.not.i, label %land.lhs.true150.i.cond.false171.i_crit_edge, label %land.lhs.true155.i240

land.lhs.true150.i.cond.false171.i_crit_edge:     ; preds = %land.lhs.true150.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false171.i

land.lhs.true155.i240:                            ; preds = %land.lhs.true150.i
  %sriov_wreg159.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1157, i32 0, i32 12
  %1158 = ptrtoint ptr %sriov_wreg159.i to i32
  call void @__asan_load4_noabort(i32 %1158)
  %1159 = load ptr, ptr %sriov_wreg159.i, align 4
  %tobool160.not.i = icmp eq ptr %1159, null
  br i1 %tobool160.not.i, label %land.lhs.true155.i240.cond.false171.i_crit_edge, label %cond.true161.i

land.lhs.true155.i240.cond.false171.i_crit_edge:  ; preds = %land.lhs.true155.i240
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false171.i

cond.true161.i:                                   ; preds = %land.lhs.true155.i240
  call void @__sanitizer_cov_trace_pc() #15
  %1160 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1160)
  %1161 = load ptr, ptr %arrayidx.i365.i, align 8
  %1162 = ptrtoint ptr %1161 to i32
  call void @__asan_load4_noabort(i32 %1162)
  %1163 = load i32, ptr %1161, align 4
  %add170.i = add i32 %1163, 8225
  call void %1159(ptr noundef %handle, i32 noundef %add170.i, i32 noundef 4, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false171.i:                                  ; preds = %land.lhs.true155.i240.cond.false171.i_crit_edge, %land.lhs.true150.i.cond.false171.i_crit_edge, %cond.end145.i.cond.false171.i_crit_edge
  %1164 = ptrtoint ptr %arrayidx.i365.i to i32
  call void @__asan_load4_noabort(i32 %1164)
  %1165 = load ptr, ptr %arrayidx.i365.i, align 8
  %1166 = ptrtoint ptr %1165 to i32
  call void @__asan_load4_noabort(i32 %1166)
  %1167 = load i32, ptr %1165, align 4
  %add176.i = add i32 %1167, 8225
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add176.i, i32 noundef 4, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false171.i, %cond.true161.i, %if.end38.cleanup_crit_edge, %if.end28.cleanup_crit_edge, %gfx_v10_0_constants_init.exit.cleanup_crit_edge, %if.then3.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then3.cleanup_crit_edge ], [ %call12, %gfx_v10_0_constants_init.exit.cleanup_crit_edge ], [ %call29, %if.end28.cleanup_crit_edge ], [ 0, %if.end38.cleanup_crit_edge ], [ 0, %cond.true161.i ], [ 0, %cond.false171.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_hw_fini(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %priv_reg_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %call = tail call i32 @amdgpu_irq_put(ptr noundef %handle, ptr noundef %priv_reg_irq, i32 noundef 0) #13
  %priv_inst_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %call2 = tail call i32 @amdgpu_irq_put(ptr noundef %handle, ptr noundef %priv_inst_irq, i32 noundef 0) #13
  %no_hw_access = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 168
  %0 = ptrtoint ptr %no_hw_access to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %no_hw_access, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end13_crit_edge

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_async_gfx_ring to i32))
  %2 = load i32, ptr @amdgpu_async_gfx_ring, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool3.not = icmp eq i32 %2, 0
  br i1 %tobool3.not, label %if.then.if.end8_crit_edge, label %if.then4

if.then.if.end8_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then4:                                         ; preds = %if.then
  %ring.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3
  %pmf.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 5
  %3 = ptrtoint ptr %pmf.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pmf.i, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %if.then4.if.then7_crit_edge, label %lor.lhs.false.i

if.then4.if.then7_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

lor.lhs.false.i:                                  ; preds = %if.then4
  %kiq_unmap_queues.i = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %kiq_unmap_queues.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %kiq_unmap_queues.i, align 4
  %tobool3.not.i = icmp eq ptr %6, null
  br i1 %tobool3.not.i, label %lor.lhs.false.i.if.then7_crit_edge, label %if.end.i

lor.lhs.false.i.if.then7_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

if.end.i:                                         ; preds = %lor.lhs.false.i
  %unmap_queues_size.i = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %4, i32 0, i32 7
  %7 = ptrtoint ptr %unmap_queues_size.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %unmap_queues_size.i, align 4
  %num_gfx_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %9 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_gfx_rings.i, align 8
  %mul.i = mul i32 %10, %8
  %call.i = tail call i32 @amdgpu_ring_alloc(ptr noundef %ring.i, i32 noundef %mul.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool6.not.i, label %for.cond.preheader.i, label %if.end.i.if.then7_crit_edge

if.end.i.if.then7_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

for.cond.preheader.i:                             ; preds = %if.end.i
  %11 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_gfx_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp28.not.i = icmp eq i32 %12, 0
  br i1 %cmp28.not.i, label %for.cond.preheader.i.gfx_v10_0_kiq_disable_kgq.exit_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.gfx_v10_0_kiq_disable_kgq.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kiq_disable_kgq.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.029.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %13 = ptrtoint ptr %pmf.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pmf.i, align 4
  %kiq_unmap_queues12.i = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %kiq_unmap_queues12.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %kiq_unmap_queues12.i, align 4
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.029.i
  tail call void %16(ptr noundef %ring.i, ptr noundef %arrayidx.i, i32 noundef 0, i64 noundef 0, i64 noundef 0) #13
  %inc.i = add nuw i32 %i.029.i, 1
  %17 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %num_gfx_rings.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %18
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.gfx_v10_0_kiq_disable_kgq.exit_crit_edge

for.body.i.gfx_v10_0_kiq_disable_kgq.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kiq_disable_kgq.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

gfx_v10_0_kiq_disable_kgq.exit:                   ; preds = %for.body.i.gfx_v10_0_kiq_disable_kgq.exit_crit_edge, %for.cond.preheader.i.gfx_v10_0_kiq_disable_kgq.exit_crit_edge
  %call14.i = tail call i32 @amdgpu_ring_test_helper(ptr noundef %ring.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool6.not = icmp eq i32 %call14.i, 0
  br i1 %tobool6.not, label %gfx_v10_0_kiq_disable_kgq.exit.if.end8_crit_edge, label %gfx_v10_0_kiq_disable_kgq.exit.if.then7_crit_edge

gfx_v10_0_kiq_disable_kgq.exit.if.then7_crit_edge: ; preds = %gfx_v10_0_kiq_disable_kgq.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then7

gfx_v10_0_kiq_disable_kgq.exit.if.end8_crit_edge: ; preds = %gfx_v10_0_kiq_disable_kgq.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end8

if.then7:                                         ; preds = %gfx_v10_0_kiq_disable_kgq.exit.if.then7_crit_edge, %if.end.i.if.then7_crit_edge, %lor.lhs.false.i.if.then7_crit_edge, %if.then4.if.then7_crit_edge
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.113) #13
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %gfx_v10_0_kiq_disable_kgq.exit.if.end8_crit_edge, %if.then.if.end8_crit_edge
  %call9 = tail call i32 @amdgpu_gfx_disable_kcq(ptr noundef %handle) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end8.if.end13_crit_edge, label %if.then11

if.end8.if.end13_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then11:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.114) #13
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end8.if.end13_crit_edge, %entry.if.end13_crit_edge
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %19 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %virt, align 8
  %and = and i32 %20, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp eq i32 %and, 0
  br i1 %tobool14.not, label %if.end145, label %if.then15

if.then15:                                        ; preds = %if.end13
  tail call fastcc void @gfx_v10_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext false)
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 656127, i32 %22)
  %cmp = icmp ugt i32 %22, 656127
  %23 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %virt, align 8
  %and21 = and i32 %24, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %cmp, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.then15
  br i1 %tobool22.not, label %if.then18.cond.false_crit_edge, label %land.lhs.true

if.then18.cond.false_crit_edge:                   ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then18
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %25 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %funcs, align 4
  %tobool24.not = icmp eq ptr %26, null
  br i1 %tobool24.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true25

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true25:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %26, i32 0, i32 13
  %27 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sriov_rreg, align 4
  %tobool29.not = icmp eq ptr %28, null
  br i1 %tobool29.not, label %land.lhs.true25.cond.false_crit_edge, label %cond.true

land.lhs.true25.cond.false_crit_edge:             ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx34 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %29 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx34, align 8
  %arrayidx36 = getelementptr i32, ptr %30, i32 1
  %31 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx36, align 4
  %add = add i32 %32, 19617
  %call37 = tail call i32 %28(ptr noundef %handle, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true25.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then18.cond.false_crit_edge
  %arrayidx39 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %33 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx39, align 8
  %arrayidx41 = getelementptr i32, ptr %34, i32 1
  %35 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx41, align 4
  %add42 = add i32 %36, 19617
  %call43 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add42, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call37, %cond.true ], [ %call43, %cond.false ]
  %and44 = and i32 %cond, -256
  %37 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %virt, align 8
  %and47 = and i32 %38, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %cond.end.cond.false69_crit_edge, label %land.lhs.true49

cond.end.cond.false69_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69

land.lhs.true49:                                  ; preds = %cond.end
  %funcs52 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %39 = ptrtoint ptr %funcs52 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %funcs52, align 4
  %tobool53.not = icmp eq ptr %40, null
  br i1 %tobool53.not, label %land.lhs.true49.cond.false69_crit_edge, label %land.lhs.true54

land.lhs.true49.cond.false69_crit_edge:           ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69

land.lhs.true54:                                  ; preds = %land.lhs.true49
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %40, i32 0, i32 12
  %41 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sriov_wreg, align 4
  %tobool58.not = icmp eq ptr %42, null
  br i1 %tobool58.not, label %land.lhs.true54.cond.false69_crit_edge, label %cond.true59

land.lhs.true54.cond.false69_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69

cond.true59:                                      ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx65 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %43 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx65, align 8
  %arrayidx67 = getelementptr i32, ptr %44, i32 1
  %45 = ptrtoint ptr %arrayidx67 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx67, align 4
  %add68 = add i32 %46, 19617
  tail call void %42(ptr noundef %handle, i32 noundef %add68, i32 noundef %and44, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false69:                                     ; preds = %land.lhs.true54.cond.false69_crit_edge, %land.lhs.true49.cond.false69_crit_edge, %cond.end.cond.false69_crit_edge
  %arrayidx71 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %47 = ptrtoint ptr %arrayidx71 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx71, align 8
  %arrayidx73 = getelementptr i32, ptr %48, i32 1
  %49 = ptrtoint ptr %arrayidx73 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx73, align 4
  %add74 = add i32 %50, 19617
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add74, i32 noundef %and44, i32 noundef 0) #13
  br label %cleanup

if.else:                                          ; preds = %if.then15
  br i1 %tobool22.not, label %if.else.cond.false102_crit_edge, label %land.lhs.true80

if.else.cond.false102_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false102

land.lhs.true80:                                  ; preds = %if.else
  %funcs83 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %51 = ptrtoint ptr %funcs83 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %funcs83, align 4
  %tobool84.not = icmp eq ptr %52, null
  br i1 %tobool84.not, label %land.lhs.true80.cond.false102_crit_edge, label %land.lhs.true85

land.lhs.true80.cond.false102_crit_edge:          ; preds = %land.lhs.true80
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false102

land.lhs.true85:                                  ; preds = %land.lhs.true80
  %sriov_rreg89 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %52, i32 0, i32 13
  %53 = ptrtoint ptr %sriov_rreg89 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %sriov_rreg89, align 4
  %tobool90.not = icmp eq ptr %54, null
  br i1 %tobool90.not, label %land.lhs.true85.cond.false102_crit_edge, label %cond.true91

land.lhs.true85.cond.false102_crit_edge:          ; preds = %land.lhs.true85
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false102

cond.true91:                                      ; preds = %land.lhs.true85
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx97 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %55 = ptrtoint ptr %arrayidx97 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx97, align 8
  %arrayidx99 = getelementptr i32, ptr %56, i32 1
  %57 = ptrtoint ptr %arrayidx99 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx99, align 4
  %add100 = add i32 %58, 19626
  %call101 = tail call i32 %54(ptr noundef %handle, i32 noundef %add100, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end109

cond.false102:                                    ; preds = %land.lhs.true85.cond.false102_crit_edge, %land.lhs.true80.cond.false102_crit_edge, %if.else.cond.false102_crit_edge
  %arrayidx104 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %59 = ptrtoint ptr %arrayidx104 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx104, align 8
  %arrayidx106 = getelementptr i32, ptr %60, i32 1
  %61 = ptrtoint ptr %arrayidx106 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx106, align 4
  %add107 = add i32 %62, 19626
  %call108 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add107, i32 noundef 0) #13
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false102, %cond.true91
  %cond110 = phi i32 [ %call101, %cond.true91 ], [ %call108, %cond.false102 ]
  %and111 = and i32 %cond110, -256
  %63 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %virt, align 8
  %and114 = and i32 %64, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and114)
  %tobool115.not = icmp eq i32 %and114, 0
  br i1 %tobool115.not, label %cond.end109.cond.false137_crit_edge, label %land.lhs.true116

cond.end109.cond.false137_crit_edge:              ; preds = %cond.end109
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false137

land.lhs.true116:                                 ; preds = %cond.end109
  %funcs119 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %65 = ptrtoint ptr %funcs119 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %funcs119, align 4
  %tobool120.not = icmp eq ptr %66, null
  br i1 %tobool120.not, label %land.lhs.true116.cond.false137_crit_edge, label %land.lhs.true121

land.lhs.true116.cond.false137_crit_edge:         ; preds = %land.lhs.true116
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false137

land.lhs.true121:                                 ; preds = %land.lhs.true116
  %sriov_wreg125 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %66, i32 0, i32 12
  %67 = ptrtoint ptr %sriov_wreg125 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %sriov_wreg125, align 4
  %tobool126.not = icmp eq ptr %68, null
  br i1 %tobool126.not, label %land.lhs.true121.cond.false137_crit_edge, label %cond.true127

land.lhs.true121.cond.false137_crit_edge:         ; preds = %land.lhs.true121
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false137

cond.true127:                                     ; preds = %land.lhs.true121
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx133 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %69 = ptrtoint ptr %arrayidx133 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %arrayidx133, align 8
  %arrayidx135 = getelementptr i32, ptr %70, i32 1
  %71 = ptrtoint ptr %arrayidx135 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx135, align 4
  %add136 = add i32 %72, 19626
  tail call void %68(ptr noundef %handle, i32 noundef %add136, i32 noundef %and111, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false137:                                    ; preds = %land.lhs.true121.cond.false137_crit_edge, %land.lhs.true116.cond.false137_crit_edge, %cond.end109.cond.false137_crit_edge
  %arrayidx139 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %73 = ptrtoint ptr %arrayidx139 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx139, align 8
  %arrayidx141 = getelementptr i32, ptr %74, i32 1
  %75 = ptrtoint ptr %arrayidx141 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx141, align 4
  %add142 = add i32 %76, 19626
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add142, i32 noundef %and111, i32 noundef 0) #13
  br label %cleanup

if.end145:                                        ; preds = %if.end13
  tail call fastcc void @gfx_v10_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext false) #13
  tail call fastcc void @gfx_v10_0_cp_compute_enable(ptr noundef %handle, i1 noundef zeroext false) #13
  %77 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %virt, align 8
  %and.i = and i32 %78, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i203 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i203, label %cond.false.i, label %if.end145.cleanup_crit_edge

if.end145.cleanup_crit_edge:                      ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

cond.false.i:                                     ; preds = %if.end145
  %arrayidx18.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %79 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %arrayidx18.i, align 8
  %81 = ptrtoint ptr %80 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %80, align 4
  %add21.i = add i32 %82, 7690
  %call22.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add21.i, i32 noundef 0) #13
  %and23.i = and i32 %call22.i, -3932161
  %83 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %virt, align 8
  %and47.i = and i32 %84, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i)
  %tobool48.not.i = icmp eq i32 %and47.i, 0
  br i1 %tobool48.not.i, label %cond.false.i.cond.false69.i_crit_edge, label %land.lhs.true49.i

cond.false.i.cond.false69.i_crit_edge:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i

land.lhs.true49.i:                                ; preds = %cond.false.i
  %funcs52.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %85 = ptrtoint ptr %funcs52.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %funcs52.i, align 4
  %tobool53.not.i = icmp eq ptr %86, null
  br i1 %tobool53.not.i, label %land.lhs.true49.i.cond.false69.i_crit_edge, label %land.lhs.true54.i

land.lhs.true49.i.cond.false69.i_crit_edge:       ; preds = %land.lhs.true49.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i

land.lhs.true54.i:                                ; preds = %land.lhs.true49.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %86, i32 0, i32 12
  %87 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool58.not.i = icmp eq ptr %88, null
  br i1 %tobool58.not.i, label %land.lhs.true54.i.cond.false69.i_crit_edge, label %cond.true59.i

land.lhs.true54.i.cond.false69.i_crit_edge:       ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i

cond.true59.i:                                    ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #15
  %89 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx18.i, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add68.i = add i32 %92, 7690
  tail call void %88(ptr noundef %handle, i32 noundef %add68.i, i32 noundef %and23.i, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false69.i:                                   ; preds = %land.lhs.true54.i.cond.false69.i_crit_edge, %land.lhs.true49.i.cond.false69.i_crit_edge, %cond.false.i.cond.false69.i_crit_edge
  %93 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %arrayidx18.i, align 8
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %94, align 4
  %add74.i = add i32 %96, 7690
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add74.i, i32 noundef %and23.i, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false69.i, %cond.true59.i, %if.end145.cleanup_crit_edge, %cond.false137, %cond.true127, %cond.false69, %cond.true59
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_suspend(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @gfx_v10_0_hw_fini(ptr noundef %handle)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_resume(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @gfx_v10_0_hw_init(ptr noundef %handle)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @gfx_v10_0_is_idle(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 3492
  %call = tail call i32 %5(ptr noundef %handle, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 3492
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %cond)
  %tobool20.not = icmp sgt i32 %cond, -1
  ret i1 %tobool20.not
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_wait_for_idle(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 11
  %0 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp34.not = icmp eq i32 %1, 0
  br i1 %cmp34.not, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %i.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.for.body_crit_edge ]
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.cond.false_crit_edge, label %land.lhs.true

for.body.cond.false_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %for.body
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %7, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add = add i32 %11, 3492
  %call = tail call i32 %7(ptr noundef %handle, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %for.body.cond.false_crit_edge
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add17 = add i32 %15, 3492
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %cond)
  %tobool21.not = icmp sgt i32 %cond, -1
  br i1 %tobool21.not, label %cond.end.cleanup_crit_edge, label %if.end

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %16 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %16(i32 noundef 214748) #13
  %inc = add nuw i32 %i.035, 1
  %17 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp ult i32 %inc, %18
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

cleanup:                                          ; preds = %if.end.cleanup_crit_edge, %cond.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -110, %entry.cleanup_crit_edge ], [ -110, %if.end.cleanup_crit_edge ], [ 0, %cond.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_soft_reset(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 3492
  %call = tail call i32 %5(ptr noundef %handle, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 3492
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, 1204928512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  %spec.select = select i1 %tobool20.not, i32 0, i32 65537
  %and24 = and i32 %cond, 805306368
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp ne i32 %and24, 0
  %or28 = zext i1 %tobool25.not to i32
  %grbm_soft_reset.1 = or i32 %spec.select, %or28
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and32 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %cond.end.cond.false56_crit_edge, label %land.lhs.true34

cond.end.cond.false56_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false56

land.lhs.true34:                                  ; preds = %cond.end
  %funcs37 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs37 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs37, align 4
  %tobool38.not = icmp eq ptr %17, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false56_crit_edge, label %land.lhs.true39

land.lhs.true34.cond.false56_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false56

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %sriov_rreg43 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %sriov_rreg43 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_rreg43, align 4
  %tobool44.not = icmp eq ptr %19, null
  br i1 %tobool44.not, label %land.lhs.true39.cond.false56_crit_edge, label %cond.true45

land.lhs.true39.cond.false56_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false56

cond.true45:                                      ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx51 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx51, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add54 = add i32 %23, 3490
  %call55 = tail call i32 %19(ptr noundef %handle, i32 noundef %add54, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end63

cond.false56:                                     ; preds = %land.lhs.true39.cond.false56_crit_edge, %land.lhs.true34.cond.false56_crit_edge, %cond.end.cond.false56_crit_edge
  %arrayidx58 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx58, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add61 = add i32 %27, 3490
  %call62 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add61, i32 noundef 0) #13
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false56, %cond.true45
  %cond64 = phi i32 [ %call55, %cond.true45 ], [ %call62, %cond.false56 ]
  %arrayidx65 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %28 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx65, align 4
  %.off = add i32 %29, -656128
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %.off)
  %switch = icmp ult i32 %.off, 6
  br i1 %switch, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %cond.end63
  %30 = and i32 %cond64, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool68.not = icmp eq i32 %30, 0
  %or71 = or i32 %grbm_soft_reset.1, 4
  br i1 %tobool68.not, label %sw.bb.sw.epilog_crit_edge, label %sw.bb.if.then81_crit_edge

sw.bb.if.then81_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then81

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end63
  %31 = and i32 %cond64, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool75.not = icmp eq i32 %31, 0
  %or78 = or i32 %grbm_soft_reset.1, 4
  br i1 %tobool75.not, label %sw.default.sw.epilog_crit_edge, label %sw.default.if.then81_crit_edge

sw.default.if.then81_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then81

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %grbm_soft_reset.1)
  %tobool80.not = icmp eq i32 %grbm_soft_reset.1, 0
  br i1 %tobool80.not, label %sw.epilog.if.end256_crit_edge, label %sw.epilog.if.then81_crit_edge

sw.epilog.if.then81_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then81

sw.epilog.if.end256_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end256

if.then81:                                        ; preds = %sw.epilog.if.then81_crit_edge, %sw.default.if.then81_crit_edge, %sw.bb.if.then81_crit_edge
  %grbm_soft_reset.2353 = phi i32 [ %grbm_soft_reset.1, %sw.epilog.if.then81_crit_edge ], [ %or78, %sw.default.if.then81_crit_edge ], [ %or71, %sw.bb.if.then81_crit_edge ]
  tail call void @gfx_v10_0_rlc_stop(ptr noundef %handle)
  tail call fastcc void @gfx_v10_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext false)
  tail call fastcc void @gfx_v10_0_cp_compute_enable(ptr noundef %handle, i1 noundef zeroext false)
  %32 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %virt, align 8
  %and87 = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and87)
  %tobool88.not = icmp eq i32 %and87, 0
  br i1 %tobool88.not, label %if.then81.cond.false111_crit_edge, label %land.lhs.true89

if.then81.cond.false111_crit_edge:                ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false111

land.lhs.true89:                                  ; preds = %if.then81
  %funcs92 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %34 = ptrtoint ptr %funcs92 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %funcs92, align 4
  %tobool93.not = icmp eq ptr %35, null
  br i1 %tobool93.not, label %land.lhs.true89.cond.false111_crit_edge, label %land.lhs.true94

land.lhs.true89.cond.false111_crit_edge:          ; preds = %land.lhs.true89
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false111

land.lhs.true94:                                  ; preds = %land.lhs.true89
  %sriov_rreg98 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %35, i32 0, i32 13
  %36 = ptrtoint ptr %sriov_rreg98 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sriov_rreg98, align 4
  %tobool99.not = icmp eq ptr %37, null
  br i1 %tobool99.not, label %land.lhs.true94.cond.false111_crit_edge, label %cond.true100

land.lhs.true94.cond.false111_crit_edge:          ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false111

cond.true100:                                     ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx106 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %38 = ptrtoint ptr %arrayidx106 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx106, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %add109 = add i32 %41, 3496
  %call110 = tail call i32 %37(ptr noundef %handle, i32 noundef %add109, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end118

cond.false111:                                    ; preds = %land.lhs.true94.cond.false111_crit_edge, %land.lhs.true89.cond.false111_crit_edge, %if.then81.cond.false111_crit_edge
  %arrayidx113 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %42 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx113, align 8
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %43, align 4
  %add116 = add i32 %45, 3496
  %call117 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add116, i32 noundef 0) #13
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false111, %cond.true100
  %cond119 = phi i32 [ %call110, %cond.true100 ], [ %call117, %cond.false111 ]
  %or120 = or i32 %cond119, %grbm_soft_reset.2353
  %46 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %handle, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %47, ptr noundef nonnull @.str.115, i32 noundef %or120) #16
  %48 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %virt, align 8
  %and123 = and i32 %49, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and123)
  %tobool124.not = icmp eq i32 %and123, 0
  br i1 %tobool124.not, label %cond.end118.cond.false145_crit_edge, label %land.lhs.true125

cond.end118.cond.false145_crit_edge:              ; preds = %cond.end118
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false145

land.lhs.true125:                                 ; preds = %cond.end118
  %funcs128 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %50 = ptrtoint ptr %funcs128 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %funcs128, align 4
  %tobool129.not = icmp eq ptr %51, null
  br i1 %tobool129.not, label %land.lhs.true125.cond.false145_crit_edge, label %land.lhs.true130

land.lhs.true125.cond.false145_crit_edge:         ; preds = %land.lhs.true125
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false145

land.lhs.true130:                                 ; preds = %land.lhs.true125
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %51, i32 0, i32 12
  %52 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %sriov_wreg, align 4
  %tobool134.not = icmp eq ptr %53, null
  br i1 %tobool134.not, label %land.lhs.true130.cond.false145_crit_edge, label %cond.true135

land.lhs.true130.cond.false145_crit_edge:         ; preds = %land.lhs.true130
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false145

cond.true135:                                     ; preds = %land.lhs.true130
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx141 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %54 = ptrtoint ptr %arrayidx141 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx141, align 8
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %add144 = add i32 %57, 3496
  tail call void %53(ptr noundef %handle, i32 noundef %add144, i32 noundef %or120, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end151

cond.false145:                                    ; preds = %land.lhs.true130.cond.false145_crit_edge, %land.lhs.true125.cond.false145_crit_edge, %cond.end118.cond.false145_crit_edge
  %arrayidx147 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %58 = ptrtoint ptr %arrayidx147 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx147, align 8
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %59, align 4
  %add150 = add i32 %61, 3496
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add150, i32 noundef %or120, i32 noundef 0) #13
  br label %cond.end151

cond.end151:                                      ; preds = %cond.false145, %cond.true135
  %62 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %virt, align 8
  %and154 = and i32 %63, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and154)
  %tobool155.not = icmp eq i32 %and154, 0
  br i1 %tobool155.not, label %cond.end151.cond.false178_crit_edge, label %land.lhs.true156

cond.end151.cond.false178_crit_edge:              ; preds = %cond.end151
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false178

land.lhs.true156:                                 ; preds = %cond.end151
  %funcs159 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %64 = ptrtoint ptr %funcs159 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %funcs159, align 4
  %tobool160.not = icmp eq ptr %65, null
  br i1 %tobool160.not, label %land.lhs.true156.cond.false178_crit_edge, label %land.lhs.true161

land.lhs.true156.cond.false178_crit_edge:         ; preds = %land.lhs.true156
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false178

land.lhs.true161:                                 ; preds = %land.lhs.true156
  %sriov_rreg165 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %65, i32 0, i32 13
  %66 = ptrtoint ptr %sriov_rreg165 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %sriov_rreg165, align 4
  %tobool166.not = icmp eq ptr %67, null
  br i1 %tobool166.not, label %land.lhs.true161.cond.false178_crit_edge, label %cond.true167

land.lhs.true161.cond.false178_crit_edge:         ; preds = %land.lhs.true161
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false178

cond.true167:                                     ; preds = %land.lhs.true161
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx173 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %68 = ptrtoint ptr %arrayidx173 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %arrayidx173, align 8
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %69, align 4
  %add176 = add i32 %71, 3496
  %call177 = tail call i32 %67(ptr noundef %handle, i32 noundef %add176, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end185

cond.false178:                                    ; preds = %land.lhs.true161.cond.false178_crit_edge, %land.lhs.true156.cond.false178_crit_edge, %cond.end151.cond.false178_crit_edge
  %arrayidx180 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %72 = ptrtoint ptr %arrayidx180 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx180, align 8
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %73, align 4
  %add183 = add i32 %75, 3496
  %call184 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add183, i32 noundef 0) #13
  br label %cond.end185

cond.end185:                                      ; preds = %cond.false178, %cond.true167
  %cond186 = phi i32 [ %call177, %cond.true167 ], [ %call184, %cond.false178 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %76 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %76(i32 noundef 10737400) #13
  %neg = xor i32 %grbm_soft_reset.2353, -1
  %and187 = and i32 %cond186, %neg
  %77 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %virt, align 8
  %and190 = and i32 %78, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and190)
  %tobool191.not = icmp eq i32 %and190, 0
  br i1 %tobool191.not, label %cond.end185.cond.false213_crit_edge, label %land.lhs.true192

cond.end185.cond.false213_crit_edge:              ; preds = %cond.end185
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false213

land.lhs.true192:                                 ; preds = %cond.end185
  %funcs195 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %79 = ptrtoint ptr %funcs195 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %funcs195, align 4
  %tobool196.not = icmp eq ptr %80, null
  br i1 %tobool196.not, label %land.lhs.true192.cond.false213_crit_edge, label %land.lhs.true197

land.lhs.true192.cond.false213_crit_edge:         ; preds = %land.lhs.true192
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false213

land.lhs.true197:                                 ; preds = %land.lhs.true192
  %sriov_wreg201 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %80, i32 0, i32 12
  %81 = ptrtoint ptr %sriov_wreg201 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %sriov_wreg201, align 4
  %tobool202.not = icmp eq ptr %82, null
  br i1 %tobool202.not, label %land.lhs.true197.cond.false213_crit_edge, label %cond.true203

land.lhs.true197.cond.false213_crit_edge:         ; preds = %land.lhs.true197
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false213

cond.true203:                                     ; preds = %land.lhs.true197
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx209 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %83 = ptrtoint ptr %arrayidx209 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %arrayidx209, align 8
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %84, align 4
  %add212 = add i32 %86, 3496
  tail call void %82(ptr noundef %handle, i32 noundef %add212, i32 noundef %and187, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end219

cond.false213:                                    ; preds = %land.lhs.true197.cond.false213_crit_edge, %land.lhs.true192.cond.false213_crit_edge, %cond.end185.cond.false213_crit_edge
  %arrayidx215 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %87 = ptrtoint ptr %arrayidx215 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %arrayidx215, align 8
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %88, align 4
  %add218 = add i32 %90, 3496
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add218, i32 noundef %and187, i32 noundef 0) #13
  br label %cond.end219

cond.end219:                                      ; preds = %cond.false213, %cond.true203
  %91 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %virt, align 8
  %and222 = and i32 %92, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and222)
  %tobool223.not = icmp eq i32 %and222, 0
  br i1 %tobool223.not, label %cond.end219.cond.false246_crit_edge, label %land.lhs.true224

cond.end219.cond.false246_crit_edge:              ; preds = %cond.end219
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false246

land.lhs.true224:                                 ; preds = %cond.end219
  %funcs227 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %93 = ptrtoint ptr %funcs227 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %funcs227, align 4
  %tobool228.not = icmp eq ptr %94, null
  br i1 %tobool228.not, label %land.lhs.true224.cond.false246_crit_edge, label %land.lhs.true229

land.lhs.true224.cond.false246_crit_edge:         ; preds = %land.lhs.true224
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false246

land.lhs.true229:                                 ; preds = %land.lhs.true224
  %sriov_rreg233 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %94, i32 0, i32 13
  %95 = ptrtoint ptr %sriov_rreg233 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %sriov_rreg233, align 4
  %tobool234.not = icmp eq ptr %96, null
  br i1 %tobool234.not, label %land.lhs.true229.cond.false246_crit_edge, label %cond.true235

land.lhs.true229.cond.false246_crit_edge:         ; preds = %land.lhs.true229
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false246

cond.true235:                                     ; preds = %land.lhs.true229
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx241 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %97 = ptrtoint ptr %arrayidx241 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %arrayidx241, align 8
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %98, align 4
  %add244 = add i32 %100, 3496
  %call245 = tail call i32 %96(ptr noundef %handle, i32 noundef %add244, i32 noundef 0, i32 noundef 1) #13
  br label %if.end255

cond.false246:                                    ; preds = %land.lhs.true229.cond.false246_crit_edge, %land.lhs.true224.cond.false246_crit_edge, %cond.end219.cond.false246_crit_edge
  %arrayidx248 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %101 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx248, align 8
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %102, align 4
  %add251 = add i32 %104, 3496
  %call252 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add251, i32 noundef 0) #13
  br label %if.end255

if.end255:                                        ; preds = %cond.false246, %cond.true235
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %105 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %105(i32 noundef 10737400) #13
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %sw.epilog.if.end256_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_set_clockgating_state(ptr noundef %handle, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.126)
  switch i32 %3, label %if.end.cleanup_crit_edge [
    i32 655626, label %if.end.sw.bb_crit_edge
    i32 655617, label %if.end.sw.bb_crit_edge9
    i32 655618, label %if.end.sw.bb_crit_edge10
    i32 656128, label %if.end.sw.bb_crit_edge11
    i32 656130, label %if.end.sw.bb_crit_edge12
    i32 656129, label %if.end.sw.bb_crit_edge13
    i32 656132, label %if.end.sw.bb_crit_edge14
    i32 656133, label %if.end.sw.bb_crit_edge15
    i32 656131, label %if.end.sw.bb_crit_edge16
  ]

if.end.sw.bb_crit_edge16:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge15:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge14:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge13:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge12:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge11:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge10:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge9:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge9, %if.end.sw.bb_crit_edge10, %if.end.sw.bb_crit_edge11, %if.end.sw.bb_crit_edge12, %if.end.sw.bb_crit_edge13, %if.end.sw.bb_crit_edge14, %if.end.sw.bb_crit_edge15, %if.end.sw.bb_crit_edge16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp = icmp eq i32 %state, 0
  tail call void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef %handle) #13
  br i1 %cmp, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb
  tail call fastcc void @gfx_v10_0_update_fine_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext true) #13
  tail call fastcc void @gfx_v10_0_update_medium_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext true) #13
  tail call fastcc void @gfx_v10_0_update_3d_clock_gating(ptr noundef %handle, i1 noundef zeroext true) #13
  tail call fastcc void @gfx_v10_0_update_coarse_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext true) #13
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.127)
  switch i32 %6, label %if.then.i.if.end20.i_crit_edge [
    i32 655626, label %if.then.i.if.then15.i_crit_edge
    i32 655617, label %if.then.i.if.then15.i_crit_edge17
    i32 655618, label %if.then.i.if.then15.i_crit_edge18
  ]

if.then.i.if.then15.i_crit_edge18:                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then15.i

if.then.i.if.then15.i_crit_edge17:                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then15.i

if.then.i.if.then15.i_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then15.i

if.then.i.if.end20.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end20.i

if.then15.i:                                      ; preds = %if.then.i.if.then15.i_crit_edge, %if.then.i.if.then15.i_crit_edge17, %if.then.i.if.then15.i_crit_edge18
  call void @__sanitizer_cov_trace_const_cmp4(i32 655618, i32 %6)
  %cmp.i.i = icmp eq i32 %6, 655618
  %arrayidx3.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br i1 %cmp.i.i, label %if.then15.i.for.body.i.i_crit_edge, label %if.then15.i.for.body9.i.i_crit_edge

if.then15.i.for.body9.i.i_crit_edge:              ; preds = %if.then15.i
  br label %for.body9.i.i

if.then15.i.for.body.i.i_crit_edge:               ; preds = %if.then15.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.then15.i.for.body.i.i_crit_edge
  %i.065.i.i = phi i32 [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %if.then15.i.for.body.i.i_crit_edge ]
  %8 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx3.i.i, align 8
  %arrayidx5.i.i = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx5.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx5.i.i, align 4
  %arrayidx6.i.i = getelementptr [20 x i32], ptr @__const.gfx_v10_0_apply_medium_grain_clock_gating_workaround.tcp_ctrl_regs_nv12, i32 0, i32 %i.065.i.i
  %12 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx6.i.i, align 4
  %add.i.i = add i32 %13, %11
  %call.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i.i, i32 noundef 0) #13
  %or.i.i = or i32 %call.i.i, 131072
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add.i.i, i32 noundef %or.i.i, i32 noundef 0) #13
  %inc.i.i = add nuw nsw i32 %i.065.i.i, 1
  %exitcond68.not.i.i = icmp eq i32 %inc.i.i, 20
  br i1 %exitcond68.not.i.i, label %for.body.i.i.gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

for.body.i.i.gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i

for.body9.i.i:                                    ; preds = %for.body9.i.i.for.body9.i.i_crit_edge, %if.then15.i.for.body9.i.i_crit_edge
  %i.164.i.i = phi i32 [ %inc19.i.i, %for.body9.i.i.for.body9.i.i_crit_edge ], [ 0, %if.then15.i.for.body9.i.i_crit_edge ]
  %14 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx3.i.i, align 8
  %arrayidx13.i.i = getelementptr i32, ptr %15, i32 1
  %16 = ptrtoint ptr %arrayidx13.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx13.i.i, align 4
  %arrayidx14.i.i = getelementptr [24 x i32], ptr @__const.gfx_v10_0_apply_medium_grain_clock_gating_workaround.tcp_ctrl_regs, i32 0, i32 %i.164.i.i
  %18 = ptrtoint ptr %arrayidx14.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx14.i.i, align 4
  %add15.i.i = add i32 %19, %17
  %call16.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add15.i.i, i32 noundef 0) #13
  %or17.i.i = or i32 %call16.i.i, 131072
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add15.i.i, i32 noundef %or17.i.i, i32 noundef 0) #13
  %inc19.i.i = add nuw nsw i32 %i.164.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc19.i.i, 24
  br i1 %exitcond.not.i.i, label %for.body9.i.i.gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i_crit_edge, label %for.body9.i.i.for.body9.i.i_crit_edge

for.body9.i.i.for.body9.i.i_crit_edge:            ; preds = %for.body9.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body9.i.i

for.body9.i.i.gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i_crit_edge: ; preds = %for.body9.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i

gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i: ; preds = %for.body9.i.i.gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i_crit_edge, %for.body.i.i.gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i_crit_edge
  %20 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx3.i.i, align 8
  %arrayidx27.i.i = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx27.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx27.i.i, align 4
  %add29.i.i = add i32 %23, 20480
  %call30.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add29.i.i, i32 noundef 0) #13
  %and.i.i = and i32 %call30.i.i, -917505
  %or31.i.i = or i32 %and.i.i, 262144
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add29.i.i, i32 noundef %or31.i.i, i32 noundef 0) #13
  %24 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx3.i.i, align 8
  %arrayidx27.1.i.i = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx27.1.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx27.1.i.i, align 4
  %add29.1.i.i = add i32 %27, 20482
  %call30.1.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add29.1.i.i, i32 noundef 0) #13
  %and.1.i.i = and i32 %call30.1.i.i, -917505
  %or31.1.i.i = or i32 %and.1.i.i, 262144
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add29.1.i.i, i32 noundef %or31.1.i.i, i32 noundef 0) #13
  %28 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx3.i.i, align 8
  %arrayidx27.2.i.i = getelementptr i32, ptr %29, i32 1
  %30 = ptrtoint ptr %arrayidx27.2.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx27.2.i.i, align 4
  %add29.2.i.i = add i32 %31, 20484
  %call30.2.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add29.2.i.i, i32 noundef 0) #13
  %and.2.i.i = and i32 %call30.2.i.i, -917505
  %or31.2.i.i = or i32 %and.2.i.i, 262144
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add29.2.i.i, i32 noundef %or31.2.i.i, i32 noundef 0) #13
  %32 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx3.i.i, align 8
  %arrayidx27.3.i.i = getelementptr i32, ptr %33, i32 1
  %34 = ptrtoint ptr %arrayidx27.3.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx27.3.i.i, align 4
  %add29.3.i.i = add i32 %35, 20486
  %call30.3.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add29.3.i.i, i32 noundef 0) #13
  %and.3.i.i = and i32 %call30.3.i.i, -917505
  %or31.3.i.i = or i32 %and.3.i.i, 262144
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add29.3.i.i, i32 noundef %or31.3.i.i, i32 noundef 0) #13
  br label %if.end20.i

if.else.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_update_coarse_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext false) #13
  tail call fastcc void @gfx_v10_0_update_3d_clock_gating(ptr noundef %handle, i1 noundef zeroext false) #13
  tail call fastcc void @gfx_v10_0_update_medium_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext false) #13
  tail call fastcc void @gfx_v10_0_update_fine_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext false) #13
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.else.i, %gfx_v10_0_apply_medium_grain_clock_gating_workaround.exit.i, %if.then.i.if.end20.i_crit_edge
  %cg_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 99
  %36 = ptrtoint ptr %cg_flags.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cg_flags.i, align 8
  %and.i = and i32 %37, 3145741
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool21.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool21.not.i, label %if.end20.i.gfx_v10_0_update_gfx_clock_gating.exit_crit_edge, label %if.then22.i

if.end20.i.gfx_v10_0_update_gfx_clock_gating.exit_crit_edge: ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_update_gfx_clock_gating.exit

if.then22.i:                                      ; preds = %if.end20.i
  %38 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %virt, align 8
  %and.i1.i = and i32 %39, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1.i)
  %tobool.not.i.i = icmp eq i32 %and.i1.i, 0
  br i1 %tobool.not.i.i, label %cond.false.i.i, label %if.then22.i.gfx_v10_0_update_gfx_clock_gating.exit_crit_edge

if.then22.i.gfx_v10_0_update_gfx_clock_gating.exit_crit_edge: ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_update_gfx_clock_gating.exit

cond.false.i.i:                                   ; preds = %if.then22.i
  %arrayidx18.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %40 = ptrtoint ptr %arrayidx18.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx18.i.i, align 8
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  %add21.i.i = add i32 %43, 7690
  %call22.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add21.i.i, i32 noundef 0) #13
  %and23.i.i = and i32 %call22.i.i, -3932161
  %or38.i.i = select i1 %cmp, i32 3932160, i32 0
  %or44.i.i = or i32 %and23.i.i, %or38.i.i
  %44 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %virt, align 8
  %and47.i.i = and i32 %45, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i.i)
  %tobool48.not.i.i = icmp eq i32 %and47.i.i, 0
  br i1 %tobool48.not.i.i, label %cond.false.i.i.cond.false69.i.i_crit_edge, label %land.lhs.true49.i.i

cond.false.i.i.cond.false69.i.i_crit_edge:        ; preds = %cond.false.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i.i

land.lhs.true49.i.i:                              ; preds = %cond.false.i.i
  %funcs52.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %46 = ptrtoint ptr %funcs52.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %funcs52.i.i, align 4
  %tobool53.not.i.i = icmp eq ptr %47, null
  br i1 %tobool53.not.i.i, label %land.lhs.true49.i.i.cond.false69.i.i_crit_edge, label %land.lhs.true54.i.i

land.lhs.true49.i.i.cond.false69.i.i_crit_edge:   ; preds = %land.lhs.true49.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i.i

land.lhs.true54.i.i:                              ; preds = %land.lhs.true49.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %47, i32 0, i32 12
  %48 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool58.not.i.i = icmp eq ptr %49, null
  br i1 %tobool58.not.i.i, label %land.lhs.true54.i.i.cond.false69.i.i_crit_edge, label %cond.true59.i.i

land.lhs.true54.i.i.cond.false69.i.i_crit_edge:   ; preds = %land.lhs.true54.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i.i

cond.true59.i.i:                                  ; preds = %land.lhs.true54.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %50 = ptrtoint ptr %arrayidx18.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx18.i.i, align 8
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %51, align 4
  %add68.i.i = add i32 %53, 7690
  tail call void %49(ptr noundef %handle, i32 noundef %add68.i.i, i32 noundef %or44.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_update_gfx_clock_gating.exit

cond.false69.i.i:                                 ; preds = %land.lhs.true54.i.i.cond.false69.i.i_crit_edge, %land.lhs.true49.i.i.cond.false69.i.i_crit_edge, %cond.false.i.i.cond.false69.i.i_crit_edge
  %54 = ptrtoint ptr %arrayidx18.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx18.i.i, align 8
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %add74.i.i = add i32 %57, 7690
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add74.i.i, i32 noundef %or44.i.i, i32 noundef 0) #13
  br label %gfx_v10_0_update_gfx_clock_gating.exit

gfx_v10_0_update_gfx_clock_gating.exit:           ; preds = %cond.false69.i.i, %cond.true59.i.i, %if.then22.i.gfx_v10_0_update_gfx_clock_gating.exit_crit_edge, %if.end20.i.gfx_v10_0_update_gfx_clock_gating.exit_crit_edge
  tail call void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef %handle) #13
  br label %cleanup

cleanup:                                          ; preds = %gfx_v10_0_update_gfx_clock_gating.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_set_powergating_state(ptr noundef %handle, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp = icmp eq i32 %state, 0
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.128)
  switch i32 %3, label %if.end.cleanup_crit_edge [
    i32 655626, label %if.end.cleanup.sink.split_crit_edge
    i32 655617, label %if.end.cleanup.sink.split_crit_edge13
    i32 655618, label %if.end.cleanup.sink.split_crit_edge14
    i32 656128, label %if.end.cleanup.sink.split_crit_edge15
    i32 656130, label %if.end.cleanup.sink.split_crit_edge16
    i32 656132, label %if.end.cleanup.sink.split_crit_edge17
    i32 656133, label %if.end.cleanup.sink.split_crit_edge18
    i32 656129, label %if.end.sw.bb3_crit_edge
    i32 656131, label %if.end.sw.bb3_crit_edge19
  ]

if.end.sw.bb3_crit_edge19:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

if.end.sw.bb3_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb3

if.end.cleanup.sink.split_crit_edge18:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge17:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge16:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge15:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge14:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge13:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.sink.split

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup.sink.split

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb3:                                           ; preds = %if.end.sw.bb3_crit_edge, %if.end.sw.bb3_crit_edge19
  tail call void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef %handle) #13
  %5 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %virt, align 8
  %and.i.i = and i32 %6, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %sw.bb3.cond.false.i.i_crit_edge, label %land.lhs.true.i.i

sw.bb3.cond.false.i.i_crit_edge:                  ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i

land.lhs.true.i.i:                                ; preds = %sw.bb3
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %7 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %funcs.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %8, null
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.cond.false.i.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.cond.false.i.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %sriov_rreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %8, i32 0, i32 13
  %9 = ptrtoint ptr %sriov_rreg.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %sriov_rreg.i.i, align 4
  %tobool6.not.i.i = icmp eq ptr %10, null
  br i1 %tobool6.not.i.i, label %land.lhs.true2.i.i.cond.false.i.i_crit_edge, label %cond.true.i.i

land.lhs.true2.i.i.cond.false.i.i_crit_edge:      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx12.i.i = getelementptr i32, ptr %12, i32 1
  %13 = ptrtoint ptr %arrayidx12.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx12.i.i, align 4
  %add.i.i = add i32 %14, 19523
  %call.i.i = tail call i32 %10(ptr noundef %handle, i32 noundef %add.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %land.lhs.true2.i.i.cond.false.i.i_crit_edge, %land.lhs.true.i.i.cond.false.i.i_crit_edge, %sw.bb3.cond.false.i.i_crit_edge
  %arrayidx14.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %15 = ptrtoint ptr %arrayidx14.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx14.i.i, align 8
  %arrayidx16.i.i = getelementptr i32, ptr %16, i32 1
  %17 = ptrtoint ptr %arrayidx16.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx16.i.i, align 4
  %add17.i.i = add i32 %18, 19523
  %call18.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17.i.i, i32 noundef 0) #13
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call.i.i, %cond.true.i.i ], [ %call18.i.i, %cond.false.i.i ]
  br i1 %cmp, label %land.lhs.true20.i.i, label %cond.end.i.i.if.else.i.i_crit_edge

cond.end.i.i.if.else.i.i_crit_edge:               ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i

land.lhs.true20.i.i:                              ; preds = %cond.end.i.i
  %pg_flags.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 100
  %19 = ptrtoint ptr %pg_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pg_flags.i.i, align 4
  %and21.i.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i)
  %tobool22.not.i.i = icmp eq i32 %and21.i.i, 0
  br i1 %tobool22.not.i.i, label %land.lhs.true20.i.i.if.else.i.i_crit_edge, label %if.then.i.i

land.lhs.true20.i.i.if.else.i.i_crit_edge:        ; preds = %land.lhs.true20.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i

if.then.i.i:                                      ; preds = %land.lhs.true20.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %or.i.i = or i32 %cond.i.i, 1
  br label %if.end.i.i

if.else.i.i:                                      ; preds = %land.lhs.true20.i.i.if.else.i.i_crit_edge, %cond.end.i.i.if.else.i.i_crit_edge
  %and23.i.i = and i32 %cond.i.i, -2
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then.i.i
  %data.0.i.i = phi i32 [ %or.i.i, %if.then.i.i ], [ %and23.i.i, %if.else.i.i ]
  %21 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %virt, align 8
  %and26.i.i = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i.i)
  %tobool27.not.i.i = icmp eq i32 %and26.i.i, 0
  br i1 %tobool27.not.i.i, label %if.end.i.i.cond.false48.i.i_crit_edge, label %land.lhs.true28.i.i

if.end.i.i.cond.false48.i.i_crit_edge:            ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48.i.i

land.lhs.true28.i.i:                              ; preds = %if.end.i.i
  %funcs31.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %23 = ptrtoint ptr %funcs31.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %funcs31.i.i, align 4
  %tobool32.not.i.i = icmp eq ptr %24, null
  br i1 %tobool32.not.i.i, label %land.lhs.true28.i.i.cond.false48.i.i_crit_edge, label %land.lhs.true33.i.i

land.lhs.true28.i.i.cond.false48.i.i_crit_edge:   ; preds = %land.lhs.true28.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48.i.i

land.lhs.true33.i.i:                              ; preds = %land.lhs.true28.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %24, i32 0, i32 12
  %25 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool37.not.i.i = icmp eq ptr %26, null
  br i1 %tobool37.not.i.i, label %land.lhs.true33.i.i.cond.false48.i.i_crit_edge, label %cond.true38.i.i

land.lhs.true33.i.i.cond.false48.i.i_crit_edge:   ; preds = %land.lhs.true33.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48.i.i

cond.true38.i.i:                                  ; preds = %land.lhs.true33.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx44.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %27 = ptrtoint ptr %arrayidx44.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx44.i.i, align 8
  %arrayidx46.i.i = getelementptr i32, ptr %28, i32 1
  %29 = ptrtoint ptr %arrayidx46.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx46.i.i, align 4
  %add47.i.i = add i32 %30, 19523
  tail call void %26(ptr noundef %handle, i32 noundef %add47.i.i, i32 noundef %data.0.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end54.i.i

cond.false48.i.i:                                 ; preds = %land.lhs.true33.i.i.cond.false48.i.i_crit_edge, %land.lhs.true28.i.i.cond.false48.i.i_crit_edge, %if.end.i.i.cond.false48.i.i_crit_edge
  %arrayidx50.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %31 = ptrtoint ptr %arrayidx50.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx50.i.i, align 8
  %arrayidx52.i.i = getelementptr i32, ptr %32, i32 1
  %33 = ptrtoint ptr %arrayidx52.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx52.i.i, align 4
  %add53.i.i = add i32 %34, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add53.i.i, i32 noundef %data.0.i.i, i32 noundef 0) #13
  br label %cond.end54.i.i

cond.end54.i.i:                                   ; preds = %cond.false48.i.i, %cond.true38.i.i
  br i1 %cmp, label %land.lhs.true56.i.i, label %cond.end54.i.i.gfx_v10_cntl_pg.exit_crit_edge

cond.end54.i.i.gfx_v10_cntl_pg.exit_crit_edge:    ; preds = %cond.end54.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_cntl_pg.exit

land.lhs.true56.i.i:                              ; preds = %cond.end54.i.i
  %pg_flags57.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 100
  %35 = ptrtoint ptr %pg_flags57.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pg_flags57.i.i, align 4
  %and58.i.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58.i.i)
  %tobool59.not.i.i = icmp eq i32 %and58.i.i, 0
  br i1 %tobool59.not.i.i, label %land.lhs.true56.i.i.gfx_v10_cntl_pg.exit_crit_edge, label %if.then60.i.i

land.lhs.true56.i.i.gfx_v10_cntl_pg.exit_crit_edge: ; preds = %land.lhs.true56.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_cntl_pg.exit

if.then60.i.i:                                    ; preds = %land.lhs.true56.i.i
  %37 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx, align 4
  %39 = zext i32 %38 to i64
  call void @__sanitizer_cov_trace_switch(i64 %39, ptr @__sancov_gen_cov_switch_values.129)
  switch i32 %38, label %if.then60.i.i.gfx_v10_cntl_pg.exit_crit_edge [
    i32 656129, label %if.then60.i.i.sw.bb.i.i_crit_edge
    i32 656131, label %if.then60.i.i.sw.bb.i.i_crit_edge20
  ]

if.then60.i.i.sw.bb.i.i_crit_edge20:              ; preds = %if.then60.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i.i

if.then60.i.i.sw.bb.i.i_crit_edge:                ; preds = %if.then60.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i.i

if.then60.i.i.gfx_v10_cntl_pg.exit_crit_edge:     ; preds = %if.then60.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_cntl_pg.exit

sw.bb.i.i:                                        ; preds = %if.then60.i.i.sw.bb.i.i_crit_edge, %if.then60.i.i.sw.bb.i.i_crit_edge20
  %40 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %virt, align 8
  %and65.i.i = and i32 %41, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65.i.i)
  %tobool66.not.i.i = icmp eq i32 %and65.i.i, 0
  br i1 %tobool66.not.i.i, label %sw.bb.i.i.cond.false88.i.i_crit_edge, label %land.lhs.true67.i.i

sw.bb.i.i.cond.false88.i.i_crit_edge:             ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88.i.i

land.lhs.true67.i.i:                              ; preds = %sw.bb.i.i
  %funcs70.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %42 = ptrtoint ptr %funcs70.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %funcs70.i.i, align 4
  %tobool71.not.i.i = icmp eq ptr %43, null
  br i1 %tobool71.not.i.i, label %land.lhs.true67.i.i.cond.false88.i.i_crit_edge, label %land.lhs.true72.i.i

land.lhs.true67.i.i.cond.false88.i.i_crit_edge:   ; preds = %land.lhs.true67.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88.i.i

land.lhs.true72.i.i:                              ; preds = %land.lhs.true67.i.i
  %sriov_wreg76.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %43, i32 0, i32 12
  %44 = ptrtoint ptr %sriov_wreg76.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %sriov_wreg76.i.i, align 4
  %tobool77.not.i.i = icmp eq ptr %45, null
  br i1 %tobool77.not.i.i, label %land.lhs.true72.i.i.cond.false88.i.i_crit_edge, label %cond.true78.i.i

land.lhs.true72.i.i.cond.false88.i.i_crit_edge:   ; preds = %land.lhs.true72.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88.i.i

cond.true78.i.i:                                  ; preds = %land.lhs.true72.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx84.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %46 = ptrtoint ptr %arrayidx84.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx84.i.i, align 8
  %arrayidx86.i.i = getelementptr i32, ptr %47, i32 1
  %48 = ptrtoint ptr %arrayidx86.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx86.i.i, align 4
  %add87.i.i = add i32 %49, 19576
  tail call void %45(ptr noundef %handle, i32 noundef %add87.i.i, i32 noundef 20000, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_cntl_pg.exit

cond.false88.i.i:                                 ; preds = %land.lhs.true72.i.i.cond.false88.i.i_crit_edge, %land.lhs.true67.i.i.cond.false88.i.i_crit_edge, %sw.bb.i.i.cond.false88.i.i_crit_edge
  %arrayidx90.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %50 = ptrtoint ptr %arrayidx90.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx90.i.i, align 8
  %arrayidx92.i.i = getelementptr i32, ptr %51, i32 1
  %52 = ptrtoint ptr %arrayidx92.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx92.i.i, align 4
  %add93.i.i = add i32 %53, 19576
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add93.i.i, i32 noundef 20000, i32 noundef 0) #13
  br label %gfx_v10_cntl_pg.exit

gfx_v10_cntl_pg.exit:                             ; preds = %cond.false88.i.i, %cond.true78.i.i, %if.then60.i.i.gfx_v10_cntl_pg.exit_crit_edge, %land.lhs.true56.i.i.gfx_v10_cntl_pg.exit_crit_edge, %cond.end54.i.i.gfx_v10_cntl_pg.exit_crit_edge
  tail call void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef %handle) #13
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %gfx_v10_cntl_pg.exit, %if.end.cleanup.sink.split_crit_edge, %if.end.cleanup.sink.split_crit_edge13, %if.end.cleanup.sink.split_crit_edge14, %if.end.cleanup.sink.split_crit_edge15, %if.end.cleanup.sink.split_crit_edge16, %if.end.cleanup.sink.split_crit_edge17, %if.end.cleanup.sink.split_crit_edge18
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %handle, i1 noundef zeroext %cmp) #13
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_get_clockgating_state(ptr noundef %handle, ptr nocapture noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 8
  %arrayidx2 = getelementptr i32, ptr %1, i32 1
  %2 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx2, align 4
  %add = add i32 %3, 19528
  %call = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add) #13
  %and = and i32 %call, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %or = or i32 %5, -2147483648
  store i32 %or, ptr %flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx6 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx6, align 4
  %add7 = add i32 %9, 19528
  %call8 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add7) #13
  %and9 = and i32 %call8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.then11, label %if.end.if.end13_crit_edge

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end13

if.then11:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %or12 = or i32 %11, 1
  store i32 %or12, ptr %flags, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end.if.end13_crit_edge
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 8
  %arrayidx17 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx17, align 4
  %add18 = add i32 %15, 19529
  %call19 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add18) #13
  %and20 = and i32 %call19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.end13.if.end24_crit_edge, label %if.then22

if.end13.if.end24_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end24

if.then22:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags, align 4
  %or23 = or i32 %17, 4
  store i32 %or23, ptr %flags, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end13.if.end24_crit_edge
  %and25 = and i32 %call19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %if.end24.if.end29_crit_edge, label %if.then27

if.end24.if.end29_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end29

if.then27:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 4
  %or28 = or i32 %19, 8
  store i32 %or28, ptr %flags, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end24.if.end29_crit_edge
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 8
  %arrayidx33 = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx33, align 4
  %add34 = add i32 %23, 19462
  %call35 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add34) #13
  %and36 = and i32 %call35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %if.end29.if.end40_crit_edge, label %if.then38

if.end29.if.end40_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end40

if.then38:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #15
  %24 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags, align 4
  %or39 = or i32 %25, 130
  store i32 %or39, ptr %flags, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.end29.if.end40_crit_edge
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %add45 = add i32 %29, 7705
  %call46 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add45) #13
  %and47 = and i32 %call46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %if.end40.if.end51_crit_edge, label %if.then49

if.end40.if.end51_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end51

if.then49:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #15
  %30 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags, align 4
  %or50 = or i32 %31, 66
  store i32 %or50, ptr %flags, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %if.end40.if.end51_crit_edge
  %32 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx, align 8
  %arrayidx55 = getelementptr i32, ptr %33, i32 1
  %34 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx55, align 4
  %add56 = add i32 %35, 19653
  %call57 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add56) #13
  %and58 = and i32 %call57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %if.end51.if.end62_crit_edge, label %if.then60

if.end51.if.end62_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end62

if.then60:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #15
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags, align 4
  %or61 = or i32 %37, 1048576
  store i32 %or61, ptr %flags, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.then60, %if.end51.if.end62_crit_edge
  %and63 = and i32 %call57, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63)
  %tobool64.not = icmp eq i32 %and63, 0
  br i1 %tobool64.not, label %if.end62.if.end67_crit_edge, label %if.then65

if.end62.if.end67_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end67

if.then65:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #15
  %38 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flags, align 4
  %or66 = or i32 %39, 2097152
  store i32 %or66, ptr %flags, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.end62.if.end67_crit_edge
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_get_num_kcq(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx10_kiq_set_resources(ptr noundef %kiq_ring, i64 noundef %queue_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073307648, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i12 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i12, label %if.then.i13, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit23_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit23_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit23

if.then.i13:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit23

amdgpu_ring_write.exit23:                         ; preds = %if.then.i13, %amdgpu_ring_write.exit.amdgpu_ring_write.exit23_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i16 = add i64 %18, 1
  store i64 %inc.i16, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i18 = and i32 %20, %21
  %arrayidx.i19 = getelementptr i32, ptr %16, i32 %idxprom.i18
  %22 = ptrtoint ptr %arrayidx.i19 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %arrayidx.i19, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i21 = and i64 %25, %24
  store i64 %and3.i21, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i22 = add i32 %27, -1
  store i32 %dec.i22, ptr %count_dw.i, align 8
  %conv = trunc i64 %queue_mask to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i22)
  %cmp.i25 = icmp slt i32 %dec.i22, 1
  br i1 %cmp.i25, label %if.then.i26, label %amdgpu_ring_write.exit23.amdgpu_ring_write.exit36_crit_edge

amdgpu_ring_write.exit23.amdgpu_ring_write.exit36_crit_edge: ; preds = %amdgpu_ring_write.exit23
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit36

if.then.i26:                                      ; preds = %amdgpu_ring_write.exit23
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit36

amdgpu_ring_write.exit36:                         ; preds = %if.then.i26, %amdgpu_ring_write.exit23.amdgpu_ring_write.exit36_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i29 = add i64 %31, 1
  store i64 %inc.i29, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i31 = and i32 %33, %34
  %arrayidx.i32 = getelementptr i32, ptr %29, i32 %idxprom.i31
  %35 = ptrtoint ptr %arrayidx.i32 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %conv, ptr %arrayidx.i32, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i34 = and i64 %38, %37
  store i64 %and3.i34, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i35 = add i32 %40, -1
  store i32 %dec.i35, ptr %count_dw.i, align 8
  %shr = lshr i64 %queue_mask, 32
  %conv2 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i35)
  %cmp.i38 = icmp slt i32 %dec.i35, 1
  br i1 %cmp.i38, label %if.then.i39, label %amdgpu_ring_write.exit36.amdgpu_ring_write.exit49_crit_edge

amdgpu_ring_write.exit36.amdgpu_ring_write.exit49_crit_edge: ; preds = %amdgpu_ring_write.exit36
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit49

if.then.i39:                                      ; preds = %amdgpu_ring_write.exit36
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit49

amdgpu_ring_write.exit49:                         ; preds = %if.then.i39, %amdgpu_ring_write.exit36.amdgpu_ring_write.exit49_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i42 = add i64 %44, 1
  store i64 %inc.i42, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i44 = and i32 %46, %47
  %arrayidx.i45 = getelementptr i32, ptr %42, i32 %idxprom.i44
  %48 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %conv2, ptr %arrayidx.i45, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i47 = and i64 %51, %50
  store i64 %and3.i47, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i48 = add i32 %53, -1
  store i32 %dec.i48, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i48)
  %cmp.i51 = icmp slt i32 %dec.i48, 1
  br i1 %cmp.i51, label %if.then.i52, label %amdgpu_ring_write.exit49.amdgpu_ring_write.exit62_crit_edge

amdgpu_ring_write.exit49.amdgpu_ring_write.exit62_crit_edge: ; preds = %amdgpu_ring_write.exit49
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit62

if.then.i52:                                      ; preds = %amdgpu_ring_write.exit49
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit62

amdgpu_ring_write.exit62:                         ; preds = %if.then.i52, %amdgpu_ring_write.exit49.amdgpu_ring_write.exit62_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i55 = add i64 %57, 1
  store i64 %inc.i55, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i57 = and i32 %59, %60
  %arrayidx.i58 = getelementptr i32, ptr %55, i32 %idxprom.i57
  %61 = ptrtoint ptr %arrayidx.i58 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 0, ptr %arrayidx.i58, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i60 = and i64 %64, %63
  store i64 %and3.i60, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i61 = add i32 %66, -1
  store i32 %dec.i61, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i61)
  %cmp.i64 = icmp slt i32 %dec.i61, 1
  br i1 %cmp.i64, label %if.then.i65, label %amdgpu_ring_write.exit62.amdgpu_ring_write.exit75_crit_edge

amdgpu_ring_write.exit62.amdgpu_ring_write.exit75_crit_edge: ; preds = %amdgpu_ring_write.exit62
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit75

if.then.i65:                                      ; preds = %amdgpu_ring_write.exit62
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit75

amdgpu_ring_write.exit75:                         ; preds = %if.then.i65, %amdgpu_ring_write.exit62.amdgpu_ring_write.exit75_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i68 = add i64 %70, 1
  store i64 %inc.i68, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i70 = and i32 %72, %73
  %arrayidx.i71 = getelementptr i32, ptr %68, i32 %idxprom.i70
  %74 = ptrtoint ptr %arrayidx.i71 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 0, ptr %arrayidx.i71, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i73 = and i64 %77, %76
  store i64 %and3.i73, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i74 = add i32 %79, -1
  store i32 %dec.i74, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i74)
  %cmp.i77 = icmp slt i32 %dec.i74, 1
  br i1 %cmp.i77, label %if.then.i78, label %amdgpu_ring_write.exit75.amdgpu_ring_write.exit88_crit_edge

amdgpu_ring_write.exit75.amdgpu_ring_write.exit88_crit_edge: ; preds = %amdgpu_ring_write.exit75
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit88

if.then.i78:                                      ; preds = %amdgpu_ring_write.exit75
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit88

amdgpu_ring_write.exit88:                         ; preds = %if.then.i78, %amdgpu_ring_write.exit75.amdgpu_ring_write.exit88_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i81 = add i64 %83, 1
  store i64 %inc.i81, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i83 = and i32 %85, %86
  %arrayidx.i84 = getelementptr i32, ptr %81, i32 %idxprom.i83
  %87 = ptrtoint ptr %arrayidx.i84 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 0, ptr %arrayidx.i84, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i86 = and i64 %90, %89
  store i64 %and3.i86, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i87 = add i32 %92, -1
  store i32 %dec.i87, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i87)
  %cmp.i90 = icmp slt i32 %dec.i87, 1
  br i1 %cmp.i90, label %if.then.i91, label %amdgpu_ring_write.exit88.amdgpu_ring_write.exit101_crit_edge

amdgpu_ring_write.exit88.amdgpu_ring_write.exit101_crit_edge: ; preds = %amdgpu_ring_write.exit88
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit101

if.then.i91:                                      ; preds = %amdgpu_ring_write.exit88
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit101

amdgpu_ring_write.exit101:                        ; preds = %if.then.i91, %amdgpu_ring_write.exit88.amdgpu_ring_write.exit101_crit_edge
  %93 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %ring1.i, align 4
  %95 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %wptr.i, align 8
  %inc.i94 = add i64 %96, 1
  store i64 %inc.i94, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %buf_mask.i, align 8
  %99 = trunc i64 %96 to i32
  %idxprom.i96 = and i32 %98, %99
  %arrayidx.i97 = getelementptr i32, ptr %94, i32 %idxprom.i96
  %100 = ptrtoint ptr %arrayidx.i97 to i32
  call void @__asan_store4_noabort(i32 %100)
  store volatile i32 0, ptr %arrayidx.i97, align 4
  %101 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %ptr_mask.i, align 8
  %103 = load i64, ptr %wptr.i, align 8
  %and3.i99 = and i64 %103, %102
  store i64 %and3.i99, ptr %wptr.i, align 8
  %104 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %count_dw.i, align 8
  %dec.i100 = add i32 %105, -1
  store i32 %dec.i100, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx10_kiq_map_queues(ptr noundef %kiq_ring, ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %kiq_ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kiq_ring, align 8
  %mqd_obj = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 19
  %2 = ptrtoint ptr %mqd_obj to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mqd_obj, align 4
  %call = tail call i64 @amdgpu_bo_gpu_offset(ptr noundef %3) #13
  %gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %4 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %gpu_addr, align 8
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %mul = shl i32 %7, 2
  %conv = zext i32 %mul to i64
  %add = add i64 %5, %conv
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp = icmp eq i32 %11, 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %12 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp.i = icmp slt i32 %13, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %14 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %16 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %17, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %18 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %buf_mask.i, align 8
  %20 = trunc i64 %17 to i32
  %idxprom.i = and i32 %19, %20
  %arrayidx.i = getelementptr i32, ptr %15, i32 %idxprom.i
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile i32 -1073372672, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %22 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %ptr_mask.i, align 8
  %24 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %24, %23
  store i64 %and3.i, ptr %wptr.i, align 8
  %25 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %26, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %queue = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 18
  %27 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %queue, align 8
  %shl = shl i32 %28, 13
  %pipe = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 17
  %29 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %pipe, align 4
  %shl3 = shl i32 %30, 16
  %me = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 16
  %31 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %me, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %32)
  %cmp5.not = icmp eq i32 %32, 1
  %shl8 = select i1 %cmp5.not, i32 0, i32 262144
  %or4 = select i1 %cmp, i32 805306368, i32 536870912
  %or9 = or i32 %or4, %shl
  %or13 = or i32 %or9, %shl3
  %or14 = or i32 %or13, %shl8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i40 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i40, label %if.then.i41, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit51_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit51_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit51

if.then.i41:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit51

amdgpu_ring_write.exit51:                         ; preds = %if.then.i41, %amdgpu_ring_write.exit.amdgpu_ring_write.exit51_crit_edge
  %33 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ring1.i, align 4
  %35 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %wptr.i, align 8
  %inc.i44 = add i64 %36, 1
  store i64 %inc.i44, ptr %wptr.i, align 8
  %37 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %buf_mask.i, align 8
  %39 = trunc i64 %36 to i32
  %idxprom.i46 = and i32 %38, %39
  %arrayidx.i47 = getelementptr i32, ptr %34, i32 %idxprom.i46
  %40 = ptrtoint ptr %arrayidx.i47 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile i32 %or14, ptr %arrayidx.i47, align 4
  %41 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %ptr_mask.i, align 8
  %43 = load i64, ptr %wptr.i, align 8
  %and3.i49 = and i64 %43, %42
  store i64 %and3.i49, ptr %wptr.i, align 8
  %44 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %count_dw.i, align 8
  %dec.i50 = add i32 %45, -1
  store i32 %dec.i50, ptr %count_dw.i, align 8
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %46 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %doorbell_index, align 8
  %shl15 = shl i32 %47, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i50)
  %cmp.i53 = icmp slt i32 %dec.i50, 1
  br i1 %cmp.i53, label %if.then.i54, label %amdgpu_ring_write.exit51.amdgpu_ring_write.exit64_crit_edge

amdgpu_ring_write.exit51.amdgpu_ring_write.exit64_crit_edge: ; preds = %amdgpu_ring_write.exit51
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit64

if.then.i54:                                      ; preds = %amdgpu_ring_write.exit51
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit64

amdgpu_ring_write.exit64:                         ; preds = %if.then.i54, %amdgpu_ring_write.exit51.amdgpu_ring_write.exit64_crit_edge
  %48 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ring1.i, align 4
  %50 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %wptr.i, align 8
  %inc.i57 = add i64 %51, 1
  store i64 %inc.i57, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %buf_mask.i, align 8
  %54 = trunc i64 %51 to i32
  %idxprom.i59 = and i32 %53, %54
  %arrayidx.i60 = getelementptr i32, ptr %49, i32 %idxprom.i59
  %55 = ptrtoint ptr %arrayidx.i60 to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile i32 %shl15, ptr %arrayidx.i60, align 4
  %56 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %ptr_mask.i, align 8
  %58 = load i64, ptr %wptr.i, align 8
  %and3.i62 = and i64 %58, %57
  store i64 %and3.i62, ptr %wptr.i, align 8
  %59 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %count_dw.i, align 8
  %dec.i63 = add i32 %60, -1
  store i32 %dec.i63, ptr %count_dw.i, align 8
  %conv16 = trunc i64 %call to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i63)
  %cmp.i66 = icmp slt i32 %dec.i63, 1
  br i1 %cmp.i66, label %if.then.i67, label %amdgpu_ring_write.exit64.amdgpu_ring_write.exit77_crit_edge

amdgpu_ring_write.exit64.amdgpu_ring_write.exit77_crit_edge: ; preds = %amdgpu_ring_write.exit64
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit77

if.then.i67:                                      ; preds = %amdgpu_ring_write.exit64
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit77

amdgpu_ring_write.exit77:                         ; preds = %if.then.i67, %amdgpu_ring_write.exit64.amdgpu_ring_write.exit77_crit_edge
  %61 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ring1.i, align 4
  %63 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %wptr.i, align 8
  %inc.i70 = add i64 %64, 1
  store i64 %inc.i70, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %buf_mask.i, align 8
  %67 = trunc i64 %64 to i32
  %idxprom.i72 = and i32 %66, %67
  %arrayidx.i73 = getelementptr i32, ptr %62, i32 %idxprom.i72
  %68 = ptrtoint ptr %arrayidx.i73 to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile i32 %conv16, ptr %arrayidx.i73, align 4
  %69 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %ptr_mask.i, align 8
  %71 = load i64, ptr %wptr.i, align 8
  %and3.i75 = and i64 %71, %70
  store i64 %and3.i75, ptr %wptr.i, align 8
  %72 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %count_dw.i, align 8
  %dec.i76 = add i32 %73, -1
  store i32 %dec.i76, ptr %count_dw.i, align 8
  %shr = lshr i64 %call, 32
  %conv18 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i76)
  %cmp.i79 = icmp slt i32 %dec.i76, 1
  br i1 %cmp.i79, label %if.then.i80, label %amdgpu_ring_write.exit77.amdgpu_ring_write.exit90_crit_edge

amdgpu_ring_write.exit77.amdgpu_ring_write.exit90_crit_edge: ; preds = %amdgpu_ring_write.exit77
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit90

if.then.i80:                                      ; preds = %amdgpu_ring_write.exit77
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit90

amdgpu_ring_write.exit90:                         ; preds = %if.then.i80, %amdgpu_ring_write.exit77.amdgpu_ring_write.exit90_crit_edge
  %74 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %ring1.i, align 4
  %76 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %wptr.i, align 8
  %inc.i83 = add i64 %77, 1
  store i64 %inc.i83, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %buf_mask.i, align 8
  %80 = trunc i64 %77 to i32
  %idxprom.i85 = and i32 %79, %80
  %arrayidx.i86 = getelementptr i32, ptr %75, i32 %idxprom.i85
  %81 = ptrtoint ptr %arrayidx.i86 to i32
  call void @__asan_store4_noabort(i32 %81)
  store volatile i32 %conv18, ptr %arrayidx.i86, align 4
  %82 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %ptr_mask.i, align 8
  %84 = load i64, ptr %wptr.i, align 8
  %and3.i88 = and i64 %84, %83
  store i64 %and3.i88, ptr %wptr.i, align 8
  %85 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %count_dw.i, align 8
  %dec.i89 = add i32 %86, -1
  store i32 %dec.i89, ptr %count_dw.i, align 8
  %conv20 = trunc i64 %add to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i89)
  %cmp.i92 = icmp slt i32 %dec.i89, 1
  br i1 %cmp.i92, label %if.then.i93, label %amdgpu_ring_write.exit90.amdgpu_ring_write.exit103_crit_edge

amdgpu_ring_write.exit90.amdgpu_ring_write.exit103_crit_edge: ; preds = %amdgpu_ring_write.exit90
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit103

if.then.i93:                                      ; preds = %amdgpu_ring_write.exit90
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit103

amdgpu_ring_write.exit103:                        ; preds = %if.then.i93, %amdgpu_ring_write.exit90.amdgpu_ring_write.exit103_crit_edge
  %87 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ring1.i, align 4
  %89 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %wptr.i, align 8
  %inc.i96 = add i64 %90, 1
  store i64 %inc.i96, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %buf_mask.i, align 8
  %93 = trunc i64 %90 to i32
  %idxprom.i98 = and i32 %92, %93
  %arrayidx.i99 = getelementptr i32, ptr %88, i32 %idxprom.i98
  %94 = ptrtoint ptr %arrayidx.i99 to i32
  call void @__asan_store4_noabort(i32 %94)
  store volatile i32 %conv20, ptr %arrayidx.i99, align 4
  %95 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %ptr_mask.i, align 8
  %97 = load i64, ptr %wptr.i, align 8
  %and3.i101 = and i64 %97, %96
  store i64 %and3.i101, ptr %wptr.i, align 8
  %98 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %count_dw.i, align 8
  %dec.i102 = add i32 %99, -1
  store i32 %dec.i102, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i102)
  %cmp.i105 = icmp slt i32 %dec.i102, 1
  br i1 %cmp.i105, label %if.then.i106, label %amdgpu_ring_write.exit103.amdgpu_ring_write.exit116_crit_edge

amdgpu_ring_write.exit103.amdgpu_ring_write.exit116_crit_edge: ; preds = %amdgpu_ring_write.exit103
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit116

if.then.i106:                                     ; preds = %amdgpu_ring_write.exit103
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit116

amdgpu_ring_write.exit116:                        ; preds = %if.then.i106, %amdgpu_ring_write.exit103.amdgpu_ring_write.exit116_crit_edge
  %shr21 = lshr i64 %add, 32
  %conv23 = trunc i64 %shr21 to i32
  %100 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %ring1.i, align 4
  %102 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %wptr.i, align 8
  %inc.i109 = add i64 %103, 1
  store i64 %inc.i109, ptr %wptr.i, align 8
  %104 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %buf_mask.i, align 8
  %106 = trunc i64 %103 to i32
  %idxprom.i111 = and i32 %105, %106
  %arrayidx.i112 = getelementptr i32, ptr %101, i32 %idxprom.i111
  %107 = ptrtoint ptr %arrayidx.i112 to i32
  call void @__asan_store4_noabort(i32 %107)
  store volatile i32 %conv23, ptr %arrayidx.i112, align 4
  %108 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %108)
  %109 = load i64, ptr %ptr_mask.i, align 8
  %110 = load i64, ptr %wptr.i, align 8
  %and3.i114 = and i64 %110, %109
  store i64 %and3.i114, ptr %wptr.i, align 8
  %111 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %count_dw.i, align 8
  %dec.i115 = add i32 %112, -1
  store i32 %dec.i115, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx10_kiq_unmap_queues(ptr noundef %kiq_ring, ptr nocapture noundef readonly %ring, i32 noundef %action, i64 noundef %gpu_addr, i64 noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %cond = select i1 %cmp, i32 268435456, i32 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %4 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp slt i32 %5, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %6 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %9, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %10 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buf_mask.i, align 8
  %12 = trunc i64 %9 to i32
  %idxprom.i = and i32 %11, %12
  %arrayidx.i = getelementptr i32, ptr %7, i32 %idxprom.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 -1073437952, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %14 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %ptr_mask.i, align 8
  %16 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %16, %15
  store i64 %and3.i, ptr %wptr.i, align 8
  %17 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %or2 = or i32 %cond, %action
  %or3 = or i32 %or2, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i21 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i21, label %if.then.i22, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit32_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit32_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit32

if.then.i22:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit32

amdgpu_ring_write.exit32:                         ; preds = %if.then.i22, %amdgpu_ring_write.exit.amdgpu_ring_write.exit32_crit_edge
  %19 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ring1.i, align 4
  %21 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %wptr.i, align 8
  %inc.i25 = add i64 %22, 1
  store i64 %inc.i25, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %buf_mask.i, align 8
  %25 = trunc i64 %22 to i32
  %idxprom.i27 = and i32 %24, %25
  %arrayidx.i28 = getelementptr i32, ptr %20, i32 %idxprom.i27
  %26 = ptrtoint ptr %arrayidx.i28 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 %or3, ptr %arrayidx.i28, align 4
  %27 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ptr_mask.i, align 8
  %29 = load i64, ptr %wptr.i, align 8
  %and3.i30 = and i64 %29, %28
  store i64 %and3.i30, ptr %wptr.i, align 8
  %30 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %count_dw.i, align 8
  %dec.i31 = add i32 %31, -1
  store i32 %dec.i31, ptr %count_dw.i, align 8
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %32 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %doorbell_index, align 8
  %shl4 = shl i32 %33, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i31)
  %cmp.i34 = icmp slt i32 %dec.i31, 1
  br i1 %cmp.i34, label %if.then.i35, label %amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge

amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge: ; preds = %amdgpu_ring_write.exit32
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit45

if.then.i35:                                      ; preds = %amdgpu_ring_write.exit32
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit45

amdgpu_ring_write.exit45:                         ; preds = %if.then.i35, %amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge
  %34 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ring1.i, align 4
  %36 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %wptr.i, align 8
  %inc.i38 = add i64 %37, 1
  store i64 %inc.i38, ptr %wptr.i, align 8
  %38 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %buf_mask.i, align 8
  %40 = trunc i64 %37 to i32
  %idxprom.i40 = and i32 %39, %40
  %arrayidx.i41 = getelementptr i32, ptr %35, i32 %idxprom.i40
  %41 = ptrtoint ptr %arrayidx.i41 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 %shl4, ptr %arrayidx.i41, align 4
  %42 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %ptr_mask.i, align 8
  %44 = load i64, ptr %wptr.i, align 8
  %and3.i43 = and i64 %44, %43
  store i64 %and3.i43, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %count_dw.i, align 8
  %dec.i44 = add i32 %46, -1
  store i32 %dec.i44, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %action)
  %cmp5 = icmp eq i32 %action, 3
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %amdgpu_ring_write.exit45
  %conv = trunc i64 %gpu_addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i47 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i47, label %if.then.i48, label %if.then.amdgpu_ring_write.exit58_crit_edge

if.then.amdgpu_ring_write.exit58_crit_edge:       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit58

if.then.i48:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit58

amdgpu_ring_write.exit58:                         ; preds = %if.then.i48, %if.then.amdgpu_ring_write.exit58_crit_edge
  %47 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ring1.i, align 4
  %49 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %wptr.i, align 8
  %inc.i51 = add i64 %50, 1
  store i64 %inc.i51, ptr %wptr.i, align 8
  %51 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %buf_mask.i, align 8
  %53 = trunc i64 %50 to i32
  %idxprom.i53 = and i32 %52, %53
  %arrayidx.i54 = getelementptr i32, ptr %48, i32 %idxprom.i53
  %54 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile i32 %conv, ptr %arrayidx.i54, align 4
  %55 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %ptr_mask.i, align 8
  %57 = load i64, ptr %wptr.i, align 8
  %and3.i56 = and i64 %57, %56
  store i64 %and3.i56, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %count_dw.i, align 8
  %dec.i57 = add i32 %59, -1
  store i32 %dec.i57, ptr %count_dw.i, align 8
  %shr = lshr i64 %gpu_addr, 32
  %conv7 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i57)
  %cmp.i60 = icmp slt i32 %dec.i57, 1
  br i1 %cmp.i60, label %if.then.i61, label %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge

amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge: ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit71

if.then.i61:                                      ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit71

amdgpu_ring_write.exit71:                         ; preds = %if.then.i61, %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge
  %60 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ring1.i, align 4
  %62 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %wptr.i, align 8
  %inc.i64 = add i64 %63, 1
  store i64 %inc.i64, ptr %wptr.i, align 8
  %64 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_mask.i, align 8
  %66 = trunc i64 %63 to i32
  %idxprom.i66 = and i32 %65, %66
  %arrayidx.i67 = getelementptr i32, ptr %61, i32 %idxprom.i66
  %67 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile i32 %conv7, ptr %arrayidx.i67, align 4
  %68 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %ptr_mask.i, align 8
  %70 = load i64, ptr %wptr.i, align 8
  %and3.i69 = and i64 %70, %69
  store i64 %and3.i69, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %count_dw.i, align 8
  %dec.i70 = add i32 %72, -1
  store i32 %dec.i70, ptr %count_dw.i, align 8
  %conv8 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i70)
  %cmp.i73 = icmp slt i32 %dec.i70, 1
  br i1 %cmp.i73, label %amdgpu_ring_write.exit71.if.end.sink.split_crit_edge, label %amdgpu_ring_write.exit71.if.end_crit_edge

amdgpu_ring_write.exit71.if.end_crit_edge:        ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

amdgpu_ring_write.exit71.if.end.sink.split_crit_edge: ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.sink.split

if.else:                                          ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i86 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i86, label %if.then.i87, label %if.else.amdgpu_ring_write.exit97_crit_edge

if.else.amdgpu_ring_write.exit97_crit_edge:       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit97

if.then.i87:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit97

amdgpu_ring_write.exit97:                         ; preds = %if.then.i87, %if.else.amdgpu_ring_write.exit97_crit_edge
  %73 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ring1.i, align 4
  %75 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %wptr.i, align 8
  %inc.i90 = add i64 %76, 1
  store i64 %inc.i90, ptr %wptr.i, align 8
  %77 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %buf_mask.i, align 8
  %79 = trunc i64 %76 to i32
  %idxprom.i92 = and i32 %78, %79
  %arrayidx.i93 = getelementptr i32, ptr %74, i32 %idxprom.i92
  %80 = ptrtoint ptr %arrayidx.i93 to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile i32 0, ptr %arrayidx.i93, align 4
  %81 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %ptr_mask.i, align 8
  %83 = load i64, ptr %wptr.i, align 8
  %and3.i95 = and i64 %83, %82
  store i64 %and3.i95, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %count_dw.i, align 8
  %dec.i96 = add i32 %85, -1
  store i32 %dec.i96, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i96)
  %cmp.i99 = icmp slt i32 %dec.i96, 1
  br i1 %cmp.i99, label %if.then.i100, label %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge

amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge: ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit110

if.then.i100:                                     ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit110

amdgpu_ring_write.exit110:                        ; preds = %if.then.i100, %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge
  %86 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %ring1.i, align 4
  %88 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %wptr.i, align 8
  %inc.i103 = add i64 %89, 1
  store i64 %inc.i103, ptr %wptr.i, align 8
  %90 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %buf_mask.i, align 8
  %92 = trunc i64 %89 to i32
  %idxprom.i105 = and i32 %91, %92
  %arrayidx.i106 = getelementptr i32, ptr %87, i32 %idxprom.i105
  %93 = ptrtoint ptr %arrayidx.i106 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile i32 0, ptr %arrayidx.i106, align 4
  %94 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %ptr_mask.i, align 8
  %96 = load i64, ptr %wptr.i, align 8
  %and3.i108 = and i64 %96, %95
  store i64 %and3.i108, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %count_dw.i, align 8
  %dec.i109 = add i32 %98, -1
  store i32 %dec.i109, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i109)
  %cmp.i112 = icmp slt i32 %dec.i109, 1
  br i1 %cmp.i112, label %amdgpu_ring_write.exit110.if.end.sink.split_crit_edge, label %amdgpu_ring_write.exit110.if.end_crit_edge

amdgpu_ring_write.exit110.if.end_crit_edge:       ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

amdgpu_ring_write.exit110.if.end.sink.split_crit_edge: ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.sink.split

if.end.sink.split:                                ; preds = %amdgpu_ring_write.exit110.if.end.sink.split_crit_edge, %amdgpu_ring_write.exit71.if.end.sink.split_crit_edge
  %.sink.ph = phi i32 [ %conv8, %amdgpu_ring_write.exit71.if.end.sink.split_crit_edge ], [ 0, %amdgpu_ring_write.exit110.if.end.sink.split_crit_edge ]
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %amdgpu_ring_write.exit110.if.end_crit_edge, %amdgpu_ring_write.exit71.if.end_crit_edge
  %.sink = phi i32 [ %conv8, %amdgpu_ring_write.exit71.if.end_crit_edge ], [ 0, %amdgpu_ring_write.exit110.if.end_crit_edge ], [ %.sink.ph, %if.end.sink.split ]
  %99 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %ring1.i, align 4
  %101 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %wptr.i, align 8
  %inc.i116 = add i64 %102, 1
  store i64 %inc.i116, ptr %wptr.i, align 8
  %103 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %buf_mask.i, align 8
  %105 = trunc i64 %102 to i32
  %idxprom.i118 = and i32 %104, %105
  %arrayidx.i119 = getelementptr i32, ptr %100, i32 %idxprom.i118
  %106 = ptrtoint ptr %arrayidx.i119 to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile i32 %.sink, ptr %arrayidx.i119, align 4
  %107 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %ptr_mask.i, align 8
  %109 = load i64, ptr %wptr.i, align 8
  %and3.i121 = and i64 %109, %108
  store i64 %and3.i121, ptr %wptr.i, align 8
  %110 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %storemerge.in = load i32, ptr %count_dw.i, align 8
  %storemerge = add i32 %storemerge.in, -1
  store i32 %storemerge, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx10_kiq_query_status(ptr noundef %kiq_ring, ptr nocapture noundef readonly %ring, i64 noundef %addr, i64 noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %cond = select i1 %cmp, i32 134217728, i32 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %4 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp slt i32 %5, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %6 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %9, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %10 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buf_mask.i, align 8
  %12 = trunc i64 %9 to i32
  %idxprom.i = and i32 %11, %12
  %arrayidx.i = getelementptr i32, ptr %7, i32 %idxprom.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 -1073372160, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %14 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %ptr_mask.i, align 8
  %16 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %16, %15
  store i64 %and3.i, ptr %wptr.i, align 8
  %17 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i19 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i19, label %if.then.i20, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit30

if.then.i20:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit30

amdgpu_ring_write.exit30:                         ; preds = %if.then.i20, %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge
  %19 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ring1.i, align 4
  %21 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %wptr.i, align 8
  %inc.i23 = add i64 %22, 1
  store i64 %inc.i23, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %buf_mask.i, align 8
  %25 = trunc i64 %22 to i32
  %idxprom.i25 = and i32 %24, %25
  %arrayidx.i26 = getelementptr i32, ptr %20, i32 %idxprom.i25
  %26 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 -2147483648, ptr %arrayidx.i26, align 4
  %27 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ptr_mask.i, align 8
  %29 = load i64, ptr %wptr.i, align 8
  %and3.i28 = and i64 %29, %28
  store i64 %and3.i28, ptr %wptr.i, align 8
  %30 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %count_dw.i, align 8
  %dec.i29 = add i32 %31, -1
  store i32 %dec.i29, ptr %count_dw.i, align 8
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %32 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %doorbell_index, align 8
  %shl = shl i32 %33, 2
  %or = or i32 %shl, %cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i29)
  %cmp.i32 = icmp slt i32 %dec.i29, 1
  br i1 %cmp.i32, label %if.then.i33, label %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge

amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge: ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit43

if.then.i33:                                      ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit43

amdgpu_ring_write.exit43:                         ; preds = %if.then.i33, %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge
  %34 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ring1.i, align 4
  %36 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %wptr.i, align 8
  %inc.i36 = add i64 %37, 1
  store i64 %inc.i36, ptr %wptr.i, align 8
  %38 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %buf_mask.i, align 8
  %40 = trunc i64 %37 to i32
  %idxprom.i38 = and i32 %39, %40
  %arrayidx.i39 = getelementptr i32, ptr %35, i32 %idxprom.i38
  %41 = ptrtoint ptr %arrayidx.i39 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 %or, ptr %arrayidx.i39, align 4
  %42 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %ptr_mask.i, align 8
  %44 = load i64, ptr %wptr.i, align 8
  %and3.i41 = and i64 %44, %43
  store i64 %and3.i41, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %count_dw.i, align 8
  %dec.i42 = add i32 %46, -1
  store i32 %dec.i42, ptr %count_dw.i, align 8
  %conv = trunc i64 %addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i42)
  %cmp.i45 = icmp slt i32 %dec.i42, 1
  br i1 %cmp.i45, label %if.then.i46, label %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge

amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge: ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit56

if.then.i46:                                      ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit56

amdgpu_ring_write.exit56:                         ; preds = %if.then.i46, %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge
  %47 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ring1.i, align 4
  %49 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %wptr.i, align 8
  %inc.i49 = add i64 %50, 1
  store i64 %inc.i49, ptr %wptr.i, align 8
  %51 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %buf_mask.i, align 8
  %53 = trunc i64 %50 to i32
  %idxprom.i51 = and i32 %52, %53
  %arrayidx.i52 = getelementptr i32, ptr %48, i32 %idxprom.i51
  %54 = ptrtoint ptr %arrayidx.i52 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile i32 %conv, ptr %arrayidx.i52, align 4
  %55 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %ptr_mask.i, align 8
  %57 = load i64, ptr %wptr.i, align 8
  %and3.i54 = and i64 %57, %56
  store i64 %and3.i54, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %count_dw.i, align 8
  %dec.i55 = add i32 %59, -1
  store i32 %dec.i55, ptr %count_dw.i, align 8
  %shr = lshr i64 %addr, 32
  %conv3 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i55)
  %cmp.i58 = icmp slt i32 %dec.i55, 1
  br i1 %cmp.i58, label %if.then.i59, label %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge

amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge: ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit69

if.then.i59:                                      ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit69

amdgpu_ring_write.exit69:                         ; preds = %if.then.i59, %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge
  %60 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ring1.i, align 4
  %62 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %wptr.i, align 8
  %inc.i62 = add i64 %63, 1
  store i64 %inc.i62, ptr %wptr.i, align 8
  %64 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_mask.i, align 8
  %66 = trunc i64 %63 to i32
  %idxprom.i64 = and i32 %65, %66
  %arrayidx.i65 = getelementptr i32, ptr %61, i32 %idxprom.i64
  %67 = ptrtoint ptr %arrayidx.i65 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile i32 %conv3, ptr %arrayidx.i65, align 4
  %68 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %ptr_mask.i, align 8
  %70 = load i64, ptr %wptr.i, align 8
  %and3.i67 = and i64 %70, %69
  store i64 %and3.i67, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %count_dw.i, align 8
  %dec.i68 = add i32 %72, -1
  store i32 %dec.i68, ptr %count_dw.i, align 8
  %conv5 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i68)
  %cmp.i71 = icmp slt i32 %dec.i68, 1
  br i1 %cmp.i71, label %if.then.i72, label %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge

amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge: ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit82

if.then.i72:                                      ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit82

amdgpu_ring_write.exit82:                         ; preds = %if.then.i72, %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge
  %73 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ring1.i, align 4
  %75 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %wptr.i, align 8
  %inc.i75 = add i64 %76, 1
  store i64 %inc.i75, ptr %wptr.i, align 8
  %77 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %buf_mask.i, align 8
  %79 = trunc i64 %76 to i32
  %idxprom.i77 = and i32 %78, %79
  %arrayidx.i78 = getelementptr i32, ptr %74, i32 %idxprom.i77
  %80 = ptrtoint ptr %arrayidx.i78 to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile i32 %conv5, ptr %arrayidx.i78, align 4
  %81 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %ptr_mask.i, align 8
  %83 = load i64, ptr %wptr.i, align 8
  %and3.i80 = and i64 %83, %82
  store i64 %and3.i80, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %count_dw.i, align 8
  %dec.i81 = add i32 %85, -1
  store i32 %dec.i81, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i81)
  %cmp.i84 = icmp slt i32 %dec.i81, 1
  br i1 %cmp.i84, label %if.then.i85, label %amdgpu_ring_write.exit82.amdgpu_ring_write.exit95_crit_edge

amdgpu_ring_write.exit82.amdgpu_ring_write.exit95_crit_edge: ; preds = %amdgpu_ring_write.exit82
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit95

if.then.i85:                                      ; preds = %amdgpu_ring_write.exit82
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit95

amdgpu_ring_write.exit95:                         ; preds = %if.then.i85, %amdgpu_ring_write.exit82.amdgpu_ring_write.exit95_crit_edge
  %shr6 = lshr i64 %seq, 32
  %conv8 = trunc i64 %shr6 to i32
  %86 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %ring1.i, align 4
  %88 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %wptr.i, align 8
  %inc.i88 = add i64 %89, 1
  store i64 %inc.i88, ptr %wptr.i, align 8
  %90 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %buf_mask.i, align 8
  %92 = trunc i64 %89 to i32
  %idxprom.i90 = and i32 %91, %92
  %arrayidx.i91 = getelementptr i32, ptr %87, i32 %idxprom.i90
  %93 = ptrtoint ptr %arrayidx.i91 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile i32 %conv8, ptr %arrayidx.i91, align 4
  %94 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %ptr_mask.i, align 8
  %96 = load i64, ptr %wptr.i, align 8
  %and3.i93 = and i64 %96, %95
  store i64 %and3.i93, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %count_dw.i, align 8
  %dec.i94 = add i32 %98, -1
  store i32 %dec.i94, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx10_kiq_invalidate_tlbs(ptr nocapture noundef %kiq_ring, i16 noundef zeroext %pasid, i32 noundef %flush_type, i1 noundef zeroext %all_hub) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073702912, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i8 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i8, label %if.then.i9, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit19

if.then.i9:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit19

amdgpu_ring_write.exit19:                         ; preds = %if.then.i9, %amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge
  %or = select i1 %all_hub, i32 17, i32 1
  %conv1 = zext i16 %pasid to i32
  %shl2 = shl nuw nsw i32 %conv1, 5
  %or3 = or i32 %or, %shl2
  %shl4 = shl i32 %flush_type, 29
  %or5 = or i32 %or3, %shl4
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i12 = add i64 %18, 1
  store i64 %inc.i12, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i14 = and i32 %20, %21
  %arrayidx.i15 = getelementptr i32, ptr %16, i32 %idxprom.i14
  %22 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 %or5, ptr %arrayidx.i15, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i17 = and i64 %25, %24
  store i64 %and3.i17, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i18 = add i32 %27, -1
  store i32 %dec.i18, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_err(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @amdgpu_bo_gpu_offset(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @gfx_v10_0_ring_get_rptr_compute(ptr nocapture noundef readonly %ring) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %wb1 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %2 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wb1, align 4
  %rptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 6
  %4 = ptrtoint ptr %rptr_offs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %3, i32 %5
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx, align 4
  %conv = zext i32 %7 to i64
  ret i64 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @gfx_v10_0_ring_get_wptr_compute(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %0 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %2 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring, align 8
  %wb1 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb1, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx, i32 noundef 8) #13
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %arrayidx) #13
  ret i64 %call.i

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8534, 0\0A.popsection", ""() #13, !srcloc !479
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_set_wptr_compute(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %0 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %2 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring, align 8
  %wb2 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb2, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr, align 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 8) #13
  tail call void @generic_atomic64_set(ptr noundef %arrayidx, i64 noundef %9) #13
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %10 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %doorbell_index, align 8
  %12 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %wptr, align 8
  tail call void @amdgpu_mm_wdoorbell64(ptr noundef %3, i32 noundef %11, i64 noundef %13) #13
  ret void

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8547, 0\0A.popsection", ""() #13, !srcloc !480
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_ib_compute(ptr noundef %ring, ptr noundef readonly %job, ptr nocapture noundef readonly %ib, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %job, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %vmid1 = getelementptr inbounds %struct.amdgpu_job, ptr %job, i32 0, i32 12
  %0 = ptrtoint ptr %vmid1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vmid1, align 8
  %phi.bo = shl i32 %1, 24
  %phi.bo113 = or i32 %phi.bo, 8388608
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %phi.bo113, %cond.true ], [ 8388608, %entry.cond.end_crit_edge ]
  %length_dw = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 1
  %2 = ptrtoint ptr %length_dw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %length_dw, align 4
  %flags3 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 4
  %4 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags3, align 4
  %and = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %cond.end.if.end_crit_edge, label %if.then

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %cond.end
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %6 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp slt i32 %7, 1
  br i1 %cmp.i, label %if.then.i, label %if.then.amdgpu_ring_write.exit_crit_edge

if.then.amdgpu_ring_write.exit_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.then.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %8 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %10 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %11, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %12 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %buf_mask.i, align 8
  %14 = trunc i64 %11 to i32
  %idxprom.i = and i32 %13, %14
  %arrayidx.i = getelementptr i32, ptr %9, i32 %idxprom.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 -1073649664, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %16 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %ptr_mask.i, align 8
  %18 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %18, %17
  store i64 %and3.i, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %20, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i36 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i36, label %if.then.i37, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit47_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit47_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit47

if.then.i37:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit47

amdgpu_ring_write.exit47:                         ; preds = %if.then.i37, %amdgpu_ring_write.exit.amdgpu_ring_write.exit47_crit_edge
  %21 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ring1.i, align 4
  %23 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %wptr.i, align 8
  %inc.i40 = add i64 %24, 1
  store i64 %inc.i40, ptr %wptr.i, align 8
  %25 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %buf_mask.i, align 8
  %27 = trunc i64 %24 to i32
  %idxprom.i42 = and i32 %26, %27
  %arrayidx.i43 = getelementptr i32, ptr %22, i32 %idxprom.i42
  %28 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile i32 8424, ptr %arrayidx.i43, align 4
  %29 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %ptr_mask.i, align 8
  %31 = load i64, ptr %wptr.i, align 8
  %and3.i45 = and i64 %31, %30
  store i64 %and3.i45, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %count_dw.i, align 8
  %dec.i46 = add i32 %33, -1
  store i32 %dec.i46, ptr %count_dw.i, align 8
  %34 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ring, align 8
  %gds_compute_max_wave_id = getelementptr inbounds %struct.amdgpu_device, ptr %35, i32 0, i32 114, i32 3
  %36 = ptrtoint ptr %gds_compute_max_wave_id to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %gds_compute_max_wave_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i46)
  %cmp.i49 = icmp slt i32 %dec.i46, 1
  br i1 %cmp.i49, label %if.then.i50, label %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge

amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge: ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit60

if.then.i50:                                      ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit60

amdgpu_ring_write.exit60:                         ; preds = %if.then.i50, %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge
  %38 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ring1.i, align 4
  %40 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %wptr.i, align 8
  %inc.i53 = add i64 %41, 1
  store i64 %inc.i53, ptr %wptr.i, align 8
  %42 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %buf_mask.i, align 8
  %44 = trunc i64 %41 to i32
  %idxprom.i55 = and i32 %43, %44
  %arrayidx.i56 = getelementptr i32, ptr %39, i32 %idxprom.i55
  %45 = ptrtoint ptr %arrayidx.i56 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile i32 %37, ptr %arrayidx.i56, align 4
  %46 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %ptr_mask.i, align 8
  %48 = load i64, ptr %wptr.i, align 8
  %and3.i58 = and i64 %48, %47
  store i64 %and3.i58, ptr %wptr.i, align 8
  %49 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %count_dw.i, align 8
  %dec.i59 = add i32 %50, -1
  store i32 %dec.i59, ptr %count_dw.i, align 8
  br label %if.end

if.end:                                           ; preds = %amdgpu_ring_write.exit60, %cond.end.if.end_crit_edge
  %count_dw.i61 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %51 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %count_dw.i61, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp.i62 = icmp slt i32 %52, 1
  br i1 %cmp.i62, label %if.then.i63, label %if.end.amdgpu_ring_write.exit73_crit_edge

if.end.amdgpu_ring_write.exit73_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit73

if.then.i63:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit73

amdgpu_ring_write.exit73:                         ; preds = %if.then.i63, %if.end.amdgpu_ring_write.exit73_crit_edge
  %ring1.i64 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %53 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ring1.i64, align 4
  %wptr.i65 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %55 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %wptr.i65, align 8
  %inc.i66 = add i64 %56, 1
  store i64 %inc.i66, ptr %wptr.i65, align 8
  %buf_mask.i67 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %57 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %buf_mask.i67, align 8
  %59 = trunc i64 %56 to i32
  %idxprom.i68 = and i32 %58, %59
  %arrayidx.i69 = getelementptr i32, ptr %54, i32 %idxprom.i68
  %60 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile i32 -1073594624, ptr %arrayidx.i69, align 4
  %ptr_mask.i70 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %61 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %ptr_mask.i70, align 8
  %63 = load i64, ptr %wptr.i65, align 8
  %and3.i71 = and i64 %63, %62
  store i64 %and3.i71, ptr %wptr.i65, align 8
  %64 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %count_dw.i61, align 8
  %dec.i72 = add i32 %65, -1
  store i32 %dec.i72, ptr %count_dw.i61, align 8
  %gpu_addr = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 2
  %66 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %gpu_addr, align 8
  %and5 = and i64 %67, 3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5)
  %tobool6.not = icmp eq i64 %and5, 0
  br i1 %tobool6.not, label %do.end16, label %do.body10, !prof !481

do.body10:                                        ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8642, 0\0A.popsection", ""() #13, !srcloc !482
  unreachable

do.end16:                                         ; preds = %amdgpu_ring_write.exit73
  %conv = trunc i64 %67 to i32
  %or19 = or i32 %conv, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i72)
  %cmp.i75 = icmp slt i32 %dec.i72, 1
  br i1 %cmp.i75, label %if.then.i76, label %do.end16.amdgpu_ring_write.exit86_crit_edge

do.end16.amdgpu_ring_write.exit86_crit_edge:      ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit86

if.then.i76:                                      ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit86

amdgpu_ring_write.exit86:                         ; preds = %if.then.i76, %do.end16.amdgpu_ring_write.exit86_crit_edge
  %68 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %ring1.i64, align 4
  %70 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %wptr.i65, align 8
  %inc.i79 = add i64 %71, 1
  store i64 %inc.i79, ptr %wptr.i65, align 8
  %72 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %buf_mask.i67, align 8
  %74 = trunc i64 %71 to i32
  %idxprom.i81 = and i32 %73, %74
  %arrayidx.i82 = getelementptr i32, ptr %69, i32 %idxprom.i81
  %75 = ptrtoint ptr %arrayidx.i82 to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile i32 %or19, ptr %arrayidx.i82, align 4
  %76 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %ptr_mask.i70, align 8
  %78 = load i64, ptr %wptr.i65, align 8
  %and3.i84 = and i64 %78, %77
  store i64 %and3.i84, ptr %wptr.i65, align 8
  %79 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %count_dw.i61, align 8
  %dec.i85 = add i32 %80, -1
  store i32 %dec.i85, ptr %count_dw.i61, align 8
  %81 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %gpu_addr, align 8
  %shr = lshr i64 %82, 32
  %conv22 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i85)
  %cmp.i88 = icmp slt i32 %dec.i85, 1
  br i1 %cmp.i88, label %if.then.i89, label %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge

amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge: ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit99

if.then.i89:                                      ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit99

amdgpu_ring_write.exit99:                         ; preds = %if.then.i89, %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge
  %83 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %ring1.i64, align 4
  %85 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %wptr.i65, align 8
  %inc.i92 = add i64 %86, 1
  store i64 %inc.i92, ptr %wptr.i65, align 8
  %87 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %buf_mask.i67, align 8
  %89 = trunc i64 %86 to i32
  %idxprom.i94 = and i32 %88, %89
  %arrayidx.i95 = getelementptr i32, ptr %84, i32 %idxprom.i94
  %90 = ptrtoint ptr %arrayidx.i95 to i32
  call void @__asan_store4_noabort(i32 %90)
  store volatile i32 %conv22, ptr %arrayidx.i95, align 4
  %91 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %ptr_mask.i70, align 8
  %93 = load i64, ptr %wptr.i65, align 8
  %and3.i97 = and i64 %93, %92
  store i64 %and3.i97, ptr %wptr.i65, align 8
  %94 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %count_dw.i61, align 8
  %dec.i98 = add i32 %95, -1
  store i32 %dec.i98, ptr %count_dw.i61, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i98)
  %cmp.i101 = icmp slt i32 %dec.i98, 1
  br i1 %cmp.i101, label %if.then.i102, label %amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge

amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge: ; preds = %amdgpu_ring_write.exit99
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit112

if.then.i102:                                     ; preds = %amdgpu_ring_write.exit99
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit112

amdgpu_ring_write.exit112:                        ; preds = %if.then.i102, %amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge
  %or2 = or i32 %cond, %3
  %96 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %ring1.i64, align 4
  %98 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %98)
  %99 = load i64, ptr %wptr.i65, align 8
  %inc.i105 = add i64 %99, 1
  store i64 %inc.i105, ptr %wptr.i65, align 8
  %100 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %buf_mask.i67, align 8
  %102 = trunc i64 %99 to i32
  %idxprom.i107 = and i32 %101, %102
  %arrayidx.i108 = getelementptr i32, ptr %97, i32 %idxprom.i107
  %103 = ptrtoint ptr %arrayidx.i108 to i32
  call void @__asan_store4_noabort(i32 %103)
  store volatile i32 %or2, ptr %arrayidx.i108, align 4
  %104 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %ptr_mask.i70, align 8
  %106 = load i64, ptr %wptr.i65, align 8
  %and3.i110 = and i64 %106, %105
  store i64 %and3.i110, ptr %wptr.i65, align 8
  %107 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %count_dw.i61, align 8
  %dec.i111 = add i32 %108, -1
  store i32 %dec.i111, ptr %count_dw.i61, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_fence_kiq(ptr noundef %ring, i64 noundef %addr, i64 noundef %seq, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end9, label %do.body4, !prof !481

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8714, 0\0A.popsection", ""() #13, !srcloc !483
  unreachable

do.end9:                                          ; preds = %entry
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %2 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp slt i32 %3, 1
  br i1 %cmp.i, label %if.then.i, label %do.end9.amdgpu_ring_write.exit_crit_edge

do.end9.amdgpu_ring_write.exit_crit_edge:         ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %do.end9.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %4 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %6 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %7, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %8 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %buf_mask.i, align 8
  %10 = trunc i64 %7 to i32
  %idxprom.i = and i32 %9, %10
  %arrayidx.i = getelementptr i32, ptr %5, i32 %idxprom.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 -1073531136, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %12 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %ptr_mask.i, align 8
  %14 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %14, %13
  store i64 %and3.i, ptr %wptr.i, align 8
  %15 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %16, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i34 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i34, label %if.then.i35, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit45

if.then.i35:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit45

amdgpu_ring_write.exit45:                         ; preds = %if.then.i35, %amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge
  %17 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ring1.i, align 4
  %19 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %wptr.i, align 8
  %inc.i38 = add i64 %20, 1
  store i64 %inc.i38, ptr %wptr.i, align 8
  %21 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %buf_mask.i, align 8
  %23 = trunc i64 %20 to i32
  %idxprom.i40 = and i32 %22, %23
  %arrayidx.i41 = getelementptr i32, ptr %18, i32 %idxprom.i40
  %24 = ptrtoint ptr %arrayidx.i41 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 1049856, ptr %arrayidx.i41, align 4
  %25 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %ptr_mask.i, align 8
  %27 = load i64, ptr %wptr.i, align 8
  %and3.i43 = and i64 %27, %26
  store i64 %and3.i43, ptr %wptr.i, align 8
  %28 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %count_dw.i, align 8
  %dec.i44 = add i32 %29, -1
  store i32 %dec.i44, ptr %count_dw.i, align 8
  %conv = trunc i64 %addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i47 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i47, label %if.then.i48, label %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge

amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge: ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit58

if.then.i48:                                      ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit58

amdgpu_ring_write.exit58:                         ; preds = %if.then.i48, %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge
  %30 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ring1.i, align 4
  %32 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %wptr.i, align 8
  %inc.i51 = add i64 %33, 1
  store i64 %inc.i51, ptr %wptr.i, align 8
  %34 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %buf_mask.i, align 8
  %36 = trunc i64 %33 to i32
  %idxprom.i53 = and i32 %35, %36
  %arrayidx.i54 = getelementptr i32, ptr %31, i32 %idxprom.i53
  %37 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile i32 %conv, ptr %arrayidx.i54, align 4
  %38 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %ptr_mask.i, align 8
  %40 = load i64, ptr %wptr.i, align 8
  %and3.i56 = and i64 %40, %39
  store i64 %and3.i56, ptr %wptr.i, align 8
  %41 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %count_dw.i, align 8
  %dec.i57 = add i32 %42, -1
  store i32 %dec.i57, ptr %count_dw.i, align 8
  %shr = lshr i64 %addr, 32
  %conv12 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i57)
  %cmp.i60 = icmp slt i32 %dec.i57, 1
  br i1 %cmp.i60, label %if.then.i61, label %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge

amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge: ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit71

if.then.i61:                                      ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit71

amdgpu_ring_write.exit71:                         ; preds = %if.then.i61, %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge
  %43 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ring1.i, align 4
  %45 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %wptr.i, align 8
  %inc.i64 = add i64 %46, 1
  store i64 %inc.i64, ptr %wptr.i, align 8
  %47 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %buf_mask.i, align 8
  %49 = trunc i64 %46 to i32
  %idxprom.i66 = and i32 %48, %49
  %arrayidx.i67 = getelementptr i32, ptr %44, i32 %idxprom.i66
  %50 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile i32 %conv12, ptr %arrayidx.i67, align 4
  %51 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %ptr_mask.i, align 8
  %53 = load i64, ptr %wptr.i, align 8
  %and3.i69 = and i64 %53, %52
  store i64 %and3.i69, ptr %wptr.i, align 8
  %54 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %count_dw.i, align 8
  %dec.i70 = add i32 %55, -1
  store i32 %dec.i70, ptr %count_dw.i, align 8
  %conv14 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i70)
  %cmp.i73 = icmp slt i32 %dec.i70, 1
  br i1 %cmp.i73, label %if.then.i74, label %amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge

amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge: ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit84

if.then.i74:                                      ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit84

amdgpu_ring_write.exit84:                         ; preds = %if.then.i74, %amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge
  %56 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ring1.i, align 4
  %58 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %wptr.i, align 8
  %inc.i77 = add i64 %59, 1
  store i64 %inc.i77, ptr %wptr.i, align 8
  %60 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %buf_mask.i, align 8
  %62 = trunc i64 %59 to i32
  %idxprom.i79 = and i32 %61, %62
  %arrayidx.i80 = getelementptr i32, ptr %57, i32 %idxprom.i79
  %63 = ptrtoint ptr %arrayidx.i80 to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile i32 %conv14, ptr %arrayidx.i80, align 4
  %64 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %ptr_mask.i, align 8
  %66 = load i64, ptr %wptr.i, align 8
  %and3.i82 = and i64 %66, %65
  store i64 %and3.i82, ptr %wptr.i, align 8
  %67 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %count_dw.i, align 8
  %dec.i83 = add i32 %68, -1
  store i32 %dec.i83, ptr %count_dw.i, align 8
  %and15 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %amdgpu_ring_write.exit84.if.end20_crit_edge, label %if.then17

amdgpu_ring_write.exit84.if.end20_crit_edge:      ; preds = %amdgpu_ring_write.exit84
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end20

if.then17:                                        ; preds = %amdgpu_ring_write.exit84
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i83)
  %cmp.i86 = icmp slt i32 %dec.i83, 1
  br i1 %cmp.i86, label %if.then.i87, label %if.then17.amdgpu_ring_write.exit97_crit_edge

if.then17.amdgpu_ring_write.exit97_crit_edge:     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit97

if.then.i87:                                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit97

amdgpu_ring_write.exit97:                         ; preds = %if.then.i87, %if.then17.amdgpu_ring_write.exit97_crit_edge
  %69 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ring1.i, align 4
  %71 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %wptr.i, align 8
  %inc.i90 = add i64 %72, 1
  store i64 %inc.i90, ptr %wptr.i, align 8
  %73 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %buf_mask.i, align 8
  %75 = trunc i64 %72 to i32
  %idxprom.i92 = and i32 %74, %75
  %arrayidx.i93 = getelementptr i32, ptr %70, i32 %idxprom.i92
  %76 = ptrtoint ptr %arrayidx.i93 to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile i32 -1073531136, ptr %arrayidx.i93, align 4
  %77 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %ptr_mask.i, align 8
  %79 = load i64, ptr %wptr.i, align 8
  %and3.i95 = and i64 %79, %78
  store i64 %and3.i95, ptr %wptr.i, align 8
  %80 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %count_dw.i, align 8
  %dec.i96 = add i32 %81, -1
  store i32 %dec.i96, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i96)
  %cmp.i99 = icmp slt i32 %dec.i96, 1
  br i1 %cmp.i99, label %if.then.i100, label %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge

amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge: ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit110

if.then.i100:                                     ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit110

amdgpu_ring_write.exit110:                        ; preds = %if.then.i100, %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge
  %82 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ring1.i, align 4
  %84 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %wptr.i, align 8
  %inc.i103 = add i64 %85, 1
  store i64 %inc.i103, ptr %wptr.i, align 8
  %86 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %buf_mask.i, align 8
  %88 = trunc i64 %85 to i32
  %idxprom.i105 = and i32 %87, %88
  %arrayidx.i106 = getelementptr i32, ptr %83, i32 %idxprom.i105
  %89 = ptrtoint ptr %arrayidx.i106 to i32
  call void @__asan_store4_noabort(i32 %89)
  store volatile i32 1048576, ptr %arrayidx.i106, align 4
  %90 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %ptr_mask.i, align 8
  %92 = load i64, ptr %wptr.i, align 8
  %and3.i108 = and i64 %92, %91
  store i64 %and3.i108, ptr %wptr.i, align 8
  %93 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %count_dw.i, align 8
  %dec.i109 = add i32 %94, -1
  store i32 %dec.i109, ptr %count_dw.i, align 8
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %95 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %arrayidx, align 8
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %96, align 4
  %add = add i32 %98, 7765
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i109)
  %cmp.i112 = icmp slt i32 %dec.i109, 1
  br i1 %cmp.i112, label %if.then.i113, label %amdgpu_ring_write.exit110.amdgpu_ring_write.exit123_crit_edge

amdgpu_ring_write.exit110.amdgpu_ring_write.exit123_crit_edge: ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit123

if.then.i113:                                     ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit123

amdgpu_ring_write.exit123:                        ; preds = %if.then.i113, %amdgpu_ring_write.exit110.amdgpu_ring_write.exit123_crit_edge
  %99 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %ring1.i, align 4
  %101 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %wptr.i, align 8
  %inc.i116 = add i64 %102, 1
  store i64 %inc.i116, ptr %wptr.i, align 8
  %103 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %buf_mask.i, align 8
  %105 = trunc i64 %102 to i32
  %idxprom.i118 = and i32 %104, %105
  %arrayidx.i119 = getelementptr i32, ptr %100, i32 %idxprom.i118
  %106 = ptrtoint ptr %arrayidx.i119 to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile i32 %add, ptr %arrayidx.i119, align 4
  %107 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %ptr_mask.i, align 8
  %109 = load i64, ptr %wptr.i, align 8
  %and3.i121 = and i64 %109, %108
  store i64 %and3.i121, ptr %wptr.i, align 8
  %110 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %count_dw.i, align 8
  %dec.i122 = add i32 %111, -1
  store i32 %dec.i122, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i122)
  %cmp.i125 = icmp slt i32 %dec.i122, 1
  br i1 %cmp.i125, label %if.then.i126, label %amdgpu_ring_write.exit123.amdgpu_ring_write.exit136_crit_edge

amdgpu_ring_write.exit123.amdgpu_ring_write.exit136_crit_edge: ; preds = %amdgpu_ring_write.exit123
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit136

if.then.i126:                                     ; preds = %amdgpu_ring_write.exit123
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit136

amdgpu_ring_write.exit136:                        ; preds = %if.then.i126, %amdgpu_ring_write.exit123.amdgpu_ring_write.exit136_crit_edge
  %112 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %ring1.i, align 4
  %114 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %wptr.i, align 8
  %inc.i129 = add i64 %115, 1
  store i64 %inc.i129, ptr %wptr.i, align 8
  %116 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %buf_mask.i, align 8
  %118 = trunc i64 %115 to i32
  %idxprom.i131 = and i32 %117, %118
  %arrayidx.i132 = getelementptr i32, ptr %113, i32 %idxprom.i131
  %119 = ptrtoint ptr %arrayidx.i132 to i32
  call void @__asan_store4_noabort(i32 %119)
  store volatile i32 0, ptr %arrayidx.i132, align 4
  %120 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %ptr_mask.i, align 8
  %122 = load i64, ptr %wptr.i, align 8
  %and3.i134 = and i64 %122, %121
  store i64 %and3.i134, ptr %wptr.i, align 8
  %123 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %count_dw.i, align 8
  %dec.i135 = add i32 %124, -1
  store i32 %dec.i135, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i135)
  %cmp.i138 = icmp slt i32 %dec.i135, 1
  br i1 %cmp.i138, label %if.then.i139, label %amdgpu_ring_write.exit136.amdgpu_ring_write.exit149_crit_edge

amdgpu_ring_write.exit136.amdgpu_ring_write.exit149_crit_edge: ; preds = %amdgpu_ring_write.exit136
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit149

if.then.i139:                                     ; preds = %amdgpu_ring_write.exit136
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit149

amdgpu_ring_write.exit149:                        ; preds = %if.then.i139, %amdgpu_ring_write.exit136.amdgpu_ring_write.exit149_crit_edge
  %125 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %ring1.i, align 4
  %127 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %wptr.i, align 8
  %inc.i142 = add i64 %128, 1
  store i64 %inc.i142, ptr %wptr.i, align 8
  %129 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %buf_mask.i, align 8
  %131 = trunc i64 %128 to i32
  %idxprom.i144 = and i32 %130, %131
  %arrayidx.i145 = getelementptr i32, ptr %126, i32 %idxprom.i144
  %132 = ptrtoint ptr %arrayidx.i145 to i32
  call void @__asan_store4_noabort(i32 %132)
  store volatile i32 536870912, ptr %arrayidx.i145, align 4
  %133 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %133)
  %134 = load i64, ptr %ptr_mask.i, align 8
  %135 = load i64, ptr %wptr.i, align 8
  %and3.i147 = and i64 %135, %134
  store i64 %and3.i147, ptr %wptr.i, align 8
  %136 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %count_dw.i, align 8
  %dec.i148 = add i32 %137, -1
  store i32 %dec.i148, ptr %count_dw.i, align 8
  br label %if.end20

if.end20:                                         ; preds = %amdgpu_ring_write.exit149, %amdgpu_ring_write.exit84.if.end20_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_ring_test_ring(ptr noundef %ring) #0 align 64 {
entry:
  %scratch = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %scratch) #13
  %2 = ptrtoint ptr %scratch to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %scratch, align 4, !annotation !484
  %call = call i32 @amdgpu_gfx_scratch_get(ptr noundef %1, ptr noundef nonnull %scratch) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.2, i32 noundef %call) #13
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %scratch, align 4
  call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %4, i32 noundef -889266515, i32 noundef 0) #13
  %call2 = call i32 @amdgpu_ring_alloc(ptr noundef %ring, i32 noundef 3) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %idx = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 15
  %5 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %idx, align 4
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.3, i32 noundef %6, i32 noundef %call2) #13
  %7 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %scratch, align 4
  call void @amdgpu_gfx_scratch_free(ptr noundef %1, i32 noundef %8) #13
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %9 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp.i = icmp slt i32 %10, 1
  br i1 %cmp.i, label %if.then.i, label %if.end5.amdgpu_ring_write.exit_crit_edge

if.end5.amdgpu_ring_write.exit_crit_edge:         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.end5.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %11 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %13 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %14, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %15 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %buf_mask.i, align 8
  %17 = trunc i64 %14 to i32
  %idxprom.i = and i32 %16, %17
  %arrayidx.i = getelementptr i32, ptr %12, i32 %idxprom.i
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile i32 -1073645312, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %19 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %ptr_mask.i, align 8
  %21 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %21, %20
  store i64 %and3.i, ptr %wptr.i, align 8
  %22 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %23, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %24 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %scratch, align 4
  %sub = add i32 %25, -49152
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i42 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i42, label %if.then.i43, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit53_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit53_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit53

if.then.i43:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit53

amdgpu_ring_write.exit53:                         ; preds = %if.then.i43, %amdgpu_ring_write.exit.amdgpu_ring_write.exit53_crit_edge
  %26 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ring1.i, align 4
  %28 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %wptr.i, align 8
  %inc.i46 = add i64 %29, 1
  store i64 %inc.i46, ptr %wptr.i, align 8
  %30 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %buf_mask.i, align 8
  %32 = trunc i64 %29 to i32
  %idxprom.i48 = and i32 %31, %32
  %arrayidx.i49 = getelementptr i32, ptr %27, i32 %idxprom.i48
  %33 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile i32 %sub, ptr %arrayidx.i49, align 4
  %34 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %ptr_mask.i, align 8
  %36 = load i64, ptr %wptr.i, align 8
  %and3.i51 = and i64 %36, %35
  store i64 %and3.i51, ptr %wptr.i, align 8
  %37 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %count_dw.i, align 8
  %dec.i52 = add i32 %38, -1
  store i32 %dec.i52, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i52)
  %cmp.i55 = icmp slt i32 %dec.i52, 1
  br i1 %cmp.i55, label %if.then.i56, label %amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge

amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge: ; preds = %amdgpu_ring_write.exit53
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit66

if.then.i56:                                      ; preds = %amdgpu_ring_write.exit53
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit66

amdgpu_ring_write.exit66:                         ; preds = %if.then.i56, %amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge
  %39 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %ring1.i, align 4
  %41 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %wptr.i, align 8
  %inc.i59 = add i64 %42, 1
  store i64 %inc.i59, ptr %wptr.i, align 8
  %43 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %buf_mask.i, align 8
  %45 = trunc i64 %42 to i32
  %idxprom.i61 = and i32 %44, %45
  %arrayidx.i62 = getelementptr i32, ptr %40, i32 %idxprom.i61
  %46 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile i32 -559038737, ptr %arrayidx.i62, align 4
  %47 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %ptr_mask.i, align 8
  %49 = load i64, ptr %wptr.i, align 8
  %and3.i64 = and i64 %49, %48
  store i64 %and3.i64, ptr %wptr.i, align 8
  %50 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %count_dw.i, align 8
  %dec.i65 = add i32 %51, -1
  store i32 %dec.i65, ptr %count_dw.i, align 8
  call void @amdgpu_ring_commit(ptr noundef %ring) #13
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 11
  %52 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp67.not = icmp eq i32 %53, 0
  br i1 %cmp67.not, label %amdgpu_ring_write.exit66.for.end_crit_edge, label %amdgpu_ring_write.exit66.for.body_crit_edge

amdgpu_ring_write.exit66.for.body_crit_edge:      ; preds = %amdgpu_ring_write.exit66
  br label %for.body

amdgpu_ring_write.exit66.for.end_crit_edge:       ; preds = %amdgpu_ring_write.exit66
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %amdgpu_ring_write.exit66.for.body_crit_edge
  %i.068 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %amdgpu_ring_write.exit66.for.body_crit_edge ]
  %54 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %scratch, align 4
  %call6 = call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %55, i32 noundef 0) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -559038737, i32 %call6)
  %cmp7 = icmp eq i32 %call6, -559038737
  br i1 %cmp7, label %for.body.for.end_crit_edge, label %if.end9

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.end9:                                          ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %56 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %56)
  %cmp10 = icmp eq i32 %56, 1
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  call void @msleep(i32 noundef 1) #13
  br label %for.inc

if.else:                                          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %57 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %57(i32 noundef 214748) #13
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then11
  %inc = add nuw i32 %i.068, 1
  %58 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp ult i32 %inc, %59
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.body.for.end_crit_edge, %amdgpu_ring_write.exit66.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %amdgpu_ring_write.exit66.for.end_crit_edge ], [ %i.068, %for.body.for.end_crit_edge ], [ %inc, %for.inc.for.end_crit_edge ]
  %60 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa, i32 %61)
  %cmp14.not = icmp ult i32 %i.0.lcssa, %61
  %spec.select = select i1 %cmp14.not, i32 0, i32 -110
  %62 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %scratch, align 4
  call void @amdgpu_gfx_scratch_free(ptr noundef %1, i32 noundef %63) #13
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then4, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call2, %if.then4 ], [ %spec.select, %for.end ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %scratch) #13
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_ring_test_ib(ptr noundef %ring, i32 noundef %timeout) #0 align 64 {
entry:
  %ib = alloca %struct.amdgpu_ib, align 8
  %f = alloca ptr, align 4
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ib) #13
  %2 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 1
  %3 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %f) #13
  %4 = ptrtoint ptr %f to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %f, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #13
  %5 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %index, align 4, !annotation !484
  %call = call i32 @amdgpu_device_wb_get(ptr noundef %1, ptr noundef nonnull %index) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %gpu_addr2 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %6 = ptrtoint ptr %gpu_addr2 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %gpu_addr2, align 8
  %8 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index, align 4
  %wb4 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %10 = ptrtoint ptr %wb4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wb4, align 4
  %arrayidx = getelementptr i32, ptr %11, i32 %9
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 -1377894710, ptr %arrayidx, align 4
  %13 = call ptr @memset(ptr %ib, i32 0, i32 24)
  %call5 = call i32 @amdgpu_ib_get(ptr noundef %1, ptr noundef null, i32 noundef 16, i32 noundef 2, ptr noundef nonnull %ib) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.err1_crit_edge

if.end.err1_crit_edge:                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %err1

if.end8:                                          ; preds = %if.end
  %mul = shl i32 %9, 2
  %conv = zext i32 %mul to i64
  %add = add i64 %7, %conv
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %3, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1073531136, ptr %15, align 4
  %17 = load ptr, ptr %3, align 8
  %arrayidx11 = getelementptr i32, ptr %17, i32 1
  %18 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1049856, ptr %arrayidx11, align 4
  %conv12 = trunc i64 %add to i32
  %19 = load ptr, ptr %3, align 8
  %arrayidx14 = getelementptr i32, ptr %19, i32 2
  %20 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %conv12, ptr %arrayidx14, align 4
  %shr = lshr i64 %add, 32
  %conv16 = trunc i64 %shr to i32
  %21 = load ptr, ptr %3, align 8
  %arrayidx18 = getelementptr i32, ptr %21, i32 3
  %22 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %conv16, ptr %arrayidx18, align 4
  %23 = load ptr, ptr %3, align 8
  %arrayidx20 = getelementptr i32, ptr %23, i32 4
  %24 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -559038737, ptr %arrayidx20, align 4
  %25 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 5, ptr %2, align 4
  %call21 = call i32 @amdgpu_ib_schedule(ptr noundef %ring, i32 noundef 1, ptr noundef nonnull %ib, ptr noundef null, ptr noundef nonnull %f) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end8.err2_crit_edge

if.end8.err2_crit_edge:                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #15
  br label %err2

if.end24:                                         ; preds = %if.end8
  %26 = ptrtoint ptr %f to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %f, align 4
  %call25 = call i32 @dma_fence_wait_timeout(ptr noundef %27, i1 noundef zeroext false, i32 noundef %timeout) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp = icmp eq i32 %call25, 0
  br i1 %cmp, label %if.end24.err2_crit_edge, label %if.else

if.end24.err2_crit_edge:                          ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #15
  br label %err2

if.else:                                          ; preds = %if.end24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp28 = icmp slt i32 %call25, 0
  br i1 %cmp28, label %if.else.err2_crit_edge, label %if.end32

if.else.err2_crit_edge:                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %err2

if.end32:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  %28 = ptrtoint ptr %wb4 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %wb4, align 4
  %30 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %index, align 4
  %arrayidx35 = getelementptr i32, ptr %29, i32 %31
  %32 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %arrayidx35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -559038737, i32 %33)
  %cmp36 = icmp eq i32 %33, -559038737
  %. = select i1 %cmp36, i32 0, i32 -22
  br label %err2

err2:                                             ; preds = %if.end32, %if.else.err2_crit_edge, %if.end24.err2_crit_edge, %if.end8.err2_crit_edge
  %r.0 = phi i32 [ %call21, %if.end8.err2_crit_edge ], [ %call25, %if.else.err2_crit_edge ], [ -110, %if.end24.err2_crit_edge ], [ %., %if.end32 ]
  call void @amdgpu_ib_free(ptr noundef %1, ptr noundef nonnull %ib, ptr noundef null) #13
  %34 = ptrtoint ptr %f to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %f, align 4
  %tobool.not.i = icmp eq ptr %35, null
  br i1 %tobool.not.i, label %err2.err1_crit_edge, label %if.then.i

err2.err1_crit_edge:                              ; preds = %err2
  call void @__sanitizer_cov_trace_pc() #15
  br label %err1

if.then.i:                                        ; preds = %err2
  %refcount.i = getelementptr inbounds %struct.dma_fence, ptr %35, i32 0, i32 6
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !485
  call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #13
  %36 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #13, !srcloc !486
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %36, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.err1_crit_edge, label %if.then10.i.i.i.i.i, !prof !481

if.end5.i.i.i.i.i.err1_crit_edge:                 ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %err1

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #13
  br label %err1

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #13, !srcloc !487
  call void @dma_fence_release(ptr noundef %refcount.i) #13
  br label %err1

err1:                                             ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.err1_crit_edge, %err2.err1_crit_edge, %if.end.err1_crit_edge
  %r.1 = phi i32 [ %call5, %if.end.err1_crit_edge ], [ %r.0, %err2.err1_crit_edge ], [ %r.0, %if.end5.i.i.i.i.i.err1_crit_edge ], [ %r.0, %if.then10.i.i.i.i.i ], [ %r.0, %if.then.i.i ]
  %37 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %index, align 4
  call void @amdgpu_device_wb_free(ptr noundef %1, i32 noundef %38) #13
  br label %cleanup

cleanup:                                          ; preds = %err1, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %r.1, %err1 ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %f) #13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ib) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_insert_nop(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_generic_pad_ib(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_rreg(ptr noundef %ring, i32 noundef %reg, i32 noundef %reg_val_offs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %2 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp slt i32 %3, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %4 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %6 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %7, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %8 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %buf_mask.i, align 8
  %10 = trunc i64 %7 to i32
  %idxprom.i = and i32 %9, %10
  %arrayidx.i = getelementptr i32, ptr %5, i32 %idxprom.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 -1073463296, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %12 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %ptr_mask.i, align 8
  %14 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %14, %13
  store i64 %and3.i, ptr %wptr.i, align 8
  %15 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %16, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i19 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i19, label %if.then.i20, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit30

if.then.i20:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit30

amdgpu_ring_write.exit30:                         ; preds = %if.then.i20, %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge
  %17 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ring1.i, align 4
  %19 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %wptr.i, align 8
  %inc.i23 = add i64 %20, 1
  store i64 %inc.i23, ptr %wptr.i, align 8
  %21 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %buf_mask.i, align 8
  %23 = trunc i64 %20 to i32
  %idxprom.i25 = and i32 %22, %23
  %arrayidx.i26 = getelementptr i32, ptr %18, i32 %idxprom.i25
  %24 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 1049856, ptr %arrayidx.i26, align 4
  %25 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %ptr_mask.i, align 8
  %27 = load i64, ptr %wptr.i, align 8
  %and3.i28 = and i64 %27, %26
  store i64 %and3.i28, ptr %wptr.i, align 8
  %28 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %count_dw.i, align 8
  %dec.i29 = add i32 %29, -1
  store i32 %dec.i29, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i29)
  %cmp.i32 = icmp slt i32 %dec.i29, 1
  br i1 %cmp.i32, label %if.then.i33, label %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge

amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge: ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit43

if.then.i33:                                      ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit43

amdgpu_ring_write.exit43:                         ; preds = %if.then.i33, %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge
  %30 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ring1.i, align 4
  %32 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %wptr.i, align 8
  %inc.i36 = add i64 %33, 1
  store i64 %inc.i36, ptr %wptr.i, align 8
  %34 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %buf_mask.i, align 8
  %36 = trunc i64 %33 to i32
  %idxprom.i38 = and i32 %35, %36
  %arrayidx.i39 = getelementptr i32, ptr %31, i32 %idxprom.i38
  %37 = ptrtoint ptr %arrayidx.i39 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile i32 %reg, ptr %arrayidx.i39, align 4
  %38 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %ptr_mask.i, align 8
  %40 = load i64, ptr %wptr.i, align 8
  %and3.i41 = and i64 %40, %39
  store i64 %and3.i41, ptr %wptr.i, align 8
  %41 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %count_dw.i, align 8
  %dec.i42 = add i32 %42, -1
  store i32 %dec.i42, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i42)
  %cmp.i45 = icmp slt i32 %dec.i42, 1
  br i1 %cmp.i45, label %if.then.i46, label %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge

amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge: ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit56

if.then.i46:                                      ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit56

amdgpu_ring_write.exit56:                         ; preds = %if.then.i46, %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge
  %43 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ring1.i, align 4
  %45 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %wptr.i, align 8
  %inc.i49 = add i64 %46, 1
  store i64 %inc.i49, ptr %wptr.i, align 8
  %47 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %buf_mask.i, align 8
  %49 = trunc i64 %46 to i32
  %idxprom.i51 = and i32 %48, %49
  %arrayidx.i52 = getelementptr i32, ptr %44, i32 %idxprom.i51
  %50 = ptrtoint ptr %arrayidx.i52 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile i32 0, ptr %arrayidx.i52, align 4
  %51 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %ptr_mask.i, align 8
  %53 = load i64, ptr %wptr.i, align 8
  %and3.i54 = and i64 %53, %52
  store i64 %and3.i54, ptr %wptr.i, align 8
  %54 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %count_dw.i, align 8
  %dec.i55 = add i32 %55, -1
  store i32 %dec.i55, ptr %count_dw.i, align 8
  %gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %56 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %gpu_addr, align 8
  %mul = shl i32 %reg_val_offs, 2
  %58 = trunc i64 %57 to i32
  %conv2 = add i32 %mul, %58
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i55)
  %cmp.i58 = icmp slt i32 %dec.i55, 1
  br i1 %cmp.i58, label %if.then.i59, label %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge

amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge: ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit69

if.then.i59:                                      ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit69

amdgpu_ring_write.exit69:                         ; preds = %if.then.i59, %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge
  %59 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %ring1.i, align 4
  %61 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %wptr.i, align 8
  %inc.i62 = add i64 %62, 1
  store i64 %inc.i62, ptr %wptr.i, align 8
  %63 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %buf_mask.i, align 8
  %65 = trunc i64 %62 to i32
  %idxprom.i64 = and i32 %64, %65
  %arrayidx.i65 = getelementptr i32, ptr %60, i32 %idxprom.i64
  %66 = ptrtoint ptr %arrayidx.i65 to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile i32 %conv2, ptr %arrayidx.i65, align 4
  %67 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %ptr_mask.i, align 8
  %69 = load i64, ptr %wptr.i, align 8
  %and3.i67 = and i64 %69, %68
  store i64 %and3.i67, ptr %wptr.i, align 8
  %70 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %count_dw.i, align 8
  %dec.i68 = add i32 %71, -1
  store i32 %dec.i68, ptr %count_dw.i, align 8
  %72 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %gpu_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i68)
  %cmp.i71 = icmp slt i32 %dec.i68, 1
  br i1 %cmp.i71, label %if.then.i72, label %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge

amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge: ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit82

if.then.i72:                                      ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit82

amdgpu_ring_write.exit82:                         ; preds = %if.then.i72, %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge
  %conv = zext i32 %mul to i64
  %add7 = add i64 %73, %conv
  %shr = lshr i64 %add7, 32
  %conv9 = trunc i64 %shr to i32
  %74 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %ring1.i, align 4
  %76 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %wptr.i, align 8
  %inc.i75 = add i64 %77, 1
  store i64 %inc.i75, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %buf_mask.i, align 8
  %80 = trunc i64 %77 to i32
  %idxprom.i77 = and i32 %79, %80
  %arrayidx.i78 = getelementptr i32, ptr %75, i32 %idxprom.i77
  %81 = ptrtoint ptr %arrayidx.i78 to i32
  call void @__asan_store4_noabort(i32 %81)
  store volatile i32 %conv9, ptr %arrayidx.i78, align 4
  %82 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %ptr_mask.i, align 8
  %84 = load i64, ptr %wptr.i, align 8
  %and3.i80 = and i64 %84, %83
  store i64 %and3.i80, ptr %wptr.i, align 8
  %85 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %count_dw.i, align 8
  %dec.i81 = add i32 %86, -1
  store i32 %dec.i81, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_wreg(ptr noundef %ring, i32 noundef %reg, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %3)
  %switch.selectcmp = icmp eq i32 %3, 9
  %switch.select = select i1 %switch.selectcmp, i32 65536, i32 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %switch.selectcmp7 = icmp eq i32 %3, 0
  %switch.select8 = select i1 %switch.selectcmp7, i32 1074790400, i32 %switch.select
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %4 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp slt i32 %5, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %6 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %9, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %10 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buf_mask.i, align 8
  %12 = trunc i64 %9 to i32
  %idxprom.i = and i32 %11, %12
  %arrayidx.i = getelementptr i32, ptr %7, i32 %idxprom.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 -1073531136, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %14 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %ptr_mask.i, align 8
  %16 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %16, %15
  store i64 %and3.i, ptr %wptr.i, align 8
  %17 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i10 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i10, label %if.then.i11, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit21_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit21_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit21

if.then.i11:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit21

amdgpu_ring_write.exit21:                         ; preds = %if.then.i11, %amdgpu_ring_write.exit.amdgpu_ring_write.exit21_crit_edge
  %19 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ring1.i, align 4
  %21 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %wptr.i, align 8
  %inc.i14 = add i64 %22, 1
  store i64 %inc.i14, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %buf_mask.i, align 8
  %25 = trunc i64 %22 to i32
  %idxprom.i16 = and i32 %24, %25
  %arrayidx.i17 = getelementptr i32, ptr %20, i32 %idxprom.i16
  %26 = ptrtoint ptr %arrayidx.i17 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 %switch.select8, ptr %arrayidx.i17, align 4
  %27 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ptr_mask.i, align 8
  %29 = load i64, ptr %wptr.i, align 8
  %and3.i19 = and i64 %29, %28
  store i64 %and3.i19, ptr %wptr.i, align 8
  %30 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %count_dw.i, align 8
  %dec.i20 = add i32 %31, -1
  store i32 %dec.i20, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i20)
  %cmp.i23 = icmp slt i32 %dec.i20, 1
  br i1 %cmp.i23, label %if.then.i24, label %amdgpu_ring_write.exit21.amdgpu_ring_write.exit34_crit_edge

amdgpu_ring_write.exit21.amdgpu_ring_write.exit34_crit_edge: ; preds = %amdgpu_ring_write.exit21
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit34

if.then.i24:                                      ; preds = %amdgpu_ring_write.exit21
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit34

amdgpu_ring_write.exit34:                         ; preds = %if.then.i24, %amdgpu_ring_write.exit21.amdgpu_ring_write.exit34_crit_edge
  %32 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ring1.i, align 4
  %34 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %wptr.i, align 8
  %inc.i27 = add i64 %35, 1
  store i64 %inc.i27, ptr %wptr.i, align 8
  %36 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %buf_mask.i, align 8
  %38 = trunc i64 %35 to i32
  %idxprom.i29 = and i32 %37, %38
  %arrayidx.i30 = getelementptr i32, ptr %33, i32 %idxprom.i29
  %39 = ptrtoint ptr %arrayidx.i30 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 %reg, ptr %arrayidx.i30, align 4
  %40 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %ptr_mask.i, align 8
  %42 = load i64, ptr %wptr.i, align 8
  %and3.i32 = and i64 %42, %41
  store i64 %and3.i32, ptr %wptr.i, align 8
  %43 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %count_dw.i, align 8
  %dec.i33 = add i32 %44, -1
  store i32 %dec.i33, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i33)
  %cmp.i36 = icmp slt i32 %dec.i33, 1
  br i1 %cmp.i36, label %if.then.i37, label %amdgpu_ring_write.exit34.amdgpu_ring_write.exit47_crit_edge

amdgpu_ring_write.exit34.amdgpu_ring_write.exit47_crit_edge: ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit47

if.then.i37:                                      ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit47

amdgpu_ring_write.exit47:                         ; preds = %if.then.i37, %amdgpu_ring_write.exit34.amdgpu_ring_write.exit47_crit_edge
  %45 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ring1.i, align 4
  %47 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %wptr.i, align 8
  %inc.i40 = add i64 %48, 1
  store i64 %inc.i40, ptr %wptr.i, align 8
  %49 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %buf_mask.i, align 8
  %51 = trunc i64 %48 to i32
  %idxprom.i42 = and i32 %50, %51
  %arrayidx.i43 = getelementptr i32, ptr %46, i32 %idxprom.i42
  %52 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 0, ptr %arrayidx.i43, align 4
  %53 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %ptr_mask.i, align 8
  %55 = load i64, ptr %wptr.i, align 8
  %and3.i45 = and i64 %55, %54
  store i64 %and3.i45, ptr %wptr.i, align 8
  %56 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %count_dw.i, align 8
  %dec.i46 = add i32 %57, -1
  store i32 %dec.i46, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i46)
  %cmp.i49 = icmp slt i32 %dec.i46, 1
  br i1 %cmp.i49, label %if.then.i50, label %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge

amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge: ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit60

if.then.i50:                                      ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit60

amdgpu_ring_write.exit60:                         ; preds = %if.then.i50, %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge
  %58 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %ring1.i, align 4
  %60 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %wptr.i, align 8
  %inc.i53 = add i64 %61, 1
  store i64 %inc.i53, ptr %wptr.i, align 8
  %62 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %buf_mask.i, align 8
  %64 = trunc i64 %61 to i32
  %idxprom.i55 = and i32 %63, %64
  %arrayidx.i56 = getelementptr i32, ptr %59, i32 %idxprom.i55
  %65 = ptrtoint ptr %arrayidx.i56 to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile i32 %val, ptr %arrayidx.i56, align 4
  %66 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %ptr_mask.i, align 8
  %68 = load i64, ptr %wptr.i, align 8
  %and3.i58 = and i64 %68, %67
  store i64 %and3.i58, ptr %wptr.i, align 8
  %69 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %count_dw.i, align 8
  %dec.i59 = add i32 %70, -1
  store i32 %dec.i59, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_reg_wait(ptr noundef %ring, i32 noundef %reg, i32 noundef %val, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @gfx_v10_0_wait_reg_mem(ptr noundef %ring, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef %reg, i32 noundef 0, i32 noundef %val, i32 noundef %mask, i32 noundef 32)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_reg_write_reg_wait(ptr noundef %ring, i32 noundef %reg0, i32 noundef %reg1, i32 noundef %ref, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %cp_fw_write_wait = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 35
  %2 = ptrtoint ptr %cp_fw_write_wait to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %cp_fw_write_wait, align 2, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp = icmp eq i32 %7, 0
  %conv = zext i1 %cmp to i32
  tail call fastcc void @gfx_v10_0_wait_reg_mem(ptr noundef %ring, i32 noundef %conv, i32 noundef 0, i32 noundef 1, i32 noundef %reg0, i32 noundef %reg1, i32 noundef %ref, i32 noundef %mask, i32 noundef 32)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @amdgpu_ring_emit_reg_write_reg_wait_helper(ptr noundef %ring, i32 noundef %reg0, i32 noundef %reg1, i32 noundef %ref, i32 noundef %mask) #13
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_mm_wdoorbell64(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_set(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_scratch_get(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_device_wreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ring_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_scratch_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_device_rreg(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_device_wb_get(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ib_get(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ib_schedule(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_fence_wait_timeout(ptr noundef, i1 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ib_free(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_device_wb_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_fence_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_wait_reg_mem(ptr noundef %ring, i32 noundef %eng_sel, i32 noundef %mem_space, i32 noundef %opt, i32 noundef %addr0, i32 noundef %addr1, i32 noundef %ref, i32 noundef %mask, i32 noundef %inv) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073398784, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %shl = shl i32 %mem_space, 4
  %shl1 = shl i32 %opt, 6
  %shl3 = shl i32 %eng_sel, 8
  %or = or i32 %shl3, %shl
  %or2 = or i32 %or, %shl1
  %or4 = or i32 %or2, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i23 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i23, label %if.then.i24, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit34_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit34_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit34

if.then.i24:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit34

amdgpu_ring_write.exit34:                         ; preds = %if.then.i24, %amdgpu_ring_write.exit.amdgpu_ring_write.exit34_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i27 = add i64 %18, 1
  store i64 %inc.i27, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i29 = and i32 %20, %21
  %arrayidx.i30 = getelementptr i32, ptr %16, i32 %idxprom.i29
  %22 = ptrtoint ptr %arrayidx.i30 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 %or4, ptr %arrayidx.i30, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i32 = and i64 %25, %24
  store i64 %and3.i32, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i33 = add i32 %27, -1
  store i32 %dec.i33, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mem_space)
  %tobool.not = icmp eq i32 %mem_space, 0
  %and = and i32 %addr0, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  %or.cond = or i1 %tobool.not, %tobool5.not
  br i1 %or.cond, label %if.end13, label %do.body9, !prof !488

do.body9:                                         ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3835, 0\0A.popsection", ""() #13, !srcloc !489
  unreachable

if.end13:                                         ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i33)
  %cmp.i36 = icmp slt i32 %dec.i33, 1
  br i1 %cmp.i36, label %if.then.i37, label %if.end13.amdgpu_ring_write.exit47_crit_edge

if.end13.amdgpu_ring_write.exit47_crit_edge:      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit47

if.then.i37:                                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit47

amdgpu_ring_write.exit47:                         ; preds = %if.then.i37, %if.end13.amdgpu_ring_write.exit47_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i40 = add i64 %31, 1
  store i64 %inc.i40, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i42 = and i32 %33, %34
  %arrayidx.i43 = getelementptr i32, ptr %29, i32 %idxprom.i42
  %35 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %addr0, ptr %arrayidx.i43, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i45 = and i64 %38, %37
  store i64 %and3.i45, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i46 = add i32 %40, -1
  store i32 %dec.i46, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i46)
  %cmp.i49 = icmp slt i32 %dec.i46, 1
  br i1 %cmp.i49, label %if.then.i50, label %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge

amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge: ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit60

if.then.i50:                                      ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit60

amdgpu_ring_write.exit60:                         ; preds = %if.then.i50, %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i53 = add i64 %44, 1
  store i64 %inc.i53, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i55 = and i32 %46, %47
  %arrayidx.i56 = getelementptr i32, ptr %42, i32 %idxprom.i55
  %48 = ptrtoint ptr %arrayidx.i56 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %addr1, ptr %arrayidx.i56, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i58 = and i64 %51, %50
  store i64 %and3.i58, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i59 = add i32 %53, -1
  store i32 %dec.i59, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i59)
  %cmp.i62 = icmp slt i32 %dec.i59, 1
  br i1 %cmp.i62, label %if.then.i63, label %amdgpu_ring_write.exit60.amdgpu_ring_write.exit73_crit_edge

amdgpu_ring_write.exit60.amdgpu_ring_write.exit73_crit_edge: ; preds = %amdgpu_ring_write.exit60
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit73

if.then.i63:                                      ; preds = %amdgpu_ring_write.exit60
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit73

amdgpu_ring_write.exit73:                         ; preds = %if.then.i63, %amdgpu_ring_write.exit60.amdgpu_ring_write.exit73_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i66 = add i64 %57, 1
  store i64 %inc.i66, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i68 = and i32 %59, %60
  %arrayidx.i69 = getelementptr i32, ptr %55, i32 %idxprom.i68
  %61 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 %ref, ptr %arrayidx.i69, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i71 = and i64 %64, %63
  store i64 %and3.i71, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i72 = add i32 %66, -1
  store i32 %dec.i72, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i72)
  %cmp.i75 = icmp slt i32 %dec.i72, 1
  br i1 %cmp.i75, label %if.then.i76, label %amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge

amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge: ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit86

if.then.i76:                                      ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit86

amdgpu_ring_write.exit86:                         ; preds = %if.then.i76, %amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i79 = add i64 %70, 1
  store i64 %inc.i79, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i81 = and i32 %72, %73
  %arrayidx.i82 = getelementptr i32, ptr %68, i32 %idxprom.i81
  %74 = ptrtoint ptr %arrayidx.i82 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 %mask, ptr %arrayidx.i82, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i84 = and i64 %77, %76
  store i64 %and3.i84, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i85 = add i32 %79, -1
  store i32 %dec.i85, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i85)
  %cmp.i88 = icmp slt i32 %dec.i85, 1
  br i1 %cmp.i88, label %if.then.i89, label %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge

amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge: ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit99

if.then.i89:                                      ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit99

amdgpu_ring_write.exit99:                         ; preds = %if.then.i89, %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i92 = add i64 %83, 1
  store i64 %inc.i92, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i94 = and i32 %85, %86
  %arrayidx.i95 = getelementptr i32, ptr %81, i32 %idxprom.i94
  %87 = ptrtoint ptr %arrayidx.i95 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 %inv, ptr %arrayidx.i95, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i97 = and i64 %90, %89
  store i64 %and3.i97, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i98 = add i32 %92, -1
  store i32 %dec.i98, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_emit_reg_write_reg_wait_helper(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @gfx_v10_0_ring_get_rptr_gfx(ptr nocapture noundef readonly %ring) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %wb1 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %2 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wb1, align 4
  %rptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 6
  %4 = ptrtoint ptr %rptr_offs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %3, i32 %5
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx, align 4
  %conv = zext i32 %7 to i64
  ret i64 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @gfx_v10_0_ring_get_wptr_gfx(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %2 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %wb2 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb2, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx, i32 noundef 8) #13
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %arrayidx) #13
  br label %if.end

if.else:                                          ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %8 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %virt, align 8
  %and = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.else.cond.false_crit_edge, label %land.lhs.true

if.else.cond.false_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.else
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %10 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %funcs, align 4
  %tobool4.not = icmp eq ptr %11, null
  br i1 %tobool4.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true5

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true5:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %11, i32 0, i32 13
  %12 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sriov_rreg, align 4
  %tobool9.not = icmp eq ptr %13, null
  br i1 %tobool9.not, label %land.lhs.true5.cond.false_crit_edge, label %cond.true

land.lhs.true5.cond.false_crit_edge:              ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %14 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx14, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add = add i32 %17, 7668
  %call17 = tail call i32 %13(ptr noundef %1, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true5.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.else.cond.false_crit_edge
  %arrayidx19 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %18 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx19, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add22 = add i32 %21, 7668
  %call23 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add22, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call17, %cond.true ], [ %call23, %cond.false ]
  %conv = zext i32 %cond to i64
  %22 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %virt, align 8
  %and26 = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %cond.end.cond.false50_crit_edge, label %land.lhs.true28

cond.end.cond.false50_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50

land.lhs.true28:                                  ; preds = %cond.end
  %funcs31 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %24 = ptrtoint ptr %funcs31 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %funcs31, align 4
  %tobool32.not = icmp eq ptr %25, null
  br i1 %tobool32.not, label %land.lhs.true28.cond.false50_crit_edge, label %land.lhs.true33

land.lhs.true28.cond.false50_crit_edge:           ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %sriov_rreg37 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %25, i32 0, i32 13
  %26 = ptrtoint ptr %sriov_rreg37 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sriov_rreg37, align 4
  %tobool38.not = icmp eq ptr %27, null
  br i1 %tobool38.not, label %land.lhs.true33.cond.false50_crit_edge, label %cond.true39

land.lhs.true33.cond.false50_crit_edge:           ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50

cond.true39:                                      ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx45 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx45, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add48 = add i32 %31, 7669
  %call49 = tail call i32 %27(ptr noundef %1, i32 noundef %add48, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end57

cond.false50:                                     ; preds = %land.lhs.true33.cond.false50_crit_edge, %land.lhs.true28.cond.false50_crit_edge, %cond.end.cond.false50_crit_edge
  %arrayidx52 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %32 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx52, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %add55 = add i32 %35, 7669
  %call56 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add55, i32 noundef 0) #13
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false50, %cond.true39
  %cond58 = phi i32 [ %call49, %cond.true39 ], [ %call56, %cond.false50 ]
  %conv59 = zext i32 %cond58 to i64
  %shl = shl nuw i64 %conv59, 32
  %add60 = or i64 %shl, %conv
  br label %if.end

if.end:                                           ; preds = %cond.end57, %if.then
  %wptr.0 = phi i64 [ %call.i, %if.then ], [ %add60, %cond.end57 ]
  ret i64 %wptr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_set_wptr_gfx(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %2 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %wb2 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb2, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr, align 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 8) #13
  tail call void @generic_atomic64_set(ptr noundef %arrayidx, i64 noundef %9) #13
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %10 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %doorbell_index, align 8
  %12 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %wptr, align 8
  tail call void @amdgpu_mm_wdoorbell64(ptr noundef %1, i32 noundef %11, i64 noundef %13) #13
  br label %if.end

if.else:                                          ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.else.cond.false_crit_edge, label %land.lhs.true

if.else.cond.false_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.else
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %17, null
  br i1 %tobool5.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg, align 4
  %tobool10.not = icmp eq ptr %19, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx15 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx15, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add = add i32 %23, 7668
  %wptr18 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %24 = ptrtoint ptr %wptr18 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %wptr18, align 8
  %conv = trunc i64 %25 to i32
  tail call void %19(ptr noundef %1, i32 noundef %add, i32 noundef %conv, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.else.cond.false_crit_edge
  %arrayidx21 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx21, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %add24 = add i32 %29, 7668
  %wptr25 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %30 = ptrtoint ptr %wptr25 to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr25, align 8
  %conv27 = trunc i64 %31 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add24, i32 noundef %conv27, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %32 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %virt, align 8
  %and30 = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %cond.end.cond.false56_crit_edge, label %land.lhs.true32

cond.end.cond.false56_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false56

land.lhs.true32:                                  ; preds = %cond.end
  %funcs35 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %34 = ptrtoint ptr %funcs35 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %funcs35, align 4
  %tobool36.not = icmp eq ptr %35, null
  br i1 %tobool36.not, label %land.lhs.true32.cond.false56_crit_edge, label %land.lhs.true37

land.lhs.true32.cond.false56_crit_edge:           ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false56

land.lhs.true37:                                  ; preds = %land.lhs.true32
  %sriov_wreg41 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %35, i32 0, i32 12
  %36 = ptrtoint ptr %sriov_wreg41 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sriov_wreg41, align 4
  %tobool42.not = icmp eq ptr %37, null
  br i1 %tobool42.not, label %land.lhs.true37.cond.false56_crit_edge, label %cond.true43

land.lhs.true37.cond.false56_crit_edge:           ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false56

cond.true43:                                      ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx49 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %38 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx49, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %add52 = add i32 %41, 7669
  %wptr53 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %42 = ptrtoint ptr %wptr53 to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %wptr53, align 8
  %shr = lshr i64 %43, 32
  %conv55 = trunc i64 %shr to i32
  tail call void %37(ptr noundef %1, i32 noundef %add52, i32 noundef %conv55, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false56:                                     ; preds = %land.lhs.true37.cond.false56_crit_edge, %land.lhs.true32.cond.false56_crit_edge, %cond.end.cond.false56_crit_edge
  %arrayidx58 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %44 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx58, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add61 = add i32 %47, 7669
  %wptr62 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %48 = ptrtoint ptr %wptr62 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %wptr62, align 8
  %shr63 = lshr i64 %49, 32
  %conv65 = trunc i64 %shr63 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add61, i32 noundef %conv65, i32 noundef 0) #13
  br label %if.end

if.end:                                           ; preds = %cond.false56, %cond.true43, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_ib_gfx(ptr noundef %ring, ptr noundef readonly %job, ptr nocapture noundef readonly %ib, i32 noundef %flags) #0 align 64 {
entry:
  %de_payload.i = alloca %struct.v10_de_ib_state, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %job, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %vmid1 = getelementptr inbounds %struct.amdgpu_job, ptr %job, i32 0, i32 12
  %0 = ptrtoint ptr %vmid1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vmid1, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %1, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %flags2 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 4
  %2 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags2, align 4
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  %. = select i1 %tobool3.not, i32 -1073594624, i32 -1073597696
  %length_dw = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 1
  %4 = ptrtoint ptr %length_dw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %length_dw, align 4
  %shl = shl i32 %cond, 24
  %or = or i32 %5, %shl
  %6 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %7, i32 0, i32 132
  %8 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %virt, align 8
  %and5 = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_mcbp to i32))
  %10 = load i32, ptr @amdgpu_mcbp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool7.not = icmp eq i32 %10, 0
  %and9 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  %or.cond112 = select i1 %tobool7.not, i1 true, i1 %tobool10.not
  br i1 %or.cond112, label %lor.lhs.false.if.end34_crit_edge, label %lor.lhs.false.if.then11_crit_edge

lor.lhs.false.if.then11_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then11

lor.lhs.false.if.end34_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end34

land.lhs.true:                                    ; preds = %cond.end
  %and9.old = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.old)
  %tobool10.not.old = icmp eq i32 %and9.old, 0
  br i1 %tobool10.not.old, label %land.lhs.true.if.end34_crit_edge, label %land.lhs.true.if.then11_crit_edge

land.lhs.true.if.then11_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then11

land.lhs.true.if.end34_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end34

if.then11:                                        ; preds = %land.lhs.true.if.then11_crit_edge, %lor.lhs.false.if.then11_crit_edge
  %and13 = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14 = icmp ne i32 %and13, 0
  %spec.select.v = select i1 %tobool14, i32 1075838976, i32 2097152
  %spec.select = or i32 %or, %spec.select.v
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool20.not = icmp ne i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %tobool22.not = icmp eq i32 %cond, 0
  %or.cond = select i1 %tobool20.not, i1 true, i1 %tobool22.not
  br i1 %or.cond, label %if.then11.if.end34_crit_edge, label %if.then23

if.then11.if.end34_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end34

if.then23:                                        ; preds = %if.then11
  %spec.select71 = and i1 %tobool14, %tobool6.not
  call void @llvm.lifetime.start.p0(i64 108, ptr nonnull %de_payload.i) #13
  %11 = call ptr @memset(ptr %de_payload.i, i32 0, i32 108)
  %call.i = tail call i64 @amdgpu_csa_vaddr(ptr noundef %7) #13
  %gds.i = getelementptr inbounds %struct.amdgpu_device, ptr %7, i32 0, i32 114
  %12 = ptrtoint ptr %gds.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gds.i, align 8
  %conv.i = zext i32 %13 to i64
  %sub.i = add i64 %call.i, 135167
  %add3.i = sub i64 %sub.i, %conv.i
  %14 = trunc i64 %add3.i to i32
  %conv5.i = and i32 %14, -4096
  %gds_backup_addrlo.i = getelementptr inbounds %struct.v10_de_ib_state, ptr %de_payload.i, i32 0, i32 22
  %15 = ptrtoint ptr %gds_backup_addrlo.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv5.i, ptr %gds_backup_addrlo.i, align 4
  %shr.i = lshr i64 %add3.i, 32
  %conv7.i = trunc i64 %shr.i to i32
  %gds_backup_addrhi.i = getelementptr inbounds %struct.v10_de_ib_state, ptr %de_payload.i, i32 0, i32 23
  %16 = ptrtoint ptr %gds_backup_addrhi.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %conv7.i, ptr %gds_backup_addrhi.i, align 4
  %count_dw.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %17 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %18)
  %cmp.i.i = icmp slt i32 %18, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then23.amdgpu_ring_write.exit.i_crit_edge

if.then23.amdgpu_ring_write.exit.i_crit_edge:     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit.i

if.then.i.i:                                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit.i

amdgpu_ring_write.exit.i:                         ; preds = %if.then.i.i, %if.then23.amdgpu_ring_write.exit.i_crit_edge
  %ring1.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %19 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ring1.i.i, align 4
  %wptr.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %21 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %wptr.i.i, align 8
  %inc.i.i = add i64 %22, 1
  store i64 %inc.i.i, ptr %wptr.i.i, align 8
  %buf_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %23 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %buf_mask.i.i, align 8
  %25 = trunc i64 %22 to i32
  %idxprom.i.i = and i32 %24, %25
  %arrayidx.i.i = getelementptr i32, ptr %20, i32 %idxprom.i.i
  %26 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 -1071827200, ptr %arrayidx.i.i, align 4
  %ptr_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %27 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ptr_mask.i.i, align 8
  %29 = load i64, ptr %wptr.i.i, align 8
  %and3.i.i = and i64 %29, %28
  store i64 %and3.i.i, ptr %wptr.i.i, align 8
  %30 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %count_dw.i.i, align 8
  %dec.i.i = add i32 %31, -1
  store i32 %dec.i.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i.i)
  %cmp.i28.i = icmp slt i32 %dec.i.i, 1
  br i1 %cmp.i28.i, label %if.then.i29.i, label %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit39.i_crit_edge

amdgpu_ring_write.exit.i.amdgpu_ring_write.exit39.i_crit_edge: ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit39.i

if.then.i29.i:                                    ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit39.i

amdgpu_ring_write.exit39.i:                       ; preds = %if.then.i29.i, %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit39.i_crit_edge
  %32 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ring1.i.i, align 4
  %34 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %wptr.i.i, align 8
  %inc.i32.i = add i64 %35, 1
  store i64 %inc.i32.i, ptr %wptr.i.i, align 8
  %36 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %buf_mask.i.i, align 8
  %38 = trunc i64 %35 to i32
  %idxprom.i34.i = and i32 %37, %38
  %arrayidx.i35.i = getelementptr i32, ptr %33, i32 %idxprom.i34.i
  %39 = ptrtoint ptr %arrayidx.i35.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 1074792448, ptr %arrayidx.i35.i, align 4
  %40 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %ptr_mask.i.i, align 8
  %42 = load i64, ptr %wptr.i.i, align 8
  %and3.i37.i = and i64 %42, %41
  store i64 %and3.i37.i, ptr %wptr.i.i, align 8
  %43 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %count_dw.i.i, align 8
  %dec.i38.i = add i32 %44, -1
  store i32 %dec.i38.i, ptr %count_dw.i.i, align 8
  %add9.i = add i64 %call.i, 256
  %conv11.i = trunc i64 %add9.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i38.i)
  %cmp.i41.i = icmp slt i32 %dec.i38.i, 1
  br i1 %cmp.i41.i, label %if.then.i42.i, label %amdgpu_ring_write.exit39.i.amdgpu_ring_write.exit52.i_crit_edge

amdgpu_ring_write.exit39.i.amdgpu_ring_write.exit52.i_crit_edge: ; preds = %amdgpu_ring_write.exit39.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit52.i

if.then.i42.i:                                    ; preds = %amdgpu_ring_write.exit39.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit52.i

amdgpu_ring_write.exit52.i:                       ; preds = %if.then.i42.i, %amdgpu_ring_write.exit39.i.amdgpu_ring_write.exit52.i_crit_edge
  %45 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ring1.i.i, align 4
  %47 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %wptr.i.i, align 8
  %inc.i45.i = add i64 %48, 1
  store i64 %inc.i45.i, ptr %wptr.i.i, align 8
  %49 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %buf_mask.i.i, align 8
  %51 = trunc i64 %48 to i32
  %idxprom.i47.i = and i32 %50, %51
  %arrayidx.i48.i = getelementptr i32, ptr %46, i32 %idxprom.i47.i
  %52 = ptrtoint ptr %arrayidx.i48.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 %conv11.i, ptr %arrayidx.i48.i, align 4
  %53 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %ptr_mask.i.i, align 8
  %55 = load i64, ptr %wptr.i.i, align 8
  %and3.i50.i = and i64 %55, %54
  store i64 %and3.i50.i, ptr %wptr.i.i, align 8
  %56 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %count_dw.i.i, align 8
  %dec.i51.i = add i32 %57, -1
  store i32 %dec.i51.i, ptr %count_dw.i.i, align 8
  %shr13.i = lshr i64 %add9.i, 32
  %conv15.i = trunc i64 %shr13.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i51.i)
  %cmp.i54.i = icmp slt i32 %dec.i51.i, 1
  br i1 %cmp.i54.i, label %if.then.i55.i, label %amdgpu_ring_write.exit52.i.amdgpu_ring_write.exit65.i_crit_edge

amdgpu_ring_write.exit52.i.amdgpu_ring_write.exit65.i_crit_edge: ; preds = %amdgpu_ring_write.exit52.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit65.i

if.then.i55.i:                                    ; preds = %amdgpu_ring_write.exit52.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit65.i

amdgpu_ring_write.exit65.i:                       ; preds = %if.then.i55.i, %amdgpu_ring_write.exit52.i.amdgpu_ring_write.exit65.i_crit_edge
  %58 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %ring1.i.i, align 4
  %60 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %wptr.i.i, align 8
  %inc.i58.i = add i64 %61, 1
  store i64 %inc.i58.i, ptr %wptr.i.i, align 8
  %62 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %buf_mask.i.i, align 8
  %64 = trunc i64 %61 to i32
  %idxprom.i60.i = and i32 %63, %64
  %arrayidx.i61.i = getelementptr i32, ptr %59, i32 %idxprom.i60.i
  %65 = ptrtoint ptr %arrayidx.i61.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile i32 %conv15.i, ptr %arrayidx.i61.i, align 4
  %66 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %ptr_mask.i.i, align 8
  %68 = load i64, ptr %wptr.i.i, align 8
  %and3.i63.i = and i64 %68, %67
  store i64 %and3.i63.i, ptr %wptr.i.i, align 8
  %69 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %count_dw.i.i, align 8
  %dec.i64.i = add i32 %70, -1
  store i32 %dec.i64.i, ptr %count_dw.i.i, align 8
  br i1 %spec.select71, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %amdgpu_ring_write.exit65.i
  %csa_cpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %7, i32 0, i32 132, i32 2
  %71 = ptrtoint ptr %csa_cpu_addr.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %csa_cpu_addr.i, align 8
  %add.ptr.i = getelementptr i8, ptr %72, i32 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %dec.i64.i)
  %cmp.i66.i = icmp slt i32 %dec.i64.i, 27
  br i1 %cmp.i66.i, label %if.then.i67.i, label %if.then.i.if.end.i.i_crit_edge, !prof !490

if.then.i.if.end.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

if.then.i67.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i67.i, %if.then.i.if.end.i.i_crit_edge
  %73 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %wptr.i.i, align 8
  %75 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %buf_mask.i.i, align 8
  %77 = trunc i64 %74 to i32
  %conv3.i.i = and i32 %76, %77
  %add.i.i = add i32 %76, 1
  %sub.i.i = sub i32 %add.i.i, %conv3.i.i
  %78 = tail call i32 @llvm.umin.i32(i32 %sub.i.i, i32 27) #13
  %shl.i.i = shl nuw nsw i32 %78, 2
  %.neg97.i = mul nsw i32 %78, -4
  %shl9.i.i = add nsw i32 %.neg97.i, 108
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool10.not.i.i = icmp eq i32 %78, 0
  br i1 %tobool10.not.i.i, label %if.end.i.i.if.end12.i.i_crit_edge, label %if.then11.i.i

if.end.i.i.if.end12.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %79 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %ring1.i.i, align 4
  %arrayidx.i70.i = getelementptr i32, ptr %80, i32 %conv3.i.i
  %81 = call ptr @memcpy(ptr %arrayidx.i70.i, ptr %add.ptr.i, i32 %shl.i.i)
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.then11.i.i, %if.end.i.i.if.end12.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl9.i.i)
  %tobool13.not.i.i = icmp eq i32 %shl9.i.i, 0
  br i1 %tobool13.not.i.i, label %if.end12.i.i.gfx_v10_0_ring_emit_de_meta.exit_crit_edge, label %if.then14.i.i

if.end12.i.i.gfx_v10_0_ring_emit_de_meta.exit_crit_edge: ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_ring_emit_de_meta.exit

if.then14.i.i:                                    ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i, i32 %shl.i.i
  %82 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ring1.i.i, align 4
  %84 = call ptr @memcpy(ptr %83, ptr %add.ptr.i.i, i32 %shl9.i.i)
  br label %gfx_v10_0_ring_emit_de_meta.exit

if.else.i:                                        ; preds = %amdgpu_ring_write.exit65.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %dec.i64.i)
  %cmp.i73.i = icmp slt i32 %dec.i64.i, 27
  br i1 %cmp.i73.i, label %if.then.i74.i, label %if.else.i.if.end.i85.i_crit_edge, !prof !490

if.else.i.if.end.i85.i_crit_edge:                 ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i85.i

if.then.i74.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %if.end.i85.i

if.end.i85.i:                                     ; preds = %if.then.i74.i, %if.else.i.if.end.i85.i_crit_edge
  %85 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %wptr.i.i, align 8
  %87 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %buf_mask.i.i, align 8
  %89 = trunc i64 %86 to i32
  %conv3.i77.i = and i32 %88, %89
  %add.i79.i = add i32 %88, 1
  %sub.i80.i = sub i32 %add.i79.i, %conv3.i77.i
  %90 = tail call i32 @llvm.umin.i32(i32 %sub.i80.i, i32 27) #13
  %shl.i82.i = shl nuw nsw i32 %90, 2
  %.neg.i = mul nsw i32 %90, -4
  %shl9.i83.i = add nsw i32 %.neg.i, 108
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool10.not.i84.i = icmp eq i32 %90, 0
  br i1 %tobool10.not.i84.i, label %if.end.i85.i.if.end12.i89.i_crit_edge, label %if.then11.i87.i

if.end.i85.i.if.end12.i89.i_crit_edge:            ; preds = %if.end.i85.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12.i89.i

if.then11.i87.i:                                  ; preds = %if.end.i85.i
  call void @__sanitizer_cov_trace_pc() #15
  %91 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %ring1.i.i, align 4
  %arrayidx.i86.i = getelementptr i32, ptr %92, i32 %conv3.i77.i
  %93 = call ptr @memcpy(ptr %arrayidx.i86.i, ptr %de_payload.i, i32 %shl.i82.i)
  br label %if.end12.i89.i

if.end12.i89.i:                                   ; preds = %if.then11.i87.i, %if.end.i85.i.if.end12.i89.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl9.i83.i)
  %tobool13.not.i88.i = icmp eq i32 %shl9.i83.i, 0
  br i1 %tobool13.not.i88.i, label %if.end12.i89.i.gfx_v10_0_ring_emit_de_meta.exit_crit_edge, label %if.then14.i91.i

if.end12.i89.i.gfx_v10_0_ring_emit_de_meta.exit_crit_edge: ; preds = %if.end12.i89.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_ring_emit_de_meta.exit

if.then14.i91.i:                                  ; preds = %if.end12.i89.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i90.i = getelementptr i8, ptr %de_payload.i, i32 %shl.i82.i
  %94 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %ring1.i.i, align 4
  %96 = call ptr @memcpy(ptr %95, ptr %add.ptr.i90.i, i32 %shl9.i83.i)
  br label %gfx_v10_0_ring_emit_de_meta.exit

gfx_v10_0_ring_emit_de_meta.exit:                 ; preds = %if.then14.i91.i, %if.end12.i89.i.gfx_v10_0_ring_emit_de_meta.exit_crit_edge, %if.then14.i.i, %if.end12.i.i.gfx_v10_0_ring_emit_de_meta.exit_crit_edge
  %97 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %wptr.i.i, align 8
  %add19.i92.i = add i64 %98, 27
  %99 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %99)
  %100 = load i64, ptr %ptr_mask.i.i, align 8
  %and21.i94.i = and i64 %100, %add19.i92.i
  store i64 %and21.i94.i, ptr %wptr.i.i, align 8
  %101 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %storemerge.in.i = load i32, ptr %count_dw.i.i, align 8
  %storemerge.i = add i32 %storemerge.in.i, -27
  store i32 %storemerge.i, ptr %count_dw.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 108, ptr nonnull %de_payload.i) #13
  br label %if.end34

if.end34:                                         ; preds = %gfx_v10_0_ring_emit_de_meta.exit, %if.then11.if.end34_crit_edge, %land.lhs.true.if.end34_crit_edge, %lor.lhs.false.if.end34_crit_edge
  %control.1 = phi i32 [ %spec.select, %if.then11.if.end34_crit_edge ], [ %spec.select, %gfx_v10_0_ring_emit_de_meta.exit ], [ %or, %land.lhs.true.if.end34_crit_edge ], [ %or, %lor.lhs.false.if.end34_crit_edge ]
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %102 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %103)
  %cmp.i = icmp slt i32 %103, 1
  br i1 %cmp.i, label %if.then.i72, label %if.end34.amdgpu_ring_write.exit_crit_edge

if.end34.amdgpu_ring_write.exit_crit_edge:        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i72:                                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i72, %if.end34.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %104 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %106 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %106)
  %107 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %107, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %108 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %buf_mask.i, align 8
  %110 = trunc i64 %107 to i32
  %idxprom.i = and i32 %109, %110
  %arrayidx.i = getelementptr i32, ptr %105, i32 %idxprom.i
  %111 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store volatile i32 %., ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %112 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %ptr_mask.i, align 8
  %114 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %114, %113
  store i64 %and3.i, ptr %wptr.i, align 8
  %115 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %116, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %gpu_addr = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 2
  %117 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %117)
  %118 = load i64, ptr %gpu_addr, align 8
  %and35 = and i64 %118, 3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and35)
  %tobool36.not = icmp eq i64 %and35, 0
  br i1 %tobool36.not, label %do.end46, label %do.body40, !prof !481

do.body40:                                        ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8607, 0\0A.popsection", ""() #13, !srcloc !491
  unreachable

do.end46:                                         ; preds = %amdgpu_ring_write.exit
  %conv = trunc i64 %118 to i32
  %or49 = or i32 %conv, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i74 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i74, label %if.then.i75, label %do.end46.amdgpu_ring_write.exit85_crit_edge

do.end46.amdgpu_ring_write.exit85_crit_edge:      ; preds = %do.end46
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit85

if.then.i75:                                      ; preds = %do.end46
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit85

amdgpu_ring_write.exit85:                         ; preds = %if.then.i75, %do.end46.amdgpu_ring_write.exit85_crit_edge
  %119 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %ring1.i, align 4
  %121 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %121)
  %122 = load i64, ptr %wptr.i, align 8
  %inc.i78 = add i64 %122, 1
  store i64 %inc.i78, ptr %wptr.i, align 8
  %123 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %buf_mask.i, align 8
  %125 = trunc i64 %122 to i32
  %idxprom.i80 = and i32 %124, %125
  %arrayidx.i81 = getelementptr i32, ptr %120, i32 %idxprom.i80
  %126 = ptrtoint ptr %arrayidx.i81 to i32
  call void @__asan_store4_noabort(i32 %126)
  store volatile i32 %or49, ptr %arrayidx.i81, align 4
  %127 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %ptr_mask.i, align 8
  %129 = load i64, ptr %wptr.i, align 8
  %and3.i83 = and i64 %129, %128
  store i64 %and3.i83, ptr %wptr.i, align 8
  %130 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %count_dw.i, align 8
  %dec.i84 = add i32 %131, -1
  store i32 %dec.i84, ptr %count_dw.i, align 8
  %132 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %132)
  %133 = load i64, ptr %gpu_addr, align 8
  %shr = lshr i64 %133, 32
  %conv52 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i84)
  %cmp.i87 = icmp slt i32 %dec.i84, 1
  br i1 %cmp.i87, label %if.then.i88, label %amdgpu_ring_write.exit85.amdgpu_ring_write.exit98_crit_edge

amdgpu_ring_write.exit85.amdgpu_ring_write.exit98_crit_edge: ; preds = %amdgpu_ring_write.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit98

if.then.i88:                                      ; preds = %amdgpu_ring_write.exit85
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit98

amdgpu_ring_write.exit98:                         ; preds = %if.then.i88, %amdgpu_ring_write.exit85.amdgpu_ring_write.exit98_crit_edge
  %134 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %ring1.i, align 4
  %136 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %wptr.i, align 8
  %inc.i91 = add i64 %137, 1
  store i64 %inc.i91, ptr %wptr.i, align 8
  %138 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %buf_mask.i, align 8
  %140 = trunc i64 %137 to i32
  %idxprom.i93 = and i32 %139, %140
  %arrayidx.i94 = getelementptr i32, ptr %135, i32 %idxprom.i93
  %141 = ptrtoint ptr %arrayidx.i94 to i32
  call void @__asan_store4_noabort(i32 %141)
  store volatile i32 %conv52, ptr %arrayidx.i94, align 4
  %142 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %142)
  %143 = load i64, ptr %ptr_mask.i, align 8
  %144 = load i64, ptr %wptr.i, align 8
  %and3.i96 = and i64 %144, %143
  store i64 %and3.i96, ptr %wptr.i, align 8
  %145 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %count_dw.i, align 8
  %dec.i97 = add i32 %146, -1
  store i32 %dec.i97, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i97)
  %cmp.i100 = icmp slt i32 %dec.i97, 1
  br i1 %cmp.i100, label %if.then.i101, label %amdgpu_ring_write.exit98.amdgpu_ring_write.exit111_crit_edge

amdgpu_ring_write.exit98.amdgpu_ring_write.exit111_crit_edge: ; preds = %amdgpu_ring_write.exit98
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit111

if.then.i101:                                     ; preds = %amdgpu_ring_write.exit98
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit111

amdgpu_ring_write.exit111:                        ; preds = %if.then.i101, %amdgpu_ring_write.exit98.amdgpu_ring_write.exit111_crit_edge
  %147 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %ring1.i, align 4
  %149 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %149)
  %150 = load i64, ptr %wptr.i, align 8
  %inc.i104 = add i64 %150, 1
  store i64 %inc.i104, ptr %wptr.i, align 8
  %151 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %buf_mask.i, align 8
  %153 = trunc i64 %150 to i32
  %idxprom.i106 = and i32 %152, %153
  %arrayidx.i107 = getelementptr i32, ptr %148, i32 %idxprom.i106
  %154 = ptrtoint ptr %arrayidx.i107 to i32
  call void @__asan_store4_noabort(i32 %154)
  store volatile i32 %control.1, ptr %arrayidx.i107, align 4
  %155 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %155)
  %156 = load i64, ptr %ptr_mask.i, align 8
  %157 = load i64, ptr %wptr.i, align 8
  %and3.i109 = and i64 %157, %156
  store i64 %and3.i109, ptr %wptr.i, align 8
  %158 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %count_dw.i, align 8
  %dec.i110 = add i32 %159, -1
  store i32 %dec.i110, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_fence(ptr noundef %ring, i64 noundef %addr, i64 noundef %seq, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073329920, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i62 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i62, label %if.then.i63, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit73_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit73_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit73

if.then.i63:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit73

amdgpu_ring_write.exit73:                         ; preds = %if.then.i63, %amdgpu_ring_write.exit.amdgpu_ring_write.exit73_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i66 = add i64 %18, 1
  store i64 %inc.i66, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i68 = and i32 %20, %21
  %arrayidx.i69 = getelementptr i32, ptr %16, i32 %idxprom.i68
  %22 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 106968340, ptr %arrayidx.i69, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i71 = and i64 %25, %24
  store i64 %and3.i71, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i72 = add i32 %27, -1
  store i32 %dec.i72, ptr %count_dw.i, align 8
  %cond = select i1 %tobool.not, i32 536870912, i32 1073741824
  %and1 = shl i32 %flags, 24
  %shl7 = and i32 %and1, 33554432
  %or = or i32 %cond, %shl7
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i72)
  %cmp.i75 = icmp slt i32 %dec.i72, 1
  br i1 %cmp.i75, label %if.then.i76, label %amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge

amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge: ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit86

if.then.i76:                                      ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit86

amdgpu_ring_write.exit86:                         ; preds = %if.then.i76, %amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i79 = add i64 %31, 1
  store i64 %inc.i79, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i81 = and i32 %33, %34
  %arrayidx.i82 = getelementptr i32, ptr %29, i32 %idxprom.i81
  %35 = ptrtoint ptr %arrayidx.i82 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %or, ptr %arrayidx.i82, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i84 = and i64 %38, %37
  store i64 %and3.i84, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i85 = add i32 %40, -1
  store i32 %dec.i85, ptr %count_dw.i, align 8
  br i1 %tobool.not, label %do.body20, label %do.body

do.body:                                          ; preds = %amdgpu_ring_write.exit86
  %and9 = and i64 %addr, 7
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and9)
  %tobool10.not = icmp eq i64 %and9, 0
  br i1 %tobool10.not, label %do.body.if.end39_crit_edge, label %do.body14, !prof !481

do.body.if.end39_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end39

do.body14:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8675, 0\0A.popsection", ""() #13, !srcloc !492
  unreachable

do.body20:                                        ; preds = %amdgpu_ring_write.exit86
  %and21 = and i64 %addr, 3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21)
  %tobool22.not = icmp eq i64 %and21, 0
  br i1 %tobool22.not, label %do.body20.if.end39_crit_edge, label %do.body30, !prof !481

do.body20.if.end39_crit_edge:                     ; preds = %do.body20
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end39

do.body30:                                        ; preds = %do.body20
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8677, 0\0A.popsection", ""() #13, !srcloc !493
  unreachable

if.end39:                                         ; preds = %do.body20.if.end39_crit_edge, %do.body.if.end39_crit_edge
  %conv = trunc i64 %addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i85)
  %cmp.i88 = icmp slt i32 %dec.i85, 1
  br i1 %cmp.i88, label %if.then.i89, label %if.end39.amdgpu_ring_write.exit99_crit_edge

if.end39.amdgpu_ring_write.exit99_crit_edge:      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit99

if.then.i89:                                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit99

amdgpu_ring_write.exit99:                         ; preds = %if.then.i89, %if.end39.amdgpu_ring_write.exit99_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i92 = add i64 %44, 1
  store i64 %inc.i92, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i94 = and i32 %46, %47
  %arrayidx.i95 = getelementptr i32, ptr %42, i32 %idxprom.i94
  %48 = ptrtoint ptr %arrayidx.i95 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %conv, ptr %arrayidx.i95, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i97 = and i64 %51, %50
  store i64 %and3.i97, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i98 = add i32 %53, -1
  store i32 %dec.i98, ptr %count_dw.i, align 8
  %shr = lshr i64 %addr, 32
  %conv42 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i98)
  %cmp.i101 = icmp slt i32 %dec.i98, 1
  br i1 %cmp.i101, label %if.then.i102, label %amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge

amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge: ; preds = %amdgpu_ring_write.exit99
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit112

if.then.i102:                                     ; preds = %amdgpu_ring_write.exit99
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit112

amdgpu_ring_write.exit112:                        ; preds = %if.then.i102, %amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i105 = add i64 %57, 1
  store i64 %inc.i105, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i107 = and i32 %59, %60
  %arrayidx.i108 = getelementptr i32, ptr %55, i32 %idxprom.i107
  %61 = ptrtoint ptr %arrayidx.i108 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 %conv42, ptr %arrayidx.i108, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i110 = and i64 %64, %63
  store i64 %and3.i110, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i111 = add i32 %66, -1
  store i32 %dec.i111, ptr %count_dw.i, align 8
  %conv44 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i111)
  %cmp.i114 = icmp slt i32 %dec.i111, 1
  br i1 %cmp.i114, label %if.then.i115, label %amdgpu_ring_write.exit112.amdgpu_ring_write.exit125_crit_edge

amdgpu_ring_write.exit112.amdgpu_ring_write.exit125_crit_edge: ; preds = %amdgpu_ring_write.exit112
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit125

if.then.i115:                                     ; preds = %amdgpu_ring_write.exit112
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit125

amdgpu_ring_write.exit125:                        ; preds = %if.then.i115, %amdgpu_ring_write.exit112.amdgpu_ring_write.exit125_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i118 = add i64 %70, 1
  store i64 %inc.i118, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i120 = and i32 %72, %73
  %arrayidx.i121 = getelementptr i32, ptr %68, i32 %idxprom.i120
  %74 = ptrtoint ptr %arrayidx.i121 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 %conv44, ptr %arrayidx.i121, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i123 = and i64 %77, %76
  store i64 %and3.i123, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i124 = add i32 %79, -1
  store i32 %dec.i124, ptr %count_dw.i, align 8
  %shr45 = lshr i64 %seq, 32
  %conv47 = trunc i64 %shr45 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i124)
  %cmp.i127 = icmp slt i32 %dec.i124, 1
  br i1 %cmp.i127, label %if.then.i128, label %amdgpu_ring_write.exit125.amdgpu_ring_write.exit138_crit_edge

amdgpu_ring_write.exit125.amdgpu_ring_write.exit138_crit_edge: ; preds = %amdgpu_ring_write.exit125
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit138

if.then.i128:                                     ; preds = %amdgpu_ring_write.exit125
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit138

amdgpu_ring_write.exit138:                        ; preds = %if.then.i128, %amdgpu_ring_write.exit125.amdgpu_ring_write.exit138_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i131 = add i64 %83, 1
  store i64 %inc.i131, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i133 = and i32 %85, %86
  %arrayidx.i134 = getelementptr i32, ptr %81, i32 %idxprom.i133
  %87 = ptrtoint ptr %arrayidx.i134 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 %conv47, ptr %arrayidx.i134, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i136 = and i64 %90, %89
  store i64 %and3.i136, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i137 = add i32 %92, -1
  store i32 %dec.i137, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i137)
  %cmp.i140 = icmp slt i32 %dec.i137, 1
  br i1 %cmp.i140, label %if.then.i141, label %amdgpu_ring_write.exit138.amdgpu_ring_write.exit151_crit_edge

amdgpu_ring_write.exit138.amdgpu_ring_write.exit151_crit_edge: ; preds = %amdgpu_ring_write.exit138
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit151

if.then.i141:                                     ; preds = %amdgpu_ring_write.exit138
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit151

amdgpu_ring_write.exit151:                        ; preds = %if.then.i141, %amdgpu_ring_write.exit138.amdgpu_ring_write.exit151_crit_edge
  %93 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %ring1.i, align 4
  %95 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %wptr.i, align 8
  %inc.i144 = add i64 %96, 1
  store i64 %inc.i144, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %buf_mask.i, align 8
  %99 = trunc i64 %96 to i32
  %idxprom.i146 = and i32 %98, %99
  %arrayidx.i147 = getelementptr i32, ptr %94, i32 %idxprom.i146
  %100 = ptrtoint ptr %arrayidx.i147 to i32
  call void @__asan_store4_noabort(i32 %100)
  store volatile i32 0, ptr %arrayidx.i147, align 4
  %101 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %ptr_mask.i, align 8
  %103 = load i64, ptr %wptr.i, align 8
  %and3.i149 = and i64 %103, %102
  store i64 %and3.i149, ptr %wptr.i, align 8
  %104 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %count_dw.i, align 8
  %dec.i150 = add i32 %105, -1
  store i32 %dec.i150, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_pipeline_sync(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %conv = zext i1 %cmp to i32
  %fence_drv = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 2
  %sync_seq = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %sync_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sync_seq, align 4
  %6 = ptrtoint ptr %fence_drv to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %fence_drv, align 8
  %conv2 = trunc i64 %7 to i32
  %shr = lshr i64 %7, 32
  %conv4 = trunc i64 %shr to i32
  tail call fastcc void @gfx_v10_0_wait_reg_mem(ptr noundef %ring, i32 noundef %conv, i32 noundef 1, i32 noundef 0, i32 noundef %conv2, i32 noundef %conv4, i32 noundef %5, i32 noundef -1, i32 noundef 4)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_vm_flush(ptr noundef %ring, i32 noundef %vmid, i64 noundef %pd_addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %gmc_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 62, i32 38
  %2 = ptrtoint ptr %gmc_funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %gmc_funcs, align 4
  %emit_flush_gpu_tlb = getelementptr inbounds %struct.amdgpu_gmc_funcs, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %emit_flush_gpu_tlb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %emit_flush_gpu_tlb, align 4
  %call = tail call i64 %5(ptr noundef %ring, i32 noundef %vmid, i64 noundef %pd_addr) #13
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %10 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp.i = icmp slt i32 %11, 1
  br i1 %cmp.i, label %if.then.i, label %if.then.amdgpu_ring_write.exit_crit_edge

if.then.amdgpu_ring_write.exit_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.then.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %12 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %14 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %15, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %16 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %buf_mask.i, align 8
  %18 = trunc i64 %15 to i32
  %idxprom.i = and i32 %17, %18
  %arrayidx.i = getelementptr i32, ptr %13, i32 %idxprom.i
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 -1073724928, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %20 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %ptr_mask.i, align 8
  %22 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %22, %21
  store i64 %and3.i, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %24, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i6 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i6, label %if.then.i7, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit17

if.then.i7:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit17

amdgpu_ring_write.exit17:                         ; preds = %if.then.i7, %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge
  %25 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ring1.i, align 4
  %27 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %wptr.i, align 8
  %inc.i10 = add i64 %28, 1
  store i64 %inc.i10, ptr %wptr.i, align 8
  %29 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %buf_mask.i, align 8
  %31 = trunc i64 %28 to i32
  %idxprom.i12 = and i32 %30, %31
  %arrayidx.i13 = getelementptr i32, ptr %26, i32 %idxprom.i12
  %32 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile i32 0, ptr %arrayidx.i13, align 4
  %33 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %ptr_mask.i, align 8
  %35 = load i64, ptr %wptr.i, align 8
  %and3.i15 = and i64 %35, %34
  store i64 %and3.i15, ptr %wptr.i, align 8
  %36 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %count_dw.i, align 8
  %dec.i16 = add i32 %37, -1
  store i32 %dec.i16, ptr %count_dw.i, align 8
  br label %if.end

if.end:                                           ; preds = %amdgpu_ring_write.exit17, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_hdp_flush(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %nbio = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 101
  %2 = ptrtoint ptr %nbio to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nbio, align 8
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp = icmp eq i32 %7, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %me = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 16
  %8 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %me, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.130)
  switch i32 %9, label %if.then.cleanup_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ]

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb:                                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %ref_and_mask_cp2 = getelementptr inbounds %struct.nbio_hdp_flush_reg, ptr %3, i32 0, i32 2
  %11 = ptrtoint ptr %ref_and_mask_cp2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ref_and_mask_cp2, align 4
  %pipe = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 17
  %13 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pipe, align 4
  %shl = shl i32 %12, %14
  br label %if.end

sw.bb2:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %ref_and_mask_cp6 = getelementptr inbounds %struct.nbio_hdp_flush_reg, ptr %3, i32 0, i32 6
  %15 = ptrtoint ptr %ref_and_mask_cp6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ref_and_mask_cp6, align 4
  %pipe3 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 17
  %17 = ptrtoint ptr %pipe3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %pipe3, align 4
  %shl4 = shl i32 %16, %18
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %19 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %sw.bb2, %sw.bb
  %ref_and_mask.1 = phi i32 [ %20, %if.else ], [ %shl4, %sw.bb2 ], [ %shl, %sw.bb ]
  %reg_mem_engine.0 = phi i32 [ 1, %if.else ], [ 0, %sw.bb2 ], [ 0, %sw.bb ]
  %funcs6 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 101, i32 4
  %21 = ptrtoint ptr %funcs6 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %funcs6, align 8
  %get_hdp_flush_req_offset = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %get_hdp_flush_req_offset to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %get_hdp_flush_req_offset, align 4
  %call = tail call i32 %24(ptr noundef %1) #13
  %25 = ptrtoint ptr %funcs6 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %funcs6, align 8
  %get_hdp_flush_done_offset = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %get_hdp_flush_done_offset to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %get_hdp_flush_done_offset, align 4
  %call9 = tail call i32 %28(ptr noundef %1) #13
  tail call fastcc void @gfx_v10_0_wait_reg_mem(ptr noundef %ring, i32 noundef %reg_mem_engine.0, i32 noundef 0, i32 noundef 1, i32 noundef %call, i32 noundef %call9, i32 noundef %ref_and_mask.1, i32 noundef %ref_and_mask.1, i32 noundef 32)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_gds_switch(ptr noundef %ring, i32 noundef %vmid, i32 noundef %gds_base, i32 noundef %gds_size, i32 noundef %gws_base, i32 noundef %gws_size, i32 noundef %oa_base, i32 noundef %oa_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %mul = shl i32 %vmid, 1
  %add = add i32 %mul, 8352
  %add4 = add i32 %add, %5
  tail call fastcc void @gfx_v10_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add4, i32 noundef %gds_base)
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add9 = add i32 %mul, 8353
  %add11 = add i32 %add9, %9
  tail call fastcc void @gfx_v10_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add11, i32 noundef %gds_size)
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add16 = add i32 %vmid, 8384
  %add17 = add i32 %add16, %13
  %shl = shl i32 %gws_size, 16
  %or = or i32 %shl, %gws_base
  tail call fastcc void @gfx_v10_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add17, i32 noundef %or)
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add22 = add i32 %vmid, 8400
  %add23 = add i32 %add22, %17
  %add24 = add i32 %oa_size, %oa_base
  %shl25 = shl nuw i32 1, %add24
  %shl26.neg = shl nsw i32 -1, %oa_base
  %sub = add i32 %shl25, %shl26.neg
  tail call fastcc void @gfx_v10_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add23, i32 noundef %sub)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_ring_emit_init_cond_exec(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073536512, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %cond_exe_gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 35
  %15 = ptrtoint ptr %cond_exe_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %cond_exe_gpu_addr, align 8
  %conv = trunc i64 %16 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i16 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i16, label %if.then.i17, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit27_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit27_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit27

if.then.i17:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit27

amdgpu_ring_write.exit27:                         ; preds = %if.then.i17, %amdgpu_ring_write.exit.amdgpu_ring_write.exit27_crit_edge
  %17 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ring1.i, align 4
  %19 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %wptr.i, align 8
  %inc.i20 = add i64 %20, 1
  store i64 %inc.i20, ptr %wptr.i, align 8
  %21 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %buf_mask.i, align 8
  %23 = trunc i64 %20 to i32
  %idxprom.i22 = and i32 %22, %23
  %arrayidx.i23 = getelementptr i32, ptr %18, i32 %idxprom.i22
  %24 = ptrtoint ptr %arrayidx.i23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 %conv, ptr %arrayidx.i23, align 4
  %25 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %ptr_mask.i, align 8
  %27 = load i64, ptr %wptr.i, align 8
  %and3.i25 = and i64 %27, %26
  store i64 %and3.i25, ptr %wptr.i, align 8
  %28 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %count_dw.i, align 8
  %dec.i26 = add i32 %29, -1
  store i32 %dec.i26, ptr %count_dw.i, align 8
  %30 = ptrtoint ptr %cond_exe_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %cond_exe_gpu_addr, align 8
  %shr = lshr i64 %31, 32
  %conv3 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i26)
  %cmp.i29 = icmp slt i32 %dec.i26, 1
  br i1 %cmp.i29, label %if.then.i30, label %amdgpu_ring_write.exit27.amdgpu_ring_write.exit40_crit_edge

amdgpu_ring_write.exit27.amdgpu_ring_write.exit40_crit_edge: ; preds = %amdgpu_ring_write.exit27
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit40

if.then.i30:                                      ; preds = %amdgpu_ring_write.exit27
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit40

amdgpu_ring_write.exit40:                         ; preds = %if.then.i30, %amdgpu_ring_write.exit27.amdgpu_ring_write.exit40_crit_edge
  %32 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ring1.i, align 4
  %34 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %wptr.i, align 8
  %inc.i33 = add i64 %35, 1
  store i64 %inc.i33, ptr %wptr.i, align 8
  %36 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %buf_mask.i, align 8
  %38 = trunc i64 %35 to i32
  %idxprom.i35 = and i32 %37, %38
  %arrayidx.i36 = getelementptr i32, ptr %33, i32 %idxprom.i35
  %39 = ptrtoint ptr %arrayidx.i36 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 %conv3, ptr %arrayidx.i36, align 4
  %40 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %ptr_mask.i, align 8
  %42 = load i64, ptr %wptr.i, align 8
  %and3.i38 = and i64 %42, %41
  store i64 %and3.i38, ptr %wptr.i, align 8
  %43 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %count_dw.i, align 8
  %dec.i39 = add i32 %44, -1
  store i32 %dec.i39, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i39)
  %cmp.i42 = icmp slt i32 %dec.i39, 1
  br i1 %cmp.i42, label %if.then.i43, label %amdgpu_ring_write.exit40.amdgpu_ring_write.exit53_crit_edge

amdgpu_ring_write.exit40.amdgpu_ring_write.exit53_crit_edge: ; preds = %amdgpu_ring_write.exit40
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit53

if.then.i43:                                      ; preds = %amdgpu_ring_write.exit40
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit53

amdgpu_ring_write.exit53:                         ; preds = %if.then.i43, %amdgpu_ring_write.exit40.amdgpu_ring_write.exit53_crit_edge
  %45 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ring1.i, align 4
  %47 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %wptr.i, align 8
  %inc.i46 = add i64 %48, 1
  store i64 %inc.i46, ptr %wptr.i, align 8
  %49 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %buf_mask.i, align 8
  %51 = trunc i64 %48 to i32
  %idxprom.i48 = and i32 %50, %51
  %arrayidx.i49 = getelementptr i32, ptr %46, i32 %idxprom.i48
  %52 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 0, ptr %arrayidx.i49, align 4
  %53 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %ptr_mask.i, align 8
  %55 = load i64, ptr %wptr.i, align 8
  %and3.i51 = and i64 %55, %54
  store i64 %and3.i51, ptr %wptr.i, align 8
  %56 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %count_dw.i, align 8
  %dec.i52 = add i32 %57, -1
  store i32 %dec.i52, ptr %count_dw.i, align 8
  %58 = load i32, ptr %buf_mask.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i52)
  %cmp.i55 = icmp slt i32 %dec.i52, 1
  br i1 %cmp.i55, label %if.then.i56, label %amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge

amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge: ; preds = %amdgpu_ring_write.exit53
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit66

if.then.i56:                                      ; preds = %amdgpu_ring_write.exit53
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit66

amdgpu_ring_write.exit66:                         ; preds = %if.then.i56, %amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge
  %59 = trunc i64 %and3.i51 to i32
  %conv6 = and i32 %58, %59
  %60 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ring1.i, align 4
  %62 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %wptr.i, align 8
  %inc.i59 = add i64 %63, 1
  store i64 %inc.i59, ptr %wptr.i, align 8
  %64 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_mask.i, align 8
  %66 = trunc i64 %63 to i32
  %idxprom.i61 = and i32 %65, %66
  %arrayidx.i62 = getelementptr i32, ptr %61, i32 %idxprom.i61
  %67 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile i32 1437226410, ptr %arrayidx.i62, align 4
  %68 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %ptr_mask.i, align 8
  %70 = load i64, ptr %wptr.i, align 8
  %and3.i64 = and i64 %70, %69
  store i64 %and3.i64, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %count_dw.i, align 8
  %dec.i65 = add i32 %72, -1
  store i32 %dec.i65, ptr %count_dw.i, align 8
  ret i32 %conv6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_patch_cond_exec(ptr nocapture noundef readonly %ring, i32 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %buf_mask = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %0 = ptrtoint ptr %buf_mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %buf_mask, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %offset)
  %cmp = icmp ult i32 %1, %offset
  br i1 %cmp, label %do.body2, label %do.body8, !prof !490

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8792, 0\0A.popsection", ""() #13, !srcloc !494
  unreachable

do.body8:                                         ; preds = %entry
  %ring9 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring9 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring9, align 4
  %arrayidx = getelementptr i32, ptr %3, i32 %offset
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1437226410, i32 %5)
  %cmp10.not = icmp eq i32 %5, 1437226410
  br i1 %cmp10.not, label %do.end26, label %do.body18, !prof !481

do.body18:                                        ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 8793, 0\0A.popsection", ""() #13, !srcloc !495
  unreachable

do.end26:                                         ; preds = %do.body8
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %6 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %wptr, align 8
  %8 = trunc i64 %7 to i32
  %9 = add i32 %8, -1
  %conv28 = and i32 %9, %1
  call void @__sanitizer_cov_trace_cmp4(i32 %conv28, i32 %offset)
  %cmp29 = icmp ugt i32 %conv28, %offset
  br i1 %cmp29, label %if.then37, label %if.else, !prof !481

if.then37:                                        ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #15
  %sub38 = sub i32 %conv28, %offset
  br label %if.end46

if.else:                                          ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #15
  %add = sub i32 1, %offset
  %sub42 = add i32 %add, %1
  %add43 = add i32 %sub42, %conv28
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then37
  %add43.sink = phi i32 [ %add43, %if.else ], [ %sub38, %if.then37 ]
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 %add43.sink, ptr %arrayidx, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_sb(ptr nocapture noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073706240, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i3 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i3, label %if.then.i4, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit14_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit14_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit14

if.then.i4:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit14

amdgpu_ring_write.exit14:                         ; preds = %if.then.i4, %amdgpu_ring_write.exit.amdgpu_ring_write.exit14_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i7 = add i64 %18, 1
  store i64 %inc.i7, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i9 = and i32 %20, %21
  %arrayidx.i10 = getelementptr i32, ptr %16, i32 %idxprom.i9
  %22 = ptrtoint ptr %arrayidx.i10 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %arrayidx.i10, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i12 = and i64 %25, %24
  store i64 %and3.i12, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i13 = add i32 %27, -1
  store i32 %dec.i13, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_cntxcntl(ptr noundef %ring, i32 noundef %flags) #0 align 64 {
entry:
  %ce_payload.i = alloca %struct.v10_ce_ib_state, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_mcbp to i32))
  %0 = load i32, ptr @amdgpu_mcbp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ring, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %2, i32 0, i32 132
  %3 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %virt, align 8
  %and = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %5 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ring, align 8
  %virt3 = getelementptr inbounds %struct.amdgpu_device, ptr %6, i32 0, i32 132
  %7 = ptrtoint ptr %virt3 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %virt3, align 8
  %and5 = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  %and7 = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8 = icmp ne i32 %and7, 0
  %9 = and i1 %tobool8, %tobool6.not
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %ce_payload.i) #13
  %10 = call ptr @memset(ptr %ce_payload.i, i32 0, i32 40)
  %call.i = tail call i64 @amdgpu_csa_vaddr(ptr noundef %6) #13
  %count_dw.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %11 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp.i.i = icmp slt i32 %12, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then.amdgpu_ring_write.exit.i_crit_edge

if.then.amdgpu_ring_write.exit.i_crit_edge:       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit.i

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit.i

amdgpu_ring_write.exit.i:                         ; preds = %if.then.i.i, %if.then.amdgpu_ring_write.exit.i_crit_edge
  %ring1.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %13 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ring1.i.i, align 4
  %wptr.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %15 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %wptr.i.i, align 8
  %inc.i.i = add i64 %16, 1
  store i64 %inc.i.i, ptr %wptr.i.i, align 8
  %buf_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %17 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %buf_mask.i.i, align 8
  %19 = trunc i64 %16 to i32
  %idxprom.i.i = and i32 %18, %19
  %arrayidx.i.i = getelementptr i32, ptr %14, i32 %idxprom.i.i
  %20 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile i32 -1072941312, ptr %arrayidx.i.i, align 4
  %ptr_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %21 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %ptr_mask.i.i, align 8
  %23 = load i64, ptr %wptr.i.i, align 8
  %and3.i.i = and i64 %23, %22
  store i64 %and3.i.i, ptr %wptr.i.i, align 8
  %24 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %count_dw.i.i, align 8
  %dec.i.i = add i32 %25, -1
  store i32 %dec.i.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i.i)
  %cmp.i16.i = icmp slt i32 %dec.i.i, 1
  br i1 %cmp.i16.i, label %if.then.i17.i, label %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit27.i_crit_edge

amdgpu_ring_write.exit.i.amdgpu_ring_write.exit27.i_crit_edge: ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit27.i

if.then.i17.i:                                    ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit27.i

amdgpu_ring_write.exit27.i:                       ; preds = %if.then.i17.i, %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit27.i_crit_edge
  %26 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ring1.i.i, align 4
  %28 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %wptr.i.i, align 8
  %inc.i20.i = add i64 %29, 1
  store i64 %inc.i20.i, ptr %wptr.i.i, align 8
  %30 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %buf_mask.i.i, align 8
  %32 = trunc i64 %29 to i32
  %idxprom.i22.i = and i32 %31, %32
  %arrayidx.i23.i = getelementptr i32, ptr %27, i32 %idxprom.i22.i
  %33 = ptrtoint ptr %arrayidx.i23.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile i32 -2146433024, ptr %arrayidx.i23.i, align 4
  %34 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %ptr_mask.i.i, align 8
  %36 = load i64, ptr %wptr.i.i, align 8
  %and3.i25.i = and i64 %36, %35
  store i64 %and3.i25.i, ptr %wptr.i.i, align 8
  %37 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %count_dw.i.i, align 8
  %dec.i26.i = add i32 %38, -1
  store i32 %dec.i26.i, ptr %count_dw.i.i, align 8
  %conv.i = trunc i64 %call.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i26.i)
  %cmp.i29.i = icmp slt i32 %dec.i26.i, 1
  br i1 %cmp.i29.i, label %if.then.i30.i, label %amdgpu_ring_write.exit27.i.amdgpu_ring_write.exit40.i_crit_edge

amdgpu_ring_write.exit27.i.amdgpu_ring_write.exit40.i_crit_edge: ; preds = %amdgpu_ring_write.exit27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit40.i

if.then.i30.i:                                    ; preds = %amdgpu_ring_write.exit27.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit40.i

amdgpu_ring_write.exit40.i:                       ; preds = %if.then.i30.i, %amdgpu_ring_write.exit27.i.amdgpu_ring_write.exit40.i_crit_edge
  %39 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %ring1.i.i, align 4
  %41 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %wptr.i.i, align 8
  %inc.i33.i = add i64 %42, 1
  store i64 %inc.i33.i, ptr %wptr.i.i, align 8
  %43 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %buf_mask.i.i, align 8
  %45 = trunc i64 %42 to i32
  %idxprom.i35.i = and i32 %44, %45
  %arrayidx.i36.i = getelementptr i32, ptr %40, i32 %idxprom.i35.i
  %46 = ptrtoint ptr %arrayidx.i36.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile i32 %conv.i, ptr %arrayidx.i36.i, align 4
  %47 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %ptr_mask.i.i, align 8
  %49 = load i64, ptr %wptr.i.i, align 8
  %and3.i38.i = and i64 %49, %48
  store i64 %and3.i38.i, ptr %wptr.i.i, align 8
  %50 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %count_dw.i.i, align 8
  %dec.i39.i = add i32 %51, -1
  store i32 %dec.i39.i, ptr %count_dw.i.i, align 8
  %shr.i = lshr i64 %call.i, 32
  %conv6.i = trunc i64 %shr.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i39.i)
  %cmp.i42.i = icmp slt i32 %dec.i39.i, 1
  br i1 %cmp.i42.i, label %if.then.i43.i, label %amdgpu_ring_write.exit40.i.amdgpu_ring_write.exit53.i_crit_edge

amdgpu_ring_write.exit40.i.amdgpu_ring_write.exit53.i_crit_edge: ; preds = %amdgpu_ring_write.exit40.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit53.i

if.then.i43.i:                                    ; preds = %amdgpu_ring_write.exit40.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit53.i

amdgpu_ring_write.exit53.i:                       ; preds = %if.then.i43.i, %amdgpu_ring_write.exit40.i.amdgpu_ring_write.exit53.i_crit_edge
  %52 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %ring1.i.i, align 4
  %54 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %wptr.i.i, align 8
  %inc.i46.i = add i64 %55, 1
  store i64 %inc.i46.i, ptr %wptr.i.i, align 8
  %56 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %buf_mask.i.i, align 8
  %58 = trunc i64 %55 to i32
  %idxprom.i48.i = and i32 %57, %58
  %arrayidx.i49.i = getelementptr i32, ptr %53, i32 %idxprom.i48.i
  %59 = ptrtoint ptr %arrayidx.i49.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile i32 %conv6.i, ptr %arrayidx.i49.i, align 4
  %60 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %ptr_mask.i.i, align 8
  %62 = load i64, ptr %wptr.i.i, align 8
  %and3.i51.i = and i64 %62, %61
  store i64 %and3.i51.i, ptr %wptr.i.i, align 8
  %63 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %count_dw.i.i, align 8
  %dec.i52.i = add i32 %64, -1
  store i32 %dec.i52.i, ptr %count_dw.i.i, align 8
  br i1 %9, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %amdgpu_ring_write.exit53.i
  %csa_cpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %6, i32 0, i32 132, i32 2
  %65 = ptrtoint ptr %csa_cpu_addr.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %csa_cpu_addr.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %dec.i52.i)
  %cmp.i54.i = icmp slt i32 %dec.i52.i, 10
  br i1 %cmp.i54.i, label %if.then.i55.i, label %if.then.i.if.end.i.i_crit_edge, !prof !490

if.then.i.if.end.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i

if.then.i55.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i55.i, %if.then.i.if.end.i.i_crit_edge
  %67 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %wptr.i.i, align 8
  %69 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %buf_mask.i.i, align 8
  %71 = trunc i64 %68 to i32
  %conv3.i.i = and i32 %70, %71
  %add.i.i = add i32 %70, 1
  %sub.i.i = sub i32 %add.i.i, %conv3.i.i
  %72 = tail call i32 @llvm.umin.i32(i32 %sub.i.i, i32 10) #13
  %shl.i.i = shl nuw nsw i32 %72, 2
  %.neg85.i = mul nsw i32 %72, -4
  %shl9.i.i = add nsw i32 %.neg85.i, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool10.not.i.i = icmp eq i32 %72, 0
  br i1 %tobool10.not.i.i, label %if.end.i.i.if.end12.i.i_crit_edge, label %if.then11.i.i

if.end.i.i.if.end12.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %73 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ring1.i.i, align 4
  %arrayidx.i58.i = getelementptr i32, ptr %74, i32 %conv3.i.i
  %75 = call ptr @memcpy(ptr %arrayidx.i58.i, ptr %66, i32 %shl.i.i)
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.then11.i.i, %if.end.i.i.if.end12.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl9.i.i)
  %tobool13.not.i.i = icmp eq i32 %shl9.i.i, 0
  br i1 %tobool13.not.i.i, label %if.end12.i.i.gfx_v10_0_ring_emit_ce_meta.exit_crit_edge, label %if.then14.i.i

if.end12.i.i.gfx_v10_0_ring_emit_ce_meta.exit_crit_edge: ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_ring_emit_ce_meta.exit

if.then14.i.i:                                    ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i.i = getelementptr i8, ptr %66, i32 %shl.i.i
  %76 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %ring1.i.i, align 4
  %78 = call ptr @memcpy(ptr %77, ptr %add.ptr.i.i, i32 %shl9.i.i)
  br label %gfx_v10_0_ring_emit_ce_meta.exit

if.else.i:                                        ; preds = %amdgpu_ring_write.exit53.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %dec.i52.i)
  %cmp.i61.i = icmp slt i32 %dec.i52.i, 10
  br i1 %cmp.i61.i, label %if.then.i62.i, label %if.else.i.if.end.i73.i_crit_edge, !prof !490

if.else.i.if.end.i73.i_crit_edge:                 ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i73.i

if.then.i62.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %if.end.i73.i

if.end.i73.i:                                     ; preds = %if.then.i62.i, %if.else.i.if.end.i73.i_crit_edge
  %79 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %wptr.i.i, align 8
  %81 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %buf_mask.i.i, align 8
  %83 = trunc i64 %80 to i32
  %conv3.i65.i = and i32 %82, %83
  %add.i67.i = add i32 %82, 1
  %sub.i68.i = sub i32 %add.i67.i, %conv3.i65.i
  %84 = tail call i32 @llvm.umin.i32(i32 %sub.i68.i, i32 10) #13
  %shl.i70.i = shl nuw nsw i32 %84, 2
  %.neg.i = mul nsw i32 %84, -4
  %shl9.i71.i = add nsw i32 %.neg.i, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool10.not.i72.i = icmp eq i32 %84, 0
  br i1 %tobool10.not.i72.i, label %if.end.i73.i.if.end12.i77.i_crit_edge, label %if.then11.i75.i

if.end.i73.i.if.end12.i77.i_crit_edge:            ; preds = %if.end.i73.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end12.i77.i

if.then11.i75.i:                                  ; preds = %if.end.i73.i
  call void @__sanitizer_cov_trace_pc() #15
  %85 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %ring1.i.i, align 4
  %arrayidx.i74.i = getelementptr i32, ptr %86, i32 %conv3.i65.i
  %87 = call ptr @memcpy(ptr %arrayidx.i74.i, ptr %ce_payload.i, i32 %shl.i70.i)
  br label %if.end12.i77.i

if.end12.i77.i:                                   ; preds = %if.then11.i75.i, %if.end.i73.i.if.end12.i77.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl9.i71.i)
  %tobool13.not.i76.i = icmp eq i32 %shl9.i71.i, 0
  br i1 %tobool13.not.i76.i, label %if.end12.i77.i.gfx_v10_0_ring_emit_ce_meta.exit_crit_edge, label %if.then14.i79.i

if.end12.i77.i.gfx_v10_0_ring_emit_ce_meta.exit_crit_edge: ; preds = %if.end12.i77.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_ring_emit_ce_meta.exit

if.then14.i79.i:                                  ; preds = %if.end12.i77.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i78.i = getelementptr i8, ptr %ce_payload.i, i32 %shl.i70.i
  %88 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %ring1.i.i, align 4
  %90 = call ptr @memcpy(ptr %89, ptr %add.ptr.i78.i, i32 %shl9.i71.i)
  br label %gfx_v10_0_ring_emit_ce_meta.exit

gfx_v10_0_ring_emit_ce_meta.exit:                 ; preds = %if.then14.i79.i, %if.end12.i77.i.gfx_v10_0_ring_emit_ce_meta.exit_crit_edge, %if.then14.i.i, %if.end12.i.i.gfx_v10_0_ring_emit_ce_meta.exit_crit_edge
  %91 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %wptr.i.i, align 8
  %add19.i80.i = add i64 %92, 10
  %93 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %ptr_mask.i.i, align 8
  %and21.i82.i = and i64 %94, %add19.i80.i
  store i64 %and21.i82.i, ptr %wptr.i.i, align 8
  %95 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %storemerge.in.i = load i32, ptr %count_dw.i.i, align 8
  %storemerge.i = add i32 %storemerge.in.i, -10
  store i32 %storemerge.i, ptr %count_dw.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %ce_payload.i) #13
  br label %if.end

if.end:                                           ; preds = %gfx_v10_0_ring_emit_ce_meta.exit, %lor.lhs.false.if.end_crit_edge
  %and10 = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %and16 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool17.not = icmp eq i32 %and16, 0
  %spec.select = select i1 %tobool17.not, i32 -2130608125, i32 -1862172669
  br label %if.end26

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %and21 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  %spec.select41 = select i1 %tobool22.not, i32 -2147483648, i32 -1879048192
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then12
  %dw2.0 = phi i32 [ %spec.select, %if.then12 ], [ %spec.select41, %if.else ]
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %96 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %97)
  %cmp.i = icmp slt i32 %97, 1
  br i1 %cmp.i, label %if.then.i42, label %if.end26.amdgpu_ring_write.exit_crit_edge

if.end26.amdgpu_ring_write.exit_crit_edge:        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i42:                                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i42, %if.end26.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %98 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %100 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %101, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %102 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %buf_mask.i, align 8
  %104 = trunc i64 %101 to i32
  %idxprom.i = and i32 %103, %104
  %arrayidx.i = getelementptr i32, ptr %99, i32 %idxprom.i
  %105 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store volatile i32 -1073666048, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %106 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %106)
  %107 = load i64, ptr %ptr_mask.i, align 8
  %108 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %108, %107
  store i64 %and3.i, ptr %wptr.i, align 8
  %109 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %110, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i44 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i44, label %if.then.i45, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit55_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit55_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit55

if.then.i45:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit55

amdgpu_ring_write.exit55:                         ; preds = %if.then.i45, %amdgpu_ring_write.exit.amdgpu_ring_write.exit55_crit_edge
  %111 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %ring1.i, align 4
  %113 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %113)
  %114 = load i64, ptr %wptr.i, align 8
  %inc.i48 = add i64 %114, 1
  store i64 %inc.i48, ptr %wptr.i, align 8
  %115 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %buf_mask.i, align 8
  %117 = trunc i64 %114 to i32
  %idxprom.i50 = and i32 %116, %117
  %arrayidx.i51 = getelementptr i32, ptr %112, i32 %idxprom.i50
  %118 = ptrtoint ptr %arrayidx.i51 to i32
  call void @__asan_store4_noabort(i32 %118)
  store volatile i32 %dw2.0, ptr %arrayidx.i51, align 4
  %119 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %ptr_mask.i, align 8
  %121 = load i64, ptr %wptr.i, align 8
  %and3.i53 = and i64 %121, %120
  store i64 %and3.i53, ptr %wptr.i, align 8
  %122 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %count_dw.i, align 8
  %dec.i54 = add i32 %123, -1
  store i32 %dec.i54, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i54)
  %cmp.i57 = icmp slt i32 %dec.i54, 1
  br i1 %cmp.i57, label %if.then.i58, label %amdgpu_ring_write.exit55.amdgpu_ring_write.exit68_crit_edge

amdgpu_ring_write.exit55.amdgpu_ring_write.exit68_crit_edge: ; preds = %amdgpu_ring_write.exit55
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit68

if.then.i58:                                      ; preds = %amdgpu_ring_write.exit55
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit68

amdgpu_ring_write.exit68:                         ; preds = %if.then.i58, %amdgpu_ring_write.exit55.amdgpu_ring_write.exit68_crit_edge
  %124 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %ring1.i, align 4
  %126 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %126)
  %127 = load i64, ptr %wptr.i, align 8
  %inc.i61 = add i64 %127, 1
  store i64 %inc.i61, ptr %wptr.i, align 8
  %128 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %buf_mask.i, align 8
  %130 = trunc i64 %127 to i32
  %idxprom.i63 = and i32 %129, %130
  %arrayidx.i64 = getelementptr i32, ptr %125, i32 %idxprom.i63
  %131 = ptrtoint ptr %arrayidx.i64 to i32
  call void @__asan_store4_noabort(i32 %131)
  store volatile i32 0, ptr %arrayidx.i64, align 4
  %132 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %132)
  %133 = load i64, ptr %ptr_mask.i, align 8
  %134 = load i64, ptr %wptr.i, align 8
  %and3.i66 = and i64 %134, %133
  store i64 %and3.i66, ptr %wptr.i, align 8
  %135 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %count_dw.i, align 8
  %dec.i67 = add i32 %136, -1
  store i32 %dec.i67, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_emit_frame_cntl(ptr nocapture noundef %ring, i1 noundef zeroext %start, i1 noundef zeroext %secure) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073704960, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i6 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i6, label %if.then.i7, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit17

if.then.i7:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit17

amdgpu_ring_write.exit17:                         ; preds = %if.then.i7, %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge
  %shl = select i1 %start, i32 0, i32 268435456
  %cond = zext i1 %secure to i32
  %or = or i32 %shl, %cond
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i10 = add i64 %18, 1
  store i64 %inc.i10, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i12 = and i32 %20, %21
  %arrayidx.i13 = getelementptr i32, ptr %16, i32 %idxprom.i12
  %22 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 %or, ptr %arrayidx.i13, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i15 = and i64 %25, %24
  store i64 %and3.i15, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i16 = add i32 %27, -1
  store i32 %dec.i16, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_ring_soft_recovery(ptr nocapture noundef readonly %ring, i32 noundef %vmid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %shl = shl i32 %vmid, 28
  %or8 = or i32 %shl, 147
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and9 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool.not = icmp eq i32 %and9, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool10.not = icmp eq ptr %5, null
  br i1 %tobool10.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true11

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true11:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_wreg, align 4
  %tobool15.not = icmp eq ptr %7, null
  br i1 %tobool15.not, label %land.lhs.true11.cond.false_crit_edge, label %cond.true

land.lhs.true11.cond.false_crit_edge:             ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add = add i32 %11, 4379
  tail call void %7(ptr noundef %1, i32 noundef %add, i32 noundef %or8, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true11.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx23 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx23, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add26 = add i32 %15, 4379
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add26, i32 noundef %or8, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_ring_preempt_ib(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %ring3 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 7, i32 3
  %pmf = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 7, i32 5
  %2 = ptrtoint ptr %pmf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pmf, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %kiq_unmap_queues = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %kiq_unmap_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kiq_unmap_queues, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %lor.lhs.false.cleanup_crit_edge, label %do.body6

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.body6:                                         ; preds = %lor.lhs.false
  %ring_lock = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 7, i32 2
  %call7 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %ring_lock) #13
  %6 = ptrtoint ptr %pmf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pmf, align 4
  %unmap_queues_size = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %unmap_queues_size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %unmap_queues_size, align 4
  %call11 = tail call i32 @amdgpu_ring_alloc(ptr noundef %ring3, i32 noundef %9) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end15, label %if.then13

if.then13:                                        ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %ring_lock, i32 noundef %call7) #13
  br label %cleanup

if.end15:                                         ; preds = %do.body6
  %cond_exe_cpu_addr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 36
  %10 = ptrtoint ptr %cond_exe_cpu_addr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cond_exe_cpu_addr.i, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 0, ptr %11, align 4
  %13 = ptrtoint ptr %pmf to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pmf, align 4
  %kiq_unmap_queues17 = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %kiq_unmap_queues17 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %kiq_unmap_queues17, align 4
  %trail_fence_gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 32
  %17 = ptrtoint ptr %trail_fence_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %trail_fence_gpu_addr, align 8
  %trail_seq = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 30
  %19 = ptrtoint ptr %trail_seq to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %trail_seq, align 8
  %inc = add i32 %20, 1
  store i32 %inc, ptr %trail_seq, align 8
  %conv18 = zext i32 %inc to i64
  tail call void %16(ptr noundef %ring3, ptr noundef %ring, i32 noundef 3, i64 noundef %18, i64 noundef %conv18) #13
  tail call void @amdgpu_ring_commit(ptr noundef %ring3) #13
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %ring_lock, i32 noundef %call7) #13
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 11
  %21 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp2061 = icmp sgt i32 %22, 0
  br i1 %cmp2061, label %for.body.lr.ph, label %if.end15.if.then31_crit_edge

if.end15.if.then31_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then31

for.body.lr.ph:                                   ; preds = %if.end15
  %trail_fence_cpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 33
  br label %for.body

for.body:                                         ; preds = %if.end26.for.body_crit_edge, %for.body.lr.ph
  %i.062 = phi i32 [ 0, %for.body.lr.ph ], [ %inc27, %if.end26.for.body_crit_edge ]
  %23 = ptrtoint ptr %trail_seq to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %trail_seq, align 8
  %25 = ptrtoint ptr %trail_fence_cpu_addr to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %trail_fence_cpu_addr, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  %29 = tail call i32 @llvm.bswap.i32(i32 %28)
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %29)
  %cmp23 = icmp eq i32 %24, %29
  br i1 %cmp23, label %for.body.if.end32_crit_edge, label %if.end26

for.body.if.end32_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end32

if.end26:                                         ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %30 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %30(i32 noundef 214748) #13
  %inc27 = add nuw nsw i32 %i.062, 1
  %31 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %usec_timeout, align 8
  %cmp20 = icmp slt i32 %inc27, %32
  br i1 %cmp20, label %if.end26.for.body_crit_edge, label %if.end26.if.then31_crit_edge

if.end26.if.then31_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then31

if.end26.for.body_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

if.then31:                                        ; preds = %if.end26.if.then31_crit_edge, %if.end15.if.then31_crit_edge
  %idx = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 15
  %33 = ptrtoint ptr %idx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %idx, align 4
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.4, i32 noundef %34) #13
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %for.body.if.end32_crit_edge
  %r.0 = phi i32 [ -22, %if.then31 ], [ 0, %for.body.if.end32_crit_edge ]
  %35 = ptrtoint ptr %cond_exe_cpu_addr.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %cond_exe_cpu_addr.i, align 8
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile i32 1, ptr %36, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %if.then13, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then13 ], [ %r.0, %if.end32 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_emit_mem_sync(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073326080, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i9 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i9, label %if.then.i10, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit20_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit20_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit20

if.then.i10:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit20

amdgpu_ring_write.exit20:                         ; preds = %if.then.i10, %amdgpu_ring_write.exit.amdgpu_ring_write.exit20_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i13 = add i64 %18, 1
  store i64 %inc.i13, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i15 = and i32 %20, %21
  %arrayidx.i16 = getelementptr i32, ptr %16, i32 %idxprom.i15
  %22 = ptrtoint ptr %arrayidx.i16 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %arrayidx.i16, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i18 = and i64 %25, %24
  store i64 %and3.i18, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i19 = add i32 %27, -1
  store i32 %dec.i19, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i19)
  %cmp.i22 = icmp slt i32 %dec.i19, 1
  br i1 %cmp.i22, label %if.then.i23, label %amdgpu_ring_write.exit20.amdgpu_ring_write.exit33_crit_edge

amdgpu_ring_write.exit20.amdgpu_ring_write.exit33_crit_edge: ; preds = %amdgpu_ring_write.exit20
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit33

if.then.i23:                                      ; preds = %amdgpu_ring_write.exit20
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit33

amdgpu_ring_write.exit33:                         ; preds = %if.then.i23, %amdgpu_ring_write.exit20.amdgpu_ring_write.exit33_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i26 = add i64 %31, 1
  store i64 %inc.i26, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i28 = and i32 %33, %34
  %arrayidx.i29 = getelementptr i32, ptr %29, i32 %idxprom.i28
  %35 = ptrtoint ptr %arrayidx.i29 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 -1, ptr %arrayidx.i29, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i31 = and i64 %38, %37
  store i64 %and3.i31, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i32 = add i32 %40, -1
  store i32 %dec.i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i32)
  %cmp.i35 = icmp slt i32 %dec.i32, 1
  br i1 %cmp.i35, label %if.then.i36, label %amdgpu_ring_write.exit33.amdgpu_ring_write.exit46_crit_edge

amdgpu_ring_write.exit33.amdgpu_ring_write.exit46_crit_edge: ; preds = %amdgpu_ring_write.exit33
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit46

if.then.i36:                                      ; preds = %amdgpu_ring_write.exit33
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit46

amdgpu_ring_write.exit46:                         ; preds = %if.then.i36, %amdgpu_ring_write.exit33.amdgpu_ring_write.exit46_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i39 = add i64 %44, 1
  store i64 %inc.i39, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i41 = and i32 %46, %47
  %arrayidx.i42 = getelementptr i32, ptr %42, i32 %idxprom.i41
  %48 = ptrtoint ptr %arrayidx.i42 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 16777215, ptr %arrayidx.i42, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i44 = and i64 %51, %50
  store i64 %and3.i44, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i45 = add i32 %53, -1
  store i32 %dec.i45, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i45)
  %cmp.i48 = icmp slt i32 %dec.i45, 1
  br i1 %cmp.i48, label %if.then.i49, label %amdgpu_ring_write.exit46.amdgpu_ring_write.exit59_crit_edge

amdgpu_ring_write.exit46.amdgpu_ring_write.exit59_crit_edge: ; preds = %amdgpu_ring_write.exit46
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit59

if.then.i49:                                      ; preds = %amdgpu_ring_write.exit46
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit59

amdgpu_ring_write.exit59:                         ; preds = %if.then.i49, %amdgpu_ring_write.exit46.amdgpu_ring_write.exit59_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i52 = add i64 %57, 1
  store i64 %inc.i52, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i54 = and i32 %59, %60
  %arrayidx.i55 = getelementptr i32, ptr %55, i32 %idxprom.i54
  %61 = ptrtoint ptr %arrayidx.i55 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 0, ptr %arrayidx.i55, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i57 = and i64 %64, %63
  store i64 %and3.i57, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i58 = add i32 %66, -1
  store i32 %dec.i58, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i58)
  %cmp.i61 = icmp slt i32 %dec.i58, 1
  br i1 %cmp.i61, label %if.then.i62, label %amdgpu_ring_write.exit59.amdgpu_ring_write.exit72_crit_edge

amdgpu_ring_write.exit59.amdgpu_ring_write.exit72_crit_edge: ; preds = %amdgpu_ring_write.exit59
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit72

if.then.i62:                                      ; preds = %amdgpu_ring_write.exit59
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit72

amdgpu_ring_write.exit72:                         ; preds = %if.then.i62, %amdgpu_ring_write.exit59.amdgpu_ring_write.exit72_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i65 = add i64 %70, 1
  store i64 %inc.i65, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i67 = and i32 %72, %73
  %arrayidx.i68 = getelementptr i32, ptr %68, i32 %idxprom.i67
  %74 = ptrtoint ptr %arrayidx.i68 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 0, ptr %arrayidx.i68, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i70 = and i64 %77, %76
  store i64 %and3.i70, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i71 = add i32 %79, -1
  store i32 %dec.i71, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i71)
  %cmp.i74 = icmp slt i32 %dec.i71, 1
  br i1 %cmp.i74, label %if.then.i75, label %amdgpu_ring_write.exit72.amdgpu_ring_write.exit85_crit_edge

amdgpu_ring_write.exit72.amdgpu_ring_write.exit85_crit_edge: ; preds = %amdgpu_ring_write.exit72
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit85

if.then.i75:                                      ; preds = %amdgpu_ring_write.exit72
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit85

amdgpu_ring_write.exit85:                         ; preds = %if.then.i75, %amdgpu_ring_write.exit72.amdgpu_ring_write.exit85_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i78 = add i64 %83, 1
  store i64 %inc.i78, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i80 = and i32 %85, %86
  %arrayidx.i81 = getelementptr i32, ptr %81, i32 %idxprom.i80
  %87 = ptrtoint ptr %arrayidx.i81 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 10, ptr %arrayidx.i81, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i83 = and i64 %90, %89
  store i64 %and3.i83, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i84 = add i32 %92, -1
  store i32 %dec.i84, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i84)
  %cmp.i87 = icmp slt i32 %dec.i84, 1
  br i1 %cmp.i87, label %if.then.i88, label %amdgpu_ring_write.exit85.amdgpu_ring_write.exit98_crit_edge

amdgpu_ring_write.exit85.amdgpu_ring_write.exit98_crit_edge: ; preds = %amdgpu_ring_write.exit85
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit98

if.then.i88:                                      ; preds = %amdgpu_ring_write.exit85
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit98

amdgpu_ring_write.exit98:                         ; preds = %if.then.i88, %amdgpu_ring_write.exit85.amdgpu_ring_write.exit98_crit_edge
  %93 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %ring1.i, align 4
  %95 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %wptr.i, align 8
  %inc.i91 = add i64 %96, 1
  store i64 %inc.i91, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %buf_mask.i, align 8
  %99 = trunc i64 %96 to i32
  %idxprom.i93 = and i32 %98, %99
  %arrayidx.i94 = getelementptr i32, ptr %94, i32 %idxprom.i93
  %100 = ptrtoint ptr %arrayidx.i94 to i32
  call void @__asan_store4_noabort(i32 %100)
  store volatile i32 50097, ptr %arrayidx.i94, align 4
  %101 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %ptr_mask.i, align 8
  %103 = load i64, ptr %wptr.i, align 8
  %and3.i96 = and i64 %103, %102
  store i64 %and3.i96, ptr %wptr.i, align 8
  %104 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %count_dw.i, align 8
  %dec.i97 = add i32 %105, -1
  store i32 %dec.i97, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @amdgpu_csa_vaddr(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_write_data_to_reg(ptr noundef %ring, i32 noundef %reg, i32 noundef %val) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073531136, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i2 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i2, label %if.then.i3, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit13_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit13_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit13

if.then.i3:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit13

amdgpu_ring_write.exit13:                         ; preds = %if.then.i3, %amdgpu_ring_write.exit.amdgpu_ring_write.exit13_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i6 = add i64 %18, 1
  store i64 %inc.i6, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i8 = and i32 %20, %21
  %arrayidx.i9 = getelementptr i32, ptr %16, i32 %idxprom.i8
  %22 = ptrtoint ptr %arrayidx.i9 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %arrayidx.i9, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i11 = and i64 %25, %24
  store i64 %and3.i11, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i12 = add i32 %27, -1
  store i32 %dec.i12, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i12)
  %cmp.i15 = icmp slt i32 %dec.i12, 1
  br i1 %cmp.i15, label %if.then.i16, label %amdgpu_ring_write.exit13.amdgpu_ring_write.exit26_crit_edge

amdgpu_ring_write.exit13.amdgpu_ring_write.exit26_crit_edge: ; preds = %amdgpu_ring_write.exit13
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit26

if.then.i16:                                      ; preds = %amdgpu_ring_write.exit13
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit26

amdgpu_ring_write.exit26:                         ; preds = %if.then.i16, %amdgpu_ring_write.exit13.amdgpu_ring_write.exit26_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i19 = add i64 %31, 1
  store i64 %inc.i19, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i21 = and i32 %33, %34
  %arrayidx.i22 = getelementptr i32, ptr %29, i32 %idxprom.i21
  %35 = ptrtoint ptr %arrayidx.i22 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %reg, ptr %arrayidx.i22, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i24 = and i64 %38, %37
  store i64 %and3.i24, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i25 = add i32 %40, -1
  store i32 %dec.i25, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i25)
  %cmp.i28 = icmp slt i32 %dec.i25, 1
  br i1 %cmp.i28, label %if.then.i29, label %amdgpu_ring_write.exit26.amdgpu_ring_write.exit39_crit_edge

amdgpu_ring_write.exit26.amdgpu_ring_write.exit39_crit_edge: ; preds = %amdgpu_ring_write.exit26
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit39

if.then.i29:                                      ; preds = %amdgpu_ring_write.exit26
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit39

amdgpu_ring_write.exit39:                         ; preds = %if.then.i29, %amdgpu_ring_write.exit26.amdgpu_ring_write.exit39_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i32 = add i64 %44, 1
  store i64 %inc.i32, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i34 = and i32 %46, %47
  %arrayidx.i35 = getelementptr i32, ptr %42, i32 %idxprom.i34
  %48 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 0, ptr %arrayidx.i35, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i37 = and i64 %51, %50
  store i64 %and3.i37, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i38 = add i32 %53, -1
  store i32 %dec.i38, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i38)
  %cmp.i41 = icmp slt i32 %dec.i38, 1
  br i1 %cmp.i41, label %if.then.i42, label %amdgpu_ring_write.exit39.amdgpu_ring_write.exit52_crit_edge

amdgpu_ring_write.exit39.amdgpu_ring_write.exit52_crit_edge: ; preds = %amdgpu_ring_write.exit39
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit52

if.then.i42:                                      ; preds = %amdgpu_ring_write.exit39
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit52

amdgpu_ring_write.exit52:                         ; preds = %if.then.i42, %amdgpu_ring_write.exit39.amdgpu_ring_write.exit52_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i45 = add i64 %57, 1
  store i64 %inc.i45, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i47 = and i32 %59, %60
  %arrayidx.i48 = getelementptr i32, ptr %55, i32 %idxprom.i47
  %61 = ptrtoint ptr %arrayidx.i48 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 %val, ptr %arrayidx.i48, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i50 = and i64 %64, %63
  store i64 %and3.i50, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i51 = add i32 %66, -1
  store i32 %dec.i51, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_set_eop_interrupt_state(ptr noundef %adev, ptr nocapture noundef readnone %src, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.131)
  switch i32 %type, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb9
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_set_gfx_eop_interrupt_state(ptr noundef %adev, i32 noundef 0, i32 noundef %state)
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_set_gfx_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef %state)
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 0, i32 noundef %state)
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 1, i32 noundef %state)
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 2, i32 noundef %state)
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 3, i32 noundef %state)
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.6, i32 noundef 2) #13
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.6, i32 noundef 2) #13
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.6, i32 noundef 2) #13
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.6, i32 noundef 2) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_eop_irq(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr nocapture noundef readonly %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.7) #13
  %ring_id = getelementptr inbounds %struct.amdgpu_iv_entry, ptr %entry1, i32 0, i32 3
  %0 = ptrtoint ptr %ring_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ring_id, align 4
  %2 = lshr i32 %1, 2
  %conv = and i32 %2, 3
  %3 = trunc i32 %1 to i8
  %conv5 = and i8 %3, 3
  %4 = lshr i32 %1, 4
  %conv9 = and i32 %4, 7
  %5 = zext i32 %conv to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.132)
  switch i32 %conv, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %entry.sw.bb17_crit_edge
    i32 2, label %entry.sw.bb17_crit_edge51
  ]

entry.sw.bb17_crit_edge51:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17

entry.sw.bb17_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb17

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %conv5)
  %cmp = icmp eq i8 %conv5, 0
  %gfx_ring = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36
  %arrayidx15 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1
  %gfx_ring.sink = select i1 %cmp, ptr %gfx_ring, ptr %arrayidx15
  %call = tail call zeroext i1 @amdgpu_fence_process(ptr noundef %gfx_ring.sink) #13
  br label %sw.epilog

sw.bb17:                                          ; preds = %entry.sw.bb17_crit_edge, %entry.sw.bb17_crit_edge51
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %6 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_compute_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp1948.not = icmp eq i32 %7, 0
  br i1 %cmp1948.not, label %sw.bb17.sw.epilog_crit_edge, label %for.body.lr.ph

sw.bb17.sw.epilog_crit_edge:                      ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.body.lr.ph:                                   ; preds = %sw.bb17
  %conv26 = zext i8 %conv5 to i32
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.049 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx22 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.049
  %me = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.049, i32 16
  %8 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %me, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %conv)
  %cmp24 = icmp eq i32 %9, %conv
  br i1 %cmp24, label %land.lhs.true, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %pipe = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.049, i32 17
  %10 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %conv26)
  %cmp27 = icmp eq i32 %11, %conv26
  br i1 %cmp27, label %land.lhs.true29, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

land.lhs.true29:                                  ; preds = %land.lhs.true
  %queue = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.049, i32 18
  %12 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %queue, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %conv9)
  %cmp31 = icmp eq i32 %13, %conv9
  br i1 %cmp31, label %if.then33, label %land.lhs.true29.for.inc_crit_edge

land.lhs.true29.for.inc_crit_edge:                ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then33:                                        ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  %call34 = tail call zeroext i1 @amdgpu_fence_process(ptr noundef %arrayidx22) #13
  br label %for.inc

for.inc:                                          ; preds = %if.then33, %land.lhs.true29.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.049, 1
  %14 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_compute_rings, align 8
  %cmp19 = icmp ult i32 %inc, %15
  br i1 %cmp19, label %for.inc.for.body_crit_edge, label %for.inc.sw.epilog_crit_edge

for.inc.sw.epilog_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

sw.epilog:                                        ; preds = %for.inc.sw.epilog_crit_edge, %sw.bb17.sw.epilog_crit_edge, %sw.bb, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_set_gfx_eop_interrupt_state(ptr noundef %adev, i32 noundef %pipe, i32 noundef %state) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %pipe to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.133)
  switch i32 %pipe, label %sw.default [
    i32 0, label %entry.if.end_crit_edge
    i32 1, label %sw.bb3
  ]

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.5, i32 noundef %pipe) #13
  br label %cleanup

if.end:                                           ; preds = %sw.bb3, %entry.if.end_crit_edge
  %.sink1 = phi i32 [ 7691, %sw.bb3 ], [ 7690, %entry.if.end_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 8
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %2, align 4
  %add = add i32 %4, %.sink1
  %5 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.134)
  switch i32 %state, label %if.end.cleanup_crit_edge [
    i32 0, label %sw.bb9
    i32 1, label %sw.bb44
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb9:                                           ; preds = %if.end
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool10.not = icmp eq i32 %and, 0
  br i1 %tobool10.not, label %sw.bb9.cond.false_crit_edge, label %land.lhs.true

sw.bb9.cond.false_crit_edge:                      ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb9
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool11.not = icmp eq ptr %9, null
  br i1 %tobool11.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true12

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true12:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool16.not = icmp eq ptr %11, null
  br i1 %tobool16.not, label %land.lhs.true12.cond.false_crit_edge, label %cond.true

land.lhs.true12.cond.false_crit_edge:             ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true12.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb9.cond.false_crit_edge
  %call21 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call21, %cond.false ]
  %and22 = and i32 %cond, -67108865
  %12 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %virt, align 8
  %and25 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %cond.end.cond.false42_crit_edge, label %land.lhs.true27

cond.end.cond.false42_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false42

land.lhs.true27:                                  ; preds = %cond.end
  %funcs30 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %14 = ptrtoint ptr %funcs30 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs30, align 4
  %tobool31.not = icmp eq ptr %15, null
  br i1 %tobool31.not, label %land.lhs.true27.cond.false42_crit_edge, label %land.lhs.true32

land.lhs.true27.cond.false42_crit_edge:           ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false42

land.lhs.true32:                                  ; preds = %land.lhs.true27
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %15, i32 0, i32 12
  %16 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sriov_wreg, align 4
  %tobool36.not = icmp eq ptr %17, null
  br i1 %tobool36.not, label %land.lhs.true32.cond.false42_crit_edge, label %cond.true37

land.lhs.true32.cond.false42_crit_edge:           ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false42

cond.true37:                                      ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %17(ptr noundef %adev, i32 noundef %add, i32 noundef %and22, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false42:                                     ; preds = %land.lhs.true32.cond.false42_crit_edge, %land.lhs.true27.cond.false42_crit_edge, %cond.end.cond.false42_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %and22, i32 noundef 0) #13
  br label %cleanup

sw.bb44:                                          ; preds = %if.end
  %virt45 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %18 = ptrtoint ptr %virt45 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt45, align 8
  %and47 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %sw.bb44.cond.false66_crit_edge, label %land.lhs.true49

sw.bb44.cond.false66_crit_edge:                   ; preds = %sw.bb44
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false66

land.lhs.true49:                                  ; preds = %sw.bb44
  %funcs52 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs52 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs52, align 4
  %tobool53.not = icmp eq ptr %21, null
  br i1 %tobool53.not, label %land.lhs.true49.cond.false66_crit_edge, label %land.lhs.true54

land.lhs.true49.cond.false66_crit_edge:           ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false66

land.lhs.true54:                                  ; preds = %land.lhs.true49
  %sriov_rreg58 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 13
  %22 = ptrtoint ptr %sriov_rreg58 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_rreg58, align 4
  %tobool59.not = icmp eq ptr %23, null
  br i1 %tobool59.not, label %land.lhs.true54.cond.false66_crit_edge, label %cond.true60

land.lhs.true54.cond.false66_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false66

cond.true60:                                      ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #15
  %call65 = tail call i32 %23(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end68

cond.false66:                                     ; preds = %land.lhs.true54.cond.false66_crit_edge, %land.lhs.true49.cond.false66_crit_edge, %sw.bb44.cond.false66_crit_edge
  %call67 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false66, %cond.true60
  %cond69 = phi i32 [ %call65, %cond.true60 ], [ %call67, %cond.false66 ]
  %or71 = or i32 %cond69, 67108864
  %24 = ptrtoint ptr %virt45 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt45, align 8
  %and74 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and74)
  %tobool75.not = icmp eq i32 %and74, 0
  br i1 %tobool75.not, label %cond.end68.cond.false92_crit_edge, label %land.lhs.true76

cond.end68.cond.false92_crit_edge:                ; preds = %cond.end68
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92

land.lhs.true76:                                  ; preds = %cond.end68
  %funcs79 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %26 = ptrtoint ptr %funcs79 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs79, align 4
  %tobool80.not = icmp eq ptr %27, null
  br i1 %tobool80.not, label %land.lhs.true76.cond.false92_crit_edge, label %land.lhs.true81

land.lhs.true76.cond.false92_crit_edge:           ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92

land.lhs.true81:                                  ; preds = %land.lhs.true76
  %sriov_wreg85 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %sriov_wreg85 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_wreg85, align 4
  %tobool86.not = icmp eq ptr %29, null
  br i1 %tobool86.not, label %land.lhs.true81.cond.false92_crit_edge, label %cond.true87

land.lhs.true81.cond.false92_crit_edge:           ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92

cond.true87:                                      ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %29(ptr noundef %adev, i32 noundef %add, i32 noundef %or71, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false92:                                     ; preds = %land.lhs.true81.cond.false92_crit_edge, %land.lhs.true76.cond.false92_crit_edge, %cond.end68.cond.false92_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %or71, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false92, %cond.true87, %cond.false42, %cond.true37, %if.end.cleanup_crit_edge, %sw.default
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef %me, i32 noundef %pipe, i32 noundef %state) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %me)
  %cmp = icmp eq i32 %me, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %pipe)
  %0 = icmp ult i32 %pipe, 4
  br i1 %0, label %switch.lookup, label %sw.default

sw.default:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.5, i32 noundef %pipe) #13
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.6, i32 noundef 2) #13
  br label %cleanup

switch.lookup:                                    ; preds = %if.then
  %switch.offset = add i32 %pipe, 7717
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 8
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %2, align 4
  %add = add i32 %4, %switch.offset
  %5 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.135)
  switch i32 %state, label %switch.lookup.cleanup_crit_edge [
    i32 0, label %sw.bb21
    i32 1, label %sw.bb55
  ]

switch.lookup.cleanup_crit_edge:                  ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

sw.bb21:                                          ; preds = %switch.lookup
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb21.cond.false_crit_edge, label %land.lhs.true

sw.bb21.cond.false_crit_edge:                     ; preds = %sw.bb21
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb21
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool22.not = icmp eq ptr %9, null
  br i1 %tobool22.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true23

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true23:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool27.not = icmp eq ptr %11, null
  br i1 %tobool27.not, label %land.lhs.true23.cond.false_crit_edge, label %cond.true

land.lhs.true23.cond.false_crit_edge:             ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true23.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb21.cond.false_crit_edge
  %call32 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call32, %cond.false ]
  %and33 = and i32 %cond, -67108865
  %12 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %virt, align 8
  %and36 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %cond.end.cond.false53_crit_edge, label %land.lhs.true38

cond.end.cond.false53_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53

land.lhs.true38:                                  ; preds = %cond.end
  %funcs41 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %14 = ptrtoint ptr %funcs41 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs41, align 4
  %tobool42.not = icmp eq ptr %15, null
  br i1 %tobool42.not, label %land.lhs.true38.cond.false53_crit_edge, label %land.lhs.true43

land.lhs.true38.cond.false53_crit_edge:           ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53

land.lhs.true43:                                  ; preds = %land.lhs.true38
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %15, i32 0, i32 12
  %16 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sriov_wreg, align 4
  %tobool47.not = icmp eq ptr %17, null
  br i1 %tobool47.not, label %land.lhs.true43.cond.false53_crit_edge, label %cond.true48

land.lhs.true43.cond.false53_crit_edge:           ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53

cond.true48:                                      ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %17(ptr noundef %adev, i32 noundef %add, i32 noundef %and33, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false53:                                     ; preds = %land.lhs.true43.cond.false53_crit_edge, %land.lhs.true38.cond.false53_crit_edge, %cond.end.cond.false53_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %and33, i32 noundef 0) #13
  br label %cleanup

sw.bb55:                                          ; preds = %switch.lookup
  %virt56 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %18 = ptrtoint ptr %virt56 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt56, align 8
  %and58 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %sw.bb55.cond.false77_crit_edge, label %land.lhs.true60

sw.bb55.cond.false77_crit_edge:                   ; preds = %sw.bb55
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77

land.lhs.true60:                                  ; preds = %sw.bb55
  %funcs63 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs63 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs63, align 4
  %tobool64.not = icmp eq ptr %21, null
  br i1 %tobool64.not, label %land.lhs.true60.cond.false77_crit_edge, label %land.lhs.true65

land.lhs.true60.cond.false77_crit_edge:           ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77

land.lhs.true65:                                  ; preds = %land.lhs.true60
  %sriov_rreg69 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 13
  %22 = ptrtoint ptr %sriov_rreg69 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_rreg69, align 4
  %tobool70.not = icmp eq ptr %23, null
  br i1 %tobool70.not, label %land.lhs.true65.cond.false77_crit_edge, label %cond.true71

land.lhs.true65.cond.false77_crit_edge:           ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77

cond.true71:                                      ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #15
  %call76 = tail call i32 %23(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end79

cond.false77:                                     ; preds = %land.lhs.true65.cond.false77_crit_edge, %land.lhs.true60.cond.false77_crit_edge, %sw.bb55.cond.false77_crit_edge
  %call78 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false77, %cond.true71
  %cond80 = phi i32 [ %call76, %cond.true71 ], [ %call78, %cond.false77 ]
  %or82 = or i32 %cond80, 67108864
  %24 = ptrtoint ptr %virt56 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt56, align 8
  %and85 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and85)
  %tobool86.not = icmp eq i32 %and85, 0
  br i1 %tobool86.not, label %cond.end79.cond.false103_crit_edge, label %land.lhs.true87

cond.end79.cond.false103_crit_edge:               ; preds = %cond.end79
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false103

land.lhs.true87:                                  ; preds = %cond.end79
  %funcs90 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %26 = ptrtoint ptr %funcs90 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs90, align 4
  %tobool91.not = icmp eq ptr %27, null
  br i1 %tobool91.not, label %land.lhs.true87.cond.false103_crit_edge, label %land.lhs.true92

land.lhs.true87.cond.false103_crit_edge:          ; preds = %land.lhs.true87
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false103

land.lhs.true92:                                  ; preds = %land.lhs.true87
  %sriov_wreg96 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %sriov_wreg96 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_wreg96, align 4
  %tobool97.not = icmp eq ptr %29, null
  br i1 %tobool97.not, label %land.lhs.true92.cond.false103_crit_edge, label %cond.true98

land.lhs.true92.cond.false103_crit_edge:          ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false103

cond.true98:                                      ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %29(ptr noundef %adev, i32 noundef %add, i32 noundef %or82, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false103:                                    ; preds = %land.lhs.true92.cond.false103_crit_edge, %land.lhs.true87.cond.false103_crit_edge, %cond.end79.cond.false103_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %or82, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false103, %cond.true98, %cond.false53, %cond.true48, %switch.lookup.cleanup_crit_edge, %if.else, %sw.default
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_dbg(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_fence_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_kiq_set_interrupt_state(ptr noundef %adev, ptr nocapture noundef readnone %src, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %me = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 16
  %0 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %me, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %. = select i1 %cmp, i32 7717, i32 7721
  %add8 = add i32 %5, %.
  %pipe = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 17
  %6 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pipe, align 4
  %add9 = add i32 %7, %add8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %cond238 = icmp eq i32 %type, 0
  br i1 %cond238, label %sw.bb, label %do.body

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp10 = icmp eq i32 %state, 0
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %8 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %virt, align 8
  %and = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %cmp10, label %if.then11, label %if.else115

if.then11:                                        ; preds = %sw.bb
  br i1 %tobool.not, label %if.then11.cond.false_crit_edge, label %land.lhs.true

if.then11.cond.false_crit_edge:                   ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then11
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %10 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %funcs, align 4
  %tobool13.not = icmp eq ptr %11, null
  br i1 %tobool13.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true14

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true14:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %11, i32 0, i32 13
  %12 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sriov_rreg, align 4
  %tobool18.not = icmp eq ptr %13, null
  br i1 %tobool18.not, label %land.lhs.true14.cond.false_crit_edge, label %cond.true

land.lhs.true14.cond.false_crit_edge:             ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx24 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %14 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx24, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add27 = add i32 %17, 7764
  %call = tail call i32 %13(ptr noundef %adev, i32 noundef %add27, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true14.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then11.cond.false_crit_edge
  %arrayidx29 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %18 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx29, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add32 = add i32 %21, 7764
  %call33 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add32, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call33, %cond.false ]
  %and34 = and i32 %cond, -536870913
  %22 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %virt, align 8
  %and37 = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37)
  %tobool38.not = icmp eq i32 %and37, 0
  br i1 %tobool38.not, label %cond.end.cond.false59_crit_edge, label %land.lhs.true39

cond.end.cond.false59_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

land.lhs.true39:                                  ; preds = %cond.end
  %funcs42 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %24 = ptrtoint ptr %funcs42 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %funcs42, align 4
  %tobool43.not = icmp eq ptr %25, null
  br i1 %tobool43.not, label %land.lhs.true39.cond.false59_crit_edge, label %land.lhs.true44

land.lhs.true39.cond.false59_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

land.lhs.true44:                                  ; preds = %land.lhs.true39
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %25, i32 0, i32 12
  %26 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sriov_wreg, align 4
  %tobool48.not = icmp eq ptr %27, null
  br i1 %tobool48.not, label %land.lhs.true44.cond.false59_crit_edge, label %cond.true49

land.lhs.true44.cond.false59_crit_edge:           ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

cond.true49:                                      ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx55 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx55, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add58 = add i32 %31, 7764
  tail call void %27(ptr noundef %adev, i32 noundef %add58, i32 noundef %and34, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end65

cond.false59:                                     ; preds = %land.lhs.true44.cond.false59_crit_edge, %land.lhs.true39.cond.false59_crit_edge, %cond.end.cond.false59_crit_edge
  %arrayidx61 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %32 = ptrtoint ptr %arrayidx61 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx61, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %add64 = add i32 %35, 7764
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add64, i32 noundef %and34, i32 noundef 0) #13
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false59, %cond.true49
  %36 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %virt, align 8
  %and68 = and i32 %37, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68)
  %tobool69.not = icmp eq i32 %and68, 0
  br i1 %tobool69.not, label %cond.end65.cond.false87_crit_edge, label %land.lhs.true70

cond.end65.cond.false87_crit_edge:                ; preds = %cond.end65
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87

land.lhs.true70:                                  ; preds = %cond.end65
  %funcs73 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %38 = ptrtoint ptr %funcs73 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %funcs73, align 4
  %tobool74.not = icmp eq ptr %39, null
  br i1 %tobool74.not, label %land.lhs.true70.cond.false87_crit_edge, label %land.lhs.true75

land.lhs.true70.cond.false87_crit_edge:           ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87

land.lhs.true75:                                  ; preds = %land.lhs.true70
  %sriov_rreg79 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %39, i32 0, i32 13
  %40 = ptrtoint ptr %sriov_rreg79 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %sriov_rreg79, align 4
  %tobool80.not = icmp eq ptr %41, null
  br i1 %tobool80.not, label %land.lhs.true75.cond.false87_crit_edge, label %cond.true81

land.lhs.true75.cond.false87_crit_edge:           ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87

cond.true81:                                      ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #15
  %call86 = tail call i32 %41(ptr noundef %adev, i32 noundef %add9, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end89

cond.false87:                                     ; preds = %land.lhs.true75.cond.false87_crit_edge, %land.lhs.true70.cond.false87_crit_edge, %cond.end65.cond.false87_crit_edge
  %call88 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add9, i32 noundef 0) #13
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false87, %cond.true81
  %cond90 = phi i32 [ %call86, %cond.true81 ], [ %call88, %cond.false87 ]
  %and91 = and i32 %cond90, -536870913
  %42 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %virt, align 8
  %and95 = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and95)
  %tobool96.not = icmp eq i32 %and95, 0
  br i1 %tobool96.not, label %cond.end89.cond.false113_crit_edge, label %land.lhs.true97

cond.end89.cond.false113_crit_edge:               ; preds = %cond.end89
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false113

land.lhs.true97:                                  ; preds = %cond.end89
  %funcs100 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %44 = ptrtoint ptr %funcs100 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %funcs100, align 4
  %tobool101.not = icmp eq ptr %45, null
  br i1 %tobool101.not, label %land.lhs.true97.cond.false113_crit_edge, label %land.lhs.true102

land.lhs.true97.cond.false113_crit_edge:          ; preds = %land.lhs.true97
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false113

land.lhs.true102:                                 ; preds = %land.lhs.true97
  %sriov_wreg106 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %45, i32 0, i32 12
  %46 = ptrtoint ptr %sriov_wreg106 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sriov_wreg106, align 4
  %tobool107.not = icmp eq ptr %47, null
  br i1 %tobool107.not, label %land.lhs.true102.cond.false113_crit_edge, label %cond.true108

land.lhs.true102.cond.false113_crit_edge:         ; preds = %land.lhs.true102
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false113

cond.true108:                                     ; preds = %land.lhs.true102
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %47(ptr noundef %adev, i32 noundef %add9, i32 noundef %and91, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

cond.false113:                                    ; preds = %land.lhs.true102.cond.false113_crit_edge, %land.lhs.true97.cond.false113_crit_edge, %cond.end89.cond.false113_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add9, i32 noundef %and91, i32 noundef 0) #13
  br label %sw.epilog

if.else115:                                       ; preds = %sw.bb
  br i1 %tobool.not, label %if.else115.cond.false142_crit_edge, label %land.lhs.true120

if.else115.cond.false142_crit_edge:               ; preds = %if.else115
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false142

land.lhs.true120:                                 ; preds = %if.else115
  %funcs123 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %48 = ptrtoint ptr %funcs123 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %funcs123, align 4
  %tobool124.not = icmp eq ptr %49, null
  br i1 %tobool124.not, label %land.lhs.true120.cond.false142_crit_edge, label %land.lhs.true125

land.lhs.true120.cond.false142_crit_edge:         ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false142

land.lhs.true125:                                 ; preds = %land.lhs.true120
  %sriov_rreg129 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %49, i32 0, i32 13
  %50 = ptrtoint ptr %sriov_rreg129 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %sriov_rreg129, align 4
  %tobool130.not = icmp eq ptr %51, null
  br i1 %tobool130.not, label %land.lhs.true125.cond.false142_crit_edge, label %cond.true131

land.lhs.true125.cond.false142_crit_edge:         ; preds = %land.lhs.true125
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false142

cond.true131:                                     ; preds = %land.lhs.true125
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx137 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %52 = ptrtoint ptr %arrayidx137 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx137, align 8
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  %add140 = add i32 %55, 7764
  %call141 = tail call i32 %51(ptr noundef %adev, i32 noundef %add140, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end149

cond.false142:                                    ; preds = %land.lhs.true125.cond.false142_crit_edge, %land.lhs.true120.cond.false142_crit_edge, %if.else115.cond.false142_crit_edge
  %arrayidx144 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %56 = ptrtoint ptr %arrayidx144 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx144, align 8
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %57, align 4
  %add147 = add i32 %59, 7764
  %call148 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add147, i32 noundef 0) #13
  br label %cond.end149

cond.end149:                                      ; preds = %cond.false142, %cond.true131
  %cond150 = phi i32 [ %call141, %cond.true131 ], [ %call148, %cond.false142 ]
  %or152 = or i32 %cond150, 536870912
  %60 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %virt, align 8
  %and155 = and i32 %61, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and155)
  %tobool156.not = icmp eq i32 %and155, 0
  br i1 %tobool156.not, label %cond.end149.cond.false178_crit_edge, label %land.lhs.true157

cond.end149.cond.false178_crit_edge:              ; preds = %cond.end149
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false178

land.lhs.true157:                                 ; preds = %cond.end149
  %funcs160 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %62 = ptrtoint ptr %funcs160 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %funcs160, align 4
  %tobool161.not = icmp eq ptr %63, null
  br i1 %tobool161.not, label %land.lhs.true157.cond.false178_crit_edge, label %land.lhs.true162

land.lhs.true157.cond.false178_crit_edge:         ; preds = %land.lhs.true157
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false178

land.lhs.true162:                                 ; preds = %land.lhs.true157
  %sriov_wreg166 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %63, i32 0, i32 12
  %64 = ptrtoint ptr %sriov_wreg166 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %sriov_wreg166, align 4
  %tobool167.not = icmp eq ptr %65, null
  br i1 %tobool167.not, label %land.lhs.true162.cond.false178_crit_edge, label %cond.true168

land.lhs.true162.cond.false178_crit_edge:         ; preds = %land.lhs.true162
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false178

cond.true168:                                     ; preds = %land.lhs.true162
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx174 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %66 = ptrtoint ptr %arrayidx174 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx174, align 8
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %67, align 4
  %add177 = add i32 %69, 7764
  tail call void %65(ptr noundef %adev, i32 noundef %add177, i32 noundef %or152, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end184

cond.false178:                                    ; preds = %land.lhs.true162.cond.false178_crit_edge, %land.lhs.true157.cond.false178_crit_edge, %cond.end149.cond.false178_crit_edge
  %arrayidx180 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %70 = ptrtoint ptr %arrayidx180 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx180, align 8
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 4
  %add183 = add i32 %73, 7764
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add183, i32 noundef %or152, i32 noundef 0) #13
  br label %cond.end184

cond.end184:                                      ; preds = %cond.false178, %cond.true168
  %74 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %virt, align 8
  %and187 = and i32 %75, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and187)
  %tobool188.not = icmp eq i32 %and187, 0
  br i1 %tobool188.not, label %cond.end184.cond.false206_crit_edge, label %land.lhs.true189

cond.end184.cond.false206_crit_edge:              ; preds = %cond.end184
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false206

land.lhs.true189:                                 ; preds = %cond.end184
  %funcs192 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %76 = ptrtoint ptr %funcs192 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %funcs192, align 4
  %tobool193.not = icmp eq ptr %77, null
  br i1 %tobool193.not, label %land.lhs.true189.cond.false206_crit_edge, label %land.lhs.true194

land.lhs.true189.cond.false206_crit_edge:         ; preds = %land.lhs.true189
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false206

land.lhs.true194:                                 ; preds = %land.lhs.true189
  %sriov_rreg198 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %77, i32 0, i32 13
  %78 = ptrtoint ptr %sriov_rreg198 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %sriov_rreg198, align 4
  %tobool199.not = icmp eq ptr %79, null
  br i1 %tobool199.not, label %land.lhs.true194.cond.false206_crit_edge, label %cond.true200

land.lhs.true194.cond.false206_crit_edge:         ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false206

cond.true200:                                     ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #15
  %call205 = tail call i32 %79(ptr noundef %adev, i32 noundef %add9, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end208

cond.false206:                                    ; preds = %land.lhs.true194.cond.false206_crit_edge, %land.lhs.true189.cond.false206_crit_edge, %cond.end184.cond.false206_crit_edge
  %call207 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add9, i32 noundef 0) #13
  br label %cond.end208

cond.end208:                                      ; preds = %cond.false206, %cond.true200
  %cond209 = phi i32 [ %call205, %cond.true200 ], [ %call207, %cond.false206 ]
  %or211 = or i32 %cond209, 536870912
  %80 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %virt, align 8
  %and214 = and i32 %81, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and214)
  %tobool215.not = icmp eq i32 %and214, 0
  br i1 %tobool215.not, label %cond.end208.cond.false232_crit_edge, label %land.lhs.true216

cond.end208.cond.false232_crit_edge:              ; preds = %cond.end208
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false232

land.lhs.true216:                                 ; preds = %cond.end208
  %funcs219 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %82 = ptrtoint ptr %funcs219 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %funcs219, align 4
  %tobool220.not = icmp eq ptr %83, null
  br i1 %tobool220.not, label %land.lhs.true216.cond.false232_crit_edge, label %land.lhs.true221

land.lhs.true216.cond.false232_crit_edge:         ; preds = %land.lhs.true216
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false232

land.lhs.true221:                                 ; preds = %land.lhs.true216
  %sriov_wreg225 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %83, i32 0, i32 12
  %84 = ptrtoint ptr %sriov_wreg225 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %sriov_wreg225, align 4
  %tobool226.not = icmp eq ptr %85, null
  br i1 %tobool226.not, label %land.lhs.true221.cond.false232_crit_edge, label %cond.true227

land.lhs.true221.cond.false232_crit_edge:         ; preds = %land.lhs.true221
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false232

cond.true227:                                     ; preds = %land.lhs.true221
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %85(ptr noundef %adev, i32 noundef %add9, i32 noundef %or211, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

cond.false232:                                    ; preds = %land.lhs.true221.cond.false232_crit_edge, %land.lhs.true216.cond.false232_crit_edge, %cond.end208.cond.false232_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add9, i32 noundef %or211, i32 noundef 0) #13
  br label %sw.epilog

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9300, 0\0A.popsection", ""() #13, !srcloc !496
  unreachable

sw.epilog:                                        ; preds = %cond.false232, %cond.true227, %cond.false113, %cond.true108
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_kiq_irq(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr nocapture noundef readonly %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %ring2 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3
  %ring_id = getelementptr inbounds %struct.amdgpu_iv_entry, ptr %entry1, i32 0, i32 3
  %0 = ptrtoint ptr %ring_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ring_id, align 4
  %2 = lshr i32 %1, 2
  %conv = and i32 %2, 3
  %conv6 = and i32 %1, 3
  %3 = lshr i32 %1, 4
  %conv10 = and i32 %3, 7
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.8, i32 noundef %conv, i32 noundef %conv6, i32 noundef %conv10) #13
  %call = tail call zeroext i1 @amdgpu_fence_process(ptr noundef %ring2) #13
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_set_priv_reg_fault_state(ptr noundef %adev, ptr nocapture noundef readnone %source, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %switch = icmp ult i32 %state, 2
  br i1 %switch, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb.cond.false77.sink.split_crit_edge, label %land.lhs.true

sw.bb.cond.false77.sink.split_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.sink.split

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false77.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false77.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true55, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 7690
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %and43 = and i32 %cond, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp = icmp eq i32 %state, 1
  %shl = select i1 %cmp, i32 8388608, i32 0
  %or = or i32 %and43, %shl
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

land.lhs.true55:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx47121 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx47121 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx47121, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add50122 = add i32 %16, 7690
  %tobool59.not = icmp eq ptr %.pr, null
  br i1 %tobool59.not, label %land.lhs.true55.cond.false77_crit_edge, label %land.lhs.true60

land.lhs.true55.cond.false77_crit_edge:           ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %sriov_rreg64 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg64 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg64, align 4
  %tobool65.not = icmp eq ptr %18, null
  br i1 %tobool65.not, label %land.lhs.true60.cond.false77_crit_edge, label %cond.true66

land.lhs.true60.cond.false77_crit_edge:           ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77

cond.true66:                                      ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #15
  %call76 = tail call i32 %18(ptr noundef %adev, i32 noundef %add50122, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end84

cond.false77.sink.split:                          ; preds = %land.lhs.true.cond.false77.sink.split_crit_edge, %sw.bb.cond.false77.sink.split_crit_edge
  %arrayidx47121126 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx47121126 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx47121126, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add50122127 = add i32 %22, 7690
  br label %cond.false77

cond.false77:                                     ; preds = %cond.false77.sink.split, %land.lhs.true60.cond.false77_crit_edge, %land.lhs.true55.cond.false77_crit_edge
  %add50125 = phi i32 [ %add50122, %land.lhs.true60.cond.false77_crit_edge ], [ %add50122, %land.lhs.true55.cond.false77_crit_edge ], [ %add50122127, %cond.false77.sink.split ]
  %call83 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50125, i32 noundef 0) #13
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false77, %cond.true66
  %add50123 = phi i32 [ %add50122, %cond.true66 ], [ %add50125, %cond.false77 ]
  %cond85 = phi i32 [ %call76, %cond.true66 ], [ %call83, %cond.false77 ]
  %and86 = and i32 %cond85, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp87 = icmp eq i32 %state, 1
  %shl89 = select i1 %cmp87, i32 8388608, i32 0
  %or90 = or i32 %and86, %shl89
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50123, i32 noundef %or90, i32 noundef 0) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end84, %cond.end, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_priv_reg_irq(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr nocapture noundef readonly %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.9) #13
  tail call fastcc void @gfx_v10_0_handle_priv_fault(ptr noundef %adev, ptr noundef %entry1)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_handle_priv_fault(ptr noundef %adev, ptr nocapture noundef readonly %entry1) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %ring_id = getelementptr inbounds %struct.amdgpu_iv_entry, ptr %entry1, i32 0, i32 3
  %0 = ptrtoint ptr %ring_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ring_id, align 4
  %2 = lshr i32 %1, 2
  %conv = and i32 %2, 3
  %3 = trunc i32 %1 to i8
  %conv5 = and i8 %3, 3
  %4 = lshr i32 %1, 4
  %conv9 = and i32 %4, 7
  %5 = zext i32 %conv to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.136)
  switch i32 %conv, label %do.body [
    i32 0, label %for.cond.preheader
    i32 1, label %entry.sw.bb19_crit_edge
    i32 2, label %entry.sw.bb19_crit_edge79
  ]

entry.sw.bb19_crit_edge79:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19

entry.sw.bb19_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19

for.cond.preheader:                               ; preds = %entry
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %6 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp72.not = icmp eq i32 %7, 0
  br i1 %cmp72.not, label %for.cond.preheader.sw.epilog_crit_edge, label %for.body.lr.ph

for.cond.preheader.sw.epilog_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %conv16 = zext i8 %conv5 to i32
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.073 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %me = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.073, i32 16
  %8 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %me, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp14 = icmp eq i32 %9, 0
  br i1 %cmp14, label %land.lhs.true, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %pipe = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.073, i32 17
  %10 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %conv16)
  %cmp17 = icmp eq i32 %11, %conv16
  br i1 %cmp17, label %if.then, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  %sched = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.073, i32 3
  tail call void @drm_sched_fault(ptr noundef %sched) #13
  br label %for.inc

for.inc:                                          ; preds = %if.then, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.073, 1
  %12 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_gfx_rings, align 8
  %cmp = icmp ult i32 %inc, %13
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.sw.epilog_crit_edge

for.inc.sw.epilog_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

sw.bb19:                                          ; preds = %entry.sw.bb19_crit_edge, %entry.sw.bb19_crit_edge79
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %14 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_compute_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp2269.not = icmp eq i32 %15, 0
  br i1 %cmp2269.not, label %sw.bb19.sw.epilog_crit_edge, label %for.body24.lr.ph

sw.bb19.sw.epilog_crit_edge:                      ; preds = %sw.bb19
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.body24.lr.ph:                                 ; preds = %sw.bb19
  %conv33 = zext i8 %conv5 to i32
  br label %for.body24

for.body24:                                       ; preds = %for.inc43.for.body24_crit_edge, %for.body24.lr.ph
  %i.170 = phi i32 [ 0, %for.body24.lr.ph ], [ %inc44, %for.inc43.for.body24_crit_edge ]
  %me27 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.170, i32 16
  %16 = ptrtoint ptr %me27 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %me27, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %conv)
  %cmp29 = icmp eq i32 %17, %conv
  br i1 %cmp29, label %land.lhs.true31, label %for.body24.for.inc43_crit_edge

for.body24.for.inc43_crit_edge:                   ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc43

land.lhs.true31:                                  ; preds = %for.body24
  %pipe32 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.170, i32 17
  %18 = ptrtoint ptr %pipe32 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pipe32, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %conv33)
  %cmp34 = icmp eq i32 %19, %conv33
  br i1 %cmp34, label %land.lhs.true36, label %land.lhs.true31.for.inc43_crit_edge

land.lhs.true31.for.inc43_crit_edge:              ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc43

land.lhs.true36:                                  ; preds = %land.lhs.true31
  %queue = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.170, i32 18
  %20 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %queue, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %conv9)
  %cmp38 = icmp eq i32 %21, %conv9
  br i1 %cmp38, label %if.then40, label %land.lhs.true36.for.inc43_crit_edge

land.lhs.true36.for.inc43_crit_edge:              ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc43

if.then40:                                        ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #15
  %sched41 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.170, i32 3
  tail call void @drm_sched_fault(ptr noundef %sched41) #13
  br label %for.inc43

for.inc43:                                        ; preds = %if.then40, %land.lhs.true36.for.inc43_crit_edge, %land.lhs.true31.for.inc43_crit_edge, %for.body24.for.inc43_crit_edge
  %inc44 = add nuw i32 %i.170, 1
  %22 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_compute_rings, align 8
  %cmp22 = icmp ult i32 %inc44, %23
  br i1 %cmp22, label %for.inc43.for.body24_crit_edge, label %for.inc43.sw.epilog_crit_edge

for.inc43.sw.epilog_crit_edge:                    ; preds = %for.inc43
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.inc43.for.body24_crit_edge:                   ; preds = %for.inc43
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body24

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9239, 0\0A.popsection", ""() #13, !srcloc !497
  unreachable

sw.epilog:                                        ; preds = %for.inc43.sw.epilog_crit_edge, %sw.bb19.sw.epilog_crit_edge, %for.inc.sw.epilog_crit_edge, %for.cond.preheader.sw.epilog_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_fault(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_set_priv_inst_fault_state(ptr noundef %adev, ptr nocapture noundef readnone %source, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %switch = icmp ult i32 %state, 2
  br i1 %switch, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb.cond.false77.sink.split_crit_edge, label %land.lhs.true

sw.bb.cond.false77.sink.split_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.sink.split

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false77.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false77.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true55, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 7690
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %and43 = and i32 %cond, -4194305
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp = icmp eq i32 %state, 1
  %shl = select i1 %cmp, i32 4194304, i32 0
  %or = or i32 %and43, %shl
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

land.lhs.true55:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx47121 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx47121 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx47121, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add50122 = add i32 %16, 7690
  %tobool59.not = icmp eq ptr %.pr, null
  br i1 %tobool59.not, label %land.lhs.true55.cond.false77_crit_edge, label %land.lhs.true60

land.lhs.true55.cond.false77_crit_edge:           ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %sriov_rreg64 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg64 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg64, align 4
  %tobool65.not = icmp eq ptr %18, null
  br i1 %tobool65.not, label %land.lhs.true60.cond.false77_crit_edge, label %cond.true66

land.lhs.true60.cond.false77_crit_edge:           ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77

cond.true66:                                      ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #15
  %call76 = tail call i32 %18(ptr noundef %adev, i32 noundef %add50122, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end84

cond.false77.sink.split:                          ; preds = %land.lhs.true.cond.false77.sink.split_crit_edge, %sw.bb.cond.false77.sink.split_crit_edge
  %arrayidx47121126 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx47121126 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx47121126, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add50122127 = add i32 %22, 7690
  br label %cond.false77

cond.false77:                                     ; preds = %cond.false77.sink.split, %land.lhs.true60.cond.false77_crit_edge, %land.lhs.true55.cond.false77_crit_edge
  %add50125 = phi i32 [ %add50122, %land.lhs.true60.cond.false77_crit_edge ], [ %add50122, %land.lhs.true55.cond.false77_crit_edge ], [ %add50122127, %cond.false77.sink.split ]
  %call83 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50125, i32 noundef 0) #13
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false77, %cond.true66
  %add50123 = phi i32 [ %add50122, %cond.true66 ], [ %add50125, %cond.false77 ]
  %cond85 = phi i32 [ %call76, %cond.true66 ], [ %call83, %cond.false77 ]
  %and86 = and i32 %cond85, -4194305
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp87 = icmp eq i32 %state, 1
  %shl89 = select i1 %cmp87, i32 4194304, i32 0
  %or90 = or i32 %and86, %shl89
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50123, i32 noundef %or90, i32 noundef 0) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end84, %cond.end, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_priv_inst_irq(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr nocapture noundef readonly %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.10) #13
  tail call fastcc void @gfx_v10_0_handle_priv_fault(ptr noundef %adev, ptr noundef %entry1)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @gfx_v10_0_is_rlc_enabled(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19456
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %arrayidx16 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx16, align 4
  %add17 = add i32 %13, 19456
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20 = icmp ne i32 %and19, 0
  ret i1 %tobool20
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_set_safe_mode(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %.off = add i32 %1, -656128
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %.off)
  %switch = icmp ult i32 %.off, 6
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %switch, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %entry
  br i1 %tobool.not, label %sw.bb.cond.false_crit_edge, label %land.lhs.true

sw.bb.cond.false_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true3

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_wreg, align 4
  %tobool7.not = icmp eq ptr %7, null
  br i1 %tobool7.not, label %land.lhs.true3.cond.false_crit_edge, label %cond.true

land.lhs.true3.cond.false_crit_edge:              ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx12 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx12, align 8
  %arrayidx14 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx14, align 4
  %add = add i32 %11, 19616
  tail call void %7(ptr noundef %adev, i32 noundef %add, i32 noundef 3, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true3.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb.cond.false_crit_edge
  %arrayidx16 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx16, align 8
  %arrayidx18 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx18, align 4
  %add19 = add i32 %15, 19616
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add19, i32 noundef 3, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  %16 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp184.not = icmp eq i32 %17, 0
  br i1 %cmp184.not, label %cond.end.sw.epilog_crit_edge, label %for.body.lr.ph

cond.end.sw.epilog_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.body.lr.ph:                                   ; preds = %cond.end
  %funcs27 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx40 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %i.0185 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.for.body_crit_edge ]
  %18 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt, align 8
  %and22 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %for.body.cond.false44_crit_edge, label %land.lhs.true24

for.body.cond.false44_crit_edge:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44

land.lhs.true24:                                  ; preds = %for.body
  %20 = ptrtoint ptr %funcs27 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs27, align 4
  %tobool28.not = icmp eq ptr %21, null
  br i1 %tobool28.not, label %land.lhs.true24.cond.false44_crit_edge, label %land.lhs.true29

land.lhs.true24.cond.false44_crit_edge:           ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 13
  %22 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_rreg, align 4
  %tobool33.not = icmp eq ptr %23, null
  br i1 %tobool33.not, label %land.lhs.true29.cond.false44_crit_edge, label %cond.true34

land.lhs.true29.cond.false44_crit_edge:           ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44

cond.true34:                                      ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  %24 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx40, align 8
  %arrayidx42 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx42, align 4
  %add43 = add i32 %27, 19616
  %call = tail call i32 %23(ptr noundef %adev, i32 noundef %add43, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end51

cond.false44:                                     ; preds = %land.lhs.true29.cond.false44_crit_edge, %land.lhs.true24.cond.false44_crit_edge, %for.body.cond.false44_crit_edge
  %28 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx40, align 8
  %arrayidx48 = getelementptr i32, ptr %29, i32 1
  %30 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx48, align 4
  %add49 = add i32 %31, 19616
  %call50 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add49, i32 noundef 0) #13
  br label %cond.end51

cond.end51:                                       ; preds = %cond.false44, %cond.true34
  %cond = phi i32 [ %call, %cond.true34 ], [ %call50, %cond.false44 ]
  %and52 = and i32 %cond, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %cond.end51.sw.epilog_crit_edge, label %if.end

cond.end51.sw.epilog_crit_edge:                   ; preds = %cond.end51
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end:                                           ; preds = %cond.end51
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %32 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %32(i32 noundef 214748) #13
  %inc = add nuw i32 %i.0185, 1
  %33 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp ult i32 %inc, %34
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.sw.epilog_crit_edge

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

sw.default:                                       ; preds = %entry
  br i1 %tobool.not, label %sw.default.cond.false79_crit_edge, label %land.lhs.true58

sw.default.cond.false79_crit_edge:                ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false79

land.lhs.true58:                                  ; preds = %sw.default
  %funcs61 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %35 = ptrtoint ptr %funcs61 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %funcs61, align 4
  %tobool62.not = icmp eq ptr %36, null
  br i1 %tobool62.not, label %land.lhs.true58.cond.false79_crit_edge, label %land.lhs.true63

land.lhs.true58.cond.false79_crit_edge:           ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false79

land.lhs.true63:                                  ; preds = %land.lhs.true58
  %sriov_wreg67 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %36, i32 0, i32 12
  %37 = ptrtoint ptr %sriov_wreg67 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %sriov_wreg67, align 4
  %tobool68.not = icmp eq ptr %38, null
  br i1 %tobool68.not, label %land.lhs.true63.cond.false79_crit_edge, label %cond.true69

land.lhs.true63.cond.false79_crit_edge:           ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false79

cond.true69:                                      ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx75 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %39 = ptrtoint ptr %arrayidx75 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx75, align 8
  %arrayidx77 = getelementptr i32, ptr %40, i32 1
  %41 = ptrtoint ptr %arrayidx77 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx77, align 4
  %add78 = add i32 %42, 19461
  tail call void %38(ptr noundef %adev, i32 noundef %add78, i32 noundef 3, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end85

cond.false79:                                     ; preds = %land.lhs.true63.cond.false79_crit_edge, %land.lhs.true58.cond.false79_crit_edge, %sw.default.cond.false79_crit_edge
  %arrayidx81 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %43 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx81, align 8
  %arrayidx83 = getelementptr i32, ptr %44, i32 1
  %45 = ptrtoint ptr %arrayidx83 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx83, align 4
  %add84 = add i32 %46, 19461
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add84, i32 noundef 3, i32 noundef 0) #13
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false79, %cond.true69
  %usec_timeout87 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  %47 = ptrtoint ptr %usec_timeout87 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %usec_timeout87, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp88182.not = icmp eq i32 %48, 0
  br i1 %cmp88182.not, label %cond.end85.sw.epilog_crit_edge, label %for.body89.lr.ph

cond.end85.sw.epilog_crit_edge:                   ; preds = %cond.end85
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

for.body89.lr.ph:                                 ; preds = %cond.end85
  %funcs97 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx111 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body89

for.body89:                                       ; preds = %if.end129.for.body89_crit_edge, %for.body89.lr.ph
  %i.1183 = phi i32 [ 0, %for.body89.lr.ph ], [ %inc131, %if.end129.for.body89_crit_edge ]
  %49 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %virt, align 8
  %and92 = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and92)
  %tobool93.not = icmp eq i32 %and92, 0
  br i1 %tobool93.not, label %for.body89.cond.false116_crit_edge, label %land.lhs.true94

for.body89.cond.false116_crit_edge:               ; preds = %for.body89
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false116

land.lhs.true94:                                  ; preds = %for.body89
  %51 = ptrtoint ptr %funcs97 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %funcs97, align 4
  %tobool98.not = icmp eq ptr %52, null
  br i1 %tobool98.not, label %land.lhs.true94.cond.false116_crit_edge, label %land.lhs.true99

land.lhs.true94.cond.false116_crit_edge:          ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false116

land.lhs.true99:                                  ; preds = %land.lhs.true94
  %sriov_rreg103 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %52, i32 0, i32 13
  %53 = ptrtoint ptr %sriov_rreg103 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %sriov_rreg103, align 4
  %tobool104.not = icmp eq ptr %54, null
  br i1 %tobool104.not, label %land.lhs.true99.cond.false116_crit_edge, label %cond.true105

land.lhs.true99.cond.false116_crit_edge:          ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false116

cond.true105:                                     ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #15
  %55 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx111, align 8
  %arrayidx113 = getelementptr i32, ptr %56, i32 1
  %57 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx113, align 4
  %add114 = add i32 %58, 19461
  %call115 = tail call i32 %54(ptr noundef %adev, i32 noundef %add114, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end123

cond.false116:                                    ; preds = %land.lhs.true99.cond.false116_crit_edge, %land.lhs.true94.cond.false116_crit_edge, %for.body89.cond.false116_crit_edge
  %59 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx111, align 8
  %arrayidx120 = getelementptr i32, ptr %60, i32 1
  %61 = ptrtoint ptr %arrayidx120 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx120, align 4
  %add121 = add i32 %62, 19461
  %call122 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add121, i32 noundef 0) #13
  br label %cond.end123

cond.end123:                                      ; preds = %cond.false116, %cond.true105
  %cond124 = phi i32 [ %call115, %cond.true105 ], [ %call122, %cond.false116 ]
  %and125 = and i32 %cond124, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and125)
  %tobool127.not = icmp eq i32 %and125, 0
  br i1 %tobool127.not, label %cond.end123.sw.epilog_crit_edge, label %if.end129

cond.end123.sw.epilog_crit_edge:                  ; preds = %cond.end123
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end129:                                        ; preds = %cond.end123
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %63 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %63(i32 noundef 214748) #13
  %inc131 = add nuw i32 %i.1183, 1
  %64 = ptrtoint ptr %usec_timeout87 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %usec_timeout87, align 8
  %cmp88 = icmp ult i32 %inc131, %65
  br i1 %cmp88, label %if.end129.for.body89_crit_edge, label %if.end129.sw.epilog_crit_edge

if.end129.sw.epilog_crit_edge:                    ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

if.end129.for.body89_crit_edge:                   ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body89

sw.epilog:                                        ; preds = %if.end129.sw.epilog_crit_edge, %cond.end123.sw.epilog_crit_edge, %cond.end85.sw.epilog_crit_edge, %if.end.sw.epilog_crit_edge, %cond.end51.sw.epilog_crit_edge, %cond.end.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_unset_safe_mode(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %.off = add i32 %1, -656128
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %.off)
  %switch = icmp ult i32 %.off, 6
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %switch, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %entry
  br i1 %tobool.not, label %sw.bb.cond.false_crit_edge, label %land.lhs.true

sw.bb.cond.false_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true3

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_wreg, align 4
  %tobool7.not = icmp eq ptr %7, null
  br i1 %tobool7.not, label %land.lhs.true3.cond.false_crit_edge, label %cond.true

land.lhs.true3.cond.false_crit_edge:              ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx12 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx12, align 8
  %arrayidx14 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx14, align 4
  %add = add i32 %11, 19616
  tail call void %7(ptr noundef %adev, i32 noundef %add, i32 noundef 1, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

cond.false:                                       ; preds = %land.lhs.true3.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb.cond.false_crit_edge
  %arrayidx16 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx16, align 8
  %arrayidx18 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx18, align 4
  %add19 = add i32 %15, 19616
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add19, i32 noundef 1, i32 noundef 0) #13
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br i1 %tobool.not, label %sw.default.cond.false45_crit_edge, label %land.lhs.true24

sw.default.cond.false45_crit_edge:                ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true24:                                  ; preds = %sw.default
  %funcs27 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs27 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs27, align 4
  %tobool28.not = icmp eq ptr %17, null
  br i1 %tobool28.not, label %land.lhs.true24.cond.false45_crit_edge, label %land.lhs.true29

land.lhs.true24.cond.false45_crit_edge:           ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %sriov_wreg33 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg33 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg33, align 4
  %tobool34.not = icmp eq ptr %19, null
  br i1 %tobool34.not, label %land.lhs.true29.cond.false45_crit_edge, label %cond.true35

land.lhs.true29.cond.false45_crit_edge:           ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

cond.true35:                                      ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx41 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx41, align 8
  %arrayidx43 = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx43 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx43, align 4
  %add44 = add i32 %23, 19461
  tail call void %19(ptr noundef %adev, i32 noundef %add44, i32 noundef 1, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

cond.false45:                                     ; preds = %land.lhs.true29.cond.false45_crit_edge, %land.lhs.true24.cond.false45_crit_edge, %sw.default.cond.false45_crit_edge
  %arrayidx47 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx47, align 8
  %arrayidx49 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx49, align 4
  %add50 = add i32 %27, 19461
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50, i32 noundef 1, i32 noundef 0) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.false45, %cond.true35, %cond.false, %cond.true
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_rlc_init(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cs_data1 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 8
  %0 = ptrtoint ptr %cs_data1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @gfx10_cs_data, ptr %cs_data1, align 4
  %call = tail call i32 @amdgpu_gfx_rlc_init_csb(ptr noundef %adev) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %if.end7, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end7:                                          ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %funcs, align 4
  %update_spm_vmid = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %2, i32 0, i32 11
  %3 = ptrtoint ptr %update_spm_vmid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %update_spm_vmid, align 4
  %tobool10.not = icmp eq ptr %4, null
  br i1 %tobool10.not, label %if.end7.cleanup_crit_edge, label %if.then11

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then11:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %4(ptr noundef %adev, i32 noundef 15) #13
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %if.end7.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 %call
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_get_csb_size(ptr nocapture noundef readnone %adev) #6 align 64 {
for.body5.preheader:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 949
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_get_csb_buffer(ptr nocapture noundef readonly %adev, ptr noundef %buffer) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cs_data = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 8
  %0 = ptrtoint ptr %cs_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cs_data, align 4
  %cmp = icmp eq ptr %1, null
  %cmp1 = icmp eq ptr %buffer, null
  %or.cond = or i1 %cmp1, %cmp
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end3

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end3:                                          ; preds = %entry
  %2 = ptrtoint ptr %buffer to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 4849856, ptr %buffer, align 4
  %arrayidx5 = getelementptr i32, ptr %buffer, i32 1
  %3 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 32, ptr %arrayidx5, align 4
  %arrayidx7 = getelementptr i32, ptr %buffer, i32 2
  %4 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 2621888, ptr %arrayidx7, align 4
  %arrayidx9 = getelementptr i32, ptr %buffer, i32 3
  %5 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 128, ptr %arrayidx9, align 4
  %arrayidx11 = getelementptr i32, ptr %buffer, i32 4
  %6 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 128, ptr %arrayidx11, align 4
  %7 = ptrtoint ptr %cs_data to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cs_data, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %cmp15.not116 = icmp eq ptr %10, null
  br i1 %cmp15.not116, label %if.end3.for.end40_crit_edge, label %if.end3.for.cond17.preheader_crit_edge

if.end3.for.cond17.preheader_crit_edge:           ; preds = %if.end3
  br label %for.cond17.preheader

if.end3.for.end40_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end40

for.cond17.preheader:                             ; preds = %for.inc38.for.cond17.preheader_crit_edge, %if.end3.for.cond17.preheader_crit_edge
  %11 = phi ptr [ %37, %for.inc38.for.cond17.preheader_crit_edge ], [ %10, %if.end3.for.cond17.preheader_crit_edge ]
  %sect.0118 = phi ptr [ %incdec.ptr39, %for.inc38.for.cond17.preheader_crit_edge ], [ %8, %if.end3.for.cond17.preheader_crit_edge ]
  %count.0117 = phi i32 [ %count.1.lcssa, %for.inc38.for.cond17.preheader_crit_edge ], [ 5, %if.end3.for.cond17.preheader_crit_edge ]
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %cmp18.not111 = icmp eq ptr %13, null
  br i1 %cmp18.not111, label %for.cond17.preheader.for.inc38_crit_edge, label %for.body19.lr.ph

for.cond17.preheader.for.inc38_crit_edge:         ; preds = %for.cond17.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc38

for.body19.lr.ph:                                 ; preds = %for.cond17.preheader
  %id = getelementptr inbounds %struct.cs_section_def, ptr %sect.0118, i32 0, i32 1
  br label %for.body19

for.body19:                                       ; preds = %for.inc36.for.body19_crit_edge, %for.body19.lr.ph
  %ext.0113 = phi ptr [ %11, %for.body19.lr.ph ], [ %incdec.ptr, %for.inc36.for.body19_crit_edge ]
  %count.1112 = phi i32 [ %count.0117, %for.body19.lr.ph ], [ %count.2.lcssa, %for.inc36.for.body19_crit_edge ]
  %14 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %cmp20 = icmp eq i32 %15, 1
  br i1 %cmp20, label %if.then21, label %for.body19.cleanup_crit_edge

for.body19.cleanup_crit_edge:                     ; preds = %for.body19
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then21:                                        ; preds = %for.body19
  %reg_count = getelementptr inbounds %struct.cs_extent_def, ptr %ext.0113, i32 0, i32 2
  %16 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %reg_count, align 4
  %and = shl i32 %17, 16
  %or = or i32 %and, -1073714944
  %18 = tail call i32 @llvm.bswap.i32(i32 %or)
  %inc22 = add i32 %count.1112, 1
  %arrayidx23 = getelementptr i32, ptr %buffer, i32 %count.1112
  %19 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 %18, ptr %arrayidx23, align 4
  %reg_index = getelementptr inbounds %struct.cs_extent_def, ptr %ext.0113, i32 0, i32 1
  %20 = ptrtoint ptr %reg_index to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %reg_index, align 4
  %sub = add i32 %21, -40960
  %22 = tail call i32 @llvm.bswap.i32(i32 %sub)
  %inc24 = add i32 %count.1112, 2
  %arrayidx25 = getelementptr i32, ptr %buffer, i32 %inc22
  %23 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile i32 %22, ptr %arrayidx25, align 4
  %24 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %reg_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp28108.not = icmp eq i32 %25, 0
  br i1 %cmp28108.not, label %if.then21.for.inc36_crit_edge, label %if.then21.for.body29_crit_edge

if.then21.for.body29_crit_edge:                   ; preds = %if.then21
  br label %for.body29

if.then21.for.inc36_crit_edge:                    ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc36

for.body29:                                       ; preds = %for.body29.for.body29_crit_edge, %if.then21.for.body29_crit_edge
  %i.0110 = phi i32 [ %inc34, %for.body29.for.body29_crit_edge ], [ 0, %if.then21.for.body29_crit_edge ]
  %count.2109 = phi i32 [ %inc32, %for.body29.for.body29_crit_edge ], [ %inc24, %if.then21.for.body29_crit_edge ]
  %26 = ptrtoint ptr %ext.0113 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ext.0113, align 4
  %arrayidx31 = getelementptr i32, ptr %27, i32 %i.0110
  %28 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx31, align 4
  %30 = tail call i32 @llvm.bswap.i32(i32 %29)
  %inc32 = add i32 %count.2109, 1
  %arrayidx33 = getelementptr i32, ptr %buffer, i32 %count.2109
  %31 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 %30, ptr %arrayidx33, align 4
  %inc34 = add nuw i32 %i.0110, 1
  %32 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %reg_count, align 4
  %cmp28 = icmp ult i32 %inc34, %33
  br i1 %cmp28, label %for.body29.for.body29_crit_edge, label %for.body29.for.inc36_crit_edge

for.body29.for.inc36_crit_edge:                   ; preds = %for.body29
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc36

for.body29.for.body29_crit_edge:                  ; preds = %for.body29
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body29

for.inc36:                                        ; preds = %for.body29.for.inc36_crit_edge, %if.then21.for.inc36_crit_edge
  %count.2.lcssa = phi i32 [ %inc24, %if.then21.for.inc36_crit_edge ], [ %inc32, %for.body29.for.inc36_crit_edge ]
  %incdec.ptr = getelementptr %struct.cs_extent_def, ptr %ext.0113, i32 1
  %34 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %incdec.ptr, align 4
  %cmp18.not = icmp eq ptr %35, null
  br i1 %cmp18.not, label %for.inc36.for.inc38_crit_edge, label %for.inc36.for.body19_crit_edge

for.inc36.for.body19_crit_edge:                   ; preds = %for.inc36
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body19

for.inc36.for.inc38_crit_edge:                    ; preds = %for.inc36
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc38

for.inc38:                                        ; preds = %for.inc36.for.inc38_crit_edge, %for.cond17.preheader.for.inc38_crit_edge
  %count.1.lcssa = phi i32 [ %count.0117, %for.cond17.preheader.for.inc38_crit_edge ], [ %count.2.lcssa, %for.inc36.for.inc38_crit_edge ]
  %incdec.ptr39 = getelementptr %struct.cs_section_def, ptr %sect.0118, i32 1
  %36 = ptrtoint ptr %incdec.ptr39 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %incdec.ptr39, align 4
  %cmp15.not = icmp eq ptr %37, null
  br i1 %cmp15.not, label %for.inc38.for.end40_crit_edge, label %for.inc38.for.cond17.preheader_crit_edge

for.inc38.for.cond17.preheader_crit_edge:         ; preds = %for.inc38
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond17.preheader

for.inc38.for.end40_crit_edge:                    ; preds = %for.inc38
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end40

for.end40:                                        ; preds = %for.inc38.for.end40_crit_edge, %if.end3.for.end40_crit_edge
  %count.0.lcssa = phi i32 [ 5, %if.end3.for.end40_crit_edge ], [ %count.1.lcssa, %for.inc38.for.end40_crit_edge ]
  %arrayidx41 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %38 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx41, align 8
  %arrayidx43 = getelementptr i32, ptr %39, i32 1
  %40 = ptrtoint ptr %arrayidx43 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx43, align 4
  %sub44 = add i32 %41, -40745
  %inc45 = add i32 %count.0.lcssa, 1
  %arrayidx46 = getelementptr i32, ptr %buffer, i32 %count.0.lcssa
  %42 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile i32 6881728, ptr %arrayidx46, align 4
  %43 = tail call i32 @llvm.bswap.i32(i32 %sub44)
  %inc47 = add i32 %count.0.lcssa, 2
  %arrayidx48 = getelementptr i32, ptr %buffer, i32 %inc45
  %44 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile i32 %43, ptr %arrayidx48, align 4
  %pa_sc_tile_steering_override = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 35
  %45 = ptrtoint ptr %pa_sc_tile_steering_override to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pa_sc_tile_steering_override, align 4
  %47 = tail call i32 @llvm.bswap.i32(i32 %46)
  %inc50 = add i32 %count.0.lcssa, 3
  %arrayidx51 = getelementptr i32, ptr %buffer, i32 %inc47
  %48 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %47, ptr %arrayidx51, align 4
  %inc52 = add i32 %count.0.lcssa, 4
  %arrayidx53 = getelementptr i32, ptr %buffer, i32 %inc50
  %49 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile i32 4849856, ptr %arrayidx53, align 4
  %inc54 = add i32 %count.0.lcssa, 5
  %arrayidx55 = getelementptr i32, ptr %buffer, i32 %inc52
  %50 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile i32 48, ptr %arrayidx55, align 4
  %inc56 = add i32 %count.0.lcssa, 6
  %arrayidx57 = getelementptr i32, ptr %buffer, i32 %inc54
  %51 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile i32 1179840, ptr %arrayidx57, align 4
  %arrayidx59 = getelementptr i32, ptr %buffer, i32 %inc56
  %52 = ptrtoint ptr %arrayidx59 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 0, ptr %arrayidx59, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end40, %for.body19.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_0_rlc_resume(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %0 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %land.lhs.true, label %entry.if.else_crit_edge

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %autoload_supported = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 28
  %2 = ptrtoint ptr %autoload_supported to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %autoload_supported, align 8, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %land.lhs.true.if.else_crit_edge, label %if.then

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  %call = tail call fastcc i32 @gfx_v10_0_wait_for_rlc_autoload_complete(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %if.then
  tail call fastcc void @gfx_v10_0_init_csb(ptr noundef %adev)
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %4 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %virt, align 8
  %and = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %cond.end.i, label %if.end.if.end103_crit_edge

if.end.if.end103_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end103

cond.end.i:                                       ; preds = %if.end
  %arrayidx14.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx14.i, align 8
  %arrayidx16.i = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx16.i, align 4
  %add17.i = add i32 %9, 19584
  %call18.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17.i, i32 noundef 0) #13
  %or19.i = or i32 %call18.i, 3
  %10 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %virt, align 8
  %and22.i = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  br i1 %tobool23.not.i, label %cond.end.i.cond.false44.i_crit_edge, label %land.lhs.true24.i

cond.end.i.cond.false44.i_crit_edge:              ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i

land.lhs.true24.i:                                ; preds = %cond.end.i
  %funcs27.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %12 = ptrtoint ptr %funcs27.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %funcs27.i, align 4
  %tobool28.not.i = icmp eq ptr %13, null
  br i1 %tobool28.not.i, label %land.lhs.true24.i.cond.false44.i_crit_edge, label %land.lhs.true29.i

land.lhs.true24.i.cond.false44.i_crit_edge:       ; preds = %land.lhs.true24.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i

land.lhs.true29.i:                                ; preds = %land.lhs.true24.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %13, i32 0, i32 12
  %14 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool33.not.i = icmp eq ptr %15, null
  br i1 %tobool33.not.i, label %land.lhs.true29.i.cond.false44.i_crit_edge, label %cond.true34.i

land.lhs.true29.i.cond.false44.i_crit_edge:       ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i

cond.true34.i:                                    ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #15
  %16 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx14.i, align 8
  %arrayidx42.i = getelementptr i32, ptr %17, i32 1
  %18 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx42.i, align 4
  %add43.i = add i32 %19, 19584
  tail call void %15(ptr noundef %adev, i32 noundef %add43.i, i32 noundef %or19.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end103

cond.false44.i:                                   ; preds = %land.lhs.true29.i.cond.false44.i_crit_edge, %land.lhs.true24.i.cond.false44.i_crit_edge, %cond.end.i.cond.false44.i_crit_edge
  %20 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx14.i, align 8
  %arrayidx48.i = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx48.i, align 4
  %add49.i = add i32 %23, 19584
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49.i, i32 noundef %or19.i, i32 noundef 0) #13
  br label %if.end103

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %virt7 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %24 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt7, align 8
  %and9 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_init_csb(ptr noundef %adev)
  br label %cleanup

if.end13:                                         ; preds = %if.else
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %26 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs, align 4
  %stop = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 8
  %28 = ptrtoint ptr %stop to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %stop, align 4
  tail call void %29(ptr noundef %adev) #13
  %30 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %virt7, align 8
  %and16 = and i32 %31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16)
  %tobool17.not = icmp eq i32 %and16, 0
  br i1 %tobool17.not, label %if.end13.cond.false_crit_edge, label %land.lhs.true18

if.end13.cond.false_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true18:                                  ; preds = %if.end13
  %32 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %funcs, align 4
  %tobool22.not = icmp eq ptr %33, null
  br i1 %tobool22.not, label %land.lhs.true18.cond.false_crit_edge, label %land.lhs.true23

land.lhs.true18.cond.false_crit_edge:             ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true23:                                  ; preds = %land.lhs.true18
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %33, i32 0, i32 12
  %34 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_wreg, align 4
  %tobool27.not = icmp eq ptr %35, null
  br i1 %tobool27.not, label %land.lhs.true23.cond.false_crit_edge, label %cond.true

land.lhs.true23.cond.false_crit_edge:             ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx, align 8
  %arrayidx33 = getelementptr i32, ptr %37, i32 1
  %38 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx33, align 4
  %add = add i32 %39, 19529
  tail call void %35(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true23.cond.false_crit_edge, %land.lhs.true18.cond.false_crit_edge, %if.end13.cond.false_crit_edge
  %arrayidx35 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %40 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx35, align 8
  %arrayidx37 = getelementptr i32, ptr %41, i32 1
  %42 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx37, align 4
  %add38 = add i32 %43, 19529
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %44 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %virt7, align 8
  %and41 = and i32 %45, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  br i1 %tobool42.not, label %cond.end.cond.false64_crit_edge, label %land.lhs.true43

cond.end.cond.false64_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false64

land.lhs.true43:                                  ; preds = %cond.end
  %46 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %funcs, align 4
  %tobool47.not = icmp eq ptr %47, null
  br i1 %tobool47.not, label %land.lhs.true43.cond.false64_crit_edge, label %land.lhs.true48

land.lhs.true43.cond.false64_crit_edge:           ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false64

land.lhs.true48:                                  ; preds = %land.lhs.true43
  %sriov_wreg52 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %47, i32 0, i32 12
  %48 = ptrtoint ptr %sriov_wreg52 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sriov_wreg52, align 4
  %tobool53.not = icmp eq ptr %49, null
  br i1 %tobool53.not, label %land.lhs.true48.cond.false64_crit_edge, label %cond.true54

land.lhs.true48.cond.false64_crit_edge:           ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false64

cond.true54:                                      ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx60 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %50 = ptrtoint ptr %arrayidx60 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx60, align 8
  %arrayidx62 = getelementptr i32, ptr %51, i32 1
  %52 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx62, align 4
  %add63 = add i32 %53, 19523
  tail call void %49(ptr noundef %adev, i32 noundef %add63, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end70

cond.false64:                                     ; preds = %land.lhs.true48.cond.false64_crit_edge, %land.lhs.true43.cond.false64_crit_edge, %cond.end.cond.false64_crit_edge
  %arrayidx66 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %54 = ptrtoint ptr %arrayidx66 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx66, align 8
  %arrayidx68 = getelementptr i32, ptr %55, i32 1
  %56 = ptrtoint ptr %arrayidx68 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx68, align 4
  %add69 = add i32 %57, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add69, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end70

cond.end70:                                       ; preds = %cond.false64, %cond.true54
  %58 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %load_type, align 8
  %60 = zext i32 %59 to i64
  call void @__sanitizer_cov_trace_switch(i64 %60, ptr @__sancov_gen_cov_switch_values.137)
  switch i32 %59, label %cond.end70.if.end89_crit_edge [
    i32 0, label %if.then74
    i32 3, label %if.then83
  ]

cond.end70.if.end89_crit_edge:                    ; preds = %cond.end70
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89

if.then74:                                        ; preds = %cond.end70
  %rlc_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 15
  %61 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %rlc_fw.i, align 4
  %tobool.not.i149 = icmp eq ptr %62, null
  br i1 %tobool.not.i149, label %if.then74.cleanup_crit_edge, label %if.end.i

if.then74.cleanup_crit_edge:                      ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %if.then74
  %data.i = getelementptr inbounds %struct.firmware, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %data.i, align 4
  tail call void @amdgpu_ucode_print_rlc_hdr(ptr noundef %64) #13
  %65 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %rlc_fw.i, align 4
  %data5.i = getelementptr inbounds %struct.firmware, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %data5.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %data5.i, align 4
  %ucode_array_offset_bytes.i = getelementptr inbounds %struct.common_firmware_header, ptr %64, i32 0, i32 8
  %69 = ptrtoint ptr %ucode_array_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %ucode_array_offset_bytes.i, align 4
  %71 = tail call i32 @llvm.bswap.i32(i32 %70) #13
  %add.ptr.i = getelementptr i8, ptr %68, i32 %71
  %ucode_size_bytes.i = getelementptr inbounds %struct.common_firmware_header, ptr %64, i32 0, i32 7
  %72 = ptrtoint ptr %ucode_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %ucode_size_bytes.i, align 4
  %74 = tail call i32 @llvm.bswap.i32(i32 %73) #13
  %div137.i = lshr i32 %74, 2
  %75 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %virt7, align 8
  %and.i151 = and i32 %76, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i151)
  %tobool8.not.i = icmp eq i32 %and.i151, 0
  br i1 %tobool8.not.i, label %if.end.i.cond.false.i158_crit_edge, label %land.lhs.true.i153

if.end.i.cond.false.i158_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i158

land.lhs.true.i153:                               ; preds = %if.end.i
  %77 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %funcs, align 4
  %tobool10.not.i = icmp eq ptr %78, null
  br i1 %tobool10.not.i, label %land.lhs.true.i153.cond.false.i158_crit_edge, label %land.lhs.true11.i

land.lhs.true.i153.cond.false.i158_crit_edge:     ; preds = %land.lhs.true.i153
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i158

land.lhs.true11.i:                                ; preds = %land.lhs.true.i153
  %sriov_wreg.i154 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %78, i32 0, i32 12
  %79 = ptrtoint ptr %sriov_wreg.i154 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %sriov_wreg.i154, align 4
  %tobool15.not.i = icmp eq ptr %80, null
  br i1 %tobool15.not.i, label %land.lhs.true11.i.cond.false.i158_crit_edge, label %cond.true.i157

land.lhs.true11.i.cond.false.i158_crit_edge:      ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i158

cond.true.i157:                                   ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i155 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %81 = ptrtoint ptr %arrayidx.i155 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx.i155, align 8
  %arrayidx21.i = getelementptr i32, ptr %82, i32 1
  %83 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %arrayidx21.i, align 4
  %add.i156 = add i32 %84, 23393
  tail call void %80(ptr noundef %adev, i32 noundef %add.i156, i32 noundef 8192, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i159

cond.false.i158:                                  ; preds = %land.lhs.true11.i.cond.false.i158_crit_edge, %land.lhs.true.i153.cond.false.i158_crit_edge, %if.end.i.cond.false.i158_crit_edge
  %arrayidx23.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %85 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx23.i, align 8
  %arrayidx25.i = getelementptr i32, ptr %86, i32 1
  %87 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx25.i, align 4
  %add26.i = add i32 %88, 23393
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add26.i, i32 noundef 8192, i32 noundef 0) #13
  br label %cond.end.i159

cond.end.i159:                                    ; preds = %cond.false.i158, %cond.true.i157
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %74)
  %cmp138.not.i = icmp ult i32 %74, 4
  br i1 %cmp138.not.i, label %cond.end.i159.for.end.i_crit_edge, label %for.body.lr.ph.i

cond.end.i159.for.end.i_crit_edge:                ; preds = %cond.end.i159
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %cond.end.i159
  %arrayidx48.i160 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %umax.i = tail call i32 @llvm.umax.i32(i32 %div137.i, i32 1) #13
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0141.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %fw_data.0139.i = phi ptr [ %add.ptr.i, %for.body.lr.ph.i ], [ %fw_data.1.i, %for.inc.i.for.body.i_crit_edge ]
  %89 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %virt7, align 8
  %and29.i = and i32 %90, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i)
  %tobool30.not.i = icmp eq i32 %and29.i, 0
  br i1 %tobool30.not.i, label %for.body.i.cond.false52.i_crit_edge, label %land.lhs.true31.i

for.body.i.cond.false52.i_crit_edge:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52.i

land.lhs.true31.i:                                ; preds = %for.body.i
  %91 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %funcs, align 4
  %tobool35.not.i = icmp eq ptr %92, null
  br i1 %tobool35.not.i, label %land.lhs.true31.i.cond.false52.i_crit_edge, label %land.lhs.true36.i

land.lhs.true31.i.cond.false52.i_crit_edge:       ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52.i

land.lhs.true36.i:                                ; preds = %land.lhs.true31.i
  %sriov_wreg40.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %92, i32 0, i32 12
  %93 = ptrtoint ptr %sriov_wreg40.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %sriov_wreg40.i, align 4
  %tobool41.not.i = icmp eq ptr %94, null
  br i1 %tobool41.not.i, label %land.lhs.true36.i.cond.false52.i_crit_edge, label %cond.true42.i

land.lhs.true36.i.cond.false52.i_crit_edge:       ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52.i

cond.true42.i:                                    ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #15
  %95 = ptrtoint ptr %arrayidx48.i160 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %arrayidx48.i160, align 8
  %arrayidx50.i = getelementptr i32, ptr %96, i32 1
  %97 = ptrtoint ptr %arrayidx50.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx50.i, align 4
  %add51.i = add i32 %98, 23394
  %99 = ptrtoint ptr %fw_data.0139.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %fw_data.0139.i, align 4
  %101 = tail call i32 @llvm.bswap.i32(i32 %100) #13
  tail call void %94(ptr noundef %adev, i32 noundef %add51.i, i32 noundef %101, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc.i

cond.false52.i:                                   ; preds = %land.lhs.true36.i.cond.false52.i_crit_edge, %land.lhs.true31.i.cond.false52.i_crit_edge, %for.body.i.cond.false52.i_crit_edge
  %102 = ptrtoint ptr %arrayidx48.i160 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %arrayidx48.i160, align 8
  %arrayidx56.i = getelementptr i32, ptr %103, i32 1
  %104 = ptrtoint ptr %arrayidx56.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx56.i, align 4
  %add57.i = add i32 %105, 23394
  %106 = ptrtoint ptr %fw_data.0139.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %fw_data.0139.i, align 4
  %108 = tail call i32 @llvm.bswap.i32(i32 %107) #13
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add57.i, i32 noundef %108, i32 noundef 0) #13
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.false52.i, %cond.true42.i
  %fw_data.1.i = getelementptr i32, ptr %fw_data.0139.i, i32 1
  %inc.i = add nuw nsw i32 %i.0141.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %umax.i
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %cond.end.i159.for.end.i_crit_edge
  %109 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %virt7, align 8
  %and63.i = and i32 %110, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63.i)
  %tobool64.not.i = icmp eq i32 %and63.i, 0
  br i1 %tobool64.not.i, label %for.end.i.cond.false87.i_crit_edge, label %land.lhs.true65.i

for.end.i.cond.false87.i_crit_edge:               ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87.i

land.lhs.true65.i:                                ; preds = %for.end.i
  %111 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %funcs, align 4
  %tobool69.not.i = icmp eq ptr %112, null
  br i1 %tobool69.not.i, label %land.lhs.true65.i.cond.false87.i_crit_edge, label %land.lhs.true70.i

land.lhs.true65.i.cond.false87.i_crit_edge:       ; preds = %land.lhs.true65.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87.i

land.lhs.true70.i:                                ; preds = %land.lhs.true65.i
  %sriov_wreg74.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %112, i32 0, i32 12
  %113 = ptrtoint ptr %sriov_wreg74.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %sriov_wreg74.i, align 4
  %tobool75.not.i = icmp eq ptr %114, null
  br i1 %tobool75.not.i, label %land.lhs.true70.i.cond.false87.i_crit_edge, label %cond.true76.i

land.lhs.true70.i.cond.false87.i_crit_edge:       ; preds = %land.lhs.true70.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87.i

cond.true76.i:                                    ; preds = %land.lhs.true70.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx82.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %115 = ptrtoint ptr %arrayidx82.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %arrayidx82.i, align 8
  %arrayidx84.i = getelementptr i32, ptr %116, i32 1
  %117 = ptrtoint ptr %arrayidx84.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx84.i, align 4
  %add85.i = add i32 %118, 23393
  %rlc_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 16
  %119 = ptrtoint ptr %rlc_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %rlc_fw_version.i, align 8
  tail call void %114(ptr noundef %adev, i32 noundef %add85.i, i32 noundef %120, i32 noundef 0, i32 noundef 1) #13
  br label %if.end89

cond.false87.i:                                   ; preds = %land.lhs.true70.i.cond.false87.i_crit_edge, %land.lhs.true65.i.cond.false87.i_crit_edge, %for.end.i.cond.false87.i_crit_edge
  %arrayidx89.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %121 = ptrtoint ptr %arrayidx89.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %arrayidx89.i, align 8
  %arrayidx91.i = getelementptr i32, ptr %122, i32 1
  %123 = ptrtoint ptr %arrayidx91.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %arrayidx91.i, align 4
  %add92.i = add i32 %124, 23393
  %rlc_fw_version94.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 16
  %125 = ptrtoint ptr %rlc_fw_version94.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %rlc_fw_version94.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add92.i, i32 noundef %126, i32 noundef 0) #13
  br label %if.end89

if.then83:                                        ; preds = %cond.end70
  %rlc_toc_buf.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 44
  %127 = ptrtoint ptr %rlc_toc_buf.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %rlc_toc_buf.i.i, align 8
  %129 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 2, i32 2), align 4
  %rlc_autoload_ptr.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 41
  %130 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %132 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 2, i32 1), align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %131, i32 %132
  %133 = call ptr @memcpy(ptr %add.ptr.i.i.i, ptr %128, i32 %129)
  %num_instances.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 107, i32 8
  %134 = ptrtoint ptr %num_instances.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %num_instances.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %135)
  %cmp64.i.i = icmp sgt i32 %135, 0
  br i1 %cmp64.i.i, label %for.body.lr.ph.i.i, label %if.then83.gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i_crit_edge

if.then83.gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i_crit_edge: ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then83
  %sdma.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 107
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.065.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr [8 x %struct.amdgpu_sdma_instance], ptr %sdma.i.i, i32 0, i32 %i.065.i.i
  %136 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %arrayidx.i.i, align 8
  %data.i.i = getelementptr inbounds %struct.firmware, ptr %137, i32 0, i32 1
  %138 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %data.i.i, align 4
  %ucode_array_offset_bytes.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %139, i32 0, i32 8
  %140 = ptrtoint ptr %ucode_array_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %ucode_array_offset_bytes.i.i, align 4
  %142 = tail call i32 @llvm.bswap.i32(i32 %141) #13
  %add.ptr.i.i = getelementptr i8, ptr %139, i32 %142
  %ucode_size_bytes.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %139, i32 0, i32 7
  %143 = ptrtoint ptr %ucode_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %ucode_size_bytes.i.i, align 4
  %145 = tail call i32 @llvm.bswap.i32(i32 %144) #13
  %146 = zext i32 %i.065.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %146, ptr @__sancov_gen_cov_switch_values.138)
  switch i32 %i.065.i.i, label %for.body.i.i.for.inc.i.i_crit_edge [
    i32 0, label %if.then.i.i
    i32 1, label %if.then11.i.i
  ]

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %147 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %149 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 15, i32 1), align 4
  %150 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 15, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %144)
  %cmp3.i.i.i = icmp eq i32 %144, 0
  %fw_size.addr.0.i.i.i = select i1 %cmp3.i.i.i, i32 %150, i32 %145
  %151 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i.i.i, i32 %150) #13
  %add.ptr.i.i227.i = getelementptr i8, ptr %148, i32 %149
  %152 = call ptr @memcpy(ptr %add.ptr.i.i227.i, ptr %add.ptr.i.i, i32 %151)
  call void @__sanitizer_cov_trace_cmp4(i32 %150, i32 %fw_size.addr.0.i.i.i)
  %cmp9.i.i.i = icmp ugt i32 %150, %fw_size.addr.0.i.i.i
  br i1 %cmp9.i.i.i, label %if.then10.i.i.i, label %if.then.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i_crit_edge

if.then.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i

if.then10.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i.i.i = getelementptr i8, ptr %add.ptr.i.i227.i, i32 %151
  %sub.i.i.i = sub i32 %150, %151
  %153 = call ptr @memset(ptr %add.ptr12.i.i.i, i32 0, i32 %sub.i.i.i)
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i: ; preds = %if.then10.i.i.i, %if.then.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i_crit_edge
  %jt_offset.i.i = getelementptr inbounds %struct.sdma_firmware_header_v1_0, ptr %139, i32 0, i32 3
  %154 = ptrtoint ptr %jt_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %jt_offset.i.i, align 4
  %add.ptr9.i.i = getelementptr i32, ptr %add.ptr.i.i, i32 %155
  %jt_size.i.i = getelementptr inbounds %struct.sdma_firmware_header_v1_0, ptr %139, i32 0, i32 4
  %156 = ptrtoint ptr %jt_size.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %jt_size.i.i, align 4
  %mul.i.i = shl i32 %157, 2
  %158 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %160 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 16, i32 1), align 4
  %161 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 16, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul.i.i)
  %cmp3.i38.i.i = icmp eq i32 %mul.i.i, 0
  %fw_size.addr.0.i39.i.i = select i1 %cmp3.i38.i.i, i32 %161, i32 %mul.i.i
  %162 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i39.i.i, i32 %161) #13
  %add.ptr.i40.i.i = getelementptr i8, ptr %159, i32 %160
  %163 = call ptr @memcpy(ptr %add.ptr.i40.i.i, ptr %add.ptr9.i.i, i32 %162)
  call void @__sanitizer_cov_trace_cmp4(i32 %161, i32 %fw_size.addr.0.i39.i.i)
  %cmp9.i41.i.i = icmp ugt i32 %161, %fw_size.addr.0.i39.i.i
  br i1 %cmp9.i41.i.i, label %if.then10.i44.i.i, label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i.for.inc.i.i_crit_edge

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i.for.inc.i.i_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i

if.then10.i44.i.i:                                ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i42.i.i = getelementptr i8, ptr %add.ptr.i40.i.i, i32 %162
  %sub.i43.i.i = sub i32 %161, %162
  %164 = call ptr @memset(ptr %add.ptr12.i42.i.i, i32 0, i32 %sub.i43.i.i)
  br label %for.inc.i.i

if.then11.i.i:                                    ; preds = %for.body.i.i
  %165 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %167 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 17, i32 1), align 4
  %168 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 17, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %144)
  %cmp3.i47.i.i = icmp eq i32 %144, 0
  %fw_size.addr.0.i48.i.i = select i1 %cmp3.i47.i.i, i32 %168, i32 %145
  %169 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i48.i.i, i32 %168) #13
  %add.ptr.i49.i.i = getelementptr i8, ptr %166, i32 %167
  %170 = call ptr @memcpy(ptr %add.ptr.i49.i.i, ptr %add.ptr.i.i, i32 %169)
  call void @__sanitizer_cov_trace_cmp4(i32 %168, i32 %fw_size.addr.0.i48.i.i)
  %cmp9.i50.i.i = icmp ugt i32 %168, %fw_size.addr.0.i48.i.i
  br i1 %cmp9.i50.i.i, label %if.then10.i53.i.i, label %if.then11.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i_crit_edge

if.then11.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i_crit_edge: ; preds = %if.then11.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i

if.then10.i53.i.i:                                ; preds = %if.then11.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i51.i.i = getelementptr i8, ptr %add.ptr.i49.i.i, i32 %169
  %sub.i52.i.i = sub i32 %168, %169
  %171 = call ptr @memset(ptr %add.ptr12.i51.i.i, i32 0, i32 %sub.i52.i.i)
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i: ; preds = %if.then10.i53.i.i, %if.then11.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i_crit_edge
  %jt_offset12.i.i = getelementptr inbounds %struct.sdma_firmware_header_v1_0, ptr %139, i32 0, i32 3
  %172 = ptrtoint ptr %jt_offset12.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %jt_offset12.i.i, align 4
  %add.ptr13.i.i = getelementptr i32, ptr %add.ptr.i.i, i32 %173
  %jt_size14.i.i = getelementptr inbounds %struct.sdma_firmware_header_v1_0, ptr %139, i32 0, i32 4
  %174 = ptrtoint ptr %jt_size14.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %jt_size14.i.i, align 4
  %mul15.i.i = shl i32 %175, 2
  %176 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %178 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 18, i32 1), align 4
  %179 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 18, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul15.i.i)
  %cmp3.i56.i.i = icmp eq i32 %mul15.i.i, 0
  %fw_size.addr.0.i57.i.i = select i1 %cmp3.i56.i.i, i32 %179, i32 %mul15.i.i
  %180 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i57.i.i, i32 %179) #13
  %add.ptr.i58.i.i = getelementptr i8, ptr %177, i32 %178
  %181 = call ptr @memcpy(ptr %add.ptr.i58.i.i, ptr %add.ptr13.i.i, i32 %180)
  call void @__sanitizer_cov_trace_cmp4(i32 %179, i32 %fw_size.addr.0.i57.i.i)
  %cmp9.i59.i.i = icmp ugt i32 %179, %fw_size.addr.0.i57.i.i
  br i1 %cmp9.i59.i.i, label %if.then10.i62.i.i, label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i.for.inc.i.i_crit_edge

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i.for.inc.i.i_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc.i.i

if.then10.i62.i.i:                                ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i60.i.i = getelementptr i8, ptr %add.ptr.i58.i.i, i32 %180
  %sub.i61.i.i = sub i32 %179, %180
  %182 = call ptr @memset(ptr %add.ptr12.i60.i.i, i32 0, i32 %sub.i61.i.i)
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then10.i62.i.i, %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit54.i.i.for.inc.i.i_crit_edge, %if.then10.i44.i.i, %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %i.065.i.i, 1
  %183 = ptrtoint ptr %num_instances.i.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %num_instances.i.i, align 4
  %cmp.i.i = icmp slt i32 %inc.i.i, %184
  br i1 %cmp.i.i, label %for.inc.i.i.for.body.i.i_crit_edge, label %for.inc.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i_crit_edge

for.inc.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i: ; preds = %for.inc.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i_crit_edge, %if.then83.gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i_crit_edge
  %pfp_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 11
  %185 = ptrtoint ptr %pfp_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %pfp_fw.i.i, align 4
  %data.i228.i = getelementptr inbounds %struct.firmware, ptr %186, i32 0, i32 1
  %187 = ptrtoint ptr %data.i228.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %data.i228.i, align 4
  %ucode_array_offset_bytes.i229.i = getelementptr inbounds %struct.common_firmware_header, ptr %188, i32 0, i32 8
  %189 = ptrtoint ptr %ucode_array_offset_bytes.i229.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %ucode_array_offset_bytes.i229.i, align 4
  %191 = tail call i32 @llvm.bswap.i32(i32 %190) #13
  %add.ptr.i230.i = getelementptr i8, ptr %188, i32 %191
  %ucode_size_bytes.i231.i = getelementptr inbounds %struct.common_firmware_header, ptr %188, i32 0, i32 7
  %192 = ptrtoint ptr %ucode_size_bytes.i231.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %ucode_size_bytes.i231.i, align 4
  %194 = tail call i32 @llvm.bswap.i32(i32 %193) #13
  %195 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %197 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 20, i32 1), align 4
  %198 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 20, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %193)
  %cmp3.i.i233.i = icmp eq i32 %193, 0
  %fw_size.addr.0.i.i234.i = select i1 %cmp3.i.i233.i, i32 %198, i32 %194
  %199 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i.i234.i, i32 %198) #13
  %add.ptr.i.i235.i = getelementptr i8, ptr %196, i32 %197
  %200 = call ptr @memcpy(ptr %add.ptr.i.i235.i, ptr %add.ptr.i230.i, i32 %199)
  call void @__sanitizer_cov_trace_cmp4(i32 %198, i32 %fw_size.addr.0.i.i234.i)
  %cmp9.i.i236.i = icmp ugt i32 %198, %fw_size.addr.0.i.i234.i
  br i1 %cmp9.i.i236.i, label %if.then10.i.i239.i, label %gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i_crit_edge

gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i

if.then10.i.i239.i:                               ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i.i237.i = getelementptr i8, ptr %add.ptr.i.i235.i, i32 %199
  %sub.i.i238.i = sub i32 %198, %199
  %201 = call ptr @memset(ptr %add.ptr12.i.i237.i, i32 0, i32 %sub.i.i238.i)
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i: ; preds = %if.then10.i.i239.i, %gfx_v10_0_rlc_backdoor_autoload_copy_sdma_ucode.exit.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i_crit_edge
  %ce_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 13
  %202 = ptrtoint ptr %ce_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %ce_fw.i.i, align 4
  %data6.i.i = getelementptr inbounds %struct.firmware, ptr %203, i32 0, i32 1
  %204 = ptrtoint ptr %data6.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %data6.i.i, align 4
  %ucode_array_offset_bytes11.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %205, i32 0, i32 8
  %206 = ptrtoint ptr %ucode_array_offset_bytes11.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %ucode_array_offset_bytes11.i.i, align 4
  %208 = tail call i32 @llvm.bswap.i32(i32 %207) #13
  %add.ptr12.i.i = getelementptr i8, ptr %205, i32 %208
  %ucode_size_bytes14.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %205, i32 0, i32 7
  %209 = ptrtoint ptr %ucode_size_bytes14.i.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %ucode_size_bytes14.i.i, align 4
  %211 = tail call i32 @llvm.bswap.i32(i32 %210) #13
  %212 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %214 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 19, i32 1), align 4
  %215 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 19, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %210)
  %cmp3.i77.i.i = icmp eq i32 %210, 0
  %fw_size.addr.0.i78.i.i = select i1 %cmp3.i77.i.i, i32 %215, i32 %211
  %216 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i78.i.i, i32 %215) #13
  %add.ptr.i79.i.i = getelementptr i8, ptr %213, i32 %214
  %217 = call ptr @memcpy(ptr %add.ptr.i79.i.i, ptr %add.ptr12.i.i, i32 %216)
  call void @__sanitizer_cov_trace_cmp4(i32 %215, i32 %fw_size.addr.0.i78.i.i)
  %cmp9.i80.i.i = icmp ugt i32 %215, %fw_size.addr.0.i78.i.i
  br i1 %cmp9.i80.i.i, label %if.then10.i83.i.i, label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i_crit_edge

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i

if.then10.i83.i.i:                                ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i81.i.i = getelementptr i8, ptr %add.ptr.i79.i.i, i32 %216
  %sub.i82.i.i = sub i32 %215, %216
  %218 = call ptr @memset(ptr %add.ptr12.i81.i.i, i32 0, i32 %sub.i82.i.i)
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i: ; preds = %if.then10.i83.i.i, %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit.i240.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i_crit_edge
  %me_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 9
  %219 = ptrtoint ptr %me_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %me_fw.i.i, align 4
  %data16.i.i = getelementptr inbounds %struct.firmware, ptr %220, i32 0, i32 1
  %221 = ptrtoint ptr %data16.i.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %data16.i.i, align 4
  %ucode_array_offset_bytes21.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %222, i32 0, i32 8
  %223 = ptrtoint ptr %ucode_array_offset_bytes21.i.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %ucode_array_offset_bytes21.i.i, align 4
  %225 = tail call i32 @llvm.bswap.i32(i32 %224) #13
  %add.ptr22.i.i = getelementptr i8, ptr %222, i32 %225
  %ucode_size_bytes24.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %222, i32 0, i32 7
  %226 = ptrtoint ptr %ucode_size_bytes24.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %ucode_size_bytes24.i.i, align 4
  %228 = tail call i32 @llvm.bswap.i32(i32 %227) #13
  %229 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %231 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 21, i32 1), align 4
  %232 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 21, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %227)
  %cmp3.i86.i.i = icmp eq i32 %227, 0
  %fw_size.addr.0.i87.i.i = select i1 %cmp3.i86.i.i, i32 %232, i32 %228
  %233 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i87.i.i, i32 %232) #13
  %add.ptr.i88.i.i = getelementptr i8, ptr %230, i32 %231
  %234 = call ptr @memcpy(ptr %add.ptr.i88.i.i, ptr %add.ptr22.i.i, i32 %233)
  call void @__sanitizer_cov_trace_cmp4(i32 %232, i32 %fw_size.addr.0.i87.i.i)
  %cmp9.i89.i.i = icmp ugt i32 %232, %fw_size.addr.0.i87.i.i
  br i1 %cmp9.i89.i.i, label %if.then10.i92.i.i, label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i_crit_edge

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i

if.then10.i92.i.i:                                ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i90.i.i = getelementptr i8, ptr %add.ptr.i88.i.i, i32 %233
  %sub.i91.i.i = sub i32 %232, %233
  %235 = call ptr @memset(ptr %add.ptr12.i90.i.i, i32 0, i32 %sub.i91.i.i)
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i: ; preds = %if.then10.i92.i.i, %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit84.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i_crit_edge
  %rlc_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 15
  %236 = ptrtoint ptr %rlc_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %rlc_fw.i.i, align 4
  %data26.i.i = getelementptr inbounds %struct.firmware, ptr %237, i32 0, i32 1
  %238 = ptrtoint ptr %data26.i.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %data26.i.i, align 4
  %ucode_array_offset_bytes31.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %239, i32 0, i32 8
  %240 = ptrtoint ptr %ucode_array_offset_bytes31.i.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %ucode_array_offset_bytes31.i.i, align 4
  %242 = tail call i32 @llvm.bswap.i32(i32 %241) #13
  %add.ptr32.i.i = getelementptr i8, ptr %239, i32 %242
  %ucode_size_bytes34.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %239, i32 0, i32 7
  %243 = ptrtoint ptr %ucode_size_bytes34.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %ucode_size_bytes34.i.i, align 4
  %245 = tail call i32 @llvm.bswap.i32(i32 %244) #13
  %246 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %248 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 1, i32 1), align 4
  %249 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 1, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %244)
  %cmp3.i95.i.i = icmp eq i32 %244, 0
  %fw_size.addr.0.i96.i.i = select i1 %cmp3.i95.i.i, i32 %249, i32 %245
  %250 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i96.i.i, i32 %249) #13
  %add.ptr.i97.i.i = getelementptr i8, ptr %247, i32 %248
  %251 = call ptr @memcpy(ptr %add.ptr.i97.i.i, ptr %add.ptr32.i.i, i32 %250)
  call void @__sanitizer_cov_trace_cmp4(i32 %249, i32 %fw_size.addr.0.i96.i.i)
  %cmp9.i98.i.i = icmp ugt i32 %249, %fw_size.addr.0.i96.i.i
  br i1 %cmp9.i98.i.i, label %if.then10.i101.i.i, label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i_crit_edge

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i

if.then10.i101.i.i:                               ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i99.i.i = getelementptr i8, ptr %add.ptr.i97.i.i, i32 %250
  %sub.i100.i.i = sub i32 %249, %250
  %252 = call ptr @memset(ptr %add.ptr12.i99.i.i, i32 0, i32 %sub.i100.i.i)
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i: ; preds = %if.then10.i101.i.i, %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit93.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i_crit_edge
  %mec_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 17
  %253 = ptrtoint ptr %mec_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %mec_fw.i.i, align 4
  %data36.i.i = getelementptr inbounds %struct.firmware, ptr %254, i32 0, i32 1
  %255 = ptrtoint ptr %data36.i.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %data36.i.i, align 4
  %ucode_array_offset_bytes41.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %256, i32 0, i32 8
  %257 = ptrtoint ptr %ucode_array_offset_bytes41.i.i to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %ucode_array_offset_bytes41.i.i, align 4
  %259 = tail call i32 @llvm.bswap.i32(i32 %258) #13
  %add.ptr42.i.i = getelementptr i8, ptr %256, i32 %259
  %ucode_size_bytes44.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %256, i32 0, i32 7
  %260 = ptrtoint ptr %ucode_size_bytes44.i.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %ucode_size_bytes44.i.i, align 4
  %262 = tail call i32 @llvm.bswap.i32(i32 %261) #13
  %jt_size.i241.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %256, i32 0, i32 3
  %263 = ptrtoint ptr %jt_size.i241.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load i32, ptr %jt_size.i241.i, align 4
  %mul.neg.i.i = mul i32 %264, -4
  %sub.i.i = add i32 %mul.neg.i.i, %262
  %265 = ptrtoint ptr %rlc_autoload_ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %rlc_autoload_ptr.i.i.i, align 8
  %267 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 22, i32 1), align 4
  %268 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 22, i32 2), align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp3.i104.i.i = icmp eq i32 %sub.i.i, 0
  %fw_size.addr.0.i105.i.i = select i1 %cmp3.i104.i.i, i32 %268, i32 %sub.i.i
  %269 = tail call i32 @llvm.umin.i32(i32 %fw_size.addr.0.i105.i.i, i32 %268) #13
  %add.ptr.i106.i.i = getelementptr i8, ptr %266, i32 %267
  %270 = call ptr @memcpy(ptr %add.ptr.i106.i.i, ptr %add.ptr42.i.i, i32 %269)
  call void @__sanitizer_cov_trace_cmp4(i32 %268, i32 %fw_size.addr.0.i105.i.i)
  %cmp9.i107.i.i = icmp ugt i32 %268, %fw_size.addr.0.i105.i.i
  br i1 %cmp9.i107.i.i, label %if.then10.i110.i.i, label %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i_crit_edge

gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i

if.then10.i110.i.i:                               ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr12.i108.i.i = getelementptr i8, ptr %add.ptr.i106.i.i, i32 %269
  %sub.i109.i.i = sub i32 %268, %269
  %271 = call ptr @memset(ptr %add.ptr12.i108.i.i, i32 0, i32 %sub.i109.i.i)
  br label %gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i

gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i: ; preds = %if.then10.i110.i.i, %gfx_v10_0_rlc_backdoor_autoload_copy_ucode.exit102.i.i.gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i_crit_edge
  %rlc_autoload_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 40
  %272 = ptrtoint ptr %rlc_autoload_gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %272)
  %273 = load i64, ptr %rlc_autoload_gpu_addr.i, align 8
  %conv.i = zext i32 %248 to i64
  %add.i161 = add i64 %273, %conv.i
  %274 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %virt7, align 8
  %and.i163 = and i32 %275, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i163)
  %tobool.not.i164 = icmp eq i32 %and.i163, 0
  br i1 %tobool.not.i164, label %gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i.cond.false.i173_crit_edge, label %land.lhs.true.i166

gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i.cond.false.i173_crit_edge: ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i173

land.lhs.true.i166:                               ; preds = %gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i
  %276 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %funcs, align 4
  %tobool3.not.i = icmp eq ptr %277, null
  br i1 %tobool3.not.i, label %land.lhs.true.i166.cond.false.i173_crit_edge, label %land.lhs.true4.i

land.lhs.true.i166.cond.false.i173_crit_edge:     ; preds = %land.lhs.true.i166
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i173

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i166
  %sriov_wreg.i167 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %277, i32 0, i32 12
  %278 = ptrtoint ptr %sriov_wreg.i167 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %sriov_wreg.i167, align 4
  %tobool8.not.i168 = icmp eq ptr %279, null
  br i1 %tobool8.not.i168, label %land.lhs.true4.i.cond.false.i173_crit_edge, label %cond.true.i171

land.lhs.true4.i.cond.false.i173_crit_edge:       ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i173

cond.true.i171:                                   ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i169 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %280 = ptrtoint ptr %arrayidx.i169 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %arrayidx.i169, align 8
  %arrayidx14.i170 = getelementptr i32, ptr %281, i32 1
  %282 = ptrtoint ptr %arrayidx14.i170 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %arrayidx14.i170, align 4
  %add15.i = add i32 %283, 23390
  %shr.i = lshr i64 %add.i161, 32
  %conv17.i = trunc i64 %shr.i to i32
  tail call void %279(ptr noundef %adev, i32 noundef %add15.i, i32 noundef %conv17.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i174

cond.false.i173:                                  ; preds = %land.lhs.true4.i.cond.false.i173_crit_edge, %land.lhs.true.i166.cond.false.i173_crit_edge, %gfx_v10_0_rlc_backdoor_autoload_copy_gfx_ucode.exit.i.cond.false.i173_crit_edge
  %arrayidx19.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %284 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %arrayidx19.i, align 8
  %arrayidx21.i172 = getelementptr i32, ptr %285, i32 1
  %286 = ptrtoint ptr %arrayidx21.i172 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %arrayidx21.i172, align 4
  %add22.i = add i32 %287, 23390
  %shr23.i = lshr i64 %add.i161, 32
  %conv25.i = trunc i64 %shr23.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add22.i, i32 noundef %conv25.i, i32 noundef 0) #13
  br label %cond.end.i174

cond.end.i174:                                    ; preds = %cond.false.i173, %cond.true.i171
  %288 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %virt7, align 8
  %and28.i = and i32 %289, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool29.not.i = icmp eq i32 %and28.i, 0
  br i1 %tobool29.not.i, label %cond.end.i174.cond.false53.i_crit_edge, label %land.lhs.true30.i

cond.end.i174.cond.false53.i_crit_edge:           ; preds = %cond.end.i174
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53.i

land.lhs.true30.i:                                ; preds = %cond.end.i174
  %290 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %funcs, align 4
  %tobool34.not.i = icmp eq ptr %291, null
  br i1 %tobool34.not.i, label %land.lhs.true30.i.cond.false53.i_crit_edge, label %land.lhs.true35.i

land.lhs.true30.i.cond.false53.i_crit_edge:       ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53.i

land.lhs.true35.i:                                ; preds = %land.lhs.true30.i
  %sriov_wreg39.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %291, i32 0, i32 12
  %292 = ptrtoint ptr %sriov_wreg39.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %sriov_wreg39.i, align 4
  %tobool40.not.i = icmp eq ptr %293, null
  br i1 %tobool40.not.i, label %land.lhs.true35.i.cond.false53.i_crit_edge, label %cond.true41.i

land.lhs.true35.i.cond.false53.i_crit_edge:       ; preds = %land.lhs.true35.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53.i

cond.true41.i:                                    ; preds = %land.lhs.true35.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx47.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %294 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %arrayidx47.i, align 8
  %arrayidx49.i = getelementptr i32, ptr %295, i32 1
  %296 = ptrtoint ptr %arrayidx49.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %arrayidx49.i, align 4
  %add50.i = add i32 %297, 23389
  %conv52.i = trunc i64 %add.i161 to i32
  tail call void %293(ptr noundef %adev, i32 noundef %add50.i, i32 noundef %conv52.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end61.i

cond.false53.i:                                   ; preds = %land.lhs.true35.i.cond.false53.i_crit_edge, %land.lhs.true30.i.cond.false53.i_crit_edge, %cond.end.i174.cond.false53.i_crit_edge
  %arrayidx55.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %298 = ptrtoint ptr %arrayidx55.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %arrayidx55.i, align 8
  %arrayidx57.i = getelementptr i32, ptr %299, i32 1
  %300 = ptrtoint ptr %arrayidx57.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load i32, ptr %arrayidx57.i, align 4
  %add58.i = add i32 %301, 23389
  %conv60.i = trunc i64 %add.i161 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add58.i, i32 noundef %conv60.i, i32 noundef 0) #13
  br label %cond.end61.i

cond.end61.i:                                     ; preds = %cond.false53.i, %cond.true41.i
  %302 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %virt7, align 8
  %and64.i = and i32 %303, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and64.i)
  %tobool65.not.i = icmp eq i32 %and64.i, 0
  br i1 %tobool65.not.i, label %cond.end61.i.cond.false87.i178_crit_edge, label %land.lhs.true66.i

cond.end61.i.cond.false87.i178_crit_edge:         ; preds = %cond.end61.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87.i178

land.lhs.true66.i:                                ; preds = %cond.end61.i
  %304 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %funcs, align 4
  %tobool70.not.i = icmp eq ptr %305, null
  br i1 %tobool70.not.i, label %land.lhs.true66.i.cond.false87.i178_crit_edge, label %land.lhs.true71.i

land.lhs.true66.i.cond.false87.i178_crit_edge:    ; preds = %land.lhs.true66.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87.i178

land.lhs.true71.i:                                ; preds = %land.lhs.true66.i
  %sriov_wreg75.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %305, i32 0, i32 12
  %306 = ptrtoint ptr %sriov_wreg75.i to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %sriov_wreg75.i, align 4
  %tobool76.not.i = icmp eq ptr %307, null
  br i1 %tobool76.not.i, label %land.lhs.true71.i.cond.false87.i178_crit_edge, label %cond.true77.i

land.lhs.true71.i.cond.false87.i178_crit_edge:    ; preds = %land.lhs.true71.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false87.i178

cond.true77.i:                                    ; preds = %land.lhs.true71.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx83.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %308 = ptrtoint ptr %arrayidx83.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %arrayidx83.i, align 8
  %arrayidx85.i = getelementptr i32, ptr %309, i32 1
  %310 = ptrtoint ptr %arrayidx85.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %arrayidx85.i, align 4
  %add86.i = add i32 %311, 23388
  tail call void %307(ptr noundef %adev, i32 noundef %add86.i, i32 noundef %249, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end93.i

cond.false87.i178:                                ; preds = %land.lhs.true71.i.cond.false87.i178_crit_edge, %land.lhs.true66.i.cond.false87.i178_crit_edge, %cond.end61.i.cond.false87.i178_crit_edge
  %arrayidx89.i175 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %312 = ptrtoint ptr %arrayidx89.i175 to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load ptr, ptr %arrayidx89.i175, align 8
  %arrayidx91.i176 = getelementptr i32, ptr %313, i32 1
  %314 = ptrtoint ptr %arrayidx91.i176 to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %arrayidx91.i176, align 4
  %add92.i177 = add i32 %315, 23388
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add92.i177, i32 noundef %249, i32 noundef 0) #13
  br label %cond.end93.i

cond.end93.i:                                     ; preds = %cond.false87.i178, %cond.true77.i
  %316 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %virt7, align 8
  %and96.i = and i32 %317, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96.i)
  %tobool97.not.i = icmp eq i32 %and96.i, 0
  br i1 %tobool97.not.i, label %cond.end93.i.cond.false118.i_crit_edge, label %land.lhs.true98.i

cond.end93.i.cond.false118.i_crit_edge:           ; preds = %cond.end93.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i

land.lhs.true98.i:                                ; preds = %cond.end93.i
  %318 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %funcs, align 4
  %tobool102.not.i = icmp eq ptr %319, null
  br i1 %tobool102.not.i, label %land.lhs.true98.i.cond.false118.i_crit_edge, label %land.lhs.true103.i

land.lhs.true98.i.cond.false118.i_crit_edge:      ; preds = %land.lhs.true98.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i

land.lhs.true103.i:                               ; preds = %land.lhs.true98.i
  %sriov_rreg.i179 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %319, i32 0, i32 13
  %320 = ptrtoint ptr %sriov_rreg.i179 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load ptr, ptr %sriov_rreg.i179, align 4
  %tobool107.not.i = icmp eq ptr %321, null
  br i1 %tobool107.not.i, label %land.lhs.true103.i.cond.false118.i_crit_edge, label %cond.true108.i

land.lhs.true103.i.cond.false118.i_crit_edge:     ; preds = %land.lhs.true103.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false118.i

cond.true108.i:                                   ; preds = %land.lhs.true103.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx114.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %322 = ptrtoint ptr %arrayidx114.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load ptr, ptr %arrayidx114.i, align 8
  %arrayidx116.i = getelementptr i32, ptr %323, i32 1
  %324 = ptrtoint ptr %arrayidx116.i to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load i32, ptr %arrayidx116.i, align 4
  %add117.i = add i32 %325, 23380
  %call.i180 = tail call i32 %321(ptr noundef %adev, i32 noundef %add117.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end125.i

cond.false118.i:                                  ; preds = %land.lhs.true103.i.cond.false118.i_crit_edge, %land.lhs.true98.i.cond.false118.i_crit_edge, %cond.end93.i.cond.false118.i_crit_edge
  %arrayidx120.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %326 = ptrtoint ptr %arrayidx120.i to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %arrayidx120.i, align 8
  %arrayidx122.i = getelementptr i32, ptr %327, i32 1
  %328 = ptrtoint ptr %arrayidx122.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load i32, ptr %arrayidx122.i, align 4
  %add123.i = add i32 %329, 23380
  %call124.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add123.i, i32 noundef 0) #13
  br label %cond.end125.i

cond.end125.i:                                    ; preds = %cond.false118.i, %cond.true108.i
  %cond.i181 = phi i32 [ %call.i180, %cond.true108.i ], [ %call124.i, %cond.false118.i ]
  %and126.i = and i32 %cond.i181, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and126.i)
  %tobool127.not.i = icmp eq i32 %and126.i, 0
  br i1 %tobool127.not.i, label %cond.end125.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge, label %if.end.i182

cond.end125.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge: ; preds = %cond.end125.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_enable.exit

if.end.i182:                                      ; preds = %cond.end125.i
  %330 = ptrtoint ptr %virt7 to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load i32, ptr %virt7, align 8
  %and130.i = and i32 %331, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and130.i)
  %tobool131.not.i = icmp eq i32 %and130.i, 0
  br i1 %tobool131.not.i, label %if.end.i182.cond.false154.i_crit_edge, label %land.lhs.true132.i

if.end.i182.cond.false154.i_crit_edge:            ; preds = %if.end.i182
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false154.i

land.lhs.true132.i:                               ; preds = %if.end.i182
  %332 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load ptr, ptr %funcs, align 4
  %tobool136.not.i = icmp eq ptr %333, null
  br i1 %tobool136.not.i, label %land.lhs.true132.i.cond.false154.i_crit_edge, label %land.lhs.true137.i

land.lhs.true132.i.cond.false154.i_crit_edge:     ; preds = %land.lhs.true132.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false154.i

land.lhs.true137.i:                               ; preds = %land.lhs.true132.i
  %sriov_rreg141.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %333, i32 0, i32 13
  %334 = ptrtoint ptr %sriov_rreg141.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %sriov_rreg141.i, align 4
  %tobool142.not.i = icmp eq ptr %335, null
  br i1 %tobool142.not.i, label %land.lhs.true137.i.cond.false154.i_crit_edge, label %cond.true143.i

land.lhs.true137.i.cond.false154.i_crit_edge:     ; preds = %land.lhs.true137.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false154.i

cond.true143.i:                                   ; preds = %land.lhs.true137.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx149.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %336 = ptrtoint ptr %arrayidx149.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %arrayidx149.i, align 8
  %arrayidx151.i = getelementptr i32, ptr %337, i32 1
  %338 = ptrtoint ptr %arrayidx151.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %arrayidx151.i, align 4
  %add152.i = add i32 %339, 19456
  %call153.i = tail call i32 %335(ptr noundef %adev, i32 noundef %add152.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end161.i

cond.false154.i:                                  ; preds = %land.lhs.true137.i.cond.false154.i_crit_edge, %land.lhs.true132.i.cond.false154.i_crit_edge, %if.end.i182.cond.false154.i_crit_edge
  %arrayidx156.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %340 = ptrtoint ptr %arrayidx156.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load ptr, ptr %arrayidx156.i, align 8
  %arrayidx158.i = getelementptr i32, ptr %341, i32 1
  %342 = ptrtoint ptr %arrayidx158.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %arrayidx158.i, align 4
  %add159.i = add i32 %343, 19456
  %call160.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add159.i, i32 noundef 0) #13
  br label %cond.end161.i

cond.end161.i:                                    ; preds = %cond.false154.i, %cond.true143.i
  %cond162.i = phi i32 [ %call153.i, %cond.true143.i ], [ %call160.i, %cond.false154.i ]
  %and163.i = and i32 %cond162.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and163.i)
  %tobool164.not.i = icmp eq i32 %and163.i, 0
  br i1 %tobool164.not.i, label %cond.end161.i.if.end89_crit_edge, label %cond.end161.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge

cond.end161.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge: ; preds = %cond.end161.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_rlc_backdoor_autoload_enable.exit

cond.end161.i.if.end89_crit_edge:                 ; preds = %cond.end161.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end89

gfx_v10_0_rlc_backdoor_autoload_enable.exit:      ; preds = %cond.end161.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge, %cond.end125.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge
  %.str.25.sink.i = phi ptr [ @.str.24, %cond.end125.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge ], [ @.str.25, %cond.end161.i.gfx_v10_0_rlc_backdoor_autoload_enable.exit_crit_edge ]
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull %.str.25.sink.i) #13
  br label %cleanup

if.end89:                                         ; preds = %cond.end161.i.if.end89_crit_edge, %cond.false87.i, %cond.true76.i, %cond.end70.if.end89_crit_edge
  tail call fastcc void @gfx_v10_0_init_csb(ptr noundef %adev)
  %344 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load ptr, ptr %funcs, align 4
  %start = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %345, i32 0, i32 10
  %346 = ptrtoint ptr %start to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %start, align 4
  tail call void %347(ptr noundef %adev) #13
  %348 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %349)
  %cmp96 = icmp eq i32 %349, 3
  br i1 %cmp96, label %if.then97, label %if.end89.if.end103_crit_edge

if.end89.if.end103_crit_edge:                     ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end103

if.then97:                                        ; preds = %if.end89
  %call98 = tail call fastcc i32 @gfx_v10_0_wait_for_rlc_autoload_complete(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call98)
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %if.then97.if.end103_crit_edge, label %if.then97.cleanup_crit_edge

if.then97.cleanup_crit_edge:                      ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then97.if.end103_crit_edge:                    ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end103

if.end103:                                        ; preds = %if.then97.if.end103_crit_edge, %if.end89.if.end103_crit_edge, %cond.false44.i, %cond.true34.i, %if.end.if.end103_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end103, %if.then97.cleanup_crit_edge, %gfx_v10_0_rlc_backdoor_autoload_enable.exit, %if.then74.cleanup_crit_edge, %if.then11, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end103 ], [ 0, %if.then11 ], [ %call, %if.then.cleanup_crit_edge ], [ -22, %gfx_v10_0_rlc_backdoor_autoload_enable.exit ], [ %call98, %if.then97.cleanup_crit_edge ], [ -22, %if.then74.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_rlc_stop(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19456
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %arrayidx16 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx16, align 4
  %add17 = add i32 %13, 19456
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, -2
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and22 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %cond.end.cond.false44_crit_edge, label %land.lhs.true24

cond.end.cond.false44_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44

land.lhs.true24:                                  ; preds = %cond.end
  %funcs27 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs27 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs27, align 4
  %tobool28.not = icmp eq ptr %17, null
  br i1 %tobool28.not, label %land.lhs.true24.cond.false44_crit_edge, label %land.lhs.true29

land.lhs.true24.cond.false44_crit_edge:           ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg, align 4
  %tobool33.not = icmp eq ptr %19, null
  br i1 %tobool33.not, label %land.lhs.true29.cond.false44_crit_edge, label %cond.true34

land.lhs.true29.cond.false44_crit_edge:           ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44

cond.true34:                                      ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx40 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx40, align 8
  %arrayidx42 = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx42, align 4
  %add43 = add i32 %23, 19456
  tail call void %19(ptr noundef %adev, i32 noundef %add43, i32 noundef %and19, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end50

cond.false44:                                     ; preds = %land.lhs.true29.cond.false44_crit_edge, %land.lhs.true24.cond.false44_crit_edge, %cond.end.cond.false44_crit_edge
  %arrayidx46 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx46, align 8
  %arrayidx48 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx48, align 4
  %add49 = add i32 %27, 19456
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49, i32 noundef %and19, i32 noundef 0) #13
  br label %cond.end50

cond.end50:                                       ; preds = %cond.false44, %cond.true34
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_rlc_reset(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false76.sink.split_crit_edge, label %land.lhs.true

entry.cond.false76.sink.split_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.sink.split

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false76.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false76.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true54, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 3496
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %or = or i32 %cond, 4
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end87

land.lhs.true54:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx46250 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx46250 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx46250, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add49251 = add i32 %16, 3496
  %tobool58.not = icmp eq ptr %.pr, null
  br i1 %tobool58.not, label %land.lhs.true54.cond.false76_crit_edge, label %land.lhs.true59

land.lhs.true54.cond.false76_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %sriov_rreg63 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg63 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg63, align 4
  %tobool64.not = icmp eq ptr %18, null
  br i1 %tobool64.not, label %land.lhs.true59.cond.false76_crit_edge, label %cond.true65

land.lhs.true59.cond.false76_crit_edge:           ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false76

cond.true65:                                      ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #15
  %call75 = tail call i32 %18(ptr noundef %adev, i32 noundef %add49251, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end83

cond.false76.sink.split:                          ; preds = %land.lhs.true.cond.false76.sink.split_crit_edge, %entry.cond.false76.sink.split_crit_edge
  %arrayidx46250260 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx46250260 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx46250260, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add49251261 = add i32 %22, 3496
  br label %cond.false76

cond.false76:                                     ; preds = %cond.false76.sink.split, %land.lhs.true59.cond.false76_crit_edge, %land.lhs.true54.cond.false76_crit_edge
  %add49254 = phi i32 [ %add49251, %land.lhs.true59.cond.false76_crit_edge ], [ %add49251, %land.lhs.true54.cond.false76_crit_edge ], [ %add49251261, %cond.false76.sink.split ]
  %call82 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add49254, i32 noundef 0) #13
  br label %cond.end83

cond.end83:                                       ; preds = %cond.false76, %cond.true65
  %add49252 = phi i32 [ %add49251, %cond.true65 ], [ %add49254, %cond.false76 ]
  %cond84 = phi i32 [ %call75, %cond.true65 ], [ %call82, %cond.false76 ]
  %or86 = or i32 %cond84, 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49252, i32 noundef %or86, i32 noundef 0) #13
  br label %cond.end87

cond.end87:                                       ; preds = %cond.end83, %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %23 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %23(i32 noundef 10737400) #13
  %24 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt, align 8
  %and90 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and90)
  %tobool91.not = icmp eq i32 %and90, 0
  br i1 %tobool91.not, label %cond.end87.cond.false182.sink.split_crit_edge, label %land.lhs.true92

cond.end87.cond.false182.sink.split_crit_edge:    ; preds = %cond.end87
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false182.sink.split

land.lhs.true92:                                  ; preds = %cond.end87
  %funcs95 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %26 = ptrtoint ptr %funcs95 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs95, align 4
  %tobool96.not = icmp eq ptr %27, null
  br i1 %tobool96.not, label %land.lhs.true92.cond.false182.sink.split_crit_edge, label %land.lhs.true97

land.lhs.true92.cond.false182.sink.split_crit_edge: ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false182.sink.split

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %sriov_wreg101 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %sriov_wreg101 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_wreg101, align 4
  %tobool102.not = icmp eq ptr %29, null
  br i1 %tobool102.not, label %land.lhs.true160, label %cond.true103

cond.true103:                                     ; preds = %land.lhs.true97
  %arrayidx109 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %30 = ptrtoint ptr %arrayidx109 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx109, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %add112 = add i32 %33, 3496
  %sriov_rreg126 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 13
  %34 = ptrtoint ptr %sriov_rreg126 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_rreg126, align 4
  %tobool127.not = icmp eq ptr %35, null
  br i1 %tobool127.not, label %cond.false139, label %cond.true128

cond.true128:                                     ; preds = %cond.true103
  call void @__sanitizer_cov_trace_pc() #15
  %call138 = tail call i32 %35(ptr noundef %adev, i32 noundef %add112, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end146

cond.false139:                                    ; preds = %cond.true103
  call void @__sanitizer_cov_trace_pc() #15
  %call145 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add112, i32 noundef 0) #13
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false139, %cond.true128
  %cond147 = phi i32 [ %call138, %cond.true128 ], [ %call145, %cond.false139 ]
  %and148 = and i32 %cond147, -5
  tail call void %29(ptr noundef %adev, i32 noundef %add112, i32 noundef %and148, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end193

land.lhs.true160:                                 ; preds = %land.lhs.true97
  %36 = ptrtoint ptr %funcs95 to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pr263 = load ptr, ptr %funcs95, align 4
  %arrayidx152255 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %37 = ptrtoint ptr %arrayidx152255 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx152255, align 8
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 4
  %add155256 = add i32 %40, 3496
  %tobool164.not = icmp eq ptr %.pr263, null
  br i1 %tobool164.not, label %land.lhs.true160.cond.false182_crit_edge, label %land.lhs.true165

land.lhs.true160.cond.false182_crit_edge:         ; preds = %land.lhs.true160
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false182

land.lhs.true165:                                 ; preds = %land.lhs.true160
  %sriov_rreg169 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr263, i32 0, i32 13
  %41 = ptrtoint ptr %sriov_rreg169 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sriov_rreg169, align 4
  %tobool170.not = icmp eq ptr %42, null
  br i1 %tobool170.not, label %land.lhs.true165.cond.false182_crit_edge, label %cond.true171

land.lhs.true165.cond.false182_crit_edge:         ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false182

cond.true171:                                     ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #15
  %call181 = tail call i32 %42(ptr noundef %adev, i32 noundef %add155256, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end189

cond.false182.sink.split:                         ; preds = %land.lhs.true92.cond.false182.sink.split_crit_edge, %cond.end87.cond.false182.sink.split_crit_edge
  %arrayidx152255264 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %43 = ptrtoint ptr %arrayidx152255264 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx152255264, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add155256265 = add i32 %46, 3496
  br label %cond.false182

cond.false182:                                    ; preds = %cond.false182.sink.split, %land.lhs.true165.cond.false182_crit_edge, %land.lhs.true160.cond.false182_crit_edge
  %add155259 = phi i32 [ %add155256, %land.lhs.true165.cond.false182_crit_edge ], [ %add155256, %land.lhs.true160.cond.false182_crit_edge ], [ %add155256265, %cond.false182.sink.split ]
  %call188 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add155259, i32 noundef 0) #13
  br label %cond.end189

cond.end189:                                      ; preds = %cond.false182, %cond.true171
  %add155257 = phi i32 [ %add155256, %cond.true171 ], [ %add155259, %cond.false182 ]
  %cond190 = phi i32 [ %call181, %cond.true171 ], [ %call188, %cond.false182 ]
  %and191 = and i32 %cond190, -5
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add155257, i32 noundef %and191, i32 noundef 0) #13
  br label %cond.end193

cond.end193:                                      ; preds = %cond.end189, %cond.end146
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %47 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %47(i32 noundef 10737400) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_rlc_start(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_pp_feature_mask to i32))
  %0 = load i32, ptr @amdgpu_pp_feature_mask, align 4
  %and = and i32 %0, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %1 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.cond.false.i_crit_edge, label %land.lhs.true.i

if.then.cond.false.i_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %if.then
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %3 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %4, i32 0, i32 13
  %5 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool6.not.i = icmp eq ptr %6, null
  br i1 %tobool6.not.i, label %land.lhs.true2.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true2.i.cond.false.i_crit_edge:          ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx12.i = getelementptr i32, ptr %8, i32 1
  %9 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx12.i, align 4
  %add.i = add i32 %10, 19523
  %call.i = tail call i32 %6(ptr noundef %adev, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.then.i

cond.false.i:                                     ; preds = %land.lhs.true2.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %if.then.cond.false.i_crit_edge
  %arrayidx14.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %11 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx14.i, align 8
  %arrayidx16.i = getelementptr i32, ptr %12, i32 1
  %13 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx16.i, align 4
  %add17.i = add i32 %14, 19523
  %call18.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17.i, i32 noundef 0) #13
  br label %if.then.i

if.then.i:                                        ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call18.i, %cond.false.i ]
  %or.i = or i32 %cond.i, 8388608
  %15 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %virt.i, align 8
  %and23.i = and i32 %16, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.not.i = icmp eq i32 %and23.i, 0
  br i1 %tobool24.not.i, label %if.then.i.cond.false45.i_crit_edge, label %land.lhs.true25.i

if.then.i.cond.false45.i_crit_edge:               ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45.i

land.lhs.true25.i:                                ; preds = %if.then.i
  %funcs28.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %17 = ptrtoint ptr %funcs28.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %funcs28.i, align 4
  %tobool29.not.i = icmp eq ptr %18, null
  br i1 %tobool29.not.i, label %land.lhs.true25.i.cond.false45.i_crit_edge, label %land.lhs.true30.i

land.lhs.true25.i.cond.false45.i_crit_edge:       ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45.i

land.lhs.true30.i:                                ; preds = %land.lhs.true25.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %18, i32 0, i32 12
  %19 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool34.not.i = icmp eq ptr %20, null
  br i1 %tobool34.not.i, label %land.lhs.true30.i.cond.false45.i_crit_edge, label %cond.true35.i

land.lhs.true30.i.cond.false45.i_crit_edge:       ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45.i

cond.true35.i:                                    ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx41.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %21 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx41.i, align 8
  %arrayidx43.i = getelementptr i32, ptr %22, i32 1
  %23 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx43.i, align 4
  %add44.i = add i32 %24, 19523
  tail call void %20(ptr noundef %adev, i32 noundef %add44.i, i32 noundef %or.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false45.i:                                   ; preds = %land.lhs.true30.i.cond.false45.i_crit_edge, %land.lhs.true25.i.cond.false45.i_crit_edge, %if.then.i.cond.false45.i_crit_edge
  %arrayidx47.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %25 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx47.i, align 8
  %arrayidx49.i = getelementptr i32, ptr %26, i32 1
  %27 = ptrtoint ptr %arrayidx49.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx49.i, align 4
  %add50.i = add i32 %28, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50.i, i32 noundef %or.i, i32 noundef 0) #13
  br label %if.end

if.end:                                           ; preds = %cond.false45.i, %cond.true35.i, %entry.if.end_crit_edge
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %29 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %virt, align 8
  %and1 = and i32 %30, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %if.end.cond.false78.sink.split_crit_edge, label %land.lhs.true

if.end.cond.false78.sink.split_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false78.sink.split

land.lhs.true:                                    ; preds = %if.end
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %31 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %funcs, align 4
  %tobool3.not = icmp eq ptr %32, null
  br i1 %tobool3.not, label %land.lhs.true.cond.false78.sink.split_crit_edge, label %land.lhs.true4

land.lhs.true.cond.false78.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false78.sink.split

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %32, i32 0, i32 12
  %33 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %sriov_wreg, align 4
  %tobool8.not = icmp eq ptr %34, null
  br i1 %tobool8.not, label %land.lhs.true56, label %cond.true

cond.true:                                        ; preds = %land.lhs.true4
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %35 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx, align 8
  %arrayidx14 = getelementptr i32, ptr %36, i32 1
  %37 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx14, align 4
  %add = add i32 %38, 19456
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %32, i32 0, i32 13
  %39 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sriov_rreg, align 4
  %tobool28.not = icmp eq ptr %40, null
  br i1 %tobool28.not, label %cond.false, label %cond.true29

cond.true29:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 %40(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #15
  %call44 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true29
  %cond = phi i32 [ %call, %cond.true29 ], [ %call44, %cond.false ]
  %or = or i32 %cond, 1
  tail call void %34(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end89

land.lhs.true56:                                  ; preds = %land.lhs.true4
  %41 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx48118 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %42 = ptrtoint ptr %arrayidx48118 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx48118, align 8
  %arrayidx50119 = getelementptr i32, ptr %43, i32 1
  %44 = ptrtoint ptr %arrayidx50119 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx50119, align 4
  %add51120 = add i32 %45, 19456
  %tobool60.not = icmp eq ptr %.pr, null
  br i1 %tobool60.not, label %land.lhs.true56.cond.false78_crit_edge, label %land.lhs.true61

land.lhs.true56.cond.false78_crit_edge:           ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false78

land.lhs.true61:                                  ; preds = %land.lhs.true56
  %sriov_rreg65 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %46 = ptrtoint ptr %sriov_rreg65 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sriov_rreg65, align 4
  %tobool66.not = icmp eq ptr %47, null
  br i1 %tobool66.not, label %land.lhs.true61.cond.false78_crit_edge, label %cond.true67

land.lhs.true61.cond.false78_crit_edge:           ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false78

cond.true67:                                      ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #15
  %call77 = tail call i32 %47(ptr noundef %adev, i32 noundef %add51120, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end85

cond.false78.sink.split:                          ; preds = %land.lhs.true.cond.false78.sink.split_crit_edge, %if.end.cond.false78.sink.split_crit_edge
  %arrayidx48118124 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %48 = ptrtoint ptr %arrayidx48118124 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx48118124, align 8
  %arrayidx50119125 = getelementptr i32, ptr %49, i32 1
  %50 = ptrtoint ptr %arrayidx50119125 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx50119125, align 4
  %add51120126 = add i32 %51, 19456
  br label %cond.false78

cond.false78:                                     ; preds = %cond.false78.sink.split, %land.lhs.true61.cond.false78_crit_edge, %land.lhs.true56.cond.false78_crit_edge
  %add51123 = phi i32 [ %add51120, %land.lhs.true61.cond.false78_crit_edge ], [ %add51120, %land.lhs.true56.cond.false78_crit_edge ], [ %add51120126, %cond.false78.sink.split ]
  %call84 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add51123, i32 noundef 0) #13
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false78, %cond.true67
  %add51121 = phi i32 [ %add51120, %cond.true67 ], [ %add51123, %cond.false78 ]
  %cond86 = phi i32 [ %call77, %cond.true67 ], [ %call84, %cond.false78 ]
  %or88 = or i32 %cond86, 1
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add51121, i32 noundef %or88, i32 noundef 0) #13
  br label %cond.end89

cond.end89:                                       ; preds = %cond.end85, %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %52 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %52(i32 noundef 10737400) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_update_spm_vmid(ptr noundef %adev, i32 noundef %vmid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %adev, i1 noundef zeroext false) #13
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 8
  %arrayidx2 = getelementptr i32, ptr %1, i32 1
  %2 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx2, align 4
  %add = add i32 %3, 19569
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %gim_feature = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 12
  %4 = ptrtoint ptr %gim_feature to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gim_feature, align 4
  %and = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 2) #13
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and4 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.else.cond.false_crit_edge, label %land.lhs.true

if.else.cond.false_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.else
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true7

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true7:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool11.not = icmp eq ptr %11, null
  br i1 %tobool11.not, label %land.lhs.true7.cond.false_crit_edge, label %cond.true

land.lhs.true7.cond.false_crit_edge:              ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  %call21 = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false:                                       ; preds = %land.lhs.true7.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.else.cond.false_crit_edge
  %call27 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #13
  br label %if.end

if.end:                                           ; preds = %cond.false, %cond.true, %if.then
  %data.0 = phi i32 [ %call, %if.then ], [ %call21, %cond.true ], [ %call27, %cond.false ]
  %and28 = and i32 %data.0, -16
  %and29 = and i32 %vmid, 15
  %or = or i32 %and28, %and29
  %12 = ptrtoint ptr %gim_feature to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gim_feature, align 4
  %and32 = and i32 %13, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and69 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool33.not, label %if.else66, label %if.then34

if.then34:                                        ; preds = %if.end
  br i1 %tobool70.not, label %if.then34.cond.false59_crit_edge, label %land.lhs.true39

if.then34.cond.false59_crit_edge:                 ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

land.lhs.true39:                                  ; preds = %if.then34
  %funcs42 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs42 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs42, align 4
  %tobool43.not = icmp eq ptr %17, null
  br i1 %tobool43.not, label %land.lhs.true39.cond.false59_crit_edge, label %land.lhs.true44

land.lhs.true39.cond.false59_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

land.lhs.true44:                                  ; preds = %land.lhs.true39
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg, align 4
  %tobool48.not = icmp eq ptr %19, null
  br i1 %tobool48.not, label %land.lhs.true44.cond.false59_crit_edge, label %cond.true49

land.lhs.true44.cond.false59_crit_edge:           ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

cond.true49:                                      ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #15
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 8
  %arrayidx57 = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx57, align 4
  %add58 = add i32 %23, 19569
  tail call void %19(ptr noundef %adev, i32 noundef %add58, i32 noundef %or, i32 noundef 2, i32 noundef 1) #13
  br label %if.end99

cond.false59:                                     ; preds = %land.lhs.true44.cond.false59_crit_edge, %land.lhs.true39.cond.false59_crit_edge, %if.then34.cond.false59_crit_edge
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx, align 8
  %arrayidx63 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx63, align 4
  %add64 = add i32 %27, 19569
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add64, i32 noundef %or, i32 noundef 0) #13
  br label %if.end99

if.else66:                                        ; preds = %if.end
  br i1 %tobool70.not, label %if.else66.cond.false92_crit_edge, label %land.lhs.true71

if.else66.cond.false92_crit_edge:                 ; preds = %if.else66
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92

land.lhs.true71:                                  ; preds = %if.else66
  %funcs74 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %28 = ptrtoint ptr %funcs74 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %funcs74, align 4
  %tobool75.not = icmp eq ptr %29, null
  br i1 %tobool75.not, label %land.lhs.true71.cond.false92_crit_edge, label %land.lhs.true76

land.lhs.true71.cond.false92_crit_edge:           ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92

land.lhs.true76:                                  ; preds = %land.lhs.true71
  %sriov_wreg80 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %sriov_wreg80 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sriov_wreg80, align 4
  %tobool81.not = icmp eq ptr %31, null
  br i1 %tobool81.not, label %land.lhs.true76.cond.false92_crit_edge, label %cond.true82

land.lhs.true76.cond.false92_crit_edge:           ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92

cond.true82:                                      ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx, align 8
  %arrayidx90 = getelementptr i32, ptr %33, i32 1
  %34 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx90, align 4
  %add91 = add i32 %35, 19569
  tail call void %31(ptr noundef %adev, i32 noundef %add91, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %if.end99

cond.false92:                                     ; preds = %land.lhs.true76.cond.false92_crit_edge, %land.lhs.true71.cond.false92_crit_edge, %if.else66.cond.false92_crit_edge
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx, align 8
  %arrayidx96 = getelementptr i32, ptr %37, i32 1
  %38 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx96, align 4
  %add97 = add i32 %39, 19569
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add97, i32 noundef %or, i32 noundef 0) #13
  br label %if.end99

if.end99:                                         ; preds = %cond.false92, %cond.true82, %cond.false59, %cond.true49
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %adev, i1 noundef zeroext true) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_rlc_init_csb(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_wait_for_rlc_autoload_complete(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  %0 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp442 = icmp sgt i32 %1, 0
  br i1 %cmp442, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %i.0443 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.for.body_crit_edge ]
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.cond.false_crit_edge, label %land.lhs.true

for.body.cond.false_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %for.body
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %7, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add = add i32 %11, 3904
  %call = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %for.body.cond.false_crit_edge
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add17 = add i32 %15, 3904
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %16 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %virt, align 8
  %and21 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %cond.end.cond.false45_crit_edge, label %land.lhs.true23

cond.end.cond.false45_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true23:                                  ; preds = %cond.end
  %18 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs, align 4
  %tobool27.not = icmp eq ptr %19, null
  br i1 %tobool27.not, label %land.lhs.true23.cond.false45_crit_edge, label %land.lhs.true28

land.lhs.true23.cond.false45_crit_edge:           ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %sriov_rreg32 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %19, i32 0, i32 13
  %20 = ptrtoint ptr %sriov_rreg32 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_rreg32, align 4
  %tobool33.not = icmp eq ptr %21, null
  br i1 %tobool33.not, label %land.lhs.true28.cond.false45_crit_edge, label %cond.true34

land.lhs.true28.cond.false45_crit_edge:           ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

cond.true34:                                      ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #15
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx, align 8
  %arrayidx42 = getelementptr i32, ptr %23, i32 1
  %24 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx42, align 4
  %add43 = add i32 %25, 20109
  %call44 = tail call i32 %21(ptr noundef %adev, i32 noundef %add43, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end52

cond.false45:                                     ; preds = %land.lhs.true28.cond.false45_crit_edge, %land.lhs.true23.cond.false45_crit_edge, %cond.end.cond.false45_crit_edge
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx, align 8
  %arrayidx49 = getelementptr i32, ptr %27, i32 1
  %28 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx49, align 4
  %add50 = add i32 %29, 20109
  %call51 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50, i32 noundef 0) #13
  br label %cond.end52

cond.end52:                                       ; preds = %cond.false45, %cond.true34
  %cond53 = phi i32 [ %call44, %cond.true34 ], [ %call51, %cond.false45 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %cmp54 = icmp eq i32 %cond, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond53)
  %cmp57 = icmp slt i32 %cond53, 0
  %or.cond = select i1 %cmp54, i1 %cmp57, i1 false
  br i1 %or.cond, label %cond.end52.for.end_crit_edge, label %if.end

cond.end52.for.end_crit_edge:                     ; preds = %cond.end52
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.end:                                           ; preds = %cond.end52
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %30 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %30(i32 noundef 214748) #13
  %inc = add nuw nsw i32 %i.0443, 1
  %31 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp slt i32 %inc, %32
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %if.end.for.end_crit_edge, %cond.end52.for.end_crit_edge, %entry.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %i.0443, %cond.end52.for.end_crit_edge ], [ %inc, %if.end.for.end_crit_edge ]
  %33 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa, i32 %34)
  %cmp59.not = icmp slt i32 %i.0.lcssa, %34
  br i1 %cmp59.not, label %if.end61, label %do.end

do.end:                                           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  %35 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %36, ptr noundef nonnull @.str.14) #16
  br label %cleanup

if.end61:                                         ; preds = %for.end
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %37 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %38)
  %cmp62 = icmp eq i32 %38, 3
  br i1 %cmp62, label %if.then63, label %if.end61.cleanup_crit_edge

if.end61.cleanup_crit_edge:                       ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then63:                                        ; preds = %if.end61
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %39 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then63.cond.false.i_crit_edge, label %land.lhs.true.i

if.then63.cond.false.i_crit_edge:                 ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %if.then63
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %41 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %42, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %42, i32 0, i32 13
  %43 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool6.not.i = icmp eq ptr %44, null
  br i1 %tobool6.not.i, label %land.lhs.true2.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true2.i.cond.false.i_crit_edge:          ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx12.i = getelementptr i32, ptr %46, i32 1
  %47 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx12.i, align 4
  %add.i = add i32 %48, 22599
  %call.i = tail call i32 %44(ptr noundef %adev, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i

cond.false.i:                                     ; preds = %land.lhs.true2.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %if.then63.cond.false.i_crit_edge
  %arrayidx14.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %49 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx14.i, align 8
  %arrayidx16.i = getelementptr i32, ptr %50, i32 1
  %51 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx16.i, align 4
  %add17.i = add i32 %52, 22599
  %call18.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17.i, i32 noundef 0) #13
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call18.i, %cond.false.i ]
  %or.i = or i32 %cond.i, 1
  %53 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %virt.i, align 8
  %and22.i = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  br i1 %tobool23.not.i, label %cond.end.i.cond.false44.i_crit_edge, label %land.lhs.true24.i

cond.end.i.cond.false44.i_crit_edge:              ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i

land.lhs.true24.i:                                ; preds = %cond.end.i
  %funcs27.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %55 = ptrtoint ptr %funcs27.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %funcs27.i, align 4
  %tobool28.not.i = icmp eq ptr %56, null
  br i1 %tobool28.not.i, label %land.lhs.true24.i.cond.false44.i_crit_edge, label %land.lhs.true29.i

land.lhs.true24.i.cond.false44.i_crit_edge:       ; preds = %land.lhs.true24.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i

land.lhs.true29.i:                                ; preds = %land.lhs.true24.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %56, i32 0, i32 12
  %57 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool33.not.i = icmp eq ptr %58, null
  br i1 %tobool33.not.i, label %land.lhs.true29.i.cond.false44.i_crit_edge, label %cond.true34.i

land.lhs.true29.i.cond.false44.i_crit_edge:       ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i

cond.true34.i:                                    ; preds = %land.lhs.true29.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx40.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %59 = ptrtoint ptr %arrayidx40.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx40.i, align 8
  %arrayidx42.i = getelementptr i32, ptr %60, i32 1
  %61 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx42.i, align 4
  %add43.i = add i32 %62, 22599
  tail call void %58(ptr noundef %adev, i32 noundef %add43.i, i32 noundef %or.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end50.i

cond.false44.i:                                   ; preds = %land.lhs.true29.i.cond.false44.i_crit_edge, %land.lhs.true24.i.cond.false44.i_crit_edge, %cond.end.i.cond.false44.i_crit_edge
  %arrayidx46.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %63 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx46.i, align 8
  %arrayidx48.i = getelementptr i32, ptr %64, i32 1
  %65 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx48.i, align 4
  %add49.i = add i32 %66, 22599
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49.i, i32 noundef %or.i, i32 noundef 0) #13
  br label %cond.end50.i

cond.end50.i:                                     ; preds = %cond.false44.i, %cond.true34.i
  %funcs58.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx72.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %cond.end50.i
  %i.0233.i = phi i32 [ 0, %cond.end50.i ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %67 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %virt.i, align 8
  %and53.i = and i32 %68, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53.i)
  %tobool54.not.i = icmp eq i32 %and53.i, 0
  br i1 %tobool54.not.i, label %for.body.i.cond.false77.i_crit_edge, label %land.lhs.true55.i

for.body.i.cond.false77.i_crit_edge:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i

land.lhs.true55.i:                                ; preds = %for.body.i
  %69 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %funcs58.i, align 4
  %tobool59.not.i = icmp eq ptr %70, null
  br i1 %tobool59.not.i, label %land.lhs.true55.i.cond.false77.i_crit_edge, label %land.lhs.true60.i

land.lhs.true55.i.cond.false77.i_crit_edge:       ; preds = %land.lhs.true55.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i

land.lhs.true60.i:                                ; preds = %land.lhs.true55.i
  %sriov_rreg64.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %70, i32 0, i32 13
  %71 = ptrtoint ptr %sriov_rreg64.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sriov_rreg64.i, align 4
  %tobool65.not.i = icmp eq ptr %72, null
  br i1 %tobool65.not.i, label %land.lhs.true60.i.cond.false77.i_crit_edge, label %cond.true66.i

land.lhs.true60.i.cond.false77.i_crit_edge:       ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i

cond.true66.i:                                    ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #15
  %73 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx74.i = getelementptr i32, ptr %74, i32 1
  %75 = ptrtoint ptr %arrayidx74.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx74.i, align 4
  %add75.i = add i32 %76, 22599
  %call76.i = tail call i32 %72(ptr noundef %adev, i32 noundef %add75.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end84.i

cond.false77.i:                                   ; preds = %land.lhs.true60.i.cond.false77.i_crit_edge, %land.lhs.true55.i.cond.false77.i_crit_edge, %for.body.i.cond.false77.i_crit_edge
  %77 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx81.i = getelementptr i32, ptr %78, i32 1
  %79 = ptrtoint ptr %arrayidx81.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx81.i, align 4
  %add82.i = add i32 %80, 22599
  %call83.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add82.i, i32 noundef 0) #13
  br label %cond.end84.i

cond.end84.i:                                     ; preds = %cond.false77.i, %cond.true66.i
  %cond85.i = phi i32 [ %call76.i, %cond.true66.i ], [ %call83.i, %cond.false77.i ]
  %81 = and i32 %cond85.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %cmp87.not.i = icmp eq i32 %81, 0
  br i1 %cmp87.not.i, label %if.end.i, label %if.end90.i

if.end.i:                                         ; preds = %cond.end84.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %82 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %82(i32 noundef 214748) #13
  %inc.i = add nuw nsw i32 %i.0233.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 50000
  br i1 %exitcond.not.i, label %gfx_v10_0_rlc_backdoor_autoload_config_me_cache.exit, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

if.end90.i:                                       ; preds = %cond.end84.i
  %rlc_autoload_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 40
  %83 = ptrtoint ptr %rlc_autoload_gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %rlc_autoload_gpu_addr.i, align 8
  %85 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 21, i32 1), align 4
  %conv.i = zext i32 %85 to i64
  %add93.i = add i64 %84, %conv.i
  %86 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %virt.i, align 8
  %and96.i = and i32 %87, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96.i)
  %tobool97.not.i = icmp eq i32 %and96.i, 0
  br i1 %tobool97.not.i, label %if.end90.i.cond.false122.i_crit_edge, label %land.lhs.true98.i

if.end90.i.cond.false122.i_crit_edge:             ; preds = %if.end90.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i

land.lhs.true98.i:                                ; preds = %if.end90.i
  %88 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %funcs58.i, align 4
  %tobool102.not.i = icmp eq ptr %89, null
  br i1 %tobool102.not.i, label %land.lhs.true98.i.cond.false122.i_crit_edge, label %land.lhs.true103.i

land.lhs.true98.i.cond.false122.i_crit_edge:      ; preds = %land.lhs.true98.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i

land.lhs.true103.i:                               ; preds = %land.lhs.true98.i
  %sriov_wreg107.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %89, i32 0, i32 12
  %90 = ptrtoint ptr %sriov_wreg107.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %sriov_wreg107.i, align 4
  %tobool108.not.i = icmp eq ptr %91, null
  br i1 %tobool108.not.i, label %land.lhs.true103.i.cond.false122.i_crit_edge, label %cond.true109.i

land.lhs.true103.i.cond.false122.i_crit_edge:     ; preds = %land.lhs.true103.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i

cond.true109.i:                                   ; preds = %land.lhs.true103.i
  call void @__sanitizer_cov_trace_pc() #15
  %92 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx117.i = getelementptr i32, ptr %93, i32 1
  %94 = ptrtoint ptr %arrayidx117.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %arrayidx117.i, align 4
  %add118.i = add i32 %95, 22596
  %conv120.i = trunc i64 %add93.i to i32
  %and121.i = and i32 %conv120.i, -4096
  tail call void %91(ptr noundef %adev, i32 noundef %add118.i, i32 noundef %and121.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end131.i

cond.false122.i:                                  ; preds = %land.lhs.true103.i.cond.false122.i_crit_edge, %land.lhs.true98.i.cond.false122.i_crit_edge, %if.end90.i.cond.false122.i_crit_edge
  %96 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx126.i = getelementptr i32, ptr %97, i32 1
  %98 = ptrtoint ptr %arrayidx126.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx126.i, align 4
  %add127.i = add i32 %99, 22596
  %conv129.i = trunc i64 %add93.i to i32
  %and130.i = and i32 %conv129.i, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add127.i, i32 noundef %and130.i, i32 noundef 0) #13
  br label %cond.end131.i

cond.end131.i:                                    ; preds = %cond.false122.i, %cond.true109.i
  %100 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %virt.i, align 8
  %and134.i = and i32 %101, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134.i)
  %tobool135.not.i = icmp eq i32 %and134.i, 0
  br i1 %tobool135.not.i, label %cond.end131.i.cond.false160.i_crit_edge, label %land.lhs.true136.i

cond.end131.i.cond.false160.i_crit_edge:          ; preds = %cond.end131.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i

land.lhs.true136.i:                               ; preds = %cond.end131.i
  %102 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %funcs58.i, align 4
  %tobool140.not.i = icmp eq ptr %103, null
  br i1 %tobool140.not.i, label %land.lhs.true136.i.cond.false160.i_crit_edge, label %land.lhs.true141.i

land.lhs.true136.i.cond.false160.i_crit_edge:     ; preds = %land.lhs.true136.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i

land.lhs.true141.i:                               ; preds = %land.lhs.true136.i
  %sriov_wreg145.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %103, i32 0, i32 12
  %104 = ptrtoint ptr %sriov_wreg145.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %sriov_wreg145.i, align 4
  %tobool146.not.i = icmp eq ptr %105, null
  br i1 %tobool146.not.i, label %land.lhs.true141.i.cond.false160.i_crit_edge, label %cond.true147.i

land.lhs.true141.i.cond.false160.i_crit_edge:     ; preds = %land.lhs.true141.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i

cond.true147.i:                                   ; preds = %land.lhs.true141.i
  call void @__sanitizer_cov_trace_pc() #15
  %106 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx155.i = getelementptr i32, ptr %107, i32 1
  %108 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %arrayidx155.i, align 4
  %add156.i = add i32 %109, 22597
  %shr157.i = lshr i64 %add93.i, 32
  %conv159.i = trunc i64 %shr157.i to i32
  tail call void %105(ptr noundef %adev, i32 noundef %add156.i, i32 noundef %conv159.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end67

cond.false160.i:                                  ; preds = %land.lhs.true141.i.cond.false160.i_crit_edge, %land.lhs.true136.i.cond.false160.i_crit_edge, %cond.end131.i.cond.false160.i_crit_edge
  %110 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx164.i = getelementptr i32, ptr %111, i32 1
  %112 = ptrtoint ptr %arrayidx164.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx164.i, align 4
  %add165.i = add i32 %113, 22597
  %shr166.i = lshr i64 %add93.i, 32
  %conv168.i = trunc i64 %shr166.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add165.i, i32 noundef %conv168.i, i32 noundef 0) #13
  br label %if.end67

gfx_v10_0_rlc_backdoor_autoload_config_me_cache.exit: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %114 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %115, ptr noundef nonnull @.str.19) #16
  br label %cleanup

if.end67:                                         ; preds = %cond.false160.i, %cond.true147.i
  %116 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %virt.i, align 8
  %and.i120 = and i32 %117, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i120)
  %tobool.not.i121 = icmp eq i32 %and.i120, 0
  br i1 %tobool.not.i121, label %if.end67.cond.false.i137_crit_edge, label %land.lhs.true.i124

if.end67.cond.false.i137_crit_edge:               ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i137

land.lhs.true.i124:                               ; preds = %if.end67
  %118 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %funcs58.i, align 4
  %tobool1.not.i123 = icmp eq ptr %119, null
  br i1 %tobool1.not.i123, label %land.lhs.true.i124.cond.false.i137_crit_edge, label %land.lhs.true2.i127

land.lhs.true.i124.cond.false.i137_crit_edge:     ; preds = %land.lhs.true.i124
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i137

land.lhs.true2.i127:                              ; preds = %land.lhs.true.i124
  %sriov_rreg.i125 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %119, i32 0, i32 13
  %120 = ptrtoint ptr %sriov_rreg.i125 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %sriov_rreg.i125, align 4
  %tobool6.not.i126 = icmp eq ptr %121, null
  br i1 %tobool6.not.i126, label %land.lhs.true2.i127.cond.false.i137_crit_edge, label %cond.true.i132

land.lhs.true2.i127.cond.false.i137_crit_edge:    ; preds = %land.lhs.true2.i127
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i137

cond.true.i132:                                   ; preds = %land.lhs.true2.i127
  call void @__sanitizer_cov_trace_pc() #15
  %122 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx12.i129 = getelementptr i32, ptr %123, i32 1
  %124 = ptrtoint ptr %arrayidx12.i129 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %arrayidx12.i129, align 4
  %add.i130 = add i32 %125, 22603
  %call.i131 = tail call i32 %121(ptr noundef %adev, i32 noundef %add.i130, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i142

cond.false.i137:                                  ; preds = %land.lhs.true2.i127.cond.false.i137_crit_edge, %land.lhs.true.i124.cond.false.i137_crit_edge, %if.end67.cond.false.i137_crit_edge
  %126 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx16.i134 = getelementptr i32, ptr %127, i32 1
  %128 = ptrtoint ptr %arrayidx16.i134 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx16.i134, align 4
  %add17.i135 = add i32 %129, 22603
  %call18.i136 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17.i135, i32 noundef 0) #13
  br label %cond.end.i142

cond.end.i142:                                    ; preds = %cond.false.i137, %cond.true.i132
  %cond.i138 = phi i32 [ %call.i131, %cond.true.i132 ], [ %call18.i136, %cond.false.i137 ]
  %or.i139 = or i32 %cond.i138, 1
  %130 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %virt.i, align 8
  %and22.i140 = and i32 %131, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i140)
  %tobool23.not.i141 = icmp eq i32 %and22.i140, 0
  br i1 %tobool23.not.i141, label %cond.end.i142.cond.false44.i156_crit_edge, label %land.lhs.true24.i145

cond.end.i142.cond.false44.i156_crit_edge:        ; preds = %cond.end.i142
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i156

land.lhs.true24.i145:                             ; preds = %cond.end.i142
  %132 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %funcs58.i, align 4
  %tobool28.not.i144 = icmp eq ptr %133, null
  br i1 %tobool28.not.i144, label %land.lhs.true24.i145.cond.false44.i156_crit_edge, label %land.lhs.true29.i148

land.lhs.true24.i145.cond.false44.i156_crit_edge: ; preds = %land.lhs.true24.i145
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i156

land.lhs.true29.i148:                             ; preds = %land.lhs.true24.i145
  %sriov_wreg.i146 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %133, i32 0, i32 12
  %134 = ptrtoint ptr %sriov_wreg.i146 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %sriov_wreg.i146, align 4
  %tobool33.not.i147 = icmp eq ptr %135, null
  br i1 %tobool33.not.i147, label %land.lhs.true29.i148.cond.false44.i156_crit_edge, label %cond.true34.i152

land.lhs.true29.i148.cond.false44.i156_crit_edge: ; preds = %land.lhs.true29.i148
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i156

cond.true34.i152:                                 ; preds = %land.lhs.true29.i148
  call void @__sanitizer_cov_trace_pc() #15
  %136 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx42.i150 = getelementptr i32, ptr %137, i32 1
  %138 = ptrtoint ptr %arrayidx42.i150 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %arrayidx42.i150, align 4
  %add43.i151 = add i32 %139, 22603
  tail call void %135(ptr noundef %adev, i32 noundef %add43.i151, i32 noundef %or.i139, i32 noundef 0, i32 noundef 1) #13
  br label %for.body.i163.preheader

cond.false44.i156:                                ; preds = %land.lhs.true29.i148.cond.false44.i156_crit_edge, %land.lhs.true24.i145.cond.false44.i156_crit_edge, %cond.end.i142.cond.false44.i156_crit_edge
  %140 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx48.i154 = getelementptr i32, ptr %141, i32 1
  %142 = ptrtoint ptr %arrayidx48.i154 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %arrayidx48.i154, align 4
  %add49.i155 = add i32 %143, 22603
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49.i155, i32 noundef %or.i139, i32 noundef 0) #13
  br label %for.body.i163.preheader

for.body.i163.preheader:                          ; preds = %cond.false44.i156, %cond.true34.i152
  br label %for.body.i163

for.body.i163:                                    ; preds = %if.end.i182.for.body.i163_crit_edge, %for.body.i163.preheader
  %i.0233.i160 = phi i32 [ %inc.i180, %if.end.i182.for.body.i163_crit_edge ], [ 0, %for.body.i163.preheader ]
  %144 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %virt.i, align 8
  %and53.i161 = and i32 %145, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53.i161)
  %tobool54.not.i162 = icmp eq i32 %and53.i161, 0
  br i1 %tobool54.not.i162, label %for.body.i163.cond.false77.i176_crit_edge, label %land.lhs.true55.i165

for.body.i163.cond.false77.i176_crit_edge:        ; preds = %for.body.i163
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i176

land.lhs.true55.i165:                             ; preds = %for.body.i163
  %146 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %funcs58.i, align 4
  %tobool59.not.i164 = icmp eq ptr %147, null
  br i1 %tobool59.not.i164, label %land.lhs.true55.i165.cond.false77.i176_crit_edge, label %land.lhs.true60.i168

land.lhs.true55.i165.cond.false77.i176_crit_edge: ; preds = %land.lhs.true55.i165
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i176

land.lhs.true60.i168:                             ; preds = %land.lhs.true55.i165
  %sriov_rreg64.i166 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %147, i32 0, i32 13
  %148 = ptrtoint ptr %sriov_rreg64.i166 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %sriov_rreg64.i166, align 4
  %tobool65.not.i167 = icmp eq ptr %149, null
  br i1 %tobool65.not.i167, label %land.lhs.true60.i168.cond.false77.i176_crit_edge, label %cond.true66.i172

land.lhs.true60.i168.cond.false77.i176_crit_edge: ; preds = %land.lhs.true60.i168
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i176

cond.true66.i172:                                 ; preds = %land.lhs.true60.i168
  call void @__sanitizer_cov_trace_pc() #15
  %150 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx74.i169 = getelementptr i32, ptr %151, i32 1
  %152 = ptrtoint ptr %arrayidx74.i169 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %arrayidx74.i169, align 4
  %add75.i170 = add i32 %153, 22603
  %call76.i171 = tail call i32 %149(ptr noundef %adev, i32 noundef %add75.i170, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end84.i179

cond.false77.i176:                                ; preds = %land.lhs.true60.i168.cond.false77.i176_crit_edge, %land.lhs.true55.i165.cond.false77.i176_crit_edge, %for.body.i163.cond.false77.i176_crit_edge
  %154 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx81.i173 = getelementptr i32, ptr %155, i32 1
  %156 = ptrtoint ptr %arrayidx81.i173 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %arrayidx81.i173, align 4
  %add82.i174 = add i32 %157, 22603
  %call83.i175 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add82.i174, i32 noundef 0) #13
  br label %cond.end84.i179

cond.end84.i179:                                  ; preds = %cond.false77.i176, %cond.true66.i172
  %cond85.i177 = phi i32 [ %call76.i171, %cond.true66.i172 ], [ %call83.i175, %cond.false77.i176 ]
  %158 = and i32 %cond85.i177, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %158)
  %cmp87.not.i178 = icmp eq i32 %158, 0
  br i1 %cmp87.not.i178, label %if.end.i182, label %if.end90.i189

if.end.i182:                                      ; preds = %cond.end84.i179
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %159 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %159(i32 noundef 214748) #13
  %inc.i180 = add nuw nsw i32 %i.0233.i160, 1
  %exitcond.not.i181 = icmp eq i32 %inc.i180, 50000
  br i1 %exitcond.not.i181, label %gfx_v10_0_rlc_backdoor_autoload_config_ce_cache.exit, label %if.end.i182.for.body.i163_crit_edge

if.end.i182.for.body.i163_crit_edge:              ; preds = %if.end.i182
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i163

if.end90.i189:                                    ; preds = %cond.end84.i179
  %160 = ptrtoint ptr %rlc_autoload_gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %160)
  %161 = load i64, ptr %rlc_autoload_gpu_addr.i, align 8
  %162 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 19, i32 1), align 4
  %conv.i185 = zext i32 %162 to i64
  %add93.i186 = add i64 %161, %conv.i185
  %163 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %virt.i, align 8
  %and96.i187 = and i32 %164, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96.i187)
  %tobool97.not.i188 = icmp eq i32 %and96.i187, 0
  br i1 %tobool97.not.i188, label %if.end90.i189.cond.false122.i204_crit_edge, label %land.lhs.true98.i191

if.end90.i189.cond.false122.i204_crit_edge:       ; preds = %if.end90.i189
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i204

land.lhs.true98.i191:                             ; preds = %if.end90.i189
  %165 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %funcs58.i, align 4
  %tobool102.not.i190 = icmp eq ptr %166, null
  br i1 %tobool102.not.i190, label %land.lhs.true98.i191.cond.false122.i204_crit_edge, label %land.lhs.true103.i194

land.lhs.true98.i191.cond.false122.i204_crit_edge: ; preds = %land.lhs.true98.i191
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i204

land.lhs.true103.i194:                            ; preds = %land.lhs.true98.i191
  %sriov_wreg107.i192 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %166, i32 0, i32 12
  %167 = ptrtoint ptr %sriov_wreg107.i192 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %sriov_wreg107.i192, align 4
  %tobool108.not.i193 = icmp eq ptr %168, null
  br i1 %tobool108.not.i193, label %land.lhs.true103.i194.cond.false122.i204_crit_edge, label %cond.true109.i199

land.lhs.true103.i194.cond.false122.i204_crit_edge: ; preds = %land.lhs.true103.i194
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i204

cond.true109.i199:                                ; preds = %land.lhs.true103.i194
  call void @__sanitizer_cov_trace_pc() #15
  %169 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx117.i195 = getelementptr i32, ptr %170, i32 1
  %171 = ptrtoint ptr %arrayidx117.i195 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %arrayidx117.i195, align 4
  %add118.i196 = add i32 %172, 22600
  %conv120.i197 = trunc i64 %add93.i186 to i32
  %and121.i198 = and i32 %conv120.i197, -4096
  tail call void %168(ptr noundef %adev, i32 noundef %add118.i196, i32 noundef %and121.i198, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end131.i207

cond.false122.i204:                               ; preds = %land.lhs.true103.i194.cond.false122.i204_crit_edge, %land.lhs.true98.i191.cond.false122.i204_crit_edge, %if.end90.i189.cond.false122.i204_crit_edge
  %173 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx126.i200 = getelementptr i32, ptr %174, i32 1
  %175 = ptrtoint ptr %arrayidx126.i200 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %arrayidx126.i200, align 4
  %add127.i201 = add i32 %176, 22600
  %conv129.i202 = trunc i64 %add93.i186 to i32
  %and130.i203 = and i32 %conv129.i202, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add127.i201, i32 noundef %and130.i203, i32 noundef 0) #13
  br label %cond.end131.i207

cond.end131.i207:                                 ; preds = %cond.false122.i204, %cond.true109.i199
  %177 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %virt.i, align 8
  %and134.i205 = and i32 %178, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134.i205)
  %tobool135.not.i206 = icmp eq i32 %and134.i205, 0
  br i1 %tobool135.not.i206, label %cond.end131.i207.cond.false160.i222_crit_edge, label %land.lhs.true136.i209

cond.end131.i207.cond.false160.i222_crit_edge:    ; preds = %cond.end131.i207
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i222

land.lhs.true136.i209:                            ; preds = %cond.end131.i207
  %179 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %funcs58.i, align 4
  %tobool140.not.i208 = icmp eq ptr %180, null
  br i1 %tobool140.not.i208, label %land.lhs.true136.i209.cond.false160.i222_crit_edge, label %land.lhs.true141.i212

land.lhs.true136.i209.cond.false160.i222_crit_edge: ; preds = %land.lhs.true136.i209
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i222

land.lhs.true141.i212:                            ; preds = %land.lhs.true136.i209
  %sriov_wreg145.i210 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %180, i32 0, i32 12
  %181 = ptrtoint ptr %sriov_wreg145.i210 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %sriov_wreg145.i210, align 4
  %tobool146.not.i211 = icmp eq ptr %182, null
  br i1 %tobool146.not.i211, label %land.lhs.true141.i212.cond.false160.i222_crit_edge, label %cond.true147.i217

land.lhs.true141.i212.cond.false160.i222_crit_edge: ; preds = %land.lhs.true141.i212
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i222

cond.true147.i217:                                ; preds = %land.lhs.true141.i212
  call void @__sanitizer_cov_trace_pc() #15
  %183 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx155.i213 = getelementptr i32, ptr %184, i32 1
  %185 = ptrtoint ptr %arrayidx155.i213 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %arrayidx155.i213, align 4
  %add156.i214 = add i32 %186, 22601
  %shr157.i215 = lshr i64 %add93.i186, 32
  %conv159.i216 = trunc i64 %shr157.i215 to i32
  tail call void %182(ptr noundef %adev, i32 noundef %add156.i214, i32 noundef %conv159.i216, i32 noundef 0, i32 noundef 1) #13
  br label %if.end71

cond.false160.i222:                               ; preds = %land.lhs.true141.i212.cond.false160.i222_crit_edge, %land.lhs.true136.i209.cond.false160.i222_crit_edge, %cond.end131.i207.cond.false160.i222_crit_edge
  %187 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx164.i218 = getelementptr i32, ptr %188, i32 1
  %189 = ptrtoint ptr %arrayidx164.i218 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %arrayidx164.i218, align 4
  %add165.i219 = add i32 %190, 22601
  %shr166.i220 = lshr i64 %add93.i186, 32
  %conv168.i221 = trunc i64 %shr166.i220 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add165.i219, i32 noundef %conv168.i221, i32 noundef 0) #13
  br label %if.end71

gfx_v10_0_rlc_backdoor_autoload_config_ce_cache.exit: ; preds = %if.end.i182
  call void @__sanitizer_cov_trace_pc() #15
  %191 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %192, ptr noundef nonnull @.str.19) #16
  br label %cleanup

if.end71:                                         ; preds = %cond.false160.i222, %cond.true147.i217
  %193 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %virt.i, align 8
  %and.i225 = and i32 %194, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i225)
  %tobool.not.i226 = icmp eq i32 %and.i225, 0
  br i1 %tobool.not.i226, label %if.end71.cond.false.i242_crit_edge, label %land.lhs.true.i229

if.end71.cond.false.i242_crit_edge:               ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i242

land.lhs.true.i229:                               ; preds = %if.end71
  %195 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %funcs58.i, align 4
  %tobool1.not.i228 = icmp eq ptr %196, null
  br i1 %tobool1.not.i228, label %land.lhs.true.i229.cond.false.i242_crit_edge, label %land.lhs.true2.i232

land.lhs.true.i229.cond.false.i242_crit_edge:     ; preds = %land.lhs.true.i229
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i242

land.lhs.true2.i232:                              ; preds = %land.lhs.true.i229
  %sriov_rreg.i230 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %196, i32 0, i32 13
  %197 = ptrtoint ptr %sriov_rreg.i230 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %sriov_rreg.i230, align 4
  %tobool6.not.i231 = icmp eq ptr %198, null
  br i1 %tobool6.not.i231, label %land.lhs.true2.i232.cond.false.i242_crit_edge, label %cond.true.i237

land.lhs.true2.i232.cond.false.i242_crit_edge:    ; preds = %land.lhs.true2.i232
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i242

cond.true.i237:                                   ; preds = %land.lhs.true2.i232
  call void @__sanitizer_cov_trace_pc() #15
  %199 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx12.i234 = getelementptr i32, ptr %200, i32 1
  %201 = ptrtoint ptr %arrayidx12.i234 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %arrayidx12.i234, align 4
  %add.i235 = add i32 %202, 22595
  %call.i236 = tail call i32 %198(ptr noundef %adev, i32 noundef %add.i235, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i247

cond.false.i242:                                  ; preds = %land.lhs.true2.i232.cond.false.i242_crit_edge, %land.lhs.true.i229.cond.false.i242_crit_edge, %if.end71.cond.false.i242_crit_edge
  %203 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx16.i239 = getelementptr i32, ptr %204, i32 1
  %205 = ptrtoint ptr %arrayidx16.i239 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %arrayidx16.i239, align 4
  %add17.i240 = add i32 %206, 22595
  %call18.i241 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17.i240, i32 noundef 0) #13
  br label %cond.end.i247

cond.end.i247:                                    ; preds = %cond.false.i242, %cond.true.i237
  %cond.i243 = phi i32 [ %call.i236, %cond.true.i237 ], [ %call18.i241, %cond.false.i242 ]
  %or.i244 = or i32 %cond.i243, 1
  %207 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %virt.i, align 8
  %and22.i245 = and i32 %208, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i245)
  %tobool23.not.i246 = icmp eq i32 %and22.i245, 0
  br i1 %tobool23.not.i246, label %cond.end.i247.cond.false44.i261_crit_edge, label %land.lhs.true24.i250

cond.end.i247.cond.false44.i261_crit_edge:        ; preds = %cond.end.i247
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i261

land.lhs.true24.i250:                             ; preds = %cond.end.i247
  %209 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %funcs58.i, align 4
  %tobool28.not.i249 = icmp eq ptr %210, null
  br i1 %tobool28.not.i249, label %land.lhs.true24.i250.cond.false44.i261_crit_edge, label %land.lhs.true29.i253

land.lhs.true24.i250.cond.false44.i261_crit_edge: ; preds = %land.lhs.true24.i250
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i261

land.lhs.true29.i253:                             ; preds = %land.lhs.true24.i250
  %sriov_wreg.i251 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %210, i32 0, i32 12
  %211 = ptrtoint ptr %sriov_wreg.i251 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %sriov_wreg.i251, align 4
  %tobool33.not.i252 = icmp eq ptr %212, null
  br i1 %tobool33.not.i252, label %land.lhs.true29.i253.cond.false44.i261_crit_edge, label %cond.true34.i257

land.lhs.true29.i253.cond.false44.i261_crit_edge: ; preds = %land.lhs.true29.i253
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i261

cond.true34.i257:                                 ; preds = %land.lhs.true29.i253
  call void @__sanitizer_cov_trace_pc() #15
  %213 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx42.i255 = getelementptr i32, ptr %214, i32 1
  %215 = ptrtoint ptr %arrayidx42.i255 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %arrayidx42.i255, align 4
  %add43.i256 = add i32 %216, 22595
  tail call void %212(ptr noundef %adev, i32 noundef %add43.i256, i32 noundef %or.i244, i32 noundef 0, i32 noundef 1) #13
  br label %for.body.i268.preheader

cond.false44.i261:                                ; preds = %land.lhs.true29.i253.cond.false44.i261_crit_edge, %land.lhs.true24.i250.cond.false44.i261_crit_edge, %cond.end.i247.cond.false44.i261_crit_edge
  %217 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx48.i259 = getelementptr i32, ptr %218, i32 1
  %219 = ptrtoint ptr %arrayidx48.i259 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %arrayidx48.i259, align 4
  %add49.i260 = add i32 %220, 22595
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49.i260, i32 noundef %or.i244, i32 noundef 0) #13
  br label %for.body.i268.preheader

for.body.i268.preheader:                          ; preds = %cond.false44.i261, %cond.true34.i257
  br label %for.body.i268

for.body.i268:                                    ; preds = %if.end.i287.for.body.i268_crit_edge, %for.body.i268.preheader
  %i.0233.i265 = phi i32 [ %inc.i285, %if.end.i287.for.body.i268_crit_edge ], [ 0, %for.body.i268.preheader ]
  %221 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %virt.i, align 8
  %and53.i266 = and i32 %222, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53.i266)
  %tobool54.not.i267 = icmp eq i32 %and53.i266, 0
  br i1 %tobool54.not.i267, label %for.body.i268.cond.false77.i281_crit_edge, label %land.lhs.true55.i270

for.body.i268.cond.false77.i281_crit_edge:        ; preds = %for.body.i268
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i281

land.lhs.true55.i270:                             ; preds = %for.body.i268
  %223 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %funcs58.i, align 4
  %tobool59.not.i269 = icmp eq ptr %224, null
  br i1 %tobool59.not.i269, label %land.lhs.true55.i270.cond.false77.i281_crit_edge, label %land.lhs.true60.i273

land.lhs.true55.i270.cond.false77.i281_crit_edge: ; preds = %land.lhs.true55.i270
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i281

land.lhs.true60.i273:                             ; preds = %land.lhs.true55.i270
  %sriov_rreg64.i271 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %224, i32 0, i32 13
  %225 = ptrtoint ptr %sriov_rreg64.i271 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %sriov_rreg64.i271, align 4
  %tobool65.not.i272 = icmp eq ptr %226, null
  br i1 %tobool65.not.i272, label %land.lhs.true60.i273.cond.false77.i281_crit_edge, label %cond.true66.i277

land.lhs.true60.i273.cond.false77.i281_crit_edge: ; preds = %land.lhs.true60.i273
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i281

cond.true66.i277:                                 ; preds = %land.lhs.true60.i273
  call void @__sanitizer_cov_trace_pc() #15
  %227 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx74.i274 = getelementptr i32, ptr %228, i32 1
  %229 = ptrtoint ptr %arrayidx74.i274 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %arrayidx74.i274, align 4
  %add75.i275 = add i32 %230, 22595
  %call76.i276 = tail call i32 %226(ptr noundef %adev, i32 noundef %add75.i275, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end84.i284

cond.false77.i281:                                ; preds = %land.lhs.true60.i273.cond.false77.i281_crit_edge, %land.lhs.true55.i270.cond.false77.i281_crit_edge, %for.body.i268.cond.false77.i281_crit_edge
  %231 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx81.i278 = getelementptr i32, ptr %232, i32 1
  %233 = ptrtoint ptr %arrayidx81.i278 to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %arrayidx81.i278, align 4
  %add82.i279 = add i32 %234, 22595
  %call83.i280 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add82.i279, i32 noundef 0) #13
  br label %cond.end84.i284

cond.end84.i284:                                  ; preds = %cond.false77.i281, %cond.true66.i277
  %cond85.i282 = phi i32 [ %call76.i276, %cond.true66.i277 ], [ %call83.i280, %cond.false77.i281 ]
  %235 = and i32 %cond85.i282, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %235)
  %cmp87.not.i283 = icmp eq i32 %235, 0
  br i1 %cmp87.not.i283, label %if.end.i287, label %if.end90.i294

if.end.i287:                                      ; preds = %cond.end84.i284
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %236 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %236(i32 noundef 214748) #13
  %inc.i285 = add nuw nsw i32 %i.0233.i265, 1
  %exitcond.not.i286 = icmp eq i32 %inc.i285, 50000
  br i1 %exitcond.not.i286, label %gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache.exit, label %if.end.i287.for.body.i268_crit_edge

if.end.i287.for.body.i268_crit_edge:              ; preds = %if.end.i287
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i268

if.end90.i294:                                    ; preds = %cond.end84.i284
  %237 = ptrtoint ptr %rlc_autoload_gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %237)
  %238 = load i64, ptr %rlc_autoload_gpu_addr.i, align 8
  %239 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 20, i32 1), align 4
  %conv.i290 = zext i32 %239 to i64
  %add93.i291 = add i64 %238, %conv.i290
  %240 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %virt.i, align 8
  %and96.i292 = and i32 %241, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96.i292)
  %tobool97.not.i293 = icmp eq i32 %and96.i292, 0
  br i1 %tobool97.not.i293, label %if.end90.i294.cond.false122.i309_crit_edge, label %land.lhs.true98.i296

if.end90.i294.cond.false122.i309_crit_edge:       ; preds = %if.end90.i294
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i309

land.lhs.true98.i296:                             ; preds = %if.end90.i294
  %242 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %funcs58.i, align 4
  %tobool102.not.i295 = icmp eq ptr %243, null
  br i1 %tobool102.not.i295, label %land.lhs.true98.i296.cond.false122.i309_crit_edge, label %land.lhs.true103.i299

land.lhs.true98.i296.cond.false122.i309_crit_edge: ; preds = %land.lhs.true98.i296
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i309

land.lhs.true103.i299:                            ; preds = %land.lhs.true98.i296
  %sriov_wreg107.i297 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %243, i32 0, i32 12
  %244 = ptrtoint ptr %sriov_wreg107.i297 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %sriov_wreg107.i297, align 4
  %tobool108.not.i298 = icmp eq ptr %245, null
  br i1 %tobool108.not.i298, label %land.lhs.true103.i299.cond.false122.i309_crit_edge, label %cond.true109.i304

land.lhs.true103.i299.cond.false122.i309_crit_edge: ; preds = %land.lhs.true103.i299
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i309

cond.true109.i304:                                ; preds = %land.lhs.true103.i299
  call void @__sanitizer_cov_trace_pc() #15
  %246 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx117.i300 = getelementptr i32, ptr %247, i32 1
  %248 = ptrtoint ptr %arrayidx117.i300 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %arrayidx117.i300, align 4
  %add118.i301 = add i32 %249, 22592
  %conv120.i302 = trunc i64 %add93.i291 to i32
  %and121.i303 = and i32 %conv120.i302, -4096
  tail call void %245(ptr noundef %adev, i32 noundef %add118.i301, i32 noundef %and121.i303, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end131.i312

cond.false122.i309:                               ; preds = %land.lhs.true103.i299.cond.false122.i309_crit_edge, %land.lhs.true98.i296.cond.false122.i309_crit_edge, %if.end90.i294.cond.false122.i309_crit_edge
  %250 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx126.i305 = getelementptr i32, ptr %251, i32 1
  %252 = ptrtoint ptr %arrayidx126.i305 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %arrayidx126.i305, align 4
  %add127.i306 = add i32 %253, 22592
  %conv129.i307 = trunc i64 %add93.i291 to i32
  %and130.i308 = and i32 %conv129.i307, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add127.i306, i32 noundef %and130.i308, i32 noundef 0) #13
  br label %cond.end131.i312

cond.end131.i312:                                 ; preds = %cond.false122.i309, %cond.true109.i304
  %254 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %virt.i, align 8
  %and134.i310 = and i32 %255, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134.i310)
  %tobool135.not.i311 = icmp eq i32 %and134.i310, 0
  br i1 %tobool135.not.i311, label %cond.end131.i312.cond.false160.i327_crit_edge, label %land.lhs.true136.i314

cond.end131.i312.cond.false160.i327_crit_edge:    ; preds = %cond.end131.i312
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i327

land.lhs.true136.i314:                            ; preds = %cond.end131.i312
  %256 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %funcs58.i, align 4
  %tobool140.not.i313 = icmp eq ptr %257, null
  br i1 %tobool140.not.i313, label %land.lhs.true136.i314.cond.false160.i327_crit_edge, label %land.lhs.true141.i317

land.lhs.true136.i314.cond.false160.i327_crit_edge: ; preds = %land.lhs.true136.i314
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i327

land.lhs.true141.i317:                            ; preds = %land.lhs.true136.i314
  %sriov_wreg145.i315 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %257, i32 0, i32 12
  %258 = ptrtoint ptr %sriov_wreg145.i315 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %sriov_wreg145.i315, align 4
  %tobool146.not.i316 = icmp eq ptr %259, null
  br i1 %tobool146.not.i316, label %land.lhs.true141.i317.cond.false160.i327_crit_edge, label %cond.true147.i322

land.lhs.true141.i317.cond.false160.i327_crit_edge: ; preds = %land.lhs.true141.i317
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i327

cond.true147.i322:                                ; preds = %land.lhs.true141.i317
  call void @__sanitizer_cov_trace_pc() #15
  %260 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx155.i318 = getelementptr i32, ptr %261, i32 1
  %262 = ptrtoint ptr %arrayidx155.i318 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %arrayidx155.i318, align 4
  %add156.i319 = add i32 %263, 22593
  %shr157.i320 = lshr i64 %add93.i291, 32
  %conv159.i321 = trunc i64 %shr157.i320 to i32
  tail call void %259(ptr noundef %adev, i32 noundef %add156.i319, i32 noundef %conv159.i321, i32 noundef 0, i32 noundef 1) #13
  br label %if.end75

cond.false160.i327:                               ; preds = %land.lhs.true141.i317.cond.false160.i327_crit_edge, %land.lhs.true136.i314.cond.false160.i327_crit_edge, %cond.end131.i312.cond.false160.i327_crit_edge
  %264 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx164.i323 = getelementptr i32, ptr %265, i32 1
  %266 = ptrtoint ptr %arrayidx164.i323 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %arrayidx164.i323, align 4
  %add165.i324 = add i32 %267, 22593
  %shr166.i325 = lshr i64 %add93.i291, 32
  %conv168.i326 = trunc i64 %shr166.i325 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add165.i324, i32 noundef %conv168.i326, i32 noundef 0) #13
  br label %if.end75

gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache.exit: ; preds = %if.end.i287
  call void @__sanitizer_cov_trace_pc() #15
  %268 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %269, ptr noundef nonnull @.str.19) #16
  br label %cleanup

if.end75:                                         ; preds = %cond.false160.i327, %cond.true147.i322
  %270 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %virt.i, align 8
  %and.i330 = and i32 %271, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i330)
  %tobool.not.i331 = icmp eq i32 %and.i330, 0
  br i1 %tobool.not.i331, label %if.end75.cond.false.i347_crit_edge, label %land.lhs.true.i334

if.end75.cond.false.i347_crit_edge:               ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i347

land.lhs.true.i334:                               ; preds = %if.end75
  %272 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load ptr, ptr %funcs58.i, align 4
  %tobool1.not.i333 = icmp eq ptr %273, null
  br i1 %tobool1.not.i333, label %land.lhs.true.i334.cond.false.i347_crit_edge, label %land.lhs.true2.i337

land.lhs.true.i334.cond.false.i347_crit_edge:     ; preds = %land.lhs.true.i334
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i347

land.lhs.true2.i337:                              ; preds = %land.lhs.true.i334
  %sriov_rreg.i335 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %273, i32 0, i32 13
  %274 = ptrtoint ptr %sriov_rreg.i335 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %sriov_rreg.i335, align 4
  %tobool6.not.i336 = icmp eq ptr %275, null
  br i1 %tobool6.not.i336, label %land.lhs.true2.i337.cond.false.i347_crit_edge, label %cond.true.i342

land.lhs.true2.i337.cond.false.i347_crit_edge:    ; preds = %land.lhs.true2.i337
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i347

cond.true.i342:                                   ; preds = %land.lhs.true2.i337
  call void @__sanitizer_cov_trace_pc() #15
  %276 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx12.i339 = getelementptr i32, ptr %277, i32 1
  %278 = ptrtoint ptr %arrayidx12.i339 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %arrayidx12.i339, align 4
  %add.i340 = add i32 %279, 22607
  %call.i341 = tail call i32 %275(ptr noundef %adev, i32 noundef %add.i340, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i352

cond.false.i347:                                  ; preds = %land.lhs.true2.i337.cond.false.i347_crit_edge, %land.lhs.true.i334.cond.false.i347_crit_edge, %if.end75.cond.false.i347_crit_edge
  %280 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx16.i344 = getelementptr i32, ptr %281, i32 1
  %282 = ptrtoint ptr %arrayidx16.i344 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %arrayidx16.i344, align 4
  %add17.i345 = add i32 %283, 22607
  %call18.i346 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17.i345, i32 noundef 0) #13
  br label %cond.end.i352

cond.end.i352:                                    ; preds = %cond.false.i347, %cond.true.i342
  %cond.i348 = phi i32 [ %call.i341, %cond.true.i342 ], [ %call18.i346, %cond.false.i347 ]
  %or.i349 = or i32 %cond.i348, 1
  %284 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %virt.i, align 8
  %and22.i350 = and i32 %285, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i350)
  %tobool23.not.i351 = icmp eq i32 %and22.i350, 0
  br i1 %tobool23.not.i351, label %cond.end.i352.cond.false44.i366_crit_edge, label %land.lhs.true24.i355

cond.end.i352.cond.false44.i366_crit_edge:        ; preds = %cond.end.i352
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i366

land.lhs.true24.i355:                             ; preds = %cond.end.i352
  %286 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %funcs58.i, align 4
  %tobool28.not.i354 = icmp eq ptr %287, null
  br i1 %tobool28.not.i354, label %land.lhs.true24.i355.cond.false44.i366_crit_edge, label %land.lhs.true29.i358

land.lhs.true24.i355.cond.false44.i366_crit_edge: ; preds = %land.lhs.true24.i355
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i366

land.lhs.true29.i358:                             ; preds = %land.lhs.true24.i355
  %sriov_wreg.i356 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %287, i32 0, i32 12
  %288 = ptrtoint ptr %sriov_wreg.i356 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %sriov_wreg.i356, align 4
  %tobool33.not.i357 = icmp eq ptr %289, null
  br i1 %tobool33.not.i357, label %land.lhs.true29.i358.cond.false44.i366_crit_edge, label %cond.true34.i362

land.lhs.true29.i358.cond.false44.i366_crit_edge: ; preds = %land.lhs.true29.i358
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false44.i366

cond.true34.i362:                                 ; preds = %land.lhs.true29.i358
  call void @__sanitizer_cov_trace_pc() #15
  %290 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx42.i360 = getelementptr i32, ptr %291, i32 1
  %292 = ptrtoint ptr %arrayidx42.i360 to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %arrayidx42.i360, align 4
  %add43.i361 = add i32 %293, 22607
  tail call void %289(ptr noundef %adev, i32 noundef %add43.i361, i32 noundef %or.i349, i32 noundef 0, i32 noundef 1) #13
  br label %for.body.i373.preheader

cond.false44.i366:                                ; preds = %land.lhs.true29.i358.cond.false44.i366_crit_edge, %land.lhs.true24.i355.cond.false44.i366_crit_edge, %cond.end.i352.cond.false44.i366_crit_edge
  %294 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx48.i364 = getelementptr i32, ptr %295, i32 1
  %296 = ptrtoint ptr %arrayidx48.i364 to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %arrayidx48.i364, align 4
  %add49.i365 = add i32 %297, 22607
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49.i365, i32 noundef %or.i349, i32 noundef 0) #13
  br label %for.body.i373.preheader

for.body.i373.preheader:                          ; preds = %cond.false44.i366, %cond.true34.i362
  br label %for.body.i373

for.body.i373:                                    ; preds = %if.end.i392.for.body.i373_crit_edge, %for.body.i373.preheader
  %i.0233.i370 = phi i32 [ %inc.i390, %if.end.i392.for.body.i373_crit_edge ], [ 0, %for.body.i373.preheader ]
  %298 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %virt.i, align 8
  %and53.i371 = and i32 %299, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53.i371)
  %tobool54.not.i372 = icmp eq i32 %and53.i371, 0
  br i1 %tobool54.not.i372, label %for.body.i373.cond.false77.i386_crit_edge, label %land.lhs.true55.i375

for.body.i373.cond.false77.i386_crit_edge:        ; preds = %for.body.i373
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i386

land.lhs.true55.i375:                             ; preds = %for.body.i373
  %300 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %funcs58.i, align 4
  %tobool59.not.i374 = icmp eq ptr %301, null
  br i1 %tobool59.not.i374, label %land.lhs.true55.i375.cond.false77.i386_crit_edge, label %land.lhs.true60.i378

land.lhs.true55.i375.cond.false77.i386_crit_edge: ; preds = %land.lhs.true55.i375
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i386

land.lhs.true60.i378:                             ; preds = %land.lhs.true55.i375
  %sriov_rreg64.i376 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %301, i32 0, i32 13
  %302 = ptrtoint ptr %sriov_rreg64.i376 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %sriov_rreg64.i376, align 4
  %tobool65.not.i377 = icmp eq ptr %303, null
  br i1 %tobool65.not.i377, label %land.lhs.true60.i378.cond.false77.i386_crit_edge, label %cond.true66.i382

land.lhs.true60.i378.cond.false77.i386_crit_edge: ; preds = %land.lhs.true60.i378
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false77.i386

cond.true66.i382:                                 ; preds = %land.lhs.true60.i378
  call void @__sanitizer_cov_trace_pc() #15
  %304 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx74.i379 = getelementptr i32, ptr %305, i32 1
  %306 = ptrtoint ptr %arrayidx74.i379 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %arrayidx74.i379, align 4
  %add75.i380 = add i32 %307, 22607
  %call76.i381 = tail call i32 %303(ptr noundef %adev, i32 noundef %add75.i380, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end84.i389

cond.false77.i386:                                ; preds = %land.lhs.true60.i378.cond.false77.i386_crit_edge, %land.lhs.true55.i375.cond.false77.i386_crit_edge, %for.body.i373.cond.false77.i386_crit_edge
  %308 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx81.i383 = getelementptr i32, ptr %309, i32 1
  %310 = ptrtoint ptr %arrayidx81.i383 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %arrayidx81.i383, align 4
  %add82.i384 = add i32 %311, 22607
  %call83.i385 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add82.i384, i32 noundef 0) #13
  br label %cond.end84.i389

cond.end84.i389:                                  ; preds = %cond.false77.i386, %cond.true66.i382
  %cond85.i387 = phi i32 [ %call76.i381, %cond.true66.i382 ], [ %call83.i385, %cond.false77.i386 ]
  %312 = and i32 %cond85.i387, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %312)
  %cmp87.not.i388 = icmp eq i32 %312, 0
  br i1 %cmp87.not.i388, label %if.end.i392, label %if.end90.i399

if.end.i392:                                      ; preds = %cond.end84.i389
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %313 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %313(i32 noundef 214748) #13
  %inc.i390 = add nuw nsw i32 %i.0233.i370, 1
  %exitcond.not.i391 = icmp eq i32 %inc.i390, 50000
  br i1 %exitcond.not.i391, label %gfx_v10_0_rlc_backdoor_autoload_config_mec_cache.exit, label %if.end.i392.for.body.i373_crit_edge

if.end.i392.for.body.i373_crit_edge:              ; preds = %if.end.i392
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i373

if.end90.i399:                                    ; preds = %cond.end84.i389
  %314 = ptrtoint ptr %rlc_autoload_gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %314)
  %315 = load i64, ptr %rlc_autoload_gpu_addr.i, align 8
  %316 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 22, i32 1), align 4
  %conv.i395 = zext i32 %316 to i64
  %add93.i396 = add i64 %315, %conv.i395
  %317 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %virt.i, align 8
  %and96.i397 = and i32 %318, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96.i397)
  %tobool97.not.i398 = icmp eq i32 %and96.i397, 0
  br i1 %tobool97.not.i398, label %if.end90.i399.cond.false122.i414_crit_edge, label %land.lhs.true98.i401

if.end90.i399.cond.false122.i414_crit_edge:       ; preds = %if.end90.i399
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i414

land.lhs.true98.i401:                             ; preds = %if.end90.i399
  %319 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %funcs58.i, align 4
  %tobool102.not.i400 = icmp eq ptr %320, null
  br i1 %tobool102.not.i400, label %land.lhs.true98.i401.cond.false122.i414_crit_edge, label %land.lhs.true103.i404

land.lhs.true98.i401.cond.false122.i414_crit_edge: ; preds = %land.lhs.true98.i401
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i414

land.lhs.true103.i404:                            ; preds = %land.lhs.true98.i401
  %sriov_wreg107.i402 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %320, i32 0, i32 12
  %321 = ptrtoint ptr %sriov_wreg107.i402 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load ptr, ptr %sriov_wreg107.i402, align 4
  %tobool108.not.i403 = icmp eq ptr %322, null
  br i1 %tobool108.not.i403, label %land.lhs.true103.i404.cond.false122.i414_crit_edge, label %cond.true109.i409

land.lhs.true103.i404.cond.false122.i414_crit_edge: ; preds = %land.lhs.true103.i404
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i414

cond.true109.i409:                                ; preds = %land.lhs.true103.i404
  call void @__sanitizer_cov_trace_pc() #15
  %323 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx117.i405 = getelementptr i32, ptr %324, i32 1
  %325 = ptrtoint ptr %arrayidx117.i405 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load i32, ptr %arrayidx117.i405, align 4
  %add118.i406 = add i32 %326, 22604
  %conv120.i407 = trunc i64 %add93.i396 to i32
  %and121.i408 = and i32 %conv120.i407, -4096
  tail call void %322(ptr noundef %adev, i32 noundef %add118.i406, i32 noundef %and121.i408, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end131.i417

cond.false122.i414:                               ; preds = %land.lhs.true103.i404.cond.false122.i414_crit_edge, %land.lhs.true98.i401.cond.false122.i414_crit_edge, %if.end90.i399.cond.false122.i414_crit_edge
  %327 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx126.i410 = getelementptr i32, ptr %328, i32 1
  %329 = ptrtoint ptr %arrayidx126.i410 to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %arrayidx126.i410, align 4
  %add127.i411 = add i32 %330, 22604
  %conv129.i412 = trunc i64 %add93.i396 to i32
  %and130.i413 = and i32 %conv129.i412, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add127.i411, i32 noundef %and130.i413, i32 noundef 0) #13
  br label %cond.end131.i417

cond.end131.i417:                                 ; preds = %cond.false122.i414, %cond.true109.i409
  %331 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %virt.i, align 8
  %and134.i415 = and i32 %332, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134.i415)
  %tobool135.not.i416 = icmp eq i32 %and134.i415, 0
  br i1 %tobool135.not.i416, label %cond.end131.i417.cond.false160.i432_crit_edge, label %land.lhs.true136.i419

cond.end131.i417.cond.false160.i432_crit_edge:    ; preds = %cond.end131.i417
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i432

land.lhs.true136.i419:                            ; preds = %cond.end131.i417
  %333 = ptrtoint ptr %funcs58.i to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %funcs58.i, align 4
  %tobool140.not.i418 = icmp eq ptr %334, null
  br i1 %tobool140.not.i418, label %land.lhs.true136.i419.cond.false160.i432_crit_edge, label %land.lhs.true141.i422

land.lhs.true136.i419.cond.false160.i432_crit_edge: ; preds = %land.lhs.true136.i419
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i432

land.lhs.true141.i422:                            ; preds = %land.lhs.true136.i419
  %sriov_wreg145.i420 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %334, i32 0, i32 12
  %335 = ptrtoint ptr %sriov_wreg145.i420 to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load ptr, ptr %sriov_wreg145.i420, align 4
  %tobool146.not.i421 = icmp eq ptr %336, null
  br i1 %tobool146.not.i421, label %land.lhs.true141.i422.cond.false160.i432_crit_edge, label %cond.true147.i427

land.lhs.true141.i422.cond.false160.i432_crit_edge: ; preds = %land.lhs.true141.i422
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false160.i432

cond.true147.i427:                                ; preds = %land.lhs.true141.i422
  call void @__sanitizer_cov_trace_pc() #15
  %337 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx155.i423 = getelementptr i32, ptr %338, i32 1
  %339 = ptrtoint ptr %arrayidx155.i423 to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load i32, ptr %arrayidx155.i423, align 4
  %add156.i424 = add i32 %340, 22605
  %shr157.i425 = lshr i64 %add93.i396, 32
  %conv159.i426 = trunc i64 %shr157.i425 to i32
  tail call void %336(ptr noundef %adev, i32 noundef %add156.i424, i32 noundef %conv159.i426, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false160.i432:                               ; preds = %land.lhs.true141.i422.cond.false160.i432_crit_edge, %land.lhs.true136.i419.cond.false160.i432_crit_edge, %cond.end131.i417.cond.false160.i432_crit_edge
  %341 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load ptr, ptr %arrayidx72.i, align 8
  %arrayidx164.i428 = getelementptr i32, ptr %342, i32 1
  %343 = ptrtoint ptr %arrayidx164.i428 to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load i32, ptr %arrayidx164.i428, align 4
  %add165.i429 = add i32 %344, 22605
  %shr166.i430 = lshr i64 %add93.i396, 32
  %conv168.i431 = trunc i64 %shr166.i430 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add165.i429, i32 noundef %conv168.i431, i32 noundef 0) #13
  br label %cleanup

gfx_v10_0_rlc_backdoor_autoload_config_mec_cache.exit: ; preds = %if.end.i392
  call void @__sanitizer_cov_trace_pc() #15
  %345 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %346, ptr noundef nonnull @.str.19) #16
  br label %cleanup

cleanup:                                          ; preds = %gfx_v10_0_rlc_backdoor_autoload_config_mec_cache.exit, %cond.false160.i432, %cond.true147.i427, %gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache.exit, %gfx_v10_0_rlc_backdoor_autoload_config_ce_cache.exit, %gfx_v10_0_rlc_backdoor_autoload_config_me_cache.exit, %if.end61.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -110, %do.end ], [ -22, %gfx_v10_0_rlc_backdoor_autoload_config_me_cache.exit ], [ -22, %gfx_v10_0_rlc_backdoor_autoload_config_ce_cache.exit ], [ -22, %gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache.exit ], [ -22, %gfx_v10_0_rlc_backdoor_autoload_config_mec_cache.exit ], [ 0, %if.end61.cleanup_crit_edge ], [ 0, %cond.false160.i432 ], [ 0, %cond.true147.i427 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_init_csb(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %get_csb_buffer = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %get_csb_buffer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %get_csb_buffer, align 4
  %cs_ptr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 7
  %4 = ptrtoint ptr %cs_ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cs_ptr, align 8
  tail call void %3(ptr noundef %adev, ptr noundef %5) #13
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 655618, i32 %7)
  %cmp = icmp eq i32 %7, 655618
  br i1 %cmp, label %do.body, label %if.else

do.body:                                          ; preds = %entry
  %arrayidx4 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx4, align 8
  %arrayidx6 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx6, align 4
  %add = add i32 %11, 19619
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %12 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %virt, align 8
  %and = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body.cond.false_crit_edge, label %land.lhs.true

do.body.cond.false_crit_edge:                     ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %do.body
  %14 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs, align 4
  %tobool10.not = icmp eq ptr %15, null
  br i1 %tobool10.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true11

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true11:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %15, i32 0, i32 12
  %16 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sriov_wreg, align 4
  %tobool15.not = icmp eq ptr %17, null
  br i1 %tobool15.not, label %land.lhs.true11.cond.false_crit_edge, label %cond.true

land.lhs.true11.cond.false_crit_edge:             ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #15
  %clear_state_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %18 = ptrtoint ptr %clear_state_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %clear_state_gpu_addr, align 8
  %shr = lshr i64 %19, 32
  %conv = trunc i64 %shr to i32
  tail call void %17(ptr noundef %adev, i32 noundef %add, i32 noundef %conv, i32 noundef 4, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true11.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %do.body.cond.false_crit_edge
  %clear_state_gpu_addr24 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %20 = ptrtoint ptr %clear_state_gpu_addr24 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %clear_state_gpu_addr24, align 8
  %shr25 = lshr i64 %21, 32
  %conv26 = trunc i64 %shr25 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %conv26, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %22 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx4, align 8
  %arrayidx32 = getelementptr i32, ptr %23, i32 1
  %24 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx32, align 4
  %add33 = add i32 %25, 19618
  %26 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %virt, align 8
  %and36 = and i32 %27, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %cond.end.cond.false59_crit_edge, label %land.lhs.true38

cond.end.cond.false59_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

land.lhs.true38:                                  ; preds = %cond.end
  %28 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %funcs, align 4
  %tobool42.not = icmp eq ptr %29, null
  br i1 %tobool42.not, label %land.lhs.true38.cond.false59_crit_edge, label %land.lhs.true43

land.lhs.true38.cond.false59_crit_edge:           ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

land.lhs.true43:                                  ; preds = %land.lhs.true38
  %sriov_wreg47 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %sriov_wreg47 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sriov_wreg47, align 4
  %tobool48.not = icmp eq ptr %31, null
  br i1 %tobool48.not, label %land.lhs.true43.cond.false59_crit_edge, label %cond.true49

land.lhs.true43.cond.false59_crit_edge:           ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false59

cond.true49:                                      ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #15
  %clear_state_gpu_addr56 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %32 = ptrtoint ptr %clear_state_gpu_addr56 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %clear_state_gpu_addr56, align 8
  %34 = trunc i64 %33 to i32
  %conv58 = and i32 %34, -4
  tail call void %31(ptr noundef %adev, i32 noundef %add33, i32 noundef %conv58, i32 noundef 4, i32 noundef 1) #13
  br label %cond.end65

cond.false59:                                     ; preds = %land.lhs.true43.cond.false59_crit_edge, %land.lhs.true38.cond.false59_crit_edge, %cond.end.cond.false59_crit_edge
  %clear_state_gpu_addr62 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %35 = ptrtoint ptr %clear_state_gpu_addr62 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %clear_state_gpu_addr62, align 8
  %37 = trunc i64 %36 to i32
  %conv64 = and i32 %37, -4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add33, i32 noundef %conv64, i32 noundef 0) #13
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false59, %cond.true49
  %38 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx4, align 8
  %arrayidx72 = getelementptr i32, ptr %39, i32 1
  %40 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx72, align 4
  %add73 = add i32 %41, 19620
  %42 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %virt, align 8
  %and76 = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76)
  %tobool77.not = icmp eq i32 %and76, 0
  br i1 %tobool77.not, label %cond.end65.cond.false96_crit_edge, label %land.lhs.true78

cond.end65.cond.false96_crit_edge:                ; preds = %cond.end65
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false96

land.lhs.true78:                                  ; preds = %cond.end65
  %44 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %funcs, align 4
  %tobool82.not = icmp eq ptr %45, null
  br i1 %tobool82.not, label %land.lhs.true78.cond.false96_crit_edge, label %land.lhs.true83

land.lhs.true78.cond.false96_crit_edge:           ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false96

land.lhs.true83:                                  ; preds = %land.lhs.true78
  %sriov_wreg87 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %45, i32 0, i32 12
  %46 = ptrtoint ptr %sriov_wreg87 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sriov_wreg87, align 4
  %tobool88.not = icmp eq ptr %47, null
  br i1 %tobool88.not, label %land.lhs.true83.cond.false96_crit_edge, label %cond.true89

land.lhs.true83.cond.false96_crit_edge:           ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false96

cond.true89:                                      ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #15
  %clear_state_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 9
  %48 = ptrtoint ptr %clear_state_size to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %clear_state_size, align 8
  tail call void %47(ptr noundef %adev, i32 noundef %add73, i32 noundef %49, i32 noundef 4, i32 noundef 1) #13
  br label %if.end

cond.false96:                                     ; preds = %land.lhs.true83.cond.false96_crit_edge, %land.lhs.true78.cond.false96_crit_edge, %cond.end65.cond.false96_crit_edge
  %clear_state_size99 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 9
  %50 = ptrtoint ptr %clear_state_size99 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %clear_state_size99, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add73, i32 noundef %51, i32 noundef 0) #13
  br label %if.end

if.else:                                          ; preds = %entry
  %virt102 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %52 = ptrtoint ptr %virt102 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %virt102, align 8
  %and104 = and i32 %53, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and104)
  %tobool105.not = icmp eq i32 %and104, 0
  br i1 %tobool105.not, label %if.else.cond.false132_crit_edge, label %land.lhs.true106

if.else.cond.false132_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false132

land.lhs.true106:                                 ; preds = %if.else
  %54 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %funcs, align 4
  %tobool110.not = icmp eq ptr %55, null
  br i1 %tobool110.not, label %land.lhs.true106.cond.false132_crit_edge, label %land.lhs.true111

land.lhs.true106.cond.false132_crit_edge:         ; preds = %land.lhs.true106
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false132

land.lhs.true111:                                 ; preds = %land.lhs.true106
  %sriov_wreg115 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %55, i32 0, i32 12
  %56 = ptrtoint ptr %sriov_wreg115 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %sriov_wreg115, align 4
  %tobool116.not = icmp eq ptr %57, null
  br i1 %tobool116.not, label %land.lhs.true111.cond.false132_crit_edge, label %cond.true117

land.lhs.true111.cond.false132_crit_edge:         ; preds = %land.lhs.true111
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false132

cond.true117:                                     ; preds = %land.lhs.true111
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx123 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %58 = ptrtoint ptr %arrayidx123 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx123, align 8
  %arrayidx125 = getelementptr i32, ptr %59, i32 1
  %60 = ptrtoint ptr %arrayidx125 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx125, align 4
  %add126 = add i32 %61, 19619
  %clear_state_gpu_addr129 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %62 = ptrtoint ptr %clear_state_gpu_addr129 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %clear_state_gpu_addr129, align 8
  %shr130 = lshr i64 %63, 32
  %conv131 = trunc i64 %shr130 to i32
  tail call void %57(ptr noundef %adev, i32 noundef %add126, i32 noundef %conv131, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end143

cond.false132:                                    ; preds = %land.lhs.true111.cond.false132_crit_edge, %land.lhs.true106.cond.false132_crit_edge, %if.else.cond.false132_crit_edge
  %arrayidx134 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %64 = ptrtoint ptr %arrayidx134 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx134, align 8
  %arrayidx136 = getelementptr i32, ptr %65, i32 1
  %66 = ptrtoint ptr %arrayidx136 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx136, align 4
  %add137 = add i32 %67, 19619
  %clear_state_gpu_addr140 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %68 = ptrtoint ptr %clear_state_gpu_addr140 to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %clear_state_gpu_addr140, align 8
  %shr141 = lshr i64 %69, 32
  %conv142 = trunc i64 %shr141 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add137, i32 noundef %conv142, i32 noundef 0) #13
  br label %cond.end143

cond.end143:                                      ; preds = %cond.false132, %cond.true117
  %70 = ptrtoint ptr %virt102 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %virt102, align 8
  %and146 = and i32 %71, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and146)
  %tobool147.not = icmp eq i32 %and146, 0
  br i1 %tobool147.not, label %cond.end143.cond.false174_crit_edge, label %land.lhs.true148

cond.end143.cond.false174_crit_edge:              ; preds = %cond.end143
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false174

land.lhs.true148:                                 ; preds = %cond.end143
  %72 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %funcs, align 4
  %tobool152.not = icmp eq ptr %73, null
  br i1 %tobool152.not, label %land.lhs.true148.cond.false174_crit_edge, label %land.lhs.true153

land.lhs.true148.cond.false174_crit_edge:         ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false174

land.lhs.true153:                                 ; preds = %land.lhs.true148
  %sriov_wreg157 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %73, i32 0, i32 12
  %74 = ptrtoint ptr %sriov_wreg157 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %sriov_wreg157, align 4
  %tobool158.not = icmp eq ptr %75, null
  br i1 %tobool158.not, label %land.lhs.true153.cond.false174_crit_edge, label %cond.true159

land.lhs.true153.cond.false174_crit_edge:         ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false174

cond.true159:                                     ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx165 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %76 = ptrtoint ptr %arrayidx165 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx165, align 8
  %arrayidx167 = getelementptr i32, ptr %77, i32 1
  %78 = ptrtoint ptr %arrayidx167 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx167, align 4
  %add168 = add i32 %79, 19618
  %clear_state_gpu_addr171 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %80 = ptrtoint ptr %clear_state_gpu_addr171 to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %clear_state_gpu_addr171, align 8
  %82 = trunc i64 %81 to i32
  %conv173 = and i32 %82, -4
  tail call void %75(ptr noundef %adev, i32 noundef %add168, i32 noundef %conv173, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end185

cond.false174:                                    ; preds = %land.lhs.true153.cond.false174_crit_edge, %land.lhs.true148.cond.false174_crit_edge, %cond.end143.cond.false174_crit_edge
  %arrayidx176 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %83 = ptrtoint ptr %arrayidx176 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %arrayidx176, align 8
  %arrayidx178 = getelementptr i32, ptr %84, i32 1
  %85 = ptrtoint ptr %arrayidx178 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx178, align 4
  %add179 = add i32 %86, 19618
  %clear_state_gpu_addr182 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %87 = ptrtoint ptr %clear_state_gpu_addr182 to i32
  call void @__asan_load8_noabort(i32 %87)
  %88 = load i64, ptr %clear_state_gpu_addr182, align 8
  %89 = trunc i64 %88 to i32
  %conv184 = and i32 %89, -4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add179, i32 noundef %conv184, i32 noundef 0) #13
  br label %cond.end185

cond.end185:                                      ; preds = %cond.false174, %cond.true159
  %90 = ptrtoint ptr %virt102 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %virt102, align 8
  %and188 = and i32 %91, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and188)
  %tobool189.not = icmp eq i32 %and188, 0
  br i1 %tobool189.not, label %cond.end185.cond.false214_crit_edge, label %land.lhs.true190

cond.end185.cond.false214_crit_edge:              ; preds = %cond.end185
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false214

land.lhs.true190:                                 ; preds = %cond.end185
  %92 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %funcs, align 4
  %tobool194.not = icmp eq ptr %93, null
  br i1 %tobool194.not, label %land.lhs.true190.cond.false214_crit_edge, label %land.lhs.true195

land.lhs.true190.cond.false214_crit_edge:         ; preds = %land.lhs.true190
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false214

land.lhs.true195:                                 ; preds = %land.lhs.true190
  %sriov_wreg199 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %93, i32 0, i32 12
  %94 = ptrtoint ptr %sriov_wreg199 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %sriov_wreg199, align 4
  %tobool200.not = icmp eq ptr %95, null
  br i1 %tobool200.not, label %land.lhs.true195.cond.false214_crit_edge, label %cond.true201

land.lhs.true195.cond.false214_crit_edge:         ; preds = %land.lhs.true195
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false214

cond.true201:                                     ; preds = %land.lhs.true195
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx207 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %96 = ptrtoint ptr %arrayidx207 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %arrayidx207, align 8
  %arrayidx209 = getelementptr i32, ptr %97, i32 1
  %98 = ptrtoint ptr %arrayidx209 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx209, align 4
  %add210 = add i32 %99, 19620
  %clear_state_size213 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 9
  %100 = ptrtoint ptr %clear_state_size213 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %clear_state_size213, align 8
  tail call void %95(ptr noundef %adev, i32 noundef %add210, i32 noundef %101, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false214:                                    ; preds = %land.lhs.true195.cond.false214_crit_edge, %land.lhs.true190.cond.false214_crit_edge, %cond.end185.cond.false214_crit_edge
  %arrayidx216 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %102 = ptrtoint ptr %arrayidx216 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %arrayidx216, align 8
  %arrayidx218 = getelementptr i32, ptr %103, i32 1
  %104 = ptrtoint ptr %arrayidx218 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx218, align 4
  %add219 = add i32 %105, 19620
  %clear_state_size222 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 9
  %106 = ptrtoint ptr %clear_state_size222 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %clear_state_size222, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add219, i32 noundef %107, i32 noundef 0) #13
  br label %if.end

if.end:                                           ; preds = %cond.false214, %cond.true201, %cond.false96, %cond.true89
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ucode_print_rlc_hdr(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_off_ctrl(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_sriov_wreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef %acc_flags, i32 noundef %hwip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = zext i32 %hwip to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.139)
  switch i32 %hwip, label %sw.default.i [
    i32 1, label %sw.bb.i
    i32 11, label %sw.bb12.i
  ]

sw.bb.i:                                          ; preds = %land.lhs.true
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sw.bb.i.if.else.i_crit_edge, label %land.lhs.true.i

sw.bb.i.if.else.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %reg_access.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 18
  %3 = ptrtoint ptr %reg_access.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %reg_access.i, align 4
  %and2.i = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.if.then_crit_edge

land.lhs.true.i.if.then_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %sw.bb.i.if.else.i_crit_edge
  %5 = and i32 %acc_flags, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %if.else.i.if.then_crit_edge, label %if.else.i.if.end_crit_edge

if.else.i.if.end_crit_edge:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.else.i.if.then_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

sw.bb12.i:                                        ; preds = %land.lhs.true
  %and15.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool16.not.i = icmp eq i32 %and15.i, 0
  br i1 %tobool16.not.i, label %sw.bb12.i.if.end_crit_edge, label %land.lhs.true17.i

sw.bb12.i.if.end_crit_edge:                       ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true17.i:                                ; preds = %sw.bb12.i
  %reg_access19.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 18
  %7 = ptrtoint ptr %reg_access19.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %reg_access19.i, align 4
  %and20.i = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  %and23.i = and i32 %acc_flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.not.i = icmp eq i32 %and23.i, 0
  %or.cond37.i = or i1 %tobool24.not.i, %tobool21.not.i
  br i1 %or.cond37.i, label %land.lhs.true17.i.if.end_crit_edge, label %land.lhs.true17.i.if.then_crit_edge

land.lhs.true17.i.if.then_crit_edge:              ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

land.lhs.true17.i.if.end_crit_edge:               ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

sw.default.i:                                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.26) #13
  br label %if.end

if.then:                                          ; preds = %land.lhs.true17.i.if.then_crit_edge, %if.else.i.if.then_crit_edge, %land.lhs.true.i.if.then_crit_edge
  %rlcg_flag.0 = phi i32 [ 0, %land.lhs.true.i.if.then_crit_edge ], [ -2147483648, %if.else.i.if.then_crit_edge ], [ 536870912, %land.lhs.true17.i.if.then_crit_edge ]
  %call1 = tail call fastcc i32 @gfx_v10_rlcg_rw(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef %rlcg_flag.0)
  br label %cleanup

if.end:                                           ; preds = %sw.default.i, %land.lhs.true17.i.if.end_crit_edge, %sw.bb12.i.if.end_crit_edge, %if.else.i.if.end_crit_edge, %entry.if.end_crit_edge
  %and2 = and i32 %acc_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef 2) #13
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then4, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v10_sriov_rreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %acc_flags, i32 noundef %hwip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = zext i32 %hwip to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.140)
  switch i32 %hwip, label %sw.default.i [
    i32 1, label %sw.bb.i
    i32 11, label %land.lhs.true.if.end_crit_edge
  ]

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

sw.bb.i:                                          ; preds = %land.lhs.true
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sw.bb.i.if.else.i_crit_edge, label %land.lhs.true.i

sw.bb.i.if.else.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %reg_access.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 18
  %3 = ptrtoint ptr %reg_access.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %reg_access.i, align 4
  %and2.i = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.if.then_crit_edge

land.lhs.true.i.if.then_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %sw.bb.i.if.else.i_crit_edge
  %5 = and i32 %acc_flags, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %if.else.i.if.then_crit_edge, label %if.else.i.if.end_crit_edge

if.else.i.if.end_crit_edge:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.else.i.if.then_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then

sw.default.i:                                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.26) #13
  br label %if.end

if.then:                                          ; preds = %if.else.i.if.then_crit_edge, %land.lhs.true.i.if.then_crit_edge
  %rlcg_flag.0 = phi i32 [ 268435456, %land.lhs.true.i.if.then_crit_edge ], [ -2147483648, %if.else.i.if.then_crit_edge ]
  %call1 = tail call fastcc i32 @gfx_v10_rlcg_rw(ptr noundef %adev, i32 noundef %offset, i32 noundef 0, i32 noundef %rlcg_flag.0)
  br label %cleanup

if.end:                                           ; preds = %sw.default.i, %if.else.i.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %and2 = and i32 %acc_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call5 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %offset, i32 noundef 2) #13
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  %call6 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %offset, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then4, %if.then
  %retval.0 = phi i32 [ %call5, %if.then4 ], [ %call6, %if.else ], [ %call1, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @gfx_v10_0_is_rlcg_access_range(ptr nocapture noundef readnone %adev, i32 noundef %offset) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  ret i1 false
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_rlcg_rw(ptr nocapture noundef readonly %adev, i32 noundef %offset, i32 noundef %v, i32 noundef %flag) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %0 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rmmio, align 8
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 8
  %arrayidx2 = getelementptr i32, ptr %3, i32 1
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx2, align 4
  %add = shl i32 %5, 2
  %mul = add i32 %add, 33024
  %add.ptr = getelementptr i8, ptr %1, i32 %mul
  store ptr %add.ptr, ptr @gfx_v10_rlcg_rw.scratch_reg0, align 4
  %mul9 = add i32 %add, 33028
  %add.ptr10 = getelementptr i8, ptr %1, i32 %mul9
  store ptr %add.ptr10, ptr @gfx_v10_rlcg_rw.scratch_reg1, align 4
  %mul17 = add i32 %add, 33032
  %add.ptr18 = getelementptr i8, ptr %1, i32 %mul17
  store ptr %add.ptr18, ptr @gfx_v10_rlcg_rw.scratch_reg2, align 4
  %mul25 = add i32 %add, 33036
  %add.ptr26 = getelementptr i8, ptr %1, i32 %mul25
  store ptr %add.ptr26, ptr @gfx_v10_rlcg_rw.scratch_reg3, align 4
  %arrayidx27 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %6 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 656127, i32 %7)
  %cmp = icmp ugt i32 %7, 656127
  %storemerge.v.v = select i1 %cmp, i32 78484, i32 78640
  %storemerge.v = add i32 %storemerge.v.v, %add
  %storemerge = getelementptr i8, ptr %1, i32 %storemerge.v
  store ptr %storemerge, ptr @gfx_v10_rlcg_rw.spare_int, align 4
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %3, align 4
  %add49 = add i32 %9, 3522
  %add54 = add i32 %5, 8704
  call void @__sanitizer_cov_trace_cmp4(i32 %add49, i32 %offset)
  %cmp55 = icmp eq i32 %add49, %offset
  call void @__sanitizer_cov_trace_cmp4(i32 %add54, i32 %offset)
  %cmp56 = icmp eq i32 %add54, %offset
  %or.cond = select i1 %cmp55, i1 true, i1 %cmp56
  br i1 %or.cond, label %if.then57, label %do.body75

if.then57:                                        ; preds = %entry
  br i1 %cmp55, label %do.body, label %if.else60

do.body:                                          ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !498
  tail call void @arm_heavy_mb() #13
  %10 = tail call i32 @llvm.bswap.i32(i32 %v)
  %11 = load ptr, ptr @gfx_v10_rlcg_rw.scratch_reg2, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %11, i32 %10) #13, !srcloc !499
  br label %do.body68

if.else60:                                        ; preds = %if.then57
  br i1 %cmp56, label %do.body63, label %if.else60.do.body68_crit_edge

if.else60.do.body68_crit_edge:                    ; preds = %if.else60
  call void @__sanitizer_cov_trace_pc() #15
  %.pre = tail call i32 @llvm.bswap.i32(i32 %v)
  br label %do.body68

do.body63:                                        ; preds = %if.else60
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !500
  tail call void @arm_heavy_mb() #13
  %12 = tail call i32 @llvm.bswap.i32(i32 %v)
  %13 = load ptr, ptr @gfx_v10_rlcg_rw.scratch_reg3, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %13, i32 %12) #13, !srcloc !499
  br label %do.body68

do.body68:                                        ; preds = %do.body63, %if.else60.do.body68_crit_edge, %do.body
  %.pre-phi = phi i32 [ %.pre, %if.else60.do.body68_crit_edge ], [ %10, %do.body ], [ %12, %do.body63 ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !501
  tail call void @arm_heavy_mb() #13
  %14 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rmmio, align 8
  %mul72 = shl i32 %offset, 2
  %add.ptr73 = getelementptr i8, ptr %15, i32 %mul72
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr73, i32 %.pre-phi) #13, !srcloc !499
  br label %if.end150

do.body75:                                        ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !502
  tail call void @arm_heavy_mb() #13
  %16 = tail call i32 @llvm.bswap.i32(i32 %v)
  %17 = load ptr, ptr @gfx_v10_rlcg_rw.scratch_reg0, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %17, i32 %16) #13, !srcloc !499
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !503
  tail call void @arm_heavy_mb() #13
  %or = or i32 %flag, %offset
  %18 = tail call i32 @llvm.bswap.i32(i32 %or)
  %19 = load ptr, ptr @gfx_v10_rlcg_rw.scratch_reg1, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %19, i32 %18) #13, !srcloc !499
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !504
  tail call void @arm_heavy_mb() #13
  %20 = load ptr, ptr @gfx_v10_rlcg_rw.spare_int, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %20, i32 16777216) #13, !srcloc !499
  br label %for.body

for.body:                                         ; preds = %if.end88.for.body_crit_edge, %do.body75
  %i.0199 = phi i32 [ 0, %do.body75 ], [ %inc, %if.end88.for.body_crit_edge ]
  %21 = load ptr, ptr @gfx_v10_rlcg_rw.scratch_reg1, align 4
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %21) #13, !srcloc !505
  %23 = tail call i32 @llvm.bswap.i32(i32 %22)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !506
  %and = and i32 %23, %flag
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.if.end150_crit_edge, label %if.end88

for.body.if.end150_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end150

if.end88:                                         ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %24 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %24(i32 noundef 2147480) #13
  %inc = add nuw nsw i32 %i.0199, 1
  %exitcond.not = icmp eq i32 %inc, 50000
  br i1 %exitcond.not, label %if.then90, label %if.end88.for.body_crit_edge

if.end88.for.body_crit_edge:                      ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

if.then90:                                        ; preds = %if.end88
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %25 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %virt, align 8
  %and91 = and i32 %26, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and91)
  %tobool92.not = icmp eq i32 %and91, 0
  br i1 %tobool92.not, label %if.then90.do.end145_crit_edge, label %land.lhs.true

if.then90.do.end145_crit_edge:                    ; preds = %if.then90
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end145

land.lhs.true:                                    ; preds = %if.then90
  %reg_access = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 18
  %27 = ptrtoint ptr %reg_access to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %reg_access, align 4
  %and94 = and i32 %28, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and94)
  %tobool95.not = icmp eq i32 %and94, 0
  br i1 %tobool95.not, label %land.lhs.true101, label %land.lhs.true.if.then106_crit_edge

land.lhs.true.if.then106_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then106

land.lhs.true101:                                 ; preds = %land.lhs.true
  %29 = ptrtoint ptr %reg_access to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %reg_access, align 4
  %and104 = and i32 %30, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and104)
  %tobool105.not = icmp eq i32 %and104, 0
  br i1 %tobool105.not, label %land.lhs.true101.do.end145_crit_edge, label %land.lhs.true101.if.then106_crit_edge

land.lhs.true101.if.then106_crit_edge:            ; preds = %land.lhs.true101
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then106

land.lhs.true101.do.end145_crit_edge:             ; preds = %land.lhs.true101
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end145

if.then106:                                       ; preds = %land.lhs.true101.if.then106_crit_edge, %land.lhs.true.if.then106_crit_edge
  %and107 = and i32 %23, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and107)
  %tobool108.not = icmp eq i32 %and107, 0
  br i1 %tobool108.not, label %if.else115, label %do.end112

do.end112:                                        ; preds = %if.then106
  call void @__sanitizer_cov_trace_pc() #15
  %call114 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.27, i32 noundef %offset) #16
  br label %if.end150

if.else115:                                       ; preds = %if.then106
  %and116 = and i32 %23, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116)
  %tobool117.not = icmp eq i32 %and116, 0
  br i1 %tobool117.not, label %if.else124, label %do.end121

do.end121:                                        ; preds = %if.else115
  call void @__sanitizer_cov_trace_pc() #15
  %call123 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.30, i32 noundef %offset) #16
  br label %if.end150

if.else124:                                       ; preds = %if.else115
  %and125 = and i32 %23, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and125)
  %tobool126.not = icmp eq i32 %and125, 0
  br i1 %tobool126.not, label %do.end136, label %do.end130

do.end130:                                        ; preds = %if.else124
  call void @__sanitizer_cov_trace_pc() #15
  %call132 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, i32 noundef %offset) #16
  br label %if.end150

do.end136:                                        ; preds = %if.else124
  call void @__sanitizer_cov_trace_pc() #15
  %call138 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, i32 noundef %offset) #16
  br label %if.end150

do.end145:                                        ; preds = %land.lhs.true101.do.end145_crit_edge, %if.then90.do.end145_crit_edge
  %call147 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, i32 noundef %offset) #16
  br label %if.end150

if.end150:                                        ; preds = %do.end145, %do.end136, %do.end130, %do.end121, %do.end112, %for.body.if.end150_crit_edge, %do.body68
  %31 = load ptr, ptr @gfx_v10_rlcg_rw.scratch_reg0, align 4
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %31) #13, !srcloc !505
  %33 = tail call i32 @llvm.bswap.i32(i32 %32)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #13, !srcloc !507
  ret i32 %33
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_irq_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_irq_add_id(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_me_init(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  %fw_name.i = alloca [40 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_bitmap = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 5, i32 7
  %0 = call ptr @memset(ptr %queue_bitmap, i32 0, i32 16)
  tail call void @amdgpu_gfx_graphics_queue_acquire(ptr noundef %adev) #13
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %fw_name.i) #13
  %1 = call ptr @memset(ptr %fw_name.i, i32 255, i32 40)
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.46) #13
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.141)
  switch i32 %3, label %do.body.i [
    i32 655626, label %entry.sw.epilog.i_crit_edge
    i32 655617, label %sw.bb2.i
    i32 655618, label %sw.bb8.i
    i32 656128, label %sw.bb9.i
    i32 656130, label %sw.bb10.i
    i32 656129, label %sw.bb11.i
    i32 656132, label %sw.bb12.i
    i32 656133, label %sw.bb13.i
    i32 656131, label %sw.bb14.i
    i32 655619, label %sw.bb15.i
  ]

entry.sw.epilog.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %entry
  %pdev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %5 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev.i, align 4
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %device.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 29504, i16 %8)
  %cmp.i = icmp eq i16 %8, 29504
  br i1 %cmp.i, label %land.lhs.true.i, label %sw.bb2.i.if.then.i_crit_edge

sw.bb2.i.if.then.i_crit_edge:                     ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

land.lhs.true.i:                                  ; preds = %sw.bb2.i
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 12
  %9 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %revision.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %cmp6.not.i = icmp eq i8 %10, 0
  br i1 %cmp6.not.i, label %land.lhs.true.i.if.then.i_crit_edge, label %land.lhs.true.i.sw.epilog.i_crit_edge

land.lhs.true.i.sw.epilog.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

land.lhs.true.i.if.then.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i.if.then.i_crit_edge, %sw.bb2.i.if.then.i_crit_edge
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb9.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb10.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb11.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb12.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb13.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb14.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog.i

sw.bb15.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %apu_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %11 = ptrtoint ptr %apu_flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %apu_flags.i, align 4
  %and.i = and i32 %12, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %.str.58..str.57.i = select i1 %tobool.not.i, ptr @.str.58, ptr @.str.57
  br label %sw.epilog.i

do.body.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4112, 0\0A.popsection", ""() #13, !srcloc !508
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb15.i, %sw.bb14.i, %sw.bb13.i, %sw.bb12.i, %sw.bb11.i, %sw.bb10.i, %sw.bb9.i, %sw.bb8.i, %if.then.i, %land.lhs.true.i.sw.epilog.i_crit_edge, %entry.sw.epilog.i_crit_edge
  %chip_name.0.i = phi ptr [ @.str.56, %sw.bb14.i ], [ @.str.55, %sw.bb13.i ], [ @.str.54, %sw.bb12.i ], [ @.str.53, %sw.bb11.i ], [ @.str.52, %sw.bb10.i ], [ @.str.51, %sw.bb9.i ], [ @.str.50, %sw.bb8.i ], [ @.str.48, %land.lhs.true.i.sw.epilog.i_crit_edge ], [ @.str.48, %if.then.i ], [ @.str.47, %entry.sw.epilog.i_crit_edge ], [ %.str.58..str.57.i, %sw.bb15.i ]
  %wks.0.i = phi ptr [ @.str.45, %sw.bb14.i ], [ @.str.45, %sw.bb13.i ], [ @.str.45, %sw.bb12.i ], [ @.str.45, %sw.bb11.i ], [ @.str.45, %sw.bb10.i ], [ @.str.45, %sw.bb9.i ], [ @.str.45, %sw.bb8.i ], [ @.str.45, %land.lhs.true.i.sw.epilog.i_crit_edge ], [ @.str.49, %if.then.i ], [ @.str.45, %entry.sw.epilog.i_crit_edge ], [ @.str.45, %sw.bb15.i ]
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 40, ptr noundef nonnull @.str.59, ptr noundef nonnull %chip_name.0.i, ptr noundef nonnull %wks.0.i) #13
  %pfp_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 11
  %13 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adev, align 8
  %call22.i = call i32 @request_firmware(ptr noundef %pfp_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %14) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22.i)
  %tobool23.not.i = icmp eq i32 %call22.i, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %sw.epilog.i.do.end477.i_crit_edge

sw.epilog.i.do.end477.i_crit_edge:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end25.i:                                       ; preds = %sw.epilog.i
  %15 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pfp_fw.i, align 4
  %call28.i = call i32 @amdgpu_ucode_validate(ptr noundef %16) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i)
  %tobool29.not.i = icmp eq i32 %call28.i, 0
  br i1 %tobool29.not.i, label %if.end31.i, label %if.end25.i.do.end477.i_crit_edge

if.end25.i.do.end477.i_crit_edge:                 ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end31.i:                                       ; preds = %if.end25.i
  %17 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pfp_fw.i, align 4
  %data.i = getelementptr inbounds %struct.firmware, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data.i, align 4
  %ucode_version.i = getelementptr inbounds %struct.common_firmware_header, ptr %20, i32 0, i32 6
  %21 = ptrtoint ptr %ucode_version.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ucode_version.i, align 4
  %23 = call i32 @llvm.bswap.i32(i32 %22) #13
  %pfp_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %24 = ptrtoint ptr %pfp_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %pfp_fw_version.i, align 8
  %ucode_feature_version.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %20, i32 0, i32 1
  %25 = ptrtoint ptr %ucode_feature_version.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %ucode_feature_version.i, align 4
  %27 = call i32 @llvm.bswap.i32(i32 %26) #13
  %pfp_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 23
  %28 = ptrtoint ptr %pfp_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %pfp_feature_version.i, align 4
  %call38.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 40, ptr noundef nonnull @.str.60, ptr noundef nonnull %chip_name.0.i, ptr noundef nonnull %wks.0.i) #13
  %me_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 9
  %29 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %adev, align 8
  %call42.i = call i32 @request_firmware(ptr noundef %me_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %30) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i)
  %tobool43.not.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.not.i, label %if.end45.i, label %if.end31.i.do.end477.i_crit_edge

if.end31.i.do.end477.i_crit_edge:                 ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end45.i:                                       ; preds = %if.end31.i
  %31 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %me_fw.i, align 4
  %call48.i = call i32 @amdgpu_ucode_validate(ptr noundef %32) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48.i)
  %tobool49.not.i = icmp eq i32 %call48.i, 0
  br i1 %tobool49.not.i, label %if.end51.i, label %if.end45.i.do.end477.i_crit_edge

if.end45.i.do.end477.i_crit_edge:                 ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end51.i:                                       ; preds = %if.end45.i
  %33 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %me_fw.i, align 4
  %data54.i = getelementptr inbounds %struct.firmware, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %data54.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %data54.i, align 4
  %ucode_version56.i = getelementptr inbounds %struct.common_firmware_header, ptr %36, i32 0, i32 6
  %37 = ptrtoint ptr %ucode_version56.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %ucode_version56.i, align 4
  %39 = call i32 @llvm.bswap.i32(i32 %38) #13
  %me_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %40 = ptrtoint ptr %me_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %me_fw_version.i, align 8
  %ucode_feature_version58.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %36, i32 0, i32 1
  %41 = ptrtoint ptr %ucode_feature_version58.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ucode_feature_version58.i, align 4
  %43 = call i32 @llvm.bswap.i32(i32 %42) #13
  %me_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 21
  %44 = ptrtoint ptr %me_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %me_feature_version.i, align 4
  %call61.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 40, ptr noundef nonnull @.str.61, ptr noundef nonnull %chip_name.0.i, ptr noundef nonnull %wks.0.i) #13
  %ce_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 13
  %45 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %adev, align 8
  %call65.i = call i32 @request_firmware(ptr noundef %ce_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %46) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65.i)
  %tobool66.not.i = icmp eq i32 %call65.i, 0
  br i1 %tobool66.not.i, label %if.end68.i, label %if.end51.i.do.end477.i_crit_edge

if.end51.i.do.end477.i_crit_edge:                 ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end68.i:                                       ; preds = %if.end51.i
  %47 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ce_fw.i, align 4
  %call71.i = call i32 @amdgpu_ucode_validate(ptr noundef %48) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71.i)
  %tobool72.not.i = icmp eq i32 %call71.i, 0
  br i1 %tobool72.not.i, label %if.end74.i, label %if.end68.i.do.end477.i_crit_edge

if.end68.i.do.end477.i_crit_edge:                 ; preds = %if.end68.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end74.i:                                       ; preds = %if.end68.i
  %49 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %ce_fw.i, align 4
  %data77.i = getelementptr inbounds %struct.firmware, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %data77.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %data77.i, align 4
  %ucode_version79.i = getelementptr inbounds %struct.common_firmware_header, ptr %52, i32 0, i32 6
  %53 = ptrtoint ptr %ucode_version79.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %ucode_version79.i, align 4
  %55 = call i32 @llvm.bswap.i32(i32 %54) #13
  %ce_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 14
  %56 = ptrtoint ptr %ce_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %ce_fw_version.i, align 8
  %ucode_feature_version81.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %52, i32 0, i32 1
  %57 = ptrtoint ptr %ucode_feature_version81.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %ucode_feature_version81.i, align 4
  %59 = call i32 @llvm.bswap.i32(i32 %58) #13
  %ce_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 22
  %60 = ptrtoint ptr %ce_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %ce_feature_version.i, align 8
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %61 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %virt.i, align 8
  %and83.i = and i32 %62, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83.i)
  %tobool84.not.i = icmp eq i32 %and83.i, 0
  br i1 %tobool84.not.i, label %if.then85.i, label %if.end74.i.if.end193.i_crit_edge

if.end74.i.if.end193.i_crit_edge:                 ; preds = %if.end74.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end193.i

if.then85.i:                                      ; preds = %if.end74.i
  %call87.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 40, ptr noundef nonnull @.str.62, ptr noundef nonnull %chip_name.0.i) #13
  %rlc_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 15
  %63 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %adev, align 8
  %call91.i = call i32 @request_firmware(ptr noundef %rlc_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %64) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91.i)
  %tobool92.not.i = icmp eq i32 %call91.i, 0
  br i1 %tobool92.not.i, label %if.end94.i, label %if.then85.i.do.end477.i_crit_edge

if.then85.i.do.end477.i_crit_edge:                ; preds = %if.then85.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end94.i:                                       ; preds = %if.then85.i
  %65 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %rlc_fw.i, align 4
  %call97.i = call i32 @amdgpu_ucode_validate(ptr noundef %66) #13
  %67 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %rlc_fw.i, align 4
  %data100.i = getelementptr inbounds %struct.firmware, ptr %68, i32 0, i32 1
  %69 = ptrtoint ptr %data100.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %data100.i, align 4
  %header_version_major.i = getelementptr inbounds %struct.common_firmware_header, ptr %70, i32 0, i32 2
  %71 = ptrtoint ptr %header_version_major.i to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %header_version_major.i, align 4
  %header_version_minor.i = getelementptr inbounds %struct.common_firmware_header, ptr %70, i32 0, i32 3
  %73 = ptrtoint ptr %header_version_minor.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %header_version_minor.i, align 2
  %ucode_version104.i = getelementptr inbounds %struct.common_firmware_header, ptr %70, i32 0, i32 6
  %75 = ptrtoint ptr %ucode_version104.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %ucode_version104.i, align 4
  %77 = call i32 @llvm.bswap.i32(i32 %76) #13
  %rlc_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 16
  %78 = ptrtoint ptr %rlc_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %77, ptr %rlc_fw_version.i, align 8
  %ucode_feature_version106.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 1
  %79 = ptrtoint ptr %ucode_feature_version106.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %ucode_feature_version106.i, align 4
  %81 = call i32 @llvm.bswap.i32(i32 %80) #13
  %rlc_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 24
  %82 = ptrtoint ptr %rlc_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %81, ptr %rlc_feature_version.i, align 8
  %save_and_restore_offset.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 4
  %83 = ptrtoint ptr %save_and_restore_offset.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %save_and_restore_offset.i, align 4
  %85 = call i32 @llvm.bswap.i32(i32 %84) #13
  %save_and_restore_offset109.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 16
  %86 = ptrtoint ptr %save_and_restore_offset109.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %85, ptr %save_and_restore_offset109.i, align 8
  %clear_state_descriptor_offset.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 5
  %87 = ptrtoint ptr %clear_state_descriptor_offset.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %clear_state_descriptor_offset.i, align 4
  %89 = call i32 @llvm.bswap.i32(i32 %88) #13
  %clear_state_descriptor_offset112.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 17
  %90 = ptrtoint ptr %clear_state_descriptor_offset112.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %89, ptr %clear_state_descriptor_offset112.i, align 4
  %avail_scratch_ram_locations.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 6
  %91 = ptrtoint ptr %avail_scratch_ram_locations.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %avail_scratch_ram_locations.i, align 4
  %93 = call i32 @llvm.bswap.i32(i32 %92) #13
  %avail_scratch_ram_locations115.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 18
  %94 = ptrtoint ptr %avail_scratch_ram_locations115.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %93, ptr %avail_scratch_ram_locations115.i, align 8
  %reg_restore_list_size.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 7
  %95 = ptrtoint ptr %reg_restore_list_size.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %reg_restore_list_size.i, align 4
  %97 = call i32 @llvm.bswap.i32(i32 %96) #13
  %reg_restore_list_size118.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 19
  %98 = ptrtoint ptr %reg_restore_list_size118.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %97, ptr %reg_restore_list_size118.i, align 4
  %reg_list_format_start.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 8
  %99 = ptrtoint ptr %reg_list_format_start.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %reg_list_format_start.i, align 4
  %101 = call i32 @llvm.bswap.i32(i32 %100) #13
  %reg_list_format_start121.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 20
  %102 = ptrtoint ptr %reg_list_format_start121.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %101, ptr %reg_list_format_start121.i, align 8
  %reg_list_format_separate_start.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 9
  %103 = ptrtoint ptr %reg_list_format_separate_start.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %reg_list_format_separate_start.i, align 4
  %105 = call i32 @llvm.bswap.i32(i32 %104) #13
  %reg_list_format_separate_start124.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 21
  %106 = ptrtoint ptr %reg_list_format_separate_start124.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %105, ptr %reg_list_format_separate_start124.i, align 4
  %starting_offsets_start.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 10
  %107 = ptrtoint ptr %starting_offsets_start.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %starting_offsets_start.i, align 4
  %109 = call i32 @llvm.bswap.i32(i32 %108) #13
  %starting_offsets_start127.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 22
  %110 = ptrtoint ptr %starting_offsets_start127.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %109, ptr %starting_offsets_start127.i, align 8
  %reg_list_format_size_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 11
  %111 = ptrtoint ptr %reg_list_format_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %reg_list_format_size_bytes.i, align 4
  %113 = call i32 @llvm.bswap.i32(i32 %112) #13
  %reg_list_format_size_bytes130.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 23
  %114 = ptrtoint ptr %reg_list_format_size_bytes130.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 %113, ptr %reg_list_format_size_bytes130.i, align 4
  %reg_list_size_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 13
  %115 = ptrtoint ptr %reg_list_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %reg_list_size_bytes.i, align 4
  %117 = call i32 @llvm.bswap.i32(i32 %116) #13
  %reg_list_size_bytes133.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 24
  %118 = ptrtoint ptr %reg_list_size_bytes133.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 %117, ptr %reg_list_size_bytes133.i, align 8
  %add.i = add i32 %117, %113
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3264) #17
  %register_list_format.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 31
  %119 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr %call9.i.i, ptr %register_list_format.i, align 4
  %tobool146.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool146.not.i, label %if.end94.i.do.end477.i_crit_edge, label %if.end148.i

if.end94.i.do.end477.i_crit_edge:                 ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end148.i:                                      ; preds = %if.end94.i
  %120 = ptrtoint ptr %70 to i32
  %reg_list_format_array_offset_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 12
  %121 = ptrtoint ptr %reg_list_format_array_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %reg_list_format_array_offset_bytes.i, align 4
  %123 = call i32 @llvm.bswap.i32(i32 %122) #13
  %add149.i = add i32 %123, %120
  %124 = inttoptr i32 %add149.i to ptr
  %125 = ptrtoint ptr %reg_list_format_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %reg_list_format_size_bytes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %126)
  %cmp151742.not.i = icmp ult i32 %126, 4
  br i1 %cmp151742.not.i, label %if.end148.i.for.end.i_crit_edge, label %if.end148.i.for.body.i_crit_edge

if.end148.i.for.body.i_crit_edge:                 ; preds = %if.end148.i
  br label %for.body.i

if.end148.i.for.end.i_crit_edge:                  ; preds = %if.end148.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end148.i.for.body.i_crit_edge
  %i.0743.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end148.i.for.body.i_crit_edge ]
  %arrayidx153.i = getelementptr i32, ptr %124, i32 %i.0743.i
  %127 = ptrtoint ptr %arrayidx153.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %arrayidx153.i, align 4
  %129 = call i32 @llvm.bswap.i32(i32 %128) #13
  %130 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %register_list_format.i, align 4
  %arrayidx157.i = getelementptr i32, ptr %131, i32 %i.0743.i
  %132 = ptrtoint ptr %arrayidx157.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 %129, ptr %arrayidx157.i, align 4
  %inc.i = add nuw nsw i32 %i.0743.i, 1
  %133 = ptrtoint ptr %reg_list_format_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %reg_list_format_size_bytes.i, align 4
  %shr.i = lshr i32 %134, 2
  %cmp151.i = icmp ult i32 %inc.i, %shr.i
  br i1 %cmp151.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.for.end.i_crit_edge

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.end148.i.for.end.i_crit_edge
  %i.0.lcssa.i = phi i32 [ 0, %if.end148.i.for.end.i_crit_edge ], [ %inc.i, %for.body.i.for.end.i_crit_edge ]
  %135 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %register_list_format.i, align 4
  %add.ptr.i = getelementptr i32, ptr %136, i32 %i.0.lcssa.i
  %register_restore.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 32
  %137 = ptrtoint ptr %register_restore.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store ptr %add.ptr.i, ptr %register_restore.i, align 8
  %reg_list_array_offset_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %70, i32 0, i32 14
  %138 = ptrtoint ptr %reg_list_array_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %reg_list_array_offset_bytes.i, align 4
  %140 = call i32 @llvm.bswap.i32(i32 %139) #13
  %add163.i = add i32 %140, %120
  %141 = inttoptr i32 %add163.i to ptr
  %142 = ptrtoint ptr %reg_list_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %reg_list_size_bytes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %143)
  %cmp167745.not.i = icmp ult i32 %143, 4
  br i1 %cmp167745.not.i, label %for.end.i.for.end177.i_crit_edge, label %for.end.i.for.body169.i_crit_edge

for.end.i.for.body169.i_crit_edge:                ; preds = %for.end.i
  br label %for.body169.i

for.end.i.for.end177.i_crit_edge:                 ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end177.i

for.body169.i:                                    ; preds = %for.body169.i.for.body169.i_crit_edge, %for.end.i.for.body169.i_crit_edge
  %i.1746.i = phi i32 [ %inc176.i, %for.body169.i.for.body169.i_crit_edge ], [ 0, %for.end.i.for.body169.i_crit_edge ]
  %arrayidx170.i = getelementptr i32, ptr %141, i32 %i.1746.i
  %144 = ptrtoint ptr %arrayidx170.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %arrayidx170.i, align 4
  %146 = call i32 @llvm.bswap.i32(i32 %145) #13
  %147 = ptrtoint ptr %register_restore.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %register_restore.i, align 8
  %arrayidx174.i = getelementptr i32, ptr %148, i32 %i.1746.i
  %149 = ptrtoint ptr %arrayidx174.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 %146, ptr %arrayidx174.i, align 4
  %inc176.i = add nuw nsw i32 %i.1746.i, 1
  %150 = ptrtoint ptr %reg_list_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %reg_list_size_bytes.i, align 4
  %shr166.i = lshr i32 %151, 2
  %cmp167.i = icmp ult i32 %inc176.i, %shr166.i
  br i1 %cmp167.i, label %for.body169.i.for.body169.i_crit_edge, label %for.body169.i.for.end177.i_crit_edge

for.body169.i.for.end177.i_crit_edge:             ; preds = %for.body169.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end177.i

for.body169.i.for.body169.i_crit_edge:            ; preds = %for.body169.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body169.i

for.end177.i:                                     ; preds = %for.body169.i.for.end177.i_crit_edge, %for.end.i.for.end177.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp2(i16 512, i16 %72)
  %cmp179.i = icmp ne i16 %72, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %74)
  %cond.i = icmp eq i16 %74, 0
  %or.cond.i = select i1 %cmp179.i, i1 true, i1 %cond.i
  br i1 %or.cond.i, label %for.end177.i.if.end193.i_crit_edge, label %if.then185.i

for.end177.i.if.end193.i_crit_edge:               ; preds = %for.end177.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end193.i

if.then185.i:                                     ; preds = %for.end177.i
  %152 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %rlc_fw.i, align 4
  %data.i18 = getelementptr inbounds %struct.firmware, ptr %153, i32 0, i32 1
  %154 = ptrtoint ptr %data.i18 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %data.i18, align 4
  %save_restore_list_cntl_ucode_ver.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 2
  %156 = ptrtoint ptr %save_restore_list_cntl_ucode_ver.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %save_restore_list_cntl_ucode_ver.i, align 4
  %158 = call i32 @llvm.bswap.i32(i32 %157) #13
  %rlc_srlc_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 25
  %159 = ptrtoint ptr %rlc_srlc_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %159)
  store i32 %158, ptr %rlc_srlc_fw_version.i, align 4
  %save_restore_list_cntl_feature_ver.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 3
  %160 = ptrtoint ptr %save_restore_list_cntl_feature_ver.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %save_restore_list_cntl_feature_ver.i, align 4
  %162 = call i32 @llvm.bswap.i32(i32 %161) #13
  %rlc_srlc_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 26
  %163 = ptrtoint ptr %rlc_srlc_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 %162, ptr %rlc_srlc_feature_version.i, align 8
  %save_restore_list_cntl_size_bytes.i19 = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 4
  %164 = ptrtoint ptr %save_restore_list_cntl_size_bytes.i19 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %save_restore_list_cntl_size_bytes.i19, align 4
  %166 = call i32 @llvm.bswap.i32(i32 %165) #13
  %save_restore_list_cntl_size_bytes4.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 26
  %167 = ptrtoint ptr %save_restore_list_cntl_size_bytes4.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store i32 %166, ptr %save_restore_list_cntl_size_bytes4.i, align 8
  %save_restore_list_cntl_offset_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 5
  %168 = ptrtoint ptr %save_restore_list_cntl_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %save_restore_list_cntl_offset_bytes.i, align 4
  %170 = call i32 @llvm.bswap.i32(i32 %169) #13
  %add.ptr.i20 = getelementptr i8, ptr %155, i32 %170
  %save_restore_list_cntl.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 33
  %171 = ptrtoint ptr %save_restore_list_cntl.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store ptr %add.ptr.i20, ptr %save_restore_list_cntl.i, align 4
  %save_restore_list_gpm_ucode_ver.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 6
  %172 = ptrtoint ptr %save_restore_list_gpm_ucode_ver.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %save_restore_list_gpm_ucode_ver.i, align 4
  %174 = call i32 @llvm.bswap.i32(i32 %173) #13
  %rlc_srlg_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 27
  %175 = ptrtoint ptr %rlc_srlg_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %174, ptr %rlc_srlg_fw_version.i, align 4
  %save_restore_list_gpm_feature_ver.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 7
  %176 = ptrtoint ptr %save_restore_list_gpm_feature_ver.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %save_restore_list_gpm_feature_ver.i, align 4
  %178 = call i32 @llvm.bswap.i32(i32 %177) #13
  %rlc_srlg_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 28
  %179 = ptrtoint ptr %rlc_srlg_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %178, ptr %rlc_srlg_feature_version.i, align 8
  %save_restore_list_gpm_size_bytes.i21 = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 8
  %180 = ptrtoint ptr %save_restore_list_gpm_size_bytes.i21 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %save_restore_list_gpm_size_bytes.i21, align 4
  %182 = call i32 @llvm.bswap.i32(i32 %181) #13
  %save_restore_list_gpm_size_bytes11.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 27
  %183 = ptrtoint ptr %save_restore_list_gpm_size_bytes11.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 %182, ptr %save_restore_list_gpm_size_bytes11.i, align 4
  %save_restore_list_gpm_offset_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 9
  %184 = ptrtoint ptr %save_restore_list_gpm_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %save_restore_list_gpm_offset_bytes.i, align 4
  %186 = call i32 @llvm.bswap.i32(i32 %185) #13
  %add.ptr12.i = getelementptr i8, ptr %155, i32 %186
  %save_restore_list_gpm.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 34
  %187 = ptrtoint ptr %save_restore_list_gpm.i to i32
  call void @__asan_store4_noabort(i32 %187)
  store ptr %add.ptr12.i, ptr %save_restore_list_gpm.i, align 8
  %save_restore_list_srm_ucode_ver.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 10
  %188 = ptrtoint ptr %save_restore_list_srm_ucode_ver.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %save_restore_list_srm_ucode_ver.i, align 4
  %190 = call i32 @llvm.bswap.i32(i32 %189) #13
  %rlc_srls_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 29
  %191 = ptrtoint ptr %rlc_srls_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 %190, ptr %rlc_srls_fw_version.i, align 4
  %save_restore_list_srm_feature_ver.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 11
  %192 = ptrtoint ptr %save_restore_list_srm_feature_ver.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %save_restore_list_srm_feature_ver.i, align 4
  %194 = call i32 @llvm.bswap.i32(i32 %193) #13
  %rlc_srls_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 30
  %195 = ptrtoint ptr %rlc_srls_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %194, ptr %rlc_srls_feature_version.i, align 8
  %save_restore_list_srm_size_bytes.i22 = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 12
  %196 = ptrtoint ptr %save_restore_list_srm_size_bytes.i22 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %save_restore_list_srm_size_bytes.i22, align 4
  %198 = call i32 @llvm.bswap.i32(i32 %197) #13
  %save_restore_list_srm_size_bytes19.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 28
  %199 = ptrtoint ptr %save_restore_list_srm_size_bytes19.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %198, ptr %save_restore_list_srm_size_bytes19.i, align 8
  %save_restore_list_srm_offset_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 13
  %200 = ptrtoint ptr %save_restore_list_srm_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %save_restore_list_srm_offset_bytes.i, align 4
  %202 = call i32 @llvm.bswap.i32(i32 %201) #13
  %add.ptr20.i = getelementptr i8, ptr %155, i32 %202
  %save_restore_list_srm.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 35
  %203 = ptrtoint ptr %save_restore_list_srm.i to i32
  call void @__asan_store4_noabort(i32 %203)
  store ptr %add.ptr20.i, ptr %save_restore_list_srm.i, align 4
  %reg_list_format_direct_reg_list_length.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %155, i32 0, i32 1
  %204 = ptrtoint ptr %reg_list_format_direct_reg_list_length.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %reg_list_format_direct_reg_list_length.i, align 4
  %206 = call i32 @llvm.bswap.i32(i32 %205) #13
  %reg_list_format_direct_reg_list_length25.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 25
  %207 = ptrtoint ptr %reg_list_format_direct_reg_list_length25.i to i32
  call void @__asan_store4_noabort(i32 %207)
  store i32 %206, ptr %reg_list_format_direct_reg_list_length25.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 512, i16 %74)
  %cmp188.i = icmp eq i16 %74, 512
  br i1 %cmp188.i, label %if.then190.i, label %if.then185.i.if.end193.i_crit_edge

if.then185.i.if.end193.i_crit_edge:               ; preds = %if.then185.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end193.i

if.then190.i:                                     ; preds = %if.then185.i
  call void @__sanitizer_cov_trace_pc() #15
  %208 = ptrtoint ptr %data.i18 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %data.i18, align 4
  %rlc_iram_ucode_size_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_2, ptr %209, i32 0, i32 1
  %210 = ptrtoint ptr %rlc_iram_ucode_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %rlc_iram_ucode_size_bytes.i.i, align 4
  %212 = call i32 @llvm.bswap.i32(i32 %211) #13
  %rlc_iram_ucode_size_bytes2.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 29
  %213 = ptrtoint ptr %rlc_iram_ucode_size_bytes2.i.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 %212, ptr %rlc_iram_ucode_size_bytes2.i.i, align 4
  %rlc_iram_ucode_offset_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_2, ptr %209, i32 0, i32 2
  %214 = ptrtoint ptr %rlc_iram_ucode_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %rlc_iram_ucode_offset_bytes.i.i, align 4
  %216 = call i32 @llvm.bswap.i32(i32 %215) #13
  %add.ptr.i.i = getelementptr i8, ptr %209, i32 %216
  %rlc_iram_ucode.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 36
  %217 = ptrtoint ptr %rlc_iram_ucode.i.i to i32
  call void @__asan_store4_noabort(i32 %217)
  store ptr %add.ptr.i.i, ptr %rlc_iram_ucode.i.i, align 8
  %rlc_dram_ucode_size_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_2, ptr %209, i32 0, i32 3
  %218 = ptrtoint ptr %rlc_dram_ucode_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %rlc_dram_ucode_size_bytes.i.i, align 4
  %220 = call i32 @llvm.bswap.i32(i32 %219) #13
  %rlc_dram_ucode_size_bytes7.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 30
  %221 = ptrtoint ptr %rlc_dram_ucode_size_bytes7.i.i to i32
  call void @__asan_store4_noabort(i32 %221)
  store i32 %220, ptr %rlc_dram_ucode_size_bytes7.i.i, align 8
  %rlc_dram_ucode_offset_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_2, ptr %209, i32 0, i32 4
  %222 = ptrtoint ptr %rlc_dram_ucode_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %rlc_dram_ucode_offset_bytes.i.i, align 4
  %224 = call i32 @llvm.bswap.i32(i32 %223) #13
  %add.ptr8.i.i = getelementptr i8, ptr %209, i32 %224
  %rlc_dram_ucode.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 37
  %225 = ptrtoint ptr %rlc_dram_ucode.i.i to i32
  call void @__asan_store4_noabort(i32 %225)
  store ptr %add.ptr8.i.i, ptr %rlc_dram_ucode.i.i, align 4
  br label %if.end193.i

if.end193.i:                                      ; preds = %if.then190.i, %if.then185.i.if.end193.i_crit_edge, %for.end177.i.if.end193.i_crit_edge, %if.end74.i.if.end193.i_crit_edge
  %call195.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 40, ptr noundef nonnull @.str.63, ptr noundef nonnull %chip_name.0.i, ptr noundef nonnull %wks.0.i) #13
  %mec_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 17
  %226 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %adev, align 8
  %call199.i = call i32 @request_firmware(ptr noundef %mec_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %227) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call199.i)
  %tobool200.not.i = icmp eq i32 %call199.i, 0
  br i1 %tobool200.not.i, label %if.end202.i, label %if.end193.i.do.end477.i_crit_edge

if.end193.i.do.end477.i_crit_edge:                ; preds = %if.end193.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end202.i:                                      ; preds = %if.end193.i
  %228 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %mec_fw.i, align 4
  %call205.i = call i32 @amdgpu_ucode_validate(ptr noundef %229) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call205.i)
  %tobool206.not.i = icmp eq i32 %call205.i, 0
  br i1 %tobool206.not.i, label %if.end208.i, label %if.end202.i.do.end477.i_crit_edge

if.end202.i.do.end477.i_crit_edge:                ; preds = %if.end202.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end208.i:                                      ; preds = %if.end202.i
  %230 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %mec_fw.i, align 4
  %data211.i = getelementptr inbounds %struct.firmware, ptr %231, i32 0, i32 1
  %232 = ptrtoint ptr %data211.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %data211.i, align 4
  %ucode_version213.i = getelementptr inbounds %struct.common_firmware_header, ptr %233, i32 0, i32 6
  %234 = ptrtoint ptr %ucode_version213.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %ucode_version213.i, align 4
  %236 = call i32 @llvm.bswap.i32(i32 %235) #13
  %mec_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 18
  %237 = ptrtoint ptr %mec_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %237)
  store i32 %236, ptr %mec_fw_version.i, align 8
  %ucode_feature_version215.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %233, i32 0, i32 1
  %238 = ptrtoint ptr %ucode_feature_version215.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %ucode_feature_version215.i, align 4
  %240 = call i32 @llvm.bswap.i32(i32 %239) #13
  %mec_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 31
  %241 = ptrtoint ptr %mec_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 %240, ptr %mec_feature_version.i, align 4
  %call218.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 40, ptr noundef nonnull @.str.64, ptr noundef nonnull %chip_name.0.i, ptr noundef nonnull %wks.0.i) #13
  %mec2_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 19
  %242 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %adev, align 8
  %call222.i = call i32 @request_firmware(ptr noundef %mec2_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %243) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call222.i)
  %tobool223.not.i = icmp eq i32 %call222.i, 0
  br i1 %tobool223.not.i, label %if.then224.i, label %if.else239.i

if.then224.i:                                     ; preds = %if.end208.i
  %244 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %mec2_fw.i, align 4
  %call227.i = call i32 @amdgpu_ucode_validate(ptr noundef %245) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call227.i)
  %tobool228.not.i = icmp eq i32 %call227.i, 0
  br i1 %tobool228.not.i, label %if.end230.i, label %if.then224.i.do.end477.i_crit_edge

if.then224.i.do.end477.i_crit_edge:               ; preds = %if.then224.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.end477.i

if.end230.i:                                      ; preds = %if.then224.i
  call void @__sanitizer_cov_trace_pc() #15
  %246 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %mec2_fw.i, align 4
  %data233.i = getelementptr inbounds %struct.firmware, ptr %247, i32 0, i32 1
  %248 = ptrtoint ptr %data233.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %data233.i, align 4
  %ucode_version235.i = getelementptr inbounds %struct.common_firmware_header, ptr %249, i32 0, i32 6
  %250 = ptrtoint ptr %ucode_version235.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %ucode_version235.i, align 4
  %252 = call i32 @llvm.bswap.i32(i32 %251) #13
  %mec2_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 20
  %253 = ptrtoint ptr %mec2_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %253)
  store i32 %252, ptr %mec2_fw_version.i, align 8
  %ucode_feature_version237.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %249, i32 0, i32 1
  %254 = ptrtoint ptr %ucode_feature_version237.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %ucode_feature_version237.i, align 4
  %256 = call i32 @llvm.bswap.i32(i32 %255) #13
  %mec2_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 32
  %257 = ptrtoint ptr %mec2_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %257)
  store i32 %256, ptr %mec2_feature_version.i, align 8
  br label %if.end242.i

if.else239.i:                                     ; preds = %if.end208.i
  call void @__sanitizer_cov_trace_pc() #15
  %258 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_store4_noabort(i32 %258)
  store ptr null, ptr %mec2_fw.i, align 4
  br label %if.end242.i

if.end242.i:                                      ; preds = %if.else239.i, %if.end230.i
  %load_type.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %259 = ptrtoint ptr %load_type.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %load_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %260)
  %cmp243.i = icmp eq i32 %260, 2
  br i1 %cmp243.i, label %if.then245.i, label %if.end242.i.out.i_crit_edge

if.end242.i.out.i_crit_edge:                      ; preds = %if.end242.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.i

if.then245.i:                                     ; preds = %if.end242.i
  %arrayidx247.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 9
  %261 = ptrtoint ptr %arrayidx247.i to i32
  call void @__asan_store4_noabort(i32 %261)
  store i32 9, ptr %arrayidx247.i, align 8
  %262 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %pfp_fw.i, align 4
  %fw.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 9, i32 1
  %264 = ptrtoint ptr %fw.i to i32
  call void @__asan_store4_noabort(i32 %264)
  store ptr %263, ptr %fw.i, align 4
  %data251.i = getelementptr inbounds %struct.firmware, ptr %263, i32 0, i32 1
  %265 = ptrtoint ptr %data251.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %data251.i, align 4
  %ucode_size_bytes.i = getelementptr inbounds %struct.common_firmware_header, ptr %266, i32 0, i32 7
  %267 = ptrtoint ptr %ucode_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %ucode_size_bytes.i, align 4
  %269 = call i32 @llvm.bswap.i32(i32 %268) #13
  %add252.i = add i32 %269, 4095
  %and253.i = and i32 %add252.i, -4096
  %fw_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 3
  %270 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %fw_size.i, align 8
  %add255.i = add i32 %and253.i, %271
  store i32 %add255.i, ptr %fw_size.i, align 8
  %arrayidx258.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 10
  %272 = ptrtoint ptr %arrayidx258.i to i32
  call void @__asan_store4_noabort(i32 %272)
  store i32 10, ptr %arrayidx258.i, align 8
  %273 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load ptr, ptr %me_fw.i, align 4
  %fw262.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 10, i32 1
  %275 = ptrtoint ptr %fw262.i to i32
  call void @__asan_store4_noabort(i32 %275)
  store ptr %274, ptr %fw262.i, align 4
  %data264.i = getelementptr inbounds %struct.firmware, ptr %274, i32 0, i32 1
  %276 = ptrtoint ptr %data264.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %data264.i, align 4
  %ucode_size_bytes265.i = getelementptr inbounds %struct.common_firmware_header, ptr %277, i32 0, i32 7
  %278 = ptrtoint ptr %ucode_size_bytes265.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %ucode_size_bytes265.i, align 4
  %280 = call i32 @llvm.bswap.i32(i32 %279) #13
  %add266.i = add i32 %280, 4095
  %and267.i = and i32 %add266.i, -4096
  %add270.i = add i32 %and267.i, %add255.i
  %281 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %281)
  store i32 %add270.i, ptr %fw_size.i, align 8
  %arrayidx273.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 8
  %282 = ptrtoint ptr %arrayidx273.i to i32
  call void @__asan_store4_noabort(i32 %282)
  store i32 8, ptr %arrayidx273.i, align 8
  %283 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %ce_fw.i, align 4
  %fw277.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 8, i32 1
  %285 = ptrtoint ptr %fw277.i to i32
  call void @__asan_store4_noabort(i32 %285)
  store ptr %284, ptr %fw277.i, align 4
  %data279.i = getelementptr inbounds %struct.firmware, ptr %284, i32 0, i32 1
  %286 = ptrtoint ptr %data279.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %data279.i, align 4
  %ucode_size_bytes280.i = getelementptr inbounds %struct.common_firmware_header, ptr %287, i32 0, i32 7
  %288 = ptrtoint ptr %ucode_size_bytes280.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %ucode_size_bytes280.i, align 4
  %290 = call i32 @llvm.bswap.i32(i32 %289) #13
  %add281.i = add i32 %290, 4095
  %and282.i = and i32 %add281.i, -4096
  %add285.i = add i32 %and282.i, %add270.i
  %291 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %291)
  store i32 %add285.i, ptr %fw_size.i, align 8
  %arrayidx288.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 22
  %292 = ptrtoint ptr %arrayidx288.i to i32
  call void @__asan_store4_noabort(i32 %292)
  store i32 22, ptr %arrayidx288.i, align 8
  %rlc_fw291.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 15
  %293 = ptrtoint ptr %rlc_fw291.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load ptr, ptr %rlc_fw291.i, align 4
  %fw292.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 22, i32 1
  %295 = ptrtoint ptr %fw292.i to i32
  call void @__asan_store4_noabort(i32 %295)
  store ptr %294, ptr %fw292.i, align 4
  %tobool294.not.i = icmp eq ptr %294, null
  br i1 %tobool294.not.i, label %if.then245.i.if.end304.i_crit_edge, label %if.then295.i

if.then245.i.if.end304.i_crit_edge:               ; preds = %if.then245.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end304.i

if.then295.i:                                     ; preds = %if.then245.i
  call void @__sanitizer_cov_trace_pc() #15
  %data297.i = getelementptr inbounds %struct.firmware, ptr %294, i32 0, i32 1
  %296 = ptrtoint ptr %data297.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %data297.i, align 4
  %ucode_size_bytes298.i = getelementptr inbounds %struct.common_firmware_header, ptr %297, i32 0, i32 7
  %298 = ptrtoint ptr %ucode_size_bytes298.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %ucode_size_bytes298.i, align 4
  %300 = call i32 @llvm.bswap.i32(i32 %299) #13
  %add299.i = add i32 %300, 4095
  %and300.i = and i32 %add299.i, -4096
  %add303.i = add i32 %and300.i, %add285.i
  %301 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %301)
  store i32 %add303.i, ptr %fw_size.i, align 8
  br label %if.end304.i

if.end304.i:                                      ; preds = %if.then295.i, %if.then245.i.if.end304.i_crit_edge
  %save_restore_list_cntl_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 26
  %302 = ptrtoint ptr %save_restore_list_cntl_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %save_restore_list_cntl_size_bytes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %303)
  %tobool307.not.i = icmp eq i32 %303, 0
  br i1 %tobool307.not.i, label %if.end304.i.if.end401.i_crit_edge, label %land.lhs.true308.i

if.end304.i.if.end401.i_crit_edge:                ; preds = %if.end304.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end401.i

land.lhs.true308.i:                               ; preds = %if.end304.i
  %save_restore_list_gpm_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 27
  %304 = ptrtoint ptr %save_restore_list_gpm_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %save_restore_list_gpm_size_bytes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %305)
  %tobool311.not.i = icmp eq i32 %305, 0
  br i1 %tobool311.not.i, label %land.lhs.true308.i.if.end401.i_crit_edge, label %land.lhs.true312.i

land.lhs.true308.i.if.end401.i_crit_edge:         ; preds = %land.lhs.true308.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end401.i

land.lhs.true312.i:                               ; preds = %land.lhs.true308.i
  %save_restore_list_srm_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 28
  %306 = ptrtoint ptr %save_restore_list_srm_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %save_restore_list_srm_size_bytes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %307)
  %tobool315.not.i = icmp eq i32 %307, 0
  br i1 %tobool315.not.i, label %land.lhs.true312.i.if.end401.i_crit_edge, label %if.then316.i

land.lhs.true312.i.if.end401.i_crit_edge:         ; preds = %land.lhs.true312.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end401.i

if.then316.i:                                     ; preds = %land.lhs.true312.i
  %arrayidx319.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 17
  %308 = ptrtoint ptr %arrayidx319.i to i32
  call void @__asan_store4_noabort(i32 %308)
  store i32 17, ptr %arrayidx319.i, align 8
  %fw323.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 17, i32 1
  %309 = ptrtoint ptr %fw323.i to i32
  call void @__asan_store4_noabort(i32 %309)
  store ptr %294, ptr %fw323.i, align 4
  %add327.i = add i32 %303, 4095
  %and328.i = and i32 %add327.i, -4096
  %310 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %fw_size.i, align 8
  %arrayidx334.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 18
  %312 = ptrtoint ptr %arrayidx334.i to i32
  call void @__asan_store4_noabort(i32 %312)
  store i32 18, ptr %arrayidx334.i, align 8
  %fw338.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 18, i32 1
  %313 = ptrtoint ptr %fw338.i to i32
  call void @__asan_store4_noabort(i32 %313)
  store ptr %294, ptr %fw338.i, align 4
  %add342.i = add i32 %305, 4095
  %and343.i = and i32 %add342.i, -4096
  %arrayidx349.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 19
  %314 = ptrtoint ptr %arrayidx349.i to i32
  call void @__asan_store4_noabort(i32 %314)
  store i32 19, ptr %arrayidx349.i, align 8
  %fw353.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 19, i32 1
  %315 = ptrtoint ptr %fw353.i to i32
  call void @__asan_store4_noabort(i32 %315)
  store ptr %294, ptr %fw353.i, align 4
  %add357.i = add i32 %307, 4095
  %and358.i = and i32 %add357.i, -4096
  %add331.i = add i32 %and343.i, %and328.i
  %add346.i = add i32 %add331.i, %and358.i
  %add361.i = add i32 %add346.i, %311
  store i32 %add361.i, ptr %fw_size.i, align 8
  %rlc_iram_ucode_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 29
  %316 = ptrtoint ptr %rlc_iram_ucode_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %rlc_iram_ucode_size_bytes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %317)
  %tobool364.not.i = icmp eq i32 %317, 0
  br i1 %tobool364.not.i, label %if.then316.i.if.end401.i_crit_edge, label %land.lhs.true365.i

if.then316.i.if.end401.i_crit_edge:               ; preds = %if.then316.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end401.i

land.lhs.true365.i:                               ; preds = %if.then316.i
  %rlc_dram_ucode_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 30
  %318 = ptrtoint ptr %rlc_dram_ucode_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %rlc_dram_ucode_size_bytes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %319)
  %tobool368.not.i = icmp eq i32 %319, 0
  br i1 %tobool368.not.i, label %land.lhs.true365.i.if.end401.i_crit_edge, label %if.then369.i

land.lhs.true365.i.if.end401.i_crit_edge:         ; preds = %land.lhs.true365.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end401.i

if.then369.i:                                     ; preds = %land.lhs.true365.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx372.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 20
  %320 = ptrtoint ptr %arrayidx372.i to i32
  call void @__asan_store4_noabort(i32 %320)
  store i32 20, ptr %arrayidx372.i, align 8
  %fw376.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 20, i32 1
  %321 = ptrtoint ptr %fw376.i to i32
  call void @__asan_store4_noabort(i32 %321)
  store ptr %294, ptr %fw376.i, align 4
  %add380.i = add i32 %317, 4095
  %and381.i = and i32 %add380.i, -4096
  %add384.i = add i32 %and381.i, %add361.i
  %arrayidx387.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 21
  %322 = ptrtoint ptr %arrayidx387.i to i32
  call void @__asan_store4_noabort(i32 %322)
  store i32 21, ptr %arrayidx387.i, align 8
  %fw391.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 21, i32 1
  %323 = ptrtoint ptr %fw391.i to i32
  call void @__asan_store4_noabort(i32 %323)
  store ptr %294, ptr %fw391.i, align 4
  %add395.i = add i32 %319, 4095
  %and396.i = and i32 %add395.i, -4096
  %add399.i = add i32 %add384.i, %and396.i
  %324 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %324)
  store i32 %add399.i, ptr %fw_size.i, align 8
  br label %if.end401.i

if.end401.i:                                      ; preds = %if.then369.i, %land.lhs.true365.i.if.end401.i_crit_edge, %if.then316.i.if.end401.i_crit_edge, %land.lhs.true312.i.if.end401.i_crit_edge, %land.lhs.true308.i.if.end401.i_crit_edge, %if.end304.i.if.end401.i_crit_edge
  %arrayidx404.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 11
  %325 = ptrtoint ptr %arrayidx404.i to i32
  call void @__asan_store4_noabort(i32 %325)
  store i32 11, ptr %arrayidx404.i, align 8
  %326 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %mec_fw.i, align 4
  %fw408.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 11, i32 1
  %328 = ptrtoint ptr %fw408.i to i32
  call void @__asan_store4_noabort(i32 %328)
  store ptr %327, ptr %fw408.i, align 4
  %data410.i = getelementptr inbounds %struct.firmware, ptr %327, i32 0, i32 1
  %329 = ptrtoint ptr %data410.i to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load ptr, ptr %data410.i, align 4
  %ucode_size_bytes413.i = getelementptr inbounds %struct.common_firmware_header, ptr %330, i32 0, i32 7
  %331 = ptrtoint ptr %ucode_size_bytes413.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %ucode_size_bytes413.i, align 4
  %333 = call i32 @llvm.bswap.i32(i32 %332) #13
  %jt_size.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %330, i32 0, i32 3
  %334 = ptrtoint ptr %jt_size.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load i32, ptr %jt_size.i, align 4
  %336 = call i32 @llvm.bswap.i32(i32 %335) #13
  %mul.neg.i = mul i32 %336, -4
  %sub.i = add i32 %333, 4095
  %add414.i = add i32 %sub.i, %mul.neg.i
  %and415.i = and i32 %add414.i, -4096
  %337 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load i32, ptr %fw_size.i, align 8
  %add418.i = add i32 %and415.i, %338
  store i32 %add418.i, ptr %fw_size.i, align 8
  %arrayidx421.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 12
  %339 = ptrtoint ptr %arrayidx421.i to i32
  call void @__asan_store4_noabort(i32 %339)
  store i32 12, ptr %arrayidx421.i, align 8
  %fw425.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 12, i32 1
  %340 = ptrtoint ptr %fw425.i to i32
  call void @__asan_store4_noabort(i32 %340)
  store ptr %327, ptr %fw425.i, align 4
  %341 = ptrtoint ptr %jt_size.i to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load i32, ptr %jt_size.i, align 4
  %343 = call i32 @llvm.bswap.i32(i32 %342) #13
  %mul427.i = shl i32 %343, 2
  %add428.i = add i32 %mul427.i, 4095
  %and429.i = and i32 %add428.i, -4096
  %add432.i = add i32 %and429.i, %add418.i
  %344 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %344)
  store i32 %add432.i, ptr %fw_size.i, align 8
  %345 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load ptr, ptr %mec2_fw.i, align 4
  %tobool435.not.i = icmp eq ptr %346, null
  br i1 %tobool435.not.i, label %if.end401.i.out.i_crit_edge, label %if.then436.i

if.end401.i.out.i_crit_edge:                      ; preds = %if.end401.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %out.i

if.then436.i:                                     ; preds = %if.end401.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx439.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 13
  %347 = ptrtoint ptr %arrayidx439.i to i32
  call void @__asan_store4_noabort(i32 %347)
  store i32 13, ptr %arrayidx439.i, align 8
  %fw443.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 13, i32 1
  %348 = ptrtoint ptr %fw443.i to i32
  call void @__asan_store4_noabort(i32 %348)
  store ptr %346, ptr %fw443.i, align 4
  %data445.i = getelementptr inbounds %struct.firmware, ptr %346, i32 0, i32 1
  %349 = ptrtoint ptr %data445.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load ptr, ptr %data445.i, align 4
  %ucode_size_bytes448.i = getelementptr inbounds %struct.common_firmware_header, ptr %350, i32 0, i32 7
  %351 = ptrtoint ptr %ucode_size_bytes448.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load i32, ptr %ucode_size_bytes448.i, align 4
  %353 = call i32 @llvm.bswap.i32(i32 %352) #13
  %jt_size449.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %350, i32 0, i32 3
  %354 = ptrtoint ptr %jt_size449.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %jt_size449.i, align 4
  %356 = call i32 @llvm.bswap.i32(i32 %355) #13
  %mul450.neg.i = mul i32 %356, -4
  %sub451.i = add i32 %353, 4095
  %add452.i = add i32 %sub451.i, %mul450.neg.i
  %and453.i = and i32 %add452.i, -4096
  %add456.i = add i32 %and453.i, %add432.i
  %357 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %357)
  store i32 %add456.i, ptr %fw_size.i, align 8
  %arrayidx459.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 14
  %358 = ptrtoint ptr %arrayidx459.i to i32
  call void @__asan_store4_noabort(i32 %358)
  store i32 14, ptr %arrayidx459.i, align 8
  %fw463.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 14, i32 1
  %359 = ptrtoint ptr %fw463.i to i32
  call void @__asan_store4_noabort(i32 %359)
  store ptr %346, ptr %fw463.i, align 4
  %360 = ptrtoint ptr %jt_size449.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load i32, ptr %jt_size449.i, align 4
  %362 = call i32 @llvm.bswap.i32(i32 %361) #13
  %mul465.i = shl i32 %362, 2
  %add466.i = add i32 %mul465.i, 4095
  %and467.i = and i32 %add466.i, -4096
  %add470.i = add i32 %and467.i, %add456.i
  %363 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %363)
  store i32 %add470.i, ptr %fw_size.i, align 8
  br label %out.i

out.i:                                            ; preds = %if.then436.i, %if.end401.i.out.i_crit_edge, %if.end242.i.out.i_crit_edge
  %cp_fw_write_wait.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 35
  %364 = ptrtoint ptr %cp_fw_write_wait.i to i32
  call void @__asan_store1_noabort(i32 %364)
  store i8 0, ptr %cp_fw_write_wait.i, align 2
  %365 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load i32, ptr %arrayidx.i, align 4
  %367 = zext i32 %366 to i64
  call void @__sanitizer_cov_trace_switch(i64 %367, ptr @__sancov_gen_cov_switch_values.142)
  switch i32 %366, label %out.i.land.end.i_crit_edge [
    i32 655626, label %out.i.sw.bb.i_crit_edge
    i32 655618, label %out.i.sw.bb.i_crit_edge23
    i32 655617, label %out.i.sw.bb.i_crit_edge24
    i32 655619, label %out.i.sw.bb.i_crit_edge25
    i32 656128, label %out.i.sw.bb19.i_crit_edge
    i32 656130, label %out.i.sw.bb19.i_crit_edge26
    i32 656129, label %out.i.sw.bb19.i_crit_edge27
    i32 656132, label %out.i.sw.bb19.i_crit_edge28
    i32 656133, label %out.i.sw.bb19.i_crit_edge29
    i32 656131, label %out.i.sw.bb19.i_crit_edge30
  ]

out.i.sw.bb19.i_crit_edge30:                      ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19.i

out.i.sw.bb19.i_crit_edge29:                      ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19.i

out.i.sw.bb19.i_crit_edge28:                      ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19.i

out.i.sw.bb19.i_crit_edge27:                      ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19.i

out.i.sw.bb19.i_crit_edge26:                      ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19.i

out.i.sw.bb19.i_crit_edge:                        ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb19.i

out.i.sw.bb.i_crit_edge25:                        ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

out.i.sw.bb.i_crit_edge24:                        ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

out.i.sw.bb.i_crit_edge23:                        ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

out.i.sw.bb.i_crit_edge:                          ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb.i

out.i.land.end.i_crit_edge:                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.i

sw.bb.i:                                          ; preds = %out.i.sw.bb.i_crit_edge, %out.i.sw.bb.i_crit_edge23, %out.i.sw.bb.i_crit_edge24, %out.i.sw.bb.i_crit_edge25
  %368 = ptrtoint ptr %me_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %me_fw_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 69, i32 %369)
  %cmp.i6 = icmp ugt i32 %369, 69
  br i1 %cmp.i6, label %land.lhs.true.i8, label %sw.bb.i.land.end.i_crit_edge

sw.bb.i.land.end.i_crit_edge:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.i

land.lhs.true.i8:                                 ; preds = %sw.bb.i
  %370 = ptrtoint ptr %me_feature_version.i to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load i32, ptr %me_feature_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %371)
  %cmp4.i = icmp ugt i32 %371, 26
  br i1 %cmp4.i, label %land.lhs.true5.i, label %land.lhs.true.i8.land.end.i_crit_edge

land.lhs.true.i8.land.end.i_crit_edge:            ; preds = %land.lhs.true.i8
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.i

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i8
  %372 = ptrtoint ptr %pfp_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load i32, ptr %pfp_fw_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 103, i32 %373)
  %cmp7.i = icmp ugt i32 %373, 103
  br i1 %cmp7.i, label %land.lhs.true8.i, label %land.lhs.true5.i.land.end.i_crit_edge

land.lhs.true5.i.land.end.i_crit_edge:            ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.i

land.lhs.true8.i:                                 ; preds = %land.lhs.true5.i
  %374 = ptrtoint ptr %pfp_feature_version.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %pfp_feature_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %375)
  %cmp10.i = icmp ugt i32 %375, 26
  br i1 %cmp10.i, label %land.lhs.true11.i, label %land.lhs.true8.i.land.end.i_crit_edge

land.lhs.true8.i.land.end.i_crit_edge:            ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.i

land.lhs.true11.i:                                ; preds = %land.lhs.true8.i
  %376 = ptrtoint ptr %mec_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load i32, ptr %mec_fw_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 90, i32 %377)
  %cmp13.i = icmp ugt i32 %377, 90
  br i1 %cmp13.i, label %land.lhs.true14.i, label %land.lhs.true11.i.land.end.i_crit_edge

land.lhs.true11.i.land.end.i_crit_edge:           ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.i

land.lhs.true14.i:                                ; preds = %land.lhs.true11.i
  %378 = ptrtoint ptr %mec_feature_version.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load i32, ptr %mec_feature_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %379)
  %cmp16.i = icmp ugt i32 %379, 26
  br i1 %cmp16.i, label %if.then.i13, label %land.lhs.true14.i.land.end.i_crit_edge

land.lhs.true14.i.land.end.i_crit_edge:           ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.end.i

if.then.i13:                                      ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #15
  %380 = ptrtoint ptr %cp_fw_write_wait.i to i32
  call void @__asan_store1_noabort(i32 %380)
  store i8 1, ptr %cp_fw_write_wait.i, align 2
  br label %if.end504.i

sw.bb19.i:                                        ; preds = %out.i.sw.bb19.i_crit_edge, %out.i.sw.bb19.i_crit_edge26, %out.i.sw.bb19.i_crit_edge27, %out.i.sw.bb19.i_crit_edge28, %out.i.sw.bb19.i_crit_edge29, %out.i.sw.bb19.i_crit_edge30
  %381 = ptrtoint ptr %cp_fw_write_wait.i to i32
  call void @__asan_store1_noabort(i32 %381)
  store i8 1, ptr %cp_fw_write_wait.i, align 2
  br label %if.end504.i

land.end.i:                                       ; preds = %land.lhs.true14.i.land.end.i_crit_edge, %land.lhs.true11.i.land.end.i_crit_edge, %land.lhs.true8.i.land.end.i_crit_edge, %land.lhs.true5.i.land.end.i_crit_edge, %land.lhs.true.i8.land.end.i_crit_edge, %sw.bb.i.land.end.i_crit_edge, %out.i.land.end.i_crit_edge
  %.b51.i = load i1, ptr @gfx_v10_0_check_fw_write_wait.__already_done, align 1
  br i1 %.b51.i, label %land.end.i.if.end504.i_crit_edge, label %if.then30.i, !prof !481

land.end.i.if.end504.i_crit_edge:                 ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end504.i

if.then30.i:                                      ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #15
  store i1 true, ptr @gfx_v10_0_check_fw_write_wait.__already_done, align 1
  %call.i16 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67) #16
  br label %if.end504.i

do.end477.i:                                      ; preds = %if.then224.i.do.end477.i_crit_edge, %if.end202.i.do.end477.i_crit_edge, %if.end193.i.do.end477.i_crit_edge, %if.end94.i.do.end477.i_crit_edge, %if.then85.i.do.end477.i_crit_edge, %if.end68.i.do.end477.i_crit_edge, %if.end51.i.do.end477.i_crit_edge, %if.end45.i.do.end477.i_crit_edge, %if.end31.i.do.end477.i_crit_edge, %if.end25.i.do.end477.i_crit_edge, %sw.epilog.i.do.end477.i_crit_edge
  %err.1.ph.i = phi i32 [ -12, %if.end94.i.do.end477.i_crit_edge ], [ %call91.i, %if.then85.i.do.end477.i_crit_edge ], [ %call227.i, %if.then224.i.do.end477.i_crit_edge ], [ %call205.i, %if.end202.i.do.end477.i_crit_edge ], [ %call199.i, %if.end193.i.do.end477.i_crit_edge ], [ %call71.i, %if.end68.i.do.end477.i_crit_edge ], [ %call65.i, %if.end51.i.do.end477.i_crit_edge ], [ %call48.i, %if.end45.i.do.end477.i_crit_edge ], [ %call42.i, %if.end31.i.do.end477.i_crit_edge ], [ %call28.i, %if.end25.i.do.end477.i_crit_edge ], [ %call22.i, %sw.epilog.i.do.end477.i_crit_edge ]
  %382 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %383, ptr noundef nonnull @.str.65, ptr noundef nonnull %fw_name.i) #16
  %384 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load ptr, ptr %pfp_fw.i, align 4
  call void @release_firmware(ptr noundef %385) #13
  %386 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_store4_noabort(i32 %386)
  store ptr null, ptr %pfp_fw.i, align 4
  %me_fw485.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 9
  %387 = ptrtoint ptr %me_fw485.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %me_fw485.i, align 4
  call void @release_firmware(ptr noundef %388) #13
  %389 = ptrtoint ptr %me_fw485.i to i32
  call void @__asan_store4_noabort(i32 %389)
  store ptr null, ptr %me_fw485.i, align 4
  %ce_fw489.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 13
  %390 = ptrtoint ptr %ce_fw489.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %ce_fw489.i, align 4
  call void @release_firmware(ptr noundef %391) #13
  %392 = ptrtoint ptr %ce_fw489.i to i32
  call void @__asan_store4_noabort(i32 %392)
  store ptr null, ptr %ce_fw489.i, align 4
  %rlc_fw493.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 15
  %393 = ptrtoint ptr %rlc_fw493.i to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load ptr, ptr %rlc_fw493.i, align 4
  call void @release_firmware(ptr noundef %394) #13
  %395 = ptrtoint ptr %rlc_fw493.i to i32
  call void @__asan_store4_noabort(i32 %395)
  store ptr null, ptr %rlc_fw493.i, align 4
  %mec_fw497.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 17
  %396 = ptrtoint ptr %mec_fw497.i to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load ptr, ptr %mec_fw497.i, align 4
  call void @release_firmware(ptr noundef %397) #13
  %398 = ptrtoint ptr %mec_fw497.i to i32
  call void @__asan_store4_noabort(i32 %398)
  store ptr null, ptr %mec_fw497.i, align 4
  %mec2_fw501.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 19
  %399 = ptrtoint ptr %mec2_fw501.i to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load ptr, ptr %mec2_fw501.i, align 4
  call void @release_firmware(ptr noundef %400) #13
  %401 = ptrtoint ptr %mec2_fw501.i to i32
  call void @__asan_store4_noabort(i32 %401)
  store ptr null, ptr %mec2_fw501.i, align 4
  br label %if.end504.i

if.end504.i:                                      ; preds = %do.end477.i, %if.then30.i, %land.end.i.if.end504.i_crit_edge, %sw.bb19.i, %if.then.i13
  %err.1740.i = phi i32 [ %err.1.ph.i, %do.end477.i ], [ 0, %if.then.i13 ], [ 0, %sw.bb19.i ], [ 0, %land.end.i.if.end504.i_crit_edge ], [ 0, %if.then30.i ]
  %402 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 655626, i32 %403)
  %cond.i.i = icmp eq i32 %403, 655626
  br i1 %cond.i.i, label %sw.bb.i.i, label %if.end504.i.gfx_v10_0_init_microcode.exit_crit_edge

if.end504.i.gfx_v10_0_init_microcode.exit_crit_edge: ; preds = %if.end504.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_init_microcode.exit

sw.bb.i.i:                                        ; preds = %if.end504.i
  %pdev.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %404 = ptrtoint ptr %pdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load ptr, ptr %pdev.i.i.i, align 4
  %revision.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %405, i32 0, i32 12
  %406 = ptrtoint ptr %revision.i.i.i to i32
  call void @__asan_load1_noabort(i32 %406)
  %407 = load i8, ptr %revision.i.i.i, align 4
  %408 = and i8 %407, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -62, i8 %408)
  %switch.i.i.i = icmp eq i8 %408, -62
  br i1 %switch.i.i.i, label %sw.bb.i.i.gfx_v10_0_init_microcode.exit_crit_edge, label %if.then.i732.i

sw.bb.i.i.gfx_v10_0_init_microcode.exit_crit_edge: ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_init_microcode.exit

if.then.i732.i:                                   ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %pp_feature.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 24
  %409 = ptrtoint ptr %pp_feature.i.i to i32
  call void @__asan_load4_noabort(i32 %409)
  %410 = load i32, ptr %pp_feature.i.i, align 8
  %and.i.i = and i32 %410, -32769
  store i32 %and.i.i, ptr %pp_feature.i.i, align 8
  br label %gfx_v10_0_init_microcode.exit

gfx_v10_0_init_microcode.exit:                    ; preds = %if.then.i732.i, %sw.bb.i.i.gfx_v10_0_init_microcode.exit_crit_edge, %if.end504.i.gfx_v10_0_init_microcode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %fw_name.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.1740.i)
  %tobool.not = icmp eq i32 %err.1740.i, 0
  br i1 %tobool.not, label %gfx_v10_0_init_microcode.exit.if.end_crit_edge, label %if.then

gfx_v10_0_init_microcode.exit.if.end_crit_edge:   ; preds = %gfx_v10_0_init_microcode.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %gfx_v10_0_init_microcode.exit
  call void @__sanitizer_cov_trace_pc() #15
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.44) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %gfx_v10_0_init_microcode.exit.if.end_crit_edge
  ret i32 %err.1740.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_mec_init(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  %hpd = alloca ptr, align 4
  %fw = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %hpd) #13
  %0 = ptrtoint ptr %hpd to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %hpd, align 4, !annotation !484
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fw) #13
  %1 = ptrtoint ptr %fw to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %fw, align 4
  %mec = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6
  %queue_bitmap = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 8
  %2 = call ptr @memset(ptr %queue_bitmap, i32 0, i32 16)
  tail call void @amdgpu_gfx_compute_queue_acquire(ptr noundef %adev) #13
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %3 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_compute_rings, align 8
  %mul = shl i32 %4, 11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul)
  %tobool.not = icmp eq i32 %mul, 0
  br i1 %tobool.not, label %entry.if.end14_crit_edge, label %if.then

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end14

if.then:                                          ; preds = %entry
  %hpd_eop_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 1
  %call = call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %mul, i32 noundef 4096, i32 noundef 2, ptr noundef %mec, ptr noundef %hpd_eop_gpu_addr, ptr noundef nonnull %hpd) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool6.not = icmp eq i32 %call, 0
  br i1 %tobool6.not, label %if.end, label %do.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %5 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %6, ptr noundef nonnull @.str.69, i32 noundef %call) #16
  call void @amdgpu_bo_free_kernel(ptr noundef %mec, ptr noundef null, ptr noundef null) #13
  %mec_fw_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 2
  call void @amdgpu_bo_free_kernel(ptr noundef %mec_fw_obj.i, ptr noundef null, ptr noundef null) #13
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  %7 = ptrtoint ptr %hpd to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hpd, align 4
  %9 = call ptr @memset(ptr %8, i32 0, i32 %mul)
  %10 = ptrtoint ptr %mec to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mec, align 8
  call void @amdgpu_bo_kunmap(ptr noundef %11) #13
  %12 = ptrtoint ptr %mec to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mec, align 8
  %tbo.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4
  %bdev.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4, i32 1
  %14 = ptrtoint ptr %bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bdev.i.i.i, align 8
  %lru_lock.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %15, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i) #13
  %resource.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4, i32 6
  %16 = ptrtoint ptr %resource.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %resource.i.i.i, align 4
  call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i, ptr noundef %17, ptr noundef null) #13
  %18 = ptrtoint ptr %bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %bdev.i.i.i, align 8
  %lru_lock2.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %19, i32 0, i32 6
  call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i) #13
  %resv.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4, i32 0, i32 9
  %20 = ptrtoint ptr %resv.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %resv.i.i, align 8
  call void @dma_resv_reset_shared_max(ptr noundef %21) #13
  call void @ww_mutex_unlock(ptr noundef %21) #13
  br label %if.end14

if.end14:                                         ; preds = %if.end, %entry.if.end14_crit_edge
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %22 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp = icmp eq i32 %23, 0
  br i1 %cmp, label %if.then15, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then15:                                        ; preds = %if.end14
  %mec_fw = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 17
  %24 = ptrtoint ptr %mec_fw to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mec_fw, align 4
  %data = getelementptr inbounds %struct.firmware, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %data, align 4
  %ucode_array_offset_bytes = getelementptr inbounds %struct.common_firmware_header, ptr %27, i32 0, i32 8
  %28 = ptrtoint ptr %ucode_array_offset_bytes to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ucode_array_offset_bytes, align 4
  %ucode_size_bytes = getelementptr inbounds %struct.common_firmware_header, ptr %27, i32 0, i32 7
  %30 = ptrtoint ptr %ucode_size_bytes to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ucode_size_bytes, align 4
  %mec_fw_obj = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 2
  %mec_fw_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 3
  %call27 = call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %31, i32 noundef 4096, i32 noundef 2, ptr noundef %mec_fw_obj, ptr noundef %mec_fw_gpu_addr, ptr noundef nonnull %fw) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end34, label %do.end32

do.end32:                                         ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %33, ptr noundef nonnull @.str.73, i32 noundef %call27) #16
  call void @amdgpu_bo_free_kernel(ptr noundef %mec, ptr noundef null, ptr noundef null) #13
  call void @amdgpu_bo_free_kernel(ptr noundef %mec_fw_obj, ptr noundef null, ptr noundef null) #13
  br label %cleanup

if.end34:                                         ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #15
  %34 = call i32 @llvm.bswap.i32(i32 %31)
  %35 = call i32 @llvm.bswap.i32(i32 %29)
  %add.ptr = getelementptr i8, ptr %27, i32 %35
  %36 = ptrtoint ptr %fw to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %fw, align 4
  %38 = call ptr @memcpy(ptr %37, ptr %add.ptr, i32 %34)
  %39 = ptrtoint ptr %mec_fw_obj to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %mec_fw_obj, align 8
  call void @amdgpu_bo_kunmap(ptr noundef %40) #13
  %41 = ptrtoint ptr %mec_fw_obj to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %mec_fw_obj, align 8
  %tbo.i78 = getelementptr inbounds %struct.amdgpu_bo, ptr %42, i32 0, i32 4
  %bdev.i.i.i79 = getelementptr inbounds %struct.amdgpu_bo, ptr %42, i32 0, i32 4, i32 1
  %43 = ptrtoint ptr %bdev.i.i.i79 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %bdev.i.i.i79, align 8
  %lru_lock.i.i.i80 = getelementptr inbounds %struct.ttm_device, ptr %44, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i80) #13
  %resource.i.i.i81 = getelementptr inbounds %struct.amdgpu_bo, ptr %42, i32 0, i32 4, i32 6
  %45 = ptrtoint ptr %resource.i.i.i81 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %resource.i.i.i81, align 4
  call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i78, ptr noundef %46, ptr noundef null) #13
  %47 = ptrtoint ptr %bdev.i.i.i79 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %bdev.i.i.i79, align 8
  %lru_lock2.i.i.i82 = getelementptr inbounds %struct.ttm_device, ptr %48, i32 0, i32 6
  call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i82) #13
  %resv.i.i83 = getelementptr inbounds %struct.amdgpu_bo, ptr %42, i32 0, i32 4, i32 0, i32 9
  %49 = ptrtoint ptr %resv.i.i83 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %resv.i.i83, align 8
  call void @dma_resv_reset_shared_max(ptr noundef %50) #13
  call void @ww_mutex_unlock(ptr noundef %50) #13
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %do.end32, %if.end14.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %call, %do.end ], [ %call27, %do.end32 ], [ 0, %if.end34 ], [ 0, %if.end14.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fw) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %hpd) #13
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_gfx_is_me_queue_enabled(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_gfx_is_mec_queue_enabled(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_compute_ring_init(ptr noundef %adev, i32 noundef %ring_id, i32 noundef %mec, i32 noundef %pipe, i32 noundef %queue) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id
  %add = add i32 %mec, 1
  %me = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 16
  %0 = ptrtoint ptr %me to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %add, ptr %me, align 8
  %pipe1 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 17
  %1 = ptrtoint ptr %pipe1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %pipe, ptr %pipe1, align 4
  %queue2 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 18
  %2 = ptrtoint ptr %queue2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %queue, ptr %queue2, align 8
  %ring_obj = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 4
  %3 = ptrtoint ptr %ring_obj to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %ring_obj, align 8
  %use_doorbell = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 24
  %4 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %use_doorbell, align 4
  %mec_ring0 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 144, i32 1
  %5 = ptrtoint ptr %mec_ring0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mec_ring0, align 4
  %add3 = add i32 %6, %ring_id
  %shl = shl i32 %add3, 1
  %doorbell_index4 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 23
  %7 = ptrtoint ptr %doorbell_index4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %shl, ptr %doorbell_index4, align 8
  %hpd_eop_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 1
  %8 = ptrtoint ptr %hpd_eop_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %hpd_eop_gpu_addr, align 8
  %mul = shl i32 %ring_id, 11
  %conv = sext i32 %mul to i64
  %add7 = add i64 %9, %conv
  %eop_gpu_addr = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 22
  %10 = ptrtoint ptr %eop_gpu_addr to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %add7, ptr %eop_gpu_addr, align 8
  %name = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 29
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %name, ptr noundef nonnull @.str.76, i32 noundef %add, i32 noundef %pipe, i32 noundef %queue)
  %11 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %me, align 8
  %sub = add i32 %12, -1
  %num_pipe_per_mec = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 5
  %13 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_pipe_per_mec, align 4
  %mul14 = mul i32 %sub, %14
  %add15 = add i32 %mul14, 2
  %15 = ptrtoint ptr %pipe1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pipe1, align 4
  %add17 = add i32 %add15, %16
  %call18 = tail call zeroext i1 @amdgpu_gfx_is_high_priority_compute_queue(ptr noundef %adev, ptr noundef %arrayidx) #13
  %cond = select i1 %call18, i32 2, i32 1
  %eop_irq = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 40
  %call21 = tail call i32 @amdgpu_ring_init(ptr noundef %adev, ptr noundef %arrayidx, i32 noundef 1024, ptr noundef %eop_irq, i32 noundef %add17, i32 noundef %cond, ptr noundef null) #13
  ret i32 %call21
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_kiq_init(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_kiq_init_ring(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_mqd_sw_init(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_rlc_backdoor_autoload_buffer_init(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %size_bytes.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 10, i32 2
  %0 = ptrtoint ptr %size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size_bytes.i.i, align 8
  %rlc_toc_bo.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 42
  %rlc_toc_gpu_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 43
  %rlc_toc_buf.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 44
  %call.i.i = tail call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %1, i32 noundef 4096, i32 noundef 2, ptr noundef %rlc_toc_bo.i.i, ptr noundef %rlc_toc_gpu_addr.i.i, ptr noundef %rlc_toc_buf.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end.i

if.end.i.i:                                       ; preds = %entry
  %2 = ptrtoint ptr %rlc_toc_buf.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rlc_toc_buf.i.i, align 8
  %start_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 10, i32 3
  %4 = ptrtoint ptr %start_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %start_addr.i.i, align 4
  %6 = ptrtoint ptr %size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %size_bytes.i.i, align 8
  %8 = call ptr @memcpy(ptr %3, ptr %5, i32 %7)
  %9 = load ptr, ptr %rlc_toc_buf.i.i, align 8
  %tobool16.not75.i.i = icmp eq ptr %9, null
  br i1 %tobool16.not75.i.i, label %if.end.i.i.for.body.i.preheader_crit_edge, label %if.end.i.i.land.lhs.true.i.i_crit_edge

if.end.i.i.land.lhs.true.i.i_crit_edge:           ; preds = %if.end.i.i
  br label %land.lhs.true.i.i

if.end.i.i.for.body.i.preheader_crit_edge:        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %if.end31.i.i.for.body.i.preheader_crit_edge, %land.lhs.true.i.i.for.body.i.preheader_crit_edge, %if.end.i.i.for.body.i.preheader_crit_edge
  br label %for.body.i

land.lhs.true.i.i:                                ; preds = %if.end31.i.i.land.lhs.true.i.i_crit_edge, %if.end.i.i.land.lhs.true.i.i_crit_edge
  %rlc_toc.076.i.i = phi ptr [ %incdec.ptr.i.i, %if.end31.i.i.land.lhs.true.i.i_crit_edge ], [ %9, %if.end.i.i.land.lhs.true.i.i_crit_edge ]
  %10 = ptrtoint ptr %rlc_toc.076.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %bf.load.i.i = load i32, ptr %rlc_toc.076.i.i, align 4
  %bf.clear.i.i = and i32 %bf.load.i.i, 127
  %11 = add nsw i32 %bf.clear.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 37, i32 %11)
  %12 = icmp ult i32 %11, 37
  br i1 %12, label %while.body.i.i, label %land.lhs.true.i.i.for.body.i.preheader_crit_edge

land.lhs.true.i.i.for.body.i.preheader_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.preheader

while.body.i.i:                                   ; preds = %land.lhs.true.i.i
  %13 = add nsw i32 %bf.clear.i.i, -19
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %13)
  %14 = icmp ult i32 %13, 5
  br i1 %14, label %if.then27.i.i, label %while.body.i.i.if.end31.i.i_crit_edge

while.body.i.i.if.end31.i.i_crit_edge:            ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end31.i.i

if.then27.i.i:                                    ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %15 = shl i32 %bf.load.i.i, 2
  %add.i.i = and i32 %15, -512
  %bf.value.i.i = add i32 %add.i.i, 524160
  %bf.shl.i.i = and i32 %bf.value.i.i, -524288
  %bf.set.i.i = or i32 %bf.shl.i.i, %bf.clear.i.i
  %16 = ptrtoint ptr %rlc_toc.076.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %bf.set.i.i, ptr %rlc_toc.076.i.i, align 4
  br label %if.end31.i.i

if.end31.i.i:                                     ; preds = %if.then27.i.i, %while.body.i.i.if.end31.i.i_crit_edge
  %17 = ptrtoint ptr %rlc_toc.076.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %bf.load32.i.i = load i32, ptr %rlc_toc.076.i.i, align 4
  %bf.clear33.i.i = and i32 %bf.load32.i.i, 127
  %arrayidx.i.i = getelementptr [38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 %bf.clear33.i.i
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %bf.clear33.i.i, ptr %arrayidx.i.i, align 4
  %19 = lshr i32 %bf.load32.i.i, 5
  %mul38.i.i = and i32 %19, 134217724
  %offset.i.i = getelementptr [38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 %bf.clear33.i.i, i32 1
  %20 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %mul38.i.i, ptr %offset.i.i, align 4
  %21 = getelementptr inbounds %struct._RLC_TABLE_OF_CONTENT, ptr %rlc_toc.076.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %bf.load42.i.i = load i32, ptr %21, align 4
  %bf.clear43.i.i = shl i32 %bf.load42.i.i, 2
  %mul44.i.i = and i32 %bf.clear43.i.i, 1048572
  %size.i.i = getelementptr [38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 %bf.clear33.i.i, i32 2
  %23 = ptrtoint ptr %size.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %mul44.i.i, ptr %size.i.i, align 4
  %incdec.ptr.i.i = getelementptr %struct._RLC_TABLE_OF_CONTENT, ptr %rlc_toc.076.i.i, i32 1
  %tobool16.not.i.i = icmp eq ptr %incdec.ptr.i.i, null
  br i1 %tobool16.not.i.i, label %if.end31.i.i.for.body.i.preheader_crit_edge, label %if.end31.i.i.land.lhs.true.i.i_crit_edge

if.end31.i.i.land.lhs.true.i.i_crit_edge:         ; preds = %if.end31.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %land.lhs.true.i.i

if.end31.i.i.for.body.i.preheader_crit_edge:      ; preds = %if.end31.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.preheader

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %24 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %25, ptr noundef nonnull @.str.81, i32 noundef %call.i.i) #16
  %26 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %27, ptr noundef nonnull @.str.79) #16
  br label %gfx_v10_0_calc_toc_total_size.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.i.preheader
  %id.015.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 1, %for.body.i.preheader ]
  %total_size.014.i = phi i32 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %size.i = getelementptr [38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 %id.015.i, i32 2
  %28 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %size.i, align 4
  %add.i = add i32 %29, %total_size.014.i
  %inc.i = add nuw nsw i32 %id.015.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 38
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %30 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 37, i32 1), align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %30)
  %cmp1.i = icmp ult i32 %add.i, %30
  br i1 %cmp1.i, label %if.then2.i, label %for.end.i.gfx_v10_0_calc_toc_total_size.exit_crit_edge

for.end.i.gfx_v10_0_calc_toc_total_size.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_calc_toc_total_size.exit

if.then2.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %31 = load i32, ptr getelementptr inbounds ([38 x %struct.anon.113], ptr @rlc_autoload_info, i32 0, i32 37, i32 2), align 4
  %add3.i = add i32 %31, %30
  br label %gfx_v10_0_calc_toc_total_size.exit

gfx_v10_0_calc_toc_total_size.exit:               ; preds = %if.then2.i, %for.end.i.gfx_v10_0_calc_toc_total_size.exit_crit_edge, %do.end.i
  %retval.0.i = phi i32 [ 0, %do.end.i ], [ %add3.i, %if.then2.i ], [ %add.i, %for.end.i.gfx_v10_0_calc_toc_total_size.exit_crit_edge ]
  %rlc_autoload_bo = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 39
  %rlc_autoload_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 40
  %rlc_autoload_ptr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 41
  %call5 = tail call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %retval.0.i, i32 noundef 4096, i32 noundef 2, ptr noundef %rlc_autoload_bo, ptr noundef %rlc_autoload_gpu_addr, ptr noundef %rlc_autoload_ptr) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %gfx_v10_0_calc_toc_total_size.exit.cleanup_crit_edge, label %do.end

gfx_v10_0_calc_toc_total_size.exit.cleanup_crit_edge: ; preds = %gfx_v10_0_calc_toc_total_size.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.end:                                           ; preds = %gfx_v10_0_calc_toc_total_size.exit
  call void @__sanitizer_cov_trace_pc() #15
  %32 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %33, ptr noundef nonnull @.str.77, i32 noundef %call5) #16
  br label %cleanup

cleanup:                                          ; preds = %do.end, %gfx_v10_0_calc_toc_total_size.exit.cleanup_crit_edge
  ret i32 %call5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_gpu_early_init(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 49
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @gfx_v10_0_gfx_funcs, ptr %funcs, align 4
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.143)
  switch i32 %2, label %do.body [
    i32 655626, label %entry.sw.bb_crit_edge
    i32 655617, label %entry.sw.bb_crit_edge216
    i32 655618, label %entry.sw.bb_crit_edge217
    i32 656128, label %entry.sw.bb32_crit_edge
    i32 656130, label %entry.sw.bb32_crit_edge218
    i32 656129, label %entry.sw.bb32_crit_edge219
    i32 656132, label %entry.sw.bb32_crit_edge220
    i32 656133, label %entry.sw.bb32_crit_edge221
    i32 656131, label %entry.sw.bb32_crit_edge222
    i32 655619, label %sw.bb86
  ]

entry.sw.bb32_crit_edge222:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

entry.sw.bb32_crit_edge221:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

entry.sw.bb32_crit_edge220:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

entry.sw.bb32_crit_edge219:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

entry.sw.bb32_crit_edge218:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

entry.sw.bb32_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb32

entry.sw.bb_crit_edge217:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge216:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge216, %entry.sw.bb_crit_edge217
  %max_hw_contexts = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %4 = ptrtoint ptr %max_hw_contexts to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 8, ptr %max_hw_contexts, align 8
  %sc_prim_fifo_size_frontend = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %5 = ptrtoint ptr %sc_prim_fifo_size_frontend to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 32, ptr %sc_prim_fifo_size_frontend, align 4
  %sc_prim_fifo_size_backend = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %6 = ptrtoint ptr %sc_prim_fifo_size_backend to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 256, ptr %sc_prim_fifo_size_backend, align 8
  %sc_hiz_tile_fifo_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %7 = ptrtoint ptr %sc_hiz_tile_fifo_size to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %sc_hiz_tile_fifo_size, align 4
  %sc_earlyz_tile_fifo_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %8 = ptrtoint ptr %sc_earlyz_tile_fifo_size to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %9 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %virt, align 8
  %and = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb.cond.false_crit_edge, label %land.lhs.true

sw.bb.cond.false_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb
  %funcs12 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %11 = ptrtoint ptr %funcs12 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %funcs12, align 4
  %tobool13.not = icmp eq ptr %12, null
  br i1 %tobool13.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true14

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true14:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %12, i32 0, i32 13
  %13 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sriov_rreg, align 4
  %tobool18.not = icmp eq ptr %14, null
  br i1 %tobool18.not, label %land.lhs.true14.cond.false_crit_edge, label %cond.true

land.lhs.true14.cond.false_crit_edge:             ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx23 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %15 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx23, align 8
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  %add = add i32 %18, 5086
  %call = tail call i32 %14(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

cond.false:                                       ; preds = %land.lhs.true14.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb.cond.false_crit_edge
  %arrayidx27 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx27, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add30 = add i32 %22, 5086
  %call31 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add30, i32 noundef 0) #13
  br label %sw.epilog

sw.bb32:                                          ; preds = %entry.sw.bb32_crit_edge, %entry.sw.bb32_crit_edge218, %entry.sw.bb32_crit_edge219, %entry.sw.bb32_crit_edge220, %entry.sw.bb32_crit_edge221, %entry.sw.bb32_crit_edge222
  %max_hw_contexts35 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %23 = ptrtoint ptr %max_hw_contexts35 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 8, ptr %max_hw_contexts35, align 8
  %sc_prim_fifo_size_frontend38 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %24 = ptrtoint ptr %sc_prim_fifo_size_frontend38 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 32, ptr %sc_prim_fifo_size_frontend38, align 4
  %sc_prim_fifo_size_backend41 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %25 = ptrtoint ptr %sc_prim_fifo_size_backend41 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 256, ptr %sc_prim_fifo_size_backend41, align 8
  %sc_hiz_tile_fifo_size44 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %26 = ptrtoint ptr %sc_hiz_tile_fifo_size44 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %sc_hiz_tile_fifo_size44, align 4
  %sc_earlyz_tile_fifo_size47 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %27 = ptrtoint ptr %sc_earlyz_tile_fifo_size47 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size47, align 8
  %virt48 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %28 = ptrtoint ptr %virt48 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %virt48, align 8
  %and50 = and i32 %29, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50)
  %tobool51.not = icmp eq i32 %and50, 0
  br i1 %tobool51.not, label %sw.bb32.cond.false74_crit_edge, label %land.lhs.true52

sw.bb32.cond.false74_crit_edge:                   ; preds = %sw.bb32
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false74

land.lhs.true52:                                  ; preds = %sw.bb32
  %funcs55 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %30 = ptrtoint ptr %funcs55 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %funcs55, align 4
  %tobool56.not = icmp eq ptr %31, null
  br i1 %tobool56.not, label %land.lhs.true52.cond.false74_crit_edge, label %land.lhs.true57

land.lhs.true52.cond.false74_crit_edge:           ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false74

land.lhs.true57:                                  ; preds = %land.lhs.true52
  %sriov_rreg61 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %31, i32 0, i32 13
  %32 = ptrtoint ptr %sriov_rreg61 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %sriov_rreg61, align 4
  %tobool62.not = icmp eq ptr %33, null
  br i1 %tobool62.not, label %land.lhs.true57.cond.false74_crit_edge, label %cond.true63

land.lhs.true57.cond.false74_crit_edge:           ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false74

cond.true63:                                      ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx69 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %34 = ptrtoint ptr %arrayidx69 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx69, align 8
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  %add72 = add i32 %37, 5086
  %call73 = tail call i32 %33(ptr noundef %adev, i32 noundef %add72, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end81

cond.false74:                                     ; preds = %land.lhs.true57.cond.false74_crit_edge, %land.lhs.true52.cond.false74_crit_edge, %sw.bb32.cond.false74_crit_edge
  %arrayidx76 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %38 = ptrtoint ptr %arrayidx76 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx76, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %add79 = add i32 %41, 5086
  %call80 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add79, i32 noundef 0) #13
  br label %cond.end81

cond.end81:                                       ; preds = %cond.false74, %cond.true63
  %cond82 = phi i32 [ %call73, %cond.true63 ], [ %call80, %cond.false74 ]
  %and83 = lshr i32 %cond82, 8
  %shr = and i32 %and83, 7
  %shl = shl nuw nsw i32 1, %shr
  %conv = trunc i32 %shl to i8
  %num_pkrs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 6
  %42 = ptrtoint ptr %num_pkrs to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %conv, ptr %num_pkrs, align 1
  br label %sw.epilog

sw.bb86:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  %max_hw_contexts89 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %43 = ptrtoint ptr %max_hw_contexts89 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 8, ptr %max_hw_contexts89, align 8
  %sc_prim_fifo_size_frontend92 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %44 = ptrtoint ptr %sc_prim_fifo_size_frontend92 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 32, ptr %sc_prim_fifo_size_frontend92, align 4
  %sc_prim_fifo_size_backend95 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %45 = ptrtoint ptr %sc_prim_fifo_size_backend95 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 256, ptr %sc_prim_fifo_size_backend95, align 8
  %sc_hiz_tile_fifo_size98 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %46 = ptrtoint ptr %sc_hiz_tile_fifo_size98 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 48, ptr %sc_hiz_tile_fifo_size98, align 4
  %sc_earlyz_tile_fifo_size101 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %47 = ptrtoint ptr %sc_earlyz_tile_fifo_size101 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size101, align 8
  br label %sw.epilog

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4700, 0\0A.popsection", ""() #13, !srcloc !509
  unreachable

sw.epilog:                                        ; preds = %sw.bb86, %cond.end81, %cond.false, %cond.true
  %gb_addr_config.0 = phi i32 [ 1048644, %sw.bb86 ], [ %cond82, %cond.end81 ], [ %call, %cond.true ], [ %call31, %cond.false ]
  %gb_addr_config107 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 23
  %48 = ptrtoint ptr %gb_addr_config107 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %gb_addr_config.0, ptr %gb_addr_config107, align 4
  %and111 = and i32 %gb_addr_config.0, 7
  %shl113 = shl nuw nsw i32 1, %and111
  %conv114 = trunc i32 %shl113 to i8
  %gb_addr_config_fields117 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29
  %num_pipes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 1
  %49 = ptrtoint ptr %num_pipes to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %conv114, ptr %num_pipes, align 2
  %max_tile_pipes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 1
  %50 = ptrtoint ptr %max_tile_pipes to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %shl113, ptr %max_tile_pipes, align 4
  %and128 = lshr i32 %gb_addr_config.0, 6
  %shr129 = and i32 %and128, 3
  %shl130 = shl nuw nsw i32 1, %shr129
  %conv131 = trunc i32 %shl130 to i8
  %max_compress_frags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 2
  %51 = ptrtoint ptr %max_compress_frags to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %conv131, ptr %max_compress_frags, align 1
  %and138 = lshr i32 %gb_addr_config.0, 26
  %shr139 = and i32 %and138, 3
  %shl140 = shl nuw nsw i32 1, %shr139
  %conv141 = trunc i32 %shl140 to i8
  %num_rb_per_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 5
  %52 = ptrtoint ptr %num_rb_per_se to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 %conv141, ptr %num_rb_per_se, align 2
  %and148 = lshr i32 %gb_addr_config.0, 19
  %shr149 = and i32 %and148, 3
  %shl150 = shl nuw nsw i32 1, %shr149
  %conv151 = trunc i32 %shl150 to i8
  %num_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 4
  %53 = ptrtoint ptr %num_se to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %conv151, ptr %num_se, align 1
  %and158 = lshr i32 %gb_addr_config.0, 3
  %shr159 = and i32 %and158, 7
  %add160 = or i32 %shr159, 8
  %shl161 = shl nuw i32 1, %add160
  %conv162 = trunc i32 %shl161 to i16
  %54 = ptrtoint ptr %gb_addr_config_fields117 to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 %conv162, ptr %gb_addr_config_fields117, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_graphics_queue_acquire(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_firmware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ucode_validate(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_firmware(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_compute_queue_acquire(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_bo_create_reserved(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_bo_kunmap(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_bo_free_kernel(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ttm_bo_move_to_lru_tail(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_resv_reset_shared_max(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ww_mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ring_init(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_gfx_is_high_priority_compute_queue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @gfx_v10_0_get_gpu_clock_counter(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.144)
  switch i32 %1, label %do.body133 [
    i32 656129, label %entry.do.body_crit_edge
    i32 656131, label %entry.do.body_crit_edge384
  ]

entry.do.body_crit_edge384:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body

do.body:                                          ; preds = %entry.do.body_crit_edge, %entry.do.body_crit_edge384
  %3 = tail call i32 @llvm.read_register.i32(metadata !467) #13
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %6, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !510
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %7 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %virt, align 8
  %and = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body.cond.false_crit_edge, label %land.lhs.true

do.body.cond.false_crit_edge:                     ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %do.body
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %9 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %funcs, align 4
  %tobool2.not = icmp eq ptr %10, null
  br i1 %tobool2.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true3

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %10, i32 0, i32 13
  %11 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sriov_rreg, align 4
  %tobool7.not = icmp eq ptr %12, null
  br i1 %tobool7.not, label %land.lhs.true3.cond.false_crit_edge, label %cond.true

land.lhs.true3.cond.false_crit_edge:              ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx12 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %13 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx12, align 8
  %arrayidx14 = getelementptr i32, ptr %14, i32 1
  %15 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx14, align 4
  %add = add i32 %16, 37
  %call = tail call i32 %12(ptr noundef %adev, i32 noundef %add, i32 noundef 2, i32 noundef 22) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true3.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %do.body.cond.false_crit_edge
  %arrayidx16 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %17 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx16, align 8
  %arrayidx18 = getelementptr i32, ptr %18, i32 1
  %19 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx18, align 4
  %add19 = add i32 %20, 37
  %call20 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add19, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call20, %cond.false ]
  %21 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %virt, align 8
  %and23 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %cond.end.cond.false47_crit_edge, label %land.lhs.true25

cond.end.cond.false47_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false47

land.lhs.true25:                                  ; preds = %cond.end
  %funcs28 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %23 = ptrtoint ptr %funcs28 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %funcs28, align 4
  %tobool29.not = icmp eq ptr %24, null
  br i1 %tobool29.not, label %land.lhs.true25.cond.false47_crit_edge, label %land.lhs.true30

land.lhs.true25.cond.false47_crit_edge:           ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false47

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %sriov_rreg34 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %24, i32 0, i32 13
  %25 = ptrtoint ptr %sriov_rreg34 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sriov_rreg34, align 4
  %tobool35.not = icmp eq ptr %26, null
  br i1 %tobool35.not, label %land.lhs.true30.cond.false47_crit_edge, label %cond.true36

land.lhs.true30.cond.false47_crit_edge:           ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false47

cond.true36:                                      ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx42 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %27 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx42, align 8
  %arrayidx44 = getelementptr i32, ptr %28, i32 1
  %29 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %30, 38
  %call46 = tail call i32 %26(ptr noundef %adev, i32 noundef %add45, i32 noundef 2, i32 noundef 22) #13
  br label %cond.end54

cond.false47:                                     ; preds = %land.lhs.true30.cond.false47_crit_edge, %land.lhs.true25.cond.false47_crit_edge, %cond.end.cond.false47_crit_edge
  %arrayidx49 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %31 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx49, align 8
  %arrayidx51 = getelementptr i32, ptr %32, i32 1
  %33 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx51, align 4
  %add52 = add i32 %34, 38
  %call53 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add52, i32 noundef 0) #13
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false47, %cond.true36
  %cond55 = phi i32 [ %call46, %cond.true36 ], [ %call53, %cond.false47 ]
  %35 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %virt, align 8
  %and59 = and i32 %36, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %cond.end54.cond.false83_crit_edge, label %land.lhs.true61

cond.end54.cond.false83_crit_edge:                ; preds = %cond.end54
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

land.lhs.true61:                                  ; preds = %cond.end54
  %funcs64 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %37 = ptrtoint ptr %funcs64 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %funcs64, align 4
  %tobool65.not = icmp eq ptr %38, null
  br i1 %tobool65.not, label %land.lhs.true61.cond.false83_crit_edge, label %land.lhs.true66

land.lhs.true61.cond.false83_crit_edge:           ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

land.lhs.true66:                                  ; preds = %land.lhs.true61
  %sriov_rreg70 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %38, i32 0, i32 13
  %39 = ptrtoint ptr %sriov_rreg70 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sriov_rreg70, align 4
  %tobool71.not = icmp eq ptr %40, null
  br i1 %tobool71.not, label %land.lhs.true66.cond.false83_crit_edge, label %cond.true72

land.lhs.true66.cond.false83_crit_edge:           ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

cond.true72:                                      ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx78 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %41 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx78, align 8
  %arrayidx80 = getelementptr i32, ptr %42, i32 1
  %43 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx80, align 4
  %add81 = add i32 %44, 37
  %call82 = tail call i32 %40(ptr noundef %adev, i32 noundef %add81, i32 noundef 2, i32 noundef 22) #13
  br label %cond.end90

cond.false83:                                     ; preds = %land.lhs.true66.cond.false83_crit_edge, %land.lhs.true61.cond.false83_crit_edge, %cond.end54.cond.false83_crit_edge
  %arrayidx85 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %45 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx85, align 8
  %arrayidx87 = getelementptr i32, ptr %46, i32 1
  %47 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx87, align 4
  %add88 = add i32 %48, 37
  %call89 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add88, i32 noundef 0) #13
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false83, %cond.true72
  %cond91 = phi i32 [ %call82, %cond.true72 ], [ %call89, %cond.false83 ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond91, i32 %cond)
  %cmp.not = icmp eq i32 %cond91, %cond
  br i1 %cmp.not, label %cond.end90.do.body130_crit_edge, label %if.then

cond.end90.do.body130_crit_edge:                  ; preds = %cond.end90
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body130

if.then:                                          ; preds = %cond.end90
  %49 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %virt, align 8
  %and96 = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96)
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %if.then.cond.false120_crit_edge, label %land.lhs.true98

if.then.cond.false120_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false120

land.lhs.true98:                                  ; preds = %if.then
  %funcs101 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %51 = ptrtoint ptr %funcs101 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %funcs101, align 4
  %tobool102.not = icmp eq ptr %52, null
  br i1 %tobool102.not, label %land.lhs.true98.cond.false120_crit_edge, label %land.lhs.true103

land.lhs.true98.cond.false120_crit_edge:          ; preds = %land.lhs.true98
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false120

land.lhs.true103:                                 ; preds = %land.lhs.true98
  %sriov_rreg107 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %52, i32 0, i32 13
  %53 = ptrtoint ptr %sriov_rreg107 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %sriov_rreg107, align 4
  %tobool108.not = icmp eq ptr %54, null
  br i1 %tobool108.not, label %land.lhs.true103.cond.false120_crit_edge, label %cond.true109

land.lhs.true103.cond.false120_crit_edge:         ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false120

cond.true109:                                     ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx115 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %55 = ptrtoint ptr %arrayidx115 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx115, align 8
  %arrayidx117 = getelementptr i32, ptr %56, i32 1
  %57 = ptrtoint ptr %arrayidx117 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx117, align 4
  %add118 = add i32 %58, 38
  %call119 = tail call i32 %54(ptr noundef %adev, i32 noundef %add118, i32 noundef 2, i32 noundef 22) #13
  br label %do.body130

cond.false120:                                    ; preds = %land.lhs.true103.cond.false120_crit_edge, %land.lhs.true98.cond.false120_crit_edge, %if.then.cond.false120_crit_edge
  %arrayidx122 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %59 = ptrtoint ptr %arrayidx122 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx122, align 8
  %arrayidx124 = getelementptr i32, ptr %60, i32 1
  %61 = ptrtoint ptr %arrayidx124 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx124, align 4
  %add125 = add i32 %62, 38
  %call126 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add125, i32 noundef 0) #13
  br label %do.body130

do.body130:                                       ; preds = %cond.false120, %cond.true109, %cond.end90.do.body130_crit_edge
  %clock_lo.0.in = phi i32 [ %cond55, %cond.end90.do.body130_crit_edge ], [ %call119, %cond.true109 ], [ %call126, %cond.false120 ]
  %clock_hi.0.in = phi i32 [ %cond, %cond.end90.do.body130_crit_edge ], [ %cond91, %cond.true109 ], [ %cond91, %cond.false120 ]
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !511
  br label %sw.epilog

do.body133:                                       ; preds = %entry
  %63 = tail call i32 @llvm.read_register.i32(metadata !467) #13
  %and.i.i.i377 = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i377 to ptr
  %preempt_count.i.i378 = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %preempt_count.i.i378 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %preempt_count.i.i378, align 4
  %add.i379 = add i32 %66, 1
  store volatile i32 %add.i379, ptr %preempt_count.i.i378, align 4
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !512
  %virt136 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %67 = ptrtoint ptr %virt136 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %virt136, align 8
  %and138 = and i32 %68, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and138)
  %tobool139.not = icmp eq i32 %and138, 0
  br i1 %tobool139.not, label %do.body133.cond.false162_crit_edge, label %land.lhs.true140

do.body133.cond.false162_crit_edge:               ; preds = %do.body133
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false162

land.lhs.true140:                                 ; preds = %do.body133
  %funcs143 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %69 = ptrtoint ptr %funcs143 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %funcs143, align 4
  %tobool144.not = icmp eq ptr %70, null
  br i1 %tobool144.not, label %land.lhs.true140.cond.false162_crit_edge, label %land.lhs.true145

land.lhs.true140.cond.false162_crit_edge:         ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false162

land.lhs.true145:                                 ; preds = %land.lhs.true140
  %sriov_rreg149 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %70, i32 0, i32 13
  %71 = ptrtoint ptr %sriov_rreg149 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sriov_rreg149, align 4
  %tobool150.not = icmp eq ptr %72, null
  br i1 %tobool150.not, label %land.lhs.true145.cond.false162_crit_edge, label %cond.true151

land.lhs.true145.cond.false162_crit_edge:         ; preds = %land.lhs.true145
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false162

cond.true151:                                     ; preds = %land.lhs.true145
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx157 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %73 = ptrtoint ptr %arrayidx157 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx157, align 8
  %arrayidx159 = getelementptr i32, ptr %74, i32 1
  %75 = ptrtoint ptr %arrayidx159 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx159, align 4
  %add160 = add i32 %76, 258
  %call161 = tail call i32 %72(ptr noundef %adev, i32 noundef %add160, i32 noundef 2, i32 noundef 22) #13
  br label %cond.end169

cond.false162:                                    ; preds = %land.lhs.true145.cond.false162_crit_edge, %land.lhs.true140.cond.false162_crit_edge, %do.body133.cond.false162_crit_edge
  %arrayidx164 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %77 = ptrtoint ptr %arrayidx164 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx164, align 8
  %arrayidx166 = getelementptr i32, ptr %78, i32 1
  %79 = ptrtoint ptr %arrayidx166 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx166, align 4
  %add167 = add i32 %80, 258
  %call168 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add167, i32 noundef 0) #13
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false162, %cond.true151
  %cond170 = phi i32 [ %call161, %cond.true151 ], [ %call168, %cond.false162 ]
  %81 = ptrtoint ptr %virt136 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %virt136, align 8
  %and174 = and i32 %82, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and174)
  %tobool175.not = icmp eq i32 %and174, 0
  br i1 %tobool175.not, label %cond.end169.cond.false198_crit_edge, label %land.lhs.true176

cond.end169.cond.false198_crit_edge:              ; preds = %cond.end169
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false198

land.lhs.true176:                                 ; preds = %cond.end169
  %funcs179 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %83 = ptrtoint ptr %funcs179 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %funcs179, align 4
  %tobool180.not = icmp eq ptr %84, null
  br i1 %tobool180.not, label %land.lhs.true176.cond.false198_crit_edge, label %land.lhs.true181

land.lhs.true176.cond.false198_crit_edge:         ; preds = %land.lhs.true176
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false198

land.lhs.true181:                                 ; preds = %land.lhs.true176
  %sriov_rreg185 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %84, i32 0, i32 13
  %85 = ptrtoint ptr %sriov_rreg185 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %sriov_rreg185, align 4
  %tobool186.not = icmp eq ptr %86, null
  br i1 %tobool186.not, label %land.lhs.true181.cond.false198_crit_edge, label %cond.true187

land.lhs.true181.cond.false198_crit_edge:         ; preds = %land.lhs.true181
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false198

cond.true187:                                     ; preds = %land.lhs.true181
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx193 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %87 = ptrtoint ptr %arrayidx193 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %arrayidx193, align 8
  %arrayidx195 = getelementptr i32, ptr %88, i32 1
  %89 = ptrtoint ptr %arrayidx195 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %arrayidx195, align 4
  %add196 = add i32 %90, 259
  %call197 = tail call i32 %86(ptr noundef %adev, i32 noundef %add196, i32 noundef 2, i32 noundef 22) #13
  br label %cond.end205

cond.false198:                                    ; preds = %land.lhs.true181.cond.false198_crit_edge, %land.lhs.true176.cond.false198_crit_edge, %cond.end169.cond.false198_crit_edge
  %arrayidx200 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %91 = ptrtoint ptr %arrayidx200 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx200, align 8
  %arrayidx202 = getelementptr i32, ptr %92, i32 1
  %93 = ptrtoint ptr %arrayidx202 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %arrayidx202, align 4
  %add203 = add i32 %94, 259
  %call204 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add203, i32 noundef 0) #13
  br label %cond.end205

cond.end205:                                      ; preds = %cond.false198, %cond.true187
  %cond206 = phi i32 [ %call197, %cond.true187 ], [ %call204, %cond.false198 ]
  %95 = ptrtoint ptr %virt136 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %virt136, align 8
  %and210 = and i32 %96, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and210)
  %tobool211.not = icmp eq i32 %and210, 0
  br i1 %tobool211.not, label %cond.end205.cond.false234_crit_edge, label %land.lhs.true212

cond.end205.cond.false234_crit_edge:              ; preds = %cond.end205
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false234

land.lhs.true212:                                 ; preds = %cond.end205
  %funcs215 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %97 = ptrtoint ptr %funcs215 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %funcs215, align 4
  %tobool216.not = icmp eq ptr %98, null
  br i1 %tobool216.not, label %land.lhs.true212.cond.false234_crit_edge, label %land.lhs.true217

land.lhs.true212.cond.false234_crit_edge:         ; preds = %land.lhs.true212
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false234

land.lhs.true217:                                 ; preds = %land.lhs.true212
  %sriov_rreg221 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %98, i32 0, i32 13
  %99 = ptrtoint ptr %sriov_rreg221 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %sriov_rreg221, align 4
  %tobool222.not = icmp eq ptr %100, null
  br i1 %tobool222.not, label %land.lhs.true217.cond.false234_crit_edge, label %cond.true223

land.lhs.true217.cond.false234_crit_edge:         ; preds = %land.lhs.true217
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false234

cond.true223:                                     ; preds = %land.lhs.true217
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx229 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %101 = ptrtoint ptr %arrayidx229 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx229, align 8
  %arrayidx231 = getelementptr i32, ptr %102, i32 1
  %103 = ptrtoint ptr %arrayidx231 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %arrayidx231, align 4
  %add232 = add i32 %104, 258
  %call233 = tail call i32 %100(ptr noundef %adev, i32 noundef %add232, i32 noundef 2, i32 noundef 22) #13
  br label %cond.end241

cond.false234:                                    ; preds = %land.lhs.true217.cond.false234_crit_edge, %land.lhs.true212.cond.false234_crit_edge, %cond.end205.cond.false234_crit_edge
  %arrayidx236 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %105 = ptrtoint ptr %arrayidx236 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %arrayidx236, align 8
  %arrayidx238 = getelementptr i32, ptr %106, i32 1
  %107 = ptrtoint ptr %arrayidx238 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %arrayidx238, align 4
  %add239 = add i32 %108, 258
  %call240 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add239, i32 noundef 0) #13
  br label %cond.end241

cond.end241:                                      ; preds = %cond.false234, %cond.true223
  %cond242 = phi i32 [ %call233, %cond.true223 ], [ %call240, %cond.false234 ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond242, i32 %cond170)
  %cmp244.not = icmp eq i32 %cond242, %cond170
  br i1 %cmp244.not, label %cond.end241.do.body284_crit_edge, label %if.then246

cond.end241.do.body284_crit_edge:                 ; preds = %cond.end241
  call void @__sanitizer_cov_trace_pc() #15
  br label %do.body284

if.then246:                                       ; preds = %cond.end241
  %109 = ptrtoint ptr %virt136 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %virt136, align 8
  %and249 = and i32 %110, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and249)
  %tobool250.not = icmp eq i32 %and249, 0
  br i1 %tobool250.not, label %if.then246.cond.false273_crit_edge, label %land.lhs.true251

if.then246.cond.false273_crit_edge:               ; preds = %if.then246
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false273

land.lhs.true251:                                 ; preds = %if.then246
  %funcs254 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %111 = ptrtoint ptr %funcs254 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %funcs254, align 4
  %tobool255.not = icmp eq ptr %112, null
  br i1 %tobool255.not, label %land.lhs.true251.cond.false273_crit_edge, label %land.lhs.true256

land.lhs.true251.cond.false273_crit_edge:         ; preds = %land.lhs.true251
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false273

land.lhs.true256:                                 ; preds = %land.lhs.true251
  %sriov_rreg260 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %112, i32 0, i32 13
  %113 = ptrtoint ptr %sriov_rreg260 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %sriov_rreg260, align 4
  %tobool261.not = icmp eq ptr %114, null
  br i1 %tobool261.not, label %land.lhs.true256.cond.false273_crit_edge, label %cond.true262

land.lhs.true256.cond.false273_crit_edge:         ; preds = %land.lhs.true256
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false273

cond.true262:                                     ; preds = %land.lhs.true256
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx268 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %115 = ptrtoint ptr %arrayidx268 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %arrayidx268, align 8
  %arrayidx270 = getelementptr i32, ptr %116, i32 1
  %117 = ptrtoint ptr %arrayidx270 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx270, align 4
  %add271 = add i32 %118, 259
  %call272 = tail call i32 %114(ptr noundef %adev, i32 noundef %add271, i32 noundef 2, i32 noundef 22) #13
  br label %do.body284

cond.false273:                                    ; preds = %land.lhs.true256.cond.false273_crit_edge, %land.lhs.true251.cond.false273_crit_edge, %if.then246.cond.false273_crit_edge
  %arrayidx275 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %119 = ptrtoint ptr %arrayidx275 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %arrayidx275, align 8
  %arrayidx277 = getelementptr i32, ptr %120, i32 1
  %121 = ptrtoint ptr %arrayidx277 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %arrayidx277, align 4
  %add278 = add i32 %122, 259
  %call279 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add278, i32 noundef 0) #13
  br label %do.body284

do.body284:                                       ; preds = %cond.false273, %cond.true262, %cond.end241.do.body284_crit_edge
  %clock_lo.1.in = phi i32 [ %cond206, %cond.end241.do.body284_crit_edge ], [ %call272, %cond.true262 ], [ %call279, %cond.false273 ]
  %clock_hi.1.in = phi i32 [ %cond170, %cond.end241.do.body284_crit_edge ], [ %cond242, %cond.true262 ], [ %cond242, %cond.false273 ]
  tail call void asm sideeffect "", "~{memory}"() #13, !srcloc !513
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.body284, %do.body130
  %clock_hi.1.sink.in = phi i32 [ %clock_hi.1.in, %do.body284 ], [ %clock_hi.0.in, %do.body130 ]
  %clock_lo.1.sink.in = phi i32 [ %clock_lo.1.in, %do.body284 ], [ %clock_lo.0.in, %do.body130 ]
  %clock_lo.1.sink = zext i32 %clock_lo.1.sink.in to i64
  %clock_hi.1.sink = zext i32 %clock_hi.1.sink.in to i64
  %123 = tail call i32 @llvm.read_register.i32(metadata !467) #13
  %and.i.i.i380 = and i32 %123, -16384
  %124 = inttoptr i32 %and.i.i.i380 to ptr
  %preempt_count.i.i381 = getelementptr inbounds %struct.thread_info, ptr %124, i32 0, i32 1
  %125 = ptrtoint ptr %preempt_count.i.i381 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile i32, ptr %preempt_count.i.i381, align 4
  %sub.i382 = add i32 %126, -1
  store volatile i32 %sub.i382, ptr %preempt_count.i.i381, align 4
  %shl287 = shl nuw i64 %clock_hi.1.sink, 32
  %or288 = or i64 %shl287, %clock_lo.1.sink
  ret i64 %or288
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_select_se_sh(ptr noundef %adev, i32 noundef %se_num, i32 noundef %sh_num, i32 noundef %instance) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %instance)
  %cmp = icmp eq i32 %instance, -1
  %and = and i32 %instance, 255
  %data.0 = select i1 %cmp, i32 1073741824, i32 %and
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %se_num)
  %cmp1 = icmp eq i32 %se_num, -1
  %shl7 = shl i32 %se_num, 16
  %and8 = and i32 %shl7, 16711680
  %data.1.v = select i1 %cmp1, i32 -2147483648, i32 %and8
  %data.1 = or i32 %data.0, %data.1.v
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sh_num)
  %cmp11 = icmp eq i32 %sh_num, -1
  %shl17 = shl i32 %sh_num, 8
  %and18 = and i32 %shl17, 65280
  %data.2.v = select i1 %cmp11, i32 536870912, i32 %and18
  %data.2 = or i32 %data.1, %data.2.v
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and21 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool.not = icmp eq i32 %and21, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool22.not = icmp eq ptr %3, null
  br i1 %tobool22.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true23

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true23:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool27.not = icmp eq ptr %5, null
  br i1 %tobool27.not, label %land.lhs.true23.cond.false_crit_edge, label %cond.true

land.lhs.true23.cond.false_crit_edge:             ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx33 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx33, align 4
  %add = add i32 %9, 8704
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %data.2, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true23.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx35 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx35, align 8
  %arrayidx37 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx37, align 4
  %add38 = add i32 %13, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38, i32 noundef %data.2, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_read_wave_data(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, ptr nocapture noundef writeonly %dst, ptr noundef %no_fields) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %simd)
  %cmp.not = icmp eq i32 %simd, 0
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %do.end, !prof !481

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 4583, i32 noundef 9, ptr noundef null) #13
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %0 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_fields, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %no_fields, align 4
  %arrayidx = getelementptr i32, ptr %dst, i32 %1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2, ptr %arrayidx, align 4
  %call = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 258)
  %3 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %no_fields, align 4
  %inc19 = add i32 %4, 1
  store i32 %inc19, ptr %no_fields, align 4
  %arrayidx20 = getelementptr i32, ptr %dst, i32 %4
  %5 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %call, ptr %arrayidx20, align 4
  %call21 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 264)
  %6 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %no_fields, align 4
  %inc22 = add i32 %7, 1
  store i32 %inc22, ptr %no_fields, align 4
  %arrayidx23 = getelementptr i32, ptr %dst, i32 %7
  %8 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call21, ptr %arrayidx23, align 4
  %call24 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 265)
  %9 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %no_fields, align 4
  %inc25 = add i32 %10, 1
  store i32 %inc25, ptr %no_fields, align 4
  %arrayidx26 = getelementptr i32, ptr %dst, i32 %10
  %11 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call24, ptr %arrayidx26, align 4
  %call27 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 638)
  %12 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %no_fields, align 4
  %inc28 = add i32 %13, 1
  store i32 %inc28, ptr %no_fields, align 4
  %arrayidx29 = getelementptr i32, ptr %dst, i32 %13
  %14 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call27, ptr %arrayidx29, align 4
  %call30 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 639)
  %15 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %no_fields, align 4
  %inc31 = add i32 %16, 1
  store i32 %inc31, ptr %no_fields, align 4
  %arrayidx32 = getelementptr i32, ptr %dst, i32 %16
  %17 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %call30, ptr %arrayidx32, align 4
  %call33 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 279)
  %18 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %no_fields, align 4
  %inc34 = add i32 %19, 1
  store i32 %inc34, ptr %no_fields, align 4
  %arrayidx35 = getelementptr i32, ptr %dst, i32 %19
  %20 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call33, ptr %arrayidx35, align 4
  %call36 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 280)
  %21 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %no_fields, align 4
  %inc37 = add i32 %22, 1
  store i32 %inc37, ptr %no_fields, align 4
  %arrayidx38 = getelementptr i32, ptr %dst, i32 %22
  %23 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %call36, ptr %arrayidx38, align 4
  %call39 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 266)
  %24 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %no_fields, align 4
  %inc40 = add i32 %25, 1
  store i32 %inc40, ptr %no_fields, align 4
  %arrayidx41 = getelementptr i32, ptr %dst, i32 %25
  %26 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %call39, ptr %arrayidx41, align 4
  %call42 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 261)
  %27 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %no_fields, align 4
  %inc43 = add i32 %28, 1
  store i32 %inc43, ptr %no_fields, align 4
  %arrayidx44 = getelementptr i32, ptr %dst, i32 %28
  %29 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %call42, ptr %arrayidx44, align 4
  %call45 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 262)
  %30 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %no_fields, align 4
  %inc46 = add i32 %31, 1
  store i32 %inc46, ptr %no_fields, align 4
  %arrayidx47 = getelementptr i32, ptr %dst, i32 %31
  %32 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %call45, ptr %arrayidx47, align 4
  %call48 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 259)
  %33 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %no_fields, align 4
  %inc49 = add i32 %34, 1
  store i32 %inc49, ptr %no_fields, align 4
  %arrayidx50 = getelementptr i32, ptr %dst, i32 %34
  %35 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %call48, ptr %arrayidx50, align 4
  %call51 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 263)
  %36 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %no_fields, align 4
  %inc52 = add i32 %37, 1
  store i32 %inc52, ptr %no_fields, align 4
  %arrayidx53 = getelementptr i32, ptr %dst, i32 %37
  %38 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %call51, ptr %arrayidx53, align 4
  %call54 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 284)
  %39 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %no_fields, align 4
  %inc55 = add i32 %40, 1
  store i32 %inc55, ptr %no_fields, align 4
  %arrayidx56 = getelementptr i32, ptr %dst, i32 %40
  %41 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %call54, ptr %arrayidx56, align 4
  %call57 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 269)
  %42 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %no_fields, align 4
  %inc58 = add i32 %43, 1
  store i32 %inc58, ptr %no_fields, align 4
  %arrayidx59 = getelementptr i32, ptr %dst, i32 %43
  %44 = ptrtoint ptr %arrayidx59 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %call57, ptr %arrayidx59, align 4
  %call60 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 636)
  %45 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %no_fields, align 4
  %inc61 = add i32 %46, 1
  store i32 %inc61, ptr %no_fields, align 4
  %arrayidx62 = getelementptr i32, ptr %dst, i32 %46
  %47 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %call60, ptr %arrayidx62, align 4
  %call63 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef 257)
  %48 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %no_fields, align 4
  %inc64 = add i32 %49, 1
  store i32 %inc64, ptr %no_fields, align 4
  %arrayidx65 = getelementptr i32, ptr %dst, i32 %49
  %50 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %call63, ptr %arrayidx65, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_read_wave_vgprs(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef %thread, i32 noundef %start, i32 noundef %size, ptr nocapture noundef writeonly %dst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %start, 1024
  tail call fastcc void @wave_read_regs(ptr noundef %adev, i32 noundef %wave, i32 noundef %thread, i32 noundef %add, i32 noundef %size, ptr noundef %dst)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_read_wave_sgprs(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef %start, i32 noundef %size, ptr nocapture noundef writeonly %dst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %simd)
  %cmp.not = icmp eq i32 %simd, 0
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %do.end, !prof !481

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.16, i32 noundef 4609, i32 noundef 9, ptr noundef null) #13
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %add = add i32 %start, 512
  tail call fastcc void @wave_read_regs(ptr noundef %adev, i32 noundef %wave, i32 noundef 0, i32 noundef %add, i32 noundef %size, ptr noundef %dst)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_select_me_pipe_q(ptr noundef %adev, i32 noundef %me, i32 noundef %pipe, i32 noundef %q, i32 noundef %vm) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @nv_grbm_select(ptr noundef %adev, i32 noundef %me, i32 noundef %pipe, i32 noundef %q, i32 noundef %vm) #13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_init_spm_golden_registers(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.145)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 655626, label %sw.bb
    i32 655617, label %sw.bb2
    i32 655618, label %sw.bb3
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %adev, ptr noundef nonnull @golden_settings_gc_rlc_spm_10_0_nv10, i32 noundef 1052) #13
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %adev, ptr noundef nonnull @golden_settings_gc_rlc_spm_10_1_nv14, i32 noundef 620) #13
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  tail call void @soc15_program_register_sequence(ptr noundef %adev, ptr noundef nonnull @golden_settings_gc_rlc_spm_10_1_2_nv12, i32 noundef 1052) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v10_0_update_perfmon_mgcg(ptr noundef %adev, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 15588
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %arrayidx16 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx16, align 4
  %add17 = add i32 %13, 15588
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and20 = and i32 %cond, -2
  %masksel = zext i1 %enable to i32
  %data.0 = or i32 %and20, %masksel
  call void @__sanitizer_cov_trace_cmp4(i32 %data.0, i32 %cond)
  %cmp.not = icmp eq i32 %data.0, %cond
  br i1 %cmp.not, label %cond.end.if.end53_crit_edge, label %if.then21

cond.end.if.end53_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end53

if.then21:                                        ; preds = %cond.end
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and24 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  br i1 %tobool25.not, label %if.then21.cond.false46_crit_edge, label %land.lhs.true26

if.then21.cond.false46_crit_edge:                 ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true26:                                  ; preds = %if.then21
  %funcs29 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs29 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs29, align 4
  %tobool30.not = icmp eq ptr %17, null
  br i1 %tobool30.not, label %land.lhs.true26.cond.false46_crit_edge, label %land.lhs.true31

land.lhs.true26.cond.false46_crit_edge:           ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg, align 4
  %tobool35.not = icmp eq ptr %19, null
  br i1 %tobool35.not, label %land.lhs.true31.cond.false46_crit_edge, label %cond.true36

land.lhs.true31.cond.false46_crit_edge:           ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

cond.true36:                                      ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx42 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx42, align 8
  %arrayidx44 = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %23, 15588
  tail call void %19(ptr noundef %adev, i32 noundef %add45, i32 noundef %data.0, i32 noundef 0, i32 noundef 1) #13
  br label %if.end53

cond.false46:                                     ; preds = %land.lhs.true31.cond.false46_crit_edge, %land.lhs.true26.cond.false46_crit_edge, %if.then21.cond.false46_crit_edge
  %arrayidx48 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx48, align 8
  %arrayidx50 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx50, align 4
  %add51 = add i32 %27, 15588
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add51, i32 noundef %data.0, i32 noundef 0) #13
  br label %if.end53

if.end53:                                         ; preds = %cond.false46, %cond.true36, %cond.end.if.end53_crit_edge
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %wave, i32 noundef %address) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4376
  %shl13 = shl i32 %address, 16
  %or = or i32 %shl13, %wave
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx15 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx15, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add18 = add i32 %13, 4376
  %shl20 = shl i32 %address, 16
  %or21 = or i32 %shl20, %wave
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add18, i32 noundef %or21, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and24 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  br i1 %tobool25.not, label %cond.end.cond.false46_crit_edge, label %land.lhs.true26

cond.end.cond.false46_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true26:                                  ; preds = %cond.end
  %funcs29 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs29 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs29, align 4
  %tobool30.not = icmp eq ptr %17, null
  br i1 %tobool30.not, label %land.lhs.true26.cond.false46_crit_edge, label %land.lhs.true31

land.lhs.true26.cond.false46_crit_edge:           ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_rreg, align 4
  %tobool35.not = icmp eq ptr %19, null
  br i1 %tobool35.not, label %land.lhs.true31.cond.false46_crit_edge, label %cond.true36

land.lhs.true31.cond.false46_crit_edge:           ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

cond.true36:                                      ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx42 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx42, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add45 = add i32 %23, 4377
  %call = tail call i32 %19(ptr noundef %adev, i32 noundef %add45, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end53

cond.false46:                                     ; preds = %land.lhs.true31.cond.false46_crit_edge, %land.lhs.true26.cond.false46_crit_edge, %cond.end.cond.false46_crit_edge
  %arrayidx48 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx48, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add51 = add i32 %27, 4377
  %call52 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add51, i32 noundef 0) #13
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false46, %cond.true36
  %cond = phi i32 [ %call, %cond.true36 ], [ %call52, %cond.false46 ]
  ret i32 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wave_read_regs(ptr noundef %adev, i32 noundef %wave, i32 noundef %thread, i32 noundef %regno, i32 noundef %num, ptr nocapture noundef writeonly %out) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4376
  %shl13 = shl i32 %regno, 16
  %shl14 = shl i32 %thread, 5
  %or = or i32 %shl14, %wave
  %or15 = or i32 %or, %shl13
  %or16 = or i32 %or15, 2048
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or16, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx18, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add21 = add i32 %13, 4376
  %shl23 = shl i32 %regno, 16
  %shl25 = shl i32 %thread, 5
  %or24 = or i32 %shl25, %wave
  %or26 = or i32 %or24, %shl23
  %or27 = or i32 %or26, 2048
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add21, i32 noundef %or27, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num)
  %tobool28.not83 = icmp eq i32 %num, 0
  br i1 %tobool28.not83, label %cond.end.while.end_crit_edge, label %while.body.lr.ph

cond.end.while.end_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.body.lr.ph:                                 ; preds = %cond.end
  %funcs36 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx49 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %while.body

while.body:                                       ; preds = %cond.end60.while.body_crit_edge, %while.body.lr.ph
  %dec85.in = phi i32 [ %num, %while.body.lr.ph ], [ %dec85, %cond.end60.while.body_crit_edge ]
  %out.addr.084 = phi ptr [ %out, %while.body.lr.ph ], [ %incdec.ptr, %cond.end60.while.body_crit_edge ]
  %dec85 = add i32 %dec85.in, -1
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and31 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %while.body.cond.false53_crit_edge, label %land.lhs.true33

while.body.cond.false53_crit_edge:                ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53

land.lhs.true33:                                  ; preds = %while.body
  %16 = ptrtoint ptr %funcs36 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs36, align 4
  %tobool37.not = icmp eq ptr %17, null
  br i1 %tobool37.not, label %land.lhs.true33.cond.false53_crit_edge, label %land.lhs.true38

land.lhs.true33.cond.false53_crit_edge:           ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53

land.lhs.true38:                                  ; preds = %land.lhs.true33
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_rreg, align 4
  %tobool42.not = icmp eq ptr %19, null
  br i1 %tobool42.not, label %land.lhs.true38.cond.false53_crit_edge, label %cond.true43

land.lhs.true38.cond.false53_crit_edge:           ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false53

cond.true43:                                      ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #15
  %20 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx49, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add52 = add i32 %23, 4377
  %call = tail call i32 %19(ptr noundef %adev, i32 noundef %add52, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end60

cond.false53:                                     ; preds = %land.lhs.true38.cond.false53_crit_edge, %land.lhs.true33.cond.false53_crit_edge, %while.body.cond.false53_crit_edge
  %24 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx49, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add58 = add i32 %27, 4377
  %call59 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add58, i32 noundef 0) #13
  br label %cond.end60

cond.end60:                                       ; preds = %cond.false53, %cond.true43
  %cond = phi i32 [ %call, %cond.true43 ], [ %call59, %cond.false53 ]
  %incdec.ptr = getelementptr i32, ptr %out.addr.084, i32 1
  %28 = ptrtoint ptr %out.addr.084 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %cond, ptr %out.addr.084, align 4
  %tobool28.not = icmp eq i32 %dec85, 0
  br i1 %tobool28.not, label %cond.end60.while.end_crit_edge, label %cond.end60.while.body_crit_edge

cond.end60.while.body_crit_edge:                  ; preds = %cond.end60
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body

cond.end60.while.end_crit_edge:                   ; preds = %cond.end60
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.end

while.end:                                        ; preds = %cond.end60.while.end_crit_edge, %cond.end.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nv_grbm_select(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @soc15_program_register_sequence(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_fini(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_mqd_sw_fini(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_kiq_free_ring(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_kiq_fini(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_pm_load_smu_firmware(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_cp_resume(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 9
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

if.then:                                          ; preds = %entry
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %cond.false.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

cond.false.i:                                     ; preds = %if.then
  %arrayidx18.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %4 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx18.i, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  %add21.i = add i32 %7, 7690
  %call22.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add21.i, i32 noundef 0) #13
  %and23.i = and i32 %call22.i, -3932161
  %8 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %virt.i, align 8
  %and47.i = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i)
  %tobool48.not.i = icmp eq i32 %and47.i, 0
  br i1 %tobool48.not.i, label %cond.false.i.cond.false69.i_crit_edge, label %land.lhs.true49.i

cond.false.i.cond.false69.i_crit_edge:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i

land.lhs.true49.i:                                ; preds = %cond.false.i
  %funcs52.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %10 = ptrtoint ptr %funcs52.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %funcs52.i, align 4
  %tobool53.not.i = icmp eq ptr %11, null
  br i1 %tobool53.not.i, label %land.lhs.true49.i.cond.false69.i_crit_edge, label %land.lhs.true54.i

land.lhs.true49.i.cond.false69.i_crit_edge:       ; preds = %land.lhs.true49.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i

land.lhs.true54.i:                                ; preds = %land.lhs.true49.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %11, i32 0, i32 12
  %12 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool58.not.i = icmp eq ptr %13, null
  br i1 %tobool58.not.i, label %land.lhs.true54.i.cond.false69.i_crit_edge, label %cond.true59.i

land.lhs.true54.i.cond.false69.i_crit_edge:       ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false69.i

cond.true59.i:                                    ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #15
  %14 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx18.i, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add68.i = add i32 %17, 7690
  tail call void %13(ptr noundef %adev, i32 noundef %add68.i, i32 noundef %and23.i, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false69.i:                                   ; preds = %land.lhs.true54.i.cond.false69.i_crit_edge, %land.lhs.true49.i.cond.false69.i_crit_edge, %cond.false.i.cond.false69.i_crit_edge
  %18 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx18.i, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add74.i = add i32 %21, 7690
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add74.i, i32 noundef %and23.i, i32 noundef 0) #13
  br label %if.end

if.end:                                           ; preds = %cond.false69.i, %cond.true59.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %22 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp = icmp eq i32 %23, 0
  br i1 %cmp, label %if.then1, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end9

if.then1:                                         ; preds = %if.end
  %me_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 9
  %24 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %me_fw.i, align 4
  %tobool.not.i83 = icmp eq ptr %25, null
  br i1 %tobool.not.i83, label %if.then1.cleanup_crit_edge, label %lor.lhs.false.i

if.then1.cleanup_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.then1
  %pfp_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 11
  %26 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pfp_fw.i, align 4
  %tobool2.not.i = icmp eq ptr %27, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %lor.lhs.false3.i

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %ce_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 13
  %28 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ce_fw.i, align 4
  %tobool5.not.i = icmp eq ptr %29, null
  br i1 %tobool5.not.i, label %lor.lhs.false3.i.cleanup_crit_edge, label %if.end.i

lor.lhs.false3.i.cleanup_crit_edge:               ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i:                                         ; preds = %lor.lhs.false3.i
  tail call fastcc void @gfx_v10_0_cp_gfx_enable(ptr noundef %adev, i1 noundef zeroext false) #13
  %30 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pfp_fw.i, align 4
  %data.i.i = getelementptr inbounds %struct.firmware, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %data.i.i, align 4
  tail call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %33) #13
  %34 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pfp_fw.i, align 4
  %data3.i.i = getelementptr inbounds %struct.firmware, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %data3.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %data3.i.i, align 4
  %ucode_array_offset_bytes.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %33, i32 0, i32 8
  %38 = ptrtoint ptr %ucode_array_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ucode_array_offset_bytes.i.i, align 4
  %40 = tail call i32 @llvm.bswap.i32(i32 %39) #13
  %add.ptr.i.i = getelementptr i8, ptr %37, i32 %40
  %ucode_size_bytes.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %33, i32 0, i32 7
  %41 = ptrtoint ptr %ucode_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ucode_size_bytes.i.i, align 4
  %pfp.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 3
  %pfp_fw_gpu_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 3, i32 1
  %pfp_fw_ptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 3, i32 2
  %call.i.i = tail call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %42, i32 noundef 4096, i32 noundef 2, ptr noundef %pfp.i.i, ptr noundef %pfp_fw_gpu_addr.i.i, ptr noundef %pfp_fw_ptr.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end.i.i

do.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #15
  %43 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %44, ptr noundef nonnull @.str.94, i32 noundef %call.i.i) #16
  tail call void @amdgpu_bo_free_kernel(ptr noundef %pfp.i.i, ptr noundef %pfp_fw_gpu_addr.i.i, ptr noundef %pfp_fw_ptr.i.i) #13
  br label %do.end.i

if.end.i.i:                                       ; preds = %if.end.i
  %45 = tail call i32 @llvm.bswap.i32(i32 %42) #13
  %46 = ptrtoint ptr %pfp_fw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pfp_fw_ptr.i.i, align 8
  %48 = call ptr @memcpy(ptr %47, ptr %add.ptr.i.i, i32 %45)
  %49 = ptrtoint ptr %pfp.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pfp.i.i, align 8
  tail call void @amdgpu_bo_kunmap(ptr noundef %50) #13
  %51 = ptrtoint ptr %pfp.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %pfp.i.i, align 8
  %tbo.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %52, i32 0, i32 4
  %bdev.i.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %52, i32 0, i32 4, i32 1
  %53 = ptrtoint ptr %bdev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %bdev.i.i.i.i.i, align 8
  %lru_lock.i.i.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %54, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i.i) #13
  %resource.i.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %52, i32 0, i32 4, i32 6
  %55 = ptrtoint ptr %resource.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %resource.i.i.i.i.i, align 4
  tail call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i.i, ptr noundef %56, ptr noundef null) #13
  %57 = ptrtoint ptr %bdev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %bdev.i.i.i.i.i, align 8
  %lru_lock2.i.i.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %58, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i.i) #13
  %resv.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %52, i32 0, i32 4, i32 0, i32 9
  %59 = ptrtoint ptr %resv.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %resv.i.i.i.i, align 8
  tail call void @dma_resv_reset_shared_max(ptr noundef %60) #13
  tail call void @ww_mutex_unlock(ptr noundef %60) #13
  %virt.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %61 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %virt.i.i, align 8
  %and.i.i = and i32 %62, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool22.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool22.not.i.i, label %if.end.i.i.cond.false.i.i_crit_edge, label %land.lhs.true.i.i

if.end.i.i.cond.false.i.i_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %63 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %funcs.i.i, align 4
  %tobool24.not.i.i = icmp eq ptr %64, null
  br i1 %tobool24.not.i.i, label %land.lhs.true.i.i.cond.false.i.i_crit_edge, label %land.lhs.true25.i.i

land.lhs.true.i.i.cond.false.i.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i

land.lhs.true25.i.i:                              ; preds = %land.lhs.true.i.i
  %sriov_rreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %64, i32 0, i32 13
  %65 = ptrtoint ptr %sriov_rreg.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %sriov_rreg.i.i, align 4
  %tobool29.not.i.i = icmp eq ptr %66, null
  br i1 %tobool29.not.i.i, label %land.lhs.true25.i.i.cond.false.i.i_crit_edge, label %cond.true.i.i

land.lhs.true25.i.i.cond.false.i.i_crit_edge:     ; preds = %land.lhs.true25.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true25.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %67 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx35.i.i = getelementptr i32, ptr %68, i32 1
  %69 = ptrtoint ptr %arrayidx35.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx35.i.i, align 4
  %add.i.i = add i32 %70, 22595
  %call36.i.i = tail call i32 %66(ptr noundef %adev, i32 noundef %add.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %land.lhs.true25.i.i.cond.false.i.i_crit_edge, %land.lhs.true.i.i.cond.false.i.i_crit_edge, %if.end.i.i.cond.false.i.i_crit_edge
  %arrayidx38.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %71 = ptrtoint ptr %arrayidx38.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx38.i.i, align 8
  %arrayidx40.i.i = getelementptr i32, ptr %72, i32 1
  %73 = ptrtoint ptr %arrayidx40.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx40.i.i, align 4
  %add41.i.i = add i32 %74, 22595
  %call42.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add41.i.i, i32 noundef 0) #13
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i32 [ %call36.i.i, %cond.true.i.i ], [ %call42.i.i, %cond.false.i.i ]
  %or.i.i = or i32 %cond.i.i, 1
  %75 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %virt.i.i, align 8
  %and46.i.i = and i32 %76, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46.i.i)
  %tobool47.not.i.i = icmp eq i32 %and46.i.i, 0
  br i1 %tobool47.not.i.i, label %cond.end.i.i.cond.false68.i.i_crit_edge, label %land.lhs.true48.i.i

cond.end.i.i.cond.false68.i.i_crit_edge:          ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i.i

land.lhs.true48.i.i:                              ; preds = %cond.end.i.i
  %funcs51.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %77 = ptrtoint ptr %funcs51.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %funcs51.i.i, align 4
  %tobool52.not.i.i = icmp eq ptr %78, null
  br i1 %tobool52.not.i.i, label %land.lhs.true48.i.i.cond.false68.i.i_crit_edge, label %land.lhs.true53.i.i

land.lhs.true48.i.i.cond.false68.i.i_crit_edge:   ; preds = %land.lhs.true48.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i.i

land.lhs.true53.i.i:                              ; preds = %land.lhs.true48.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %78, i32 0, i32 12
  %79 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool57.not.i.i = icmp eq ptr %80, null
  br i1 %tobool57.not.i.i, label %land.lhs.true53.i.i.cond.false68.i.i_crit_edge, label %cond.true58.i.i

land.lhs.true53.i.i.cond.false68.i.i_crit_edge:   ; preds = %land.lhs.true53.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i.i

cond.true58.i.i:                                  ; preds = %land.lhs.true53.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx64.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %81 = ptrtoint ptr %arrayidx64.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx64.i.i, align 8
  %arrayidx66.i.i = getelementptr i32, ptr %82, i32 1
  %83 = ptrtoint ptr %arrayidx66.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %arrayidx66.i.i, align 4
  %add67.i.i = add i32 %84, 22595
  tail call void %80(ptr noundef %adev, i32 noundef %add67.i.i, i32 noundef %or.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end74.i.i

cond.false68.i.i:                                 ; preds = %land.lhs.true53.i.i.cond.false68.i.i_crit_edge, %land.lhs.true48.i.i.cond.false68.i.i_crit_edge, %cond.end.i.i.cond.false68.i.i_crit_edge
  %arrayidx70.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %85 = ptrtoint ptr %arrayidx70.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx70.i.i, align 8
  %arrayidx72.i.i = getelementptr i32, ptr %86, i32 1
  %87 = ptrtoint ptr %arrayidx72.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx72.i.i, align 4
  %add73.i.i = add i32 %88, 22595
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add73.i.i, i32 noundef %or.i.i, i32 noundef 0) #13
  br label %cond.end74.i.i

cond.end74.i.i:                                   ; preds = %cond.false68.i.i, %cond.true58.i.i
  %funcs82.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx96.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end113.i.i.for.body.i.i_crit_edge, %cond.end74.i.i
  %i.0549.i.i = phi i32 [ 0, %cond.end74.i.i ], [ %inc.i.i, %if.end113.i.i.for.body.i.i_crit_edge ]
  %89 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %virt.i.i, align 8
  %and77.i.i = and i32 %90, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77.i.i)
  %tobool78.not.i.i = icmp eq i32 %and77.i.i, 0
  br i1 %tobool78.not.i.i, label %for.body.i.i.cond.false101.i.i_crit_edge, label %land.lhs.true79.i.i

for.body.i.i.cond.false101.i.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i.i

land.lhs.true79.i.i:                              ; preds = %for.body.i.i
  %91 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %funcs82.i.i, align 4
  %tobool83.not.i.i = icmp eq ptr %92, null
  br i1 %tobool83.not.i.i, label %land.lhs.true79.i.i.cond.false101.i.i_crit_edge, label %land.lhs.true84.i.i

land.lhs.true79.i.i.cond.false101.i.i_crit_edge:  ; preds = %land.lhs.true79.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i.i

land.lhs.true84.i.i:                              ; preds = %land.lhs.true79.i.i
  %sriov_rreg88.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %92, i32 0, i32 13
  %93 = ptrtoint ptr %sriov_rreg88.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %sriov_rreg88.i.i, align 4
  %tobool89.not.i.i = icmp eq ptr %94, null
  br i1 %tobool89.not.i.i, label %land.lhs.true84.i.i.cond.false101.i.i_crit_edge, label %cond.true90.i.i

land.lhs.true84.i.i.cond.false101.i.i_crit_edge:  ; preds = %land.lhs.true84.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i.i

cond.true90.i.i:                                  ; preds = %land.lhs.true84.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %95 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx98.i.i = getelementptr i32, ptr %96, i32 1
  %97 = ptrtoint ptr %arrayidx98.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx98.i.i, align 4
  %add99.i.i = add i32 %98, 22595
  %call100.i.i = tail call i32 %94(ptr noundef %adev, i32 noundef %add99.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end108.i.i

cond.false101.i.i:                                ; preds = %land.lhs.true84.i.i.cond.false101.i.i_crit_edge, %land.lhs.true79.i.i.cond.false101.i.i_crit_edge, %for.body.i.i.cond.false101.i.i_crit_edge
  %99 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx105.i.i = getelementptr i32, ptr %100, i32 1
  %101 = ptrtoint ptr %arrayidx105.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %arrayidx105.i.i, align 4
  %add106.i.i = add i32 %102, 22595
  %call107.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add106.i.i, i32 noundef 0) #13
  br label %cond.end108.i.i

cond.end108.i.i:                                  ; preds = %cond.false101.i.i, %cond.true90.i.i
  %cond109.i.i = phi i32 [ %call100.i.i, %cond.true90.i.i ], [ %call107.i.i, %cond.false101.i.i ]
  %103 = and i32 %cond109.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %cmp111.not.i.i = icmp eq i32 %103, 0
  br i1 %cmp111.not.i.i, label %if.end113.i.i, label %if.end120.i.i

if.end113.i.i:                                    ; preds = %cond.end108.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %104 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %104(i32 noundef 214748) #13
  %inc.i.i = add nuw nsw i32 %i.0549.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 50000
  br i1 %exitcond.not.i.i, label %do.end118.i.i, label %if.end113.i.i.for.body.i.i_crit_edge

if.end113.i.i.for.body.i.i_crit_edge:             ; preds = %if.end113.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i

do.end118.i.i:                                    ; preds = %if.end113.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %105 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %106, ptr noundef nonnull @.str.19) #16
  br label %do.end.i

if.end120.i.i:                                    ; preds = %cond.end108.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %107 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %107)
  %cmp121.i.i = icmp eq i32 %107, 1
  br i1 %cmp121.i.i, label %if.then122.i.i, label %if.end120.i.i.if.end124.i.i_crit_edge

if.end120.i.i.if.end124.i.i_crit_edge:            ; preds = %if.end120.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end124.i.i

if.then122.i.i:                                   ; preds = %if.end120.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %funcs123.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 102, i32 1
  %108 = ptrtoint ptr %funcs123.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %funcs123.i.i, align 4
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %109, align 4
  tail call void %111(ptr noundef %adev, ptr noundef null) #13
  br label %if.end124.i.i

if.end124.i.i:                                    ; preds = %if.then122.i.i, %if.end120.i.i.if.end124.i.i_crit_edge
  %112 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %virt.i.i, align 8
  %and127.i.i = and i32 %113, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and127.i.i)
  %tobool128.not.i.i = icmp eq i32 %and127.i.i, 0
  br i1 %tobool128.not.i.i, label %if.end124.i.i.cond.false151.i.i_crit_edge, label %land.lhs.true129.i.i

if.end124.i.i.cond.false151.i.i_crit_edge:        ; preds = %if.end124.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i.i

land.lhs.true129.i.i:                             ; preds = %if.end124.i.i
  %114 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %funcs82.i.i, align 4
  %tobool133.not.i.i = icmp eq ptr %115, null
  br i1 %tobool133.not.i.i, label %land.lhs.true129.i.i.cond.false151.i.i_crit_edge, label %land.lhs.true134.i.i

land.lhs.true129.i.i.cond.false151.i.i_crit_edge: ; preds = %land.lhs.true129.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i.i

land.lhs.true134.i.i:                             ; preds = %land.lhs.true129.i.i
  %sriov_rreg138.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %115, i32 0, i32 13
  %116 = ptrtoint ptr %sriov_rreg138.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %sriov_rreg138.i.i, align 4
  %tobool139.not.i.i = icmp eq ptr %117, null
  br i1 %tobool139.not.i.i, label %land.lhs.true134.i.i.cond.false151.i.i_crit_edge, label %cond.true140.i.i

land.lhs.true134.i.i.cond.false151.i.i_crit_edge: ; preds = %land.lhs.true134.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i.i

cond.true140.i.i:                                 ; preds = %land.lhs.true134.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %118 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx148.i.i = getelementptr i32, ptr %119, i32 1
  %120 = ptrtoint ptr %arrayidx148.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %arrayidx148.i.i, align 4
  %add149.i.i = add i32 %121, 22594
  %call150.i.i = tail call i32 %117(ptr noundef %adev, i32 noundef %add149.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end158.i.i

cond.false151.i.i:                                ; preds = %land.lhs.true134.i.i.cond.false151.i.i_crit_edge, %land.lhs.true129.i.i.cond.false151.i.i_crit_edge, %if.end124.i.i.cond.false151.i.i_crit_edge
  %122 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx155.i.i = getelementptr i32, ptr %123, i32 1
  %124 = ptrtoint ptr %arrayidx155.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %arrayidx155.i.i, align 4
  %add156.i.i = add i32 %125, 22594
  %call157.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add156.i.i, i32 noundef 0) #13
  br label %cond.end158.i.i

cond.end158.i.i:                                  ; preds = %cond.false151.i.i, %cond.true140.i.i
  %cond159.i.i = phi i32 [ %call150.i.i, %cond.true140.i.i ], [ %call157.i.i, %cond.false151.i.i ]
  %and166.i.i = and i32 %cond159.i.i, -58720288
  %or167.i.i = or i32 %and166.i.i, 16
  %126 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %virt.i.i, align 8
  %and170.i.i = and i32 %127, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and170.i.i)
  %tobool171.not.i.i = icmp eq i32 %and170.i.i, 0
  br i1 %tobool171.not.i.i, label %cond.end158.i.i.cond.false193.i.i_crit_edge, label %land.lhs.true172.i.i

cond.end158.i.i.cond.false193.i.i_crit_edge:      ; preds = %cond.end158.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false193.i.i

land.lhs.true172.i.i:                             ; preds = %cond.end158.i.i
  %128 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %funcs82.i.i, align 4
  %tobool176.not.i.i = icmp eq ptr %129, null
  br i1 %tobool176.not.i.i, label %land.lhs.true172.i.i.cond.false193.i.i_crit_edge, label %land.lhs.true177.i.i

land.lhs.true172.i.i.cond.false193.i.i_crit_edge: ; preds = %land.lhs.true172.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false193.i.i

land.lhs.true177.i.i:                             ; preds = %land.lhs.true172.i.i
  %sriov_wreg181.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %129, i32 0, i32 12
  %130 = ptrtoint ptr %sriov_wreg181.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %sriov_wreg181.i.i, align 4
  %tobool182.not.i.i = icmp eq ptr %131, null
  br i1 %tobool182.not.i.i, label %land.lhs.true177.i.i.cond.false193.i.i_crit_edge, label %cond.true183.i.i

land.lhs.true177.i.i.cond.false193.i.i_crit_edge: ; preds = %land.lhs.true177.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false193.i.i

cond.true183.i.i:                                 ; preds = %land.lhs.true177.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %132 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx191.i.i = getelementptr i32, ptr %133, i32 1
  %134 = ptrtoint ptr %arrayidx191.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %arrayidx191.i.i, align 4
  %add192.i.i = add i32 %135, 22594
  tail call void %131(ptr noundef %adev, i32 noundef %add192.i.i, i32 noundef %or167.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end199.i.i

cond.false193.i.i:                                ; preds = %land.lhs.true177.i.i.cond.false193.i.i_crit_edge, %land.lhs.true172.i.i.cond.false193.i.i_crit_edge, %cond.end158.i.i.cond.false193.i.i_crit_edge
  %136 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx197.i.i = getelementptr i32, ptr %137, i32 1
  %138 = ptrtoint ptr %arrayidx197.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %arrayidx197.i.i, align 4
  %add198.i.i = add i32 %139, 22594
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add198.i.i, i32 noundef %or167.i.i, i32 noundef 0) #13
  br label %cond.end199.i.i

cond.end199.i.i:                                  ; preds = %cond.false193.i.i, %cond.true183.i.i
  %140 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %virt.i.i, align 8
  %and202.i.i = and i32 %141, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and202.i.i)
  %tobool203.not.i.i = icmp eq i32 %and202.i.i, 0
  br i1 %tobool203.not.i.i, label %cond.end199.i.i.cond.false229.i.i_crit_edge, label %land.lhs.true204.i.i

cond.end199.i.i.cond.false229.i.i_crit_edge:      ; preds = %cond.end199.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false229.i.i

land.lhs.true204.i.i:                             ; preds = %cond.end199.i.i
  %142 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %funcs82.i.i, align 4
  %tobool208.not.i.i = icmp eq ptr %143, null
  br i1 %tobool208.not.i.i, label %land.lhs.true204.i.i.cond.false229.i.i_crit_edge, label %land.lhs.true209.i.i

land.lhs.true204.i.i.cond.false229.i.i_crit_edge: ; preds = %land.lhs.true204.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false229.i.i

land.lhs.true209.i.i:                             ; preds = %land.lhs.true204.i.i
  %sriov_wreg213.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %143, i32 0, i32 12
  %144 = ptrtoint ptr %sriov_wreg213.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %sriov_wreg213.i.i, align 4
  %tobool214.not.i.i = icmp eq ptr %145, null
  br i1 %tobool214.not.i.i, label %land.lhs.true209.i.i.cond.false229.i.i_crit_edge, label %cond.true215.i.i

land.lhs.true209.i.i.cond.false229.i.i_crit_edge: ; preds = %land.lhs.true209.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false229.i.i

cond.true215.i.i:                                 ; preds = %land.lhs.true209.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %146 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx223.i.i = getelementptr i32, ptr %147, i32 1
  %148 = ptrtoint ptr %arrayidx223.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %arrayidx223.i.i, align 4
  %add224.i.i = add i32 %149, 22592
  %150 = ptrtoint ptr %pfp_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %150)
  %151 = load i64, ptr %pfp_fw_gpu_addr.i.i, align 8
  %152 = trunc i64 %151 to i32
  %conv.i.i = and i32 %152, -4096
  tail call void %145(ptr noundef %adev, i32 noundef %add224.i.i, i32 noundef %conv.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end240.i.i

cond.false229.i.i:                                ; preds = %land.lhs.true209.i.i.cond.false229.i.i_crit_edge, %land.lhs.true204.i.i.cond.false229.i.i_crit_edge, %cond.end199.i.i.cond.false229.i.i_crit_edge
  %153 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx233.i.i = getelementptr i32, ptr %154, i32 1
  %155 = ptrtoint ptr %arrayidx233.i.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %arrayidx233.i.i, align 4
  %add234.i.i = add i32 %156, 22592
  %157 = ptrtoint ptr %pfp_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %157)
  %158 = load i64, ptr %pfp_fw_gpu_addr.i.i, align 8
  %159 = trunc i64 %158 to i32
  %conv239.i.i = and i32 %159, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add234.i.i, i32 noundef %conv239.i.i, i32 noundef 0) #13
  br label %cond.end240.i.i

cond.end240.i.i:                                  ; preds = %cond.false229.i.i, %cond.true215.i.i
  %160 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %virt.i.i, align 8
  %and243.i.i = and i32 %161, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and243.i.i)
  %tobool244.not.i.i = icmp eq i32 %and243.i.i, 0
  br i1 %tobool244.not.i.i, label %cond.end240.i.i.cond.false272.i.i_crit_edge, label %land.lhs.true245.i.i

cond.end240.i.i.cond.false272.i.i_crit_edge:      ; preds = %cond.end240.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false272.i.i

land.lhs.true245.i.i:                             ; preds = %cond.end240.i.i
  %162 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %funcs82.i.i, align 4
  %tobool249.not.i.i = icmp eq ptr %163, null
  br i1 %tobool249.not.i.i, label %land.lhs.true245.i.i.cond.false272.i.i_crit_edge, label %land.lhs.true250.i.i

land.lhs.true245.i.i.cond.false272.i.i_crit_edge: ; preds = %land.lhs.true245.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false272.i.i

land.lhs.true250.i.i:                             ; preds = %land.lhs.true245.i.i
  %sriov_wreg254.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %163, i32 0, i32 12
  %164 = ptrtoint ptr %sriov_wreg254.i.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %sriov_wreg254.i.i, align 4
  %tobool255.not.i.i = icmp eq ptr %165, null
  br i1 %tobool255.not.i.i, label %land.lhs.true250.i.i.cond.false272.i.i_crit_edge, label %cond.true256.i.i

land.lhs.true250.i.i.cond.false272.i.i_crit_edge: ; preds = %land.lhs.true250.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false272.i.i

cond.true256.i.i:                                 ; preds = %land.lhs.true250.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %166 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx264.i.i = getelementptr i32, ptr %167, i32 1
  %168 = ptrtoint ptr %arrayidx264.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %arrayidx264.i.i, align 4
  %add265.i.i = add i32 %169, 22593
  %170 = ptrtoint ptr %pfp_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %170)
  %171 = load i64, ptr %pfp_fw_gpu_addr.i.i, align 8
  %shr269.i.i = lshr i64 %171, 32
  %conv271.i.i = trunc i64 %shr269.i.i to i32
  tail call void %165(ptr noundef %adev, i32 noundef %add265.i.i, i32 noundef %conv271.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end284.i.i

cond.false272.i.i:                                ; preds = %land.lhs.true250.i.i.cond.false272.i.i_crit_edge, %land.lhs.true245.i.i.cond.false272.i.i_crit_edge, %cond.end240.i.i.cond.false272.i.i_crit_edge
  %172 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx276.i.i = getelementptr i32, ptr %173, i32 1
  %174 = ptrtoint ptr %arrayidx276.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %arrayidx276.i.i, align 4
  %add277.i.i = add i32 %175, 22593
  %176 = ptrtoint ptr %pfp_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %176)
  %177 = load i64, ptr %pfp_fw_gpu_addr.i.i, align 8
  %shr281.i.i = lshr i64 %177, 32
  %conv283.i.i = trunc i64 %shr281.i.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add277.i.i, i32 noundef %conv283.i.i, i32 noundef 0) #13
  br label %cond.end284.i.i

cond.end284.i.i:                                  ; preds = %cond.false272.i.i, %cond.true256.i.i
  %178 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %virt.i.i, align 8
  %and287.i.i = and i32 %179, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and287.i.i)
  %tobool288.not.i.i = icmp eq i32 %and287.i.i, 0
  br i1 %tobool288.not.i.i, label %cond.end284.i.i.cond.false310.i.i_crit_edge, label %land.lhs.true289.i.i

cond.end284.i.i.cond.false310.i.i_crit_edge:      ; preds = %cond.end284.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false310.i.i

land.lhs.true289.i.i:                             ; preds = %cond.end284.i.i
  %180 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %funcs82.i.i, align 4
  %tobool293.not.i.i = icmp eq ptr %181, null
  br i1 %tobool293.not.i.i, label %land.lhs.true289.i.i.cond.false310.i.i_crit_edge, label %land.lhs.true294.i.i

land.lhs.true289.i.i.cond.false310.i.i_crit_edge: ; preds = %land.lhs.true289.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false310.i.i

land.lhs.true294.i.i:                             ; preds = %land.lhs.true289.i.i
  %sriov_wreg298.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %181, i32 0, i32 12
  %182 = ptrtoint ptr %sriov_wreg298.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %sriov_wreg298.i.i, align 4
  %tobool299.not.i.i = icmp eq ptr %183, null
  br i1 %tobool299.not.i.i, label %land.lhs.true294.i.i.cond.false310.i.i_crit_edge, label %cond.true300.i.i

land.lhs.true294.i.i.cond.false310.i.i_crit_edge: ; preds = %land.lhs.true294.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false310.i.i

cond.true300.i.i:                                 ; preds = %land.lhs.true294.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %184 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx308.i.i = getelementptr i32, ptr %185, i32 1
  %186 = ptrtoint ptr %arrayidx308.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %arrayidx308.i.i, align 4
  %add309.i.i = add i32 %187, 22548
  tail call void %183(ptr noundef %adev, i32 noundef %add309.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end316.i.i

cond.false310.i.i:                                ; preds = %land.lhs.true294.i.i.cond.false310.i.i_crit_edge, %land.lhs.true289.i.i.cond.false310.i.i_crit_edge, %cond.end284.i.i.cond.false310.i.i_crit_edge
  %188 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx314.i.i = getelementptr i32, ptr %189, i32 1
  %190 = ptrtoint ptr %arrayidx314.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %arrayidx314.i.i, align 4
  %add315.i.i = add i32 %191, 22548
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add315.i.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end316.i.i

cond.end316.i.i:                                  ; preds = %cond.false310.i.i, %cond.true300.i.i
  %jt_size.i.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %33, i32 0, i32 3
  %192 = ptrtoint ptr %jt_size.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %jt_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %193)
  %cmp318550.not.i.i = icmp eq i32 %193, 0
  br i1 %cmp318550.not.i.i, label %cond.end316.i.i.for.end362.i.i_crit_edge, label %for.body320.lr.ph.i.i

cond.end316.i.i.for.end362.i.i_crit_edge:         ; preds = %cond.end316.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end362.i.i

for.body320.lr.ph.i.i:                            ; preds = %cond.end316.i.i
  %jt_offset.i.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %33, i32 0, i32 2
  br label %for.body320.i.i

for.body320.i.i:                                  ; preds = %for.inc360.i.i.for.body320.i.i_crit_edge, %for.body320.lr.ph.i.i
  %i.1551.i.i = phi i32 [ 0, %for.body320.lr.ph.i.i ], [ %inc361.i.i, %for.inc360.i.i.for.body320.i.i_crit_edge ]
  %194 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %virt.i.i, align 8
  %and323.i.i = and i32 %195, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and323.i.i)
  %tobool324.not.i.i = icmp eq i32 %and323.i.i, 0
  br i1 %tobool324.not.i.i, label %for.body320.i.i.cond.false349.i.i_crit_edge, label %land.lhs.true325.i.i

for.body320.i.i.cond.false349.i.i_crit_edge:      ; preds = %for.body320.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false349.i.i

land.lhs.true325.i.i:                             ; preds = %for.body320.i.i
  %196 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %funcs82.i.i, align 4
  %tobool329.not.i.i = icmp eq ptr %197, null
  br i1 %tobool329.not.i.i, label %land.lhs.true325.i.i.cond.false349.i.i_crit_edge, label %land.lhs.true330.i.i

land.lhs.true325.i.i.cond.false349.i.i_crit_edge: ; preds = %land.lhs.true325.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false349.i.i

land.lhs.true330.i.i:                             ; preds = %land.lhs.true325.i.i
  %sriov_wreg334.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %197, i32 0, i32 12
  %198 = ptrtoint ptr %sriov_wreg334.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %sriov_wreg334.i.i, align 4
  %tobool335.not.i.i = icmp eq ptr %199, null
  br i1 %tobool335.not.i.i, label %land.lhs.true330.i.i.cond.false349.i.i_crit_edge, label %cond.true336.i.i

land.lhs.true330.i.i.cond.false349.i.i_crit_edge: ; preds = %land.lhs.true330.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false349.i.i

cond.true336.i.i:                                 ; preds = %land.lhs.true330.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %200 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx344.i.i = getelementptr i32, ptr %201, i32 1
  %202 = ptrtoint ptr %arrayidx344.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %arrayidx344.i.i, align 4
  %add345.i.i = add i32 %203, 22549
  %204 = ptrtoint ptr %jt_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %jt_offset.i.i, align 4
  %add.ptr346.i.i = getelementptr i32, ptr %add.ptr.i.i, i32 %205
  %add.ptr347.i.i = getelementptr i32, ptr %add.ptr346.i.i, i32 %i.1551.i.i
  %206 = ptrtoint ptr %add.ptr347.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %add.ptr347.i.i, align 4
  %208 = tail call i32 @llvm.bswap.i32(i32 %207) #13
  tail call void %199(ptr noundef %adev, i32 noundef %add345.i.i, i32 noundef %208, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc360.i.i

cond.false349.i.i:                                ; preds = %land.lhs.true330.i.i.cond.false349.i.i_crit_edge, %land.lhs.true325.i.i.cond.false349.i.i_crit_edge, %for.body320.i.i.cond.false349.i.i_crit_edge
  %209 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx353.i.i = getelementptr i32, ptr %210, i32 1
  %211 = ptrtoint ptr %arrayidx353.i.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %arrayidx353.i.i, align 4
  %add354.i.i = add i32 %212, 22549
  %213 = ptrtoint ptr %jt_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %jt_offset.i.i, align 4
  %add.ptr356.i.i = getelementptr i32, ptr %add.ptr.i.i, i32 %214
  %add.ptr357.i.i = getelementptr i32, ptr %add.ptr356.i.i, i32 %i.1551.i.i
  %215 = ptrtoint ptr %add.ptr357.i.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %add.ptr357.i.i, align 4
  %217 = tail call i32 @llvm.bswap.i32(i32 %216) #13
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add354.i.i, i32 noundef %217, i32 noundef 0) #13
  br label %for.inc360.i.i

for.inc360.i.i:                                   ; preds = %cond.false349.i.i, %cond.true336.i.i
  %inc361.i.i = add nuw i32 %i.1551.i.i, 1
  %218 = ptrtoint ptr %jt_size.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %jt_size.i.i, align 4
  %cmp318.i.i = icmp ult i32 %inc361.i.i, %219
  br i1 %cmp318.i.i, label %for.inc360.i.i.for.body320.i.i_crit_edge, label %for.inc360.i.i.for.end362.i.i_crit_edge

for.inc360.i.i.for.end362.i.i_crit_edge:          ; preds = %for.inc360.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end362.i.i

for.inc360.i.i.for.body320.i.i_crit_edge:         ; preds = %for.inc360.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body320.i.i

for.end362.i.i:                                   ; preds = %for.inc360.i.i.for.end362.i.i_crit_edge, %cond.end316.i.i.for.end362.i.i_crit_edge
  %220 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %virt.i.i, align 8
  %and365.i.i = and i32 %221, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and365.i.i)
  %tobool366.not.i.i = icmp eq i32 %and365.i.i, 0
  br i1 %tobool366.not.i.i, label %for.end362.i.i.cond.false389.i.i_crit_edge, label %land.lhs.true367.i.i

for.end362.i.i.cond.false389.i.i_crit_edge:       ; preds = %for.end362.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false389.i.i

land.lhs.true367.i.i:                             ; preds = %for.end362.i.i
  %222 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %funcs82.i.i, align 4
  %tobool371.not.i.i = icmp eq ptr %223, null
  br i1 %tobool371.not.i.i, label %land.lhs.true367.i.i.cond.false389.i.i_crit_edge, label %land.lhs.true372.i.i

land.lhs.true367.i.i.cond.false389.i.i_crit_edge: ; preds = %land.lhs.true367.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false389.i.i

land.lhs.true372.i.i:                             ; preds = %land.lhs.true367.i.i
  %sriov_wreg376.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %223, i32 0, i32 12
  %224 = ptrtoint ptr %sriov_wreg376.i.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %sriov_wreg376.i.i, align 4
  %tobool377.not.i.i = icmp eq ptr %225, null
  br i1 %tobool377.not.i.i, label %land.lhs.true372.i.i.cond.false389.i.i_crit_edge, label %cond.true378.i.i

land.lhs.true372.i.i.cond.false389.i.i_crit_edge: ; preds = %land.lhs.true372.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false389.i.i

cond.true378.i.i:                                 ; preds = %land.lhs.true372.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %226 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx386.i.i = getelementptr i32, ptr %227, i32 1
  %228 = ptrtoint ptr %arrayidx386.i.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %arrayidx386.i.i, align 4
  %add387.i.i = add i32 %229, 22548
  %pfp_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %230 = ptrtoint ptr %pfp_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %pfp_fw_version.i.i, align 8
  tail call void %225(ptr noundef %adev, i32 noundef %add387.i.i, i32 noundef %231, i32 noundef 0, i32 noundef 1) #13
  br label %if.end9.i

cond.false389.i.i:                                ; preds = %land.lhs.true372.i.i.cond.false389.i.i_crit_edge, %land.lhs.true367.i.i.cond.false389.i.i_crit_edge, %for.end362.i.i.cond.false389.i.i_crit_edge
  %232 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx393.i.i = getelementptr i32, ptr %233, i32 1
  %234 = ptrtoint ptr %arrayidx393.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %arrayidx393.i.i, align 4
  %add394.i.i = add i32 %235, 22548
  %pfp_fw_version396.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %236 = ptrtoint ptr %pfp_fw_version396.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %pfp_fw_version396.i.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add394.i.i, i32 noundef %237, i32 noundef 0) #13
  br label %if.end9.i

do.end.i:                                         ; preds = %do.end118.i.i, %do.end.i.i
  %retval.0.i.i = phi i32 [ %call.i.i, %do.end.i.i ], [ -22, %do.end118.i.i ]
  %238 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %239, ptr noundef nonnull @.str.83, i32 noundef %retval.0.i.i) #16
  br label %cleanup

if.end9.i:                                        ; preds = %cond.false389.i.i, %cond.true378.i.i
  %240 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %ce_fw.i, align 4
  %data.i43.i = getelementptr inbounds %struct.firmware, ptr %241, i32 0, i32 1
  %242 = ptrtoint ptr %data.i43.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %data.i43.i, align 4
  tail call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %243) #13
  %244 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %ce_fw.i, align 4
  %data3.i44.i = getelementptr inbounds %struct.firmware, ptr %245, i32 0, i32 1
  %246 = ptrtoint ptr %data3.i44.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %data3.i44.i, align 4
  %ucode_array_offset_bytes.i45.i = getelementptr inbounds %struct.common_firmware_header, ptr %243, i32 0, i32 8
  %248 = ptrtoint ptr %ucode_array_offset_bytes.i45.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %ucode_array_offset_bytes.i45.i, align 4
  %250 = tail call i32 @llvm.bswap.i32(i32 %249) #13
  %add.ptr.i46.i = getelementptr i8, ptr %247, i32 %250
  %ucode_size_bytes.i47.i = getelementptr inbounds %struct.common_firmware_header, ptr %243, i32 0, i32 7
  %251 = ptrtoint ptr %ucode_size_bytes.i47.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %ucode_size_bytes.i47.i, align 4
  %ce.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 4
  %ce_fw_gpu_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 4, i32 1
  %ce_fw_ptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 4, i32 2
  %call.i48.i = tail call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %252, i32 noundef 4096, i32 noundef 2, ptr noundef %ce.i.i, ptr noundef %ce_fw_gpu_addr.i.i, ptr noundef %ce_fw_ptr.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i48.i)
  %tobool.not.i49.i = icmp eq i32 %call.i48.i, 0
  br i1 %tobool.not.i49.i, label %if.end.i60.i, label %do.end.i50.i

do.end.i50.i:                                     ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #15
  %253 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %254, ptr noundef nonnull @.str.98, i32 noundef %call.i48.i) #16
  tail call void @amdgpu_bo_free_kernel(ptr noundef %ce.i.i, ptr noundef %ce_fw_gpu_addr.i.i, ptr noundef %ce_fw_ptr.i.i) #13
  br label %do.end15.i

if.end.i60.i:                                     ; preds = %if.end9.i
  %255 = tail call i32 @llvm.bswap.i32(i32 %252) #13
  %256 = ptrtoint ptr %ce_fw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %ce_fw_ptr.i.i, align 8
  %258 = call ptr @memcpy(ptr %257, ptr %add.ptr.i46.i, i32 %255)
  %259 = ptrtoint ptr %ce.i.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load ptr, ptr %ce.i.i, align 8
  tail call void @amdgpu_bo_kunmap(ptr noundef %260) #13
  %261 = ptrtoint ptr %ce.i.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %ce.i.i, align 8
  %tbo.i.i51.i = getelementptr inbounds %struct.amdgpu_bo, ptr %262, i32 0, i32 4
  %bdev.i.i.i.i52.i = getelementptr inbounds %struct.amdgpu_bo, ptr %262, i32 0, i32 4, i32 1
  %263 = ptrtoint ptr %bdev.i.i.i.i52.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %bdev.i.i.i.i52.i, align 8
  %lru_lock.i.i.i.i53.i = getelementptr inbounds %struct.ttm_device, ptr %264, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i53.i) #13
  %resource.i.i.i.i54.i = getelementptr inbounds %struct.amdgpu_bo, ptr %262, i32 0, i32 4, i32 6
  %265 = ptrtoint ptr %resource.i.i.i.i54.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %resource.i.i.i.i54.i, align 4
  tail call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i51.i, ptr noundef %266, ptr noundef null) #13
  %267 = ptrtoint ptr %bdev.i.i.i.i52.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %bdev.i.i.i.i52.i, align 8
  %lru_lock2.i.i.i.i55.i = getelementptr inbounds %struct.ttm_device, ptr %268, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i55.i) #13
  %resv.i.i.i56.i = getelementptr inbounds %struct.amdgpu_bo, ptr %262, i32 0, i32 4, i32 0, i32 9
  %269 = ptrtoint ptr %resv.i.i.i56.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %resv.i.i.i56.i, align 8
  tail call void @dma_resv_reset_shared_max(ptr noundef %270) #13
  tail call void @ww_mutex_unlock(ptr noundef %270) #13
  %271 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %virt.i.i, align 8
  %and.i58.i = and i32 %272, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i58.i)
  %tobool22.not.i59.i = icmp eq i32 %and.i58.i, 0
  br i1 %tobool22.not.i59.i, label %if.end.i60.i.cond.false.i76.i_crit_edge, label %land.lhs.true.i63.i

if.end.i60.i.cond.false.i76.i_crit_edge:          ; preds = %if.end.i60.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i76.i

land.lhs.true.i63.i:                              ; preds = %if.end.i60.i
  %273 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load ptr, ptr %funcs82.i.i, align 4
  %tobool24.not.i62.i = icmp eq ptr %274, null
  br i1 %tobool24.not.i62.i, label %land.lhs.true.i63.i.cond.false.i76.i_crit_edge, label %land.lhs.true25.i66.i

land.lhs.true.i63.i.cond.false.i76.i_crit_edge:   ; preds = %land.lhs.true.i63.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i76.i

land.lhs.true25.i66.i:                            ; preds = %land.lhs.true.i63.i
  %sriov_rreg.i64.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %274, i32 0, i32 13
  %275 = ptrtoint ptr %sriov_rreg.i64.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %sriov_rreg.i64.i, align 4
  %tobool29.not.i65.i = icmp eq ptr %276, null
  br i1 %tobool29.not.i65.i, label %land.lhs.true25.i66.i.cond.false.i76.i_crit_edge, label %cond.true.i71.i

land.lhs.true25.i66.i.cond.false.i76.i_crit_edge: ; preds = %land.lhs.true25.i66.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i76.i

cond.true.i71.i:                                  ; preds = %land.lhs.true25.i66.i
  call void @__sanitizer_cov_trace_pc() #15
  %277 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx35.i68.i = getelementptr i32, ptr %278, i32 1
  %279 = ptrtoint ptr %arrayidx35.i68.i to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load i32, ptr %arrayidx35.i68.i, align 4
  %add.i69.i = add i32 %280, 22603
  %call36.i70.i = tail call i32 %276(ptr noundef %adev, i32 noundef %add.i69.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i81.i

cond.false.i76.i:                                 ; preds = %land.lhs.true25.i66.i.cond.false.i76.i_crit_edge, %land.lhs.true.i63.i.cond.false.i76.i_crit_edge, %if.end.i60.i.cond.false.i76.i_crit_edge
  %281 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx40.i73.i = getelementptr i32, ptr %282, i32 1
  %283 = ptrtoint ptr %arrayidx40.i73.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load i32, ptr %arrayidx40.i73.i, align 4
  %add41.i74.i = add i32 %284, 22603
  %call42.i75.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add41.i74.i, i32 noundef 0) #13
  br label %cond.end.i81.i

cond.end.i81.i:                                   ; preds = %cond.false.i76.i, %cond.true.i71.i
  %cond.i77.i = phi i32 [ %call36.i70.i, %cond.true.i71.i ], [ %call42.i75.i, %cond.false.i76.i ]
  %or.i78.i = or i32 %cond.i77.i, 1
  %285 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load i32, ptr %virt.i.i, align 8
  %and46.i79.i = and i32 %286, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46.i79.i)
  %tobool47.not.i80.i = icmp eq i32 %and46.i79.i, 0
  br i1 %tobool47.not.i80.i, label %cond.end.i81.i.cond.false68.i95.i_crit_edge, label %land.lhs.true48.i84.i

cond.end.i81.i.cond.false68.i95.i_crit_edge:      ; preds = %cond.end.i81.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i95.i

land.lhs.true48.i84.i:                            ; preds = %cond.end.i81.i
  %287 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %funcs82.i.i, align 4
  %tobool52.not.i83.i = icmp eq ptr %288, null
  br i1 %tobool52.not.i83.i, label %land.lhs.true48.i84.i.cond.false68.i95.i_crit_edge, label %land.lhs.true53.i87.i

land.lhs.true48.i84.i.cond.false68.i95.i_crit_edge: ; preds = %land.lhs.true48.i84.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i95.i

land.lhs.true53.i87.i:                            ; preds = %land.lhs.true48.i84.i
  %sriov_wreg.i85.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %288, i32 0, i32 12
  %289 = ptrtoint ptr %sriov_wreg.i85.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %sriov_wreg.i85.i, align 4
  %tobool57.not.i86.i = icmp eq ptr %290, null
  br i1 %tobool57.not.i86.i, label %land.lhs.true53.i87.i.cond.false68.i95.i_crit_edge, label %cond.true58.i91.i

land.lhs.true53.i87.i.cond.false68.i95.i_crit_edge: ; preds = %land.lhs.true53.i87.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i95.i

cond.true58.i91.i:                                ; preds = %land.lhs.true53.i87.i
  call void @__sanitizer_cov_trace_pc() #15
  %291 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx66.i89.i = getelementptr i32, ptr %292, i32 1
  %293 = ptrtoint ptr %arrayidx66.i89.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %arrayidx66.i89.i, align 4
  %add67.i90.i = add i32 %294, 22603
  tail call void %290(ptr noundef %adev, i32 noundef %add67.i90.i, i32 noundef %or.i78.i, i32 noundef 0, i32 noundef 1) #13
  br label %for.body.i101.i.preheader

cond.false68.i95.i:                               ; preds = %land.lhs.true53.i87.i.cond.false68.i95.i_crit_edge, %land.lhs.true48.i84.i.cond.false68.i95.i_crit_edge, %cond.end.i81.i.cond.false68.i95.i_crit_edge
  %295 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx72.i93.i = getelementptr i32, ptr %296, i32 1
  %297 = ptrtoint ptr %arrayidx72.i93.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %arrayidx72.i93.i, align 4
  %add73.i94.i = add i32 %298, 22603
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add73.i94.i, i32 noundef %or.i78.i, i32 noundef 0) #13
  br label %for.body.i101.i.preheader

for.body.i101.i.preheader:                        ; preds = %cond.false68.i95.i, %cond.true58.i91.i
  br label %for.body.i101.i

for.body.i101.i:                                  ; preds = %if.end113.i120.i.for.body.i101.i_crit_edge, %for.body.i101.i.preheader
  %i.0505.i.i = phi i32 [ %inc.i118.i, %if.end113.i120.i.for.body.i101.i_crit_edge ], [ 0, %for.body.i101.i.preheader ]
  %299 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load i32, ptr %virt.i.i, align 8
  %and77.i99.i = and i32 %300, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77.i99.i)
  %tobool78.not.i100.i = icmp eq i32 %and77.i99.i, 0
  br i1 %tobool78.not.i100.i, label %for.body.i101.i.cond.false101.i114.i_crit_edge, label %land.lhs.true79.i103.i

for.body.i101.i.cond.false101.i114.i_crit_edge:   ; preds = %for.body.i101.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i114.i

land.lhs.true79.i103.i:                           ; preds = %for.body.i101.i
  %301 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load ptr, ptr %funcs82.i.i, align 4
  %tobool83.not.i102.i = icmp eq ptr %302, null
  br i1 %tobool83.not.i102.i, label %land.lhs.true79.i103.i.cond.false101.i114.i_crit_edge, label %land.lhs.true84.i106.i

land.lhs.true79.i103.i.cond.false101.i114.i_crit_edge: ; preds = %land.lhs.true79.i103.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i114.i

land.lhs.true84.i106.i:                           ; preds = %land.lhs.true79.i103.i
  %sriov_rreg88.i104.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %302, i32 0, i32 13
  %303 = ptrtoint ptr %sriov_rreg88.i104.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load ptr, ptr %sriov_rreg88.i104.i, align 4
  %tobool89.not.i105.i = icmp eq ptr %304, null
  br i1 %tobool89.not.i105.i, label %land.lhs.true84.i106.i.cond.false101.i114.i_crit_edge, label %cond.true90.i110.i

land.lhs.true84.i106.i.cond.false101.i114.i_crit_edge: ; preds = %land.lhs.true84.i106.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i114.i

cond.true90.i110.i:                               ; preds = %land.lhs.true84.i106.i
  call void @__sanitizer_cov_trace_pc() #15
  %305 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx98.i107.i = getelementptr i32, ptr %306, i32 1
  %307 = ptrtoint ptr %arrayidx98.i107.i to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load i32, ptr %arrayidx98.i107.i, align 4
  %add99.i108.i = add i32 %308, 22603
  %call100.i109.i = tail call i32 %304(ptr noundef %adev, i32 noundef %add99.i108.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end108.i117.i

cond.false101.i114.i:                             ; preds = %land.lhs.true84.i106.i.cond.false101.i114.i_crit_edge, %land.lhs.true79.i103.i.cond.false101.i114.i_crit_edge, %for.body.i101.i.cond.false101.i114.i_crit_edge
  %309 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx105.i111.i = getelementptr i32, ptr %310, i32 1
  %311 = ptrtoint ptr %arrayidx105.i111.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %arrayidx105.i111.i, align 4
  %add106.i112.i = add i32 %312, 22603
  %call107.i113.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add106.i112.i, i32 noundef 0) #13
  br label %cond.end108.i117.i

cond.end108.i117.i:                               ; preds = %cond.false101.i114.i, %cond.true90.i110.i
  %cond109.i115.i = phi i32 [ %call100.i109.i, %cond.true90.i110.i ], [ %call107.i113.i, %cond.false101.i114.i ]
  %313 = and i32 %cond109.i115.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %313)
  %cmp111.not.i116.i = icmp eq i32 %313, 0
  br i1 %cmp111.not.i116.i, label %if.end113.i120.i, label %if.end120.i123.i

if.end113.i120.i:                                 ; preds = %cond.end108.i117.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %314 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %314(i32 noundef 214748) #13
  %inc.i118.i = add nuw nsw i32 %i.0505.i.i, 1
  %exitcond.not.i119.i = icmp eq i32 %inc.i118.i, 50000
  br i1 %exitcond.not.i119.i, label %do.end118.i121.i, label %if.end113.i120.i.for.body.i101.i_crit_edge

if.end113.i120.i.for.body.i101.i_crit_edge:       ; preds = %if.end113.i120.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i101.i

do.end118.i121.i:                                 ; preds = %if.end113.i120.i
  call void @__sanitizer_cov_trace_pc() #15
  %315 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %316, ptr noundef nonnull @.str.19) #16
  br label %do.end15.i

if.end120.i123.i:                                 ; preds = %cond.end108.i117.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %317 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %317)
  %cmp121.i122.i = icmp eq i32 %317, 1
  br i1 %cmp121.i122.i, label %if.then122.i125.i, label %if.end120.i123.i.if.end124.i128.i_crit_edge

if.end120.i123.i.if.end124.i128.i_crit_edge:      ; preds = %if.end120.i123.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end124.i128.i

if.then122.i125.i:                                ; preds = %if.end120.i123.i
  call void @__sanitizer_cov_trace_pc() #15
  %funcs123.i124.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 102, i32 1
  %318 = ptrtoint ptr %funcs123.i124.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %funcs123.i124.i, align 4
  %320 = ptrtoint ptr %319 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load ptr, ptr %319, align 4
  tail call void %321(ptr noundef %adev, ptr noundef null) #13
  br label %if.end124.i128.i

if.end124.i128.i:                                 ; preds = %if.then122.i125.i, %if.end120.i123.i.if.end124.i128.i_crit_edge
  %322 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load i32, ptr %virt.i.i, align 8
  %and127.i126.i = and i32 %323, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and127.i126.i)
  %tobool128.not.i127.i = icmp eq i32 %and127.i126.i, 0
  br i1 %tobool128.not.i127.i, label %if.end124.i128.i.cond.false151.i141.i_crit_edge, label %land.lhs.true129.i130.i

if.end124.i128.i.cond.false151.i141.i_crit_edge:  ; preds = %if.end124.i128.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i141.i

land.lhs.true129.i130.i:                          ; preds = %if.end124.i128.i
  %324 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %funcs82.i.i, align 4
  %tobool133.not.i129.i = icmp eq ptr %325, null
  br i1 %tobool133.not.i129.i, label %land.lhs.true129.i130.i.cond.false151.i141.i_crit_edge, label %land.lhs.true134.i133.i

land.lhs.true129.i130.i.cond.false151.i141.i_crit_edge: ; preds = %land.lhs.true129.i130.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i141.i

land.lhs.true134.i133.i:                          ; preds = %land.lhs.true129.i130.i
  %sriov_rreg138.i131.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %325, i32 0, i32 13
  %326 = ptrtoint ptr %sriov_rreg138.i131.i to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %sriov_rreg138.i131.i, align 4
  %tobool139.not.i132.i = icmp eq ptr %327, null
  br i1 %tobool139.not.i132.i, label %land.lhs.true134.i133.i.cond.false151.i141.i_crit_edge, label %cond.true140.i137.i

land.lhs.true134.i133.i.cond.false151.i141.i_crit_edge: ; preds = %land.lhs.true134.i133.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i141.i

cond.true140.i137.i:                              ; preds = %land.lhs.true134.i133.i
  call void @__sanitizer_cov_trace_pc() #15
  %328 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx148.i134.i = getelementptr i32, ptr %329, i32 1
  %330 = ptrtoint ptr %arrayidx148.i134.i to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load i32, ptr %arrayidx148.i134.i, align 4
  %add149.i135.i = add i32 %331, 22602
  %call150.i136.i = tail call i32 %327(ptr noundef %adev, i32 noundef %add149.i135.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end158.i144.i

cond.false151.i141.i:                             ; preds = %land.lhs.true134.i133.i.cond.false151.i141.i_crit_edge, %land.lhs.true129.i130.i.cond.false151.i141.i_crit_edge, %if.end124.i128.i.cond.false151.i141.i_crit_edge
  %332 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx155.i138.i = getelementptr i32, ptr %333, i32 1
  %334 = ptrtoint ptr %arrayidx155.i138.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load i32, ptr %arrayidx155.i138.i, align 4
  %add156.i139.i = add i32 %335, 22602
  %call157.i140.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add156.i139.i, i32 noundef 0) #13
  br label %cond.end158.i144.i

cond.end158.i144.i:                               ; preds = %cond.false151.i141.i, %cond.true140.i137.i
  %336 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load i32, ptr %virt.i.i, align 8
  %and170.i142.i = and i32 %337, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and170.i142.i)
  %tobool171.not.i143.i = icmp eq i32 %and170.i142.i, 0
  br i1 %tobool171.not.i143.i, label %cond.end158.i144.i.cond.false197.i.i_crit_edge, label %land.lhs.true172.i146.i

cond.end158.i144.i.cond.false197.i.i_crit_edge:   ; preds = %cond.end158.i144.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false197.i.i

land.lhs.true172.i146.i:                          ; preds = %cond.end158.i144.i
  %338 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load ptr, ptr %funcs82.i.i, align 4
  %tobool176.not.i145.i = icmp eq ptr %339, null
  br i1 %tobool176.not.i145.i, label %land.lhs.true172.i146.i.cond.false197.i.i_crit_edge, label %land.lhs.true177.i149.i

land.lhs.true172.i146.i.cond.false197.i.i_crit_edge: ; preds = %land.lhs.true172.i146.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false197.i.i

land.lhs.true177.i149.i:                          ; preds = %land.lhs.true172.i146.i
  %sriov_wreg181.i147.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %339, i32 0, i32 12
  %340 = ptrtoint ptr %sriov_wreg181.i147.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load ptr, ptr %sriov_wreg181.i147.i, align 4
  %tobool182.not.i148.i = icmp eq ptr %341, null
  br i1 %tobool182.not.i148.i, label %land.lhs.true177.i149.i.cond.false197.i.i_crit_edge, label %cond.true183.i153.i

land.lhs.true177.i149.i.cond.false197.i.i_crit_edge: ; preds = %land.lhs.true177.i149.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false197.i.i

cond.true183.i153.i:                              ; preds = %land.lhs.true177.i149.i
  call void @__sanitizer_cov_trace_pc() #15
  %342 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx191.i150.i = getelementptr i32, ptr %343, i32 1
  %344 = ptrtoint ptr %arrayidx191.i150.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %arrayidx191.i150.i, align 4
  %add192.i151.i = add i32 %345, 22600
  %346 = ptrtoint ptr %ce_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %346)
  %347 = load i64, ptr %ce_fw_gpu_addr.i.i, align 8
  %348 = trunc i64 %347 to i32
  %conv.i152.i = and i32 %348, -4096
  tail call void %341(ptr noundef %adev, i32 noundef %add192.i151.i, i32 noundef %conv.i152.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end208.i.i

cond.false197.i.i:                                ; preds = %land.lhs.true177.i149.i.cond.false197.i.i_crit_edge, %land.lhs.true172.i146.i.cond.false197.i.i_crit_edge, %cond.end158.i144.i.cond.false197.i.i_crit_edge
  %349 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx201.i.i = getelementptr i32, ptr %350, i32 1
  %351 = ptrtoint ptr %arrayidx201.i.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load i32, ptr %arrayidx201.i.i, align 4
  %add202.i.i = add i32 %352, 22600
  %353 = ptrtoint ptr %ce_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %353)
  %354 = load i64, ptr %ce_fw_gpu_addr.i.i, align 8
  %355 = trunc i64 %354 to i32
  %conv207.i.i = and i32 %355, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add202.i.i, i32 noundef %conv207.i.i, i32 noundef 0) #13
  br label %cond.end208.i.i

cond.end208.i.i:                                  ; preds = %cond.false197.i.i, %cond.true183.i153.i
  %356 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %virt.i.i, align 8
  %and211.i.i = and i32 %357, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and211.i.i)
  %tobool212.not.i.i = icmp eq i32 %and211.i.i, 0
  br i1 %tobool212.not.i.i, label %cond.end208.i.i.cond.false240.i.i_crit_edge, label %land.lhs.true213.i.i

cond.end208.i.i.cond.false240.i.i_crit_edge:      ; preds = %cond.end208.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false240.i.i

land.lhs.true213.i.i:                             ; preds = %cond.end208.i.i
  %358 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load ptr, ptr %funcs82.i.i, align 4
  %tobool217.not.i.i = icmp eq ptr %359, null
  br i1 %tobool217.not.i.i, label %land.lhs.true213.i.i.cond.false240.i.i_crit_edge, label %land.lhs.true218.i.i

land.lhs.true213.i.i.cond.false240.i.i_crit_edge: ; preds = %land.lhs.true213.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false240.i.i

land.lhs.true218.i.i:                             ; preds = %land.lhs.true213.i.i
  %sriov_wreg222.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %359, i32 0, i32 12
  %360 = ptrtoint ptr %sriov_wreg222.i.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load ptr, ptr %sriov_wreg222.i.i, align 4
  %tobool223.not.i.i = icmp eq ptr %361, null
  br i1 %tobool223.not.i.i, label %land.lhs.true218.i.i.cond.false240.i.i_crit_edge, label %cond.true224.i.i

land.lhs.true218.i.i.cond.false240.i.i_crit_edge: ; preds = %land.lhs.true218.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false240.i.i

cond.true224.i.i:                                 ; preds = %land.lhs.true218.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %362 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx232.i.i = getelementptr i32, ptr %363, i32 1
  %364 = ptrtoint ptr %arrayidx232.i.i to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load i32, ptr %arrayidx232.i.i, align 4
  %add233.i.i = add i32 %365, 22601
  %366 = ptrtoint ptr %ce_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %366)
  %367 = load i64, ptr %ce_fw_gpu_addr.i.i, align 8
  %shr237.i.i = lshr i64 %367, 32
  %conv239.i154.i = trunc i64 %shr237.i.i to i32
  tail call void %361(ptr noundef %adev, i32 noundef %add233.i.i, i32 noundef %conv239.i154.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end252.i.i

cond.false240.i.i:                                ; preds = %land.lhs.true218.i.i.cond.false240.i.i_crit_edge, %land.lhs.true213.i.i.cond.false240.i.i_crit_edge, %cond.end208.i.i.cond.false240.i.i_crit_edge
  %368 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx244.i.i = getelementptr i32, ptr %369, i32 1
  %370 = ptrtoint ptr %arrayidx244.i.i to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load i32, ptr %arrayidx244.i.i, align 4
  %add245.i.i = add i32 %371, 22601
  %372 = ptrtoint ptr %ce_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %372)
  %373 = load i64, ptr %ce_fw_gpu_addr.i.i, align 8
  %shr249.i.i = lshr i64 %373, 32
  %conv251.i.i = trunc i64 %shr249.i.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add245.i.i, i32 noundef %conv251.i.i, i32 noundef 0) #13
  br label %cond.end252.i.i

cond.end252.i.i:                                  ; preds = %cond.false240.i.i, %cond.true224.i.i
  %374 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %virt.i.i, align 8
  %and255.i.i = and i32 %375, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and255.i.i)
  %tobool256.not.i.i = icmp eq i32 %and255.i.i, 0
  br i1 %tobool256.not.i.i, label %cond.end252.i.i.cond.false278.i.i_crit_edge, label %land.lhs.true257.i.i

cond.end252.i.i.cond.false278.i.i_crit_edge:      ; preds = %cond.end252.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false278.i.i

land.lhs.true257.i.i:                             ; preds = %cond.end252.i.i
  %376 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load ptr, ptr %funcs82.i.i, align 4
  %tobool261.not.i.i = icmp eq ptr %377, null
  br i1 %tobool261.not.i.i, label %land.lhs.true257.i.i.cond.false278.i.i_crit_edge, label %land.lhs.true262.i.i

land.lhs.true257.i.i.cond.false278.i.i_crit_edge: ; preds = %land.lhs.true257.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false278.i.i

land.lhs.true262.i.i:                             ; preds = %land.lhs.true257.i.i
  %sriov_wreg266.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %377, i32 0, i32 12
  %378 = ptrtoint ptr %sriov_wreg266.i.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load ptr, ptr %sriov_wreg266.i.i, align 4
  %tobool267.not.i.i = icmp eq ptr %379, null
  br i1 %tobool267.not.i.i, label %land.lhs.true262.i.i.cond.false278.i.i_crit_edge, label %cond.true268.i.i

land.lhs.true262.i.i.cond.false278.i.i_crit_edge: ; preds = %land.lhs.true262.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false278.i.i

cond.true268.i.i:                                 ; preds = %land.lhs.true262.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %380 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx276.i155.i = getelementptr i32, ptr %381, i32 1
  %382 = ptrtoint ptr %arrayidx276.i155.i to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load i32, ptr %arrayidx276.i155.i, align 4
  %add277.i156.i = add i32 %383, 22552
  tail call void %379(ptr noundef %adev, i32 noundef %add277.i156.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end284.i158.i

cond.false278.i.i:                                ; preds = %land.lhs.true262.i.i.cond.false278.i.i_crit_edge, %land.lhs.true257.i.i.cond.false278.i.i_crit_edge, %cond.end252.i.i.cond.false278.i.i_crit_edge
  %384 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx282.i.i = getelementptr i32, ptr %385, i32 1
  %386 = ptrtoint ptr %arrayidx282.i.i to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load i32, ptr %arrayidx282.i.i, align 4
  %add283.i.i = add i32 %387, 22552
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add283.i.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end284.i158.i

cond.end284.i158.i:                               ; preds = %cond.false278.i.i, %cond.true268.i.i
  %jt_size.i157.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %243, i32 0, i32 3
  %388 = ptrtoint ptr %jt_size.i157.i to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %jt_size.i157.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %389)
  %cmp286506.not.i.i = icmp eq i32 %389, 0
  br i1 %cmp286506.not.i.i, label %cond.end284.i158.i.for.end330.i.i_crit_edge, label %for.body288.lr.ph.i.i

cond.end284.i158.i.for.end330.i.i_crit_edge:      ; preds = %cond.end284.i158.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end330.i.i

for.body288.lr.ph.i.i:                            ; preds = %cond.end284.i158.i
  %jt_offset.i159.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %243, i32 0, i32 2
  br label %for.body288.i.i

for.body288.i.i:                                  ; preds = %for.inc328.i.i.for.body288.i.i_crit_edge, %for.body288.lr.ph.i.i
  %i.1507.i.i = phi i32 [ 0, %for.body288.lr.ph.i.i ], [ %inc329.i.i, %for.inc328.i.i.for.body288.i.i_crit_edge ]
  %390 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load i32, ptr %virt.i.i, align 8
  %and291.i.i = and i32 %391, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and291.i.i)
  %tobool292.not.i.i = icmp eq i32 %and291.i.i, 0
  br i1 %tobool292.not.i.i, label %for.body288.i.i.cond.false317.i.i_crit_edge, label %land.lhs.true293.i.i

for.body288.i.i.cond.false317.i.i_crit_edge:      ; preds = %for.body288.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false317.i.i

land.lhs.true293.i.i:                             ; preds = %for.body288.i.i
  %392 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load ptr, ptr %funcs82.i.i, align 4
  %tobool297.not.i.i = icmp eq ptr %393, null
  br i1 %tobool297.not.i.i, label %land.lhs.true293.i.i.cond.false317.i.i_crit_edge, label %land.lhs.true298.i.i

land.lhs.true293.i.i.cond.false317.i.i_crit_edge: ; preds = %land.lhs.true293.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false317.i.i

land.lhs.true298.i.i:                             ; preds = %land.lhs.true293.i.i
  %sriov_wreg302.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %393, i32 0, i32 12
  %394 = ptrtoint ptr %sriov_wreg302.i.i to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load ptr, ptr %sriov_wreg302.i.i, align 4
  %tobool303.not.i.i = icmp eq ptr %395, null
  br i1 %tobool303.not.i.i, label %land.lhs.true298.i.i.cond.false317.i.i_crit_edge, label %cond.true304.i.i

land.lhs.true298.i.i.cond.false317.i.i_crit_edge: ; preds = %land.lhs.true298.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false317.i.i

cond.true304.i.i:                                 ; preds = %land.lhs.true298.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %396 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx312.i.i = getelementptr i32, ptr %397, i32 1
  %398 = ptrtoint ptr %arrayidx312.i.i to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load i32, ptr %arrayidx312.i.i, align 4
  %add313.i.i = add i32 %399, 22553
  %400 = ptrtoint ptr %jt_offset.i159.i to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load i32, ptr %jt_offset.i159.i, align 4
  %add.ptr314.i.i = getelementptr i32, ptr %add.ptr.i46.i, i32 %401
  %add.ptr315.i.i = getelementptr i32, ptr %add.ptr314.i.i, i32 %i.1507.i.i
  %402 = ptrtoint ptr %add.ptr315.i.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %add.ptr315.i.i, align 4
  %404 = tail call i32 @llvm.bswap.i32(i32 %403) #13
  tail call void %395(ptr noundef %adev, i32 noundef %add313.i.i, i32 noundef %404, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc328.i.i

cond.false317.i.i:                                ; preds = %land.lhs.true298.i.i.cond.false317.i.i_crit_edge, %land.lhs.true293.i.i.cond.false317.i.i_crit_edge, %for.body288.i.i.cond.false317.i.i_crit_edge
  %405 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %405)
  %406 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx321.i.i = getelementptr i32, ptr %406, i32 1
  %407 = ptrtoint ptr %arrayidx321.i.i to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load i32, ptr %arrayidx321.i.i, align 4
  %add322.i.i = add i32 %408, 22553
  %409 = ptrtoint ptr %jt_offset.i159.i to i32
  call void @__asan_load4_noabort(i32 %409)
  %410 = load i32, ptr %jt_offset.i159.i, align 4
  %add.ptr324.i.i = getelementptr i32, ptr %add.ptr.i46.i, i32 %410
  %add.ptr325.i.i = getelementptr i32, ptr %add.ptr324.i.i, i32 %i.1507.i.i
  %411 = ptrtoint ptr %add.ptr325.i.i to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load i32, ptr %add.ptr325.i.i, align 4
  %413 = tail call i32 @llvm.bswap.i32(i32 %412) #13
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add322.i.i, i32 noundef %413, i32 noundef 0) #13
  br label %for.inc328.i.i

for.inc328.i.i:                                   ; preds = %cond.false317.i.i, %cond.true304.i.i
  %inc329.i.i = add nuw i32 %i.1507.i.i, 1
  %414 = ptrtoint ptr %jt_size.i157.i to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load i32, ptr %jt_size.i157.i, align 4
  %cmp286.i.i = icmp ult i32 %inc329.i.i, %415
  br i1 %cmp286.i.i, label %for.inc328.i.i.for.body288.i.i_crit_edge, label %for.inc328.i.i.for.end330.i.i_crit_edge

for.inc328.i.i.for.end330.i.i_crit_edge:          ; preds = %for.inc328.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end330.i.i

for.inc328.i.i.for.body288.i.i_crit_edge:         ; preds = %for.inc328.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body288.i.i

for.end330.i.i:                                   ; preds = %for.inc328.i.i.for.end330.i.i_crit_edge, %cond.end284.i158.i.for.end330.i.i_crit_edge
  %416 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load i32, ptr %virt.i.i, align 8
  %and333.i.i = and i32 %417, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and333.i.i)
  %tobool334.not.i.i = icmp eq i32 %and333.i.i, 0
  br i1 %tobool334.not.i.i, label %for.end330.i.i.cond.false357.i.i_crit_edge, label %land.lhs.true335.i.i

for.end330.i.i.cond.false357.i.i_crit_edge:       ; preds = %for.end330.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false357.i.i

land.lhs.true335.i.i:                             ; preds = %for.end330.i.i
  %418 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load ptr, ptr %funcs82.i.i, align 4
  %tobool339.not.i.i = icmp eq ptr %419, null
  br i1 %tobool339.not.i.i, label %land.lhs.true335.i.i.cond.false357.i.i_crit_edge, label %land.lhs.true340.i.i

land.lhs.true335.i.i.cond.false357.i.i_crit_edge: ; preds = %land.lhs.true335.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false357.i.i

land.lhs.true340.i.i:                             ; preds = %land.lhs.true335.i.i
  %sriov_wreg344.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %419, i32 0, i32 12
  %420 = ptrtoint ptr %sriov_wreg344.i.i to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load ptr, ptr %sriov_wreg344.i.i, align 4
  %tobool345.not.i.i = icmp eq ptr %421, null
  br i1 %tobool345.not.i.i, label %land.lhs.true340.i.i.cond.false357.i.i_crit_edge, label %cond.true346.i.i

land.lhs.true340.i.i.cond.false357.i.i_crit_edge: ; preds = %land.lhs.true340.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false357.i.i

cond.true346.i.i:                                 ; preds = %land.lhs.true340.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %422 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx354.i.i = getelementptr i32, ptr %423, i32 1
  %424 = ptrtoint ptr %arrayidx354.i.i to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load i32, ptr %arrayidx354.i.i, align 4
  %add355.i.i = add i32 %425, 22552
  %ce_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 14
  %426 = ptrtoint ptr %ce_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load i32, ptr %ce_fw_version.i.i, align 8
  tail call void %421(ptr noundef %adev, i32 noundef %add355.i.i, i32 noundef %427, i32 noundef 0, i32 noundef 1) #13
  br label %if.end17.i

cond.false357.i.i:                                ; preds = %land.lhs.true340.i.i.cond.false357.i.i_crit_edge, %land.lhs.true335.i.i.cond.false357.i.i_crit_edge, %for.end330.i.i.cond.false357.i.i_crit_edge
  %428 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx361.i.i = getelementptr i32, ptr %429, i32 1
  %430 = ptrtoint ptr %arrayidx361.i.i to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %arrayidx361.i.i, align 4
  %add362.i.i = add i32 %431, 22552
  %ce_fw_version364.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 14
  %432 = ptrtoint ptr %ce_fw_version364.i.i to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load i32, ptr %ce_fw_version364.i.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add362.i.i, i32 noundef %433, i32 noundef 0) #13
  br label %if.end17.i

do.end15.i:                                       ; preds = %do.end118.i121.i, %do.end.i50.i
  %retval.0.i160.i = phi i32 [ %call.i48.i, %do.end.i50.i ], [ -22, %do.end118.i121.i ]
  %434 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %434)
  %435 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %435, ptr noundef nonnull @.str.86, i32 noundef %retval.0.i160.i) #16
  br label %cleanup

if.end17.i:                                       ; preds = %cond.false357.i.i, %cond.true346.i.i
  %436 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %436)
  %437 = load ptr, ptr %me_fw.i, align 4
  %data.i161.i = getelementptr inbounds %struct.firmware, ptr %437, i32 0, i32 1
  %438 = ptrtoint ptr %data.i161.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load ptr, ptr %data.i161.i, align 4
  tail call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %439) #13
  %440 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load ptr, ptr %me_fw.i, align 4
  %data3.i162.i = getelementptr inbounds %struct.firmware, ptr %441, i32 0, i32 1
  %442 = ptrtoint ptr %data3.i162.i to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load ptr, ptr %data3.i162.i, align 4
  %ucode_array_offset_bytes.i163.i = getelementptr inbounds %struct.common_firmware_header, ptr %439, i32 0, i32 8
  %444 = ptrtoint ptr %ucode_array_offset_bytes.i163.i to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load i32, ptr %ucode_array_offset_bytes.i163.i, align 4
  %446 = tail call i32 @llvm.bswap.i32(i32 %445) #13
  %add.ptr.i164.i = getelementptr i8, ptr %443, i32 %446
  %ucode_size_bytes.i165.i = getelementptr inbounds %struct.common_firmware_header, ptr %439, i32 0, i32 7
  %447 = ptrtoint ptr %ucode_size_bytes.i165.i to i32
  call void @__asan_load4_noabort(i32 %447)
  %448 = load i32, ptr %ucode_size_bytes.i165.i, align 4
  %me.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 5
  %me_fw_gpu_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 5, i32 1
  %me_fw_ptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 5, i32 2
  %call.i166.i = tail call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %448, i32 noundef 4096, i32 noundef 2, ptr noundef %me.i.i, ptr noundef %me_fw_gpu_addr.i.i, ptr noundef %me_fw_ptr.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i166.i)
  %tobool.not.i167.i = icmp eq i32 %call.i166.i, 0
  br i1 %tobool.not.i167.i, label %if.end.i178.i, label %do.end.i168.i

do.end.i168.i:                                    ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #15
  %449 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %449)
  %450 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %450, ptr noundef nonnull @.str.102, i32 noundef %call.i166.i) #16
  tail call void @amdgpu_bo_free_kernel(ptr noundef %me.i.i, ptr noundef %me_fw_gpu_addr.i.i, ptr noundef %me_fw_ptr.i.i) #13
  br label %do.end23.i

if.end.i178.i:                                    ; preds = %if.end17.i
  %451 = tail call i32 @llvm.bswap.i32(i32 %448) #13
  %452 = ptrtoint ptr %me_fw_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %452)
  %453 = load ptr, ptr %me_fw_ptr.i.i, align 8
  %454 = call ptr @memcpy(ptr %453, ptr %add.ptr.i164.i, i32 %451)
  %455 = ptrtoint ptr %me.i.i to i32
  call void @__asan_load4_noabort(i32 %455)
  %456 = load ptr, ptr %me.i.i, align 8
  tail call void @amdgpu_bo_kunmap(ptr noundef %456) #13
  %457 = ptrtoint ptr %me.i.i to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load ptr, ptr %me.i.i, align 8
  %tbo.i.i169.i = getelementptr inbounds %struct.amdgpu_bo, ptr %458, i32 0, i32 4
  %bdev.i.i.i.i170.i = getelementptr inbounds %struct.amdgpu_bo, ptr %458, i32 0, i32 4, i32 1
  %459 = ptrtoint ptr %bdev.i.i.i.i170.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load ptr, ptr %bdev.i.i.i.i170.i, align 8
  %lru_lock.i.i.i.i171.i = getelementptr inbounds %struct.ttm_device, ptr %460, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i171.i) #13
  %resource.i.i.i.i172.i = getelementptr inbounds %struct.amdgpu_bo, ptr %458, i32 0, i32 4, i32 6
  %461 = ptrtoint ptr %resource.i.i.i.i172.i to i32
  call void @__asan_load4_noabort(i32 %461)
  %462 = load ptr, ptr %resource.i.i.i.i172.i, align 4
  tail call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i169.i, ptr noundef %462, ptr noundef null) #13
  %463 = ptrtoint ptr %bdev.i.i.i.i170.i to i32
  call void @__asan_load4_noabort(i32 %463)
  %464 = load ptr, ptr %bdev.i.i.i.i170.i, align 8
  %lru_lock2.i.i.i.i173.i = getelementptr inbounds %struct.ttm_device, ptr %464, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i173.i) #13
  %resv.i.i.i174.i = getelementptr inbounds %struct.amdgpu_bo, ptr %458, i32 0, i32 4, i32 0, i32 9
  %465 = ptrtoint ptr %resv.i.i.i174.i to i32
  call void @__asan_load4_noabort(i32 %465)
  %466 = load ptr, ptr %resv.i.i.i174.i, align 8
  tail call void @dma_resv_reset_shared_max(ptr noundef %466) #13
  tail call void @ww_mutex_unlock(ptr noundef %466) #13
  %467 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %467)
  %468 = load i32, ptr %virt.i.i, align 8
  %and.i176.i = and i32 %468, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i176.i)
  %tobool22.not.i177.i = icmp eq i32 %and.i176.i, 0
  br i1 %tobool22.not.i177.i, label %if.end.i178.i.cond.false.i194.i_crit_edge, label %land.lhs.true.i181.i

if.end.i178.i.cond.false.i194.i_crit_edge:        ; preds = %if.end.i178.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i194.i

land.lhs.true.i181.i:                             ; preds = %if.end.i178.i
  %469 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %469)
  %470 = load ptr, ptr %funcs82.i.i, align 4
  %tobool24.not.i180.i = icmp eq ptr %470, null
  br i1 %tobool24.not.i180.i, label %land.lhs.true.i181.i.cond.false.i194.i_crit_edge, label %land.lhs.true25.i184.i

land.lhs.true.i181.i.cond.false.i194.i_crit_edge: ; preds = %land.lhs.true.i181.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i194.i

land.lhs.true25.i184.i:                           ; preds = %land.lhs.true.i181.i
  %sriov_rreg.i182.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %470, i32 0, i32 13
  %471 = ptrtoint ptr %sriov_rreg.i182.i to i32
  call void @__asan_load4_noabort(i32 %471)
  %472 = load ptr, ptr %sriov_rreg.i182.i, align 4
  %tobool29.not.i183.i = icmp eq ptr %472, null
  br i1 %tobool29.not.i183.i, label %land.lhs.true25.i184.i.cond.false.i194.i_crit_edge, label %cond.true.i189.i

land.lhs.true25.i184.i.cond.false.i194.i_crit_edge: ; preds = %land.lhs.true25.i184.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i194.i

cond.true.i189.i:                                 ; preds = %land.lhs.true25.i184.i
  call void @__sanitizer_cov_trace_pc() #15
  %473 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %473)
  %474 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx35.i186.i = getelementptr i32, ptr %474, i32 1
  %475 = ptrtoint ptr %arrayidx35.i186.i to i32
  call void @__asan_load4_noabort(i32 %475)
  %476 = load i32, ptr %arrayidx35.i186.i, align 4
  %add.i187.i = add i32 %476, 22599
  %call36.i188.i = tail call i32 %472(ptr noundef %adev, i32 noundef %add.i187.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i199.i

cond.false.i194.i:                                ; preds = %land.lhs.true25.i184.i.cond.false.i194.i_crit_edge, %land.lhs.true.i181.i.cond.false.i194.i_crit_edge, %if.end.i178.i.cond.false.i194.i_crit_edge
  %477 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %477)
  %478 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx40.i191.i = getelementptr i32, ptr %478, i32 1
  %479 = ptrtoint ptr %arrayidx40.i191.i to i32
  call void @__asan_load4_noabort(i32 %479)
  %480 = load i32, ptr %arrayidx40.i191.i, align 4
  %add41.i192.i = add i32 %480, 22599
  %call42.i193.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add41.i192.i, i32 noundef 0) #13
  br label %cond.end.i199.i

cond.end.i199.i:                                  ; preds = %cond.false.i194.i, %cond.true.i189.i
  %cond.i195.i = phi i32 [ %call36.i188.i, %cond.true.i189.i ], [ %call42.i193.i, %cond.false.i194.i ]
  %or.i196.i = or i32 %cond.i195.i, 1
  %481 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load i32, ptr %virt.i.i, align 8
  %and46.i197.i = and i32 %482, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46.i197.i)
  %tobool47.not.i198.i = icmp eq i32 %and46.i197.i, 0
  br i1 %tobool47.not.i198.i, label %cond.end.i199.i.cond.false68.i213.i_crit_edge, label %land.lhs.true48.i202.i

cond.end.i199.i.cond.false68.i213.i_crit_edge:    ; preds = %cond.end.i199.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i213.i

land.lhs.true48.i202.i:                           ; preds = %cond.end.i199.i
  %483 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load ptr, ptr %funcs82.i.i, align 4
  %tobool52.not.i201.i = icmp eq ptr %484, null
  br i1 %tobool52.not.i201.i, label %land.lhs.true48.i202.i.cond.false68.i213.i_crit_edge, label %land.lhs.true53.i205.i

land.lhs.true48.i202.i.cond.false68.i213.i_crit_edge: ; preds = %land.lhs.true48.i202.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i213.i

land.lhs.true53.i205.i:                           ; preds = %land.lhs.true48.i202.i
  %sriov_wreg.i203.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %484, i32 0, i32 12
  %485 = ptrtoint ptr %sriov_wreg.i203.i to i32
  call void @__asan_load4_noabort(i32 %485)
  %486 = load ptr, ptr %sriov_wreg.i203.i, align 4
  %tobool57.not.i204.i = icmp eq ptr %486, null
  br i1 %tobool57.not.i204.i, label %land.lhs.true53.i205.i.cond.false68.i213.i_crit_edge, label %cond.true58.i209.i

land.lhs.true53.i205.i.cond.false68.i213.i_crit_edge: ; preds = %land.lhs.true53.i205.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false68.i213.i

cond.true58.i209.i:                               ; preds = %land.lhs.true53.i205.i
  call void @__sanitizer_cov_trace_pc() #15
  %487 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %487)
  %488 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx66.i207.i = getelementptr i32, ptr %488, i32 1
  %489 = ptrtoint ptr %arrayidx66.i207.i to i32
  call void @__asan_load4_noabort(i32 %489)
  %490 = load i32, ptr %arrayidx66.i207.i, align 4
  %add67.i208.i = add i32 %490, 22599
  tail call void %486(ptr noundef %adev, i32 noundef %add67.i208.i, i32 noundef %or.i196.i, i32 noundef 0, i32 noundef 1) #13
  br label %for.body.i220.i.preheader

cond.false68.i213.i:                              ; preds = %land.lhs.true53.i205.i.cond.false68.i213.i_crit_edge, %land.lhs.true48.i202.i.cond.false68.i213.i_crit_edge, %cond.end.i199.i.cond.false68.i213.i_crit_edge
  %491 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %491)
  %492 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx72.i211.i = getelementptr i32, ptr %492, i32 1
  %493 = ptrtoint ptr %arrayidx72.i211.i to i32
  call void @__asan_load4_noabort(i32 %493)
  %494 = load i32, ptr %arrayidx72.i211.i, align 4
  %add73.i212.i = add i32 %494, 22599
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add73.i212.i, i32 noundef %or.i196.i, i32 noundef 0) #13
  br label %for.body.i220.i.preheader

for.body.i220.i.preheader:                        ; preds = %cond.false68.i213.i, %cond.true58.i209.i
  br label %for.body.i220.i

for.body.i220.i:                                  ; preds = %if.end113.i239.i.for.body.i220.i_crit_edge, %for.body.i220.i.preheader
  %i.0505.i217.i = phi i32 [ %inc.i237.i, %if.end113.i239.i.for.body.i220.i_crit_edge ], [ 0, %for.body.i220.i.preheader ]
  %495 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %495)
  %496 = load i32, ptr %virt.i.i, align 8
  %and77.i218.i = and i32 %496, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77.i218.i)
  %tobool78.not.i219.i = icmp eq i32 %and77.i218.i, 0
  br i1 %tobool78.not.i219.i, label %for.body.i220.i.cond.false101.i233.i_crit_edge, label %land.lhs.true79.i222.i

for.body.i220.i.cond.false101.i233.i_crit_edge:   ; preds = %for.body.i220.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i233.i

land.lhs.true79.i222.i:                           ; preds = %for.body.i220.i
  %497 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load ptr, ptr %funcs82.i.i, align 4
  %tobool83.not.i221.i = icmp eq ptr %498, null
  br i1 %tobool83.not.i221.i, label %land.lhs.true79.i222.i.cond.false101.i233.i_crit_edge, label %land.lhs.true84.i225.i

land.lhs.true79.i222.i.cond.false101.i233.i_crit_edge: ; preds = %land.lhs.true79.i222.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i233.i

land.lhs.true84.i225.i:                           ; preds = %land.lhs.true79.i222.i
  %sriov_rreg88.i223.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %498, i32 0, i32 13
  %499 = ptrtoint ptr %sriov_rreg88.i223.i to i32
  call void @__asan_load4_noabort(i32 %499)
  %500 = load ptr, ptr %sriov_rreg88.i223.i, align 4
  %tobool89.not.i224.i = icmp eq ptr %500, null
  br i1 %tobool89.not.i224.i, label %land.lhs.true84.i225.i.cond.false101.i233.i_crit_edge, label %cond.true90.i229.i

land.lhs.true84.i225.i.cond.false101.i233.i_crit_edge: ; preds = %land.lhs.true84.i225.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false101.i233.i

cond.true90.i229.i:                               ; preds = %land.lhs.true84.i225.i
  call void @__sanitizer_cov_trace_pc() #15
  %501 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %501)
  %502 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx98.i226.i = getelementptr i32, ptr %502, i32 1
  %503 = ptrtoint ptr %arrayidx98.i226.i to i32
  call void @__asan_load4_noabort(i32 %503)
  %504 = load i32, ptr %arrayidx98.i226.i, align 4
  %add99.i227.i = add i32 %504, 22599
  %call100.i228.i = tail call i32 %500(ptr noundef %adev, i32 noundef %add99.i227.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end108.i236.i

cond.false101.i233.i:                             ; preds = %land.lhs.true84.i225.i.cond.false101.i233.i_crit_edge, %land.lhs.true79.i222.i.cond.false101.i233.i_crit_edge, %for.body.i220.i.cond.false101.i233.i_crit_edge
  %505 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %505)
  %506 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx105.i230.i = getelementptr i32, ptr %506, i32 1
  %507 = ptrtoint ptr %arrayidx105.i230.i to i32
  call void @__asan_load4_noabort(i32 %507)
  %508 = load i32, ptr %arrayidx105.i230.i, align 4
  %add106.i231.i = add i32 %508, 22599
  %call107.i232.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add106.i231.i, i32 noundef 0) #13
  br label %cond.end108.i236.i

cond.end108.i236.i:                               ; preds = %cond.false101.i233.i, %cond.true90.i229.i
  %cond109.i234.i = phi i32 [ %call100.i228.i, %cond.true90.i229.i ], [ %call107.i232.i, %cond.false101.i233.i ]
  %509 = and i32 %cond109.i234.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %509)
  %cmp111.not.i235.i = icmp eq i32 %509, 0
  br i1 %cmp111.not.i235.i, label %if.end113.i239.i, label %if.end120.i242.i

if.end113.i239.i:                                 ; preds = %cond.end108.i236.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %510 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %510(i32 noundef 214748) #13
  %inc.i237.i = add nuw nsw i32 %i.0505.i217.i, 1
  %exitcond.not.i238.i = icmp eq i32 %inc.i237.i, 50000
  br i1 %exitcond.not.i238.i, label %do.end118.i240.i, label %if.end113.i239.i.for.body.i220.i_crit_edge

if.end113.i239.i.for.body.i220.i_crit_edge:       ; preds = %if.end113.i239.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i220.i

do.end118.i240.i:                                 ; preds = %if.end113.i239.i
  call void @__sanitizer_cov_trace_pc() #15
  %511 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %511)
  %512 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %512, ptr noundef nonnull @.str.19) #16
  br label %do.end23.i

if.end120.i242.i:                                 ; preds = %cond.end108.i236.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %513 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %513)
  %cmp121.i241.i = icmp eq i32 %513, 1
  br i1 %cmp121.i241.i, label %if.then122.i244.i, label %if.end120.i242.i.if.end124.i247.i_crit_edge

if.end120.i242.i.if.end124.i247.i_crit_edge:      ; preds = %if.end120.i242.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end124.i247.i

if.then122.i244.i:                                ; preds = %if.end120.i242.i
  call void @__sanitizer_cov_trace_pc() #15
  %funcs123.i243.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 102, i32 1
  %514 = ptrtoint ptr %funcs123.i243.i to i32
  call void @__asan_load4_noabort(i32 %514)
  %515 = load ptr, ptr %funcs123.i243.i, align 4
  %516 = ptrtoint ptr %515 to i32
  call void @__asan_load4_noabort(i32 %516)
  %517 = load ptr, ptr %515, align 4
  tail call void %517(ptr noundef %adev, ptr noundef null) #13
  br label %if.end124.i247.i

if.end124.i247.i:                                 ; preds = %if.then122.i244.i, %if.end120.i242.i.if.end124.i247.i_crit_edge
  %518 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %518)
  %519 = load i32, ptr %virt.i.i, align 8
  %and127.i245.i = and i32 %519, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and127.i245.i)
  %tobool128.not.i246.i = icmp eq i32 %and127.i245.i, 0
  br i1 %tobool128.not.i246.i, label %if.end124.i247.i.cond.false151.i260.i_crit_edge, label %land.lhs.true129.i249.i

if.end124.i247.i.cond.false151.i260.i_crit_edge:  ; preds = %if.end124.i247.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i260.i

land.lhs.true129.i249.i:                          ; preds = %if.end124.i247.i
  %520 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %520)
  %521 = load ptr, ptr %funcs82.i.i, align 4
  %tobool133.not.i248.i = icmp eq ptr %521, null
  br i1 %tobool133.not.i248.i, label %land.lhs.true129.i249.i.cond.false151.i260.i_crit_edge, label %land.lhs.true134.i252.i

land.lhs.true129.i249.i.cond.false151.i260.i_crit_edge: ; preds = %land.lhs.true129.i249.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i260.i

land.lhs.true134.i252.i:                          ; preds = %land.lhs.true129.i249.i
  %sriov_rreg138.i250.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %521, i32 0, i32 13
  %522 = ptrtoint ptr %sriov_rreg138.i250.i to i32
  call void @__asan_load4_noabort(i32 %522)
  %523 = load ptr, ptr %sriov_rreg138.i250.i, align 4
  %tobool139.not.i251.i = icmp eq ptr %523, null
  br i1 %tobool139.not.i251.i, label %land.lhs.true134.i252.i.cond.false151.i260.i_crit_edge, label %cond.true140.i256.i

land.lhs.true134.i252.i.cond.false151.i260.i_crit_edge: ; preds = %land.lhs.true134.i252.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false151.i260.i

cond.true140.i256.i:                              ; preds = %land.lhs.true134.i252.i
  call void @__sanitizer_cov_trace_pc() #15
  %524 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %524)
  %525 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx148.i253.i = getelementptr i32, ptr %525, i32 1
  %526 = ptrtoint ptr %arrayidx148.i253.i to i32
  call void @__asan_load4_noabort(i32 %526)
  %527 = load i32, ptr %arrayidx148.i253.i, align 4
  %add149.i254.i = add i32 %527, 22598
  %call150.i255.i = tail call i32 %523(ptr noundef %adev, i32 noundef %add149.i254.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end158.i263.i

cond.false151.i260.i:                             ; preds = %land.lhs.true134.i252.i.cond.false151.i260.i_crit_edge, %land.lhs.true129.i249.i.cond.false151.i260.i_crit_edge, %if.end124.i247.i.cond.false151.i260.i_crit_edge
  %528 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %528)
  %529 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx155.i257.i = getelementptr i32, ptr %529, i32 1
  %530 = ptrtoint ptr %arrayidx155.i257.i to i32
  call void @__asan_load4_noabort(i32 %530)
  %531 = load i32, ptr %arrayidx155.i257.i, align 4
  %add156.i258.i = add i32 %531, 22598
  %call157.i259.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add156.i258.i, i32 noundef 0) #13
  br label %cond.end158.i263.i

cond.end158.i263.i:                               ; preds = %cond.false151.i260.i, %cond.true140.i256.i
  %532 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load i32, ptr %virt.i.i, align 8
  %and170.i261.i = and i32 %533, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and170.i261.i)
  %tobool171.not.i262.i = icmp eq i32 %and170.i261.i, 0
  br i1 %tobool171.not.i262.i, label %cond.end158.i263.i.cond.false197.i276.i_crit_edge, label %land.lhs.true172.i265.i

cond.end158.i263.i.cond.false197.i276.i_crit_edge: ; preds = %cond.end158.i263.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false197.i276.i

land.lhs.true172.i265.i:                          ; preds = %cond.end158.i263.i
  %534 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load ptr, ptr %funcs82.i.i, align 4
  %tobool176.not.i264.i = icmp eq ptr %535, null
  br i1 %tobool176.not.i264.i, label %land.lhs.true172.i265.i.cond.false197.i276.i_crit_edge, label %land.lhs.true177.i268.i

land.lhs.true172.i265.i.cond.false197.i276.i_crit_edge: ; preds = %land.lhs.true172.i265.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false197.i276.i

land.lhs.true177.i268.i:                          ; preds = %land.lhs.true172.i265.i
  %sriov_wreg181.i266.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %535, i32 0, i32 12
  %536 = ptrtoint ptr %sriov_wreg181.i266.i to i32
  call void @__asan_load4_noabort(i32 %536)
  %537 = load ptr, ptr %sriov_wreg181.i266.i, align 4
  %tobool182.not.i267.i = icmp eq ptr %537, null
  br i1 %tobool182.not.i267.i, label %land.lhs.true177.i268.i.cond.false197.i276.i_crit_edge, label %cond.true183.i272.i

land.lhs.true177.i268.i.cond.false197.i276.i_crit_edge: ; preds = %land.lhs.true177.i268.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false197.i276.i

cond.true183.i272.i:                              ; preds = %land.lhs.true177.i268.i
  call void @__sanitizer_cov_trace_pc() #15
  %538 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx191.i269.i = getelementptr i32, ptr %539, i32 1
  %540 = ptrtoint ptr %arrayidx191.i269.i to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load i32, ptr %arrayidx191.i269.i, align 4
  %add192.i270.i = add i32 %541, 22596
  %542 = ptrtoint ptr %me_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %542)
  %543 = load i64, ptr %me_fw_gpu_addr.i.i, align 8
  %544 = trunc i64 %543 to i32
  %conv.i271.i = and i32 %544, -4096
  tail call void %537(ptr noundef %adev, i32 noundef %add192.i270.i, i32 noundef %conv.i271.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end208.i279.i

cond.false197.i276.i:                             ; preds = %land.lhs.true177.i268.i.cond.false197.i276.i_crit_edge, %land.lhs.true172.i265.i.cond.false197.i276.i_crit_edge, %cond.end158.i263.i.cond.false197.i276.i_crit_edge
  %545 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %545)
  %546 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx201.i273.i = getelementptr i32, ptr %546, i32 1
  %547 = ptrtoint ptr %arrayidx201.i273.i to i32
  call void @__asan_load4_noabort(i32 %547)
  %548 = load i32, ptr %arrayidx201.i273.i, align 4
  %add202.i274.i = add i32 %548, 22596
  %549 = ptrtoint ptr %me_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %549)
  %550 = load i64, ptr %me_fw_gpu_addr.i.i, align 8
  %551 = trunc i64 %550 to i32
  %conv207.i275.i = and i32 %551, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add202.i274.i, i32 noundef %conv207.i275.i, i32 noundef 0) #13
  br label %cond.end208.i279.i

cond.end208.i279.i:                               ; preds = %cond.false197.i276.i, %cond.true183.i272.i
  %552 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load i32, ptr %virt.i.i, align 8
  %and211.i277.i = and i32 %553, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and211.i277.i)
  %tobool212.not.i278.i = icmp eq i32 %and211.i277.i, 0
  br i1 %tobool212.not.i278.i, label %cond.end208.i279.i.cond.false240.i294.i_crit_edge, label %land.lhs.true213.i281.i

cond.end208.i279.i.cond.false240.i294.i_crit_edge: ; preds = %cond.end208.i279.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false240.i294.i

land.lhs.true213.i281.i:                          ; preds = %cond.end208.i279.i
  %554 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %554)
  %555 = load ptr, ptr %funcs82.i.i, align 4
  %tobool217.not.i280.i = icmp eq ptr %555, null
  br i1 %tobool217.not.i280.i, label %land.lhs.true213.i281.i.cond.false240.i294.i_crit_edge, label %land.lhs.true218.i284.i

land.lhs.true213.i281.i.cond.false240.i294.i_crit_edge: ; preds = %land.lhs.true213.i281.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false240.i294.i

land.lhs.true218.i284.i:                          ; preds = %land.lhs.true213.i281.i
  %sriov_wreg222.i282.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %555, i32 0, i32 12
  %556 = ptrtoint ptr %sriov_wreg222.i282.i to i32
  call void @__asan_load4_noabort(i32 %556)
  %557 = load ptr, ptr %sriov_wreg222.i282.i, align 4
  %tobool223.not.i283.i = icmp eq ptr %557, null
  br i1 %tobool223.not.i283.i, label %land.lhs.true218.i284.i.cond.false240.i294.i_crit_edge, label %cond.true224.i289.i

land.lhs.true218.i284.i.cond.false240.i294.i_crit_edge: ; preds = %land.lhs.true218.i284.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false240.i294.i

cond.true224.i289.i:                              ; preds = %land.lhs.true218.i284.i
  call void @__sanitizer_cov_trace_pc() #15
  %558 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %558)
  %559 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx232.i285.i = getelementptr i32, ptr %559, i32 1
  %560 = ptrtoint ptr %arrayidx232.i285.i to i32
  call void @__asan_load4_noabort(i32 %560)
  %561 = load i32, ptr %arrayidx232.i285.i, align 4
  %add233.i286.i = add i32 %561, 22597
  %562 = ptrtoint ptr %me_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %562)
  %563 = load i64, ptr %me_fw_gpu_addr.i.i, align 8
  %shr237.i287.i = lshr i64 %563, 32
  %conv239.i288.i = trunc i64 %shr237.i287.i to i32
  tail call void %557(ptr noundef %adev, i32 noundef %add233.i286.i, i32 noundef %conv239.i288.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end252.i297.i

cond.false240.i294.i:                             ; preds = %land.lhs.true218.i284.i.cond.false240.i294.i_crit_edge, %land.lhs.true213.i281.i.cond.false240.i294.i_crit_edge, %cond.end208.i279.i.cond.false240.i294.i_crit_edge
  %564 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx244.i290.i = getelementptr i32, ptr %565, i32 1
  %566 = ptrtoint ptr %arrayidx244.i290.i to i32
  call void @__asan_load4_noabort(i32 %566)
  %567 = load i32, ptr %arrayidx244.i290.i, align 4
  %add245.i291.i = add i32 %567, 22597
  %568 = ptrtoint ptr %me_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %568)
  %569 = load i64, ptr %me_fw_gpu_addr.i.i, align 8
  %shr249.i292.i = lshr i64 %569, 32
  %conv251.i293.i = trunc i64 %shr249.i292.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add245.i291.i, i32 noundef %conv251.i293.i, i32 noundef 0) #13
  br label %cond.end252.i297.i

cond.end252.i297.i:                               ; preds = %cond.false240.i294.i, %cond.true224.i289.i
  %570 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load i32, ptr %virt.i.i, align 8
  %and255.i295.i = and i32 %571, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and255.i295.i)
  %tobool256.not.i296.i = icmp eq i32 %and255.i295.i, 0
  br i1 %tobool256.not.i296.i, label %cond.end252.i297.i.cond.false278.i308.i_crit_edge, label %land.lhs.true257.i299.i

cond.end252.i297.i.cond.false278.i308.i_crit_edge: ; preds = %cond.end252.i297.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false278.i308.i

land.lhs.true257.i299.i:                          ; preds = %cond.end252.i297.i
  %572 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %572)
  %573 = load ptr, ptr %funcs82.i.i, align 4
  %tobool261.not.i298.i = icmp eq ptr %573, null
  br i1 %tobool261.not.i298.i, label %land.lhs.true257.i299.i.cond.false278.i308.i_crit_edge, label %land.lhs.true262.i302.i

land.lhs.true257.i299.i.cond.false278.i308.i_crit_edge: ; preds = %land.lhs.true257.i299.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false278.i308.i

land.lhs.true262.i302.i:                          ; preds = %land.lhs.true257.i299.i
  %sriov_wreg266.i300.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %573, i32 0, i32 12
  %574 = ptrtoint ptr %sriov_wreg266.i300.i to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load ptr, ptr %sriov_wreg266.i300.i, align 4
  %tobool267.not.i301.i = icmp eq ptr %575, null
  br i1 %tobool267.not.i301.i, label %land.lhs.true262.i302.i.cond.false278.i308.i_crit_edge, label %cond.true268.i305.i

land.lhs.true262.i302.i.cond.false278.i308.i_crit_edge: ; preds = %land.lhs.true262.i302.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false278.i308.i

cond.true268.i305.i:                              ; preds = %land.lhs.true262.i302.i
  call void @__sanitizer_cov_trace_pc() #15
  %576 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx276.i303.i = getelementptr i32, ptr %577, i32 1
  %578 = ptrtoint ptr %arrayidx276.i303.i to i32
  call void @__asan_load4_noabort(i32 %578)
  %579 = load i32, ptr %arrayidx276.i303.i, align 4
  %add277.i304.i = add i32 %579, 22550
  tail call void %575(ptr noundef %adev, i32 noundef %add277.i304.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end284.i311.i

cond.false278.i308.i:                             ; preds = %land.lhs.true262.i302.i.cond.false278.i308.i_crit_edge, %land.lhs.true257.i299.i.cond.false278.i308.i_crit_edge, %cond.end252.i297.i.cond.false278.i308.i_crit_edge
  %580 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %580)
  %581 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx282.i306.i = getelementptr i32, ptr %581, i32 1
  %582 = ptrtoint ptr %arrayidx282.i306.i to i32
  call void @__asan_load4_noabort(i32 %582)
  %583 = load i32, ptr %arrayidx282.i306.i, align 4
  %add283.i307.i = add i32 %583, 22550
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add283.i307.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end284.i311.i

cond.end284.i311.i:                               ; preds = %cond.false278.i308.i, %cond.true268.i305.i
  %jt_size.i309.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %439, i32 0, i32 3
  %584 = ptrtoint ptr %jt_size.i309.i to i32
  call void @__asan_load4_noabort(i32 %584)
  %585 = load i32, ptr %jt_size.i309.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %585)
  %cmp286506.not.i310.i = icmp eq i32 %585, 0
  br i1 %cmp286506.not.i310.i, label %cond.end284.i311.i.for.end330.i338.i_crit_edge, label %for.body288.lr.ph.i313.i

cond.end284.i311.i.for.end330.i338.i_crit_edge:   ; preds = %cond.end284.i311.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end330.i338.i

for.body288.lr.ph.i313.i:                         ; preds = %cond.end284.i311.i
  %jt_offset.i312.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %439, i32 0, i32 2
  br label %for.body288.i317.i

for.body288.i317.i:                               ; preds = %for.inc328.i335.i.for.body288.i317.i_crit_edge, %for.body288.lr.ph.i313.i
  %i.1507.i314.i = phi i32 [ 0, %for.body288.lr.ph.i313.i ], [ %inc329.i333.i, %for.inc328.i335.i.for.body288.i317.i_crit_edge ]
  %586 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %586)
  %587 = load i32, ptr %virt.i.i, align 8
  %and291.i315.i = and i32 %587, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and291.i315.i)
  %tobool292.not.i316.i = icmp eq i32 %and291.i315.i, 0
  br i1 %tobool292.not.i316.i, label %for.body288.i317.i.cond.false317.i332.i_crit_edge, label %land.lhs.true293.i319.i

for.body288.i317.i.cond.false317.i332.i_crit_edge: ; preds = %for.body288.i317.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false317.i332.i

land.lhs.true293.i319.i:                          ; preds = %for.body288.i317.i
  %588 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %588)
  %589 = load ptr, ptr %funcs82.i.i, align 4
  %tobool297.not.i318.i = icmp eq ptr %589, null
  br i1 %tobool297.not.i318.i, label %land.lhs.true293.i319.i.cond.false317.i332.i_crit_edge, label %land.lhs.true298.i322.i

land.lhs.true293.i319.i.cond.false317.i332.i_crit_edge: ; preds = %land.lhs.true293.i319.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false317.i332.i

land.lhs.true298.i322.i:                          ; preds = %land.lhs.true293.i319.i
  %sriov_wreg302.i320.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %589, i32 0, i32 12
  %590 = ptrtoint ptr %sriov_wreg302.i320.i to i32
  call void @__asan_load4_noabort(i32 %590)
  %591 = load ptr, ptr %sriov_wreg302.i320.i, align 4
  %tobool303.not.i321.i = icmp eq ptr %591, null
  br i1 %tobool303.not.i321.i, label %land.lhs.true298.i322.i.cond.false317.i332.i_crit_edge, label %cond.true304.i327.i

land.lhs.true298.i322.i.cond.false317.i332.i_crit_edge: ; preds = %land.lhs.true298.i322.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false317.i332.i

cond.true304.i327.i:                              ; preds = %land.lhs.true298.i322.i
  call void @__sanitizer_cov_trace_pc() #15
  %592 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %592)
  %593 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx312.i323.i = getelementptr i32, ptr %593, i32 1
  %594 = ptrtoint ptr %arrayidx312.i323.i to i32
  call void @__asan_load4_noabort(i32 %594)
  %595 = load i32, ptr %arrayidx312.i323.i, align 4
  %add313.i324.i = add i32 %595, 22551
  %596 = ptrtoint ptr %jt_offset.i312.i to i32
  call void @__asan_load4_noabort(i32 %596)
  %597 = load i32, ptr %jt_offset.i312.i, align 4
  %add.ptr314.i325.i = getelementptr i32, ptr %add.ptr.i164.i, i32 %597
  %add.ptr315.i326.i = getelementptr i32, ptr %add.ptr314.i325.i, i32 %i.1507.i314.i
  %598 = ptrtoint ptr %add.ptr315.i326.i to i32
  call void @__asan_load4_noabort(i32 %598)
  %599 = load i32, ptr %add.ptr315.i326.i, align 4
  %600 = tail call i32 @llvm.bswap.i32(i32 %599) #13
  tail call void %591(ptr noundef %adev, i32 noundef %add313.i324.i, i32 noundef %600, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc328.i335.i

cond.false317.i332.i:                             ; preds = %land.lhs.true298.i322.i.cond.false317.i332.i_crit_edge, %land.lhs.true293.i319.i.cond.false317.i332.i_crit_edge, %for.body288.i317.i.cond.false317.i332.i_crit_edge
  %601 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %601)
  %602 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx321.i328.i = getelementptr i32, ptr %602, i32 1
  %603 = ptrtoint ptr %arrayidx321.i328.i to i32
  call void @__asan_load4_noabort(i32 %603)
  %604 = load i32, ptr %arrayidx321.i328.i, align 4
  %add322.i329.i = add i32 %604, 22551
  %605 = ptrtoint ptr %jt_offset.i312.i to i32
  call void @__asan_load4_noabort(i32 %605)
  %606 = load i32, ptr %jt_offset.i312.i, align 4
  %add.ptr324.i330.i = getelementptr i32, ptr %add.ptr.i164.i, i32 %606
  %add.ptr325.i331.i = getelementptr i32, ptr %add.ptr324.i330.i, i32 %i.1507.i314.i
  %607 = ptrtoint ptr %add.ptr325.i331.i to i32
  call void @__asan_load4_noabort(i32 %607)
  %608 = load i32, ptr %add.ptr325.i331.i, align 4
  %609 = tail call i32 @llvm.bswap.i32(i32 %608) #13
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add322.i329.i, i32 noundef %609, i32 noundef 0) #13
  br label %for.inc328.i335.i

for.inc328.i335.i:                                ; preds = %cond.false317.i332.i, %cond.true304.i327.i
  %inc329.i333.i = add nuw i32 %i.1507.i314.i, 1
  %610 = ptrtoint ptr %jt_size.i309.i to i32
  call void @__asan_load4_noabort(i32 %610)
  %611 = load i32, ptr %jt_size.i309.i, align 4
  %cmp286.i334.i = icmp ult i32 %inc329.i333.i, %611
  br i1 %cmp286.i334.i, label %for.inc328.i335.i.for.body288.i317.i_crit_edge, label %for.inc328.i335.i.for.end330.i338.i_crit_edge

for.inc328.i335.i.for.end330.i338.i_crit_edge:    ; preds = %for.inc328.i335.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end330.i338.i

for.inc328.i335.i.for.body288.i317.i_crit_edge:   ; preds = %for.inc328.i335.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body288.i317.i

for.end330.i338.i:                                ; preds = %for.inc328.i335.i.for.end330.i338.i_crit_edge, %cond.end284.i311.i.for.end330.i338.i_crit_edge
  %612 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %612)
  %613 = load i32, ptr %virt.i.i, align 8
  %and333.i336.i = and i32 %613, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and333.i336.i)
  %tobool334.not.i337.i = icmp eq i32 %and333.i336.i, 0
  br i1 %tobool334.not.i337.i, label %for.end330.i338.i.cond.false357.i349.i_crit_edge, label %land.lhs.true335.i340.i

for.end330.i338.i.cond.false357.i349.i_crit_edge: ; preds = %for.end330.i338.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false357.i349.i

land.lhs.true335.i340.i:                          ; preds = %for.end330.i338.i
  %614 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %614)
  %615 = load ptr, ptr %funcs82.i.i, align 4
  %tobool339.not.i339.i = icmp eq ptr %615, null
  br i1 %tobool339.not.i339.i, label %land.lhs.true335.i340.i.cond.false357.i349.i_crit_edge, label %land.lhs.true340.i343.i

land.lhs.true335.i340.i.cond.false357.i349.i_crit_edge: ; preds = %land.lhs.true335.i340.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false357.i349.i

land.lhs.true340.i343.i:                          ; preds = %land.lhs.true335.i340.i
  %sriov_wreg344.i341.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %615, i32 0, i32 12
  %616 = ptrtoint ptr %sriov_wreg344.i341.i to i32
  call void @__asan_load4_noabort(i32 %616)
  %617 = load ptr, ptr %sriov_wreg344.i341.i, align 4
  %tobool345.not.i342.i = icmp eq ptr %617, null
  br i1 %tobool345.not.i342.i, label %land.lhs.true340.i343.i.cond.false357.i349.i_crit_edge, label %cond.true346.i346.i

land.lhs.true340.i343.i.cond.false357.i349.i_crit_edge: ; preds = %land.lhs.true340.i343.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false357.i349.i

cond.true346.i346.i:                              ; preds = %land.lhs.true340.i343.i
  call void @__sanitizer_cov_trace_pc() #15
  %618 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %618)
  %619 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx354.i344.i = getelementptr i32, ptr %619, i32 1
  %620 = ptrtoint ptr %arrayidx354.i344.i to i32
  call void @__asan_load4_noabort(i32 %620)
  %621 = load i32, ptr %arrayidx354.i344.i, align 4
  %add355.i345.i = add i32 %621, 22550
  %me_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %622 = ptrtoint ptr %me_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %622)
  %623 = load i32, ptr %me_fw_version.i.i, align 8
  tail call void %617(ptr noundef %adev, i32 noundef %add355.i345.i, i32 noundef %623, i32 noundef 0, i32 noundef 1) #13
  br label %if.end4

cond.false357.i349.i:                             ; preds = %land.lhs.true340.i343.i.cond.false357.i349.i_crit_edge, %land.lhs.true335.i340.i.cond.false357.i349.i_crit_edge, %for.end330.i338.i.cond.false357.i349.i_crit_edge
  %624 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %624)
  %625 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx361.i347.i = getelementptr i32, ptr %625, i32 1
  %626 = ptrtoint ptr %arrayidx361.i347.i to i32
  call void @__asan_load4_noabort(i32 %626)
  %627 = load i32, ptr %arrayidx361.i347.i, align 4
  %add362.i348.i = add i32 %627, 22550
  %me_fw_version364.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %628 = ptrtoint ptr %me_fw_version364.i.i to i32
  call void @__asan_load4_noabort(i32 %628)
  %629 = load i32, ptr %me_fw_version364.i.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add362.i348.i, i32 noundef %629, i32 noundef 0) #13
  br label %if.end4

do.end23.i:                                       ; preds = %do.end118.i240.i, %do.end.i168.i
  %retval.0.i350.i = phi i32 [ %call.i166.i, %do.end.i168.i ], [ -22, %do.end118.i240.i ]
  %630 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %630)
  %631 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %631, ptr noundef nonnull @.str.89, i32 noundef %retval.0.i350.i) #16
  br label %cleanup

if.end4:                                          ; preds = %cond.false357.i349.i, %cond.true346.i346.i
  %mec_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 17
  %632 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %632)
  %633 = load ptr, ptr %mec_fw.i, align 4
  %tobool.not.i84 = icmp eq ptr %633, null
  br i1 %tobool.not.i84, label %if.end4.cleanup_crit_edge, label %if.end.i87

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i87:                                       ; preds = %if.end4
  tail call fastcc void @gfx_v10_0_cp_compute_enable(ptr noundef %adev, i1 noundef zeroext false) #13
  %634 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %634)
  %635 = load ptr, ptr %mec_fw.i, align 4
  %data.i = getelementptr inbounds %struct.firmware, ptr %635, i32 0, i32 1
  %636 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %636)
  %637 = load ptr, ptr %data.i, align 4
  tail call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %637) #13
  %638 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %638)
  %639 = load ptr, ptr %mec_fw.i, align 4
  %data5.i = getelementptr inbounds %struct.firmware, ptr %639, i32 0, i32 1
  %640 = ptrtoint ptr %data5.i to i32
  call void @__asan_load4_noabort(i32 %640)
  %641 = load ptr, ptr %data5.i, align 4
  %ucode_array_offset_bytes.i = getelementptr inbounds %struct.common_firmware_header, ptr %637, i32 0, i32 8
  %642 = ptrtoint ptr %ucode_array_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %642)
  %643 = load i32, ptr %ucode_array_offset_bytes.i, align 4
  %644 = tail call i32 @llvm.bswap.i32(i32 %643) #13
  %add.ptr.i = getelementptr i8, ptr %641, i32 %644
  %645 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %645)
  %646 = load i32, ptr %virt.i.i, align 8
  %and.i86 = and i32 %646, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i86)
  %tobool7.not.i = icmp eq i32 %and.i86, 0
  br i1 %tobool7.not.i, label %if.end.i87.cond.false.i88_crit_edge, label %land.lhs.true.i

if.end.i87.cond.false.i88_crit_edge:              ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i88

land.lhs.true.i:                                  ; preds = %if.end.i87
  %647 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %647)
  %648 = load ptr, ptr %funcs82.i.i, align 4
  %tobool9.not.i = icmp eq ptr %648, null
  br i1 %tobool9.not.i, label %land.lhs.true.i.cond.false.i88_crit_edge, label %land.lhs.true10.i

land.lhs.true.i.cond.false.i88_crit_edge:         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i88

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %648, i32 0, i32 13
  %649 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %649)
  %650 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool14.not.i = icmp eq ptr %650, null
  br i1 %tobool14.not.i, label %land.lhs.true10.i.cond.false.i88_crit_edge, label %cond.true.i

land.lhs.true10.i.cond.false.i88_crit_edge:       ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i88

cond.true.i:                                      ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #15
  %651 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %651)
  %652 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx20.i = getelementptr i32, ptr %652, i32 1
  %653 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_load4_noabort(i32 %653)
  %654 = load i32, ptr %arrayidx20.i, align 4
  %add.i = add i32 %654, 22607
  %call.i = tail call i32 %650(ptr noundef %adev, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i

cond.false.i88:                                   ; preds = %land.lhs.true10.i.cond.false.i88_crit_edge, %land.lhs.true.i.cond.false.i88_crit_edge, %if.end.i87.cond.false.i88_crit_edge
  %655 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %655)
  %656 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx24.i = getelementptr i32, ptr %656, i32 1
  %657 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %657)
  %658 = load i32, ptr %arrayidx24.i, align 4
  %add25.i = add i32 %658, 22607
  %call26.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add25.i, i32 noundef 0) #13
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i88, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call26.i, %cond.false.i88 ]
  %or.i = or i32 %cond.i, 1
  %659 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %659)
  %660 = load i32, ptr %virt.i.i, align 8
  %and30.i = and i32 %660, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30.i)
  %tobool31.not.i = icmp eq i32 %and30.i, 0
  br i1 %tobool31.not.i, label %cond.end.i.cond.false52.i_crit_edge, label %land.lhs.true32.i

cond.end.i.cond.false52.i_crit_edge:              ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52.i

land.lhs.true32.i:                                ; preds = %cond.end.i
  %661 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %661)
  %662 = load ptr, ptr %funcs82.i.i, align 4
  %tobool36.not.i = icmp eq ptr %662, null
  br i1 %tobool36.not.i, label %land.lhs.true32.i.cond.false52.i_crit_edge, label %land.lhs.true37.i

land.lhs.true32.i.cond.false52.i_crit_edge:       ; preds = %land.lhs.true32.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52.i

land.lhs.true37.i:                                ; preds = %land.lhs.true32.i
  %sriov_wreg.i89 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %662, i32 0, i32 12
  %663 = ptrtoint ptr %sriov_wreg.i89 to i32
  call void @__asan_load4_noabort(i32 %663)
  %664 = load ptr, ptr %sriov_wreg.i89, align 4
  %tobool41.not.i = icmp eq ptr %664, null
  br i1 %tobool41.not.i, label %land.lhs.true37.i.cond.false52.i_crit_edge, label %cond.true42.i

land.lhs.true37.i.cond.false52.i_crit_edge:       ; preds = %land.lhs.true37.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52.i

cond.true42.i:                                    ; preds = %land.lhs.true37.i
  call void @__sanitizer_cov_trace_pc() #15
  %665 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %665)
  %666 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx50.i = getelementptr i32, ptr %666, i32 1
  %667 = ptrtoint ptr %arrayidx50.i to i32
  call void @__asan_load4_noabort(i32 %667)
  %668 = load i32, ptr %arrayidx50.i, align 4
  %add51.i = add i32 %668, 22607
  tail call void %664(ptr noundef %adev, i32 noundef %add51.i, i32 noundef %or.i, i32 noundef 0, i32 noundef 1) #13
  br label %for.body.i.preheader

cond.false52.i:                                   ; preds = %land.lhs.true37.i.cond.false52.i_crit_edge, %land.lhs.true32.i.cond.false52.i_crit_edge, %cond.end.i.cond.false52.i_crit_edge
  %669 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %669)
  %670 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx56.i = getelementptr i32, ptr %670, i32 1
  %671 = ptrtoint ptr %arrayidx56.i to i32
  call void @__asan_load4_noabort(i32 %671)
  %672 = load i32, ptr %arrayidx56.i, align 4
  %add57.i = add i32 %672, 22607
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add57.i, i32 noundef %or.i, i32 noundef 0) #13
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %cond.false52.i, %cond.true42.i
  br label %for.body.i

for.body.i:                                       ; preds = %if.end97.i.for.body.i_crit_edge, %for.body.i.preheader
  %i.0510.i = phi i32 [ %inc.i, %if.end97.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %673 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %673)
  %674 = load i32, ptr %virt.i.i, align 8
  %and61.i = and i32 %674, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61.i)
  %tobool62.not.i = icmp eq i32 %and61.i, 0
  br i1 %tobool62.not.i, label %for.body.i.cond.false85.i_crit_edge, label %land.lhs.true63.i

for.body.i.cond.false85.i_crit_edge:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false85.i

land.lhs.true63.i:                                ; preds = %for.body.i
  %675 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %675)
  %676 = load ptr, ptr %funcs82.i.i, align 4
  %tobool67.not.i = icmp eq ptr %676, null
  br i1 %tobool67.not.i, label %land.lhs.true63.i.cond.false85.i_crit_edge, label %land.lhs.true68.i

land.lhs.true63.i.cond.false85.i_crit_edge:       ; preds = %land.lhs.true63.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false85.i

land.lhs.true68.i:                                ; preds = %land.lhs.true63.i
  %sriov_rreg72.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %676, i32 0, i32 13
  %677 = ptrtoint ptr %sriov_rreg72.i to i32
  call void @__asan_load4_noabort(i32 %677)
  %678 = load ptr, ptr %sriov_rreg72.i, align 4
  %tobool73.not.i = icmp eq ptr %678, null
  br i1 %tobool73.not.i, label %land.lhs.true68.i.cond.false85.i_crit_edge, label %cond.true74.i

land.lhs.true68.i.cond.false85.i_crit_edge:       ; preds = %land.lhs.true68.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false85.i

cond.true74.i:                                    ; preds = %land.lhs.true68.i
  call void @__sanitizer_cov_trace_pc() #15
  %679 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %679)
  %680 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx82.i = getelementptr i32, ptr %680, i32 1
  %681 = ptrtoint ptr %arrayidx82.i to i32
  call void @__asan_load4_noabort(i32 %681)
  %682 = load i32, ptr %arrayidx82.i, align 4
  %add83.i = add i32 %682, 22607
  %call84.i = tail call i32 %678(ptr noundef %adev, i32 noundef %add83.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end92.i

cond.false85.i:                                   ; preds = %land.lhs.true68.i.cond.false85.i_crit_edge, %land.lhs.true63.i.cond.false85.i_crit_edge, %for.body.i.cond.false85.i_crit_edge
  %683 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %683)
  %684 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx89.i = getelementptr i32, ptr %684, i32 1
  %685 = ptrtoint ptr %arrayidx89.i to i32
  call void @__asan_load4_noabort(i32 %685)
  %686 = load i32, ptr %arrayidx89.i, align 4
  %add90.i = add i32 %686, 22607
  %call91.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add90.i, i32 noundef 0) #13
  br label %cond.end92.i

cond.end92.i:                                     ; preds = %cond.false85.i, %cond.true74.i
  %cond93.i = phi i32 [ %call84.i, %cond.true74.i ], [ %call91.i, %cond.false85.i ]
  %687 = and i32 %cond93.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %687)
  %cmp95.not.i = icmp eq i32 %687, 0
  br i1 %cmp95.not.i, label %if.end97.i, label %if.end100.i

if.end97.i:                                       ; preds = %cond.end92.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %688 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %688(i32 noundef 214748) #13
  %inc.i = add nuw nsw i32 %i.0510.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 50000
  br i1 %exitcond.not.i, label %do.end.i90, label %if.end97.i.for.body.i_crit_edge

if.end97.i.for.body.i_crit_edge:                  ; preds = %if.end97.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i

do.end.i90:                                       ; preds = %if.end97.i
  call void @__sanitizer_cov_trace_pc() #15
  %689 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %689)
  %690 = load ptr, ptr %adev, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %690, ptr noundef nonnull @.str.19) #16
  br label %cleanup

if.end100.i:                                      ; preds = %cond.end92.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_emu_mode to i32))
  %691 = load i32, ptr @amdgpu_emu_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %691)
  %cmp101.i = icmp eq i32 %691, 1
  br i1 %cmp101.i, label %if.then102.i, label %if.end100.i.if.end104.i_crit_edge

if.end100.i.if.end104.i_crit_edge:                ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end104.i

if.then102.i:                                     ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #15
  %funcs103.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 102, i32 1
  %692 = ptrtoint ptr %funcs103.i to i32
  call void @__asan_load4_noabort(i32 %692)
  %693 = load ptr, ptr %funcs103.i, align 4
  %694 = ptrtoint ptr %693 to i32
  call void @__asan_load4_noabort(i32 %694)
  %695 = load ptr, ptr %693, align 4
  tail call void %695(ptr noundef %adev, ptr noundef null) #13
  br label %if.end104.i

if.end104.i:                                      ; preds = %if.then102.i, %if.end100.i.if.end104.i_crit_edge
  %696 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %696)
  %697 = load i32, ptr %virt.i.i, align 8
  %and107.i = and i32 %697, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and107.i)
  %tobool108.not.i = icmp eq i32 %and107.i, 0
  br i1 %tobool108.not.i, label %if.end104.i.cond.false131.i_crit_edge, label %land.lhs.true109.i

if.end104.i.cond.false131.i_crit_edge:            ; preds = %if.end104.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false131.i

land.lhs.true109.i:                               ; preds = %if.end104.i
  %698 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %698)
  %699 = load ptr, ptr %funcs82.i.i, align 4
  %tobool113.not.i = icmp eq ptr %699, null
  br i1 %tobool113.not.i, label %land.lhs.true109.i.cond.false131.i_crit_edge, label %land.lhs.true114.i

land.lhs.true109.i.cond.false131.i_crit_edge:     ; preds = %land.lhs.true109.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false131.i

land.lhs.true114.i:                               ; preds = %land.lhs.true109.i
  %sriov_rreg118.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %699, i32 0, i32 13
  %700 = ptrtoint ptr %sriov_rreg118.i to i32
  call void @__asan_load4_noabort(i32 %700)
  %701 = load ptr, ptr %sriov_rreg118.i, align 4
  %tobool119.not.i = icmp eq ptr %701, null
  br i1 %tobool119.not.i, label %land.lhs.true114.i.cond.false131.i_crit_edge, label %cond.true120.i

land.lhs.true114.i.cond.false131.i_crit_edge:     ; preds = %land.lhs.true114.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false131.i

cond.true120.i:                                   ; preds = %land.lhs.true114.i
  call void @__sanitizer_cov_trace_pc() #15
  %702 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %702)
  %703 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx128.i = getelementptr i32, ptr %703, i32 1
  %704 = ptrtoint ptr %arrayidx128.i to i32
  call void @__asan_load4_noabort(i32 %704)
  %705 = load i32, ptr %arrayidx128.i, align 4
  %add129.i = add i32 %705, 22606
  %call130.i = tail call i32 %701(ptr noundef %adev, i32 noundef %add129.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end138.i

cond.false131.i:                                  ; preds = %land.lhs.true114.i.cond.false131.i_crit_edge, %land.lhs.true109.i.cond.false131.i_crit_edge, %if.end104.i.cond.false131.i_crit_edge
  %706 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %706)
  %707 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx135.i = getelementptr i32, ptr %707, i32 1
  %708 = ptrtoint ptr %arrayidx135.i to i32
  call void @__asan_load4_noabort(i32 %708)
  %709 = load i32, ptr %arrayidx135.i, align 4
  %add136.i = add i32 %709, 22606
  %call137.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add136.i, i32 noundef 0) #13
  br label %cond.end138.i

cond.end138.i:                                    ; preds = %cond.false131.i, %cond.true120.i
  %cond139.i = phi i32 [ %call130.i, %cond.true120.i ], [ %call137.i, %cond.false131.i ]
  %and144.i = and i32 %cond139.i, -58720273
  %or145.i = or i32 %and144.i, 16
  %710 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %710)
  %711 = load i32, ptr %virt.i.i, align 8
  %and148.i = and i32 %711, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148.i)
  %tobool149.not.i = icmp eq i32 %and148.i, 0
  br i1 %tobool149.not.i, label %cond.end138.i.cond.false171.i_crit_edge, label %land.lhs.true150.i

cond.end138.i.cond.false171.i_crit_edge:          ; preds = %cond.end138.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false171.i

land.lhs.true150.i:                               ; preds = %cond.end138.i
  %712 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %712)
  %713 = load ptr, ptr %funcs82.i.i, align 4
  %tobool154.not.i = icmp eq ptr %713, null
  br i1 %tobool154.not.i, label %land.lhs.true150.i.cond.false171.i_crit_edge, label %land.lhs.true155.i

land.lhs.true150.i.cond.false171.i_crit_edge:     ; preds = %land.lhs.true150.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false171.i

land.lhs.true155.i:                               ; preds = %land.lhs.true150.i
  %sriov_wreg159.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %713, i32 0, i32 12
  %714 = ptrtoint ptr %sriov_wreg159.i to i32
  call void @__asan_load4_noabort(i32 %714)
  %715 = load ptr, ptr %sriov_wreg159.i, align 4
  %tobool160.not.i = icmp eq ptr %715, null
  br i1 %tobool160.not.i, label %land.lhs.true155.i.cond.false171.i_crit_edge, label %cond.true161.i

land.lhs.true155.i.cond.false171.i_crit_edge:     ; preds = %land.lhs.true155.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false171.i

cond.true161.i:                                   ; preds = %land.lhs.true155.i
  call void @__sanitizer_cov_trace_pc() #15
  %716 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %716)
  %717 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx169.i = getelementptr i32, ptr %717, i32 1
  %718 = ptrtoint ptr %arrayidx169.i to i32
  call void @__asan_load4_noabort(i32 %718)
  %719 = load i32, ptr %arrayidx169.i, align 4
  %add170.i = add i32 %719, 22606
  tail call void %715(ptr noundef %adev, i32 noundef %add170.i, i32 noundef %or145.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end177.i

cond.false171.i:                                  ; preds = %land.lhs.true155.i.cond.false171.i_crit_edge, %land.lhs.true150.i.cond.false171.i_crit_edge, %cond.end138.i.cond.false171.i_crit_edge
  %720 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %720)
  %721 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx175.i = getelementptr i32, ptr %721, i32 1
  %722 = ptrtoint ptr %arrayidx175.i to i32
  call void @__asan_load4_noabort(i32 %722)
  %723 = load i32, ptr %arrayidx175.i, align 4
  %add176.i = add i32 %723, 22606
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add176.i, i32 noundef %or145.i, i32 noundef 0) #13
  br label %cond.end177.i

cond.end177.i:                                    ; preds = %cond.false171.i, %cond.true161.i
  %724 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %724)
  %725 = load i32, ptr %virt.i.i, align 8
  %and180.i = and i32 %725, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and180.i)
  %tobool181.not.i = icmp eq i32 %and180.i, 0
  br i1 %tobool181.not.i, label %cond.end177.i.cond.false205.i_crit_edge, label %land.lhs.true182.i

cond.end177.i.cond.false205.i_crit_edge:          ; preds = %cond.end177.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false205.i

land.lhs.true182.i:                               ; preds = %cond.end177.i
  %726 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %726)
  %727 = load ptr, ptr %funcs82.i.i, align 4
  %tobool186.not.i = icmp eq ptr %727, null
  br i1 %tobool186.not.i, label %land.lhs.true182.i.cond.false205.i_crit_edge, label %land.lhs.true187.i

land.lhs.true182.i.cond.false205.i_crit_edge:     ; preds = %land.lhs.true182.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false205.i

land.lhs.true187.i:                               ; preds = %land.lhs.true182.i
  %sriov_wreg191.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %727, i32 0, i32 12
  %728 = ptrtoint ptr %sriov_wreg191.i to i32
  call void @__asan_load4_noabort(i32 %728)
  %729 = load ptr, ptr %sriov_wreg191.i, align 4
  %tobool192.not.i = icmp eq ptr %729, null
  br i1 %tobool192.not.i, label %land.lhs.true187.i.cond.false205.i_crit_edge, label %cond.true193.i

land.lhs.true187.i.cond.false205.i_crit_edge:     ; preds = %land.lhs.true187.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false205.i

cond.true193.i:                                   ; preds = %land.lhs.true187.i
  call void @__sanitizer_cov_trace_pc() #15
  %730 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %730)
  %731 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx201.i = getelementptr i32, ptr %731, i32 1
  %732 = ptrtoint ptr %arrayidx201.i to i32
  call void @__asan_load4_noabort(i32 %732)
  %733 = load i32, ptr %arrayidx201.i, align 4
  %add202.i = add i32 %733, 22604
  %mec_fw_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 3
  %734 = ptrtoint ptr %mec_fw_gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %734)
  %735 = load i64, ptr %mec_fw_gpu_addr.i, align 8
  %736 = trunc i64 %735 to i32
  %conv.i = and i32 %736, -4096
  tail call void %729(ptr noundef %adev, i32 noundef %add202.i, i32 noundef %conv.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end216.i

cond.false205.i:                                  ; preds = %land.lhs.true187.i.cond.false205.i_crit_edge, %land.lhs.true182.i.cond.false205.i_crit_edge, %cond.end177.i.cond.false205.i_crit_edge
  %737 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %737)
  %738 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx209.i = getelementptr i32, ptr %738, i32 1
  %739 = ptrtoint ptr %arrayidx209.i to i32
  call void @__asan_load4_noabort(i32 %739)
  %740 = load i32, ptr %arrayidx209.i, align 4
  %add210.i = add i32 %740, 22604
  %mec_fw_gpu_addr213.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 3
  %741 = ptrtoint ptr %mec_fw_gpu_addr213.i to i32
  call void @__asan_load8_noabort(i32 %741)
  %742 = load i64, ptr %mec_fw_gpu_addr213.i, align 8
  %743 = trunc i64 %742 to i32
  %conv215.i = and i32 %743, -4096
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add210.i, i32 noundef %conv215.i, i32 noundef 0) #13
  br label %cond.end216.i

cond.end216.i:                                    ; preds = %cond.false205.i, %cond.true193.i
  %744 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %744)
  %745 = load i32, ptr %virt.i.i, align 8
  %and219.i = and i32 %745, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and219.i)
  %tobool220.not.i = icmp eq i32 %and219.i, 0
  br i1 %tobool220.not.i, label %cond.end216.i.cond.false248.i_crit_edge, label %land.lhs.true221.i

cond.end216.i.cond.false248.i_crit_edge:          ; preds = %cond.end216.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false248.i

land.lhs.true221.i:                               ; preds = %cond.end216.i
  %746 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %746)
  %747 = load ptr, ptr %funcs82.i.i, align 4
  %tobool225.not.i = icmp eq ptr %747, null
  br i1 %tobool225.not.i, label %land.lhs.true221.i.cond.false248.i_crit_edge, label %land.lhs.true226.i

land.lhs.true221.i.cond.false248.i_crit_edge:     ; preds = %land.lhs.true221.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false248.i

land.lhs.true226.i:                               ; preds = %land.lhs.true221.i
  %sriov_wreg230.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %747, i32 0, i32 12
  %748 = ptrtoint ptr %sriov_wreg230.i to i32
  call void @__asan_load4_noabort(i32 %748)
  %749 = load ptr, ptr %sriov_wreg230.i, align 4
  %tobool231.not.i = icmp eq ptr %749, null
  br i1 %tobool231.not.i, label %land.lhs.true226.i.cond.false248.i_crit_edge, label %cond.true232.i

land.lhs.true226.i.cond.false248.i_crit_edge:     ; preds = %land.lhs.true226.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false248.i

cond.true232.i:                                   ; preds = %land.lhs.true226.i
  call void @__sanitizer_cov_trace_pc() #15
  %750 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %750)
  %751 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx240.i = getelementptr i32, ptr %751, i32 1
  %752 = ptrtoint ptr %arrayidx240.i to i32
  call void @__asan_load4_noabort(i32 %752)
  %753 = load i32, ptr %arrayidx240.i, align 4
  %add241.i = add i32 %753, 22605
  %mec_fw_gpu_addr244.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 3
  %754 = ptrtoint ptr %mec_fw_gpu_addr244.i to i32
  call void @__asan_load8_noabort(i32 %754)
  %755 = load i64, ptr %mec_fw_gpu_addr244.i, align 8
  %shr245.i = lshr i64 %755, 32
  %conv247.i = trunc i64 %shr245.i to i32
  tail call void %749(ptr noundef %adev, i32 noundef %add241.i, i32 noundef %conv247.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end260.i

cond.false248.i:                                  ; preds = %land.lhs.true226.i.cond.false248.i_crit_edge, %land.lhs.true221.i.cond.false248.i_crit_edge, %cond.end216.i.cond.false248.i_crit_edge
  %756 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %756)
  %757 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx252.i = getelementptr i32, ptr %757, i32 1
  %758 = ptrtoint ptr %arrayidx252.i to i32
  call void @__asan_load4_noabort(i32 %758)
  %759 = load i32, ptr %arrayidx252.i, align 4
  %add253.i = add i32 %759, 22605
  %mec_fw_gpu_addr256.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 3
  %760 = ptrtoint ptr %mec_fw_gpu_addr256.i to i32
  call void @__asan_load8_noabort(i32 %760)
  %761 = load i64, ptr %mec_fw_gpu_addr256.i, align 8
  %shr257.i = lshr i64 %761, 32
  %conv259.i = trunc i64 %shr257.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add253.i, i32 noundef %conv259.i, i32 noundef 0) #13
  br label %cond.end260.i

cond.end260.i:                                    ; preds = %cond.false248.i, %cond.true232.i
  %762 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %762)
  %763 = load i32, ptr %virt.i.i, align 8
  %and263.i = and i32 %763, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and263.i)
  %tobool264.not.i = icmp eq i32 %and263.i, 0
  br i1 %tobool264.not.i, label %cond.end260.i.cond.false286.i_crit_edge, label %land.lhs.true265.i

cond.end260.i.cond.false286.i_crit_edge:          ; preds = %cond.end260.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false286.i

land.lhs.true265.i:                               ; preds = %cond.end260.i
  %764 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %764)
  %765 = load ptr, ptr %funcs82.i.i, align 4
  %tobool269.not.i = icmp eq ptr %765, null
  br i1 %tobool269.not.i, label %land.lhs.true265.i.cond.false286.i_crit_edge, label %land.lhs.true270.i

land.lhs.true265.i.cond.false286.i_crit_edge:     ; preds = %land.lhs.true265.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false286.i

land.lhs.true270.i:                               ; preds = %land.lhs.true265.i
  %sriov_wreg274.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %765, i32 0, i32 12
  %766 = ptrtoint ptr %sriov_wreg274.i to i32
  call void @__asan_load4_noabort(i32 %766)
  %767 = load ptr, ptr %sriov_wreg274.i, align 4
  %tobool275.not.i = icmp eq ptr %767, null
  br i1 %tobool275.not.i, label %land.lhs.true270.i.cond.false286.i_crit_edge, label %cond.true276.i

land.lhs.true270.i.cond.false286.i_crit_edge:     ; preds = %land.lhs.true270.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false286.i

cond.true276.i:                                   ; preds = %land.lhs.true270.i
  call void @__sanitizer_cov_trace_pc() #15
  %768 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %768)
  %769 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx284.i = getelementptr i32, ptr %769, i32 1
  %770 = ptrtoint ptr %arrayidx284.i to i32
  call void @__asan_load4_noabort(i32 %770)
  %771 = load i32, ptr %arrayidx284.i, align 4
  %add285.i = add i32 %771, 22554
  tail call void %767(ptr noundef %adev, i32 noundef %add285.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end292.i

cond.false286.i:                                  ; preds = %land.lhs.true270.i.cond.false286.i_crit_edge, %land.lhs.true265.i.cond.false286.i_crit_edge, %cond.end260.i.cond.false286.i_crit_edge
  %772 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %772)
  %773 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx290.i = getelementptr i32, ptr %773, i32 1
  %774 = ptrtoint ptr %arrayidx290.i to i32
  call void @__asan_load4_noabort(i32 %774)
  %775 = load i32, ptr %arrayidx290.i, align 4
  %add291.i = add i32 %775, 22554
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add291.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end292.i

cond.end292.i:                                    ; preds = %cond.false286.i, %cond.true276.i
  %jt_size.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %637, i32 0, i32 3
  %776 = ptrtoint ptr %jt_size.i to i32
  call void @__asan_load4_noabort(i32 %776)
  %777 = load i32, ptr %jt_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %777)
  %cmp294511.not.i = icmp eq i32 %777, 0
  br i1 %cmp294511.not.i, label %cond.end292.i.for.end338.i_crit_edge, label %for.body296.lr.ph.i

cond.end292.i.for.end338.i_crit_edge:             ; preds = %cond.end292.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end338.i

for.body296.lr.ph.i:                              ; preds = %cond.end292.i
  %jt_offset.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %637, i32 0, i32 2
  br label %for.body296.i

for.body296.i:                                    ; preds = %for.inc336.i.for.body296.i_crit_edge, %for.body296.lr.ph.i
  %i.1512.i = phi i32 [ 0, %for.body296.lr.ph.i ], [ %inc337.i, %for.inc336.i.for.body296.i_crit_edge ]
  %778 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %778)
  %779 = load i32, ptr %virt.i.i, align 8
  %and299.i = and i32 %779, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and299.i)
  %tobool300.not.i = icmp eq i32 %and299.i, 0
  br i1 %tobool300.not.i, label %for.body296.i.cond.false325.i_crit_edge, label %land.lhs.true301.i

for.body296.i.cond.false325.i_crit_edge:          ; preds = %for.body296.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false325.i

land.lhs.true301.i:                               ; preds = %for.body296.i
  %780 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %780)
  %781 = load ptr, ptr %funcs82.i.i, align 4
  %tobool305.not.i = icmp eq ptr %781, null
  br i1 %tobool305.not.i, label %land.lhs.true301.i.cond.false325.i_crit_edge, label %land.lhs.true306.i

land.lhs.true301.i.cond.false325.i_crit_edge:     ; preds = %land.lhs.true301.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false325.i

land.lhs.true306.i:                               ; preds = %land.lhs.true301.i
  %sriov_wreg310.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %781, i32 0, i32 12
  %782 = ptrtoint ptr %sriov_wreg310.i to i32
  call void @__asan_load4_noabort(i32 %782)
  %783 = load ptr, ptr %sriov_wreg310.i, align 4
  %tobool311.not.i = icmp eq ptr %783, null
  br i1 %tobool311.not.i, label %land.lhs.true306.i.cond.false325.i_crit_edge, label %cond.true312.i

land.lhs.true306.i.cond.false325.i_crit_edge:     ; preds = %land.lhs.true306.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false325.i

cond.true312.i:                                   ; preds = %land.lhs.true306.i
  call void @__sanitizer_cov_trace_pc() #15
  %784 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %784)
  %785 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx320.i = getelementptr i32, ptr %785, i32 1
  %786 = ptrtoint ptr %arrayidx320.i to i32
  call void @__asan_load4_noabort(i32 %786)
  %787 = load i32, ptr %arrayidx320.i, align 4
  %add321.i = add i32 %787, 22555
  %788 = ptrtoint ptr %jt_offset.i to i32
  call void @__asan_load4_noabort(i32 %788)
  %789 = load i32, ptr %jt_offset.i, align 4
  %add.ptr322.i = getelementptr i32, ptr %add.ptr.i, i32 %789
  %add.ptr323.i = getelementptr i32, ptr %add.ptr322.i, i32 %i.1512.i
  %790 = ptrtoint ptr %add.ptr323.i to i32
  call void @__asan_load4_noabort(i32 %790)
  %791 = load i32, ptr %add.ptr323.i, align 4
  %792 = tail call i32 @llvm.bswap.i32(i32 %791) #13
  tail call void %783(ptr noundef %adev, i32 noundef %add321.i, i32 noundef %792, i32 noundef 0, i32 noundef 1) #13
  br label %for.inc336.i

cond.false325.i:                                  ; preds = %land.lhs.true306.i.cond.false325.i_crit_edge, %land.lhs.true301.i.cond.false325.i_crit_edge, %for.body296.i.cond.false325.i_crit_edge
  %793 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %793)
  %794 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx329.i = getelementptr i32, ptr %794, i32 1
  %795 = ptrtoint ptr %arrayidx329.i to i32
  call void @__asan_load4_noabort(i32 %795)
  %796 = load i32, ptr %arrayidx329.i, align 4
  %add330.i = add i32 %796, 22555
  %797 = ptrtoint ptr %jt_offset.i to i32
  call void @__asan_load4_noabort(i32 %797)
  %798 = load i32, ptr %jt_offset.i, align 4
  %add.ptr332.i = getelementptr i32, ptr %add.ptr.i, i32 %798
  %add.ptr333.i = getelementptr i32, ptr %add.ptr332.i, i32 %i.1512.i
  %799 = ptrtoint ptr %add.ptr333.i to i32
  call void @__asan_load4_noabort(i32 %799)
  %800 = load i32, ptr %add.ptr333.i, align 4
  %801 = tail call i32 @llvm.bswap.i32(i32 %800) #13
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add330.i, i32 noundef %801, i32 noundef 0) #13
  br label %for.inc336.i

for.inc336.i:                                     ; preds = %cond.false325.i, %cond.true312.i
  %inc337.i = add nuw i32 %i.1512.i, 1
  %802 = ptrtoint ptr %jt_size.i to i32
  call void @__asan_load4_noabort(i32 %802)
  %803 = load i32, ptr %jt_size.i, align 4
  %cmp294.i = icmp ult i32 %inc337.i, %803
  br i1 %cmp294.i, label %for.inc336.i.for.body296.i_crit_edge, label %for.inc336.i.for.end338.i_crit_edge

for.inc336.i.for.end338.i_crit_edge:              ; preds = %for.inc336.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end338.i

for.inc336.i.for.body296.i_crit_edge:             ; preds = %for.inc336.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body296.i

for.end338.i:                                     ; preds = %for.inc336.i.for.end338.i_crit_edge, %cond.end292.i.for.end338.i_crit_edge
  %804 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %804)
  %805 = load i32, ptr %virt.i.i, align 8
  %and341.i = and i32 %805, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and341.i)
  %tobool342.not.i = icmp eq i32 %and341.i, 0
  br i1 %tobool342.not.i, label %for.end338.i.cond.false365.i_crit_edge, label %land.lhs.true343.i

for.end338.i.cond.false365.i_crit_edge:           ; preds = %for.end338.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false365.i

land.lhs.true343.i:                               ; preds = %for.end338.i
  %806 = ptrtoint ptr %funcs82.i.i to i32
  call void @__asan_load4_noabort(i32 %806)
  %807 = load ptr, ptr %funcs82.i.i, align 4
  %tobool347.not.i = icmp eq ptr %807, null
  br i1 %tobool347.not.i, label %land.lhs.true343.i.cond.false365.i_crit_edge, label %land.lhs.true348.i

land.lhs.true343.i.cond.false365.i_crit_edge:     ; preds = %land.lhs.true343.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false365.i

land.lhs.true348.i:                               ; preds = %land.lhs.true343.i
  %sriov_wreg352.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %807, i32 0, i32 12
  %808 = ptrtoint ptr %sriov_wreg352.i to i32
  call void @__asan_load4_noabort(i32 %808)
  %809 = load ptr, ptr %sriov_wreg352.i, align 4
  %tobool353.not.i = icmp eq ptr %809, null
  br i1 %tobool353.not.i, label %land.lhs.true348.i.cond.false365.i_crit_edge, label %cond.true354.i

land.lhs.true348.i.cond.false365.i_crit_edge:     ; preds = %land.lhs.true348.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false365.i

cond.true354.i:                                   ; preds = %land.lhs.true348.i
  call void @__sanitizer_cov_trace_pc() #15
  %810 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %810)
  %811 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx362.i = getelementptr i32, ptr %811, i32 1
  %812 = ptrtoint ptr %arrayidx362.i to i32
  call void @__asan_load4_noabort(i32 %812)
  %813 = load i32, ptr %arrayidx362.i, align 4
  %add363.i = add i32 %813, 22554
  %mec_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 18
  %814 = ptrtoint ptr %mec_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %814)
  %815 = load i32, ptr %mec_fw_version.i, align 8
  tail call void %809(ptr noundef %adev, i32 noundef %add363.i, i32 noundef %815, i32 noundef 0, i32 noundef 1) #13
  br label %if.end9

cond.false365.i:                                  ; preds = %land.lhs.true348.i.cond.false365.i_crit_edge, %land.lhs.true343.i.cond.false365.i_crit_edge, %for.end338.i.cond.false365.i_crit_edge
  %816 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %816)
  %817 = load ptr, ptr %arrayidx96.i.i, align 8
  %arrayidx369.i = getelementptr i32, ptr %817, i32 1
  %818 = ptrtoint ptr %arrayidx369.i to i32
  call void @__asan_load4_noabort(i32 %818)
  %819 = load i32, ptr %arrayidx369.i, align 4
  %add370.i = add i32 %819, 22554
  %mec_fw_version372.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 18
  %820 = ptrtoint ptr %mec_fw_version372.i to i32
  call void @__asan_load4_noabort(i32 %820)
  %821 = load i32, ptr %mec_fw_version372.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add370.i, i32 noundef %821, i32 noundef 0) #13
  br label %if.end9

if.end9:                                          ; preds = %cond.false365.i, %cond.true354.i, %if.end.if.end9_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3
  %mqd_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 19
  %822 = ptrtoint ptr %mqd_obj.i to i32
  call void @__asan_load4_noabort(i32 %822)
  %823 = load ptr, ptr %mqd_obj.i, align 4
  %bdev.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %823, i32 0, i32 4, i32 1
  %824 = ptrtoint ptr %bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %824)
  %825 = load ptr, ptr %bdev.i.i, align 8
  %resv32.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %823, i32 0, i32 4, i32 0, i32 9
  %826 = ptrtoint ptr %resv32.i.i.i to i32
  call void @__asan_load4_noabort(i32 %826)
  %827 = load ptr, ptr %resv32.i.i.i, align 8
  %call.i.i.i.i = tail call i32 @ww_mutex_lock_interruptible(ptr noundef %827, ptr noundef null) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %call.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %call.i.i.i.i, -4
  %retval.1.i.i.i = select i1 %cmp.i.i.i, i32 -512, i32 %call.i.i.i.i
  %828 = zext i32 %retval.1.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %828, ptr @__sancov_gen_cov_switch_values.146)
  switch i32 %retval.1.i.i.i, label %gfx_v10_0_kiq_resume.exit [
    i32 0, label %if.end.i93
    i32 -512, label %if.end9.cleanup_crit_edge
  ], !prof !514

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i93:                                       ; preds = %if.end9
  %829 = ptrtoint ptr %mqd_obj.i to i32
  call void @__asan_load4_noabort(i32 %829)
  %830 = load ptr, ptr %mqd_obj.i, align 4
  %mqd_ptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 21
  %call4.i = tail call i32 @amdgpu_bo_kmap(ptr noundef %830, ptr noundef %mqd_ptr.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %cmp5.not.i = icmp eq i32 %call4.i, 0
  br i1 %cmp5.not.i, label %if.end13.i, label %if.end.i93.cleanup_crit_edge, !prof !481

if.end.i93.cleanup_crit_edge:                     ; preds = %if.end.i93
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end13.i:                                       ; preds = %if.end.i93
  %831 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %831)
  %832 = load ptr, ptr %ring1.i, align 8
  %833 = ptrtoint ptr %mqd_ptr.i to i32
  call void @__asan_load4_noabort(i32 %833)
  %834 = load ptr, ptr %mqd_ptr.i, align 8
  %arrayidx.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 172, i32 1
  %835 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %835)
  %836 = load i32, ptr %arrayidx.i.i.i, align 4
  %.off.i.i.i = add i32 %836, -656128
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %.off.i.i.i)
  %switch.i.i.i = icmp ult i32 %.off.i.i.i, 6
  %virt.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 132
  %837 = ptrtoint ptr %virt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %837)
  %838 = load i32, ptr %virt.i.i.i, align 8
  %and.i.i.i = and i32 %838, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %switch.i.i.i, label %sw.bb.i.i.i, label %sw.default.i.i.i

sw.bb.i.i.i:                                      ; preds = %if.end13.i
  br i1 %tobool.not.i.i.i, label %sw.bb.i.i.i.cond.false.i.i.i_crit_edge, label %land.lhs.true.i.i.i

sw.bb.i.i.i.cond.false.i.i.i_crit_edge:           ; preds = %sw.bb.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i

land.lhs.true.i.i.i:                              ; preds = %sw.bb.i.i.i
  %funcs.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 2, i32 15
  %839 = ptrtoint ptr %funcs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %839)
  %840 = load ptr, ptr %funcs.i.i.i, align 4
  %tobool3.not.i.i.i = icmp eq ptr %840, null
  br i1 %tobool3.not.i.i.i, label %land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge, label %land.lhs.true4.i.i.i

land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge:   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i

land.lhs.true4.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %sriov_rreg.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %840, i32 0, i32 13
  %841 = ptrtoint ptr %sriov_rreg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %841)
  %842 = load ptr, ptr %sriov_rreg.i.i.i, align 4
  %tobool8.not.i.i.i = icmp eq ptr %842, null
  br i1 %tobool8.not.i.i.i, label %land.lhs.true4.i.i.i.cond.false.i.i.i_crit_edge, label %cond.true.i.i.i

land.lhs.true4.i.i.i.cond.false.i.i.i_crit_edge:  ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i

cond.true.i.i.i:                                  ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx13.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %843 = ptrtoint ptr %arrayidx13.i.i.i to i32
  call void @__asan_load4_noabort(i32 %843)
  %844 = load ptr, ptr %arrayidx13.i.i.i, align 8
  %arrayidx15.i.i.i = getelementptr i32, ptr %844, i32 1
  %845 = ptrtoint ptr %arrayidx15.i.i.i to i32
  call void @__asan_load4_noabort(i32 %845)
  %846 = load i32, ptr %arrayidx15.i.i.i, align 4
  %add.i.i.i = add i32 %846, 19617
  %call.i.i.i = tail call i32 %842(ptr noundef %832, i32 noundef %add.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i.i.i

cond.false.i.i.i:                                 ; preds = %land.lhs.true4.i.i.i.cond.false.i.i.i_crit_edge, %land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge, %sw.bb.i.i.i.cond.false.i.i.i_crit_edge
  %arrayidx17.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %847 = ptrtoint ptr %arrayidx17.i.i.i to i32
  call void @__asan_load4_noabort(i32 %847)
  %848 = load ptr, ptr %arrayidx17.i.i.i, align 8
  %arrayidx19.i.i.i = getelementptr i32, ptr %848, i32 1
  %849 = ptrtoint ptr %arrayidx19.i.i.i to i32
  call void @__asan_load4_noabort(i32 %849)
  %850 = load i32, ptr %arrayidx19.i.i.i, align 4
  %add20.i.i.i = add i32 %850, 19617
  %call21.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %832, i32 noundef %add20.i.i.i, i32 noundef 0) #13
  br label %cond.end.i.i.i

cond.end.i.i.i:                                   ; preds = %cond.false.i.i.i, %cond.true.i.i.i
  %cond.i.i.i = phi i32 [ %call.i.i.i, %cond.true.i.i.i ], [ %call21.i.i.i, %cond.false.i.i.i ]
  %and22.i.i.i = and i32 %cond.i.i.i, -256
  %me.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 16
  %851 = ptrtoint ptr %me.i.i.i to i32
  call void @__asan_load4_noabort(i32 %851)
  %852 = load i32, ptr %me.i.i.i, align 8
  %shl.i.i.i = shl i32 %852, 5
  %pipe.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 17
  %853 = ptrtoint ptr %pipe.i.i.i to i32
  call void @__asan_load4_noabort(i32 %853)
  %854 = load i32, ptr %pipe.i.i.i, align 4
  %shl23.i.i.i = shl i32 %854, 3
  %queue.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 18
  %855 = ptrtoint ptr %queue.i.i.i to i32
  call void @__asan_load4_noabort(i32 %855)
  %856 = load i32, ptr %queue.i.i.i, align 8
  %or.i.i.i = or i32 %shl.i.i.i, %and22.i.i.i
  %or24.i.i.i = or i32 %or.i.i.i, %shl23.i.i.i
  %or25.i.i.i = or i32 %or24.i.i.i, %856
  %857 = ptrtoint ptr %virt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %857)
  %858 = load i32, ptr %virt.i.i.i, align 8
  %and28.i.i.i = and i32 %858, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i.i.i)
  %tobool29.not.i.i.i = icmp eq i32 %and28.i.i.i, 0
  br i1 %tobool29.not.i.i.i, label %cond.end.i.i.i.cond.false50.i.i.i_crit_edge, label %land.lhs.true30.i.i.i

cond.end.i.i.i.cond.false50.i.i.i_crit_edge:      ; preds = %cond.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50.i.i.i

land.lhs.true30.i.i.i:                            ; preds = %cond.end.i.i.i
  %funcs33.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 2, i32 15
  %859 = ptrtoint ptr %funcs33.i.i.i to i32
  call void @__asan_load4_noabort(i32 %859)
  %860 = load ptr, ptr %funcs33.i.i.i, align 4
  %tobool34.not.i.i.i = icmp eq ptr %860, null
  br i1 %tobool34.not.i.i.i, label %land.lhs.true30.i.i.i.cond.false50.i.i.i_crit_edge, label %land.lhs.true35.i.i.i

land.lhs.true30.i.i.i.cond.false50.i.i.i_crit_edge: ; preds = %land.lhs.true30.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50.i.i.i

land.lhs.true35.i.i.i:                            ; preds = %land.lhs.true30.i.i.i
  %sriov_wreg.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %860, i32 0, i32 12
  %861 = ptrtoint ptr %sriov_wreg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %861)
  %862 = load ptr, ptr %sriov_wreg.i.i.i, align 4
  %tobool39.not.i.i.i = icmp eq ptr %862, null
  br i1 %tobool39.not.i.i.i, label %land.lhs.true35.i.i.i.cond.false50.i.i.i_crit_edge, label %cond.true40.i.i.i

land.lhs.true35.i.i.i.cond.false50.i.i.i_crit_edge: ; preds = %land.lhs.true35.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50.i.i.i

cond.true40.i.i.i:                                ; preds = %land.lhs.true35.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx46.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %863 = ptrtoint ptr %arrayidx46.i.i.i to i32
  call void @__asan_load4_noabort(i32 %863)
  %864 = load ptr, ptr %arrayidx46.i.i.i, align 8
  %arrayidx48.i.i.i = getelementptr i32, ptr %864, i32 1
  %865 = ptrtoint ptr %arrayidx48.i.i.i to i32
  call void @__asan_load4_noabort(i32 %865)
  %866 = load i32, ptr %arrayidx48.i.i.i, align 4
  %add49.i.i.i = add i32 %866, 19617
  tail call void %862(ptr noundef %832, i32 noundef %add49.i.i.i, i32 noundef %or25.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end56.i.i.i

cond.false50.i.i.i:                               ; preds = %land.lhs.true35.i.i.i.cond.false50.i.i.i_crit_edge, %land.lhs.true30.i.i.i.cond.false50.i.i.i_crit_edge, %cond.end.i.i.i.cond.false50.i.i.i_crit_edge
  %arrayidx52.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %867 = ptrtoint ptr %arrayidx52.i.i.i to i32
  call void @__asan_load4_noabort(i32 %867)
  %868 = load ptr, ptr %arrayidx52.i.i.i, align 8
  %arrayidx54.i.i.i = getelementptr i32, ptr %868, i32 1
  %869 = ptrtoint ptr %arrayidx54.i.i.i to i32
  call void @__asan_load4_noabort(i32 %869)
  %870 = load i32, ptr %arrayidx54.i.i.i, align 4
  %add55.i.i.i = add i32 %870, 19617
  tail call void @amdgpu_device_wreg(ptr noundef %832, i32 noundef %add55.i.i.i, i32 noundef %or25.i.i.i, i32 noundef 0) #13
  br label %cond.end56.i.i.i

cond.end56.i.i.i:                                 ; preds = %cond.false50.i.i.i, %cond.true40.i.i.i
  %or57.i.i.i = or i32 %or25.i.i.i, 128
  %871 = ptrtoint ptr %virt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %871)
  %872 = load i32, ptr %virt.i.i.i, align 8
  %and60.i.i.i = and i32 %872, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and60.i.i.i)
  %tobool61.not.i.i.i = icmp eq i32 %and60.i.i.i, 0
  br i1 %tobool61.not.i.i.i, label %cond.end56.i.i.i.cond.false83.i.i.i_crit_edge, label %land.lhs.true62.i.i.i

cond.end56.i.i.i.cond.false83.i.i.i_crit_edge:    ; preds = %cond.end56.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.i.i.i

land.lhs.true62.i.i.i:                            ; preds = %cond.end56.i.i.i
  %funcs65.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 2, i32 15
  %873 = ptrtoint ptr %funcs65.i.i.i to i32
  call void @__asan_load4_noabort(i32 %873)
  %874 = load ptr, ptr %funcs65.i.i.i, align 4
  %tobool66.not.i.i.i = icmp eq ptr %874, null
  br i1 %tobool66.not.i.i.i, label %land.lhs.true62.i.i.i.cond.false83.i.i.i_crit_edge, label %land.lhs.true67.i.i.i

land.lhs.true62.i.i.i.cond.false83.i.i.i_crit_edge: ; preds = %land.lhs.true62.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.i.i.i

land.lhs.true67.i.i.i:                            ; preds = %land.lhs.true62.i.i.i
  %sriov_wreg71.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %874, i32 0, i32 12
  %875 = ptrtoint ptr %sriov_wreg71.i.i.i to i32
  call void @__asan_load4_noabort(i32 %875)
  %876 = load ptr, ptr %sriov_wreg71.i.i.i, align 4
  %tobool72.not.i.i.i = icmp eq ptr %876, null
  br i1 %tobool72.not.i.i.i, label %land.lhs.true67.i.i.i.cond.false83.i.i.i_crit_edge, label %cond.true73.i.i.i

land.lhs.true67.i.i.i.cond.false83.i.i.i_crit_edge: ; preds = %land.lhs.true67.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83.i.i.i

cond.true73.i.i.i:                                ; preds = %land.lhs.true67.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx79.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %877 = ptrtoint ptr %arrayidx79.i.i.i to i32
  call void @__asan_load4_noabort(i32 %877)
  %878 = load ptr, ptr %arrayidx79.i.i.i, align 8
  %arrayidx81.i.i.i = getelementptr i32, ptr %878, i32 1
  %879 = ptrtoint ptr %arrayidx81.i.i.i to i32
  call void @__asan_load4_noabort(i32 %879)
  %880 = load i32, ptr %arrayidx81.i.i.i, align 4
  %add82.i.i.i = add i32 %880, 19617
  tail call void %876(ptr noundef %832, i32 noundef %add82.i.i.i, i32 noundef %or57.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_kiq_setting.exit.i.i

cond.false83.i.i.i:                               ; preds = %land.lhs.true67.i.i.i.cond.false83.i.i.i_crit_edge, %land.lhs.true62.i.i.i.cond.false83.i.i.i_crit_edge, %cond.end56.i.i.i.cond.false83.i.i.i_crit_edge
  %arrayidx85.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %881 = ptrtoint ptr %arrayidx85.i.i.i to i32
  call void @__asan_load4_noabort(i32 %881)
  %882 = load ptr, ptr %arrayidx85.i.i.i, align 8
  %arrayidx87.i.i.i = getelementptr i32, ptr %882, i32 1
  %883 = ptrtoint ptr %arrayidx87.i.i.i to i32
  call void @__asan_load4_noabort(i32 %883)
  %884 = load i32, ptr %arrayidx87.i.i.i, align 4
  %add88.i.i.i = add i32 %884, 19617
  tail call void @amdgpu_device_wreg(ptr noundef %832, i32 noundef %add88.i.i.i, i32 noundef %or57.i.i.i, i32 noundef 0) #13
  br label %gfx_v10_0_kiq_setting.exit.i.i

sw.default.i.i.i:                                 ; preds = %if.end13.i
  br i1 %tobool.not.i.i.i, label %sw.default.i.i.i.cond.false116.i.i.i_crit_edge, label %land.lhs.true94.i.i.i

sw.default.i.i.i.cond.false116.i.i.i_crit_edge:   ; preds = %sw.default.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false116.i.i.i

land.lhs.true94.i.i.i:                            ; preds = %sw.default.i.i.i
  %funcs97.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 2, i32 15
  %885 = ptrtoint ptr %funcs97.i.i.i to i32
  call void @__asan_load4_noabort(i32 %885)
  %886 = load ptr, ptr %funcs97.i.i.i, align 4
  %tobool98.not.i.i.i = icmp eq ptr %886, null
  br i1 %tobool98.not.i.i.i, label %land.lhs.true94.i.i.i.cond.false116.i.i.i_crit_edge, label %land.lhs.true99.i.i.i

land.lhs.true94.i.i.i.cond.false116.i.i.i_crit_edge: ; preds = %land.lhs.true94.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false116.i.i.i

land.lhs.true99.i.i.i:                            ; preds = %land.lhs.true94.i.i.i
  %sriov_rreg103.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %886, i32 0, i32 13
  %887 = ptrtoint ptr %sriov_rreg103.i.i.i to i32
  call void @__asan_load4_noabort(i32 %887)
  %888 = load ptr, ptr %sriov_rreg103.i.i.i, align 4
  %tobool104.not.i.i.i = icmp eq ptr %888, null
  br i1 %tobool104.not.i.i.i, label %land.lhs.true99.i.i.i.cond.false116.i.i.i_crit_edge, label %cond.true105.i.i.i

land.lhs.true99.i.i.i.cond.false116.i.i.i_crit_edge: ; preds = %land.lhs.true99.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false116.i.i.i

cond.true105.i.i.i:                               ; preds = %land.lhs.true99.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx111.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %889 = ptrtoint ptr %arrayidx111.i.i.i to i32
  call void @__asan_load4_noabort(i32 %889)
  %890 = load ptr, ptr %arrayidx111.i.i.i, align 8
  %arrayidx113.i.i.i = getelementptr i32, ptr %890, i32 1
  %891 = ptrtoint ptr %arrayidx113.i.i.i to i32
  call void @__asan_load4_noabort(i32 %891)
  %892 = load i32, ptr %arrayidx113.i.i.i, align 4
  %add114.i.i.i = add i32 %892, 19626
  %call115.i.i.i = tail call i32 %888(ptr noundef %832, i32 noundef %add114.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end123.i.i.i

cond.false116.i.i.i:                              ; preds = %land.lhs.true99.i.i.i.cond.false116.i.i.i_crit_edge, %land.lhs.true94.i.i.i.cond.false116.i.i.i_crit_edge, %sw.default.i.i.i.cond.false116.i.i.i_crit_edge
  %arrayidx118.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %893 = ptrtoint ptr %arrayidx118.i.i.i to i32
  call void @__asan_load4_noabort(i32 %893)
  %894 = load ptr, ptr %arrayidx118.i.i.i, align 8
  %arrayidx120.i.i.i = getelementptr i32, ptr %894, i32 1
  %895 = ptrtoint ptr %arrayidx120.i.i.i to i32
  call void @__asan_load4_noabort(i32 %895)
  %896 = load i32, ptr %arrayidx120.i.i.i, align 4
  %add121.i.i.i = add i32 %896, 19626
  %call122.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %832, i32 noundef %add121.i.i.i, i32 noundef 0) #13
  br label %cond.end123.i.i.i

cond.end123.i.i.i:                                ; preds = %cond.false116.i.i.i, %cond.true105.i.i.i
  %cond124.i.i.i = phi i32 [ %call115.i.i.i, %cond.true105.i.i.i ], [ %call122.i.i.i, %cond.false116.i.i.i ]
  %and125.i.i.i = and i32 %cond124.i.i.i, -256
  %me126.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 16
  %897 = ptrtoint ptr %me126.i.i.i to i32
  call void @__asan_load4_noabort(i32 %897)
  %898 = load i32, ptr %me126.i.i.i, align 8
  %shl127.i.i.i = shl i32 %898, 5
  %pipe128.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 17
  %899 = ptrtoint ptr %pipe128.i.i.i to i32
  call void @__asan_load4_noabort(i32 %899)
  %900 = load i32, ptr %pipe128.i.i.i, align 4
  %shl129.i.i.i = shl i32 %900, 3
  %queue131.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 18
  %901 = ptrtoint ptr %queue131.i.i.i to i32
  call void @__asan_load4_noabort(i32 %901)
  %902 = load i32, ptr %queue131.i.i.i, align 8
  %or130.i.i.i = or i32 %shl127.i.i.i, %and125.i.i.i
  %or132.i.i.i = or i32 %or130.i.i.i, %shl129.i.i.i
  %or133.i.i.i = or i32 %or132.i.i.i, %902
  %903 = ptrtoint ptr %virt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %903)
  %904 = load i32, ptr %virt.i.i.i, align 8
  %and136.i.i.i = and i32 %904, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and136.i.i.i)
  %tobool137.not.i.i.i = icmp eq i32 %and136.i.i.i, 0
  br i1 %tobool137.not.i.i.i, label %cond.end123.i.i.i.cond.false159.i.i.i_crit_edge, label %land.lhs.true138.i.i.i

cond.end123.i.i.i.cond.false159.i.i.i_crit_edge:  ; preds = %cond.end123.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false159.i.i.i

land.lhs.true138.i.i.i:                           ; preds = %cond.end123.i.i.i
  %funcs141.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 2, i32 15
  %905 = ptrtoint ptr %funcs141.i.i.i to i32
  call void @__asan_load4_noabort(i32 %905)
  %906 = load ptr, ptr %funcs141.i.i.i, align 4
  %tobool142.not.i.i.i = icmp eq ptr %906, null
  br i1 %tobool142.not.i.i.i, label %land.lhs.true138.i.i.i.cond.false159.i.i.i_crit_edge, label %land.lhs.true143.i.i.i

land.lhs.true138.i.i.i.cond.false159.i.i.i_crit_edge: ; preds = %land.lhs.true138.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false159.i.i.i

land.lhs.true143.i.i.i:                           ; preds = %land.lhs.true138.i.i.i
  %sriov_wreg147.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %906, i32 0, i32 12
  %907 = ptrtoint ptr %sriov_wreg147.i.i.i to i32
  call void @__asan_load4_noabort(i32 %907)
  %908 = load ptr, ptr %sriov_wreg147.i.i.i, align 4
  %tobool148.not.i.i.i = icmp eq ptr %908, null
  br i1 %tobool148.not.i.i.i, label %land.lhs.true143.i.i.i.cond.false159.i.i.i_crit_edge, label %cond.true149.i.i.i

land.lhs.true143.i.i.i.cond.false159.i.i.i_crit_edge: ; preds = %land.lhs.true143.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false159.i.i.i

cond.true149.i.i.i:                               ; preds = %land.lhs.true143.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx155.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %909 = ptrtoint ptr %arrayidx155.i.i.i to i32
  call void @__asan_load4_noabort(i32 %909)
  %910 = load ptr, ptr %arrayidx155.i.i.i, align 8
  %arrayidx157.i.i.i = getelementptr i32, ptr %910, i32 1
  %911 = ptrtoint ptr %arrayidx157.i.i.i to i32
  call void @__asan_load4_noabort(i32 %911)
  %912 = load i32, ptr %arrayidx157.i.i.i, align 4
  %add158.i.i.i = add i32 %912, 19626
  tail call void %908(ptr noundef %832, i32 noundef %add158.i.i.i, i32 noundef %or133.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end165.i.i.i

cond.false159.i.i.i:                              ; preds = %land.lhs.true143.i.i.i.cond.false159.i.i.i_crit_edge, %land.lhs.true138.i.i.i.cond.false159.i.i.i_crit_edge, %cond.end123.i.i.i.cond.false159.i.i.i_crit_edge
  %arrayidx161.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %913 = ptrtoint ptr %arrayidx161.i.i.i to i32
  call void @__asan_load4_noabort(i32 %913)
  %914 = load ptr, ptr %arrayidx161.i.i.i, align 8
  %arrayidx163.i.i.i = getelementptr i32, ptr %914, i32 1
  %915 = ptrtoint ptr %arrayidx163.i.i.i to i32
  call void @__asan_load4_noabort(i32 %915)
  %916 = load i32, ptr %arrayidx163.i.i.i, align 4
  %add164.i.i.i = add i32 %916, 19626
  tail call void @amdgpu_device_wreg(ptr noundef %832, i32 noundef %add164.i.i.i, i32 noundef %or133.i.i.i, i32 noundef 0) #13
  br label %cond.end165.i.i.i

cond.end165.i.i.i:                                ; preds = %cond.false159.i.i.i, %cond.true149.i.i.i
  %or166.i.i.i = or i32 %or133.i.i.i, 128
  %917 = ptrtoint ptr %virt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %917)
  %918 = load i32, ptr %virt.i.i.i, align 8
  %and169.i.i.i = and i32 %918, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and169.i.i.i)
  %tobool170.not.i.i.i = icmp eq i32 %and169.i.i.i, 0
  br i1 %tobool170.not.i.i.i, label %cond.end165.i.i.i.cond.false192.i.i.i_crit_edge, label %land.lhs.true171.i.i.i

cond.end165.i.i.i.cond.false192.i.i.i_crit_edge:  ; preds = %cond.end165.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false192.i.i.i

land.lhs.true171.i.i.i:                           ; preds = %cond.end165.i.i.i
  %funcs174.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 2, i32 15
  %919 = ptrtoint ptr %funcs174.i.i.i to i32
  call void @__asan_load4_noabort(i32 %919)
  %920 = load ptr, ptr %funcs174.i.i.i, align 4
  %tobool175.not.i.i.i = icmp eq ptr %920, null
  br i1 %tobool175.not.i.i.i, label %land.lhs.true171.i.i.i.cond.false192.i.i.i_crit_edge, label %land.lhs.true176.i.i.i

land.lhs.true171.i.i.i.cond.false192.i.i.i_crit_edge: ; preds = %land.lhs.true171.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false192.i.i.i

land.lhs.true176.i.i.i:                           ; preds = %land.lhs.true171.i.i.i
  %sriov_wreg180.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %920, i32 0, i32 12
  %921 = ptrtoint ptr %sriov_wreg180.i.i.i to i32
  call void @__asan_load4_noabort(i32 %921)
  %922 = load ptr, ptr %sriov_wreg180.i.i.i, align 4
  %tobool181.not.i.i.i = icmp eq ptr %922, null
  br i1 %tobool181.not.i.i.i, label %land.lhs.true176.i.i.i.cond.false192.i.i.i_crit_edge, label %cond.true182.i.i.i

land.lhs.true176.i.i.i.cond.false192.i.i.i_crit_edge: ; preds = %land.lhs.true176.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false192.i.i.i

cond.true182.i.i.i:                               ; preds = %land.lhs.true176.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx188.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %923 = ptrtoint ptr %arrayidx188.i.i.i to i32
  call void @__asan_load4_noabort(i32 %923)
  %924 = load ptr, ptr %arrayidx188.i.i.i, align 8
  %arrayidx190.i.i.i = getelementptr i32, ptr %924, i32 1
  %925 = ptrtoint ptr %arrayidx190.i.i.i to i32
  call void @__asan_load4_noabort(i32 %925)
  %926 = load i32, ptr %arrayidx190.i.i.i, align 4
  %add191.i.i.i = add i32 %926, 19626
  tail call void %922(ptr noundef %832, i32 noundef %add191.i.i.i, i32 noundef %or166.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_kiq_setting.exit.i.i

cond.false192.i.i.i:                              ; preds = %land.lhs.true176.i.i.i.cond.false192.i.i.i_crit_edge, %land.lhs.true171.i.i.i.cond.false192.i.i.i_crit_edge, %cond.end165.i.i.i.cond.false192.i.i.i_crit_edge
  %arrayidx194.i.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 130, i32 1
  %927 = ptrtoint ptr %arrayidx194.i.i.i to i32
  call void @__asan_load4_noabort(i32 %927)
  %928 = load ptr, ptr %arrayidx194.i.i.i, align 8
  %arrayidx196.i.i.i = getelementptr i32, ptr %928, i32 1
  %929 = ptrtoint ptr %arrayidx196.i.i.i to i32
  call void @__asan_load4_noabort(i32 %929)
  %930 = load i32, ptr %arrayidx196.i.i.i, align 4
  %add197.i.i.i = add i32 %930, 19626
  tail call void @amdgpu_device_wreg(ptr noundef %832, i32 noundef %add197.i.i.i, i32 noundef %or166.i.i.i, i32 noundef 0) #13
  br label %gfx_v10_0_kiq_setting.exit.i.i

gfx_v10_0_kiq_setting.exit.i.i:                   ; preds = %cond.false192.i.i.i, %cond.true182.i.i.i, %cond.false83.i.i.i, %cond.true73.i.i.i
  %in_gpu_reset.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 141
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i, i32 noundef 4) #13
  %931 = ptrtoint ptr %in_gpu_reset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %931)
  %932 = load volatile i32, ptr %in_gpu_reset.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %932)
  %tobool.not.i.i94 = icmp eq i32 %932, 0
  br i1 %tobool.not.i.i94, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %gfx_v10_0_kiq_setting.exit.i.i
  %arrayidx.i.i95 = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 6, i32 7, i32 8
  %933 = ptrtoint ptr %arrayidx.i.i95 to i32
  call void @__asan_load4_noabort(i32 %933)
  %934 = load ptr, ptr %arrayidx.i.i95, align 4
  %tobool2.not.i.i = icmp eq ptr %934, null
  br i1 %tobool2.not.i.i, label %if.then.i.i.if.end.i.i96_crit_edge, label %if.then3.i.i

if.then.i.i.if.end.i.i96_crit_edge:               ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i.i96

if.then3.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %935 = call ptr @memcpy(ptr %834, ptr %934, i32 2048)
  br label %if.end.i.i96

if.end.i.i96:                                     ; preds = %if.then3.i.i, %if.then.i.i.if.end.i.i96_crit_edge
  %wptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 7
  %936 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_store8_noabort(i32 %936)
  store i64 0, ptr %wptr.i.i, align 8
  %buf_mask.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 14
  %funcs.i1.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 1
  %ring1.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 5
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %while.body.i.i.i.while.body.i.i.i_crit_edge, %if.end.i.i96
  %i.05.i.i.i = phi i32 [ 0, %if.end.i.i96 ], [ %inc.i.i.i, %while.body.i.i.i.while.body.i.i.i_crit_edge ]
  %937 = ptrtoint ptr %funcs.i1.i.i to i32
  call void @__asan_load4_noabort(i32 %937)
  %938 = load ptr, ptr %funcs.i1.i.i, align 4
  %nop.i.i.i = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %938, i32 0, i32 2
  %939 = ptrtoint ptr %nop.i.i.i to i32
  call void @__asan_load4_noabort(i32 %939)
  %940 = load i32, ptr %nop.i.i.i, align 4
  %941 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %941)
  %942 = load ptr, ptr %ring1.i.i.i, align 4
  %inc.i.i.i = add i32 %i.05.i.i.i, 1
  %arrayidx.i2.i.i = getelementptr i32, ptr %942, i32 %i.05.i.i.i
  %943 = ptrtoint ptr %arrayidx.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %943)
  store volatile i32 %940, ptr %arrayidx.i2.i.i, align 4
  %944 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %944)
  %945 = load i32, ptr %buf_mask.i.i.i, align 8
  %cmp.not.i.i.i = icmp ugt i32 %inc.i.i.i, %945
  br i1 %cmp.not.i.i.i, label %amdgpu_ring_clear_ring.exit.i.i, label %while.body.i.i.i.while.body.i.i.i_crit_edge

while.body.i.i.i.while.body.i.i.i_crit_edge:      ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i.i.i

amdgpu_ring_clear_ring.exit.i.i:                  ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %srbm_mutex.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 20
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex.i.i, i32 noundef 0) #13
  %me.i.i97 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 16
  %946 = ptrtoint ptr %me.i.i97 to i32
  call void @__asan_load4_noabort(i32 %946)
  %947 = load i32, ptr %me.i.i97, align 8
  %pipe.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 17
  %948 = ptrtoint ptr %pipe.i.i to i32
  call void @__asan_load4_noabort(i32 %948)
  %949 = load i32, ptr %pipe.i.i, align 4
  %queue.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 18
  %950 = ptrtoint ptr %queue.i.i to i32
  call void @__asan_load4_noabort(i32 %950)
  %951 = load i32, ptr %queue.i.i, align 8
  tail call void @nv_grbm_select(ptr noundef %832, i32 noundef %947, i32 noundef %949, i32 noundef %951, i32 noundef 0) #13
  tail call fastcc void @gfx_v10_0_kiq_init_register(ptr noundef %ring1.i) #13
  tail call void @nv_grbm_select(ptr noundef %832, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  tail call void @mutex_unlock(ptr noundef %srbm_mutex.i.i) #13
  br label %gfx_v10_0_kiq_resume.exit.thread253

if.else.i.i:                                      ; preds = %gfx_v10_0_kiq_setting.exit.i.i
  %952 = call ptr @memset(ptr %834, i32 0, i32 2048)
  %srbm_mutex10.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %832, i32 0, i32 20
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex10.i.i, i32 noundef 0) #13
  %me11.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 16
  %953 = ptrtoint ptr %me11.i.i to i32
  call void @__asan_load4_noabort(i32 %953)
  %954 = load i32, ptr %me11.i.i, align 8
  %pipe12.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 17
  %955 = ptrtoint ptr %pipe12.i.i to i32
  call void @__asan_load4_noabort(i32 %955)
  %956 = load i32, ptr %pipe12.i.i, align 4
  %queue13.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 18
  %957 = ptrtoint ptr %queue13.i.i to i32
  call void @__asan_load4_noabort(i32 %957)
  %958 = load i32, ptr %queue13.i.i, align 8
  tail call void @nv_grbm_select(ptr noundef %832, i32 noundef %954, i32 noundef %956, i32 noundef %958, i32 noundef 0) #13
  tail call fastcc void @gfx_v10_0_compute_mqd_init(ptr noundef %ring1.i) #13
  tail call fastcc void @gfx_v10_0_kiq_init_register(ptr noundef %ring1.i) #13
  tail call void @nv_grbm_select(ptr noundef %832, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  tail call void @mutex_unlock(ptr noundef %srbm_mutex10.i.i) #13
  %arrayidx20.i.i = getelementptr %struct.amdgpu_device, ptr %832, i32 0, i32 106, i32 6, i32 7, i32 8
  %959 = ptrtoint ptr %arrayidx20.i.i to i32
  call void @__asan_load4_noabort(i32 %959)
  %960 = load ptr, ptr %arrayidx20.i.i, align 4
  %tobool21.not.i.i = icmp eq ptr %960, null
  br i1 %tobool21.not.i.i, label %if.else.i.i.gfx_v10_0_kiq_resume.exit.thread253_crit_edge, label %if.then22.i.i

if.else.i.i.gfx_v10_0_kiq_resume.exit.thread253_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kiq_resume.exit.thread253

if.then22.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %961 = call ptr @memcpy(ptr %960, ptr %834, i32 2048)
  br label %gfx_v10_0_kiq_resume.exit.thread253

gfx_v10_0_kiq_resume.exit.thread253:              ; preds = %if.then22.i.i, %if.else.i.i.gfx_v10_0_kiq_resume.exit.thread253_crit_edge, %amdgpu_ring_clear_ring.exit.i.i
  %962 = ptrtoint ptr %mqd_obj.i to i32
  call void @__asan_load4_noabort(i32 %962)
  %963 = load ptr, ptr %mqd_obj.i, align 4
  tail call void @amdgpu_bo_kunmap(ptr noundef %963) #13
  %964 = ptrtoint ptr %mqd_ptr.i to i32
  call void @__asan_store4_noabort(i32 %964)
  store ptr null, ptr %mqd_ptr.i, align 8
  %965 = ptrtoint ptr %mqd_obj.i to i32
  call void @__asan_load4_noabort(i32 %965)
  %966 = load ptr, ptr %mqd_obj.i, align 4
  %tbo.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %966, i32 0, i32 4
  %bdev.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %966, i32 0, i32 4, i32 1
  %967 = ptrtoint ptr %bdev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %967)
  %968 = load ptr, ptr %bdev.i.i.i.i, align 8
  %lru_lock.i.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %968, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i) #13
  %resource.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %966, i32 0, i32 4, i32 6
  %969 = ptrtoint ptr %resource.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %969)
  %970 = load ptr, ptr %resource.i.i.i.i, align 4
  tail call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i, ptr noundef %970, ptr noundef null) #13
  %971 = ptrtoint ptr %bdev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %971)
  %972 = load ptr, ptr %bdev.i.i.i.i, align 8
  %lru_lock2.i.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %972, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i) #13
  %resv.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %966, i32 0, i32 4, i32 0, i32 9
  %973 = ptrtoint ptr %resv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %973)
  %974 = load ptr, ptr %resv.i.i.i, align 8
  tail call void @dma_resv_reset_shared_max(ptr noundef %974) #13
  tail call void @ww_mutex_unlock(ptr noundef %974) #13
  %ready.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 3, i32 17
  %975 = ptrtoint ptr %ready.i to i32
  call void @__asan_store1_noabort(i32 %975)
  store i8 1, ptr %ready.i, align 4
  tail call fastcc void @gfx_v10_0_cp_compute_enable(ptr noundef %adev, i1 noundef zeroext true) #13
  %num_compute_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %976 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %976)
  %977 = load i32, ptr %num_compute_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %977)
  %cmp37.not.i = icmp eq i32 %977, 0
  br i1 %cmp37.not.i, label %gfx_v10_0_kiq_resume.exit.thread253.for.end.i_crit_edge, label %gfx_v10_0_kiq_resume.exit.thread253.for.body.i107_crit_edge

gfx_v10_0_kiq_resume.exit.thread253.for.body.i107_crit_edge: ; preds = %gfx_v10_0_kiq_resume.exit.thread253
  br label %for.body.i107

gfx_v10_0_kiq_resume.exit.thread253.for.end.i_crit_edge: ; preds = %gfx_v10_0_kiq_resume.exit.thread253
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

gfx_v10_0_kiq_resume.exit:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i.i.i = getelementptr i8, ptr %825, i32 -17736
  %978 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %978)
  %979 = load ptr, ptr %add.ptr.i.i.i, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %979, ptr noundef nonnull @.str.107, ptr noundef %823) #16
  br label %cleanup

for.cond.i:                                       ; preds = %if.end11.i
  %inc.i99 = add nuw i32 %i.038.i, 1
  %980 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %980)
  %981 = load i32, ptr %num_compute_rings.i, align 8
  %cmp.i = icmp ult i32 %inc.i99, %981
  br i1 %cmp.i, label %for.cond.i.for.body.i107_crit_edge, label %for.cond.i.for.end.i_crit_edge

for.cond.i.for.end.i_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i

for.cond.i.for.body.i107_crit_edge:               ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i107

for.body.i107:                                    ; preds = %for.cond.i.for.body.i107_crit_edge, %gfx_v10_0_kiq_resume.exit.thread253.for.body.i107_crit_edge
  %i.038.i = phi i32 [ %inc.i99, %for.cond.i.for.body.i107_crit_edge ], [ 0, %gfx_v10_0_kiq_resume.exit.thread253.for.body.i107_crit_edge ]
  %arrayidx.i100 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i
  %mqd_obj.i101 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 19
  %982 = ptrtoint ptr %mqd_obj.i101 to i32
  call void @__asan_load4_noabort(i32 %982)
  %983 = load ptr, ptr %mqd_obj.i101, align 4
  %bdev.i.i102 = getelementptr inbounds %struct.amdgpu_bo, ptr %983, i32 0, i32 4, i32 1
  %984 = ptrtoint ptr %bdev.i.i102 to i32
  call void @__asan_load4_noabort(i32 %984)
  %985 = load ptr, ptr %bdev.i.i102, align 8
  %resv32.i.i.i103 = getelementptr inbounds %struct.amdgpu_bo, ptr %983, i32 0, i32 4, i32 0, i32 9
  %986 = ptrtoint ptr %resv32.i.i.i103 to i32
  call void @__asan_load4_noabort(i32 %986)
  %987 = load ptr, ptr %resv32.i.i.i103, align 8
  %call.i.i.i.i104 = tail call i32 @ww_mutex_lock_interruptible(ptr noundef %987, ptr noundef null) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %call.i.i.i.i104)
  %cmp.i.i.i105 = icmp eq i32 %call.i.i.i.i104, -4
  %retval.1.i.i.i106 = select i1 %cmp.i.i.i105, i32 -512, i32 %call.i.i.i.i104
  %988 = zext i32 %retval.1.i.i.i106 to i64
  call void @__sanitizer_cov_trace_switch(i64 %988, ptr @__sancov_gen_cov_switch_values.147)
  switch i32 %retval.1.i.i.i106, label %do.end.i.i109 [
    i32 0, label %if.end.i111
    i32 -512, label %for.body.i107.cleanup_crit_edge
  ], !prof !514

for.body.i107.cleanup_crit_edge:                  ; preds = %for.body.i107
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

do.end.i.i109:                                    ; preds = %for.body.i107
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i.i.i108 = getelementptr i8, ptr %985, i32 -17736
  %989 = ptrtoint ptr %add.ptr.i.i.i108 to i32
  call void @__asan_load4_noabort(i32 %989)
  %990 = load ptr, ptr %add.ptr.i.i.i108, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %990, ptr noundef nonnull @.str.107, ptr noundef %983) #16
  br label %gfx_v10_0_kcq_resume.exit

if.end.i111:                                      ; preds = %for.body.i107
  %991 = ptrtoint ptr %mqd_obj.i101 to i32
  call void @__asan_load4_noabort(i32 %991)
  %992 = load ptr, ptr %mqd_obj.i101, align 4
  %mqd_ptr.i110 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 21
  %call5.i = tail call i32 @amdgpu_bo_kmap(ptr noundef %992, ptr noundef %mqd_ptr.i110) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.then7.i, label %if.end.i111.if.end11.i_crit_edge

if.end.i111.if.end11.i_crit_edge:                 ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end11.i

if.then7.i:                                       ; preds = %if.end.i111
  %993 = ptrtoint ptr %arrayidx.i100 to i32
  call void @__asan_load4_noabort(i32 %993)
  %994 = load ptr, ptr %arrayidx.i100, align 8
  %995 = ptrtoint ptr %mqd_ptr.i110 to i32
  call void @__asan_load4_noabort(i32 %995)
  %996 = load ptr, ptr %mqd_ptr.i110, align 8
  %compute_ring.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %994, i32 0, i32 106, i32 38
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %arrayidx.i100 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %compute_ring.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 904
  %in_gpu_reset.i.i.i112 = getelementptr inbounds %struct.amdgpu_device, ptr %994, i32 0, i32 141
  %call.i.i.i.i.i113 = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i112, i32 noundef 4) #13
  %997 = ptrtoint ptr %in_gpu_reset.i.i.i112 to i32
  call void @__asan_load4_noabort(i32 %997)
  %998 = load volatile i32, ptr %in_gpu_reset.i.i.i112, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %998)
  %tobool.not.i.i114 = icmp eq i32 %998, 0
  br i1 %tobool.not.i.i114, label %land.lhs.true.i.i116, label %if.then7.i.if.else.i.i122_crit_edge

if.then7.i.if.else.i.i122_crit_edge:              ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i122

land.lhs.true.i.i116:                             ; preds = %if.then7.i
  %in_suspend.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %994, i32 0, i32 137
  %999 = ptrtoint ptr %in_suspend.i.i to i32
  call void @__asan_load1_noabort(i32 %999)
  %1000 = load i8, ptr %in_suspend.i.i, align 1, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1000)
  %tobool2.not.i.i115 = icmp eq i8 %1000, 0
  br i1 %tobool2.not.i.i115, label %if.then.i.i121, label %land.lhs.true.i.i116.if.else.i.i122_crit_edge

land.lhs.true.i.i116.if.else.i.i122_crit_edge:    ; preds = %land.lhs.true.i.i116
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i122

if.then.i.i121:                                   ; preds = %land.lhs.true.i.i116
  %1001 = call ptr @memset(ptr %996, i32 0, i32 2048)
  %srbm_mutex.i.i117 = getelementptr inbounds %struct.amdgpu_device, ptr %994, i32 0, i32 20
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex.i.i117, i32 noundef 0) #13
  %me.i.i118 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 16
  %1002 = ptrtoint ptr %me.i.i118 to i32
  call void @__asan_load4_noabort(i32 %1002)
  %1003 = load i32, ptr %me.i.i118, align 8
  %pipe.i.i119 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 17
  %1004 = ptrtoint ptr %pipe.i.i119 to i32
  call void @__asan_load4_noabort(i32 %1004)
  %1005 = load i32, ptr %pipe.i.i119, align 4
  %queue.i.i120 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 18
  %1006 = ptrtoint ptr %queue.i.i120 to i32
  call void @__asan_load4_noabort(i32 %1006)
  %1007 = load i32, ptr %queue.i.i120, align 8
  tail call void @nv_grbm_select(ptr noundef %994, i32 noundef %1003, i32 noundef %1005, i32 noundef %1007, i32 noundef 0) #13
  tail call fastcc void @gfx_v10_0_compute_mqd_init(ptr noundef %arrayidx.i100) #13
  tail call void @nv_grbm_select(ptr noundef %994, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  tail call void @mutex_unlock(ptr noundef %srbm_mutex.i.i117) #13
  %arrayidx6.i.i = getelementptr %struct.amdgpu_device, ptr %994, i32 0, i32 106, i32 6, i32 7, i32 %sub.ptr.div.i.i
  %1008 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load4_noabort(i32 %1008)
  %1009 = load ptr, ptr %arrayidx6.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %1009, null
  br i1 %tobool7.not.i.i, label %if.then.i.i121.gfx_v10_0_kcq_init_queue.exit.i_crit_edge, label %if.then8.i.i

if.then.i.i121.gfx_v10_0_kcq_init_queue.exit.i_crit_edge: ; preds = %if.then.i.i121
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kcq_init_queue.exit.i

if.then8.i.i:                                     ; preds = %if.then.i.i121
  call void @__sanitizer_cov_trace_pc() #15
  %1010 = call ptr @memcpy(ptr %1009, ptr %996, i32 2048)
  br label %gfx_v10_0_kcq_init_queue.exit.i

if.else.i.i122:                                   ; preds = %land.lhs.true.i.i116.if.else.i.i122_crit_edge, %if.then7.i.if.else.i.i122_crit_edge
  %call.i.i.i2.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i112, i32 noundef 4) #13
  %1011 = ptrtoint ptr %in_gpu_reset.i.i.i112 to i32
  call void @__asan_load4_noabort(i32 %1011)
  %1012 = load volatile i32, ptr %in_gpu_reset.i.i.i112, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1012)
  %tobool14.not.i.i = icmp eq i32 %1012, 0
  br i1 %tobool14.not.i.i, label %if.else29.i.i, label %if.then15.i.i

if.then15.i.i:                                    ; preds = %if.else.i.i122
  %arrayidx19.i.i = getelementptr %struct.amdgpu_device, ptr %994, i32 0, i32 106, i32 6, i32 7, i32 %sub.ptr.div.i.i
  %1013 = ptrtoint ptr %arrayidx19.i.i to i32
  call void @__asan_load4_noabort(i32 %1013)
  %1014 = load ptr, ptr %arrayidx19.i.i, align 4
  %tobool20.not.i.i = icmp eq ptr %1014, null
  br i1 %tobool20.not.i.i, label %if.then15.i.i.if.end26.i.i_crit_edge, label %if.then21.i.i

if.then15.i.i.if.end26.i.i_crit_edge:             ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end26.i.i

if.then21.i.i:                                    ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %1015 = call ptr @memcpy(ptr %996, ptr %1014, i32 2048)
  br label %if.end26.i.i

if.end26.i.i:                                     ; preds = %if.then21.i.i, %if.then15.i.i.if.end26.i.i_crit_edge
  %wptr.i.i123 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 7
  %1016 = ptrtoint ptr %wptr.i.i123 to i32
  call void @__asan_store8_noabort(i32 %1016)
  store i64 0, ptr %wptr.i.i123, align 8
  %wb27.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %994, i32 0, i32 70, i32 1
  %1017 = ptrtoint ptr %wb27.i.i to i32
  call void @__asan_load4_noabort(i32 %1017)
  %1018 = load ptr, ptr %wb27.i.i, align 4
  %wptr_offs.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 26
  %1019 = ptrtoint ptr %wptr_offs.i.i to i32
  call void @__asan_load4_noabort(i32 %1019)
  %1020 = load i32, ptr %wptr_offs.i.i, align 8
  %arrayidx28.i.i = getelementptr i32, ptr %1018, i32 %1020
  %call.i.i.i31.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx28.i.i, i32 noundef 8) #13
  tail call void @generic_atomic64_set(ptr noundef %arrayidx28.i.i, i64 noundef 0) #13
  %buf_mask.i.i.i124 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 14
  %funcs.i.i.i125 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 1
  %ring1.i.i.i126 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 5
  br label %while.body.i.i.i132

while.body.i.i.i132:                              ; preds = %while.body.i.i.i132.while.body.i.i.i132_crit_edge, %if.end26.i.i
  %i.05.i.i.i127 = phi i32 [ 0, %if.end26.i.i ], [ %inc.i.i.i129, %while.body.i.i.i132.while.body.i.i.i132_crit_edge ]
  %1021 = ptrtoint ptr %funcs.i.i.i125 to i32
  call void @__asan_load4_noabort(i32 %1021)
  %1022 = load ptr, ptr %funcs.i.i.i125, align 4
  %nop.i.i.i128 = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %1022, i32 0, i32 2
  %1023 = ptrtoint ptr %nop.i.i.i128 to i32
  call void @__asan_load4_noabort(i32 %1023)
  %1024 = load i32, ptr %nop.i.i.i128, align 4
  %1025 = ptrtoint ptr %ring1.i.i.i126 to i32
  call void @__asan_load4_noabort(i32 %1025)
  %1026 = load ptr, ptr %ring1.i.i.i126, align 4
  %inc.i.i.i129 = add i32 %i.05.i.i.i127, 1
  %arrayidx.i.i.i130 = getelementptr i32, ptr %1026, i32 %i.05.i.i.i127
  %1027 = ptrtoint ptr %arrayidx.i.i.i130 to i32
  call void @__asan_store4_noabort(i32 %1027)
  store volatile i32 %1024, ptr %arrayidx.i.i.i130, align 4
  %1028 = ptrtoint ptr %buf_mask.i.i.i124 to i32
  call void @__asan_load4_noabort(i32 %1028)
  %1029 = load i32, ptr %buf_mask.i.i.i124, align 8
  %cmp.not.i.i.i131 = icmp ugt i32 %inc.i.i.i129, %1029
  br i1 %cmp.not.i.i.i131, label %while.body.i.i.i132.gfx_v10_0_kcq_init_queue.exit.i_crit_edge, label %while.body.i.i.i132.while.body.i.i.i132_crit_edge

while.body.i.i.i132.while.body.i.i.i132_crit_edge: ; preds = %while.body.i.i.i132
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i.i.i132

while.body.i.i.i132.gfx_v10_0_kcq_init_queue.exit.i_crit_edge: ; preds = %while.body.i.i.i132
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kcq_init_queue.exit.i

if.else29.i.i:                                    ; preds = %if.else.i.i122
  %buf_mask.i3.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 14
  %funcs.i4.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 1
  %ring1.i5.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 5
  br label %while.body.i11.i.i

while.body.i11.i.i:                               ; preds = %while.body.i11.i.i.while.body.i11.i.i_crit_edge, %if.else29.i.i
  %i.05.i6.i.i = phi i32 [ 0, %if.else29.i.i ], [ %inc.i8.i.i, %while.body.i11.i.i.while.body.i11.i.i_crit_edge ]
  %1030 = ptrtoint ptr %funcs.i4.i.i to i32
  call void @__asan_load4_noabort(i32 %1030)
  %1031 = load ptr, ptr %funcs.i4.i.i, align 4
  %nop.i7.i.i = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %1031, i32 0, i32 2
  %1032 = ptrtoint ptr %nop.i7.i.i to i32
  call void @__asan_load4_noabort(i32 %1032)
  %1033 = load i32, ptr %nop.i7.i.i, align 4
  %1034 = ptrtoint ptr %ring1.i5.i.i to i32
  call void @__asan_load4_noabort(i32 %1034)
  %1035 = load ptr, ptr %ring1.i5.i.i, align 4
  %inc.i8.i.i = add i32 %i.05.i6.i.i, 1
  %arrayidx.i9.i.i = getelementptr i32, ptr %1035, i32 %i.05.i6.i.i
  %1036 = ptrtoint ptr %arrayidx.i9.i.i to i32
  call void @__asan_store4_noabort(i32 %1036)
  store volatile i32 %1033, ptr %arrayidx.i9.i.i, align 4
  %1037 = ptrtoint ptr %buf_mask.i3.i.i to i32
  call void @__asan_load4_noabort(i32 %1037)
  %1038 = load i32, ptr %buf_mask.i3.i.i, align 8
  %cmp.not.i10.i.i = icmp ugt i32 %inc.i8.i.i, %1038
  br i1 %cmp.not.i10.i.i, label %while.body.i11.i.i.gfx_v10_0_kcq_init_queue.exit.i_crit_edge, label %while.body.i11.i.i.while.body.i11.i.i_crit_edge

while.body.i11.i.i.while.body.i11.i.i_crit_edge:  ; preds = %while.body.i11.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i11.i.i

while.body.i11.i.i.gfx_v10_0_kcq_init_queue.exit.i_crit_edge: ; preds = %while.body.i11.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kcq_init_queue.exit.i

gfx_v10_0_kcq_init_queue.exit.i:                  ; preds = %while.body.i11.i.i.gfx_v10_0_kcq_init_queue.exit.i_crit_edge, %while.body.i.i.i132.gfx_v10_0_kcq_init_queue.exit.i_crit_edge, %if.then8.i.i, %if.then.i.i121.gfx_v10_0_kcq_init_queue.exit.i_crit_edge
  %1039 = ptrtoint ptr %mqd_obj.i101 to i32
  call void @__asan_load4_noabort(i32 %1039)
  %1040 = load ptr, ptr %mqd_obj.i101, align 4
  tail call void @amdgpu_bo_kunmap(ptr noundef %1040) #13
  %1041 = ptrtoint ptr %mqd_ptr.i110 to i32
  call void @__asan_store4_noabort(i32 %1041)
  store ptr null, ptr %mqd_ptr.i110, align 8
  br label %if.end11.i

if.end11.i:                                       ; preds = %gfx_v10_0_kcq_init_queue.exit.i, %if.end.i111.if.end11.i_crit_edge
  %r.0.i = phi i32 [ %call5.i, %if.end.i111.if.end11.i_crit_edge ], [ 0, %gfx_v10_0_kcq_init_queue.exit.i ]
  %1042 = ptrtoint ptr %mqd_obj.i101 to i32
  call void @__asan_load4_noabort(i32 %1042)
  %1043 = load ptr, ptr %mqd_obj.i101, align 4
  %tbo.i.i133 = getelementptr inbounds %struct.amdgpu_bo, ptr %1043, i32 0, i32 4
  %bdev.i.i.i.i134 = getelementptr inbounds %struct.amdgpu_bo, ptr %1043, i32 0, i32 4, i32 1
  %1044 = ptrtoint ptr %bdev.i.i.i.i134 to i32
  call void @__asan_load4_noabort(i32 %1044)
  %1045 = load ptr, ptr %bdev.i.i.i.i134, align 8
  %lru_lock.i.i.i.i135 = getelementptr inbounds %struct.ttm_device, ptr %1045, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i135) #13
  %resource.i.i.i.i136 = getelementptr inbounds %struct.amdgpu_bo, ptr %1043, i32 0, i32 4, i32 6
  %1046 = ptrtoint ptr %resource.i.i.i.i136 to i32
  call void @__asan_load4_noabort(i32 %1046)
  %1047 = load ptr, ptr %resource.i.i.i.i136, align 4
  tail call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i133, ptr noundef %1047, ptr noundef null) #13
  %1048 = ptrtoint ptr %bdev.i.i.i.i134 to i32
  call void @__asan_load4_noabort(i32 %1048)
  %1049 = load ptr, ptr %bdev.i.i.i.i134, align 8
  %lru_lock2.i.i.i.i137 = getelementptr inbounds %struct.ttm_device, ptr %1049, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i137) #13
  %resv.i.i.i138 = getelementptr inbounds %struct.amdgpu_bo, ptr %1043, i32 0, i32 4, i32 0, i32 9
  %1050 = ptrtoint ptr %resv.i.i.i138 to i32
  call void @__asan_load4_noabort(i32 %1050)
  %1051 = load ptr, ptr %resv.i.i.i138, align 8
  tail call void @dma_resv_reset_shared_max(ptr noundef %1051) #13
  tail call void @ww_mutex_unlock(ptr noundef %1051) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.0.i)
  %tobool13.not.i = icmp eq i32 %r.0.i, 0
  br i1 %tobool13.not.i, label %for.cond.i, label %if.end11.i.cleanup_crit_edge

if.end11.i.cleanup_crit_edge:                     ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.end.i:                                        ; preds = %for.cond.i.for.end.i_crit_edge, %gfx_v10_0_kiq_resume.exit.thread253.for.end.i_crit_edge
  %call16.i = tail call i32 @amdgpu_gfx_enable_kcq(ptr noundef %adev) #13
  br label %gfx_v10_0_kcq_resume.exit

gfx_v10_0_kcq_resume.exit:                        ; preds = %for.end.i, %do.end.i.i109
  %r.1.i = phi i32 [ %retval.1.i.i.i106, %do.end.i.i109 ], [ %call16.i, %for.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.1.i)
  %tobool15.not = icmp eq i32 %r.1.i, 0
  br i1 %tobool15.not, label %if.end17, label %gfx_v10_0_kcq_resume.exit.cleanup_crit_edge

gfx_v10_0_kcq_resume.exit.cleanup_crit_edge:      ; preds = %gfx_v10_0_kcq_resume.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end17:                                         ; preds = %gfx_v10_0_kcq_resume.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_async_gfx_ring to i32))
  %1052 = load i32, ptr @amdgpu_async_gfx_ring, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1052)
  %tobool18.not = icmp eq i32 %1052, 0
  br i1 %tobool18.not, label %if.then19, label %if.else

if.then19:                                        ; preds = %if.end17
  %virt.i139 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %1053 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1053)
  %1054 = load i32, ptr %virt.i139, align 8
  %and.i140 = and i32 %1054, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i140)
  %tobool.not.i141 = icmp eq i32 %and.i140, 0
  br i1 %tobool.not.i141, label %if.then19.cond.false.i149_crit_edge, label %land.lhs.true.i143

if.then19.cond.false.i149_crit_edge:              ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i149

land.lhs.true.i143:                               ; preds = %if.then19
  %funcs.i142 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1055 = ptrtoint ptr %funcs.i142 to i32
  call void @__asan_load4_noabort(i32 %1055)
  %1056 = load ptr, ptr %funcs.i142, align 4
  %tobool1.not.i = icmp eq ptr %1056, null
  br i1 %tobool1.not.i, label %land.lhs.true.i143.cond.false.i149_crit_edge, label %land.lhs.true2.i

land.lhs.true.i143.cond.false.i149_crit_edge:     ; preds = %land.lhs.true.i143
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i149

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i143
  %sriov_wreg.i144 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1056, i32 0, i32 12
  %1057 = ptrtoint ptr %sriov_wreg.i144 to i32
  call void @__asan_load4_noabort(i32 %1057)
  %1058 = load ptr, ptr %sriov_wreg.i144, align 4
  %tobool6.not.i145 = icmp eq ptr %1058, null
  br i1 %tobool6.not.i145, label %land.lhs.true2.i.cond.false.i149_crit_edge, label %cond.true.i148

land.lhs.true2.i.cond.false.i149_crit_edge:       ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i149

cond.true.i148:                                   ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i146 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1059 = ptrtoint ptr %arrayidx.i146 to i32
  call void @__asan_load4_noabort(i32 %1059)
  %1060 = load ptr, ptr %arrayidx.i146, align 8
  %1061 = ptrtoint ptr %1060 to i32
  call void @__asan_load4_noabort(i32 %1061)
  %1062 = load i32, ptr %1060, align 4
  %add.i147 = add i32 %1062, 3937
  tail call void %1058(ptr noundef %adev, i32 noundef %add.i147, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i150

cond.false.i149:                                  ; preds = %land.lhs.true2.i.cond.false.i149_crit_edge, %land.lhs.true.i143.cond.false.i149_crit_edge, %if.then19.cond.false.i149_crit_edge
  %arrayidx14.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1063 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %1063)
  %1064 = load ptr, ptr %arrayidx14.i, align 8
  %1065 = ptrtoint ptr %1064 to i32
  call void @__asan_load4_noabort(i32 %1065)
  %1066 = load i32, ptr %1064, align 4
  %add17.i = add i32 %1066, 3937
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end.i150

cond.end.i150:                                    ; preds = %cond.false.i149, %cond.true.i148
  %1067 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1067)
  %1068 = load i32, ptr %virt.i139, align 8
  %and20.i = and i32 %1068, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br i1 %tobool21.not.i, label %cond.end.i150.cond.false43.i_crit_edge, label %land.lhs.true22.i

cond.end.i150.cond.false43.i_crit_edge:           ; preds = %cond.end.i150
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i

land.lhs.true22.i:                                ; preds = %cond.end.i150
  %funcs25.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1069 = ptrtoint ptr %funcs25.i to i32
  call void @__asan_load4_noabort(i32 %1069)
  %1070 = load ptr, ptr %funcs25.i, align 4
  %tobool26.not.i = icmp eq ptr %1070, null
  br i1 %tobool26.not.i, label %land.lhs.true22.i.cond.false43.i_crit_edge, label %land.lhs.true27.i

land.lhs.true22.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i

land.lhs.true27.i:                                ; preds = %land.lhs.true22.i
  %sriov_wreg31.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1070, i32 0, i32 12
  %1071 = ptrtoint ptr %sriov_wreg31.i to i32
  call void @__asan_load4_noabort(i32 %1071)
  %1072 = load ptr, ptr %sriov_wreg31.i, align 4
  %tobool32.not.i = icmp eq ptr %1072, null
  br i1 %tobool32.not.i, label %land.lhs.true27.i.cond.false43.i_crit_edge, label %cond.true33.i

land.lhs.true27.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false43.i

cond.true33.i:                                    ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx39.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1073 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_load4_noabort(i32 %1073)
  %1074 = load ptr, ptr %arrayidx39.i, align 8
  %1075 = ptrtoint ptr %1074 to i32
  call void @__asan_load4_noabort(i32 %1075)
  %1076 = load i32, ptr %1074, align 4
  %add42.i = add i32 %1076, 7665
  tail call void %1072(ptr noundef %adev, i32 noundef %add42.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end49.i

cond.false43.i:                                   ; preds = %land.lhs.true27.i.cond.false43.i_crit_edge, %land.lhs.true22.i.cond.false43.i_crit_edge, %cond.end.i150.cond.false43.i_crit_edge
  %arrayidx45.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1077 = ptrtoint ptr %arrayidx45.i to i32
  call void @__asan_load4_noabort(i32 %1077)
  %1078 = load ptr, ptr %arrayidx45.i, align 8
  %1079 = ptrtoint ptr %1078 to i32
  call void @__asan_load4_noabort(i32 %1079)
  %1080 = load i32, ptr %1078, align 4
  %add48.i = add i32 %1080, 7665
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add48.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end49.i

cond.end49.i:                                     ; preds = %cond.false43.i, %cond.true33.i
  %srbm_mutex.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 20
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex.i, i32 noundef 0) #13
  tail call fastcc void @gfx_v10_0_cp_gfx_switch_pipe(ptr noundef %adev, i32 noundef 0) #13
  %gfx_ring.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36
  %ring_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 9
  %1081 = ptrtoint ptr %ring_size.i to i32
  call void @__asan_load4_noabort(i32 %1081)
  %1082 = load i32, ptr %ring_size.i, align 8
  %div1.i = lshr i32 %1082, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %1082)
  %cmp.i.i = icmp ugt i32 %1082, 15
  %sub.i4.i = add nsw i32 %div1.i, -1
  %1083 = tail call i32 @llvm.ctlz.i32(i32 %sub.i4.i, i1 false) #13, !range !477
  %add.i.i154 = sub nuw nsw i32 32, %1083
  %cond88.i = select i1 %cmp.i.i, i32 %add.i.i154, i32 0
  %and89.i = and i32 %cond88.i, 63
  %sub91.i = shl nsw i32 %cond88.i, 8
  %shl92.i = add nsw i32 %sub91.i, 15872
  %and93.i = and i32 %shl92.i, 16128
  %or94.i = or i32 %and89.i, %and93.i
  %or96.i = or i32 %or94.i, 65536
  %1084 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1084)
  %1085 = load i32, ptr %virt.i139, align 8
  %and99.i = and i32 %1085, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and99.i)
  %tobool100.not.i = icmp eq i32 %and99.i, 0
  br i1 %tobool100.not.i, label %cond.end49.i.cond.false122.i_crit_edge, label %land.lhs.true101.i

cond.end49.i.cond.false122.i_crit_edge:           ; preds = %cond.end49.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i

land.lhs.true101.i:                               ; preds = %cond.end49.i
  %funcs104.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1086 = ptrtoint ptr %funcs104.i to i32
  call void @__asan_load4_noabort(i32 %1086)
  %1087 = load ptr, ptr %funcs104.i, align 4
  %tobool105.not.i = icmp eq ptr %1087, null
  br i1 %tobool105.not.i, label %land.lhs.true101.i.cond.false122.i_crit_edge, label %land.lhs.true106.i

land.lhs.true101.i.cond.false122.i_crit_edge:     ; preds = %land.lhs.true101.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i

land.lhs.true106.i:                               ; preds = %land.lhs.true101.i
  %sriov_wreg110.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1087, i32 0, i32 12
  %1088 = ptrtoint ptr %sriov_wreg110.i to i32
  call void @__asan_load4_noabort(i32 %1088)
  %1089 = load ptr, ptr %sriov_wreg110.i, align 4
  %tobool111.not.i = icmp eq ptr %1089, null
  br i1 %tobool111.not.i, label %land.lhs.true106.i.cond.false122.i_crit_edge, label %cond.true112.i

land.lhs.true106.i.cond.false122.i_crit_edge:     ; preds = %land.lhs.true106.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122.i

cond.true112.i:                                   ; preds = %land.lhs.true106.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx118.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1090 = ptrtoint ptr %arrayidx118.i to i32
  call void @__asan_load4_noabort(i32 %1090)
  %1091 = load ptr, ptr %arrayidx118.i, align 8
  %1092 = ptrtoint ptr %1091 to i32
  call void @__asan_load4_noabort(i32 %1092)
  %1093 = load i32, ptr %1091, align 4
  %add121.i = add i32 %1093, 7649
  tail call void %1089(ptr noundef %adev, i32 noundef %add121.i, i32 noundef %or96.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end128.i

cond.false122.i:                                  ; preds = %land.lhs.true106.i.cond.false122.i_crit_edge, %land.lhs.true101.i.cond.false122.i_crit_edge, %cond.end49.i.cond.false122.i_crit_edge
  %arrayidx124.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1094 = ptrtoint ptr %arrayidx124.i to i32
  call void @__asan_load4_noabort(i32 %1094)
  %1095 = load ptr, ptr %arrayidx124.i, align 8
  %1096 = ptrtoint ptr %1095 to i32
  call void @__asan_load4_noabort(i32 %1096)
  %1097 = load i32, ptr %1095, align 4
  %add127.i = add i32 %1097, 7649
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add127.i, i32 noundef %or96.i, i32 noundef 0) #13
  br label %cond.end128.i

cond.end128.i:                                    ; preds = %cond.false122.i, %cond.true112.i
  %wptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 7
  %1098 = ptrtoint ptr %wptr.i to i32
  call void @__asan_store8_noabort(i32 %1098)
  store i64 0, ptr %wptr.i, align 8
  %1099 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1099)
  %1100 = load i32, ptr %virt.i139, align 8
  %and131.i = and i32 %1100, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and131.i)
  %tobool132.not.i = icmp eq i32 %and131.i, 0
  br i1 %tobool132.not.i, label %cond.end128.i.cond.false157.i_crit_edge, label %land.lhs.true133.i

cond.end128.i.cond.false157.i_crit_edge:          ; preds = %cond.end128.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false157.i

land.lhs.true133.i:                               ; preds = %cond.end128.i
  %funcs136.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1101 = ptrtoint ptr %funcs136.i to i32
  call void @__asan_load4_noabort(i32 %1101)
  %1102 = load ptr, ptr %funcs136.i, align 4
  %tobool137.not.i = icmp eq ptr %1102, null
  br i1 %tobool137.not.i, label %land.lhs.true133.i.cond.false157.i_crit_edge, label %land.lhs.true138.i

land.lhs.true133.i.cond.false157.i_crit_edge:     ; preds = %land.lhs.true133.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false157.i

land.lhs.true138.i:                               ; preds = %land.lhs.true133.i
  %sriov_wreg142.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1102, i32 0, i32 12
  %1103 = ptrtoint ptr %sriov_wreg142.i to i32
  call void @__asan_load4_noabort(i32 %1103)
  %1104 = load ptr, ptr %sriov_wreg142.i, align 4
  %tobool143.not.i = icmp eq ptr %1104, null
  br i1 %tobool143.not.i, label %land.lhs.true138.i.cond.false157.i_crit_edge, label %cond.true144.i

land.lhs.true138.i.cond.false157.i_crit_edge:     ; preds = %land.lhs.true138.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false157.i

cond.true144.i:                                   ; preds = %land.lhs.true138.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx150.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1105 = ptrtoint ptr %arrayidx150.i to i32
  call void @__asan_load4_noabort(i32 %1105)
  %1106 = load ptr, ptr %arrayidx150.i, align 8
  %1107 = ptrtoint ptr %1106 to i32
  call void @__asan_load4_noabort(i32 %1107)
  %1108 = load i32, ptr %1106, align 4
  %add153.i = add i32 %1108, 7668
  tail call void %1104(ptr noundef %adev, i32 noundef %add153.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end166.i

cond.false157.i:                                  ; preds = %land.lhs.true138.i.cond.false157.i_crit_edge, %land.lhs.true133.i.cond.false157.i_crit_edge, %cond.end128.i.cond.false157.i_crit_edge
  %arrayidx159.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1109 = ptrtoint ptr %arrayidx159.i to i32
  call void @__asan_load4_noabort(i32 %1109)
  %1110 = load ptr, ptr %arrayidx159.i, align 8
  %1111 = ptrtoint ptr %1110 to i32
  call void @__asan_load4_noabort(i32 %1111)
  %1112 = load i32, ptr %1110, align 4
  %add162.i = add i32 %1112, 7668
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add162.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end166.i

cond.end166.i:                                    ; preds = %cond.false157.i, %cond.true144.i
  %1113 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1113)
  %1114 = load i32, ptr %virt.i139, align 8
  %and169.i = and i32 %1114, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and169.i)
  %tobool170.not.i = icmp eq i32 %and169.i, 0
  br i1 %tobool170.not.i, label %cond.end166.i.cond.false195.i_crit_edge, label %land.lhs.true171.i

cond.end166.i.cond.false195.i_crit_edge:          ; preds = %cond.end166.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false195.i

land.lhs.true171.i:                               ; preds = %cond.end166.i
  %funcs174.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1115 = ptrtoint ptr %funcs174.i to i32
  call void @__asan_load4_noabort(i32 %1115)
  %1116 = load ptr, ptr %funcs174.i, align 4
  %tobool175.not.i = icmp eq ptr %1116, null
  br i1 %tobool175.not.i, label %land.lhs.true171.i.cond.false195.i_crit_edge, label %land.lhs.true176.i

land.lhs.true171.i.cond.false195.i_crit_edge:     ; preds = %land.lhs.true171.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false195.i

land.lhs.true176.i:                               ; preds = %land.lhs.true171.i
  %sriov_wreg180.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1116, i32 0, i32 12
  %1117 = ptrtoint ptr %sriov_wreg180.i to i32
  call void @__asan_load4_noabort(i32 %1117)
  %1118 = load ptr, ptr %sriov_wreg180.i, align 4
  %tobool181.not.i155 = icmp eq ptr %1118, null
  br i1 %tobool181.not.i155, label %land.lhs.true176.i.cond.false195.i_crit_edge, label %cond.true182.i

land.lhs.true176.i.cond.false195.i_crit_edge:     ; preds = %land.lhs.true176.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false195.i

cond.true182.i:                                   ; preds = %land.lhs.true176.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx188.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1119 = ptrtoint ptr %arrayidx188.i to i32
  call void @__asan_load4_noabort(i32 %1119)
  %1120 = load ptr, ptr %arrayidx188.i, align 8
  %1121 = ptrtoint ptr %1120 to i32
  call void @__asan_load4_noabort(i32 %1121)
  %1122 = load i32, ptr %1120, align 4
  %add191.i = add i32 %1122, 7669
  %1123 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %1123)
  %1124 = load i64, ptr %wptr.i, align 8
  %shr.i = lshr i64 %1124, 32
  %conv194.i = trunc i64 %shr.i to i32
  tail call void %1118(ptr noundef %adev, i32 noundef %add191.i, i32 noundef %conv194.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end205.i

cond.false195.i:                                  ; preds = %land.lhs.true176.i.cond.false195.i_crit_edge, %land.lhs.true171.i.cond.false195.i_crit_edge, %cond.end166.i.cond.false195.i_crit_edge
  %arrayidx197.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1125 = ptrtoint ptr %arrayidx197.i to i32
  call void @__asan_load4_noabort(i32 %1125)
  %1126 = load ptr, ptr %arrayidx197.i, align 8
  %1127 = ptrtoint ptr %1126 to i32
  call void @__asan_load4_noabort(i32 %1127)
  %1128 = load i32, ptr %1126, align 4
  %add200.i = add i32 %1128, 7669
  %1129 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %1129)
  %1130 = load i64, ptr %wptr.i, align 8
  %shr202.i = lshr i64 %1130, 32
  %conv204.i = trunc i64 %shr202.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add200.i, i32 noundef %conv204.i, i32 noundef 0) #13
  br label %cond.end205.i

cond.end205.i:                                    ; preds = %cond.false195.i, %cond.true182.i
  %gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 2
  %1131 = ptrtoint ptr %gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %1131)
  %1132 = load i64, ptr %gpu_addr.i, align 8
  %rptr_offs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 6
  %1133 = ptrtoint ptr %rptr_offs.i to i32
  call void @__asan_load4_noabort(i32 %1133)
  %1134 = load i32, ptr %rptr_offs.i, align 8
  %mul.i = shl i32 %1134, 2
  %conv206.i = zext i32 %mul.i to i64
  %add207.i = add i64 %1132, %conv206.i
  %1135 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1135)
  %1136 = load i32, ptr %virt.i139, align 8
  %and210.i = and i32 %1136, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and210.i)
  %tobool211.not.i = icmp eq i32 %and210.i, 0
  br i1 %tobool211.not.i, label %cond.end205.i.cond.false235.i_crit_edge, label %land.lhs.true212.i

cond.end205.i.cond.false235.i_crit_edge:          ; preds = %cond.end205.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false235.i

land.lhs.true212.i:                               ; preds = %cond.end205.i
  %funcs215.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1137 = ptrtoint ptr %funcs215.i to i32
  call void @__asan_load4_noabort(i32 %1137)
  %1138 = load ptr, ptr %funcs215.i, align 4
  %tobool216.not.i = icmp eq ptr %1138, null
  br i1 %tobool216.not.i, label %land.lhs.true212.i.cond.false235.i_crit_edge, label %land.lhs.true217.i

land.lhs.true212.i.cond.false235.i_crit_edge:     ; preds = %land.lhs.true212.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false235.i

land.lhs.true217.i:                               ; preds = %land.lhs.true212.i
  %sriov_wreg221.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1138, i32 0, i32 12
  %1139 = ptrtoint ptr %sriov_wreg221.i to i32
  call void @__asan_load4_noabort(i32 %1139)
  %1140 = load ptr, ptr %sriov_wreg221.i, align 4
  %tobool222.not.i = icmp eq ptr %1140, null
  br i1 %tobool222.not.i, label %land.lhs.true217.i.cond.false235.i_crit_edge, label %cond.true223.i

land.lhs.true217.i.cond.false235.i_crit_edge:     ; preds = %land.lhs.true217.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false235.i

cond.true223.i:                                   ; preds = %land.lhs.true217.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx229.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1141 = ptrtoint ptr %arrayidx229.i to i32
  call void @__asan_load4_noabort(i32 %1141)
  %1142 = load ptr, ptr %arrayidx229.i, align 8
  %1143 = ptrtoint ptr %1142 to i32
  call void @__asan_load4_noabort(i32 %1143)
  %1144 = load i32, ptr %1142, align 4
  %add232.i = add i32 %1144, 7651
  %conv234.i = trunc i64 %add207.i to i32
  tail call void %1140(ptr noundef %adev, i32 noundef %add232.i, i32 noundef %conv234.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end243.i

cond.false235.i:                                  ; preds = %land.lhs.true217.i.cond.false235.i_crit_edge, %land.lhs.true212.i.cond.false235.i_crit_edge, %cond.end205.i.cond.false235.i_crit_edge
  %arrayidx237.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1145 = ptrtoint ptr %arrayidx237.i to i32
  call void @__asan_load4_noabort(i32 %1145)
  %1146 = load ptr, ptr %arrayidx237.i, align 8
  %1147 = ptrtoint ptr %1146 to i32
  call void @__asan_load4_noabort(i32 %1147)
  %1148 = load i32, ptr %1146, align 4
  %add240.i = add i32 %1148, 7651
  %conv242.i = trunc i64 %add207.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add240.i, i32 noundef %conv242.i, i32 noundef 0) #13
  br label %cond.end243.i

cond.end243.i:                                    ; preds = %cond.false235.i, %cond.true223.i
  %1149 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1149)
  %1150 = load i32, ptr %virt.i139, align 8
  %and246.i = and i32 %1150, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and246.i)
  %tobool247.not.i = icmp eq i32 %and246.i, 0
  br i1 %tobool247.not.i, label %cond.end243.i.cond.false273.i_crit_edge, label %land.lhs.true248.i

cond.end243.i.cond.false273.i_crit_edge:          ; preds = %cond.end243.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false273.i

land.lhs.true248.i:                               ; preds = %cond.end243.i
  %funcs251.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1151 = ptrtoint ptr %funcs251.i to i32
  call void @__asan_load4_noabort(i32 %1151)
  %1152 = load ptr, ptr %funcs251.i, align 4
  %tobool252.not.i = icmp eq ptr %1152, null
  br i1 %tobool252.not.i, label %land.lhs.true248.i.cond.false273.i_crit_edge, label %land.lhs.true253.i

land.lhs.true248.i.cond.false273.i_crit_edge:     ; preds = %land.lhs.true248.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false273.i

land.lhs.true253.i:                               ; preds = %land.lhs.true248.i
  %sriov_wreg257.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1152, i32 0, i32 12
  %1153 = ptrtoint ptr %sriov_wreg257.i to i32
  call void @__asan_load4_noabort(i32 %1153)
  %1154 = load ptr, ptr %sriov_wreg257.i, align 4
  %tobool258.not.i = icmp eq ptr %1154, null
  br i1 %tobool258.not.i, label %land.lhs.true253.i.cond.false273.i_crit_edge, label %cond.true259.i

land.lhs.true253.i.cond.false273.i_crit_edge:     ; preds = %land.lhs.true253.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false273.i

cond.true259.i:                                   ; preds = %land.lhs.true253.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx265.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1155 = ptrtoint ptr %arrayidx265.i to i32
  call void @__asan_load4_noabort(i32 %1155)
  %1156 = load ptr, ptr %arrayidx265.i, align 8
  %1157 = ptrtoint ptr %1156 to i32
  call void @__asan_load4_noabort(i32 %1157)
  %1158 = load i32, ptr %1156, align 4
  %add268.i = add i32 %1158, 7652
  %shr269.i = lshr i64 %add207.i, 32
  %conv271.i = trunc i64 %shr269.i to i32
  %and272.i = and i32 %conv271.i, 65535
  tail call void %1154(ptr noundef %adev, i32 noundef %add268.i, i32 noundef %and272.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end283.i

cond.false273.i:                                  ; preds = %land.lhs.true253.i.cond.false273.i_crit_edge, %land.lhs.true248.i.cond.false273.i_crit_edge, %cond.end243.i.cond.false273.i_crit_edge
  %arrayidx275.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1159 = ptrtoint ptr %arrayidx275.i to i32
  call void @__asan_load4_noabort(i32 %1159)
  %1160 = load ptr, ptr %arrayidx275.i, align 8
  %1161 = ptrtoint ptr %1160 to i32
  call void @__asan_load4_noabort(i32 %1161)
  %1162 = load i32, ptr %1160, align 4
  %add278.i = add i32 %1162, 7652
  %shr279.i = lshr i64 %add207.i, 32
  %conv281.i = trunc i64 %shr279.i to i32
  %and282.i = and i32 %conv281.i, 65535
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add278.i, i32 noundef %and282.i, i32 noundef 0) #13
  br label %cond.end283.i

cond.end283.i:                                    ; preds = %cond.false273.i, %cond.true259.i
  %1163 = ptrtoint ptr %gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %1163)
  %1164 = load i64, ptr %gpu_addr.i, align 8
  %wptr_offs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 26
  %1165 = ptrtoint ptr %wptr_offs.i to i32
  call void @__asan_load4_noabort(i32 %1165)
  %1166 = load i32, ptr %wptr_offs.i, align 8
  %mul286.i = shl i32 %1166, 2
  %conv287.i = zext i32 %mul286.i to i64
  %add288.i = add i64 %1164, %conv287.i
  %1167 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1167)
  %1168 = load i32, ptr %virt.i139, align 8
  %and291.i = and i32 %1168, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and291.i)
  %tobool292.not.i = icmp eq i32 %and291.i, 0
  br i1 %tobool292.not.i, label %cond.end283.i.cond.false316.i_crit_edge, label %land.lhs.true293.i

cond.end283.i.cond.false316.i_crit_edge:          ; preds = %cond.end283.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false316.i

land.lhs.true293.i:                               ; preds = %cond.end283.i
  %funcs296.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1169 = ptrtoint ptr %funcs296.i to i32
  call void @__asan_load4_noabort(i32 %1169)
  %1170 = load ptr, ptr %funcs296.i, align 4
  %tobool297.not.i = icmp eq ptr %1170, null
  br i1 %tobool297.not.i, label %land.lhs.true293.i.cond.false316.i_crit_edge, label %land.lhs.true298.i

land.lhs.true293.i.cond.false316.i_crit_edge:     ; preds = %land.lhs.true293.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false316.i

land.lhs.true298.i:                               ; preds = %land.lhs.true293.i
  %sriov_wreg302.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1170, i32 0, i32 12
  %1171 = ptrtoint ptr %sriov_wreg302.i to i32
  call void @__asan_load4_noabort(i32 %1171)
  %1172 = load ptr, ptr %sriov_wreg302.i, align 4
  %tobool303.not.i = icmp eq ptr %1172, null
  br i1 %tobool303.not.i, label %land.lhs.true298.i.cond.false316.i_crit_edge, label %cond.true304.i

land.lhs.true298.i.cond.false316.i_crit_edge:     ; preds = %land.lhs.true298.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false316.i

cond.true304.i:                                   ; preds = %land.lhs.true298.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx310.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1173 = ptrtoint ptr %arrayidx310.i to i32
  call void @__asan_load4_noabort(i32 %1173)
  %1174 = load ptr, ptr %arrayidx310.i, align 8
  %1175 = ptrtoint ptr %1174 to i32
  call void @__asan_load4_noabort(i32 %1175)
  %1176 = load i32, ptr %1174, align 4
  %add313.i = add i32 %1176, 7819
  %conv315.i = trunc i64 %add288.i to i32
  tail call void %1172(ptr noundef %adev, i32 noundef %add313.i, i32 noundef %conv315.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end324.i

cond.false316.i:                                  ; preds = %land.lhs.true298.i.cond.false316.i_crit_edge, %land.lhs.true293.i.cond.false316.i_crit_edge, %cond.end283.i.cond.false316.i_crit_edge
  %arrayidx318.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1177 = ptrtoint ptr %arrayidx318.i to i32
  call void @__asan_load4_noabort(i32 %1177)
  %1178 = load ptr, ptr %arrayidx318.i, align 8
  %1179 = ptrtoint ptr %1178 to i32
  call void @__asan_load4_noabort(i32 %1179)
  %1180 = load i32, ptr %1178, align 4
  %add321.i156 = add i32 %1180, 7819
  %conv323.i = trunc i64 %add288.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add321.i156, i32 noundef %conv323.i, i32 noundef 0) #13
  br label %cond.end324.i

cond.end324.i:                                    ; preds = %cond.false316.i, %cond.true304.i
  %1181 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1181)
  %1182 = load i32, ptr %virt.i139, align 8
  %and327.i = and i32 %1182, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and327.i)
  %tobool328.not.i = icmp eq i32 %and327.i, 0
  br i1 %tobool328.not.i, label %cond.end324.i.cond.false353.i_crit_edge, label %land.lhs.true329.i

cond.end324.i.cond.false353.i_crit_edge:          ; preds = %cond.end324.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false353.i

land.lhs.true329.i:                               ; preds = %cond.end324.i
  %funcs332.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1183 = ptrtoint ptr %funcs332.i to i32
  call void @__asan_load4_noabort(i32 %1183)
  %1184 = load ptr, ptr %funcs332.i, align 4
  %tobool333.not.i = icmp eq ptr %1184, null
  br i1 %tobool333.not.i, label %land.lhs.true329.i.cond.false353.i_crit_edge, label %land.lhs.true334.i

land.lhs.true329.i.cond.false353.i_crit_edge:     ; preds = %land.lhs.true329.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false353.i

land.lhs.true334.i:                               ; preds = %land.lhs.true329.i
  %sriov_wreg338.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1184, i32 0, i32 12
  %1185 = ptrtoint ptr %sriov_wreg338.i to i32
  call void @__asan_load4_noabort(i32 %1185)
  %1186 = load ptr, ptr %sriov_wreg338.i, align 4
  %tobool339.not.i = icmp eq ptr %1186, null
  br i1 %tobool339.not.i, label %land.lhs.true334.i.cond.false353.i_crit_edge, label %cond.true340.i

land.lhs.true334.i.cond.false353.i_crit_edge:     ; preds = %land.lhs.true334.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false353.i

cond.true340.i:                                   ; preds = %land.lhs.true334.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx346.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1187 = ptrtoint ptr %arrayidx346.i to i32
  call void @__asan_load4_noabort(i32 %1187)
  %1188 = load ptr, ptr %arrayidx346.i, align 8
  %1189 = ptrtoint ptr %1188 to i32
  call void @__asan_load4_noabort(i32 %1189)
  %1190 = load i32, ptr %1188, align 4
  %add349.i = add i32 %1190, 7820
  %shr350.i = lshr i64 %add288.i, 32
  %conv352.i = trunc i64 %shr350.i to i32
  tail call void %1186(ptr noundef %adev, i32 noundef %add349.i, i32 noundef %conv352.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end362.i

cond.false353.i:                                  ; preds = %land.lhs.true334.i.cond.false353.i_crit_edge, %land.lhs.true329.i.cond.false353.i_crit_edge, %cond.end324.i.cond.false353.i_crit_edge
  %arrayidx355.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1191 = ptrtoint ptr %arrayidx355.i to i32
  call void @__asan_load4_noabort(i32 %1191)
  %1192 = load ptr, ptr %arrayidx355.i, align 8
  %1193 = ptrtoint ptr %1192 to i32
  call void @__asan_load4_noabort(i32 %1193)
  %1194 = load i32, ptr %1192, align 4
  %add358.i = add i32 %1194, 7820
  %shr359.i = lshr i64 %add288.i, 32
  %conv361.i = trunc i64 %shr359.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add358.i, i32 noundef %conv361.i, i32 noundef 0) #13
  br label %cond.end362.i

cond.end362.i:                                    ; preds = %cond.false353.i, %cond.true340.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %1195 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %1195(i32 noundef 214748000) #13
  %1196 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1196)
  %1197 = load i32, ptr %virt.i139, align 8
  %and365.i = and i32 %1197, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and365.i)
  %tobool366.not.i = icmp eq i32 %and365.i, 0
  br i1 %tobool366.not.i, label %cond.end362.i.cond.false388.i_crit_edge, label %land.lhs.true367.i

cond.end362.i.cond.false388.i_crit_edge:          ; preds = %cond.end362.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false388.i

land.lhs.true367.i:                               ; preds = %cond.end362.i
  %funcs370.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1198 = ptrtoint ptr %funcs370.i to i32
  call void @__asan_load4_noabort(i32 %1198)
  %1199 = load ptr, ptr %funcs370.i, align 4
  %tobool371.not.i = icmp eq ptr %1199, null
  br i1 %tobool371.not.i, label %land.lhs.true367.i.cond.false388.i_crit_edge, label %land.lhs.true372.i

land.lhs.true367.i.cond.false388.i_crit_edge:     ; preds = %land.lhs.true367.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false388.i

land.lhs.true372.i:                               ; preds = %land.lhs.true367.i
  %sriov_wreg376.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1199, i32 0, i32 12
  %1200 = ptrtoint ptr %sriov_wreg376.i to i32
  call void @__asan_load4_noabort(i32 %1200)
  %1201 = load ptr, ptr %sriov_wreg376.i, align 4
  %tobool377.not.i = icmp eq ptr %1201, null
  br i1 %tobool377.not.i, label %land.lhs.true372.i.cond.false388.i_crit_edge, label %cond.true378.i

land.lhs.true372.i.cond.false388.i_crit_edge:     ; preds = %land.lhs.true372.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false388.i

cond.true378.i:                                   ; preds = %land.lhs.true372.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx384.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1202 = ptrtoint ptr %arrayidx384.i to i32
  call void @__asan_load4_noabort(i32 %1202)
  %1203 = load ptr, ptr %arrayidx384.i, align 8
  %1204 = ptrtoint ptr %1203 to i32
  call void @__asan_load4_noabort(i32 %1204)
  %1205 = load i32, ptr %1203, align 4
  %add387.i = add i32 %1205, 7649
  tail call void %1201(ptr noundef %adev, i32 noundef %add387.i, i32 noundef %or96.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end394.i

cond.false388.i:                                  ; preds = %land.lhs.true372.i.cond.false388.i_crit_edge, %land.lhs.true367.i.cond.false388.i_crit_edge, %cond.end362.i.cond.false388.i_crit_edge
  %arrayidx390.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1206 = ptrtoint ptr %arrayidx390.i to i32
  call void @__asan_load4_noabort(i32 %1206)
  %1207 = load ptr, ptr %arrayidx390.i, align 8
  %1208 = ptrtoint ptr %1207 to i32
  call void @__asan_load4_noabort(i32 %1208)
  %1209 = load i32, ptr %1207, align 4
  %add393.i = add i32 %1209, 7649
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add393.i, i32 noundef %or96.i, i32 noundef 0) #13
  br label %cond.end394.i

cond.end394.i:                                    ; preds = %cond.false388.i, %cond.true378.i
  %gpu_addr395.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 12
  %1210 = ptrtoint ptr %gpu_addr395.i to i32
  call void @__asan_load8_noabort(i32 %1210)
  %1211 = load i64, ptr %gpu_addr395.i, align 8
  %shr396.i = lshr i64 %1211, 8
  %1212 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1212)
  %1213 = load i32, ptr %virt.i139, align 8
  %and399.i = and i32 %1213, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and399.i)
  %tobool400.not.i = icmp eq i32 %and399.i, 0
  br i1 %tobool400.not.i, label %cond.end394.i.cond.false423.i_crit_edge, label %land.lhs.true401.i

cond.end394.i.cond.false423.i_crit_edge:          ; preds = %cond.end394.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false423.i

land.lhs.true401.i:                               ; preds = %cond.end394.i
  %funcs404.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1214 = ptrtoint ptr %funcs404.i to i32
  call void @__asan_load4_noabort(i32 %1214)
  %1215 = load ptr, ptr %funcs404.i, align 4
  %tobool405.not.i = icmp eq ptr %1215, null
  br i1 %tobool405.not.i, label %land.lhs.true401.i.cond.false423.i_crit_edge, label %land.lhs.true406.i

land.lhs.true401.i.cond.false423.i_crit_edge:     ; preds = %land.lhs.true401.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false423.i

land.lhs.true406.i:                               ; preds = %land.lhs.true401.i
  %sriov_wreg410.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1215, i32 0, i32 12
  %1216 = ptrtoint ptr %sriov_wreg410.i to i32
  call void @__asan_load4_noabort(i32 %1216)
  %1217 = load ptr, ptr %sriov_wreg410.i, align 4
  %tobool411.not.i = icmp eq ptr %1217, null
  br i1 %tobool411.not.i, label %land.lhs.true406.i.cond.false423.i_crit_edge, label %cond.true412.i

land.lhs.true406.i.cond.false423.i_crit_edge:     ; preds = %land.lhs.true406.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false423.i

cond.true412.i:                                   ; preds = %land.lhs.true406.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx418.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1218 = ptrtoint ptr %arrayidx418.i to i32
  call void @__asan_load4_noabort(i32 %1218)
  %1219 = load ptr, ptr %arrayidx418.i, align 8
  %1220 = ptrtoint ptr %1219 to i32
  call void @__asan_load4_noabort(i32 %1220)
  %1221 = load i32, ptr %1219, align 4
  %add421.i = add i32 %1221, 7648
  %conv422.i = trunc i64 %shr396.i to i32
  tail call void %1217(ptr noundef %adev, i32 noundef %add421.i, i32 noundef %conv422.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end430.i

cond.false423.i:                                  ; preds = %land.lhs.true406.i.cond.false423.i_crit_edge, %land.lhs.true401.i.cond.false423.i_crit_edge, %cond.end394.i.cond.false423.i_crit_edge
  %arrayidx425.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1222 = ptrtoint ptr %arrayidx425.i to i32
  call void @__asan_load4_noabort(i32 %1222)
  %1223 = load ptr, ptr %arrayidx425.i, align 8
  %1224 = ptrtoint ptr %1223 to i32
  call void @__asan_load4_noabort(i32 %1224)
  %1225 = load i32, ptr %1223, align 4
  %add428.i = add i32 %1225, 7648
  %conv429.i = trunc i64 %shr396.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add428.i, i32 noundef %conv429.i, i32 noundef 0) #13
  br label %cond.end430.i

cond.end430.i:                                    ; preds = %cond.false423.i, %cond.true412.i
  %1226 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1226)
  %1227 = load i32, ptr %virt.i139, align 8
  %and433.i = and i32 %1227, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and433.i)
  %tobool434.not.i = icmp eq i32 %and433.i, 0
  br i1 %tobool434.not.i, label %cond.end430.i.cond.false459.i_crit_edge, label %land.lhs.true435.i

cond.end430.i.cond.false459.i_crit_edge:          ; preds = %cond.end430.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false459.i

land.lhs.true435.i:                               ; preds = %cond.end430.i
  %funcs438.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1228 = ptrtoint ptr %funcs438.i to i32
  call void @__asan_load4_noabort(i32 %1228)
  %1229 = load ptr, ptr %funcs438.i, align 4
  %tobool439.not.i = icmp eq ptr %1229, null
  br i1 %tobool439.not.i, label %land.lhs.true435.i.cond.false459.i_crit_edge, label %land.lhs.true440.i

land.lhs.true435.i.cond.false459.i_crit_edge:     ; preds = %land.lhs.true435.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false459.i

land.lhs.true440.i:                               ; preds = %land.lhs.true435.i
  %sriov_wreg444.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1229, i32 0, i32 12
  %1230 = ptrtoint ptr %sriov_wreg444.i to i32
  call void @__asan_load4_noabort(i32 %1230)
  %1231 = load ptr, ptr %sriov_wreg444.i, align 4
  %tobool445.not.i = icmp eq ptr %1231, null
  br i1 %tobool445.not.i, label %land.lhs.true440.i.cond.false459.i_crit_edge, label %cond.true446.i

land.lhs.true440.i.cond.false459.i_crit_edge:     ; preds = %land.lhs.true440.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false459.i

cond.true446.i:                                   ; preds = %land.lhs.true440.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx452.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1232 = ptrtoint ptr %arrayidx452.i to i32
  call void @__asan_load4_noabort(i32 %1232)
  %1233 = load ptr, ptr %arrayidx452.i, align 8
  %1234 = ptrtoint ptr %1233 to i32
  call void @__asan_load4_noabort(i32 %1234)
  %1235 = load i32, ptr %1233, align 4
  %add455.i = add i32 %1235, 7761
  %shr456.i = lshr i64 %1211, 40
  %conv458.i = trunc i64 %shr456.i to i32
  tail call void %1231(ptr noundef %adev, i32 noundef %add455.i, i32 noundef %conv458.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end468.i

cond.false459.i:                                  ; preds = %land.lhs.true440.i.cond.false459.i_crit_edge, %land.lhs.true435.i.cond.false459.i_crit_edge, %cond.end430.i.cond.false459.i_crit_edge
  %arrayidx461.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1236 = ptrtoint ptr %arrayidx461.i to i32
  call void @__asan_load4_noabort(i32 %1236)
  %1237 = load ptr, ptr %arrayidx461.i, align 8
  %1238 = ptrtoint ptr %1237 to i32
  call void @__asan_load4_noabort(i32 %1238)
  %1239 = load i32, ptr %1237, align 4
  %add464.i = add i32 %1239, 7761
  %shr465.i = lshr i64 %1211, 40
  %conv467.i = trunc i64 %shr465.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add464.i, i32 noundef %conv467.i, i32 noundef 0) #13
  br label %cond.end468.i

cond.end468.i:                                    ; preds = %cond.false459.i, %cond.true446.i
  %1240 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1240)
  %1241 = load i32, ptr %virt.i139, align 8
  %and471.i = and i32 %1241, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and471.i)
  %tobool472.not.i = icmp eq i32 %and471.i, 0
  br i1 %tobool472.not.i, label %cond.end468.i.cond.false494.i_crit_edge, label %land.lhs.true473.i

cond.end468.i.cond.false494.i_crit_edge:          ; preds = %cond.end468.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false494.i

land.lhs.true473.i:                               ; preds = %cond.end468.i
  %funcs476.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1242 = ptrtoint ptr %funcs476.i to i32
  call void @__asan_load4_noabort(i32 %1242)
  %1243 = load ptr, ptr %funcs476.i, align 4
  %tobool477.not.i = icmp eq ptr %1243, null
  br i1 %tobool477.not.i, label %land.lhs.true473.i.cond.false494.i_crit_edge, label %land.lhs.true478.i

land.lhs.true473.i.cond.false494.i_crit_edge:     ; preds = %land.lhs.true473.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false494.i

land.lhs.true478.i:                               ; preds = %land.lhs.true473.i
  %sriov_wreg482.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1243, i32 0, i32 12
  %1244 = ptrtoint ptr %sriov_wreg482.i to i32
  call void @__asan_load4_noabort(i32 %1244)
  %1245 = load ptr, ptr %sriov_wreg482.i, align 4
  %tobool483.not.i = icmp eq ptr %1245, null
  br i1 %tobool483.not.i, label %land.lhs.true478.i.cond.false494.i_crit_edge, label %cond.true484.i

land.lhs.true478.i.cond.false494.i_crit_edge:     ; preds = %land.lhs.true478.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false494.i

cond.true484.i:                                   ; preds = %land.lhs.true478.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx490.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1246 = ptrtoint ptr %arrayidx490.i to i32
  call void @__asan_load4_noabort(i32 %1246)
  %1247 = load ptr, ptr %arrayidx490.i, align 8
  %1248 = ptrtoint ptr %1247 to i32
  call void @__asan_load4_noabort(i32 %1248)
  %1249 = load i32, ptr %1247, align 4
  %add493.i = add i32 %1249, 8000
  tail call void %1245(ptr noundef %adev, i32 noundef %add493.i, i32 noundef 1, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end500.i

cond.false494.i:                                  ; preds = %land.lhs.true478.i.cond.false494.i_crit_edge, %land.lhs.true473.i.cond.false494.i_crit_edge, %cond.end468.i.cond.false494.i_crit_edge
  %arrayidx496.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1250 = ptrtoint ptr %arrayidx496.i to i32
  call void @__asan_load4_noabort(i32 %1250)
  %1251 = load ptr, ptr %arrayidx496.i, align 8
  %1252 = ptrtoint ptr %1251 to i32
  call void @__asan_load4_noabort(i32 %1252)
  %1253 = load i32, ptr %1251, align 4
  %add499.i = add i32 %1253, 8000
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add499.i, i32 noundef 1, i32 noundef 0) #13
  br label %cond.end500.i

cond.end500.i:                                    ; preds = %cond.false494.i, %cond.true484.i
  tail call fastcc void @gfx_v10_0_cp_gfx_set_doorbell(ptr noundef %adev, ptr noundef %gfx_ring.i) #13
  tail call void @mutex_unlock(ptr noundef %srbm_mutex.i) #13
  %num_gfx_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %1254 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %1254)
  %1255 = load i32, ptr %num_gfx_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1255)
  %cmp503.i = icmp ugt i32 %1255, 1
  br i1 %cmp503.i, label %if.then.i, label %cond.end500.i.if.end.i157_crit_edge

cond.end500.i.if.end.i157_crit_edge:              ; preds = %cond.end500.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end.i157

if.then.i:                                        ; preds = %cond.end500.i
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex.i, i32 noundef 0) #13
  tail call fastcc void @gfx_v10_0_cp_gfx_switch_pipe(ptr noundef %adev, i32 noundef 1) #13
  %arrayidx508.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1
  %ring_size509.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 9
  %1256 = ptrtoint ptr %ring_size509.i to i32
  call void @__asan_load4_noabort(i32 %1256)
  %1257 = load i32, ptr %ring_size509.i, align 8
  %div5102.i = lshr i32 %1257, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %1257)
  %cmp.i6.i = icmp ugt i32 %1257, 15
  %sub.i7.i = add nsw i32 %div5102.i, -1
  %1258 = tail call i32 @llvm.ctlz.i32(i32 %sub.i7.i, i1 false) #13, !range !477
  %add.i16.i = sub nuw nsw i32 32, %1258
  %cond557.i = select i1 %cmp.i6.i, i32 %add.i16.i, i32 0
  %and559.i = and i32 %cond557.i, 63
  %sub562.i = shl nsw i32 %cond557.i, 8
  %shl563.i = add nsw i32 %sub562.i, 15872
  %and564.i = and i32 %shl563.i, 16128
  %or565.i = or i32 %and564.i, %and559.i
  %1259 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1259)
  %1260 = load i32, ptr %virt.i139, align 8
  %and568.i = and i32 %1260, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and568.i)
  %tobool569.not.i = icmp eq i32 %and568.i, 0
  br i1 %tobool569.not.i, label %if.then.i.cond.false591.i_crit_edge, label %land.lhs.true570.i

if.then.i.cond.false591.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false591.i

land.lhs.true570.i:                               ; preds = %if.then.i
  %funcs573.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1261 = ptrtoint ptr %funcs573.i to i32
  call void @__asan_load4_noabort(i32 %1261)
  %1262 = load ptr, ptr %funcs573.i, align 4
  %tobool574.not.i = icmp eq ptr %1262, null
  br i1 %tobool574.not.i, label %land.lhs.true570.i.cond.false591.i_crit_edge, label %land.lhs.true575.i

land.lhs.true570.i.cond.false591.i_crit_edge:     ; preds = %land.lhs.true570.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false591.i

land.lhs.true575.i:                               ; preds = %land.lhs.true570.i
  %sriov_wreg579.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1262, i32 0, i32 12
  %1263 = ptrtoint ptr %sriov_wreg579.i to i32
  call void @__asan_load4_noabort(i32 %1263)
  %1264 = load ptr, ptr %sriov_wreg579.i, align 4
  %tobool580.not.i = icmp eq ptr %1264, null
  br i1 %tobool580.not.i, label %land.lhs.true575.i.cond.false591.i_crit_edge, label %cond.true581.i

land.lhs.true575.i.cond.false591.i_crit_edge:     ; preds = %land.lhs.true575.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false591.i

cond.true581.i:                                   ; preds = %land.lhs.true575.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx587.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1265 = ptrtoint ptr %arrayidx587.i to i32
  call void @__asan_load4_noabort(i32 %1265)
  %1266 = load ptr, ptr %arrayidx587.i, align 8
  %1267 = ptrtoint ptr %1266 to i32
  call void @__asan_load4_noabort(i32 %1267)
  %1268 = load i32, ptr %1266, align 4
  %add590.i = add i32 %1268, 7681
  tail call void %1264(ptr noundef %adev, i32 noundef %add590.i, i32 noundef %or565.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end597.i

cond.false591.i:                                  ; preds = %land.lhs.true575.i.cond.false591.i_crit_edge, %land.lhs.true570.i.cond.false591.i_crit_edge, %if.then.i.cond.false591.i_crit_edge
  %arrayidx593.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1269 = ptrtoint ptr %arrayidx593.i to i32
  call void @__asan_load4_noabort(i32 %1269)
  %1270 = load ptr, ptr %arrayidx593.i, align 8
  %1271 = ptrtoint ptr %1270 to i32
  call void @__asan_load4_noabort(i32 %1271)
  %1272 = load i32, ptr %1270, align 4
  %add596.i = add i32 %1272, 7681
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add596.i, i32 noundef %or565.i, i32 noundef 0) #13
  br label %cond.end597.i

cond.end597.i:                                    ; preds = %cond.false591.i, %cond.true581.i
  %wptr598.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 7
  %1273 = ptrtoint ptr %wptr598.i to i32
  call void @__asan_store8_noabort(i32 %1273)
  store i64 0, ptr %wptr598.i, align 8
  %1274 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1274)
  %1275 = load i32, ptr %virt.i139, align 8
  %and601.i = and i32 %1275, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and601.i)
  %tobool602.not.i = icmp eq i32 %and601.i, 0
  br i1 %tobool602.not.i, label %cond.end597.i.cond.false627.i_crit_edge, label %land.lhs.true603.i

cond.end597.i.cond.false627.i_crit_edge:          ; preds = %cond.end597.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false627.i

land.lhs.true603.i:                               ; preds = %cond.end597.i
  %funcs606.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1276 = ptrtoint ptr %funcs606.i to i32
  call void @__asan_load4_noabort(i32 %1276)
  %1277 = load ptr, ptr %funcs606.i, align 4
  %tobool607.not.i = icmp eq ptr %1277, null
  br i1 %tobool607.not.i, label %land.lhs.true603.i.cond.false627.i_crit_edge, label %land.lhs.true608.i

land.lhs.true603.i.cond.false627.i_crit_edge:     ; preds = %land.lhs.true603.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false627.i

land.lhs.true608.i:                               ; preds = %land.lhs.true603.i
  %sriov_wreg612.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1277, i32 0, i32 12
  %1278 = ptrtoint ptr %sriov_wreg612.i to i32
  call void @__asan_load4_noabort(i32 %1278)
  %1279 = load ptr, ptr %sriov_wreg612.i, align 4
  %tobool613.not.i = icmp eq ptr %1279, null
  br i1 %tobool613.not.i, label %land.lhs.true608.i.cond.false627.i_crit_edge, label %cond.true614.i

land.lhs.true608.i.cond.false627.i_crit_edge:     ; preds = %land.lhs.true608.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false627.i

cond.true614.i:                                   ; preds = %land.lhs.true608.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx620.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1280 = ptrtoint ptr %arrayidx620.i to i32
  call void @__asan_load4_noabort(i32 %1280)
  %1281 = load ptr, ptr %arrayidx620.i, align 8
  %1282 = ptrtoint ptr %1281 to i32
  call void @__asan_load4_noabort(i32 %1282)
  %1283 = load i32, ptr %1281, align 4
  %add623.i = add i32 %1283, 7670
  tail call void %1279(ptr noundef %adev, i32 noundef %add623.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end636.i

cond.false627.i:                                  ; preds = %land.lhs.true608.i.cond.false627.i_crit_edge, %land.lhs.true603.i.cond.false627.i_crit_edge, %cond.end597.i.cond.false627.i_crit_edge
  %arrayidx629.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1284 = ptrtoint ptr %arrayidx629.i to i32
  call void @__asan_load4_noabort(i32 %1284)
  %1285 = load ptr, ptr %arrayidx629.i, align 8
  %1286 = ptrtoint ptr %1285 to i32
  call void @__asan_load4_noabort(i32 %1286)
  %1287 = load i32, ptr %1285, align 4
  %add632.i = add i32 %1287, 7670
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add632.i, i32 noundef 0, i32 noundef 0) #13
  br label %cond.end636.i

cond.end636.i:                                    ; preds = %cond.false627.i, %cond.true614.i
  %1288 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1288)
  %1289 = load i32, ptr %virt.i139, align 8
  %and639.i = and i32 %1289, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and639.i)
  %tobool640.not.i = icmp eq i32 %and639.i, 0
  br i1 %tobool640.not.i, label %cond.end636.i.cond.false666.i_crit_edge, label %land.lhs.true641.i

cond.end636.i.cond.false666.i_crit_edge:          ; preds = %cond.end636.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false666.i

land.lhs.true641.i:                               ; preds = %cond.end636.i
  %funcs644.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1290 = ptrtoint ptr %funcs644.i to i32
  call void @__asan_load4_noabort(i32 %1290)
  %1291 = load ptr, ptr %funcs644.i, align 4
  %tobool645.not.i = icmp eq ptr %1291, null
  br i1 %tobool645.not.i, label %land.lhs.true641.i.cond.false666.i_crit_edge, label %land.lhs.true646.i

land.lhs.true641.i.cond.false666.i_crit_edge:     ; preds = %land.lhs.true641.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false666.i

land.lhs.true646.i:                               ; preds = %land.lhs.true641.i
  %sriov_wreg650.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1291, i32 0, i32 12
  %1292 = ptrtoint ptr %sriov_wreg650.i to i32
  call void @__asan_load4_noabort(i32 %1292)
  %1293 = load ptr, ptr %sriov_wreg650.i, align 4
  %tobool651.not.i = icmp eq ptr %1293, null
  br i1 %tobool651.not.i, label %land.lhs.true646.i.cond.false666.i_crit_edge, label %cond.true652.i

land.lhs.true646.i.cond.false666.i_crit_edge:     ; preds = %land.lhs.true646.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false666.i

cond.true652.i:                                   ; preds = %land.lhs.true646.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx658.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1294 = ptrtoint ptr %arrayidx658.i to i32
  call void @__asan_load4_noabort(i32 %1294)
  %1295 = load ptr, ptr %arrayidx658.i, align 8
  %1296 = ptrtoint ptr %1295 to i32
  call void @__asan_load4_noabort(i32 %1296)
  %1297 = load i32, ptr %1295, align 4
  %add661.i = add i32 %1297, 7671
  %1298 = ptrtoint ptr %wptr598.i to i32
  call void @__asan_load8_noabort(i32 %1298)
  %1299 = load i64, ptr %wptr598.i, align 8
  %shr663.i = lshr i64 %1299, 32
  %conv665.i = trunc i64 %shr663.i to i32
  tail call void %1293(ptr noundef %adev, i32 noundef %add661.i, i32 noundef %conv665.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end676.i

cond.false666.i:                                  ; preds = %land.lhs.true646.i.cond.false666.i_crit_edge, %land.lhs.true641.i.cond.false666.i_crit_edge, %cond.end636.i.cond.false666.i_crit_edge
  %arrayidx668.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1300 = ptrtoint ptr %arrayidx668.i to i32
  call void @__asan_load4_noabort(i32 %1300)
  %1301 = load ptr, ptr %arrayidx668.i, align 8
  %1302 = ptrtoint ptr %1301 to i32
  call void @__asan_load4_noabort(i32 %1302)
  %1303 = load i32, ptr %1301, align 4
  %add671.i = add i32 %1303, 7671
  %1304 = ptrtoint ptr %wptr598.i to i32
  call void @__asan_load8_noabort(i32 %1304)
  %1305 = load i64, ptr %wptr598.i, align 8
  %shr673.i = lshr i64 %1305, 32
  %conv675.i = trunc i64 %shr673.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add671.i, i32 noundef %conv675.i, i32 noundef 0) #13
  br label %cond.end676.i

cond.end676.i:                                    ; preds = %cond.false666.i, %cond.true652.i
  %1306 = ptrtoint ptr %gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %1306)
  %1307 = load i64, ptr %gpu_addr.i, align 8
  %rptr_offs679.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 6
  %1308 = ptrtoint ptr %rptr_offs679.i to i32
  call void @__asan_load4_noabort(i32 %1308)
  %1309 = load i32, ptr %rptr_offs679.i, align 8
  %mul680.i = shl i32 %1309, 2
  %conv681.i = zext i32 %mul680.i to i64
  %add682.i = add i64 %1307, %conv681.i
  %1310 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1310)
  %1311 = load i32, ptr %virt.i139, align 8
  %and685.i = and i32 %1311, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and685.i)
  %tobool686.not.i = icmp eq i32 %and685.i, 0
  br i1 %tobool686.not.i, label %cond.end676.i.cond.false710.i_crit_edge, label %land.lhs.true687.i

cond.end676.i.cond.false710.i_crit_edge:          ; preds = %cond.end676.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false710.i

land.lhs.true687.i:                               ; preds = %cond.end676.i
  %funcs690.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1312 = ptrtoint ptr %funcs690.i to i32
  call void @__asan_load4_noabort(i32 %1312)
  %1313 = load ptr, ptr %funcs690.i, align 4
  %tobool691.not.i = icmp eq ptr %1313, null
  br i1 %tobool691.not.i, label %land.lhs.true687.i.cond.false710.i_crit_edge, label %land.lhs.true692.i

land.lhs.true687.i.cond.false710.i_crit_edge:     ; preds = %land.lhs.true687.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false710.i

land.lhs.true692.i:                               ; preds = %land.lhs.true687.i
  %sriov_wreg696.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1313, i32 0, i32 12
  %1314 = ptrtoint ptr %sriov_wreg696.i to i32
  call void @__asan_load4_noabort(i32 %1314)
  %1315 = load ptr, ptr %sriov_wreg696.i, align 4
  %tobool697.not.i = icmp eq ptr %1315, null
  br i1 %tobool697.not.i, label %land.lhs.true692.i.cond.false710.i_crit_edge, label %cond.true698.i

land.lhs.true692.i.cond.false710.i_crit_edge:     ; preds = %land.lhs.true692.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false710.i

cond.true698.i:                                   ; preds = %land.lhs.true692.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx704.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1316 = ptrtoint ptr %arrayidx704.i to i32
  call void @__asan_load4_noabort(i32 %1316)
  %1317 = load ptr, ptr %arrayidx704.i, align 8
  %1318 = ptrtoint ptr %1317 to i32
  call void @__asan_load4_noabort(i32 %1318)
  %1319 = load i32, ptr %1317, align 4
  %add707.i = add i32 %1319, 7682
  %conv709.i = trunc i64 %add682.i to i32
  tail call void %1315(ptr noundef %adev, i32 noundef %add707.i, i32 noundef %conv709.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end718.i

cond.false710.i:                                  ; preds = %land.lhs.true692.i.cond.false710.i_crit_edge, %land.lhs.true687.i.cond.false710.i_crit_edge, %cond.end676.i.cond.false710.i_crit_edge
  %arrayidx712.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1320 = ptrtoint ptr %arrayidx712.i to i32
  call void @__asan_load4_noabort(i32 %1320)
  %1321 = load ptr, ptr %arrayidx712.i, align 8
  %1322 = ptrtoint ptr %1321 to i32
  call void @__asan_load4_noabort(i32 %1322)
  %1323 = load i32, ptr %1321, align 4
  %add715.i = add i32 %1323, 7682
  %conv717.i = trunc i64 %add682.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add715.i, i32 noundef %conv717.i, i32 noundef 0) #13
  br label %cond.end718.i

cond.end718.i:                                    ; preds = %cond.false710.i, %cond.true698.i
  %1324 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1324)
  %1325 = load i32, ptr %virt.i139, align 8
  %and721.i = and i32 %1325, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and721.i)
  %tobool722.not.i = icmp eq i32 %and721.i, 0
  br i1 %tobool722.not.i, label %cond.end718.i.cond.false748.i_crit_edge, label %land.lhs.true723.i

cond.end718.i.cond.false748.i_crit_edge:          ; preds = %cond.end718.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false748.i

land.lhs.true723.i:                               ; preds = %cond.end718.i
  %funcs726.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1326 = ptrtoint ptr %funcs726.i to i32
  call void @__asan_load4_noabort(i32 %1326)
  %1327 = load ptr, ptr %funcs726.i, align 4
  %tobool727.not.i = icmp eq ptr %1327, null
  br i1 %tobool727.not.i, label %land.lhs.true723.i.cond.false748.i_crit_edge, label %land.lhs.true728.i

land.lhs.true723.i.cond.false748.i_crit_edge:     ; preds = %land.lhs.true723.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false748.i

land.lhs.true728.i:                               ; preds = %land.lhs.true723.i
  %sriov_wreg732.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1327, i32 0, i32 12
  %1328 = ptrtoint ptr %sriov_wreg732.i to i32
  call void @__asan_load4_noabort(i32 %1328)
  %1329 = load ptr, ptr %sriov_wreg732.i, align 4
  %tobool733.not.i = icmp eq ptr %1329, null
  br i1 %tobool733.not.i, label %land.lhs.true728.i.cond.false748.i_crit_edge, label %cond.true734.i

land.lhs.true728.i.cond.false748.i_crit_edge:     ; preds = %land.lhs.true728.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false748.i

cond.true734.i:                                   ; preds = %land.lhs.true728.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx740.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1330 = ptrtoint ptr %arrayidx740.i to i32
  call void @__asan_load4_noabort(i32 %1330)
  %1331 = load ptr, ptr %arrayidx740.i, align 8
  %1332 = ptrtoint ptr %1331 to i32
  call void @__asan_load4_noabort(i32 %1332)
  %1333 = load i32, ptr %1331, align 4
  %add743.i = add i32 %1333, 7683
  %shr744.i = lshr i64 %add682.i, 32
  %conv746.i = trunc i64 %shr744.i to i32
  %and747.i = and i32 %conv746.i, 65535
  tail call void %1329(ptr noundef %adev, i32 noundef %add743.i, i32 noundef %and747.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end758.i

cond.false748.i:                                  ; preds = %land.lhs.true728.i.cond.false748.i_crit_edge, %land.lhs.true723.i.cond.false748.i_crit_edge, %cond.end718.i.cond.false748.i_crit_edge
  %arrayidx750.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1334 = ptrtoint ptr %arrayidx750.i to i32
  call void @__asan_load4_noabort(i32 %1334)
  %1335 = load ptr, ptr %arrayidx750.i, align 8
  %1336 = ptrtoint ptr %1335 to i32
  call void @__asan_load4_noabort(i32 %1336)
  %1337 = load i32, ptr %1335, align 4
  %add753.i = add i32 %1337, 7683
  %shr754.i = lshr i64 %add682.i, 32
  %conv756.i = trunc i64 %shr754.i to i32
  %and757.i = and i32 %conv756.i, 65535
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add753.i, i32 noundef %and757.i, i32 noundef 0) #13
  br label %cond.end758.i

cond.end758.i:                                    ; preds = %cond.false748.i, %cond.true734.i
  %1338 = ptrtoint ptr %gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %1338)
  %1339 = load i64, ptr %gpu_addr.i, align 8
  %wptr_offs761.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 26
  %1340 = ptrtoint ptr %wptr_offs761.i to i32
  call void @__asan_load4_noabort(i32 %1340)
  %1341 = load i32, ptr %wptr_offs761.i, align 8
  %mul762.i = shl i32 %1341, 2
  %conv763.i = zext i32 %mul762.i to i64
  %add764.i = add i64 %1339, %conv763.i
  %1342 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1342)
  %1343 = load i32, ptr %virt.i139, align 8
  %and767.i = and i32 %1343, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and767.i)
  %tobool768.not.i = icmp eq i32 %and767.i, 0
  br i1 %tobool768.not.i, label %cond.end758.i.cond.false792.i_crit_edge, label %land.lhs.true769.i

cond.end758.i.cond.false792.i_crit_edge:          ; preds = %cond.end758.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false792.i

land.lhs.true769.i:                               ; preds = %cond.end758.i
  %funcs772.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1344 = ptrtoint ptr %funcs772.i to i32
  call void @__asan_load4_noabort(i32 %1344)
  %1345 = load ptr, ptr %funcs772.i, align 4
  %tobool773.not.i = icmp eq ptr %1345, null
  br i1 %tobool773.not.i, label %land.lhs.true769.i.cond.false792.i_crit_edge, label %land.lhs.true774.i

land.lhs.true769.i.cond.false792.i_crit_edge:     ; preds = %land.lhs.true769.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false792.i

land.lhs.true774.i:                               ; preds = %land.lhs.true769.i
  %sriov_wreg778.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1345, i32 0, i32 12
  %1346 = ptrtoint ptr %sriov_wreg778.i to i32
  call void @__asan_load4_noabort(i32 %1346)
  %1347 = load ptr, ptr %sriov_wreg778.i, align 4
  %tobool779.not.i = icmp eq ptr %1347, null
  br i1 %tobool779.not.i, label %land.lhs.true774.i.cond.false792.i_crit_edge, label %cond.true780.i

land.lhs.true774.i.cond.false792.i_crit_edge:     ; preds = %land.lhs.true774.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false792.i

cond.true780.i:                                   ; preds = %land.lhs.true774.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx786.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1348 = ptrtoint ptr %arrayidx786.i to i32
  call void @__asan_load4_noabort(i32 %1348)
  %1349 = load ptr, ptr %arrayidx786.i, align 8
  %1350 = ptrtoint ptr %1349 to i32
  call void @__asan_load4_noabort(i32 %1350)
  %1351 = load i32, ptr %1349, align 4
  %add789.i = add i32 %1351, 7819
  %conv791.i = trunc i64 %add764.i to i32
  tail call void %1347(ptr noundef %adev, i32 noundef %add789.i, i32 noundef %conv791.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end800.i

cond.false792.i:                                  ; preds = %land.lhs.true774.i.cond.false792.i_crit_edge, %land.lhs.true769.i.cond.false792.i_crit_edge, %cond.end758.i.cond.false792.i_crit_edge
  %arrayidx794.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1352 = ptrtoint ptr %arrayidx794.i to i32
  call void @__asan_load4_noabort(i32 %1352)
  %1353 = load ptr, ptr %arrayidx794.i, align 8
  %1354 = ptrtoint ptr %1353 to i32
  call void @__asan_load4_noabort(i32 %1354)
  %1355 = load i32, ptr %1353, align 4
  %add797.i = add i32 %1355, 7819
  %conv799.i = trunc i64 %add764.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add797.i, i32 noundef %conv799.i, i32 noundef 0) #13
  br label %cond.end800.i

cond.end800.i:                                    ; preds = %cond.false792.i, %cond.true780.i
  %1356 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1356)
  %1357 = load i32, ptr %virt.i139, align 8
  %and803.i = and i32 %1357, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and803.i)
  %tobool804.not.i = icmp eq i32 %and803.i, 0
  br i1 %tobool804.not.i, label %cond.end800.i.cond.false829.i_crit_edge, label %land.lhs.true805.i

cond.end800.i.cond.false829.i_crit_edge:          ; preds = %cond.end800.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false829.i

land.lhs.true805.i:                               ; preds = %cond.end800.i
  %funcs808.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1358 = ptrtoint ptr %funcs808.i to i32
  call void @__asan_load4_noabort(i32 %1358)
  %1359 = load ptr, ptr %funcs808.i, align 4
  %tobool809.not.i = icmp eq ptr %1359, null
  br i1 %tobool809.not.i, label %land.lhs.true805.i.cond.false829.i_crit_edge, label %land.lhs.true810.i

land.lhs.true805.i.cond.false829.i_crit_edge:     ; preds = %land.lhs.true805.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false829.i

land.lhs.true810.i:                               ; preds = %land.lhs.true805.i
  %sriov_wreg814.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1359, i32 0, i32 12
  %1360 = ptrtoint ptr %sriov_wreg814.i to i32
  call void @__asan_load4_noabort(i32 %1360)
  %1361 = load ptr, ptr %sriov_wreg814.i, align 4
  %tobool815.not.i = icmp eq ptr %1361, null
  br i1 %tobool815.not.i, label %land.lhs.true810.i.cond.false829.i_crit_edge, label %cond.true816.i

land.lhs.true810.i.cond.false829.i_crit_edge:     ; preds = %land.lhs.true810.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false829.i

cond.true816.i:                                   ; preds = %land.lhs.true810.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx822.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1362 = ptrtoint ptr %arrayidx822.i to i32
  call void @__asan_load4_noabort(i32 %1362)
  %1363 = load ptr, ptr %arrayidx822.i, align 8
  %1364 = ptrtoint ptr %1363 to i32
  call void @__asan_load4_noabort(i32 %1364)
  %1365 = load i32, ptr %1363, align 4
  %add825.i = add i32 %1365, 7820
  %shr826.i = lshr i64 %add764.i, 32
  %conv828.i = trunc i64 %shr826.i to i32
  tail call void %1361(ptr noundef %adev, i32 noundef %add825.i, i32 noundef %conv828.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end838.i

cond.false829.i:                                  ; preds = %land.lhs.true810.i.cond.false829.i_crit_edge, %land.lhs.true805.i.cond.false829.i_crit_edge, %cond.end800.i.cond.false829.i_crit_edge
  %arrayidx831.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1366 = ptrtoint ptr %arrayidx831.i to i32
  call void @__asan_load4_noabort(i32 %1366)
  %1367 = load ptr, ptr %arrayidx831.i, align 8
  %1368 = ptrtoint ptr %1367 to i32
  call void @__asan_load4_noabort(i32 %1368)
  %1369 = load i32, ptr %1367, align 4
  %add834.i = add i32 %1369, 7820
  %shr835.i = lshr i64 %add764.i, 32
  %conv837.i = trunc i64 %shr835.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add834.i, i32 noundef %conv837.i, i32 noundef 0) #13
  br label %cond.end838.i

cond.end838.i:                                    ; preds = %cond.false829.i, %cond.true816.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %1370 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %1370(i32 noundef 214748000) #13
  %1371 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1371)
  %1372 = load i32, ptr %virt.i139, align 8
  %and841.i = and i32 %1372, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and841.i)
  %tobool842.not.i = icmp eq i32 %and841.i, 0
  br i1 %tobool842.not.i, label %cond.end838.i.cond.false864.i_crit_edge, label %land.lhs.true843.i

cond.end838.i.cond.false864.i_crit_edge:          ; preds = %cond.end838.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false864.i

land.lhs.true843.i:                               ; preds = %cond.end838.i
  %funcs846.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1373 = ptrtoint ptr %funcs846.i to i32
  call void @__asan_load4_noabort(i32 %1373)
  %1374 = load ptr, ptr %funcs846.i, align 4
  %tobool847.not.i = icmp eq ptr %1374, null
  br i1 %tobool847.not.i, label %land.lhs.true843.i.cond.false864.i_crit_edge, label %land.lhs.true848.i

land.lhs.true843.i.cond.false864.i_crit_edge:     ; preds = %land.lhs.true843.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false864.i

land.lhs.true848.i:                               ; preds = %land.lhs.true843.i
  %sriov_wreg852.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1374, i32 0, i32 12
  %1375 = ptrtoint ptr %sriov_wreg852.i to i32
  call void @__asan_load4_noabort(i32 %1375)
  %1376 = load ptr, ptr %sriov_wreg852.i, align 4
  %tobool853.not.i = icmp eq ptr %1376, null
  br i1 %tobool853.not.i, label %land.lhs.true848.i.cond.false864.i_crit_edge, label %cond.true854.i

land.lhs.true848.i.cond.false864.i_crit_edge:     ; preds = %land.lhs.true848.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false864.i

cond.true854.i:                                   ; preds = %land.lhs.true848.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx860.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1377 = ptrtoint ptr %arrayidx860.i to i32
  call void @__asan_load4_noabort(i32 %1377)
  %1378 = load ptr, ptr %arrayidx860.i, align 8
  %1379 = ptrtoint ptr %1378 to i32
  call void @__asan_load4_noabort(i32 %1379)
  %1380 = load i32, ptr %1378, align 4
  %add863.i = add i32 %1380, 7681
  tail call void %1376(ptr noundef %adev, i32 noundef %add863.i, i32 noundef %or565.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end870.i

cond.false864.i:                                  ; preds = %land.lhs.true848.i.cond.false864.i_crit_edge, %land.lhs.true843.i.cond.false864.i_crit_edge, %cond.end838.i.cond.false864.i_crit_edge
  %arrayidx866.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1381 = ptrtoint ptr %arrayidx866.i to i32
  call void @__asan_load4_noabort(i32 %1381)
  %1382 = load ptr, ptr %arrayidx866.i, align 8
  %1383 = ptrtoint ptr %1382 to i32
  call void @__asan_load4_noabort(i32 %1383)
  %1384 = load i32, ptr %1382, align 4
  %add869.i = add i32 %1384, 7681
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add869.i, i32 noundef %or565.i, i32 noundef 0) #13
  br label %cond.end870.i

cond.end870.i:                                    ; preds = %cond.false864.i, %cond.true854.i
  %gpu_addr871.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 12
  %1385 = ptrtoint ptr %gpu_addr871.i to i32
  call void @__asan_load8_noabort(i32 %1385)
  %1386 = load i64, ptr %gpu_addr871.i, align 8
  %shr872.i = lshr i64 %1386, 8
  %1387 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1387)
  %1388 = load i32, ptr %virt.i139, align 8
  %and875.i = and i32 %1388, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and875.i)
  %tobool876.not.i = icmp eq i32 %and875.i, 0
  br i1 %tobool876.not.i, label %cond.end870.i.cond.false899.i_crit_edge, label %land.lhs.true877.i

cond.end870.i.cond.false899.i_crit_edge:          ; preds = %cond.end870.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false899.i

land.lhs.true877.i:                               ; preds = %cond.end870.i
  %funcs880.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1389 = ptrtoint ptr %funcs880.i to i32
  call void @__asan_load4_noabort(i32 %1389)
  %1390 = load ptr, ptr %funcs880.i, align 4
  %tobool881.not.i = icmp eq ptr %1390, null
  br i1 %tobool881.not.i, label %land.lhs.true877.i.cond.false899.i_crit_edge, label %land.lhs.true882.i

land.lhs.true877.i.cond.false899.i_crit_edge:     ; preds = %land.lhs.true877.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false899.i

land.lhs.true882.i:                               ; preds = %land.lhs.true877.i
  %sriov_wreg886.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1390, i32 0, i32 12
  %1391 = ptrtoint ptr %sriov_wreg886.i to i32
  call void @__asan_load4_noabort(i32 %1391)
  %1392 = load ptr, ptr %sriov_wreg886.i, align 4
  %tobool887.not.i = icmp eq ptr %1392, null
  br i1 %tobool887.not.i, label %land.lhs.true882.i.cond.false899.i_crit_edge, label %cond.true888.i

land.lhs.true882.i.cond.false899.i_crit_edge:     ; preds = %land.lhs.true882.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false899.i

cond.true888.i:                                   ; preds = %land.lhs.true882.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx894.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1393 = ptrtoint ptr %arrayidx894.i to i32
  call void @__asan_load4_noabort(i32 %1393)
  %1394 = load ptr, ptr %arrayidx894.i, align 8
  %1395 = ptrtoint ptr %1394 to i32
  call void @__asan_load4_noabort(i32 %1395)
  %1396 = load i32, ptr %1394, align 4
  %add897.i = add i32 %1396, 7680
  %conv898.i = trunc i64 %shr872.i to i32
  tail call void %1392(ptr noundef %adev, i32 noundef %add897.i, i32 noundef %conv898.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end906.i

cond.false899.i:                                  ; preds = %land.lhs.true882.i.cond.false899.i_crit_edge, %land.lhs.true877.i.cond.false899.i_crit_edge, %cond.end870.i.cond.false899.i_crit_edge
  %arrayidx901.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1397 = ptrtoint ptr %arrayidx901.i to i32
  call void @__asan_load4_noabort(i32 %1397)
  %1398 = load ptr, ptr %arrayidx901.i, align 8
  %1399 = ptrtoint ptr %1398 to i32
  call void @__asan_load4_noabort(i32 %1399)
  %1400 = load i32, ptr %1398, align 4
  %add904.i = add i32 %1400, 7680
  %conv905.i = trunc i64 %shr872.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add904.i, i32 noundef %conv905.i, i32 noundef 0) #13
  br label %cond.end906.i

cond.end906.i:                                    ; preds = %cond.false899.i, %cond.true888.i
  %1401 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1401)
  %1402 = load i32, ptr %virt.i139, align 8
  %and909.i = and i32 %1402, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and909.i)
  %tobool910.not.i = icmp eq i32 %and909.i, 0
  br i1 %tobool910.not.i, label %cond.end906.i.cond.false935.i_crit_edge, label %land.lhs.true911.i

cond.end906.i.cond.false935.i_crit_edge:          ; preds = %cond.end906.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false935.i

land.lhs.true911.i:                               ; preds = %cond.end906.i
  %funcs914.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1403 = ptrtoint ptr %funcs914.i to i32
  call void @__asan_load4_noabort(i32 %1403)
  %1404 = load ptr, ptr %funcs914.i, align 4
  %tobool915.not.i = icmp eq ptr %1404, null
  br i1 %tobool915.not.i, label %land.lhs.true911.i.cond.false935.i_crit_edge, label %land.lhs.true916.i

land.lhs.true911.i.cond.false935.i_crit_edge:     ; preds = %land.lhs.true911.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false935.i

land.lhs.true916.i:                               ; preds = %land.lhs.true911.i
  %sriov_wreg920.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1404, i32 0, i32 12
  %1405 = ptrtoint ptr %sriov_wreg920.i to i32
  call void @__asan_load4_noabort(i32 %1405)
  %1406 = load ptr, ptr %sriov_wreg920.i, align 4
  %tobool921.not.i = icmp eq ptr %1406, null
  br i1 %tobool921.not.i, label %land.lhs.true916.i.cond.false935.i_crit_edge, label %cond.true922.i

land.lhs.true916.i.cond.false935.i_crit_edge:     ; preds = %land.lhs.true916.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false935.i

cond.true922.i:                                   ; preds = %land.lhs.true916.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx928.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1407 = ptrtoint ptr %arrayidx928.i to i32
  call void @__asan_load4_noabort(i32 %1407)
  %1408 = load ptr, ptr %arrayidx928.i, align 8
  %1409 = ptrtoint ptr %1408 to i32
  call void @__asan_load4_noabort(i32 %1409)
  %1410 = load i32, ptr %1408, align 4
  %add931.i = add i32 %1410, 7762
  %shr932.i = lshr i64 %1386, 40
  %conv934.i = trunc i64 %shr932.i to i32
  tail call void %1406(ptr noundef %adev, i32 noundef %add931.i, i32 noundef %conv934.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end944.i

cond.false935.i:                                  ; preds = %land.lhs.true916.i.cond.false935.i_crit_edge, %land.lhs.true911.i.cond.false935.i_crit_edge, %cond.end906.i.cond.false935.i_crit_edge
  %arrayidx937.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1411 = ptrtoint ptr %arrayidx937.i to i32
  call void @__asan_load4_noabort(i32 %1411)
  %1412 = load ptr, ptr %arrayidx937.i, align 8
  %1413 = ptrtoint ptr %1412 to i32
  call void @__asan_load4_noabort(i32 %1413)
  %1414 = load i32, ptr %1412, align 4
  %add940.i = add i32 %1414, 7762
  %shr941.i = lshr i64 %1386, 40
  %conv943.i = trunc i64 %shr941.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add940.i, i32 noundef %conv943.i, i32 noundef 0) #13
  br label %cond.end944.i

cond.end944.i:                                    ; preds = %cond.false935.i, %cond.true922.i
  %1415 = ptrtoint ptr %virt.i139 to i32
  call void @__asan_load4_noabort(i32 %1415)
  %1416 = load i32, ptr %virt.i139, align 8
  %and947.i = and i32 %1416, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and947.i)
  %tobool948.not.i = icmp eq i32 %and947.i, 0
  br i1 %tobool948.not.i, label %cond.end944.i.cond.false970.i_crit_edge, label %land.lhs.true949.i

cond.end944.i.cond.false970.i_crit_edge:          ; preds = %cond.end944.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false970.i

land.lhs.true949.i:                               ; preds = %cond.end944.i
  %funcs952.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %1417 = ptrtoint ptr %funcs952.i to i32
  call void @__asan_load4_noabort(i32 %1417)
  %1418 = load ptr, ptr %funcs952.i, align 4
  %tobool953.not.i = icmp eq ptr %1418, null
  br i1 %tobool953.not.i, label %land.lhs.true949.i.cond.false970.i_crit_edge, label %land.lhs.true954.i

land.lhs.true949.i.cond.false970.i_crit_edge:     ; preds = %land.lhs.true949.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false970.i

land.lhs.true954.i:                               ; preds = %land.lhs.true949.i
  %sriov_wreg958.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1418, i32 0, i32 12
  %1419 = ptrtoint ptr %sriov_wreg958.i to i32
  call void @__asan_load4_noabort(i32 %1419)
  %1420 = load ptr, ptr %sriov_wreg958.i, align 4
  %tobool959.not.i = icmp eq ptr %1420, null
  br i1 %tobool959.not.i, label %land.lhs.true954.i.cond.false970.i_crit_edge, label %cond.true960.i

land.lhs.true954.i.cond.false970.i_crit_edge:     ; preds = %land.lhs.true954.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false970.i

cond.true960.i:                                   ; preds = %land.lhs.true954.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx966.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1421 = ptrtoint ptr %arrayidx966.i to i32
  call void @__asan_load4_noabort(i32 %1421)
  %1422 = load ptr, ptr %arrayidx966.i, align 8
  %1423 = ptrtoint ptr %1422 to i32
  call void @__asan_load4_noabort(i32 %1423)
  %1424 = load i32, ptr %1422, align 4
  %add969.i = add i32 %1424, 8001
  tail call void %1420(ptr noundef %adev, i32 noundef %add969.i, i32 noundef 1, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end976.i

cond.false970.i:                                  ; preds = %land.lhs.true954.i.cond.false970.i_crit_edge, %land.lhs.true949.i.cond.false970.i_crit_edge, %cond.end944.i.cond.false970.i_crit_edge
  %arrayidx972.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1425 = ptrtoint ptr %arrayidx972.i to i32
  call void @__asan_load4_noabort(i32 %1425)
  %1426 = load ptr, ptr %arrayidx972.i, align 8
  %1427 = ptrtoint ptr %1426 to i32
  call void @__asan_load4_noabort(i32 %1427)
  %1428 = load i32, ptr %1426, align 4
  %add975.i = add i32 %1428, 8001
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add975.i, i32 noundef 1, i32 noundef 0) #13
  br label %cond.end976.i

cond.end976.i:                                    ; preds = %cond.false970.i, %cond.true960.i
  tail call fastcc void @gfx_v10_0_cp_gfx_set_doorbell(ptr noundef %adev, ptr noundef %arrayidx508.i) #13
  tail call void @mutex_unlock(ptr noundef %srbm_mutex.i) #13
  br label %if.end.i157

if.end.i157:                                      ; preds = %cond.end976.i, %cond.end500.i.if.end.i157_crit_edge
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex.i, i32 noundef 0) #13
  tail call fastcc void @gfx_v10_0_cp_gfx_switch_pipe(ptr noundef %adev, i32 noundef 0) #13
  tail call void @mutex_unlock(ptr noundef %srbm_mutex.i) #13
  %call980.i = tail call fastcc i32 @gfx_v10_0_cp_gfx_start(ptr noundef %adev) #13
  %1429 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %1429)
  %1430 = load i32, ptr %num_gfx_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1430)
  %cmp98320.not.i = icmp eq i32 %1430, 0
  br i1 %cmp98320.not.i, label %if.end.i157.if.end28_crit_edge, label %if.end.i157.for.body.i161_crit_edge

if.end.i157.for.body.i161_crit_edge:              ; preds = %if.end.i157
  br label %for.body.i161

if.end.i157.if.end28_crit_edge:                   ; preds = %if.end.i157
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

for.body.i161:                                    ; preds = %for.body.i161.for.body.i161_crit_edge, %if.end.i157.for.body.i161_crit_edge
  %i.021.i = phi i32 [ %inc.i159, %for.body.i161.for.body.i161_crit_edge ], [ 0, %if.end.i157.for.body.i161_crit_edge ]
  %ready.i158 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.021.i, i32 3, i32 17
  %1431 = ptrtoint ptr %ready.i158 to i32
  call void @__asan_store1_noabort(i32 %1431)
  store i8 1, ptr %ready.i158, align 4
  %inc.i159 = add nuw i32 %i.021.i, 1
  %exitcond.not.i160 = icmp eq i32 %inc.i159, %1430
  br i1 %exitcond.not.i160, label %for.body.i161.if.end28_crit_edge, label %for.body.i161.for.body.i161_crit_edge

for.body.i161.for.body.i161_crit_edge:            ; preds = %for.body.i161
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i161

for.body.i161.if.end28_crit_edge:                 ; preds = %for.body.i161
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

if.else:                                          ; preds = %if.end17
  %num_gfx_rings.i163 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %1432 = ptrtoint ptr %num_gfx_rings.i163 to i32
  call void @__asan_load4_noabort(i32 %1432)
  %1433 = load i32, ptr %num_gfx_rings.i163, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1433)
  %cmp75.not.i = icmp eq i32 %1433, 0
  br i1 %cmp75.not.i, label %if.else.for.end.i237_crit_edge, label %if.else.for.body.i174_crit_edge

if.else.for.body.i174_crit_edge:                  ; preds = %if.else
  br label %for.body.i174

if.else.for.end.i237_crit_edge:                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i237

for.cond.i166:                                    ; preds = %if.end11.i236
  %inc.i164 = add nuw i32 %i.076.i, 1
  %1434 = ptrtoint ptr %num_gfx_rings.i163 to i32
  call void @__asan_load4_noabort(i32 %1434)
  %1435 = load i32, ptr %num_gfx_rings.i163, align 8
  %cmp.i165 = icmp ult i32 %inc.i164, %1435
  br i1 %cmp.i165, label %for.cond.i166.for.body.i174_crit_edge, label %for.cond.i166.for.end.i237_crit_edge

for.cond.i166.for.end.i237_crit_edge:             ; preds = %for.cond.i166
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end.i237

for.cond.i166.for.body.i174_crit_edge:            ; preds = %for.cond.i166
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i174

for.body.i174:                                    ; preds = %for.cond.i166.for.body.i174_crit_edge, %if.else.for.body.i174_crit_edge
  %i.076.i = phi i32 [ %inc.i164, %for.cond.i166.for.body.i174_crit_edge ], [ 0, %if.else.for.body.i174_crit_edge ]
  %arrayidx.i167 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i
  %mqd_obj.i168 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 19
  %1436 = ptrtoint ptr %mqd_obj.i168 to i32
  call void @__asan_load4_noabort(i32 %1436)
  %1437 = load ptr, ptr %mqd_obj.i168, align 4
  %bdev.i.i169 = getelementptr inbounds %struct.amdgpu_bo, ptr %1437, i32 0, i32 4, i32 1
  %1438 = ptrtoint ptr %bdev.i.i169 to i32
  call void @__asan_load4_noabort(i32 %1438)
  %1439 = load ptr, ptr %bdev.i.i169, align 8
  %resv32.i.i.i170 = getelementptr inbounds %struct.amdgpu_bo, ptr %1437, i32 0, i32 4, i32 0, i32 9
  %1440 = ptrtoint ptr %resv32.i.i.i170 to i32
  call void @__asan_load4_noabort(i32 %1440)
  %1441 = load ptr, ptr %resv32.i.i.i170, align 8
  %call.i.i.i.i171 = tail call i32 @ww_mutex_lock_interruptible(ptr noundef %1441, ptr noundef null) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %call.i.i.i.i171)
  %cmp.i.i.i172 = icmp eq i32 %call.i.i.i.i171, -4
  %retval.1.i.i.i173 = select i1 %cmp.i.i.i172, i32 -512, i32 %call.i.i.i.i171
  %1442 = zext i32 %retval.1.i.i.i173 to i64
  call void @__sanitizer_cov_trace_switch(i64 %1442, ptr @__sancov_gen_cov_switch_values.148)
  switch i32 %retval.1.i.i.i173, label %gfx_v10_0_cp_async_gfx_ring_resume.exit [
    i32 0, label %if.end.i180
    i32 -512, label %for.body.i174.cleanup_crit_edge
  ], !prof !514

for.body.i174.cleanup_crit_edge:                  ; preds = %for.body.i174
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i180:                                      ; preds = %for.body.i174
  %1443 = ptrtoint ptr %mqd_obj.i168 to i32
  call void @__asan_load4_noabort(i32 %1443)
  %1444 = load ptr, ptr %mqd_obj.i168, align 4
  %mqd_ptr.i177 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 21
  %call5.i178 = tail call i32 @amdgpu_bo_kmap(ptr noundef %1444, ptr noundef %mqd_ptr.i177) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i178)
  %tobool6.not.i179 = icmp eq i32 %call5.i178, 0
  br i1 %tobool6.not.i179, label %if.then7.i188, label %if.end.i180.if.end11.i236_crit_edge

if.end.i180.if.end11.i236_crit_edge:              ; preds = %if.end.i180
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end11.i236

if.then7.i188:                                    ; preds = %if.end.i180
  %1445 = ptrtoint ptr %arrayidx.i167 to i32
  call void @__asan_load4_noabort(i32 %1445)
  %1446 = load ptr, ptr %arrayidx.i167, align 8
  %1447 = ptrtoint ptr %mqd_ptr.i177 to i32
  call void @__asan_load4_noabort(i32 %1447)
  %1448 = load ptr, ptr %mqd_ptr.i177, align 8
  %gfx_ring.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1446, i32 0, i32 106, i32 36
  %sub.ptr.lhs.cast.i.i181 = ptrtoint ptr %arrayidx.i167 to i32
  %sub.ptr.rhs.cast.i.i182 = ptrtoint ptr %gfx_ring.i.i to i32
  %sub.ptr.sub.i.i183 = sub i32 %sub.ptr.lhs.cast.i.i181, %sub.ptr.rhs.cast.i.i182
  %sub.ptr.div.i.i184 = sdiv exact i32 %sub.ptr.sub.i.i183, 904
  %in_gpu_reset.i.i.i185 = getelementptr inbounds %struct.amdgpu_device, ptr %1446, i32 0, i32 141
  %call.i.i.i.i.i186 = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i185, i32 noundef 4) #13
  %1449 = ptrtoint ptr %in_gpu_reset.i.i.i185 to i32
  call void @__asan_load4_noabort(i32 %1449)
  %1450 = load volatile i32, ptr %in_gpu_reset.i.i.i185, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1450)
  %tobool.not.i.i187 = icmp eq i32 %1450, 0
  br i1 %tobool.not.i.i187, label %land.lhs.true.i.i191, label %if.then7.i188.if.else.i.i215_crit_edge

if.then7.i188.if.else.i.i215_crit_edge:           ; preds = %if.then7.i188
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i215

land.lhs.true.i.i191:                             ; preds = %if.then7.i188
  %in_suspend.i.i189 = getelementptr inbounds %struct.amdgpu_device, ptr %1446, i32 0, i32 137
  %1451 = ptrtoint ptr %in_suspend.i.i189 to i32
  call void @__asan_load1_noabort(i32 %1451)
  %1452 = load i8, ptr %in_suspend.i.i189, align 1, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1452)
  %tobool2.not.i.i190 = icmp eq i8 %1452, 0
  br i1 %tobool2.not.i.i190, label %if.then.i.i198, label %land.lhs.true.i.i191.if.else.i.i215_crit_edge

land.lhs.true.i.i191.if.else.i.i215_crit_edge:    ; preds = %land.lhs.true.i.i191
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.else.i.i215

if.then.i.i198:                                   ; preds = %land.lhs.true.i.i191
  %1453 = call ptr @memset(ptr %1448, i32 0, i32 2048)
  %srbm_mutex.i.i192 = getelementptr inbounds %struct.amdgpu_device, ptr %1446, i32 0, i32 20
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex.i.i192, i32 noundef 0) #13
  %me.i.i193 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 16
  %1454 = ptrtoint ptr %me.i.i193 to i32
  call void @__asan_load4_noabort(i32 %1454)
  %1455 = load i32, ptr %me.i.i193, align 8
  %pipe.i.i194 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 17
  %1456 = ptrtoint ptr %pipe.i.i194 to i32
  call void @__asan_load4_noabort(i32 %1456)
  %1457 = load i32, ptr %pipe.i.i194, align 4
  %queue.i.i195 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 18
  %1458 = ptrtoint ptr %queue.i.i195 to i32
  call void @__asan_load4_noabort(i32 %1458)
  %1459 = load i32, ptr %queue.i.i195, align 8
  tail call void @nv_grbm_select(ptr noundef %1446, i32 noundef %1455, i32 noundef %1457, i32 noundef %1459, i32 noundef 0) #13
  %1460 = ptrtoint ptr %arrayidx.i167 to i32
  call void @__asan_load4_noabort(i32 %1460)
  %1461 = load ptr, ptr %arrayidx.i167, align 8
  %1462 = ptrtoint ptr %mqd_ptr.i177 to i32
  call void @__asan_load4_noabort(i32 %1462)
  %1463 = load ptr, ptr %mqd_ptr.i177, align 8
  %cp_gfx_hqd_wptr.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 149
  %1464 = ptrtoint ptr %cp_gfx_hqd_wptr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1464)
  store i32 0, ptr %cp_gfx_hqd_wptr.i.i.i, align 4
  %cp_gfx_hqd_wptr_hi.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 150
  %1465 = ptrtoint ptr %cp_gfx_hqd_wptr_hi.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1465)
  store i32 0, ptr %cp_gfx_hqd_wptr_hi.i.i.i, align 4
  %mqd_gpu_addr.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 20
  %1466 = ptrtoint ptr %mqd_gpu_addr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1466)
  %1467 = load i64, ptr %mqd_gpu_addr.i.i.i, align 8
  %1468 = trunc i64 %1467 to i32
  %conv.i.i.i = and i32 %1468, -4
  %cp_mqd_base_addr.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 128
  %1469 = ptrtoint ptr %cp_mqd_base_addr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1469)
  store i32 %conv.i.i.i, ptr %cp_mqd_base_addr.i.i.i, align 4
  %1470 = load i64, ptr %mqd_gpu_addr.i.i.i, align 8
  %shr.i.i.i = lshr i64 %1470, 32
  %conv4.i.i.i = trunc i64 %shr.i.i.i to i32
  %cp_mqd_base_addr_hi.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 129
  %1471 = ptrtoint ptr %cp_mqd_base_addr_hi.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1471)
  store i32 %conv4.i.i.i, ptr %cp_mqd_base_addr_hi.i.i.i, align 4
  %virt.i.i.i196 = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 132
  %1472 = ptrtoint ptr %virt.i.i.i196 to i32
  call void @__asan_load4_noabort(i32 %1472)
  %1473 = load i32, ptr %virt.i.i.i196, align 8
  %and5.i.i.i = and i32 %1473, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i.i)
  %tobool.not.i.i.i197 = icmp eq i32 %and5.i.i.i, 0
  br i1 %tobool.not.i.i.i197, label %if.then.i.i198.cond.false.i.i.i207_crit_edge, label %land.lhs.true.i.i.i200

if.then.i.i198.cond.false.i.i.i207_crit_edge:     ; preds = %if.then.i.i198
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i207

land.lhs.true.i.i.i200:                           ; preds = %if.then.i.i198
  %funcs.i.i.i199 = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 106, i32 2, i32 15
  %1474 = ptrtoint ptr %funcs.i.i.i199 to i32
  call void @__asan_load4_noabort(i32 %1474)
  %1475 = load ptr, ptr %funcs.i.i.i199, align 4
  %tobool6.not.i.i.i = icmp eq ptr %1475, null
  br i1 %tobool6.not.i.i.i, label %land.lhs.true.i.i.i200.cond.false.i.i.i207_crit_edge, label %land.lhs.true7.i.i.i

land.lhs.true.i.i.i200.cond.false.i.i.i207_crit_edge: ; preds = %land.lhs.true.i.i.i200
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i207

land.lhs.true7.i.i.i:                             ; preds = %land.lhs.true.i.i.i200
  %sriov_rreg.i.i.i201 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1475, i32 0, i32 13
  %1476 = ptrtoint ptr %sriov_rreg.i.i.i201 to i32
  call void @__asan_load4_noabort(i32 %1476)
  %1477 = load ptr, ptr %sriov_rreg.i.i.i201, align 4
  %tobool11.not.i.i.i = icmp eq ptr %1477, null
  br i1 %tobool11.not.i.i.i, label %land.lhs.true7.i.i.i.cond.false.i.i.i207_crit_edge, label %cond.true.i.i.i205

land.lhs.true7.i.i.i.cond.false.i.i.i207_crit_edge: ; preds = %land.lhs.true7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false.i.i.i207

cond.true.i.i.i205:                               ; preds = %land.lhs.true7.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx.i.i.i202 = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1478 = ptrtoint ptr %arrayidx.i.i.i202 to i32
  call void @__asan_load4_noabort(i32 %1478)
  %1479 = load ptr, ptr %arrayidx.i.i.i202, align 8
  %1480 = ptrtoint ptr %1479 to i32
  call void @__asan_load4_noabort(i32 %1480)
  %1481 = load i32, ptr %1479, align 4
  %add.i.i.i203 = add i32 %1481, 7834
  %call.i.i.i204 = tail call i32 %1477(ptr noundef %1461, i32 noundef %add.i.i.i203, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end.i.i.i209

cond.false.i.i.i207:                              ; preds = %land.lhs.true7.i.i.i.cond.false.i.i.i207_crit_edge, %land.lhs.true.i.i.i200.cond.false.i.i.i207_crit_edge, %if.then.i.i198.cond.false.i.i.i207_crit_edge
  %arrayidx19.i.i.i206 = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1482 = ptrtoint ptr %arrayidx19.i.i.i206 to i32
  call void @__asan_load4_noabort(i32 %1482)
  %1483 = load ptr, ptr %arrayidx19.i.i.i206, align 8
  %1484 = ptrtoint ptr %1483 to i32
  call void @__asan_load4_noabort(i32 %1484)
  %1485 = load i32, ptr %1483, align 4
  %add22.i.i.i = add i32 %1485, 7834
  %call23.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %1461, i32 noundef %add22.i.i.i, i32 noundef 0) #13
  br label %cond.end.i.i.i209

cond.end.i.i.i209:                                ; preds = %cond.false.i.i.i207, %cond.true.i.i.i205
  %cond.i.i.i208 = phi i32 [ %call.i.i.i204, %cond.true.i.i.i205 ], [ %call23.i.i.i, %cond.false.i.i.i207 ]
  %and25.i.i.i = and i32 %cond.i.i.i208, -50331920
  %or26.i.i.i = or i32 %and25.i.i.i, 256
  %cp_gfx_mqd_control.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 162
  %1486 = ptrtoint ptr %cp_gfx_mqd_control.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1486)
  store i32 %or26.i.i.i, ptr %cp_gfx_mqd_control.i.i.i, align 4
  %1487 = ptrtoint ptr %virt.i.i.i196 to i32
  call void @__asan_load4_noabort(i32 %1487)
  %1488 = load i32, ptr %virt.i.i.i196, align 8
  %and31.i.i.i = and i32 %1488, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31.i.i.i)
  %tobool32.not.i.i.i = icmp eq i32 %and31.i.i.i, 0
  br i1 %tobool32.not.i.i.i, label %cond.end.i.i.i209.cond.false55.i.i.i_crit_edge, label %land.lhs.true33.i.i.i

cond.end.i.i.i209.cond.false55.i.i.i_crit_edge:   ; preds = %cond.end.i.i.i209
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false55.i.i.i

land.lhs.true33.i.i.i:                            ; preds = %cond.end.i.i.i209
  %funcs36.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 106, i32 2, i32 15
  %1489 = ptrtoint ptr %funcs36.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1489)
  %1490 = load ptr, ptr %funcs36.i.i.i, align 4
  %tobool37.not.i.i.i = icmp eq ptr %1490, null
  br i1 %tobool37.not.i.i.i, label %land.lhs.true33.i.i.i.cond.false55.i.i.i_crit_edge, label %land.lhs.true38.i.i.i

land.lhs.true33.i.i.i.cond.false55.i.i.i_crit_edge: ; preds = %land.lhs.true33.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false55.i.i.i

land.lhs.true38.i.i.i:                            ; preds = %land.lhs.true33.i.i.i
  %sriov_rreg42.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1490, i32 0, i32 13
  %1491 = ptrtoint ptr %sriov_rreg42.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1491)
  %1492 = load ptr, ptr %sriov_rreg42.i.i.i, align 4
  %tobool43.not.i.i.i = icmp eq ptr %1492, null
  br i1 %tobool43.not.i.i.i, label %land.lhs.true38.i.i.i.cond.false55.i.i.i_crit_edge, label %cond.true44.i.i.i

land.lhs.true38.i.i.i.cond.false55.i.i.i_crit_edge: ; preds = %land.lhs.true38.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false55.i.i.i

cond.true44.i.i.i:                                ; preds = %land.lhs.true38.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx50.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1493 = ptrtoint ptr %arrayidx50.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1493)
  %1494 = load ptr, ptr %arrayidx50.i.i.i, align 8
  %1495 = ptrtoint ptr %1494 to i32
  call void @__asan_load4_noabort(i32 %1495)
  %1496 = load i32, ptr %1494, align 4
  %add53.i.i.i = add i32 %1496, 7809
  %call54.i.i.i = tail call i32 %1492(ptr noundef %1461, i32 noundef %add53.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end62.i.i.i

cond.false55.i.i.i:                               ; preds = %land.lhs.true38.i.i.i.cond.false55.i.i.i_crit_edge, %land.lhs.true33.i.i.i.cond.false55.i.i.i_crit_edge, %cond.end.i.i.i209.cond.false55.i.i.i_crit_edge
  %arrayidx57.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1497 = ptrtoint ptr %arrayidx57.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1497)
  %1498 = load ptr, ptr %arrayidx57.i.i.i, align 8
  %1499 = ptrtoint ptr %1498 to i32
  call void @__asan_load4_noabort(i32 %1499)
  %1500 = load i32, ptr %1498, align 4
  %add60.i.i.i = add i32 %1500, 7809
  %call61.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %1461, i32 noundef %add60.i.i.i, i32 noundef 0) #13
  br label %cond.end62.i.i.i

cond.end62.i.i.i:                                 ; preds = %cond.false55.i.i.i, %cond.true44.i.i.i
  %cp_gfx_hqd_vmid.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 131
  %1501 = ptrtoint ptr %cp_gfx_hqd_vmid.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1501)
  store i32 0, ptr %cp_gfx_hqd_vmid.i.i.i, align 4
  %1502 = ptrtoint ptr %virt.i.i.i196 to i32
  call void @__asan_load4_noabort(i32 %1502)
  %1503 = load i32, ptr %virt.i.i.i196, align 8
  %and68.i.i.i = and i32 %1503, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68.i.i.i)
  %tobool69.not.i.i.i = icmp eq i32 %and68.i.i.i, 0
  br i1 %tobool69.not.i.i.i, label %cond.end62.i.i.i.cond.false92.i.i.i_crit_edge, label %land.lhs.true70.i.i.i

cond.end62.i.i.i.cond.false92.i.i.i_crit_edge:    ; preds = %cond.end62.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92.i.i.i

land.lhs.true70.i.i.i:                            ; preds = %cond.end62.i.i.i
  %funcs73.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 106, i32 2, i32 15
  %1504 = ptrtoint ptr %funcs73.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1504)
  %1505 = load ptr, ptr %funcs73.i.i.i, align 4
  %tobool74.not.i.i.i = icmp eq ptr %1505, null
  br i1 %tobool74.not.i.i.i, label %land.lhs.true70.i.i.i.cond.false92.i.i.i_crit_edge, label %land.lhs.true75.i.i.i

land.lhs.true70.i.i.i.cond.false92.i.i.i_crit_edge: ; preds = %land.lhs.true70.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92.i.i.i

land.lhs.true75.i.i.i:                            ; preds = %land.lhs.true70.i.i.i
  %sriov_rreg79.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1505, i32 0, i32 13
  %1506 = ptrtoint ptr %sriov_rreg79.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1506)
  %1507 = load ptr, ptr %sriov_rreg79.i.i.i, align 4
  %tobool80.not.i.i.i = icmp eq ptr %1507, null
  br i1 %tobool80.not.i.i.i, label %land.lhs.true75.i.i.i.cond.false92.i.i.i_crit_edge, label %cond.true81.i.i.i

land.lhs.true75.i.i.i.cond.false92.i.i.i_crit_edge: ; preds = %land.lhs.true75.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false92.i.i.i

cond.true81.i.i.i:                                ; preds = %land.lhs.true75.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx87.i.i.i210 = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1508 = ptrtoint ptr %arrayidx87.i.i.i210 to i32
  call void @__asan_load4_noabort(i32 %1508)
  %1509 = load ptr, ptr %arrayidx87.i.i.i210, align 8
  %1510 = ptrtoint ptr %1509 to i32
  call void @__asan_load4_noabort(i32 %1510)
  %1511 = load i32, ptr %1509, align 4
  %add90.i.i.i = add i32 %1511, 7812
  %call91.i.i.i = tail call i32 %1507(ptr noundef %1461, i32 noundef %add90.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end99.i.i.i

cond.false92.i.i.i:                               ; preds = %land.lhs.true75.i.i.i.cond.false92.i.i.i_crit_edge, %land.lhs.true70.i.i.i.cond.false92.i.i.i_crit_edge, %cond.end62.i.i.i.cond.false92.i.i.i_crit_edge
  %arrayidx94.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1512 = ptrtoint ptr %arrayidx94.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1512)
  %1513 = load ptr, ptr %arrayidx94.i.i.i, align 8
  %1514 = ptrtoint ptr %1513 to i32
  call void @__asan_load4_noabort(i32 %1514)
  %1515 = load i32, ptr %1513, align 4
  %add97.i.i.i = add i32 %1515, 7812
  %call98.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %1461, i32 noundef %add97.i.i.i, i32 noundef 0) #13
  br label %cond.end99.i.i.i

cond.end99.i.i.i:                                 ; preds = %cond.false92.i.i.i, %cond.true81.i.i.i
  %cond100.i.i.i = phi i32 [ %call91.i.i.i, %cond.true81.i.i.i ], [ %call98.i.i.i, %cond.false92.i.i.i ]
  %and101.i.i.i = and i32 %cond100.i.i.i, -16
  %cp_gfx_hqd_queue_priority.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 134
  %1516 = ptrtoint ptr %cp_gfx_hqd_queue_priority.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1516)
  store i32 %and101.i.i.i, ptr %cp_gfx_hqd_queue_priority.i.i.i, align 4
  %1517 = ptrtoint ptr %virt.i.i.i196 to i32
  call void @__asan_load4_noabort(i32 %1517)
  %1518 = load i32, ptr %virt.i.i.i196, align 8
  %and105.i.i.i = and i32 %1518, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and105.i.i.i)
  %tobool106.not.i.i.i = icmp eq i32 %and105.i.i.i, 0
  br i1 %tobool106.not.i.i.i, label %cond.end99.i.i.i.cond.false129.i.i.i_crit_edge, label %land.lhs.true107.i.i.i

cond.end99.i.i.i.cond.false129.i.i.i_crit_edge:   ; preds = %cond.end99.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false129.i.i.i

land.lhs.true107.i.i.i:                           ; preds = %cond.end99.i.i.i
  %funcs110.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 106, i32 2, i32 15
  %1519 = ptrtoint ptr %funcs110.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1519)
  %1520 = load ptr, ptr %funcs110.i.i.i, align 4
  %tobool111.not.i.i.i = icmp eq ptr %1520, null
  br i1 %tobool111.not.i.i.i, label %land.lhs.true107.i.i.i.cond.false129.i.i.i_crit_edge, label %land.lhs.true112.i.i.i

land.lhs.true107.i.i.i.cond.false129.i.i.i_crit_edge: ; preds = %land.lhs.true107.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false129.i.i.i

land.lhs.true112.i.i.i:                           ; preds = %land.lhs.true107.i.i.i
  %sriov_rreg116.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1520, i32 0, i32 13
  %1521 = ptrtoint ptr %sriov_rreg116.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1521)
  %1522 = load ptr, ptr %sriov_rreg116.i.i.i, align 4
  %tobool117.not.i.i.i = icmp eq ptr %1522, null
  br i1 %tobool117.not.i.i.i, label %land.lhs.true112.i.i.i.cond.false129.i.i.i_crit_edge, label %cond.true118.i.i.i

land.lhs.true112.i.i.i.cond.false129.i.i.i_crit_edge: ; preds = %land.lhs.true112.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false129.i.i.i

cond.true118.i.i.i:                               ; preds = %land.lhs.true112.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx124.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1523 = ptrtoint ptr %arrayidx124.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1523)
  %1524 = load ptr, ptr %arrayidx124.i.i.i, align 8
  %1525 = ptrtoint ptr %1524 to i32
  call void @__asan_load4_noabort(i32 %1525)
  %1526 = load i32, ptr %1524, align 4
  %add127.i.i.i = add i32 %1526, 7813
  %call128.i.i.i = tail call i32 %1522(ptr noundef %1461, i32 noundef %add127.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end136.i.i.i

cond.false129.i.i.i:                              ; preds = %land.lhs.true112.i.i.i.cond.false129.i.i.i_crit_edge, %land.lhs.true107.i.i.i.cond.false129.i.i.i_crit_edge, %cond.end99.i.i.i.cond.false129.i.i.i_crit_edge
  %arrayidx131.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1527 = ptrtoint ptr %arrayidx131.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1527)
  %1528 = load ptr, ptr %arrayidx131.i.i.i, align 8
  %1529 = ptrtoint ptr %1528 to i32
  call void @__asan_load4_noabort(i32 %1529)
  %1530 = load i32, ptr %1528, align 4
  %add134.i.i.i = add i32 %1530, 7813
  %call135.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %1461, i32 noundef %add134.i.i.i, i32 noundef 0) #13
  br label %cond.end136.i.i.i

cond.end136.i.i.i:                                ; preds = %cond.false129.i.i.i, %cond.true118.i.i.i
  %cond137.i.i.i = phi i32 [ %call128.i.i.i, %cond.true118.i.i.i ], [ %call135.i.i.i, %cond.false129.i.i.i ]
  %or139.i.i.i = or i32 %cond137.i.i.i, 1
  %cp_gfx_hqd_quantum.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 135
  %1531 = ptrtoint ptr %cp_gfx_hqd_quantum.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1531)
  store i32 %or139.i.i.i, ptr %cp_gfx_hqd_quantum.i.i.i, align 4
  %gpu_addr.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 12
  %1532 = ptrtoint ptr %gpu_addr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1532)
  %1533 = load i64, ptr %gpu_addr.i.i.i, align 8
  %shr140.i.i.i = lshr i64 %1533, 8
  %conv141.i.i.i = trunc i64 %shr140.i.i.i to i32
  %cp_gfx_hqd_base.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 136
  %1534 = ptrtoint ptr %cp_gfx_hqd_base.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1534)
  store i32 %conv141.i.i.i, ptr %cp_gfx_hqd_base.i.i.i, align 4
  %shr142.i.i.i = lshr i64 %1533, 40
  %conv144.i.i.i = trunc i64 %shr142.i.i.i to i32
  %cp_gfx_hqd_base_hi.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 137
  %1535 = ptrtoint ptr %cp_gfx_hqd_base_hi.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1535)
  store i32 %conv144.i.i.i, ptr %cp_gfx_hqd_base_hi.i.i.i, align 4
  %gpu_addr145.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 70, i32 2
  %1536 = ptrtoint ptr %gpu_addr145.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1536)
  %1537 = load i64, ptr %gpu_addr145.i.i.i, align 8
  %rptr_offs.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 6
  %1538 = ptrtoint ptr %rptr_offs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1538)
  %1539 = load i32, ptr %rptr_offs.i.i.i, align 8
  %mul.i.i.i = shl i32 %1539, 2
  %conv146.i.i.i = zext i32 %mul.i.i.i to i64
  %add147.i.i.i = add i64 %1537, %conv146.i.i.i
  %1540 = trunc i64 %add147.i.i.i to i32
  %conv149.i.i.i = and i32 %1540, -4
  %cp_gfx_hqd_rptr_addr.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 139
  %1541 = ptrtoint ptr %cp_gfx_hqd_rptr_addr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1541)
  store i32 %conv149.i.i.i, ptr %cp_gfx_hqd_rptr_addr.i.i.i, align 4
  %shr150.i.i.i = lshr i64 %add147.i.i.i, 32
  %conv152.i.i.i = trunc i64 %shr150.i.i.i to i32
  %and153.i.i.i = and i32 %conv152.i.i.i, 65535
  %cp_gfx_hqd_rptr_addr_hi.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 140
  %1542 = ptrtoint ptr %cp_gfx_hqd_rptr_addr_hi.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1542)
  store i32 %and153.i.i.i, ptr %cp_gfx_hqd_rptr_addr_hi.i.i.i, align 4
  %1543 = load i64, ptr %gpu_addr145.i.i.i, align 8
  %wptr_offs.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 26
  %1544 = ptrtoint ptr %wptr_offs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1544)
  %1545 = load i32, ptr %wptr_offs.i.i.i, align 8
  %mul156.i.i.i = shl i32 %1545, 2
  %conv157.i.i.i = zext i32 %mul156.i.i.i to i64
  %add158.i.i.i211 = add i64 %1543, %conv157.i.i.i
  %1546 = trunc i64 %add158.i.i.i211 to i32
  %conv160.i.i.i = and i32 %1546, -4
  %cp_rb_wptr_poll_addr_lo.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 141
  %1547 = ptrtoint ptr %cp_rb_wptr_poll_addr_lo.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1547)
  store i32 %conv160.i.i.i, ptr %cp_rb_wptr_poll_addr_lo.i.i.i, align 4
  %shr161.i.i.i = lshr i64 %add158.i.i.i211, 32
  %conv163.i.i.i = trunc i64 %shr161.i.i.i to i32
  %and164.i.i.i = and i32 %conv163.i.i.i, 65535
  %cp_rb_wptr_poll_addr_hi.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 142
  %1548 = ptrtoint ptr %cp_rb_wptr_poll_addr_hi.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1548)
  store i32 %and164.i.i.i, ptr %cp_rb_wptr_poll_addr_hi.i.i.i, align 4
  %ring_size.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 9
  %1549 = ptrtoint ptr %ring_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1549)
  %1550 = load i32, ptr %ring_size.i.i.i, align 8
  %div1.i.i.i = lshr i32 %1550, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %1550)
  %cmp.i.i.i.i = icmp ugt i32 %1550, 7
  %sub.i2.i.i.i = add nsw i32 %div1.i.i.i, -1
  %1551 = tail call i32 @llvm.ctlz.i32(i32 %sub.i2.i.i.i, i1 false) #13, !range !477
  %add.i.i.i.i = sub nuw nsw i32 32, %1551
  %cond207.i.i.i = select i1 %cmp.i.i.i.i, i32 %add.i.i.i.i, i32 0
  %sub208.i.i.i = add nsw i32 %cond207.i.i.i, 63
  %1552 = ptrtoint ptr %virt.i.i.i196 to i32
  call void @__asan_load4_noabort(i32 %1552)
  %1553 = load i32, ptr %virt.i.i.i196, align 8
  %and211.i.i.i = and i32 %1553, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and211.i.i.i)
  %tobool212.not.i.i.i = icmp eq i32 %and211.i.i.i, 0
  br i1 %tobool212.not.i.i.i, label %cond.end136.i.i.i.cond.false235.i.i.i_crit_edge, label %land.lhs.true213.i.i.i

cond.end136.i.i.i.cond.false235.i.i.i_crit_edge:  ; preds = %cond.end136.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false235.i.i.i

land.lhs.true213.i.i.i:                           ; preds = %cond.end136.i.i.i
  %funcs216.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 106, i32 2, i32 15
  %1554 = ptrtoint ptr %funcs216.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1554)
  %1555 = load ptr, ptr %funcs216.i.i.i, align 4
  %tobool217.not.i.i.i = icmp eq ptr %1555, null
  br i1 %tobool217.not.i.i.i, label %land.lhs.true213.i.i.i.cond.false235.i.i.i_crit_edge, label %land.lhs.true218.i.i.i

land.lhs.true213.i.i.i.cond.false235.i.i.i_crit_edge: ; preds = %land.lhs.true213.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false235.i.i.i

land.lhs.true218.i.i.i:                           ; preds = %land.lhs.true213.i.i.i
  %sriov_rreg222.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1555, i32 0, i32 13
  %1556 = ptrtoint ptr %sriov_rreg222.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1556)
  %1557 = load ptr, ptr %sriov_rreg222.i.i.i, align 4
  %tobool223.not.i.i.i = icmp eq ptr %1557, null
  br i1 %tobool223.not.i.i.i, label %land.lhs.true218.i.i.i.cond.false235.i.i.i_crit_edge, label %cond.true224.i.i.i

land.lhs.true218.i.i.i.cond.false235.i.i.i_crit_edge: ; preds = %land.lhs.true218.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false235.i.i.i

cond.true224.i.i.i:                               ; preds = %land.lhs.true218.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx230.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1558 = ptrtoint ptr %arrayidx230.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1558)
  %1559 = load ptr, ptr %arrayidx230.i.i.i, align 8
  %1560 = ptrtoint ptr %1559 to i32
  call void @__asan_load4_noabort(i32 %1560)
  %1561 = load i32, ptr %1559, align 4
  %add233.i.i.i = add i32 %1561, 7823
  %call234.i.i.i = tail call i32 %1557(ptr noundef %1461, i32 noundef %add233.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end242.i.i.i

cond.false235.i.i.i:                              ; preds = %land.lhs.true218.i.i.i.cond.false235.i.i.i_crit_edge, %land.lhs.true213.i.i.i.cond.false235.i.i.i_crit_edge, %cond.end136.i.i.i.cond.false235.i.i.i_crit_edge
  %arrayidx237.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1562 = ptrtoint ptr %arrayidx237.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1562)
  %1563 = load ptr, ptr %arrayidx237.i.i.i, align 8
  %1564 = ptrtoint ptr %1563 to i32
  call void @__asan_load4_noabort(i32 %1564)
  %1565 = load i32, ptr %1563, align 4
  %add240.i.i.i = add i32 %1565, 7823
  %call241.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %1461, i32 noundef %add240.i.i.i, i32 noundef 0) #13
  br label %cond.end242.i.i.i

cond.end242.i.i.i:                                ; preds = %cond.false235.i.i.i, %cond.true224.i.i.i
  %cond243.i.i.i = phi i32 [ %call234.i.i.i, %cond.true224.i.i.i ], [ %call241.i.i.i, %cond.false235.i.i.i ]
  %and244.i.i.i = and i32 %cond243.i.i.i, -212800
  %and245.i.i.i = and i32 %sub208.i.i.i, 63
  %sub248.i.i.i = shl nsw i32 %cond207.i.i.i, 8
  %shl249.i.i.i = add nsw i32 %sub248.i.i.i, 15616
  %and250.i.i.i = and i32 %shl249.i.i.i, 16128
  %or246.i.i.i = or i32 %and245.i.i.i, %and250.i.i.i
  %or251.i.i.i = or i32 %or246.i.i.i, %and244.i.i.i
  %or253.i.i.i = or i32 %or251.i.i.i, 65536
  %cp_gfx_hqd_cntl.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 145
  %1566 = ptrtoint ptr %cp_gfx_hqd_cntl.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1566)
  store i32 %or253.i.i.i, ptr %cp_gfx_hqd_cntl.i.i.i, align 4
  %1567 = ptrtoint ptr %virt.i.i.i196 to i32
  call void @__asan_load4_noabort(i32 %1567)
  %1568 = load i32, ptr %virt.i.i.i196, align 8
  %and256.i.i.i = and i32 %1568, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and256.i.i.i)
  %tobool257.not.i.i.i = icmp eq i32 %and256.i.i.i, 0
  br i1 %tobool257.not.i.i.i, label %cond.end242.i.i.i.cond.false280.i.i.i_crit_edge, label %land.lhs.true258.i.i.i

cond.end242.i.i.i.cond.false280.i.i.i_crit_edge:  ; preds = %cond.end242.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false280.i.i.i

land.lhs.true258.i.i.i:                           ; preds = %cond.end242.i.i.i
  %funcs261.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 106, i32 2, i32 15
  %1569 = ptrtoint ptr %funcs261.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1569)
  %1570 = load ptr, ptr %funcs261.i.i.i, align 4
  %tobool262.not.i.i.i = icmp eq ptr %1570, null
  br i1 %tobool262.not.i.i.i, label %land.lhs.true258.i.i.i.cond.false280.i.i.i_crit_edge, label %land.lhs.true263.i.i.i

land.lhs.true258.i.i.i.cond.false280.i.i.i_crit_edge: ; preds = %land.lhs.true258.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false280.i.i.i

land.lhs.true263.i.i.i:                           ; preds = %land.lhs.true258.i.i.i
  %sriov_rreg267.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1570, i32 0, i32 13
  %1571 = ptrtoint ptr %sriov_rreg267.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1571)
  %1572 = load ptr, ptr %sriov_rreg267.i.i.i, align 4
  %tobool268.not.i.i.i = icmp eq ptr %1572, null
  br i1 %tobool268.not.i.i.i, label %land.lhs.true263.i.i.i.cond.false280.i.i.i_crit_edge, label %cond.true269.i.i.i

land.lhs.true263.i.i.i.cond.false280.i.i.i_crit_edge: ; preds = %land.lhs.true263.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false280.i.i.i

cond.true269.i.i.i:                               ; preds = %land.lhs.true263.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx275.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1573 = ptrtoint ptr %arrayidx275.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1573)
  %1574 = load ptr, ptr %arrayidx275.i.i.i, align 8
  %1575 = ptrtoint ptr %1574 to i32
  call void @__asan_load4_noabort(i32 %1575)
  %1576 = load i32, ptr %1574, align 4
  %add278.i.i.i = add i32 %1576, 7821
  %call279.i.i.i = tail call i32 %1572(ptr noundef %1461, i32 noundef %add278.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end287.i.i.i

cond.false280.i.i.i:                              ; preds = %land.lhs.true263.i.i.i.cond.false280.i.i.i_crit_edge, %land.lhs.true258.i.i.i.cond.false280.i.i.i_crit_edge, %cond.end242.i.i.i.cond.false280.i.i.i_crit_edge
  %arrayidx282.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1577 = ptrtoint ptr %arrayidx282.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1577)
  %1578 = load ptr, ptr %arrayidx282.i.i.i, align 8
  %1579 = ptrtoint ptr %1578 to i32
  call void @__asan_load4_noabort(i32 %1579)
  %1580 = load i32, ptr %1578, align 4
  %add285.i.i.i = add i32 %1580, 7821
  %call286.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %1461, i32 noundef %add285.i.i.i, i32 noundef 0) #13
  br label %cond.end287.i.i.i

cond.end287.i.i.i:                                ; preds = %cond.false280.i.i.i, %cond.true269.i.i.i
  %cond288.i.i.i = phi i32 [ %call279.i.i.i, %cond.true269.i.i.i ], [ %call286.i.i.i, %cond.false280.i.i.i ]
  %use_doorbell.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 24
  %1581 = ptrtoint ptr %use_doorbell.i.i.i to i32
  call void @__asan_load1_noabort(i32 %1581)
  %1582 = load i8, ptr %use_doorbell.i.i.i, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1582)
  %tobool289.not.i.i.i = icmp eq i8 %1582, 0
  br i1 %tobool289.not.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %cond.end287.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %and290.i.i.i = and i32 %cond288.i.i.i, -1342177277
  %doorbell_index.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 23
  %1583 = ptrtoint ptr %doorbell_index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1583)
  %1584 = load i32, ptr %doorbell_index.i.i.i, align 8
  %shl291.i.i.i = shl i32 %1584, 2
  %and292.i.i.i = and i32 %shl291.i.i.i, 268435452
  %or293.i.i.i = or i32 %and290.i.i.i, %and292.i.i.i
  %or295.i.i.i = or i32 %or293.i.i.i, 1073741824
  br label %if.end.i.i.i

if.else.i.i.i:                                    ; preds = %cond.end287.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %and296.i.i.i = and i32 %cond288.i.i.i, -1073741825
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.else.i.i.i, %if.then.i.i.i
  %tmp.0.i.i.i = phi i32 [ %or295.i.i.i, %if.then.i.i.i ], [ %and296.i.i.i, %if.else.i.i.i ]
  %cp_rb_doorbell_control.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 143
  %1585 = ptrtoint ptr %cp_rb_doorbell_control.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1585)
  store i32 %tmp.0.i.i.i, ptr %cp_rb_doorbell_control.i.i.i, align 4
  %doorbell_index298.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 23
  %1586 = ptrtoint ptr %doorbell_index298.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1586)
  %1587 = load i32, ptr %doorbell_index298.i.i.i, align 8
  %gfx_ring0.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 144, i32 11
  %1588 = ptrtoint ptr %gfx_ring0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1588)
  %1589 = load i32, ptr %gfx_ring0.i.i.i, align 4
  %shl300.i.i.i = shl i32 %1589, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %1587, i32 %shl300.i.i.i)
  %cmp301.i.i.i = icmp eq i32 %1587, %shl300.i.i.i
  br i1 %cmp301.i.i.i, label %if.then303.i.i.i, label %if.end.i.i.i.if.end304.i.i.i_crit_edge

if.end.i.i.i.if.end304.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end304.i.i.i

if.then303.i.i.i:                                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  tail call fastcc void @gfx_v10_0_cp_gfx_set_doorbell(ptr noundef %1461, ptr noundef %arrayidx.i167) #13
  br label %if.end304.i.i.i

if.end304.i.i.i:                                  ; preds = %if.then303.i.i.i, %if.end.i.i.i.if.end304.i.i.i_crit_edge
  %wptr.i.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 7
  %1590 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_store8_noabort(i32 %1590)
  store i64 0, ptr %wptr.i.i.i, align 8
  %1591 = ptrtoint ptr %virt.i.i.i196 to i32
  call void @__asan_load4_noabort(i32 %1591)
  %1592 = load i32, ptr %virt.i.i.i196, align 8
  %and307.i.i.i = and i32 %1592, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and307.i.i.i)
  %tobool308.not.i.i.i = icmp eq i32 %and307.i.i.i, 0
  br i1 %tobool308.not.i.i.i, label %if.end304.i.i.i.cond.false331.i.i.i_crit_edge, label %land.lhs.true309.i.i.i

if.end304.i.i.i.cond.false331.i.i.i_crit_edge:    ; preds = %if.end304.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false331.i.i.i

land.lhs.true309.i.i.i:                           ; preds = %if.end304.i.i.i
  %funcs312.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1461, i32 0, i32 106, i32 2, i32 15
  %1593 = ptrtoint ptr %funcs312.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1593)
  %1594 = load ptr, ptr %funcs312.i.i.i, align 4
  %tobool313.not.i.i.i = icmp eq ptr %1594, null
  br i1 %tobool313.not.i.i.i, label %land.lhs.true309.i.i.i.cond.false331.i.i.i_crit_edge, label %land.lhs.true314.i.i.i

land.lhs.true309.i.i.i.cond.false331.i.i.i_crit_edge: ; preds = %land.lhs.true309.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false331.i.i.i

land.lhs.true314.i.i.i:                           ; preds = %land.lhs.true309.i.i.i
  %sriov_rreg318.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1594, i32 0, i32 13
  %1595 = ptrtoint ptr %sriov_rreg318.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1595)
  %1596 = load ptr, ptr %sriov_rreg318.i.i.i, align 4
  %tobool319.not.i.i.i = icmp eq ptr %1596, null
  br i1 %tobool319.not.i.i.i, label %land.lhs.true314.i.i.i.cond.false331.i.i.i_crit_edge, label %cond.true320.i.i.i

land.lhs.true314.i.i.i.cond.false331.i.i.i_crit_edge: ; preds = %land.lhs.true314.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false331.i.i.i

cond.true320.i.i.i:                               ; preds = %land.lhs.true314.i.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx326.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1597 = ptrtoint ptr %arrayidx326.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1597)
  %1598 = load ptr, ptr %arrayidx326.i.i.i, align 8
  %1599 = ptrtoint ptr %1598 to i32
  call void @__asan_load4_noabort(i32 %1599)
  %1600 = load i32, ptr %1598, align 4
  %add329.i.i.i = add i32 %1600, 7816
  %call330.i.i.i = tail call i32 %1596(ptr noundef %1461, i32 noundef %add329.i.i.i, i32 noundef 0, i32 noundef 1) #13
  br label %gfx_v10_0_gfx_mqd_init.exit.i.i

cond.false331.i.i.i:                              ; preds = %land.lhs.true314.i.i.i.cond.false331.i.i.i_crit_edge, %land.lhs.true309.i.i.i.cond.false331.i.i.i_crit_edge, %if.end304.i.i.i.cond.false331.i.i.i_crit_edge
  %arrayidx333.i.i.i = getelementptr %struct.amdgpu_device, ptr %1461, i32 0, i32 130, i32 1
  %1601 = ptrtoint ptr %arrayidx333.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1601)
  %1602 = load ptr, ptr %arrayidx333.i.i.i, align 8
  %1603 = ptrtoint ptr %1602 to i32
  call void @__asan_load4_noabort(i32 %1603)
  %1604 = load i32, ptr %1602, align 4
  %add336.i.i.i = add i32 %1604, 7816
  %call337.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %1461, i32 noundef %add336.i.i.i, i32 noundef 0) #13
  br label %gfx_v10_0_gfx_mqd_init.exit.i.i

gfx_v10_0_gfx_mqd_init.exit.i.i:                  ; preds = %cond.false331.i.i.i, %cond.true320.i.i.i
  %cond339.i.i.i = phi i32 [ %call330.i.i.i, %cond.true320.i.i.i ], [ %call337.i.i.i, %cond.false331.i.i.i ]
  %cp_gfx_hqd_rptr.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 138
  %1605 = ptrtoint ptr %cp_gfx_hqd_rptr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1605)
  store i32 %cond339.i.i.i, ptr %cp_gfx_hqd_rptr.i.i.i, align 4
  %cp_gfx_hqd_active.i.i.i = getelementptr inbounds %struct.v10_gfx_mqd, ptr %1463, i32 0, i32 130
  %1606 = ptrtoint ptr %cp_gfx_hqd_active.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1606)
  store i32 1, ptr %cp_gfx_hqd_active.i.i.i, align 4
  tail call void @nv_grbm_select(ptr noundef %1446, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #13
  tail call void @mutex_unlock(ptr noundef %srbm_mutex.i.i192) #13
  %arrayidx7.i.i = getelementptr %struct.amdgpu_device, ptr %1446, i32 0, i32 106, i32 5, i32 6, i32 %sub.ptr.div.i.i184
  %1607 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load4_noabort(i32 %1607)
  %1608 = load ptr, ptr %arrayidx7.i.i, align 4
  %tobool8.not.i.i = icmp eq ptr %1608, null
  br i1 %tobool8.not.i.i, label %gfx_v10_0_gfx_mqd_init.exit.i.i.gfx_v10_0_gfx_init_queue.exit.i_crit_edge, label %if.then9.i.i

gfx_v10_0_gfx_mqd_init.exit.i.i.gfx_v10_0_gfx_init_queue.exit.i_crit_edge: ; preds = %gfx_v10_0_gfx_mqd_init.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_gfx_init_queue.exit.i

if.then9.i.i:                                     ; preds = %gfx_v10_0_gfx_mqd_init.exit.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %1609 = call ptr @memcpy(ptr %1608, ptr %1448, i32 2048)
  br label %gfx_v10_0_gfx_init_queue.exit.i

if.else.i.i215:                                   ; preds = %land.lhs.true.i.i191.if.else.i.i215_crit_edge, %if.then7.i188.if.else.i.i215_crit_edge
  %call.i.i.i2.i.i214 = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i185, i32 noundef 4) #13
  %1610 = ptrtoint ptr %in_gpu_reset.i.i.i185 to i32
  call void @__asan_load4_noabort(i32 %1610)
  %1611 = load volatile i32, ptr %in_gpu_reset.i.i.i185, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1611)
  %tobool15.not.i.i = icmp eq i32 %1611, 0
  br i1 %tobool15.not.i.i, label %if.else30.i.i, label %if.then16.i.i

if.then16.i.i:                                    ; preds = %if.else.i.i215
  %arrayidx20.i.i216 = getelementptr %struct.amdgpu_device, ptr %1446, i32 0, i32 106, i32 5, i32 6, i32 %sub.ptr.div.i.i184
  %1612 = ptrtoint ptr %arrayidx20.i.i216 to i32
  call void @__asan_load4_noabort(i32 %1612)
  %1613 = load ptr, ptr %arrayidx20.i.i216, align 4
  %tobool21.not.i.i217 = icmp eq ptr %1613, null
  br i1 %tobool21.not.i.i217, label %if.then16.i.i.if.end27.i.i_crit_edge, label %if.then22.i.i218

if.then16.i.i.if.end27.i.i_crit_edge:             ; preds = %if.then16.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end27.i.i

if.then22.i.i218:                                 ; preds = %if.then16.i.i
  call void @__sanitizer_cov_trace_pc() #15
  %1614 = call ptr @memcpy(ptr %1448, ptr %1613, i32 2048)
  br label %if.end27.i.i

if.end27.i.i:                                     ; preds = %if.then22.i.i218, %if.then16.i.i.if.end27.i.i_crit_edge
  %wptr.i.i219 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 7
  %1615 = ptrtoint ptr %wptr.i.i219 to i32
  call void @__asan_store8_noabort(i32 %1615)
  store i64 0, ptr %wptr.i.i219, align 8
  %wb28.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1446, i32 0, i32 70, i32 1
  %1616 = ptrtoint ptr %wb28.i.i to i32
  call void @__asan_load4_noabort(i32 %1616)
  %1617 = load ptr, ptr %wb28.i.i, align 4
  %wptr_offs.i.i220 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 26
  %1618 = ptrtoint ptr %wptr_offs.i.i220 to i32
  call void @__asan_load4_noabort(i32 %1618)
  %1619 = load i32, ptr %wptr_offs.i.i220, align 8
  %arrayidx29.i.i = getelementptr i32, ptr %1617, i32 %1619
  %1620 = ptrtoint ptr %arrayidx29.i.i to i32
  call void @__asan_store4_noabort(i32 %1620)
  store volatile i32 0, ptr %arrayidx29.i.i, align 4
  %buf_mask.i.i.i221 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 14
  %funcs.i3.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 1
  %ring1.i.i.i222 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 5
  br label %while.body.i.i.i227

while.body.i.i.i227:                              ; preds = %while.body.i.i.i227.while.body.i.i.i227_crit_edge, %if.end27.i.i
  %i.05.i.i.i223 = phi i32 [ 0, %if.end27.i.i ], [ %inc.i.i.i225, %while.body.i.i.i227.while.body.i.i.i227_crit_edge ]
  %1621 = ptrtoint ptr %funcs.i3.i.i to i32
  call void @__asan_load4_noabort(i32 %1621)
  %1622 = load ptr, ptr %funcs.i3.i.i, align 4
  %nop.i.i.i224 = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %1622, i32 0, i32 2
  %1623 = ptrtoint ptr %nop.i.i.i224 to i32
  call void @__asan_load4_noabort(i32 %1623)
  %1624 = load i32, ptr %nop.i.i.i224, align 4
  %1625 = ptrtoint ptr %ring1.i.i.i222 to i32
  call void @__asan_load4_noabort(i32 %1625)
  %1626 = load ptr, ptr %ring1.i.i.i222, align 4
  %inc.i.i.i225 = add i32 %i.05.i.i.i223, 1
  %arrayidx.i4.i.i = getelementptr i32, ptr %1626, i32 %i.05.i.i.i223
  %1627 = ptrtoint ptr %arrayidx.i4.i.i to i32
  call void @__asan_store4_noabort(i32 %1627)
  store volatile i32 %1624, ptr %arrayidx.i4.i.i, align 4
  %1628 = ptrtoint ptr %buf_mask.i.i.i221 to i32
  call void @__asan_load4_noabort(i32 %1628)
  %1629 = load i32, ptr %buf_mask.i.i.i221, align 8
  %cmp.not.i.i.i226 = icmp ugt i32 %inc.i.i.i225, %1629
  br i1 %cmp.not.i.i.i226, label %while.body.i.i.i227.gfx_v10_0_gfx_init_queue.exit.i_crit_edge, label %while.body.i.i.i227.while.body.i.i.i227_crit_edge

while.body.i.i.i227.while.body.i.i.i227_crit_edge: ; preds = %while.body.i.i.i227
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i.i.i227

while.body.i.i.i227.gfx_v10_0_gfx_init_queue.exit.i_crit_edge: ; preds = %while.body.i.i.i227
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_gfx_init_queue.exit.i

if.else30.i.i:                                    ; preds = %if.else.i.i215
  %buf_mask.i5.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 14
  %funcs.i6.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 1
  %ring1.i7.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.076.i, i32 5
  br label %while.body.i13.i.i

while.body.i13.i.i:                               ; preds = %while.body.i13.i.i.while.body.i13.i.i_crit_edge, %if.else30.i.i
  %i.05.i8.i.i = phi i32 [ 0, %if.else30.i.i ], [ %inc.i10.i.i, %while.body.i13.i.i.while.body.i13.i.i_crit_edge ]
  %1630 = ptrtoint ptr %funcs.i6.i.i to i32
  call void @__asan_load4_noabort(i32 %1630)
  %1631 = load ptr, ptr %funcs.i6.i.i, align 4
  %nop.i9.i.i = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %1631, i32 0, i32 2
  %1632 = ptrtoint ptr %nop.i9.i.i to i32
  call void @__asan_load4_noabort(i32 %1632)
  %1633 = load i32, ptr %nop.i9.i.i, align 4
  %1634 = ptrtoint ptr %ring1.i7.i.i to i32
  call void @__asan_load4_noabort(i32 %1634)
  %1635 = load ptr, ptr %ring1.i7.i.i, align 4
  %inc.i10.i.i = add i32 %i.05.i8.i.i, 1
  %arrayidx.i11.i.i = getelementptr i32, ptr %1635, i32 %i.05.i8.i.i
  %1636 = ptrtoint ptr %arrayidx.i11.i.i to i32
  call void @__asan_store4_noabort(i32 %1636)
  store volatile i32 %1633, ptr %arrayidx.i11.i.i, align 4
  %1637 = ptrtoint ptr %buf_mask.i5.i.i to i32
  call void @__asan_load4_noabort(i32 %1637)
  %1638 = load i32, ptr %buf_mask.i5.i.i, align 8
  %cmp.not.i12.i.i = icmp ugt i32 %inc.i10.i.i, %1638
  br i1 %cmp.not.i12.i.i, label %while.body.i13.i.i.gfx_v10_0_gfx_init_queue.exit.i_crit_edge, label %while.body.i13.i.i.while.body.i13.i.i_crit_edge

while.body.i13.i.i.while.body.i13.i.i_crit_edge:  ; preds = %while.body.i13.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %while.body.i13.i.i

while.body.i13.i.i.gfx_v10_0_gfx_init_queue.exit.i_crit_edge: ; preds = %while.body.i13.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_gfx_init_queue.exit.i

gfx_v10_0_gfx_init_queue.exit.i:                  ; preds = %while.body.i13.i.i.gfx_v10_0_gfx_init_queue.exit.i_crit_edge, %while.body.i.i.i227.gfx_v10_0_gfx_init_queue.exit.i_crit_edge, %if.then9.i.i, %gfx_v10_0_gfx_mqd_init.exit.i.i.gfx_v10_0_gfx_init_queue.exit.i_crit_edge
  %1639 = ptrtoint ptr %mqd_obj.i168 to i32
  call void @__asan_load4_noabort(i32 %1639)
  %1640 = load ptr, ptr %mqd_obj.i168, align 4
  tail call void @amdgpu_bo_kunmap(ptr noundef %1640) #13
  %1641 = ptrtoint ptr %mqd_ptr.i177 to i32
  call void @__asan_store4_noabort(i32 %1641)
  store ptr null, ptr %mqd_ptr.i177, align 8
  br label %if.end11.i236

if.end11.i236:                                    ; preds = %gfx_v10_0_gfx_init_queue.exit.i, %if.end.i180.if.end11.i236_crit_edge
  %r.0.i228 = phi i32 [ %call5.i178, %if.end.i180.if.end11.i236_crit_edge ], [ 0, %gfx_v10_0_gfx_init_queue.exit.i ]
  %1642 = ptrtoint ptr %mqd_obj.i168 to i32
  call void @__asan_load4_noabort(i32 %1642)
  %1643 = load ptr, ptr %mqd_obj.i168, align 4
  %tbo.i.i229 = getelementptr inbounds %struct.amdgpu_bo, ptr %1643, i32 0, i32 4
  %bdev.i.i.i.i230 = getelementptr inbounds %struct.amdgpu_bo, ptr %1643, i32 0, i32 4, i32 1
  %1644 = ptrtoint ptr %bdev.i.i.i.i230 to i32
  call void @__asan_load4_noabort(i32 %1644)
  %1645 = load ptr, ptr %bdev.i.i.i.i230, align 8
  %lru_lock.i.i.i.i231 = getelementptr inbounds %struct.ttm_device, ptr %1645, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i231) #13
  %resource.i.i.i.i232 = getelementptr inbounds %struct.amdgpu_bo, ptr %1643, i32 0, i32 4, i32 6
  %1646 = ptrtoint ptr %resource.i.i.i.i232 to i32
  call void @__asan_load4_noabort(i32 %1646)
  %1647 = load ptr, ptr %resource.i.i.i.i232, align 4
  tail call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i229, ptr noundef %1647, ptr noundef null) #13
  %1648 = ptrtoint ptr %bdev.i.i.i.i230 to i32
  call void @__asan_load4_noabort(i32 %1648)
  %1649 = load ptr, ptr %bdev.i.i.i.i230, align 8
  %lru_lock2.i.i.i.i233 = getelementptr inbounds %struct.ttm_device, ptr %1649, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i233) #13
  %resv.i.i.i234 = getelementptr inbounds %struct.amdgpu_bo, ptr %1643, i32 0, i32 4, i32 0, i32 9
  %1650 = ptrtoint ptr %resv.i.i.i234 to i32
  call void @__asan_load4_noabort(i32 %1650)
  %1651 = load ptr, ptr %resv.i.i.i234, align 8
  tail call void @dma_resv_reset_shared_max(ptr noundef %1651) #13
  tail call void @ww_mutex_unlock(ptr noundef %1651) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.0.i228)
  %tobool13.not.i235 = icmp eq i32 %r.0.i228, 0
  br i1 %tobool13.not.i235, label %for.cond.i166, label %if.end11.i236.cleanup_crit_edge

if.end11.i236.cleanup_crit_edge:                  ; preds = %if.end11.i236
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.end.i237:                                     ; preds = %for.cond.i166.for.end.i237_crit_edge, %if.else.for.end.i237_crit_edge
  %.lcssa.i = phi i32 [ 0, %if.else.for.end.i237_crit_edge ], [ %1435, %for.cond.i166.for.end.i237_crit_edge ]
  %pmf.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 5
  %1652 = ptrtoint ptr %pmf.i.i to i32
  call void @__asan_load4_noabort(i32 %1652)
  %1653 = load ptr, ptr %pmf.i.i, align 4
  %tobool.not.i58.i = icmp eq ptr %1653, null
  br i1 %tobool.not.i58.i, label %for.end.i237.cleanup_crit_edge, label %lor.lhs.false.i.i

for.end.i237.cleanup_crit_edge:                   ; preds = %for.end.i237
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %for.end.i237
  %kiq_map_queues.i.i = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %1653, i32 0, i32 1
  %1654 = ptrtoint ptr %kiq_map_queues.i.i to i32
  call void @__asan_load4_noabort(i32 %1654)
  %1655 = load ptr, ptr %kiq_map_queues.i.i, align 4
  %tobool5.not.i.i = icmp eq ptr %1655, null
  br i1 %tobool5.not.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge, label %if.end.i.i239

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end.i.i239:                                    ; preds = %lor.lhs.false.i.i
  %map_queues_size.i.i = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %1653, i32 0, i32 6
  %1656 = ptrtoint ptr %map_queues_size.i.i to i32
  call void @__asan_load4_noabort(i32 %1656)
  %1657 = load i32, ptr %map_queues_size.i.i, align 4
  %mul.i.i = mul i32 %1657, %.lcssa.i
  %call.i.i238 = tail call i32 @amdgpu_ring_alloc(ptr noundef %ring1.i, i32 noundef %mul.i.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i238)
  %tobool8.not.i59.i = icmp eq i32 %call.i.i238, 0
  br i1 %tobool8.not.i59.i, label %for.cond.preheader.i.i, label %if.then9.i60.i

for.cond.preheader.i.i:                           ; preds = %if.end.i.i239
  %1658 = ptrtoint ptr %num_gfx_rings.i163 to i32
  call void @__asan_load4_noabort(i32 %1658)
  %1659 = load i32, ptr %num_gfx_rings.i163, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1659)
  %cmp33.not.i.i = icmp eq i32 %1659, 0
  br i1 %cmp33.not.i.i, label %for.cond.preheader.i.i.gfx_v10_0_kiq_enable_kgq.exit.i_crit_edge, label %for.cond.preheader.i.i.for.body.i.i243_crit_edge

for.cond.preheader.i.i.for.body.i.i243_crit_edge: ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i243

for.cond.preheader.i.i.gfx_v10_0_kiq_enable_kgq.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kiq_enable_kgq.exit.i

if.then9.i60.i:                                   ; preds = %if.end.i.i239
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.112, i32 noundef %call.i.i238) #13
  br label %cleanup

for.body.i.i243:                                  ; preds = %for.body.i.i243.for.body.i.i243_crit_edge, %for.cond.preheader.i.i.for.body.i.i243_crit_edge
  %i.034.i.i = phi i32 [ %inc.i.i241, %for.body.i.i243.for.body.i.i243_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i243_crit_edge ]
  %1660 = ptrtoint ptr %pmf.i.i to i32
  call void @__asan_load4_noabort(i32 %1660)
  %1661 = load ptr, ptr %pmf.i.i, align 4
  %kiq_map_queues14.i.i = getelementptr inbounds %struct.kiq_pm4_funcs, ptr %1661, i32 0, i32 1
  %1662 = ptrtoint ptr %kiq_map_queues14.i.i to i32
  call void @__asan_load4_noabort(i32 %1662)
  %1663 = load ptr, ptr %kiq_map_queues14.i.i, align 4
  %arrayidx.i.i240 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.034.i.i
  tail call void %1663(ptr noundef %ring1.i, ptr noundef %arrayidx.i.i240) #13
  %inc.i.i241 = add nuw i32 %i.034.i.i, 1
  %1664 = ptrtoint ptr %num_gfx_rings.i163 to i32
  call void @__asan_load4_noabort(i32 %1664)
  %1665 = load i32, ptr %num_gfx_rings.i163, align 8
  %cmp.i.i242 = icmp ult i32 %inc.i.i241, %1665
  br i1 %cmp.i.i242, label %for.body.i.i243.for.body.i.i243_crit_edge, label %for.body.i.i243.gfx_v10_0_kiq_enable_kgq.exit.i_crit_edge

for.body.i.i243.gfx_v10_0_kiq_enable_kgq.exit.i_crit_edge: ; preds = %for.body.i.i243
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_kiq_enable_kgq.exit.i

for.body.i.i243.for.body.i.i243_crit_edge:        ; preds = %for.body.i.i243
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body.i.i243

gfx_v10_0_kiq_enable_kgq.exit.i:                  ; preds = %for.body.i.i243.gfx_v10_0_kiq_enable_kgq.exit.i_crit_edge, %for.cond.preheader.i.i.gfx_v10_0_kiq_enable_kgq.exit.i_crit_edge
  %call16.i.i = tail call i32 @amdgpu_ring_test_helper(ptr noundef %ring1.i) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i.i)
  %tobool17.not.i = icmp eq i32 %call16.i.i, 0
  br i1 %tobool17.not.i, label %if.end19.i, label %gfx_v10_0_kiq_enable_kgq.exit.i.cleanup_crit_edge

gfx_v10_0_kiq_enable_kgq.exit.i.cleanup_crit_edge: ; preds = %gfx_v10_0_kiq_enable_kgq.exit.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end19.i:                                       ; preds = %gfx_v10_0_kiq_enable_kgq.exit.i
  %call20.i = tail call fastcc i32 @gfx_v10_0_cp_gfx_start(ptr noundef %adev) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %tobool21.not.i244 = icmp eq i32 %call20.i, 0
  br i1 %tobool21.not.i244, label %for.cond24.preheader.i, label %if.end19.i.cleanup_crit_edge

if.end19.i.cleanup_crit_edge:                     ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.cond24.preheader.i:                           ; preds = %if.end19.i
  %1666 = ptrtoint ptr %num_gfx_rings.i163 to i32
  call void @__asan_load4_noabort(i32 %1666)
  %1667 = load i32, ptr %num_gfx_rings.i163, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1667)
  %cmp2781.not.i = icmp eq i32 %1667, 0
  br i1 %cmp2781.not.i, label %for.cond24.preheader.i.if.end28_crit_edge, label %for.cond24.preheader.i.for.body28.i_crit_edge

for.cond24.preheader.i.for.body28.i_crit_edge:    ; preds = %for.cond24.preheader.i
  br label %for.body28.i

for.cond24.preheader.i.if.end28_crit_edge:        ; preds = %for.cond24.preheader.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

for.body28.i:                                     ; preds = %for.body28.i.for.body28.i_crit_edge, %for.cond24.preheader.i.for.body28.i_crit_edge
  %i.182.i = phi i32 [ %inc33.i, %for.body28.i.for.body28.i_crit_edge ], [ 0, %for.cond24.preheader.i.for.body28.i_crit_edge ]
  %ready.i245 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.182.i, i32 3, i32 17
  %1668 = ptrtoint ptr %ready.i245 to i32
  call void @__asan_store1_noabort(i32 %1668)
  store i8 1, ptr %ready.i245, align 4
  %inc33.i = add nuw i32 %i.182.i, 1
  %exitcond.not = icmp eq i32 %inc33.i, %1667
  br i1 %exitcond.not, label %for.body28.i.if.end28_crit_edge, label %for.body28.i.for.body28.i_crit_edge

for.body28.i.for.body28.i_crit_edge:              ; preds = %for.body28.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body28.i

for.body28.i.if.end28_crit_edge:                  ; preds = %for.body28.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end28

gfx_v10_0_cp_async_gfx_ring_resume.exit:          ; preds = %for.body.i174
  call void @__sanitizer_cov_trace_pc() #15
  %add.ptr.i.i.i175 = getelementptr i8, ptr %1439, i32 -17736
  %1669 = ptrtoint ptr %add.ptr.i.i.i175 to i32
  call void @__asan_load4_noabort(i32 %1669)
  %1670 = load ptr, ptr %add.ptr.i.i.i175, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %1670, ptr noundef nonnull @.str.107, ptr noundef %1437) #16
  br label %cleanup

if.end28:                                         ; preds = %for.body28.i.if.end28_crit_edge, %for.cond24.preheader.i.if.end28_crit_edge, %for.body.i161.if.end28_crit_edge, %if.end.i157.if.end28_crit_edge
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %1671 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %1671)
  %1672 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1672)
  %cmp29288.not = icmp eq i32 %1672, 0
  br i1 %cmp29288.not, label %if.end28.for.cond35.preheader_crit_edge, label %if.end28.for.body_crit_edge

if.end28.for.body_crit_edge:                      ; preds = %if.end28
  br label %for.body

if.end28.for.cond35.preheader_crit_edge:          ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond35.preheader

for.cond:                                         ; preds = %for.body
  %inc = add nuw i32 %i.0289, 1
  %1673 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %1673)
  %1674 = load i32, ptr %num_gfx_rings, align 8
  %cmp29 = icmp ult i32 %inc, %1674
  br i1 %cmp29, label %for.cond.for.body_crit_edge, label %for.cond.for.cond35.preheader_crit_edge

for.cond.for.cond35.preheader_crit_edge:          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.cond35.preheader

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.cond35.preheader:                             ; preds = %for.cond.for.cond35.preheader_crit_edge, %if.end28.for.cond35.preheader_crit_edge
  %1675 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %1675)
  %1676 = load i32, ptr %num_compute_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1676)
  %cmp37290.not = icmp eq i32 %1676, 0
  br i1 %cmp37290.not, label %for.cond35.preheader.cleanup_crit_edge, label %for.cond35.preheader.for.body38_crit_edge

for.cond35.preheader.for.body38_crit_edge:        ; preds = %for.cond35.preheader
  br label %for.body38

for.cond35.preheader.cleanup_crit_edge:           ; preds = %for.cond35.preheader
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end28.for.body_crit_edge
  %i.0289 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end28.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 %i.0289
  %call31 = tail call i32 @amdgpu_ring_test_helper(ptr noundef %arrayidx) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %for.cond, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.cond35:                                       ; preds = %for.body38
  %inc46 = add nuw i32 %i.1291, 1
  %1677 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %1677)
  %1678 = load i32, ptr %num_compute_rings.i, align 8
  %cmp37 = icmp ult i32 %inc46, %1678
  br i1 %cmp37, label %for.cond35.for.body38_crit_edge, label %for.cond35.cleanup_crit_edge

for.cond35.cleanup_crit_edge:                     ; preds = %for.cond35
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

for.cond35.for.body38_crit_edge:                  ; preds = %for.cond35
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body38

for.body38:                                       ; preds = %for.cond35.for.body38_crit_edge, %for.cond35.preheader.for.body38_crit_edge
  %i.1291 = phi i32 [ %inc46, %for.cond35.for.body38_crit_edge ], [ 0, %for.cond35.preheader.for.body38_crit_edge ]
  %arrayidx40 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.1291
  %call41 = tail call i32 @amdgpu_ring_test_helper(ptr noundef %arrayidx40) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %for.cond35, label %for.body38.cleanup_crit_edge

for.body38.cleanup_crit_edge:                     ; preds = %for.body38
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

cleanup:                                          ; preds = %for.body38.cleanup_crit_edge, %for.cond35.cleanup_crit_edge, %for.body.cleanup_crit_edge, %for.cond35.preheader.cleanup_crit_edge, %gfx_v10_0_cp_async_gfx_ring_resume.exit, %if.end19.i.cleanup_crit_edge, %gfx_v10_0_kiq_enable_kgq.exit.i.cleanup_crit_edge, %if.then9.i60.i, %lor.lhs.false.i.i.cleanup_crit_edge, %for.end.i237.cleanup_crit_edge, %if.end11.i236.cleanup_crit_edge, %for.body.i174.cleanup_crit_edge, %gfx_v10_0_kcq_resume.exit.cleanup_crit_edge, %if.end11.i.cleanup_crit_edge, %for.body.i107.cleanup_crit_edge, %gfx_v10_0_kiq_resume.exit, %if.end.i93.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %do.end.i90, %if.end4.cleanup_crit_edge, %do.end23.i, %do.end15.i, %do.end.i, %lor.lhs.false3.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %if.then1.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.1.i.i.i, %gfx_v10_0_kiq_resume.exit ], [ %r.1.i, %gfx_v10_0_kcq_resume.exit.cleanup_crit_edge ], [ %retval.1.i.i.i173, %gfx_v10_0_cp_async_gfx_ring_resume.exit ], [ -22, %do.end.i90 ], [ -22, %if.end4.cleanup_crit_edge ], [ -22, %if.then1.cleanup_crit_edge ], [ -22, %lor.lhs.false.i.cleanup_crit_edge ], [ -22, %lor.lhs.false3.i.cleanup_crit_edge ], [ %retval.0.i350.i, %do.end23.i ], [ %retval.0.i160.i, %do.end15.i ], [ %retval.0.i.i, %do.end.i ], [ %retval.1.i.i.i, %if.end9.cleanup_crit_edge ], [ %call4.i, %if.end.i93.cleanup_crit_edge ], [ %call.i.i238, %if.then9.i60.i ], [ -22, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -22, %for.end.i237.cleanup_crit_edge ], [ %call20.i, %if.end19.i.cleanup_crit_edge ], [ %call16.i.i, %gfx_v10_0_kiq_enable_kgq.exit.i.cleanup_crit_edge ], [ 0, %for.cond35.preheader.cleanup_crit_edge ], [ %call41, %for.body38.cleanup_crit_edge ], [ 0, %for.cond35.cleanup_crit_edge ], [ %call31, %for.body.cleanup_crit_edge ], [ %retval.1.i.i.i173, %for.body.i174.cleanup_crit_edge ], [ %r.0.i228, %if.end11.i236.cleanup_crit_edge ], [ %retval.1.i.i.i106, %for.body.i107.cleanup_crit_edge ], [ %r.0.i, %if.end11.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_3_get_disabled_sa(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4073
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 4073
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and22 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %cond.end.cond.false46_crit_edge, label %land.lhs.true24

cond.end.cond.false46_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true24:                                  ; preds = %cond.end
  %funcs27 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs27 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs27, align 4
  %tobool28.not = icmp eq ptr %17, null
  br i1 %tobool28.not, label %land.lhs.true24.cond.false46_crit_edge, label %land.lhs.true29

land.lhs.true24.cond.false46_crit_edge:           ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %sriov_rreg33 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %sriov_rreg33 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_rreg33, align 4
  %tobool34.not = icmp eq ptr %19, null
  br i1 %tobool34.not, label %land.lhs.true29.cond.false46_crit_edge, label %cond.true35

land.lhs.true29.cond.false46_crit_edge:           ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

cond.true35:                                      ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx41 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx41, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add44 = add i32 %23, 4074
  %call45 = tail call i32 %19(ptr noundef %adev, i32 noundef %add44, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end53

cond.false46:                                     ; preds = %land.lhs.true29.cond.false46_crit_edge, %land.lhs.true24.cond.false46_crit_edge, %cond.end.cond.false46_crit_edge
  %arrayidx48 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx48, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add51 = add i32 %27, 4074
  %call52 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add51, i32 noundef 0) #13
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false46, %cond.true35
  %cond54 = phi i32 [ %call45, %cond.true35 ], [ %call52, %cond.false46 ]
  %config = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1
  %max_sh_per_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 3
  %28 = ptrtoint ptr %max_sh_per_se to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %max_sh_per_se, align 4
  %30 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %config, align 8
  %mul = mul i32 %31, %29
  %sh_prom.i = zext i32 %mul to i64
  %notmask.i = shl nsw i64 -1, %sh_prom.i
  %32 = trunc i64 %notmask.i to i32
  %conv.i = xor i32 %32, -1
  %and1988 = or i32 %cond54, %cond
  %shr87 = lshr i32 %and1988, 8
  %or = and i32 %shr87, 255
  %and61 = and i32 %or, %conv.i
  ret i32 %and61
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_get_rb_active_bitmap(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 5085
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 5085
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and21 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %cond.end.cond.false45_crit_edge, label %land.lhs.true23

cond.end.cond.false45_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true23:                                  ; preds = %cond.end
  %funcs26 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs26 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs26, align 4
  %tobool27.not = icmp eq ptr %17, null
  br i1 %tobool27.not, label %land.lhs.true23.cond.false45_crit_edge, label %land.lhs.true28

land.lhs.true23.cond.false45_crit_edge:           ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %sriov_rreg32 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %sriov_rreg32 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_rreg32, align 4
  %tobool33.not = icmp eq ptr %19, null
  br i1 %tobool33.not, label %land.lhs.true28.cond.false45_crit_edge, label %cond.true34

land.lhs.true28.cond.false45_crit_edge:           ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

cond.true34:                                      ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx40 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx40, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add43 = add i32 %23, 5247
  %call44 = tail call i32 %19(ptr noundef %adev, i32 noundef %add43, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end52

cond.false45:                                     ; preds = %land.lhs.true28.cond.false45_crit_edge, %land.lhs.true23.cond.false45_crit_edge, %cond.end.cond.false45_crit_edge
  %arrayidx47 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx47, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add50 = add i32 %27, 5247
  %call51 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50, i32 noundef 0) #13
  br label %cond.end52

cond.end52:                                       ; preds = %cond.false45, %cond.true34
  %cond53 = phi i32 [ %call44, %cond.true34 ], [ %call51, %cond.false45 ]
  %or = or i32 %cond53, %cond
  %and54 = lshr i32 %or, 16
  %shr = and i32 %and54, 255
  %max_backends_per_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 4
  %28 = ptrtoint ptr %max_backends_per_se to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %max_backends_per_se, align 8
  %max_sh_per_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 3
  %30 = ptrtoint ptr %max_sh_per_se to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %max_sh_per_se, align 4
  %div = udiv i32 %29, %31
  %sh_prom.i = zext i32 %div to i64
  %notmask.i = shl nsw i64 -1, %sh_prom.i
  %32 = trunc i64 %notmask.i to i32
  %and59.demorgan = or i32 %shr, %32
  %and59 = xor i32 %and59.demorgan, -1
  ret i32 %and59
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_parse_disable_cu(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_get_wgp_active_bitmap_per_sh(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %max_cu_per_sh = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 2
  %0 = ptrtoint ptr %max_cu_per_sh to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %max_cu_per_sh, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true3

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool7.not = icmp eq ptr %7, null
  br i1 %tobool7.not, label %land.lhs.true3.cond.false_crit_edge, label %cond.true

land.lhs.true3.cond.false_crit_edge:              ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add = add i32 %11, 4111
  %call14 = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true3.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx16 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx16, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add19 = add i32 %15, 4111
  %call20 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add19, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ %call20, %cond.false ]
  %16 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %virt, align 8
  %and25 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %cond.end.cond.false49_crit_edge, label %land.lhs.true27

cond.end.cond.false49_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false49

land.lhs.true27:                                  ; preds = %cond.end
  %funcs30 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %18 = ptrtoint ptr %funcs30 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs30, align 4
  %tobool31.not = icmp eq ptr %19, null
  br i1 %tobool31.not, label %land.lhs.true27.cond.false49_crit_edge, label %land.lhs.true32

land.lhs.true27.cond.false49_crit_edge:           ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false49

land.lhs.true32:                                  ; preds = %land.lhs.true27
  %sriov_rreg36 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %19, i32 0, i32 13
  %20 = ptrtoint ptr %sriov_rreg36 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_rreg36, align 4
  %tobool37.not = icmp eq ptr %21, null
  br i1 %tobool37.not, label %land.lhs.true32.cond.false49_crit_edge, label %cond.true38

land.lhs.true32.cond.false49_crit_edge:           ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false49

cond.true38:                                      ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx44 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %22 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx44, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %add47 = add i32 %25, 4112
  %call48 = tail call i32 %21(ptr noundef %adev, i32 noundef %add47, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end56

cond.false49:                                     ; preds = %land.lhs.true32.cond.false49_crit_edge, %land.lhs.true27.cond.false49_crit_edge, %cond.end.cond.false49_crit_edge
  %arrayidx51 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx51, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %add54 = add i32 %29, 4112
  %call55 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add54, i32 noundef 0) #13
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false49, %cond.true38
  %cond57 = phi i32 [ %call48, %cond.true38 ], [ %call55, %cond.false49 ]
  %shr = lshr i32 %1, 1
  %sh_prom.i = zext i32 %shr to i64
  %notmask.i = shl nsw i64 -1, %sh_prom.i
  %30 = trunc i64 %notmask.i to i32
  %shr2286 = or i32 %cond57, %cond
  %or = lshr i32 %shr2286, 16
  %neg61.demorgan = or i32 %or, %30
  %neg61 = xor i32 %neg61.demorgan, -1
  ret i32 %neg61
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ring_test_helper(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_cp_gfx_enable(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 3926
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 3926
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, -352321537
  %or28 = select i1 %enable, i32 0, i32 352321536
  %or34 = or i32 %or28, %and19
  %arrayidx35 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %14 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 655618, i32 %15)
  %cmp = icmp eq i32 %15, 655618
  br i1 %cmp, label %do.body, label %if.else

do.body:                                          ; preds = %cond.end
  %arrayidx38 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %16 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx38, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add41 = add i32 %19, 3926
  %20 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %virt, align 8
  %and44 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44)
  %tobool45.not = icmp eq i32 %and44, 0
  br i1 %tobool45.not, label %do.body.cond.false61_crit_edge, label %land.lhs.true46

do.body.cond.false61_crit_edge:                   ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false61

land.lhs.true46:                                  ; preds = %do.body
  %funcs49 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %22 = ptrtoint ptr %funcs49 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %funcs49, align 4
  %tobool50.not = icmp eq ptr %23, null
  br i1 %tobool50.not, label %land.lhs.true46.cond.false61_crit_edge, label %land.lhs.true51

land.lhs.true46.cond.false61_crit_edge:           ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false61

land.lhs.true51:                                  ; preds = %land.lhs.true46
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %23, i32 0, i32 12
  %24 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sriov_wreg, align 4
  %tobool55.not = icmp eq ptr %25, null
  br i1 %tobool55.not, label %land.lhs.true51.cond.false61_crit_edge, label %cond.true56

land.lhs.true51.cond.false61_crit_edge:           ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false61

cond.true56:                                      ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #15
  tail call void %25(ptr noundef %adev, i32 noundef %add41, i32 noundef %or34, i32 noundef 4, i32 noundef 1) #13
  br label %if.end

cond.false61:                                     ; preds = %land.lhs.true51.cond.false61_crit_edge, %land.lhs.true46.cond.false61_crit_edge, %do.body.cond.false61_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add41, i32 noundef %or34, i32 noundef 0) #13
  br label %if.end

if.else:                                          ; preds = %cond.end
  %26 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %virt, align 8
  %and65 = and i32 %27, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65)
  %tobool66.not = icmp eq i32 %and65, 0
  br i1 %tobool66.not, label %if.else.cond.false88_crit_edge, label %land.lhs.true67

if.else.cond.false88_crit_edge:                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88

land.lhs.true67:                                  ; preds = %if.else
  %funcs70 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %28 = ptrtoint ptr %funcs70 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %funcs70, align 4
  %tobool71.not = icmp eq ptr %29, null
  br i1 %tobool71.not, label %land.lhs.true67.cond.false88_crit_edge, label %land.lhs.true72

land.lhs.true67.cond.false88_crit_edge:           ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88

land.lhs.true72:                                  ; preds = %land.lhs.true67
  %sriov_wreg76 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %sriov_wreg76 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sriov_wreg76, align 4
  %tobool77.not = icmp eq ptr %31, null
  br i1 %tobool77.not, label %land.lhs.true72.cond.false88_crit_edge, label %cond.true78

land.lhs.true72.cond.false88_crit_edge:           ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88

cond.true78:                                      ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx84 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %32 = ptrtoint ptr %arrayidx84 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx84, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %add87 = add i32 %35, 3926
  tail call void %31(ptr noundef %adev, i32 noundef %add87, i32 noundef %or34, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false88:                                     ; preds = %land.lhs.true72.cond.false88_crit_edge, %land.lhs.true67.cond.false88_crit_edge, %if.else.cond.false88_crit_edge
  %arrayidx90 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %36 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx90, align 8
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %37, align 4
  %add93 = add i32 %39, 3926
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add93, i32 noundef %or34, i32 noundef 0) #13
  br label %if.end

if.end:                                           ; preds = %cond.false88, %cond.true78, %cond.false61, %cond.true56
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  %40 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %cmp951 = icmp sgt i32 %41, 0
  br i1 %cmp951, label %for.body.lr.ph, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %funcs103 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx117 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end133.for.body_crit_edge, %for.body.lr.ph
  %i.02 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end133.for.body_crit_edge ]
  %42 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %virt, align 8
  %and98 = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and98)
  %tobool99.not = icmp eq i32 %and98, 0
  br i1 %tobool99.not, label %for.body.cond.false122_crit_edge, label %land.lhs.true100

for.body.cond.false122_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122

land.lhs.true100:                                 ; preds = %for.body
  %44 = ptrtoint ptr %funcs103 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %funcs103, align 4
  %tobool104.not = icmp eq ptr %45, null
  br i1 %tobool104.not, label %land.lhs.true100.cond.false122_crit_edge, label %land.lhs.true105

land.lhs.true100.cond.false122_crit_edge:         ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122

land.lhs.true105:                                 ; preds = %land.lhs.true100
  %sriov_rreg109 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %45, i32 0, i32 13
  %46 = ptrtoint ptr %sriov_rreg109 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sriov_rreg109, align 4
  %tobool110.not = icmp eq ptr %47, null
  br i1 %tobool110.not, label %land.lhs.true105.cond.false122_crit_edge, label %cond.true111

land.lhs.true105.cond.false122_crit_edge:         ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false122

cond.true111:                                     ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #15
  %48 = ptrtoint ptr %arrayidx117 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx117, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add120 = add i32 %51, 3904
  %call121 = tail call i32 %47(ptr noundef %adev, i32 noundef %add120, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end129

cond.false122:                                    ; preds = %land.lhs.true105.cond.false122_crit_edge, %land.lhs.true100.cond.false122_crit_edge, %for.body.cond.false122_crit_edge
  %52 = ptrtoint ptr %arrayidx117 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx117, align 8
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  %add127 = add i32 %55, 3904
  %call128 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add127, i32 noundef 0) #13
  br label %cond.end129

cond.end129:                                      ; preds = %cond.false122, %cond.true111
  %cond130 = phi i32 [ %call121, %cond.true111 ], [ %call128, %cond.false122 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond130)
  %cmp131 = icmp eq i32 %cond130, 0
  br i1 %cmp131, label %cond.end129.for.end_crit_edge, label %if.end133

cond.end129.for.end_crit_edge:                    ; preds = %cond.end129
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.end133:                                        ; preds = %cond.end129
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %56 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %56(i32 noundef 214748) #13
  %inc = add nuw nsw i32 %i.02, 1
  %57 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %usec_timeout, align 8
  %cmp95 = icmp slt i32 %inc, %58
  br i1 %cmp95, label %if.end133.for.body_crit_edge, label %if.end133.for.end_crit_edge

if.end133.for.end_crit_edge:                      ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.end133.for.body_crit_edge:                     ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %if.end133.for.end_crit_edge, %cond.end129.for.end_crit_edge, %if.end.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %if.end.for.end_crit_edge ], [ %i.02, %cond.end129.for.end_crit_edge ], [ %inc, %if.end133.for.end_crit_edge ]
  %59 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa, i32 %60)
  %cmp135.not = icmp slt i32 %i.0.lcssa, %60
  br i1 %cmp135.not, label %for.end.if.end139_crit_edge, label %if.then136

for.end.if.end139_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end139

if.then136:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  %cond138 = select i1 %enable, ptr @.str.92, ptr @.str.93
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.91, ptr noundef nonnull %cond138) #13
  br label %if.end139

if.end139:                                        ; preds = %if.then136, %for.end.if.end139_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ucode_print_gfx_hdr(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_cp_compute_enable(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %.off = add i32 %1, -656128
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %.off)
  %switch = icmp ult i32 %.off, 6
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %enable, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br i1 %switch, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %if.then
  br i1 %tobool2.not, label %sw.bb.cond.false_crit_edge, label %land.lhs.true

sw.bb.cond.false_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true4

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_wreg, align 4
  %tobool8.not = icmp eq ptr %7, null
  br i1 %tobool8.not, label %land.lhs.true4.cond.false_crit_edge, label %cond.true

land.lhs.true4.cond.false_crit_edge:              ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx13 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx13, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add = add i32 %11, 3925
  tail call void %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false:                                       ; preds = %land.lhs.true4.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb.cond.false_crit_edge
  %arrayidx17 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx17, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add20 = add i32 %15, 3925
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add20, i32 noundef 0, i32 noundef 0) #13
  br label %if.end

sw.default:                                       ; preds = %if.then
  br i1 %tobool2.not, label %sw.default.cond.false46_crit_edge, label %land.lhs.true25

sw.default.cond.false46_crit_edge:                ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true25:                                  ; preds = %sw.default
  %funcs28 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs28 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs28, align 4
  %tobool29.not = icmp eq ptr %17, null
  br i1 %tobool29.not, label %land.lhs.true25.cond.false46_crit_edge, label %land.lhs.true30

land.lhs.true25.cond.false46_crit_edge:           ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %sriov_wreg34 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg34 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg34, align 4
  %tobool35.not = icmp eq ptr %19, null
  br i1 %tobool35.not, label %land.lhs.true30.cond.false46_crit_edge, label %cond.true36

land.lhs.true30.cond.false46_crit_edge:           ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false46

cond.true36:                                      ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx42 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx42, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add45 = add i32 %23, 3629
  tail call void %19(ptr noundef %adev, i32 noundef %add45, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false46:                                     ; preds = %land.lhs.true30.cond.false46_crit_edge, %land.lhs.true25.cond.false46_crit_edge, %sw.default.cond.false46_crit_edge
  %arrayidx48 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx48, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add51 = add i32 %27, 3629
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add51, i32 noundef 0, i32 noundef 0) #13
  br label %if.end

if.else:                                          ; preds = %entry
  br i1 %switch, label %sw.bb56, label %sw.default89

sw.bb56:                                          ; preds = %if.else
  br i1 %tobool2.not, label %sw.bb56.cond.false82_crit_edge, label %land.lhs.true61

sw.bb56.cond.false82_crit_edge:                   ; preds = %sw.bb56
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82

land.lhs.true61:                                  ; preds = %sw.bb56
  %funcs64 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %28 = ptrtoint ptr %funcs64 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %funcs64, align 4
  %tobool65.not = icmp eq ptr %29, null
  br i1 %tobool65.not, label %land.lhs.true61.cond.false82_crit_edge, label %land.lhs.true66

land.lhs.true61.cond.false82_crit_edge:           ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82

land.lhs.true66:                                  ; preds = %land.lhs.true61
  %sriov_wreg70 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %sriov_wreg70 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sriov_wreg70, align 4
  %tobool71.not = icmp eq ptr %31, null
  br i1 %tobool71.not, label %land.lhs.true66.cond.false82_crit_edge, label %cond.true72

land.lhs.true66.cond.false82_crit_edge:           ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false82

cond.true72:                                      ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx78 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %32 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx78, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %add81 = add i32 %35, 3925
  tail call void %31(ptr noundef %adev, i32 noundef %add81, i32 noundef 1342177280, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog122

cond.false82:                                     ; preds = %land.lhs.true66.cond.false82_crit_edge, %land.lhs.true61.cond.false82_crit_edge, %sw.bb56.cond.false82_crit_edge
  %arrayidx84 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %36 = ptrtoint ptr %arrayidx84 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx84, align 8
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %37, align 4
  %add87 = add i32 %39, 3925
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add87, i32 noundef 1342177280, i32 noundef 0) #13
  br label %sw.epilog122

sw.default89:                                     ; preds = %if.else
  br i1 %tobool2.not, label %sw.default89.cond.false115_crit_edge, label %land.lhs.true94

sw.default89.cond.false115_crit_edge:             ; preds = %sw.default89
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false115

land.lhs.true94:                                  ; preds = %sw.default89
  %funcs97 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %40 = ptrtoint ptr %funcs97 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %funcs97, align 4
  %tobool98.not = icmp eq ptr %41, null
  br i1 %tobool98.not, label %land.lhs.true94.cond.false115_crit_edge, label %land.lhs.true99

land.lhs.true94.cond.false115_crit_edge:          ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false115

land.lhs.true99:                                  ; preds = %land.lhs.true94
  %sriov_wreg103 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %41, i32 0, i32 12
  %42 = ptrtoint ptr %sriov_wreg103 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %sriov_wreg103, align 4
  %tobool104.not = icmp eq ptr %43, null
  br i1 %tobool104.not, label %land.lhs.true99.cond.false115_crit_edge, label %cond.true105

land.lhs.true99.cond.false115_crit_edge:          ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false115

cond.true105:                                     ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx111 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %44 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx111, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add114 = add i32 %47, 3629
  tail call void %43(ptr noundef %adev, i32 noundef %add114, i32 noundef 1342177280, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog122

cond.false115:                                    ; preds = %land.lhs.true99.cond.false115_crit_edge, %land.lhs.true94.cond.false115_crit_edge, %sw.default89.cond.false115_crit_edge
  %arrayidx117 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %48 = ptrtoint ptr %arrayidx117 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx117, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add120 = add i32 %51, 3629
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add120, i32 noundef 1342177280, i32 noundef 0) #13
  br label %sw.epilog122

sw.epilog122:                                     ; preds = %cond.false115, %cond.true105, %cond.false82, %cond.true72
  %ready = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 3, i32 17
  %52 = ptrtoint ptr %ready to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 0, ptr %ready, align 4
  br label %if.end

if.end:                                           ; preds = %sw.epilog122, %cond.false46, %cond.true36, %cond.false, %cond.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %53 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %53(i32 noundef 10737400) #13
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_bo_kmap(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ww_mutex_lock_interruptible(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_kiq_init_register(ptr nocapture noundef readonly %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %mqd_ptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 21
  %2 = ptrtoint ptr %mqd_ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mqd_ptr, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %4 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %virt, align 8
  %and = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %tobool6.not = icmp eq ptr %7, null
  br i1 %tobool6.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true7

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true7:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sriov_wreg, align 4
  %tobool11.not = icmp eq ptr %9, null
  br i1 %tobool11.not, label %land.lhs.true7.cond.false_crit_edge, label %cond.true

land.lhs.true7.cond.false_crit_edge:              ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add = add i32 %13, 8107
  tail call void %9(ptr noundef %1, i32 noundef %add, i32 noundef 0, i32 noundef 0, i32 noundef 1) #13
  br label %if.end

cond.false:                                       ; preds = %land.lhs.true7.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge
  %arrayidx19 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %14 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx19, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add22 = add i32 %17, 8107
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add22, i32 noundef 0, i32 noundef 0) #13
  br label %if.end

if.end:                                           ; preds = %cond.false, %cond.true, %entry.if.end_crit_edge
  %18 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt, align 8
  %and25 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %if.end.cond.false113.sink.split_crit_edge, label %land.lhs.true27

if.end.cond.false113.sink.split_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false113.sink.split

land.lhs.true27:                                  ; preds = %if.end
  %funcs30 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs30 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs30, align 4
  %tobool31.not = icmp eq ptr %21, null
  br i1 %tobool31.not, label %land.lhs.true27.cond.false113.sink.split_crit_edge, label %land.lhs.true32

land.lhs.true27.cond.false113.sink.split_crit_edge: ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false113.sink.split

land.lhs.true32:                                  ; preds = %land.lhs.true27
  %sriov_wreg36 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %sriov_wreg36 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_wreg36, align 4
  %tobool37.not = icmp eq ptr %23, null
  br i1 %tobool37.not, label %land.lhs.true91, label %cond.true38

cond.true38:                                      ; preds = %land.lhs.true32
  %arrayidx44 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx44, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add47 = add i32 %27, 7715
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 13
  %28 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_rreg, align 4
  %tobool61.not = icmp eq ptr %29, null
  br i1 %tobool61.not, label %cond.false72, label %cond.true62

cond.true62:                                      ; preds = %cond.true38
  call void @__sanitizer_cov_trace_pc() #15
  %call = tail call i32 %29(ptr noundef %1, i32 noundef %add47, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end79

cond.false72:                                     ; preds = %cond.true38
  call void @__sanitizer_cov_trace_pc() #15
  %call78 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add47, i32 noundef 0) #13
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false72, %cond.true62
  %cond = phi i32 [ %call, %cond.true62 ], [ %call78, %cond.false72 ]
  %and80 = and i32 %cond, 2147483647
  tail call void %23(ptr noundef %1, i32 noundef %add47, i32 noundef %and80, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end124

land.lhs.true91:                                  ; preds = %land.lhs.true32
  %30 = ptrtoint ptr %funcs30 to i32
  call void @__asan_load4_noabort(i32 %30)
  %.pr = load ptr, ptr %funcs30, align 4
  %arrayidx831 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %31 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx831, align 8
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %32, align 4
  %add862 = add i32 %34, 7715
  %tobool95.not = icmp eq ptr %.pr, null
  br i1 %tobool95.not, label %land.lhs.true91.cond.false113_crit_edge, label %land.lhs.true96

land.lhs.true91.cond.false113_crit_edge:          ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false113

land.lhs.true96:                                  ; preds = %land.lhs.true91
  %sriov_rreg100 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %35 = ptrtoint ptr %sriov_rreg100 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sriov_rreg100, align 4
  %tobool101.not = icmp eq ptr %36, null
  br i1 %tobool101.not, label %land.lhs.true96.cond.false113_crit_edge, label %cond.true102

land.lhs.true96.cond.false113_crit_edge:          ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false113

cond.true102:                                     ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #15
  %call112 = tail call i32 %36(ptr noundef %1, i32 noundef %add862, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end120

cond.false113.sink.split:                         ; preds = %land.lhs.true27.cond.false113.sink.split_crit_edge, %if.end.cond.false113.sink.split_crit_edge
  %arrayidx83113 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %37 = ptrtoint ptr %arrayidx83113 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx83113, align 8
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 4
  %add86214 = add i32 %40, 7715
  br label %cond.false113

cond.false113:                                    ; preds = %cond.false113.sink.split, %land.lhs.true96.cond.false113_crit_edge, %land.lhs.true91.cond.false113_crit_edge
  %add865 = phi i32 [ %add862, %land.lhs.true96.cond.false113_crit_edge ], [ %add862, %land.lhs.true91.cond.false113_crit_edge ], [ %add86214, %cond.false113.sink.split ]
  %call119 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add865, i32 noundef 0) #13
  br label %cond.end120

cond.end120:                                      ; preds = %cond.false113, %cond.true102
  %add863 = phi i32 [ %add862, %cond.true102 ], [ %add865, %cond.false113 ]
  %cond121 = phi i32 [ %call112, %cond.true102 ], [ %call119, %cond.false113 ]
  %and122 = and i32 %cond121, 2147483647
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add863, i32 noundef %and122, i32 noundef 0) #13
  br label %cond.end124

cond.end124:                                      ; preds = %cond.end120, %cond.end79
  %41 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %virt, align 8
  %and127 = and i32 %42, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and127)
  %tobool128.not = icmp eq i32 %and127, 0
  br i1 %tobool128.not, label %cond.end124.cond.false150_crit_edge, label %land.lhs.true129

cond.end124.cond.false150_crit_edge:              ; preds = %cond.end124
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false150

land.lhs.true129:                                 ; preds = %cond.end124
  %funcs132 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %43 = ptrtoint ptr %funcs132 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %funcs132, align 4
  %tobool133.not = icmp eq ptr %44, null
  br i1 %tobool133.not, label %land.lhs.true129.cond.false150_crit_edge, label %land.lhs.true134

land.lhs.true129.cond.false150_crit_edge:         ; preds = %land.lhs.true129
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false150

land.lhs.true134:                                 ; preds = %land.lhs.true129
  %sriov_wreg138 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %44, i32 0, i32 12
  %45 = ptrtoint ptr %sriov_wreg138 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %sriov_wreg138, align 4
  %tobool139.not = icmp eq ptr %46, null
  br i1 %tobool139.not, label %land.lhs.true134.cond.false150_crit_edge, label %cond.true140

land.lhs.true134.cond.false150_crit_edge:         ; preds = %land.lhs.true134
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false150

cond.true140:                                     ; preds = %land.lhs.true134
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx146 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %47 = ptrtoint ptr %arrayidx146 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx146, align 8
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %48, align 4
  %add149 = add i32 %50, 8142
  %cp_hqd_eop_base_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 165
  %51 = ptrtoint ptr %cp_hqd_eop_base_addr_lo to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cp_hqd_eop_base_addr_lo, align 4
  tail call void %46(ptr noundef %1, i32 noundef %add149, i32 noundef %52, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end157

cond.false150:                                    ; preds = %land.lhs.true134.cond.false150_crit_edge, %land.lhs.true129.cond.false150_crit_edge, %cond.end124.cond.false150_crit_edge
  %arrayidx152 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %53 = ptrtoint ptr %arrayidx152 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx152, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %add155 = add i32 %56, 8142
  %cp_hqd_eop_base_addr_lo156 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 165
  %57 = ptrtoint ptr %cp_hqd_eop_base_addr_lo156 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cp_hqd_eop_base_addr_lo156, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add155, i32 noundef %58, i32 noundef 0) #13
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false150, %cond.true140
  %59 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %virt, align 8
  %and160 = and i32 %60, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and160)
  %tobool161.not = icmp eq i32 %and160, 0
  br i1 %tobool161.not, label %cond.end157.cond.false183_crit_edge, label %land.lhs.true162

cond.end157.cond.false183_crit_edge:              ; preds = %cond.end157
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false183

land.lhs.true162:                                 ; preds = %cond.end157
  %funcs165 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %61 = ptrtoint ptr %funcs165 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %funcs165, align 4
  %tobool166.not = icmp eq ptr %62, null
  br i1 %tobool166.not, label %land.lhs.true162.cond.false183_crit_edge, label %land.lhs.true167

land.lhs.true162.cond.false183_crit_edge:         ; preds = %land.lhs.true162
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false183

land.lhs.true167:                                 ; preds = %land.lhs.true162
  %sriov_wreg171 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %62, i32 0, i32 12
  %63 = ptrtoint ptr %sriov_wreg171 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sriov_wreg171, align 4
  %tobool172.not = icmp eq ptr %64, null
  br i1 %tobool172.not, label %land.lhs.true167.cond.false183_crit_edge, label %cond.true173

land.lhs.true167.cond.false183_crit_edge:         ; preds = %land.lhs.true167
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false183

cond.true173:                                     ; preds = %land.lhs.true167
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx179 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %65 = ptrtoint ptr %arrayidx179 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %arrayidx179, align 8
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %66, align 4
  %add182 = add i32 %68, 8143
  %cp_hqd_eop_base_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 166
  %69 = ptrtoint ptr %cp_hqd_eop_base_addr_hi to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %cp_hqd_eop_base_addr_hi, align 4
  tail call void %64(ptr noundef %1, i32 noundef %add182, i32 noundef %70, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end190

cond.false183:                                    ; preds = %land.lhs.true167.cond.false183_crit_edge, %land.lhs.true162.cond.false183_crit_edge, %cond.end157.cond.false183_crit_edge
  %arrayidx185 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %71 = ptrtoint ptr %arrayidx185 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx185, align 8
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %72, align 4
  %add188 = add i32 %74, 8143
  %cp_hqd_eop_base_addr_hi189 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 166
  %75 = ptrtoint ptr %cp_hqd_eop_base_addr_hi189 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %cp_hqd_eop_base_addr_hi189, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add188, i32 noundef %76, i32 noundef 0) #13
  br label %cond.end190

cond.end190:                                      ; preds = %cond.false183, %cond.true173
  %77 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %virt, align 8
  %and193 = and i32 %78, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and193)
  %tobool194.not = icmp eq i32 %and193, 0
  br i1 %tobool194.not, label %cond.end190.cond.false216_crit_edge, label %land.lhs.true195

cond.end190.cond.false216_crit_edge:              ; preds = %cond.end190
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false216

land.lhs.true195:                                 ; preds = %cond.end190
  %funcs198 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %79 = ptrtoint ptr %funcs198 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %funcs198, align 4
  %tobool199.not = icmp eq ptr %80, null
  br i1 %tobool199.not, label %land.lhs.true195.cond.false216_crit_edge, label %land.lhs.true200

land.lhs.true195.cond.false216_crit_edge:         ; preds = %land.lhs.true195
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false216

land.lhs.true200:                                 ; preds = %land.lhs.true195
  %sriov_wreg204 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %80, i32 0, i32 12
  %81 = ptrtoint ptr %sriov_wreg204 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %sriov_wreg204, align 4
  %tobool205.not = icmp eq ptr %82, null
  br i1 %tobool205.not, label %land.lhs.true200.cond.false216_crit_edge, label %cond.true206

land.lhs.true200.cond.false216_crit_edge:         ; preds = %land.lhs.true200
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false216

cond.true206:                                     ; preds = %land.lhs.true200
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx212 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %83 = ptrtoint ptr %arrayidx212 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %arrayidx212, align 8
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %84, align 4
  %add215 = add i32 %86, 8144
  %cp_hqd_eop_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 167
  %87 = ptrtoint ptr %cp_hqd_eop_control to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %cp_hqd_eop_control, align 4
  tail call void %82(ptr noundef %1, i32 noundef %add215, i32 noundef %88, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end223

cond.false216:                                    ; preds = %land.lhs.true200.cond.false216_crit_edge, %land.lhs.true195.cond.false216_crit_edge, %cond.end190.cond.false216_crit_edge
  %arrayidx218 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %89 = ptrtoint ptr %arrayidx218 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx218, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add221 = add i32 %92, 8144
  %cp_hqd_eop_control222 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 167
  %93 = ptrtoint ptr %cp_hqd_eop_control222 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %cp_hqd_eop_control222, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add221, i32 noundef %94, i32 noundef 0) #13
  br label %cond.end223

cond.end223:                                      ; preds = %cond.false216, %cond.true206
  %95 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %virt, align 8
  %and226 = and i32 %96, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and226)
  %tobool227.not = icmp eq i32 %and226, 0
  br i1 %tobool227.not, label %cond.end223.cond.false249_crit_edge, label %land.lhs.true228

cond.end223.cond.false249_crit_edge:              ; preds = %cond.end223
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false249

land.lhs.true228:                                 ; preds = %cond.end223
  %funcs231 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %97 = ptrtoint ptr %funcs231 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %funcs231, align 4
  %tobool232.not = icmp eq ptr %98, null
  br i1 %tobool232.not, label %land.lhs.true228.cond.false249_crit_edge, label %land.lhs.true233

land.lhs.true228.cond.false249_crit_edge:         ; preds = %land.lhs.true228
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false249

land.lhs.true233:                                 ; preds = %land.lhs.true228
  %sriov_wreg237 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %98, i32 0, i32 12
  %99 = ptrtoint ptr %sriov_wreg237 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %sriov_wreg237, align 4
  %tobool238.not = icmp eq ptr %100, null
  br i1 %tobool238.not, label %land.lhs.true233.cond.false249_crit_edge, label %cond.true239

land.lhs.true233.cond.false249_crit_edge:         ; preds = %land.lhs.true233
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false249

cond.true239:                                     ; preds = %land.lhs.true233
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx245 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %101 = ptrtoint ptr %arrayidx245 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx245, align 8
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %102, align 4
  %add248 = add i32 %104, 8120
  %cp_hqd_pq_doorbell_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 143
  %105 = ptrtoint ptr %cp_hqd_pq_doorbell_control to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %cp_hqd_pq_doorbell_control, align 4
  tail call void %100(ptr noundef %1, i32 noundef %add248, i32 noundef %106, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end256

cond.false249:                                    ; preds = %land.lhs.true233.cond.false249_crit_edge, %land.lhs.true228.cond.false249_crit_edge, %cond.end223.cond.false249_crit_edge
  %arrayidx251 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %107 = ptrtoint ptr %arrayidx251 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %arrayidx251, align 8
  %109 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %108, align 4
  %add254 = add i32 %110, 8120
  %cp_hqd_pq_doorbell_control255 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 143
  %111 = ptrtoint ptr %cp_hqd_pq_doorbell_control255 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %cp_hqd_pq_doorbell_control255, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add254, i32 noundef %112, i32 noundef 0) #13
  br label %cond.end256

cond.end256:                                      ; preds = %cond.false249, %cond.true239
  %113 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %virt, align 8
  %and259 = and i32 %114, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and259)
  %tobool260.not = icmp eq i32 %and259, 0
  br i1 %tobool260.not, label %cond.end256.cond.false283_crit_edge, label %land.lhs.true261

cond.end256.cond.false283_crit_edge:              ; preds = %cond.end256
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false283

land.lhs.true261:                                 ; preds = %cond.end256
  %funcs264 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %115 = ptrtoint ptr %funcs264 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %funcs264, align 4
  %tobool265.not = icmp eq ptr %116, null
  br i1 %tobool265.not, label %land.lhs.true261.cond.false283_crit_edge, label %land.lhs.true266

land.lhs.true261.cond.false283_crit_edge:         ; preds = %land.lhs.true261
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false283

land.lhs.true266:                                 ; preds = %land.lhs.true261
  %sriov_rreg270 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %116, i32 0, i32 13
  %117 = ptrtoint ptr %sriov_rreg270 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %sriov_rreg270, align 4
  %tobool271.not = icmp eq ptr %118, null
  br i1 %tobool271.not, label %land.lhs.true266.cond.false283_crit_edge, label %cond.true272

land.lhs.true266.cond.false283_crit_edge:         ; preds = %land.lhs.true266
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false283

cond.true272:                                     ; preds = %land.lhs.true266
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx278 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %119 = ptrtoint ptr %arrayidx278 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %arrayidx278, align 8
  %121 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %120, align 4
  %add281 = add i32 %122, 8107
  %call282 = tail call i32 %118(ptr noundef %1, i32 noundef %add281, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end290

cond.false283:                                    ; preds = %land.lhs.true266.cond.false283_crit_edge, %land.lhs.true261.cond.false283_crit_edge, %cond.end256.cond.false283_crit_edge
  %arrayidx285 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %123 = ptrtoint ptr %arrayidx285 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %arrayidx285, align 8
  %125 = ptrtoint ptr %124 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %124, align 4
  %add288 = add i32 %126, 8107
  %call289 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add288, i32 noundef 0) #13
  br label %cond.end290

cond.end290:                                      ; preds = %cond.false283, %cond.true272
  %cond291 = phi i32 [ %call282, %cond.true272 ], [ %call289, %cond.false283 ]
  %and292 = and i32 %cond291, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and292)
  %tobool293.not = icmp eq i32 %and292, 0
  br i1 %tobool293.not, label %cond.end290.if.end498_crit_edge, label %if.then294

cond.end290.if.end498_crit_edge:                  ; preds = %cond.end290
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end498

if.then294:                                       ; preds = %cond.end290
  %127 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %virt, align 8
  %and297 = and i32 %128, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and297)
  %tobool298.not = icmp eq i32 %and297, 0
  br i1 %tobool298.not, label %if.then294.cond.false320_crit_edge, label %land.lhs.true299

if.then294.cond.false320_crit_edge:               ; preds = %if.then294
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false320

land.lhs.true299:                                 ; preds = %if.then294
  %funcs302 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %129 = ptrtoint ptr %funcs302 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %funcs302, align 4
  %tobool303.not = icmp eq ptr %130, null
  br i1 %tobool303.not, label %land.lhs.true299.cond.false320_crit_edge, label %land.lhs.true304

land.lhs.true299.cond.false320_crit_edge:         ; preds = %land.lhs.true299
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false320

land.lhs.true304:                                 ; preds = %land.lhs.true299
  %sriov_wreg308 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %130, i32 0, i32 12
  %131 = ptrtoint ptr %sriov_wreg308 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %sriov_wreg308, align 4
  %tobool309.not = icmp eq ptr %132, null
  br i1 %tobool309.not, label %land.lhs.true304.cond.false320_crit_edge, label %cond.true310

land.lhs.true304.cond.false320_crit_edge:         ; preds = %land.lhs.true304
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false320

cond.true310:                                     ; preds = %land.lhs.true304
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx316 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %133 = ptrtoint ptr %arrayidx316 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %arrayidx316, align 8
  %135 = ptrtoint ptr %134 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %134, align 4
  %add319 = add i32 %136, 8129
  tail call void %132(ptr noundef %1, i32 noundef %add319, i32 noundef 1, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end326

cond.false320:                                    ; preds = %land.lhs.true304.cond.false320_crit_edge, %land.lhs.true299.cond.false320_crit_edge, %if.then294.cond.false320_crit_edge
  %arrayidx322 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %137 = ptrtoint ptr %arrayidx322 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %arrayidx322, align 8
  %139 = ptrtoint ptr %138 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %138, align 4
  %add325 = add i32 %140, 8129
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add325, i32 noundef 1, i32 noundef 0) #13
  br label %cond.end326

cond.end326:                                      ; preds = %cond.false320, %cond.true310
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 11
  %141 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %cmp11 = icmp sgt i32 %142, 0
  br i1 %cmp11, label %for.body.lr.ph, label %cond.end326.for.end_crit_edge

cond.end326.for.end_crit_edge:                    ; preds = %cond.end326
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

for.body.lr.ph:                                   ; preds = %cond.end326
  %funcs334 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %arrayidx348 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end365.for.body_crit_edge, %for.body.lr.ph
  %j.012 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end365.for.body_crit_edge ]
  %143 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %virt, align 8
  %and329 = and i32 %144, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and329)
  %tobool330.not = icmp eq i32 %and329, 0
  br i1 %tobool330.not, label %for.body.cond.false353_crit_edge, label %land.lhs.true331

for.body.cond.false353_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false353

land.lhs.true331:                                 ; preds = %for.body
  %145 = ptrtoint ptr %funcs334 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %funcs334, align 4
  %tobool335.not = icmp eq ptr %146, null
  br i1 %tobool335.not, label %land.lhs.true331.cond.false353_crit_edge, label %land.lhs.true336

land.lhs.true331.cond.false353_crit_edge:         ; preds = %land.lhs.true331
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false353

land.lhs.true336:                                 ; preds = %land.lhs.true331
  %sriov_rreg340 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %146, i32 0, i32 13
  %147 = ptrtoint ptr %sriov_rreg340 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %sriov_rreg340, align 4
  %tobool341.not = icmp eq ptr %148, null
  br i1 %tobool341.not, label %land.lhs.true336.cond.false353_crit_edge, label %cond.true342

land.lhs.true336.cond.false353_crit_edge:         ; preds = %land.lhs.true336
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false353

cond.true342:                                     ; preds = %land.lhs.true336
  call void @__sanitizer_cov_trace_pc() #15
  %149 = ptrtoint ptr %arrayidx348 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %arrayidx348, align 8
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %150, align 4
  %add351 = add i32 %152, 8107
  %call352 = tail call i32 %148(ptr noundef %1, i32 noundef %add351, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end360

cond.false353:                                    ; preds = %land.lhs.true336.cond.false353_crit_edge, %land.lhs.true331.cond.false353_crit_edge, %for.body.cond.false353_crit_edge
  %153 = ptrtoint ptr %arrayidx348 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %arrayidx348, align 8
  %155 = ptrtoint ptr %154 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %154, align 4
  %add358 = add i32 %156, 8107
  %call359 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add358, i32 noundef 0) #13
  br label %cond.end360

cond.end360:                                      ; preds = %cond.false353, %cond.true342
  %cond361 = phi i32 [ %call352, %cond.true342 ], [ %call359, %cond.false353 ]
  %and362 = and i32 %cond361, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and362)
  %tobool363.not = icmp eq i32 %and362, 0
  br i1 %tobool363.not, label %cond.end360.for.end_crit_edge, label %if.end365

cond.end360.for.end_crit_edge:                    ; preds = %cond.end360
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.end365:                                        ; preds = %cond.end360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %157 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %157(i32 noundef 214748) #13
  %inc = add nuw nsw i32 %j.012, 1
  %158 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp slt i32 %inc, %159
  br i1 %cmp, label %if.end365.for.body_crit_edge, label %if.end365.for.end_crit_edge

if.end365.for.end_crit_edge:                      ; preds = %if.end365
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.end

if.end365.for.body_crit_edge:                     ; preds = %if.end365
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body

for.end:                                          ; preds = %if.end365.for.end_crit_edge, %cond.end360.for.end_crit_edge, %cond.end326.for.end_crit_edge
  %160 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %virt, align 8
  %and368 = and i32 %161, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and368)
  %tobool369.not = icmp eq i32 %and368, 0
  br i1 %tobool369.not, label %for.end.cond.false391_crit_edge, label %land.lhs.true370

for.end.cond.false391_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false391

land.lhs.true370:                                 ; preds = %for.end
  %funcs373 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %162 = ptrtoint ptr %funcs373 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %funcs373, align 4
  %tobool374.not = icmp eq ptr %163, null
  br i1 %tobool374.not, label %land.lhs.true370.cond.false391_crit_edge, label %land.lhs.true375

land.lhs.true370.cond.false391_crit_edge:         ; preds = %land.lhs.true370
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false391

land.lhs.true375:                                 ; preds = %land.lhs.true370
  %sriov_wreg379 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %163, i32 0, i32 12
  %164 = ptrtoint ptr %sriov_wreg379 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %sriov_wreg379, align 4
  %tobool380.not = icmp eq ptr %165, null
  br i1 %tobool380.not, label %land.lhs.true375.cond.false391_crit_edge, label %cond.true381

land.lhs.true375.cond.false391_crit_edge:         ; preds = %land.lhs.true375
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false391

cond.true381:                                     ; preds = %land.lhs.true375
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx387 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %166 = ptrtoint ptr %arrayidx387 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %arrayidx387, align 8
  %168 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %167, align 4
  %add390 = add i32 %169, 8129
  %cp_hqd_dequeue_request = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 152
  %170 = ptrtoint ptr %cp_hqd_dequeue_request to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %cp_hqd_dequeue_request, align 4
  tail call void %165(ptr noundef %1, i32 noundef %add390, i32 noundef %171, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end398

cond.false391:                                    ; preds = %land.lhs.true375.cond.false391_crit_edge, %land.lhs.true370.cond.false391_crit_edge, %for.end.cond.false391_crit_edge
  %arrayidx393 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %172 = ptrtoint ptr %arrayidx393 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %arrayidx393, align 8
  %174 = ptrtoint ptr %173 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %173, align 4
  %add396 = add i32 %175, 8129
  %cp_hqd_dequeue_request397 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 152
  %176 = ptrtoint ptr %cp_hqd_dequeue_request397 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %cp_hqd_dequeue_request397, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add396, i32 noundef %177, i32 noundef 0) #13
  br label %cond.end398

cond.end398:                                      ; preds = %cond.false391, %cond.true381
  %178 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %virt, align 8
  %and401 = and i32 %179, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and401)
  %tobool402.not = icmp eq i32 %and401, 0
  br i1 %tobool402.not, label %cond.end398.cond.false424_crit_edge, label %land.lhs.true403

cond.end398.cond.false424_crit_edge:              ; preds = %cond.end398
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false424

land.lhs.true403:                                 ; preds = %cond.end398
  %funcs406 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %180 = ptrtoint ptr %funcs406 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %funcs406, align 4
  %tobool407.not = icmp eq ptr %181, null
  br i1 %tobool407.not, label %land.lhs.true403.cond.false424_crit_edge, label %land.lhs.true408

land.lhs.true403.cond.false424_crit_edge:         ; preds = %land.lhs.true403
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false424

land.lhs.true408:                                 ; preds = %land.lhs.true403
  %sriov_wreg412 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %181, i32 0, i32 12
  %182 = ptrtoint ptr %sriov_wreg412 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %sriov_wreg412, align 4
  %tobool413.not = icmp eq ptr %183, null
  br i1 %tobool413.not, label %land.lhs.true408.cond.false424_crit_edge, label %cond.true414

land.lhs.true408.cond.false424_crit_edge:         ; preds = %land.lhs.true408
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false424

cond.true414:                                     ; preds = %land.lhs.true408
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx420 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %184 = ptrtoint ptr %arrayidx420 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %arrayidx420, align 8
  %186 = ptrtoint ptr %185 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %185, align 4
  %add423 = add i32 %187, 8115
  %cp_hqd_pq_rptr = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 138
  %188 = ptrtoint ptr %cp_hqd_pq_rptr to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %cp_hqd_pq_rptr, align 4
  tail call void %183(ptr noundef %1, i32 noundef %add423, i32 noundef %189, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end431

cond.false424:                                    ; preds = %land.lhs.true408.cond.false424_crit_edge, %land.lhs.true403.cond.false424_crit_edge, %cond.end398.cond.false424_crit_edge
  %arrayidx426 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %190 = ptrtoint ptr %arrayidx426 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %arrayidx426, align 8
  %192 = ptrtoint ptr %191 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %191, align 4
  %add429 = add i32 %193, 8115
  %cp_hqd_pq_rptr430 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 138
  %194 = ptrtoint ptr %cp_hqd_pq_rptr430 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %cp_hqd_pq_rptr430, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add429, i32 noundef %195, i32 noundef 0) #13
  br label %cond.end431

cond.end431:                                      ; preds = %cond.false424, %cond.true414
  %196 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %virt, align 8
  %and434 = and i32 %197, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and434)
  %tobool435.not = icmp eq i32 %and434, 0
  br i1 %tobool435.not, label %cond.end431.cond.false457_crit_edge, label %land.lhs.true436

cond.end431.cond.false457_crit_edge:              ; preds = %cond.end431
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false457

land.lhs.true436:                                 ; preds = %cond.end431
  %funcs439 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %198 = ptrtoint ptr %funcs439 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %funcs439, align 4
  %tobool440.not = icmp eq ptr %199, null
  br i1 %tobool440.not, label %land.lhs.true436.cond.false457_crit_edge, label %land.lhs.true441

land.lhs.true436.cond.false457_crit_edge:         ; preds = %land.lhs.true436
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false457

land.lhs.true441:                                 ; preds = %land.lhs.true436
  %sriov_wreg445 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %199, i32 0, i32 12
  %200 = ptrtoint ptr %sriov_wreg445 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %sriov_wreg445, align 4
  %tobool446.not = icmp eq ptr %201, null
  br i1 %tobool446.not, label %land.lhs.true441.cond.false457_crit_edge, label %cond.true447

land.lhs.true441.cond.false457_crit_edge:         ; preds = %land.lhs.true441
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false457

cond.true447:                                     ; preds = %land.lhs.true441
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx453 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %202 = ptrtoint ptr %arrayidx453 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %arrayidx453, align 8
  %204 = ptrtoint ptr %203 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %203, align 4
  %add456 = add i32 %205, 8159
  %cp_hqd_pq_wptr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 182
  %206 = ptrtoint ptr %cp_hqd_pq_wptr_lo to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %cp_hqd_pq_wptr_lo, align 4
  tail call void %201(ptr noundef %1, i32 noundef %add456, i32 noundef %207, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end464

cond.false457:                                    ; preds = %land.lhs.true441.cond.false457_crit_edge, %land.lhs.true436.cond.false457_crit_edge, %cond.end431.cond.false457_crit_edge
  %arrayidx459 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %208 = ptrtoint ptr %arrayidx459 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %arrayidx459, align 8
  %210 = ptrtoint ptr %209 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %209, align 4
  %add462 = add i32 %211, 8159
  %cp_hqd_pq_wptr_lo463 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 182
  %212 = ptrtoint ptr %cp_hqd_pq_wptr_lo463 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %cp_hqd_pq_wptr_lo463, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add462, i32 noundef %213, i32 noundef 0) #13
  br label %cond.end464

cond.end464:                                      ; preds = %cond.false457, %cond.true447
  %214 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %virt, align 8
  %and467 = and i32 %215, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and467)
  %tobool468.not = icmp eq i32 %and467, 0
  br i1 %tobool468.not, label %cond.end464.cond.false490_crit_edge, label %land.lhs.true469

cond.end464.cond.false490_crit_edge:              ; preds = %cond.end464
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false490

land.lhs.true469:                                 ; preds = %cond.end464
  %funcs472 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %216 = ptrtoint ptr %funcs472 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %funcs472, align 4
  %tobool473.not = icmp eq ptr %217, null
  br i1 %tobool473.not, label %land.lhs.true469.cond.false490_crit_edge, label %land.lhs.true474

land.lhs.true469.cond.false490_crit_edge:         ; preds = %land.lhs.true469
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false490

land.lhs.true474:                                 ; preds = %land.lhs.true469
  %sriov_wreg478 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %217, i32 0, i32 12
  %218 = ptrtoint ptr %sriov_wreg478 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %sriov_wreg478, align 4
  %tobool479.not = icmp eq ptr %219, null
  br i1 %tobool479.not, label %land.lhs.true474.cond.false490_crit_edge, label %cond.true480

land.lhs.true474.cond.false490_crit_edge:         ; preds = %land.lhs.true474
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false490

cond.true480:                                     ; preds = %land.lhs.true474
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx486 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %220 = ptrtoint ptr %arrayidx486 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %arrayidx486, align 8
  %222 = ptrtoint ptr %221 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %221, align 4
  %add489 = add i32 %223, 8160
  %cp_hqd_pq_wptr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 183
  %224 = ptrtoint ptr %cp_hqd_pq_wptr_hi to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %cp_hqd_pq_wptr_hi, align 4
  tail call void %219(ptr noundef %1, i32 noundef %add489, i32 noundef %225, i32 noundef 0, i32 noundef 1) #13
  br label %if.end498

cond.false490:                                    ; preds = %land.lhs.true474.cond.false490_crit_edge, %land.lhs.true469.cond.false490_crit_edge, %cond.end464.cond.false490_crit_edge
  %arrayidx492 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %226 = ptrtoint ptr %arrayidx492 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %arrayidx492, align 8
  %228 = ptrtoint ptr %227 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %227, align 4
  %add495 = add i32 %229, 8160
  %cp_hqd_pq_wptr_hi496 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 183
  %230 = ptrtoint ptr %cp_hqd_pq_wptr_hi496 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %cp_hqd_pq_wptr_hi496, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add495, i32 noundef %231, i32 noundef 0) #13
  br label %if.end498

if.end498:                                        ; preds = %cond.false490, %cond.true480, %cond.end290.if.end498_crit_edge
  %232 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %virt, align 8
  %and501 = and i32 %233, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and501)
  %tobool502.not = icmp eq i32 %and501, 0
  br i1 %tobool502.not, label %if.end498.cond.false524_crit_edge, label %land.lhs.true503

if.end498.cond.false524_crit_edge:                ; preds = %if.end498
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false524

land.lhs.true503:                                 ; preds = %if.end498
  %funcs506 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %234 = ptrtoint ptr %funcs506 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %funcs506, align 4
  %tobool507.not = icmp eq ptr %235, null
  br i1 %tobool507.not, label %land.lhs.true503.cond.false524_crit_edge, label %land.lhs.true508

land.lhs.true503.cond.false524_crit_edge:         ; preds = %land.lhs.true503
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false524

land.lhs.true508:                                 ; preds = %land.lhs.true503
  %sriov_wreg512 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %235, i32 0, i32 12
  %236 = ptrtoint ptr %sriov_wreg512 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %sriov_wreg512, align 4
  %tobool513.not = icmp eq ptr %237, null
  br i1 %tobool513.not, label %land.lhs.true508.cond.false524_crit_edge, label %cond.true514

land.lhs.true508.cond.false524_crit_edge:         ; preds = %land.lhs.true508
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false524

cond.true514:                                     ; preds = %land.lhs.true508
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx520 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %238 = ptrtoint ptr %arrayidx520 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %arrayidx520, align 8
  %240 = ptrtoint ptr %239 to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %239, align 4
  %add523 = add i32 %241, 8105
  %cp_mqd_base_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 128
  %242 = ptrtoint ptr %cp_mqd_base_addr_lo to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %cp_mqd_base_addr_lo, align 4
  tail call void %237(ptr noundef %1, i32 noundef %add523, i32 noundef %243, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end531

cond.false524:                                    ; preds = %land.lhs.true508.cond.false524_crit_edge, %land.lhs.true503.cond.false524_crit_edge, %if.end498.cond.false524_crit_edge
  %arrayidx526 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %244 = ptrtoint ptr %arrayidx526 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %arrayidx526, align 8
  %246 = ptrtoint ptr %245 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %245, align 4
  %add529 = add i32 %247, 8105
  %cp_mqd_base_addr_lo530 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 128
  %248 = ptrtoint ptr %cp_mqd_base_addr_lo530 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %cp_mqd_base_addr_lo530, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add529, i32 noundef %249, i32 noundef 0) #13
  br label %cond.end531

cond.end531:                                      ; preds = %cond.false524, %cond.true514
  %250 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %virt, align 8
  %and534 = and i32 %251, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and534)
  %tobool535.not = icmp eq i32 %and534, 0
  br i1 %tobool535.not, label %cond.end531.cond.false557_crit_edge, label %land.lhs.true536

cond.end531.cond.false557_crit_edge:              ; preds = %cond.end531
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false557

land.lhs.true536:                                 ; preds = %cond.end531
  %funcs539 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %252 = ptrtoint ptr %funcs539 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %funcs539, align 4
  %tobool540.not = icmp eq ptr %253, null
  br i1 %tobool540.not, label %land.lhs.true536.cond.false557_crit_edge, label %land.lhs.true541

land.lhs.true536.cond.false557_crit_edge:         ; preds = %land.lhs.true536
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false557

land.lhs.true541:                                 ; preds = %land.lhs.true536
  %sriov_wreg545 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %253, i32 0, i32 12
  %254 = ptrtoint ptr %sriov_wreg545 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %sriov_wreg545, align 4
  %tobool546.not = icmp eq ptr %255, null
  br i1 %tobool546.not, label %land.lhs.true541.cond.false557_crit_edge, label %cond.true547

land.lhs.true541.cond.false557_crit_edge:         ; preds = %land.lhs.true541
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false557

cond.true547:                                     ; preds = %land.lhs.true541
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx553 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %256 = ptrtoint ptr %arrayidx553 to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %arrayidx553, align 8
  %258 = ptrtoint ptr %257 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %257, align 4
  %add556 = add i32 %259, 8106
  %cp_mqd_base_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 129
  %260 = ptrtoint ptr %cp_mqd_base_addr_hi to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %cp_mqd_base_addr_hi, align 4
  tail call void %255(ptr noundef %1, i32 noundef %add556, i32 noundef %261, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end564

cond.false557:                                    ; preds = %land.lhs.true541.cond.false557_crit_edge, %land.lhs.true536.cond.false557_crit_edge, %cond.end531.cond.false557_crit_edge
  %arrayidx559 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %262 = ptrtoint ptr %arrayidx559 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %arrayidx559, align 8
  %264 = ptrtoint ptr %263 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %263, align 4
  %add562 = add i32 %265, 8106
  %cp_mqd_base_addr_hi563 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 129
  %266 = ptrtoint ptr %cp_mqd_base_addr_hi563 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %cp_mqd_base_addr_hi563, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add562, i32 noundef %267, i32 noundef 0) #13
  br label %cond.end564

cond.end564:                                      ; preds = %cond.false557, %cond.true547
  %268 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %virt, align 8
  %and567 = and i32 %269, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and567)
  %tobool568.not = icmp eq i32 %and567, 0
  br i1 %tobool568.not, label %cond.end564.cond.false590_crit_edge, label %land.lhs.true569

cond.end564.cond.false590_crit_edge:              ; preds = %cond.end564
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false590

land.lhs.true569:                                 ; preds = %cond.end564
  %funcs572 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %270 = ptrtoint ptr %funcs572 to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %funcs572, align 4
  %tobool573.not = icmp eq ptr %271, null
  br i1 %tobool573.not, label %land.lhs.true569.cond.false590_crit_edge, label %land.lhs.true574

land.lhs.true569.cond.false590_crit_edge:         ; preds = %land.lhs.true569
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false590

land.lhs.true574:                                 ; preds = %land.lhs.true569
  %sriov_wreg578 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %271, i32 0, i32 12
  %272 = ptrtoint ptr %sriov_wreg578 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load ptr, ptr %sriov_wreg578, align 4
  %tobool579.not = icmp eq ptr %273, null
  br i1 %tobool579.not, label %land.lhs.true574.cond.false590_crit_edge, label %cond.true580

land.lhs.true574.cond.false590_crit_edge:         ; preds = %land.lhs.true574
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false590

cond.true580:                                     ; preds = %land.lhs.true574
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx586 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %274 = ptrtoint ptr %arrayidx586 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %arrayidx586, align 8
  %276 = ptrtoint ptr %275 to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %275, align 4
  %add589 = add i32 %277, 8139
  %cp_mqd_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 162
  %278 = ptrtoint ptr %cp_mqd_control to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %cp_mqd_control, align 4
  tail call void %273(ptr noundef %1, i32 noundef %add589, i32 noundef %279, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end597

cond.false590:                                    ; preds = %land.lhs.true574.cond.false590_crit_edge, %land.lhs.true569.cond.false590_crit_edge, %cond.end564.cond.false590_crit_edge
  %arrayidx592 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %280 = ptrtoint ptr %arrayidx592 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %arrayidx592, align 8
  %282 = ptrtoint ptr %281 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %281, align 4
  %add595 = add i32 %283, 8139
  %cp_mqd_control596 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 162
  %284 = ptrtoint ptr %cp_mqd_control596 to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %cp_mqd_control596, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add595, i32 noundef %285, i32 noundef 0) #13
  br label %cond.end597

cond.end597:                                      ; preds = %cond.false590, %cond.true580
  %286 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %virt, align 8
  %and600 = and i32 %287, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and600)
  %tobool601.not = icmp eq i32 %and600, 0
  br i1 %tobool601.not, label %cond.end597.cond.false623_crit_edge, label %land.lhs.true602

cond.end597.cond.false623_crit_edge:              ; preds = %cond.end597
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false623

land.lhs.true602:                                 ; preds = %cond.end597
  %funcs605 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %288 = ptrtoint ptr %funcs605 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %funcs605, align 4
  %tobool606.not = icmp eq ptr %289, null
  br i1 %tobool606.not, label %land.lhs.true602.cond.false623_crit_edge, label %land.lhs.true607

land.lhs.true602.cond.false623_crit_edge:         ; preds = %land.lhs.true602
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false623

land.lhs.true607:                                 ; preds = %land.lhs.true602
  %sriov_wreg611 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %289, i32 0, i32 12
  %290 = ptrtoint ptr %sriov_wreg611 to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %sriov_wreg611, align 4
  %tobool612.not = icmp eq ptr %291, null
  br i1 %tobool612.not, label %land.lhs.true607.cond.false623_crit_edge, label %cond.true613

land.lhs.true607.cond.false623_crit_edge:         ; preds = %land.lhs.true607
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false623

cond.true613:                                     ; preds = %land.lhs.true607
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx619 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %292 = ptrtoint ptr %arrayidx619 to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %arrayidx619, align 8
  %294 = ptrtoint ptr %293 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %293, align 4
  %add622 = add i32 %295, 8113
  %cp_hqd_pq_base_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 136
  %296 = ptrtoint ptr %cp_hqd_pq_base_lo to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %cp_hqd_pq_base_lo, align 4
  tail call void %291(ptr noundef %1, i32 noundef %add622, i32 noundef %297, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end630

cond.false623:                                    ; preds = %land.lhs.true607.cond.false623_crit_edge, %land.lhs.true602.cond.false623_crit_edge, %cond.end597.cond.false623_crit_edge
  %arrayidx625 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %298 = ptrtoint ptr %arrayidx625 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %arrayidx625, align 8
  %300 = ptrtoint ptr %299 to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load i32, ptr %299, align 4
  %add628 = add i32 %301, 8113
  %cp_hqd_pq_base_lo629 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 136
  %302 = ptrtoint ptr %cp_hqd_pq_base_lo629 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %cp_hqd_pq_base_lo629, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add628, i32 noundef %303, i32 noundef 0) #13
  br label %cond.end630

cond.end630:                                      ; preds = %cond.false623, %cond.true613
  %304 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %virt, align 8
  %and633 = and i32 %305, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and633)
  %tobool634.not = icmp eq i32 %and633, 0
  br i1 %tobool634.not, label %cond.end630.cond.false656_crit_edge, label %land.lhs.true635

cond.end630.cond.false656_crit_edge:              ; preds = %cond.end630
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false656

land.lhs.true635:                                 ; preds = %cond.end630
  %funcs638 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %306 = ptrtoint ptr %funcs638 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %funcs638, align 4
  %tobool639.not = icmp eq ptr %307, null
  br i1 %tobool639.not, label %land.lhs.true635.cond.false656_crit_edge, label %land.lhs.true640

land.lhs.true635.cond.false656_crit_edge:         ; preds = %land.lhs.true635
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false656

land.lhs.true640:                                 ; preds = %land.lhs.true635
  %sriov_wreg644 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %307, i32 0, i32 12
  %308 = ptrtoint ptr %sriov_wreg644 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %sriov_wreg644, align 4
  %tobool645.not = icmp eq ptr %309, null
  br i1 %tobool645.not, label %land.lhs.true640.cond.false656_crit_edge, label %cond.true646

land.lhs.true640.cond.false656_crit_edge:         ; preds = %land.lhs.true640
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false656

cond.true646:                                     ; preds = %land.lhs.true640
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx652 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %310 = ptrtoint ptr %arrayidx652 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %arrayidx652, align 8
  %312 = ptrtoint ptr %311 to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %311, align 4
  %add655 = add i32 %313, 8114
  %cp_hqd_pq_base_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 137
  %314 = ptrtoint ptr %cp_hqd_pq_base_hi to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %cp_hqd_pq_base_hi, align 4
  tail call void %309(ptr noundef %1, i32 noundef %add655, i32 noundef %315, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end663

cond.false656:                                    ; preds = %land.lhs.true640.cond.false656_crit_edge, %land.lhs.true635.cond.false656_crit_edge, %cond.end630.cond.false656_crit_edge
  %arrayidx658 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %316 = ptrtoint ptr %arrayidx658 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load ptr, ptr %arrayidx658, align 8
  %318 = ptrtoint ptr %317 to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %317, align 4
  %add661 = add i32 %319, 8114
  %cp_hqd_pq_base_hi662 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 137
  %320 = ptrtoint ptr %cp_hqd_pq_base_hi662 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %cp_hqd_pq_base_hi662, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add661, i32 noundef %321, i32 noundef 0) #13
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false656, %cond.true646
  %322 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load i32, ptr %virt, align 8
  %and666 = and i32 %323, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and666)
  %tobool667.not = icmp eq i32 %and666, 0
  br i1 %tobool667.not, label %cond.end663.cond.false689_crit_edge, label %land.lhs.true668

cond.end663.cond.false689_crit_edge:              ; preds = %cond.end663
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false689

land.lhs.true668:                                 ; preds = %cond.end663
  %funcs671 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %324 = ptrtoint ptr %funcs671 to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %funcs671, align 4
  %tobool672.not = icmp eq ptr %325, null
  br i1 %tobool672.not, label %land.lhs.true668.cond.false689_crit_edge, label %land.lhs.true673

land.lhs.true668.cond.false689_crit_edge:         ; preds = %land.lhs.true668
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false689

land.lhs.true673:                                 ; preds = %land.lhs.true668
  %sriov_wreg677 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %325, i32 0, i32 12
  %326 = ptrtoint ptr %sriov_wreg677 to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %sriov_wreg677, align 4
  %tobool678.not = icmp eq ptr %327, null
  br i1 %tobool678.not, label %land.lhs.true673.cond.false689_crit_edge, label %cond.true679

land.lhs.true673.cond.false689_crit_edge:         ; preds = %land.lhs.true673
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false689

cond.true679:                                     ; preds = %land.lhs.true673
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx685 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %328 = ptrtoint ptr %arrayidx685 to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %arrayidx685, align 8
  %330 = ptrtoint ptr %329 to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load i32, ptr %329, align 4
  %add688 = add i32 %331, 8122
  %cp_hqd_pq_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 145
  %332 = ptrtoint ptr %cp_hqd_pq_control to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %cp_hqd_pq_control, align 4
  tail call void %327(ptr noundef %1, i32 noundef %add688, i32 noundef %333, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end696

cond.false689:                                    ; preds = %land.lhs.true673.cond.false689_crit_edge, %land.lhs.true668.cond.false689_crit_edge, %cond.end663.cond.false689_crit_edge
  %arrayidx691 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %334 = ptrtoint ptr %arrayidx691 to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %arrayidx691, align 8
  %336 = ptrtoint ptr %335 to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load i32, ptr %335, align 4
  %add694 = add i32 %337, 8122
  %cp_hqd_pq_control695 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 145
  %338 = ptrtoint ptr %cp_hqd_pq_control695 to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %cp_hqd_pq_control695, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add694, i32 noundef %339, i32 noundef 0) #13
  br label %cond.end696

cond.end696:                                      ; preds = %cond.false689, %cond.true679
  %340 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %virt, align 8
  %and699 = and i32 %341, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and699)
  %tobool700.not = icmp eq i32 %and699, 0
  br i1 %tobool700.not, label %cond.end696.cond.false722_crit_edge, label %land.lhs.true701

cond.end696.cond.false722_crit_edge:              ; preds = %cond.end696
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false722

land.lhs.true701:                                 ; preds = %cond.end696
  %funcs704 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %342 = ptrtoint ptr %funcs704 to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load ptr, ptr %funcs704, align 4
  %tobool705.not = icmp eq ptr %343, null
  br i1 %tobool705.not, label %land.lhs.true701.cond.false722_crit_edge, label %land.lhs.true706

land.lhs.true701.cond.false722_crit_edge:         ; preds = %land.lhs.true701
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false722

land.lhs.true706:                                 ; preds = %land.lhs.true701
  %sriov_wreg710 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %343, i32 0, i32 12
  %344 = ptrtoint ptr %sriov_wreg710 to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load ptr, ptr %sriov_wreg710, align 4
  %tobool711.not = icmp eq ptr %345, null
  br i1 %tobool711.not, label %land.lhs.true706.cond.false722_crit_edge, label %cond.true712

land.lhs.true706.cond.false722_crit_edge:         ; preds = %land.lhs.true706
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false722

cond.true712:                                     ; preds = %land.lhs.true706
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx718 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %346 = ptrtoint ptr %arrayidx718 to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %arrayidx718, align 8
  %348 = ptrtoint ptr %347 to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %347, align 4
  %add721 = add i32 %349, 8116
  %cp_hqd_pq_rptr_report_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 139
  %350 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_lo to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load i32, ptr %cp_hqd_pq_rptr_report_addr_lo, align 4
  tail call void %345(ptr noundef %1, i32 noundef %add721, i32 noundef %351, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end729

cond.false722:                                    ; preds = %land.lhs.true706.cond.false722_crit_edge, %land.lhs.true701.cond.false722_crit_edge, %cond.end696.cond.false722_crit_edge
  %arrayidx724 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %352 = ptrtoint ptr %arrayidx724 to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %arrayidx724, align 8
  %354 = ptrtoint ptr %353 to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %353, align 4
  %add727 = add i32 %355, 8116
  %cp_hqd_pq_rptr_report_addr_lo728 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 139
  %356 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_lo728 to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %cp_hqd_pq_rptr_report_addr_lo728, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add727, i32 noundef %357, i32 noundef 0) #13
  br label %cond.end729

cond.end729:                                      ; preds = %cond.false722, %cond.true712
  %358 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load i32, ptr %virt, align 8
  %and732 = and i32 %359, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and732)
  %tobool733.not = icmp eq i32 %and732, 0
  br i1 %tobool733.not, label %cond.end729.cond.false755_crit_edge, label %land.lhs.true734

cond.end729.cond.false755_crit_edge:              ; preds = %cond.end729
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false755

land.lhs.true734:                                 ; preds = %cond.end729
  %funcs737 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %360 = ptrtoint ptr %funcs737 to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load ptr, ptr %funcs737, align 4
  %tobool738.not = icmp eq ptr %361, null
  br i1 %tobool738.not, label %land.lhs.true734.cond.false755_crit_edge, label %land.lhs.true739

land.lhs.true734.cond.false755_crit_edge:         ; preds = %land.lhs.true734
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false755

land.lhs.true739:                                 ; preds = %land.lhs.true734
  %sriov_wreg743 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %361, i32 0, i32 12
  %362 = ptrtoint ptr %sriov_wreg743 to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load ptr, ptr %sriov_wreg743, align 4
  %tobool744.not = icmp eq ptr %363, null
  br i1 %tobool744.not, label %land.lhs.true739.cond.false755_crit_edge, label %cond.true745

land.lhs.true739.cond.false755_crit_edge:         ; preds = %land.lhs.true739
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false755

cond.true745:                                     ; preds = %land.lhs.true739
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx751 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %364 = ptrtoint ptr %arrayidx751 to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load ptr, ptr %arrayidx751, align 8
  %366 = ptrtoint ptr %365 to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %365, align 4
  %add754 = add i32 %367, 8117
  %cp_hqd_pq_rptr_report_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 140
  %368 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_hi to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %cp_hqd_pq_rptr_report_addr_hi, align 4
  tail call void %363(ptr noundef %1, i32 noundef %add754, i32 noundef %369, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end762

cond.false755:                                    ; preds = %land.lhs.true739.cond.false755_crit_edge, %land.lhs.true734.cond.false755_crit_edge, %cond.end729.cond.false755_crit_edge
  %arrayidx757 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %370 = ptrtoint ptr %arrayidx757 to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load ptr, ptr %arrayidx757, align 8
  %372 = ptrtoint ptr %371 to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load i32, ptr %371, align 4
  %add760 = add i32 %373, 8117
  %cp_hqd_pq_rptr_report_addr_hi761 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 140
  %374 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_hi761 to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %cp_hqd_pq_rptr_report_addr_hi761, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add760, i32 noundef %375, i32 noundef 0) #13
  br label %cond.end762

cond.end762:                                      ; preds = %cond.false755, %cond.true745
  %376 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load i32, ptr %virt, align 8
  %and765 = and i32 %377, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and765)
  %tobool766.not = icmp eq i32 %and765, 0
  br i1 %tobool766.not, label %cond.end762.cond.false788_crit_edge, label %land.lhs.true767

cond.end762.cond.false788_crit_edge:              ; preds = %cond.end762
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false788

land.lhs.true767:                                 ; preds = %cond.end762
  %funcs770 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %378 = ptrtoint ptr %funcs770 to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load ptr, ptr %funcs770, align 4
  %tobool771.not = icmp eq ptr %379, null
  br i1 %tobool771.not, label %land.lhs.true767.cond.false788_crit_edge, label %land.lhs.true772

land.lhs.true767.cond.false788_crit_edge:         ; preds = %land.lhs.true767
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false788

land.lhs.true772:                                 ; preds = %land.lhs.true767
  %sriov_wreg776 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %379, i32 0, i32 12
  %380 = ptrtoint ptr %sriov_wreg776 to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load ptr, ptr %sriov_wreg776, align 4
  %tobool777.not = icmp eq ptr %381, null
  br i1 %tobool777.not, label %land.lhs.true772.cond.false788_crit_edge, label %cond.true778

land.lhs.true772.cond.false788_crit_edge:         ; preds = %land.lhs.true772
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false788

cond.true778:                                     ; preds = %land.lhs.true772
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx784 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %382 = ptrtoint ptr %arrayidx784 to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %arrayidx784, align 8
  %384 = ptrtoint ptr %383 to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load i32, ptr %383, align 4
  %add787 = add i32 %385, 8118
  %cp_hqd_pq_wptr_poll_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 141
  %386 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_lo to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_lo, align 4
  tail call void %381(ptr noundef %1, i32 noundef %add787, i32 noundef %387, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end795

cond.false788:                                    ; preds = %land.lhs.true772.cond.false788_crit_edge, %land.lhs.true767.cond.false788_crit_edge, %cond.end762.cond.false788_crit_edge
  %arrayidx790 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %388 = ptrtoint ptr %arrayidx790 to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load ptr, ptr %arrayidx790, align 8
  %390 = ptrtoint ptr %389 to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load i32, ptr %389, align 4
  %add793 = add i32 %391, 8118
  %cp_hqd_pq_wptr_poll_addr_lo794 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 141
  %392 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_lo794 to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_lo794, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add793, i32 noundef %393, i32 noundef 0) #13
  br label %cond.end795

cond.end795:                                      ; preds = %cond.false788, %cond.true778
  %394 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load i32, ptr %virt, align 8
  %and798 = and i32 %395, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and798)
  %tobool799.not = icmp eq i32 %and798, 0
  br i1 %tobool799.not, label %cond.end795.cond.false821_crit_edge, label %land.lhs.true800

cond.end795.cond.false821_crit_edge:              ; preds = %cond.end795
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false821

land.lhs.true800:                                 ; preds = %cond.end795
  %funcs803 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %396 = ptrtoint ptr %funcs803 to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load ptr, ptr %funcs803, align 4
  %tobool804.not = icmp eq ptr %397, null
  br i1 %tobool804.not, label %land.lhs.true800.cond.false821_crit_edge, label %land.lhs.true805

land.lhs.true800.cond.false821_crit_edge:         ; preds = %land.lhs.true800
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false821

land.lhs.true805:                                 ; preds = %land.lhs.true800
  %sriov_wreg809 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %397, i32 0, i32 12
  %398 = ptrtoint ptr %sriov_wreg809 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load ptr, ptr %sriov_wreg809, align 4
  %tobool810.not = icmp eq ptr %399, null
  br i1 %tobool810.not, label %land.lhs.true805.cond.false821_crit_edge, label %cond.true811

land.lhs.true805.cond.false821_crit_edge:         ; preds = %land.lhs.true805
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false821

cond.true811:                                     ; preds = %land.lhs.true805
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx817 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %400 = ptrtoint ptr %arrayidx817 to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load ptr, ptr %arrayidx817, align 8
  %402 = ptrtoint ptr %401 to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %401, align 4
  %add820 = add i32 %403, 8119
  %cp_hqd_pq_wptr_poll_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 142
  %404 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_hi to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_hi, align 4
  tail call void %399(ptr noundef %1, i32 noundef %add820, i32 noundef %405, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end828

cond.false821:                                    ; preds = %land.lhs.true805.cond.false821_crit_edge, %land.lhs.true800.cond.false821_crit_edge, %cond.end795.cond.false821_crit_edge
  %arrayidx823 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %406 = ptrtoint ptr %arrayidx823 to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %arrayidx823, align 8
  %408 = ptrtoint ptr %407 to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load i32, ptr %407, align 4
  %add826 = add i32 %409, 8119
  %cp_hqd_pq_wptr_poll_addr_hi827 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 142
  %410 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_hi827 to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_hi827, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add826, i32 noundef %411, i32 noundef 0) #13
  br label %cond.end828

cond.end828:                                      ; preds = %cond.false821, %cond.true811
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %412 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %412)
  %413 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %413)
  %tobool829.not = icmp eq i8 %413, 0
  br i1 %tobool829.not, label %cond.end828.if.end906_crit_edge, label %if.then830

cond.end828.if.end906_crit_edge:                  ; preds = %cond.end828
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end906

if.then830:                                       ; preds = %cond.end828
  %414 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load i32, ptr %virt, align 8
  %and833 = and i32 %415, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and833)
  %tobool834.not = icmp eq i32 %and833, 0
  br i1 %tobool834.not, label %if.then830.cond.false856_crit_edge, label %land.lhs.true835

if.then830.cond.false856_crit_edge:               ; preds = %if.then830
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false856

land.lhs.true835:                                 ; preds = %if.then830
  %funcs838 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %416 = ptrtoint ptr %funcs838 to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load ptr, ptr %funcs838, align 4
  %tobool839.not = icmp eq ptr %417, null
  br i1 %tobool839.not, label %land.lhs.true835.cond.false856_crit_edge, label %land.lhs.true840

land.lhs.true835.cond.false856_crit_edge:         ; preds = %land.lhs.true835
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false856

land.lhs.true840:                                 ; preds = %land.lhs.true835
  %sriov_wreg844 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %417, i32 0, i32 12
  %418 = ptrtoint ptr %sriov_wreg844 to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load ptr, ptr %sriov_wreg844, align 4
  %tobool845.not = icmp eq ptr %419, null
  br i1 %tobool845.not, label %land.lhs.true840.cond.false856_crit_edge, label %cond.true846

land.lhs.true840.cond.false856_crit_edge:         ; preds = %land.lhs.true840
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false856

cond.true846:                                     ; preds = %land.lhs.true840
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx852 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %420 = ptrtoint ptr %arrayidx852 to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load ptr, ptr %arrayidx852, align 8
  %422 = ptrtoint ptr %421 to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load i32, ptr %421, align 4
  %add855 = add i32 %423, 7676
  %doorbell_index = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144
  %424 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load i32, ptr %doorbell_index, align 4
  %mul = shl i32 %425, 3
  tail call void %419(ptr noundef %1, i32 noundef %add855, i32 noundef %mul, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end866

cond.false856:                                    ; preds = %land.lhs.true840.cond.false856_crit_edge, %land.lhs.true835.cond.false856_crit_edge, %if.then830.cond.false856_crit_edge
  %arrayidx858 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %426 = ptrtoint ptr %arrayidx858 to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load ptr, ptr %arrayidx858, align 8
  %428 = ptrtoint ptr %427 to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load i32, ptr %427, align 4
  %add861 = add i32 %429, 7676
  %doorbell_index862 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144
  %430 = ptrtoint ptr %doorbell_index862 to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %doorbell_index862, align 4
  %mul864 = shl i32 %431, 3
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add861, i32 noundef %mul864, i32 noundef 0) #13
  br label %cond.end866

cond.end866:                                      ; preds = %cond.false856, %cond.true846
  %432 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load i32, ptr %virt, align 8
  %and869 = and i32 %433, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and869)
  %tobool870.not = icmp eq i32 %and869, 0
  br i1 %tobool870.not, label %cond.end866.cond.false895_crit_edge, label %land.lhs.true871

cond.end866.cond.false895_crit_edge:              ; preds = %cond.end866
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false895

land.lhs.true871:                                 ; preds = %cond.end866
  %funcs874 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %434 = ptrtoint ptr %funcs874 to i32
  call void @__asan_load4_noabort(i32 %434)
  %435 = load ptr, ptr %funcs874, align 4
  %tobool875.not = icmp eq ptr %435, null
  br i1 %tobool875.not, label %land.lhs.true871.cond.false895_crit_edge, label %land.lhs.true876

land.lhs.true871.cond.false895_crit_edge:         ; preds = %land.lhs.true871
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false895

land.lhs.true876:                                 ; preds = %land.lhs.true871
  %sriov_wreg880 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %435, i32 0, i32 12
  %436 = ptrtoint ptr %sriov_wreg880 to i32
  call void @__asan_load4_noabort(i32 %436)
  %437 = load ptr, ptr %sriov_wreg880, align 4
  %tobool881.not = icmp eq ptr %437, null
  br i1 %tobool881.not, label %land.lhs.true876.cond.false895_crit_edge, label %cond.true882

land.lhs.true876.cond.false895_crit_edge:         ; preds = %land.lhs.true876
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false895

cond.true882:                                     ; preds = %land.lhs.true876
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx888 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %438 = ptrtoint ptr %arrayidx888 to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load ptr, ptr %arrayidx888, align 8
  %440 = ptrtoint ptr %439 to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load i32, ptr %439, align 4
  %add891 = add i32 %441, 7677
  %userqueue_end = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144, i32 10
  %442 = ptrtoint ptr %userqueue_end to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load i32, ptr %userqueue_end, align 4
  %mul893 = shl i32 %443, 3
  tail call void %437(ptr noundef %1, i32 noundef %add891, i32 noundef %mul893, i32 noundef 0, i32 noundef 1) #13
  br label %if.end906

cond.false895:                                    ; preds = %land.lhs.true876.cond.false895_crit_edge, %land.lhs.true871.cond.false895_crit_edge, %cond.end866.cond.false895_crit_edge
  %arrayidx897 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %444 = ptrtoint ptr %arrayidx897 to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load ptr, ptr %arrayidx897, align 8
  %446 = ptrtoint ptr %445 to i32
  call void @__asan_load4_noabort(i32 %446)
  %447 = load i32, ptr %445, align 4
  %add900 = add i32 %447, 7677
  %userqueue_end902 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144, i32 10
  %448 = ptrtoint ptr %userqueue_end902 to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load i32, ptr %userqueue_end902, align 4
  %mul903 = shl i32 %449, 3
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add900, i32 noundef %mul903, i32 noundef 0) #13
  br label %if.end906

if.end906:                                        ; preds = %cond.false895, %cond.true882, %cond.end828.if.end906_crit_edge
  %450 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load i32, ptr %virt, align 8
  %and909 = and i32 %451, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and909)
  %tobool910.not = icmp eq i32 %and909, 0
  br i1 %tobool910.not, label %if.end906.cond.false933_crit_edge, label %land.lhs.true911

if.end906.cond.false933_crit_edge:                ; preds = %if.end906
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false933

land.lhs.true911:                                 ; preds = %if.end906
  %funcs914 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %452 = ptrtoint ptr %funcs914 to i32
  call void @__asan_load4_noabort(i32 %452)
  %453 = load ptr, ptr %funcs914, align 4
  %tobool915.not = icmp eq ptr %453, null
  br i1 %tobool915.not, label %land.lhs.true911.cond.false933_crit_edge, label %land.lhs.true916

land.lhs.true911.cond.false933_crit_edge:         ; preds = %land.lhs.true911
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false933

land.lhs.true916:                                 ; preds = %land.lhs.true911
  %sriov_wreg920 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %453, i32 0, i32 12
  %454 = ptrtoint ptr %sriov_wreg920 to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load ptr, ptr %sriov_wreg920, align 4
  %tobool921.not = icmp eq ptr %455, null
  br i1 %tobool921.not, label %land.lhs.true916.cond.false933_crit_edge, label %cond.true922

land.lhs.true916.cond.false933_crit_edge:         ; preds = %land.lhs.true916
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false933

cond.true922:                                     ; preds = %land.lhs.true916
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx928 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %456 = ptrtoint ptr %arrayidx928 to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load ptr, ptr %arrayidx928, align 8
  %458 = ptrtoint ptr %457 to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load i32, ptr %457, align 4
  %add931 = add i32 %459, 8120
  %cp_hqd_pq_doorbell_control932 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 143
  %460 = ptrtoint ptr %cp_hqd_pq_doorbell_control932 to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load i32, ptr %cp_hqd_pq_doorbell_control932, align 4
  tail call void %455(ptr noundef %1, i32 noundef %add931, i32 noundef %461, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end940

cond.false933:                                    ; preds = %land.lhs.true916.cond.false933_crit_edge, %land.lhs.true911.cond.false933_crit_edge, %if.end906.cond.false933_crit_edge
  %arrayidx935 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %462 = ptrtoint ptr %arrayidx935 to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load ptr, ptr %arrayidx935, align 8
  %464 = ptrtoint ptr %463 to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %463, align 4
  %add938 = add i32 %465, 8120
  %cp_hqd_pq_doorbell_control939 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 143
  %466 = ptrtoint ptr %cp_hqd_pq_doorbell_control939 to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load i32, ptr %cp_hqd_pq_doorbell_control939, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add938, i32 noundef %467, i32 noundef 0) #13
  br label %cond.end940

cond.end940:                                      ; preds = %cond.false933, %cond.true922
  %468 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load i32, ptr %virt, align 8
  %and943 = and i32 %469, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and943)
  %tobool944.not = icmp eq i32 %and943, 0
  br i1 %tobool944.not, label %cond.end940.cond.false967_crit_edge, label %land.lhs.true945

cond.end940.cond.false967_crit_edge:              ; preds = %cond.end940
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false967

land.lhs.true945:                                 ; preds = %cond.end940
  %funcs948 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %470 = ptrtoint ptr %funcs948 to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load ptr, ptr %funcs948, align 4
  %tobool949.not = icmp eq ptr %471, null
  br i1 %tobool949.not, label %land.lhs.true945.cond.false967_crit_edge, label %land.lhs.true950

land.lhs.true945.cond.false967_crit_edge:         ; preds = %land.lhs.true945
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false967

land.lhs.true950:                                 ; preds = %land.lhs.true945
  %sriov_wreg954 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %471, i32 0, i32 12
  %472 = ptrtoint ptr %sriov_wreg954 to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load ptr, ptr %sriov_wreg954, align 4
  %tobool955.not = icmp eq ptr %473, null
  br i1 %tobool955.not, label %land.lhs.true950.cond.false967_crit_edge, label %cond.true956

land.lhs.true950.cond.false967_crit_edge:         ; preds = %land.lhs.true950
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false967

cond.true956:                                     ; preds = %land.lhs.true950
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx962 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %474 = ptrtoint ptr %arrayidx962 to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load ptr, ptr %arrayidx962, align 8
  %476 = ptrtoint ptr %475 to i32
  call void @__asan_load4_noabort(i32 %476)
  %477 = load i32, ptr %475, align 4
  %add965 = add i32 %477, 8159
  %cp_hqd_pq_wptr_lo966 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 182
  %478 = ptrtoint ptr %cp_hqd_pq_wptr_lo966 to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load i32, ptr %cp_hqd_pq_wptr_lo966, align 4
  tail call void %473(ptr noundef %1, i32 noundef %add965, i32 noundef %479, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end974

cond.false967:                                    ; preds = %land.lhs.true950.cond.false967_crit_edge, %land.lhs.true945.cond.false967_crit_edge, %cond.end940.cond.false967_crit_edge
  %arrayidx969 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %480 = ptrtoint ptr %arrayidx969 to i32
  call void @__asan_load4_noabort(i32 %480)
  %481 = load ptr, ptr %arrayidx969, align 8
  %482 = ptrtoint ptr %481 to i32
  call void @__asan_load4_noabort(i32 %482)
  %483 = load i32, ptr %481, align 4
  %add972 = add i32 %483, 8159
  %cp_hqd_pq_wptr_lo973 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 182
  %484 = ptrtoint ptr %cp_hqd_pq_wptr_lo973 to i32
  call void @__asan_load4_noabort(i32 %484)
  %485 = load i32, ptr %cp_hqd_pq_wptr_lo973, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add972, i32 noundef %485, i32 noundef 0) #13
  br label %cond.end974

cond.end974:                                      ; preds = %cond.false967, %cond.true956
  %486 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %486)
  %487 = load i32, ptr %virt, align 8
  %and977 = and i32 %487, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and977)
  %tobool978.not = icmp eq i32 %and977, 0
  br i1 %tobool978.not, label %cond.end974.cond.false1001_crit_edge, label %land.lhs.true979

cond.end974.cond.false1001_crit_edge:             ; preds = %cond.end974
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1001

land.lhs.true979:                                 ; preds = %cond.end974
  %funcs982 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %488 = ptrtoint ptr %funcs982 to i32
  call void @__asan_load4_noabort(i32 %488)
  %489 = load ptr, ptr %funcs982, align 4
  %tobool983.not = icmp eq ptr %489, null
  br i1 %tobool983.not, label %land.lhs.true979.cond.false1001_crit_edge, label %land.lhs.true984

land.lhs.true979.cond.false1001_crit_edge:        ; preds = %land.lhs.true979
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1001

land.lhs.true984:                                 ; preds = %land.lhs.true979
  %sriov_wreg988 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %489, i32 0, i32 12
  %490 = ptrtoint ptr %sriov_wreg988 to i32
  call void @__asan_load4_noabort(i32 %490)
  %491 = load ptr, ptr %sriov_wreg988, align 4
  %tobool989.not = icmp eq ptr %491, null
  br i1 %tobool989.not, label %land.lhs.true984.cond.false1001_crit_edge, label %cond.true990

land.lhs.true984.cond.false1001_crit_edge:        ; preds = %land.lhs.true984
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1001

cond.true990:                                     ; preds = %land.lhs.true984
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx996 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %492 = ptrtoint ptr %arrayidx996 to i32
  call void @__asan_load4_noabort(i32 %492)
  %493 = load ptr, ptr %arrayidx996, align 8
  %494 = ptrtoint ptr %493 to i32
  call void @__asan_load4_noabort(i32 %494)
  %495 = load i32, ptr %493, align 4
  %add999 = add i32 %495, 8160
  %cp_hqd_pq_wptr_hi1000 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 183
  %496 = ptrtoint ptr %cp_hqd_pq_wptr_hi1000 to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load i32, ptr %cp_hqd_pq_wptr_hi1000, align 4
  tail call void %491(ptr noundef %1, i32 noundef %add999, i32 noundef %497, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end1008

cond.false1001:                                   ; preds = %land.lhs.true984.cond.false1001_crit_edge, %land.lhs.true979.cond.false1001_crit_edge, %cond.end974.cond.false1001_crit_edge
  %arrayidx1003 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %498 = ptrtoint ptr %arrayidx1003 to i32
  call void @__asan_load4_noabort(i32 %498)
  %499 = load ptr, ptr %arrayidx1003, align 8
  %500 = ptrtoint ptr %499 to i32
  call void @__asan_load4_noabort(i32 %500)
  %501 = load i32, ptr %499, align 4
  %add1006 = add i32 %501, 8160
  %cp_hqd_pq_wptr_hi1007 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 183
  %502 = ptrtoint ptr %cp_hqd_pq_wptr_hi1007 to i32
  call void @__asan_load4_noabort(i32 %502)
  %503 = load i32, ptr %cp_hqd_pq_wptr_hi1007, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add1006, i32 noundef %503, i32 noundef 0) #13
  br label %cond.end1008

cond.end1008:                                     ; preds = %cond.false1001, %cond.true990
  %504 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %504)
  %505 = load i32, ptr %virt, align 8
  %and1011 = and i32 %505, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1011)
  %tobool1012.not = icmp eq i32 %and1011, 0
  br i1 %tobool1012.not, label %cond.end1008.cond.false1034_crit_edge, label %land.lhs.true1013

cond.end1008.cond.false1034_crit_edge:            ; preds = %cond.end1008
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1034

land.lhs.true1013:                                ; preds = %cond.end1008
  %funcs1016 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %506 = ptrtoint ptr %funcs1016 to i32
  call void @__asan_load4_noabort(i32 %506)
  %507 = load ptr, ptr %funcs1016, align 4
  %tobool1017.not = icmp eq ptr %507, null
  br i1 %tobool1017.not, label %land.lhs.true1013.cond.false1034_crit_edge, label %land.lhs.true1018

land.lhs.true1013.cond.false1034_crit_edge:       ; preds = %land.lhs.true1013
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1034

land.lhs.true1018:                                ; preds = %land.lhs.true1013
  %sriov_wreg1022 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %507, i32 0, i32 12
  %508 = ptrtoint ptr %sriov_wreg1022 to i32
  call void @__asan_load4_noabort(i32 %508)
  %509 = load ptr, ptr %sriov_wreg1022, align 4
  %tobool1023.not = icmp eq ptr %509, null
  br i1 %tobool1023.not, label %land.lhs.true1018.cond.false1034_crit_edge, label %cond.true1024

land.lhs.true1018.cond.false1034_crit_edge:       ; preds = %land.lhs.true1018
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1034

cond.true1024:                                    ; preds = %land.lhs.true1018
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx1030 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %510 = ptrtoint ptr %arrayidx1030 to i32
  call void @__asan_load4_noabort(i32 %510)
  %511 = load ptr, ptr %arrayidx1030, align 8
  %512 = ptrtoint ptr %511 to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load i32, ptr %511, align 4
  %add1033 = add i32 %513, 8108
  %cp_hqd_vmid = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 131
  %514 = ptrtoint ptr %cp_hqd_vmid to i32
  call void @__asan_load4_noabort(i32 %514)
  %515 = load i32, ptr %cp_hqd_vmid, align 4
  tail call void %509(ptr noundef %1, i32 noundef %add1033, i32 noundef %515, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end1041

cond.false1034:                                   ; preds = %land.lhs.true1018.cond.false1034_crit_edge, %land.lhs.true1013.cond.false1034_crit_edge, %cond.end1008.cond.false1034_crit_edge
  %arrayidx1036 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %516 = ptrtoint ptr %arrayidx1036 to i32
  call void @__asan_load4_noabort(i32 %516)
  %517 = load ptr, ptr %arrayidx1036, align 8
  %518 = ptrtoint ptr %517 to i32
  call void @__asan_load4_noabort(i32 %518)
  %519 = load i32, ptr %517, align 4
  %add1039 = add i32 %519, 8108
  %cp_hqd_vmid1040 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 131
  %520 = ptrtoint ptr %cp_hqd_vmid1040 to i32
  call void @__asan_load4_noabort(i32 %520)
  %521 = load i32, ptr %cp_hqd_vmid1040, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add1039, i32 noundef %521, i32 noundef 0) #13
  br label %cond.end1041

cond.end1041:                                     ; preds = %cond.false1034, %cond.true1024
  %522 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %522)
  %523 = load i32, ptr %virt, align 8
  %and1044 = and i32 %523, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1044)
  %tobool1045.not = icmp eq i32 %and1044, 0
  br i1 %tobool1045.not, label %cond.end1041.cond.false1067_crit_edge, label %land.lhs.true1046

cond.end1041.cond.false1067_crit_edge:            ; preds = %cond.end1041
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1067

land.lhs.true1046:                                ; preds = %cond.end1041
  %funcs1049 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %524 = ptrtoint ptr %funcs1049 to i32
  call void @__asan_load4_noabort(i32 %524)
  %525 = load ptr, ptr %funcs1049, align 4
  %tobool1050.not = icmp eq ptr %525, null
  br i1 %tobool1050.not, label %land.lhs.true1046.cond.false1067_crit_edge, label %land.lhs.true1051

land.lhs.true1046.cond.false1067_crit_edge:       ; preds = %land.lhs.true1046
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1067

land.lhs.true1051:                                ; preds = %land.lhs.true1046
  %sriov_wreg1055 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %525, i32 0, i32 12
  %526 = ptrtoint ptr %sriov_wreg1055 to i32
  call void @__asan_load4_noabort(i32 %526)
  %527 = load ptr, ptr %sriov_wreg1055, align 4
  %tobool1056.not = icmp eq ptr %527, null
  br i1 %tobool1056.not, label %land.lhs.true1051.cond.false1067_crit_edge, label %cond.true1057

land.lhs.true1051.cond.false1067_crit_edge:       ; preds = %land.lhs.true1051
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1067

cond.true1057:                                    ; preds = %land.lhs.true1051
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx1063 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %528 = ptrtoint ptr %arrayidx1063 to i32
  call void @__asan_load4_noabort(i32 %528)
  %529 = load ptr, ptr %arrayidx1063, align 8
  %530 = ptrtoint ptr %529 to i32
  call void @__asan_load4_noabort(i32 %530)
  %531 = load i32, ptr %529, align 4
  %add1066 = add i32 %531, 8109
  %cp_hqd_persistent_state = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 132
  %532 = ptrtoint ptr %cp_hqd_persistent_state to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load i32, ptr %cp_hqd_persistent_state, align 4
  tail call void %527(ptr noundef %1, i32 noundef %add1066, i32 noundef %533, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end1074

cond.false1067:                                   ; preds = %land.lhs.true1051.cond.false1067_crit_edge, %land.lhs.true1046.cond.false1067_crit_edge, %cond.end1041.cond.false1067_crit_edge
  %arrayidx1069 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %534 = ptrtoint ptr %arrayidx1069 to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load ptr, ptr %arrayidx1069, align 8
  %536 = ptrtoint ptr %535 to i32
  call void @__asan_load4_noabort(i32 %536)
  %537 = load i32, ptr %535, align 4
  %add1072 = add i32 %537, 8109
  %cp_hqd_persistent_state1073 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 132
  %538 = ptrtoint ptr %cp_hqd_persistent_state1073 to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load i32, ptr %cp_hqd_persistent_state1073, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add1072, i32 noundef %539, i32 noundef 0) #13
  br label %cond.end1074

cond.end1074:                                     ; preds = %cond.false1067, %cond.true1057
  %540 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load i32, ptr %virt, align 8
  %and1077 = and i32 %541, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1077)
  %tobool1078.not = icmp eq i32 %and1077, 0
  br i1 %tobool1078.not, label %cond.end1074.cond.false1100_crit_edge, label %land.lhs.true1079

cond.end1074.cond.false1100_crit_edge:            ; preds = %cond.end1074
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1100

land.lhs.true1079:                                ; preds = %cond.end1074
  %funcs1082 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %542 = ptrtoint ptr %funcs1082 to i32
  call void @__asan_load4_noabort(i32 %542)
  %543 = load ptr, ptr %funcs1082, align 4
  %tobool1083.not = icmp eq ptr %543, null
  br i1 %tobool1083.not, label %land.lhs.true1079.cond.false1100_crit_edge, label %land.lhs.true1084

land.lhs.true1079.cond.false1100_crit_edge:       ; preds = %land.lhs.true1079
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1100

land.lhs.true1084:                                ; preds = %land.lhs.true1079
  %sriov_wreg1088 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %543, i32 0, i32 12
  %544 = ptrtoint ptr %sriov_wreg1088 to i32
  call void @__asan_load4_noabort(i32 %544)
  %545 = load ptr, ptr %sriov_wreg1088, align 4
  %tobool1089.not = icmp eq ptr %545, null
  br i1 %tobool1089.not, label %land.lhs.true1084.cond.false1100_crit_edge, label %cond.true1090

land.lhs.true1084.cond.false1100_crit_edge:       ; preds = %land.lhs.true1084
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1100

cond.true1090:                                    ; preds = %land.lhs.true1084
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx1096 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %546 = ptrtoint ptr %arrayidx1096 to i32
  call void @__asan_load4_noabort(i32 %546)
  %547 = load ptr, ptr %arrayidx1096, align 8
  %548 = ptrtoint ptr %547 to i32
  call void @__asan_load4_noabort(i32 %548)
  %549 = load i32, ptr %547, align 4
  %add1099 = add i32 %549, 8107
  %cp_hqd_active = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 130
  %550 = ptrtoint ptr %cp_hqd_active to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load i32, ptr %cp_hqd_active, align 4
  tail call void %545(ptr noundef %1, i32 noundef %add1099, i32 noundef %551, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end1107

cond.false1100:                                   ; preds = %land.lhs.true1084.cond.false1100_crit_edge, %land.lhs.true1079.cond.false1100_crit_edge, %cond.end1074.cond.false1100_crit_edge
  %arrayidx1102 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %552 = ptrtoint ptr %arrayidx1102 to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load ptr, ptr %arrayidx1102, align 8
  %554 = ptrtoint ptr %553 to i32
  call void @__asan_load4_noabort(i32 %554)
  %555 = load i32, ptr %553, align 4
  %add1105 = add i32 %555, 8107
  %cp_hqd_active1106 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 130
  %556 = ptrtoint ptr %cp_hqd_active1106 to i32
  call void @__asan_load4_noabort(i32 %556)
  %557 = load i32, ptr %cp_hqd_active1106, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add1105, i32 noundef %557, i32 noundef 0) #13
  br label %cond.end1107

cond.end1107:                                     ; preds = %cond.false1100, %cond.true1090
  %558 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %558)
  %559 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %559)
  %tobool1109.not = icmp eq i8 %559, 0
  br i1 %tobool1109.not, label %cond.end1107.if.end1217_crit_edge, label %if.then1110

cond.end1107.if.end1217_crit_edge:                ; preds = %cond.end1107
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end1217

if.then1110:                                      ; preds = %cond.end1107
  %560 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %560)
  %561 = load i32, ptr %virt, align 8
  %and1113 = and i32 %561, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1113)
  %tobool1114.not = icmp eq i32 %and1113, 0
  br i1 %tobool1114.not, label %if.then1110.cond.false1205.sink.split_crit_edge, label %land.lhs.true1115

if.then1110.cond.false1205.sink.split_crit_edge:  ; preds = %if.then1110
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1205.sink.split

land.lhs.true1115:                                ; preds = %if.then1110
  %funcs1118 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %562 = ptrtoint ptr %funcs1118 to i32
  call void @__asan_load4_noabort(i32 %562)
  %563 = load ptr, ptr %funcs1118, align 4
  %tobool1119.not = icmp eq ptr %563, null
  br i1 %tobool1119.not, label %land.lhs.true1115.cond.false1205.sink.split_crit_edge, label %land.lhs.true1120

land.lhs.true1115.cond.false1205.sink.split_crit_edge: ; preds = %land.lhs.true1115
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1205.sink.split

land.lhs.true1120:                                ; preds = %land.lhs.true1115
  %sriov_wreg1124 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %563, i32 0, i32 12
  %564 = ptrtoint ptr %sriov_wreg1124 to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load ptr, ptr %sriov_wreg1124, align 4
  %tobool1125.not = icmp eq ptr %565, null
  br i1 %tobool1125.not, label %land.lhs.true1183, label %cond.true1126

cond.true1126:                                    ; preds = %land.lhs.true1120
  %arrayidx1132 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %566 = ptrtoint ptr %arrayidx1132 to i32
  call void @__asan_load4_noabort(i32 %566)
  %567 = load ptr, ptr %arrayidx1132, align 8
  %568 = ptrtoint ptr %567 to i32
  call void @__asan_load4_noabort(i32 %568)
  %569 = load i32, ptr %567, align 4
  %add1135 = add i32 %569, 7768
  %sriov_rreg1149 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %563, i32 0, i32 13
  %570 = ptrtoint ptr %sriov_rreg1149 to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load ptr, ptr %sriov_rreg1149, align 4
  %tobool1150.not = icmp eq ptr %571, null
  br i1 %tobool1150.not, label %cond.false1162, label %cond.true1151

cond.true1151:                                    ; preds = %cond.true1126
  call void @__sanitizer_cov_trace_pc() #15
  %call1161 = tail call i32 %571(ptr noundef %1, i32 noundef %add1135, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end1169

cond.false1162:                                   ; preds = %cond.true1126
  call void @__sanitizer_cov_trace_pc() #15
  %call1168 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add1135, i32 noundef 0) #13
  br label %cond.end1169

cond.end1169:                                     ; preds = %cond.false1162, %cond.true1151
  %cond1170 = phi i32 [ %call1161, %cond.true1151 ], [ %call1168, %cond.false1162 ]
  %or1172 = or i32 %cond1170, 2
  tail call void %565(ptr noundef %1, i32 noundef %add1135, i32 noundef %or1172, i32 noundef 0, i32 noundef 1) #13
  br label %if.end1217

land.lhs.true1183:                                ; preds = %land.lhs.true1120
  %572 = ptrtoint ptr %funcs1118 to i32
  call void @__asan_load4_noabort(i32 %572)
  %.pr16 = load ptr, ptr %funcs1118, align 4
  %arrayidx11756 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %573 = ptrtoint ptr %arrayidx11756 to i32
  call void @__asan_load4_noabort(i32 %573)
  %574 = load ptr, ptr %arrayidx11756, align 8
  %575 = ptrtoint ptr %574 to i32
  call void @__asan_load4_noabort(i32 %575)
  %576 = load i32, ptr %574, align 4
  %add11787 = add i32 %576, 7768
  %tobool1187.not = icmp eq ptr %.pr16, null
  br i1 %tobool1187.not, label %land.lhs.true1183.cond.false1205_crit_edge, label %land.lhs.true1188

land.lhs.true1183.cond.false1205_crit_edge:       ; preds = %land.lhs.true1183
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1205

land.lhs.true1188:                                ; preds = %land.lhs.true1183
  %sriov_rreg1192 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr16, i32 0, i32 13
  %577 = ptrtoint ptr %sriov_rreg1192 to i32
  call void @__asan_load4_noabort(i32 %577)
  %578 = load ptr, ptr %sriov_rreg1192, align 4
  %tobool1193.not = icmp eq ptr %578, null
  br i1 %tobool1193.not, label %land.lhs.true1188.cond.false1205_crit_edge, label %cond.true1194

land.lhs.true1188.cond.false1205_crit_edge:       ; preds = %land.lhs.true1188
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false1205

cond.true1194:                                    ; preds = %land.lhs.true1188
  call void @__sanitizer_cov_trace_pc() #15
  %call1204 = tail call i32 %578(ptr noundef %1, i32 noundef %add11787, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end1212

cond.false1205.sink.split:                        ; preds = %land.lhs.true1115.cond.false1205.sink.split_crit_edge, %if.then1110.cond.false1205.sink.split_crit_edge
  %arrayidx1175617 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %579 = ptrtoint ptr %arrayidx1175617 to i32
  call void @__asan_load4_noabort(i32 %579)
  %580 = load ptr, ptr %arrayidx1175617, align 8
  %581 = ptrtoint ptr %580 to i32
  call void @__asan_load4_noabort(i32 %581)
  %582 = load i32, ptr %580, align 4
  %add1178718 = add i32 %582, 7768
  br label %cond.false1205

cond.false1205:                                   ; preds = %cond.false1205.sink.split, %land.lhs.true1188.cond.false1205_crit_edge, %land.lhs.true1183.cond.false1205_crit_edge
  %add117810 = phi i32 [ %add11787, %land.lhs.true1188.cond.false1205_crit_edge ], [ %add11787, %land.lhs.true1183.cond.false1205_crit_edge ], [ %add1178718, %cond.false1205.sink.split ]
  %call1211 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add117810, i32 noundef 0) #13
  br label %cond.end1212

cond.end1212:                                     ; preds = %cond.false1205, %cond.true1194
  %add11788 = phi i32 [ %add11787, %cond.true1194 ], [ %add117810, %cond.false1205 ]
  %cond1213 = phi i32 [ %call1204, %cond.true1194 ], [ %call1211, %cond.false1205 ]
  %or1215 = or i32 %cond1213, 2
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add11788, i32 noundef %or1215, i32 noundef 0) #13
  br label %if.end1217

if.end1217:                                       ; preds = %cond.end1212, %cond.end1169, %cond.end1107.if.end1217_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_compute_mqd_init(ptr noundef %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %mqd_ptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 21
  %2 = ptrtoint ptr %mqd_ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mqd_ptr, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1070528512, ptr %3, align 4
  %compute_pipelinestat_enable = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 11
  %5 = ptrtoint ptr %compute_pipelinestat_enable to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %compute_pipelinestat_enable, align 4
  %compute_static_thread_mgmt_se0 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 23
  %6 = ptrtoint ptr %compute_static_thread_mgmt_se0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %compute_static_thread_mgmt_se0, align 4
  %compute_static_thread_mgmt_se1 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 24
  %7 = ptrtoint ptr %compute_static_thread_mgmt_se1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %compute_static_thread_mgmt_se1, align 4
  %compute_static_thread_mgmt_se2 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 26
  %8 = ptrtoint ptr %compute_static_thread_mgmt_se2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %compute_static_thread_mgmt_se2, align 4
  %compute_static_thread_mgmt_se3 = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 27
  %9 = ptrtoint ptr %compute_static_thread_mgmt_se3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %compute_static_thread_mgmt_se3, align 4
  %compute_misc_reserved = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 32
  %10 = ptrtoint ptr %compute_misc_reserved to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 3, ptr %compute_misc_reserved, align 4
  %eop_gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 22
  %11 = ptrtoint ptr %eop_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %eop_gpu_addr, align 8
  %shr = lshr i64 %12, 8
  %conv = trunc i64 %shr to i32
  %cp_hqd_eop_base_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 165
  %13 = ptrtoint ptr %cp_hqd_eop_base_addr_lo to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv, ptr %cp_hqd_eop_base_addr_lo, align 4
  %shr2 = lshr i64 %12, 40
  %conv4 = trunc i64 %shr2 to i32
  %cp_hqd_eop_base_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 166
  %14 = ptrtoint ptr %cp_hqd_eop_base_addr_hi to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %conv4, ptr %cp_hqd_eop_base_addr_hi, align 4
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %15 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %virt, align 8
  %and = and i32 %16, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %17 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %18, null
  br i1 %tobool5.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %18, i32 0, i32 13
  %19 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sriov_rreg, align 4
  %tobool10.not = icmp eq ptr %20, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx, align 8
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  %add = add i32 %24, 8144
  %call = tail call i32 %20(ptr noundef %1, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %25 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx18, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  %add21 = add i32 %28, 8144
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add21, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call22, %cond.false ]
  %and23 = and i32 %cond, -64
  %or = or i32 %and23, 8
  %cp_hqd_eop_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 167
  %29 = ptrtoint ptr %cp_hqd_eop_control to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or, ptr %cp_hqd_eop_control, align 4
  %30 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %virt, align 8
  %and26 = and i32 %31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %cond.end.cond.false50_crit_edge, label %land.lhs.true28

cond.end.cond.false50_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50

land.lhs.true28:                                  ; preds = %cond.end
  %funcs31 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %32 = ptrtoint ptr %funcs31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %funcs31, align 4
  %tobool32.not = icmp eq ptr %33, null
  br i1 %tobool32.not, label %land.lhs.true28.cond.false50_crit_edge, label %land.lhs.true33

land.lhs.true28.cond.false50_crit_edge:           ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %sriov_rreg37 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %33, i32 0, i32 13
  %34 = ptrtoint ptr %sriov_rreg37 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_rreg37, align 4
  %tobool38.not = icmp eq ptr %35, null
  br i1 %tobool38.not, label %land.lhs.true33.cond.false50_crit_edge, label %cond.true39

land.lhs.true33.cond.false50_crit_edge:           ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false50

cond.true39:                                      ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx45 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %36 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx45, align 8
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %37, align 4
  %add48 = add i32 %39, 8120
  %call49 = tail call i32 %35(ptr noundef %1, i32 noundef %add48, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end57

cond.false50:                                     ; preds = %land.lhs.true33.cond.false50_crit_edge, %land.lhs.true28.cond.false50_crit_edge, %cond.end.cond.false50_crit_edge
  %arrayidx52 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %40 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx52, align 8
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  %add55 = add i32 %43, 8120
  %call56 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add55, i32 noundef 0) #13
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false50, %cond.true39
  %cond58 = phi i32 [ %call49, %cond.true39 ], [ %call56, %cond.false50 ]
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %44 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool59.not = icmp eq i8 %45, 0
  br i1 %tobool59.not, label %if.else, label %if.then

if.then:                                          ; preds = %cond.end57
  call void @__sanitizer_cov_trace_pc() #15
  %and60 = and i32 %cond58, 536870915
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %46 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %doorbell_index, align 8
  %shl = shl i32 %47, 2
  %and61 = and i32 %shl, 268435452
  %or62 = or i32 %and60, %and61
  %or64 = or i32 %or62, 1073741824
  br label %if.end

if.else:                                          ; preds = %cond.end57
  call void @__sanitizer_cov_trace_pc() #15
  %and69 = and i32 %cond58, -1073741825
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tmp.0 = phi i32 [ %or64, %if.then ], [ %and69, %if.else ]
  %cp_hqd_pq_doorbell_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 143
  %48 = ptrtoint ptr %cp_hqd_pq_doorbell_control to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %tmp.0, ptr %cp_hqd_pq_doorbell_control, align 4
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %49 = ptrtoint ptr %wptr to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 0, ptr %wptr, align 8
  %cp_hqd_dequeue_request = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 152
  %50 = ptrtoint ptr %cp_hqd_dequeue_request to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %cp_hqd_dequeue_request, align 4
  %cp_hqd_pq_rptr = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 138
  %51 = ptrtoint ptr %cp_hqd_pq_rptr to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %cp_hqd_pq_rptr, align 4
  %cp_hqd_pq_wptr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 182
  %52 = ptrtoint ptr %cp_hqd_pq_wptr_lo to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 0, ptr %cp_hqd_pq_wptr_lo, align 4
  %cp_hqd_pq_wptr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 183
  %53 = ptrtoint ptr %cp_hqd_pq_wptr_hi to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %cp_hqd_pq_wptr_hi, align 4
  %mqd_gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 20
  %54 = ptrtoint ptr %mqd_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %mqd_gpu_addr, align 8
  %56 = trunc i64 %55 to i32
  %conv72 = and i32 %56, -4
  %cp_mqd_base_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 128
  %57 = ptrtoint ptr %cp_mqd_base_addr_lo to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %conv72, ptr %cp_mqd_base_addr_lo, align 4
  %58 = load i64, ptr %mqd_gpu_addr, align 8
  %shr74 = lshr i64 %58, 32
  %conv76 = trunc i64 %shr74 to i32
  %cp_mqd_base_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 129
  %59 = ptrtoint ptr %cp_mqd_base_addr_hi to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %conv76, ptr %cp_mqd_base_addr_hi, align 4
  %60 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %virt, align 8
  %and79 = and i32 %61, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and79)
  %tobool80.not = icmp eq i32 %and79, 0
  br i1 %tobool80.not, label %if.end.cond.false103_crit_edge, label %land.lhs.true81

if.end.cond.false103_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false103

land.lhs.true81:                                  ; preds = %if.end
  %funcs84 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %62 = ptrtoint ptr %funcs84 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %funcs84, align 4
  %tobool85.not = icmp eq ptr %63, null
  br i1 %tobool85.not, label %land.lhs.true81.cond.false103_crit_edge, label %land.lhs.true86

land.lhs.true81.cond.false103_crit_edge:          ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false103

land.lhs.true86:                                  ; preds = %land.lhs.true81
  %sriov_rreg90 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %63, i32 0, i32 13
  %64 = ptrtoint ptr %sriov_rreg90 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %sriov_rreg90, align 4
  %tobool91.not = icmp eq ptr %65, null
  br i1 %tobool91.not, label %land.lhs.true86.cond.false103_crit_edge, label %cond.true92

land.lhs.true86.cond.false103_crit_edge:          ; preds = %land.lhs.true86
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false103

cond.true92:                                      ; preds = %land.lhs.true86
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx98 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %66 = ptrtoint ptr %arrayidx98 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx98, align 8
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %67, align 4
  %add101 = add i32 %69, 8139
  %call102 = tail call i32 %65(ptr noundef %1, i32 noundef %add101, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end110

cond.false103:                                    ; preds = %land.lhs.true86.cond.false103_crit_edge, %land.lhs.true81.cond.false103_crit_edge, %if.end.cond.false103_crit_edge
  %arrayidx105 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %70 = ptrtoint ptr %arrayidx105 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx105, align 8
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 4
  %add108 = add i32 %73, 8139
  %call109 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add108, i32 noundef 0) #13
  br label %cond.end110

cond.end110:                                      ; preds = %cond.false103, %cond.true92
  %cond111 = phi i32 [ %call102, %cond.true92 ], [ %call109, %cond.false103 ]
  %and112 = and i32 %cond111, -16
  %cp_mqd_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 162
  %74 = ptrtoint ptr %cp_mqd_control to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %and112, ptr %cp_mqd_control, align 4
  %gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 12
  %75 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %gpu_addr, align 8
  %shr114 = lshr i64 %76, 8
  %conv115 = trunc i64 %shr114 to i32
  %cp_hqd_pq_base_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 136
  %77 = ptrtoint ptr %cp_hqd_pq_base_lo to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %conv115, ptr %cp_hqd_pq_base_lo, align 4
  %shr116 = lshr i64 %76, 40
  %conv118 = trunc i64 %shr116 to i32
  %cp_hqd_pq_base_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 137
  %78 = ptrtoint ptr %cp_hqd_pq_base_hi to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %conv118, ptr %cp_hqd_pq_base_hi, align 4
  %79 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %virt, align 8
  %and121 = and i32 %80, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and121)
  %tobool122.not = icmp eq i32 %and121, 0
  br i1 %tobool122.not, label %cond.end110.cond.false145_crit_edge, label %land.lhs.true123

cond.end110.cond.false145_crit_edge:              ; preds = %cond.end110
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false145

land.lhs.true123:                                 ; preds = %cond.end110
  %funcs126 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %81 = ptrtoint ptr %funcs126 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %funcs126, align 4
  %tobool127.not = icmp eq ptr %82, null
  br i1 %tobool127.not, label %land.lhs.true123.cond.false145_crit_edge, label %land.lhs.true128

land.lhs.true123.cond.false145_crit_edge:         ; preds = %land.lhs.true123
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false145

land.lhs.true128:                                 ; preds = %land.lhs.true123
  %sriov_rreg132 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %82, i32 0, i32 13
  %83 = ptrtoint ptr %sriov_rreg132 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %sriov_rreg132, align 4
  %tobool133.not = icmp eq ptr %84, null
  br i1 %tobool133.not, label %land.lhs.true128.cond.false145_crit_edge, label %cond.true134

land.lhs.true128.cond.false145_crit_edge:         ; preds = %land.lhs.true128
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false145

cond.true134:                                     ; preds = %land.lhs.true128
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx140 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %85 = ptrtoint ptr %arrayidx140 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx140, align 8
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %86, align 4
  %add143 = add i32 %88, 8122
  %call144 = tail call i32 %84(ptr noundef %1, i32 noundef %add143, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end152

cond.false145:                                    ; preds = %land.lhs.true128.cond.false145_crit_edge, %land.lhs.true123.cond.false145_crit_edge, %cond.end110.cond.false145_crit_edge
  %arrayidx147 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %89 = ptrtoint ptr %arrayidx147 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx147, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add150 = add i32 %92, 8122
  %call151 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add150, i32 noundef 0) #13
  br label %cond.end152

cond.end152:                                      ; preds = %cond.false145, %cond.true134
  %cond153 = phi i32 [ %call144, %cond.true134 ], [ %call151, %cond.false145 ]
  %and154 = and i32 %cond153, 268222656
  %ring_size = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 9
  %93 = ptrtoint ptr %ring_size to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %ring_size, align 8
  %div1 = lshr i32 %94, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %94)
  %cmp.i = icmp ugt i32 %94, 7
  %sub.i2 = add nsw i32 %div1, -1
  %95 = tail call i32 @llvm.ctlz.i32(i32 %sub.i2, i1 false) #13, !range !477
  %phi.bo = sub nsw i32 31, %95
  %phi.bo4 = and i32 %phi.bo, 63
  %cond197 = select i1 %cmp.i, i32 %phi.bo4, i32 63
  %or201 = or i32 %and154, %cond197
  %or213 = or i32 %or201, -1073676288
  %cp_hqd_pq_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 145
  %96 = ptrtoint ptr %cp_hqd_pq_control to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %or213, ptr %cp_hqd_pq_control, align 4
  %gpu_addr214 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %97 = ptrtoint ptr %gpu_addr214 to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %gpu_addr214, align 8
  %rptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 6
  %99 = ptrtoint ptr %rptr_offs to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %rptr_offs, align 8
  %mul = shl i32 %100, 2
  %conv215 = zext i32 %mul to i64
  %add216 = add i64 %98, %conv215
  %101 = trunc i64 %add216 to i32
  %conv218 = and i32 %101, -4
  %cp_hqd_pq_rptr_report_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 139
  %102 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_lo to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %conv218, ptr %cp_hqd_pq_rptr_report_addr_lo, align 4
  %shr219 = lshr i64 %add216, 32
  %conv221 = trunc i64 %shr219 to i32
  %and222 = and i32 %conv221, 65535
  %cp_hqd_pq_rptr_report_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 140
  %103 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_hi to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %and222, ptr %cp_hqd_pq_rptr_report_addr_hi, align 4
  %104 = load i64, ptr %gpu_addr214, align 8
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %105 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %wptr_offs, align 8
  %mul225 = shl i32 %106, 2
  %conv226 = zext i32 %mul225 to i64
  %add227 = add i64 %104, %conv226
  %107 = trunc i64 %add227 to i32
  %conv229 = and i32 %107, -4
  %cp_hqd_pq_wptr_poll_addr_lo = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 141
  %108 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_lo to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %conv229, ptr %cp_hqd_pq_wptr_poll_addr_lo, align 4
  %shr230 = lshr i64 %add227, 32
  %conv232 = trunc i64 %shr230 to i32
  %and233 = and i32 %conv232, 65535
  %cp_hqd_pq_wptr_poll_addr_hi = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 142
  %109 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_hi to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %and233, ptr %cp_hqd_pq_wptr_poll_addr_hi, align 4
  %110 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %111)
  %tobool235.not = icmp eq i8 %111, 0
  br i1 %tobool235.not, label %cond.end152.if.end283_crit_edge, label %if.then236

cond.end152.if.end283_crit_edge:                  ; preds = %cond.end152
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end283

if.then236:                                       ; preds = %cond.end152
  %112 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %virt, align 8
  %and239 = and i32 %113, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and239)
  %tobool240.not = icmp eq i32 %and239, 0
  br i1 %tobool240.not, label %if.then236.cond.false263_crit_edge, label %land.lhs.true241

if.then236.cond.false263_crit_edge:               ; preds = %if.then236
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false263

land.lhs.true241:                                 ; preds = %if.then236
  %funcs244 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %114 = ptrtoint ptr %funcs244 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %funcs244, align 4
  %tobool245.not = icmp eq ptr %115, null
  br i1 %tobool245.not, label %land.lhs.true241.cond.false263_crit_edge, label %land.lhs.true246

land.lhs.true241.cond.false263_crit_edge:         ; preds = %land.lhs.true241
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false263

land.lhs.true246:                                 ; preds = %land.lhs.true241
  %sriov_rreg250 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %115, i32 0, i32 13
  %116 = ptrtoint ptr %sriov_rreg250 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %sriov_rreg250, align 4
  %tobool251.not = icmp eq ptr %117, null
  br i1 %tobool251.not, label %land.lhs.true246.cond.false263_crit_edge, label %cond.true252

land.lhs.true246.cond.false263_crit_edge:         ; preds = %land.lhs.true246
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false263

cond.true252:                                     ; preds = %land.lhs.true246
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx258 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %118 = ptrtoint ptr %arrayidx258 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %arrayidx258, align 8
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %119, align 4
  %add261 = add i32 %121, 8120
  %call262 = tail call i32 %117(ptr noundef %1, i32 noundef %add261, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end270

cond.false263:                                    ; preds = %land.lhs.true246.cond.false263_crit_edge, %land.lhs.true241.cond.false263_crit_edge, %if.then236.cond.false263_crit_edge
  %arrayidx265 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %122 = ptrtoint ptr %arrayidx265 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %arrayidx265, align 8
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %123, align 4
  %add268 = add i32 %125, 8120
  %call269 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add268, i32 noundef 0) #13
  br label %cond.end270

cond.end270:                                      ; preds = %cond.false263, %cond.true252
  %cond271 = phi i32 [ %call262, %cond.true252 ], [ %call269, %cond.false263 ]
  %and272 = and i32 %cond271, 536870915
  %doorbell_index273 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %126 = ptrtoint ptr %doorbell_index273 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %doorbell_index273, align 8
  %shl274 = shl i32 %127, 2
  %and275 = and i32 %shl274, 268435452
  %or276 = or i32 %and272, %and275
  %or278 = or i32 %or276, 1073741824
  br label %if.end283

if.end283:                                        ; preds = %cond.end270, %cond.end152.if.end283_crit_edge
  %tmp.1 = phi i32 [ %or278, %cond.end270 ], [ 0, %cond.end152.if.end283_crit_edge ]
  %128 = ptrtoint ptr %cp_hqd_pq_doorbell_control to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %tmp.1, ptr %cp_hqd_pq_doorbell_control, align 4
  %129 = ptrtoint ptr %wptr to i32
  call void @__asan_store8_noabort(i32 %129)
  store i64 0, ptr %wptr, align 8
  %130 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %virt, align 8
  %and288 = and i32 %131, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and288)
  %tobool289.not = icmp eq i32 %and288, 0
  br i1 %tobool289.not, label %if.end283.cond.false312_crit_edge, label %land.lhs.true290

if.end283.cond.false312_crit_edge:                ; preds = %if.end283
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false312

land.lhs.true290:                                 ; preds = %if.end283
  %funcs293 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %132 = ptrtoint ptr %funcs293 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %funcs293, align 4
  %tobool294.not = icmp eq ptr %133, null
  br i1 %tobool294.not, label %land.lhs.true290.cond.false312_crit_edge, label %land.lhs.true295

land.lhs.true290.cond.false312_crit_edge:         ; preds = %land.lhs.true290
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false312

land.lhs.true295:                                 ; preds = %land.lhs.true290
  %sriov_rreg299 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %133, i32 0, i32 13
  %134 = ptrtoint ptr %sriov_rreg299 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %sriov_rreg299, align 4
  %tobool300.not = icmp eq ptr %135, null
  br i1 %tobool300.not, label %land.lhs.true295.cond.false312_crit_edge, label %cond.true301

land.lhs.true295.cond.false312_crit_edge:         ; preds = %land.lhs.true295
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false312

cond.true301:                                     ; preds = %land.lhs.true295
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx307 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %136 = ptrtoint ptr %arrayidx307 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %arrayidx307, align 8
  %138 = ptrtoint ptr %137 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %137, align 4
  %add310 = add i32 %139, 8115
  %call311 = tail call i32 %135(ptr noundef %1, i32 noundef %add310, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end319

cond.false312:                                    ; preds = %land.lhs.true295.cond.false312_crit_edge, %land.lhs.true290.cond.false312_crit_edge, %if.end283.cond.false312_crit_edge
  %arrayidx314 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %140 = ptrtoint ptr %arrayidx314 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %arrayidx314, align 8
  %142 = ptrtoint ptr %141 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %141, align 4
  %add317 = add i32 %143, 8115
  %call318 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add317, i32 noundef 0) #13
  br label %cond.end319

cond.end319:                                      ; preds = %cond.false312, %cond.true301
  %cond320 = phi i32 [ %call311, %cond.true301 ], [ %call318, %cond.false312 ]
  %144 = ptrtoint ptr %cp_hqd_pq_rptr to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %cond320, ptr %cp_hqd_pq_rptr, align 4
  %cp_hqd_vmid = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 131
  %145 = ptrtoint ptr %cp_hqd_vmid to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 0, ptr %cp_hqd_vmid, align 4
  %146 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %virt, align 8
  %and324 = and i32 %147, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and324)
  %tobool325.not = icmp eq i32 %and324, 0
  br i1 %tobool325.not, label %cond.end319.cond.false348_crit_edge, label %land.lhs.true326

cond.end319.cond.false348_crit_edge:              ; preds = %cond.end319
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false348

land.lhs.true326:                                 ; preds = %cond.end319
  %funcs329 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %148 = ptrtoint ptr %funcs329 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %funcs329, align 4
  %tobool330.not = icmp eq ptr %149, null
  br i1 %tobool330.not, label %land.lhs.true326.cond.false348_crit_edge, label %land.lhs.true331

land.lhs.true326.cond.false348_crit_edge:         ; preds = %land.lhs.true326
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false348

land.lhs.true331:                                 ; preds = %land.lhs.true326
  %sriov_rreg335 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %149, i32 0, i32 13
  %150 = ptrtoint ptr %sriov_rreg335 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %sriov_rreg335, align 4
  %tobool336.not = icmp eq ptr %151, null
  br i1 %tobool336.not, label %land.lhs.true331.cond.false348_crit_edge, label %cond.true337

land.lhs.true331.cond.false348_crit_edge:         ; preds = %land.lhs.true331
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false348

cond.true337:                                     ; preds = %land.lhs.true331
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx343 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %152 = ptrtoint ptr %arrayidx343 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %arrayidx343, align 8
  %154 = ptrtoint ptr %153 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %153, align 4
  %add346 = add i32 %155, 8109
  %call347 = tail call i32 %151(ptr noundef %1, i32 noundef %add346, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end355

cond.false348:                                    ; preds = %land.lhs.true331.cond.false348_crit_edge, %land.lhs.true326.cond.false348_crit_edge, %cond.end319.cond.false348_crit_edge
  %arrayidx350 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %156 = ptrtoint ptr %arrayidx350 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %arrayidx350, align 8
  %158 = ptrtoint ptr %157 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %157, align 4
  %add353 = add i32 %159, 8109
  %call354 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add353, i32 noundef 0) #13
  br label %cond.end355

cond.end355:                                      ; preds = %cond.false348, %cond.true337
  %cond356 = phi i32 [ %call347, %cond.true337 ], [ %call354, %cond.false348 ]
  %and357 = and i32 %cond356, -261889
  %or358 = or i32 %and357, 21248
  %cp_hqd_persistent_state = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 132
  %160 = ptrtoint ptr %cp_hqd_persistent_state to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %or358, ptr %cp_hqd_persistent_state, align 4
  %161 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %virt, align 8
  %and361 = and i32 %162, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and361)
  %tobool362.not = icmp eq i32 %and361, 0
  br i1 %tobool362.not, label %cond.end355.cond.false385_crit_edge, label %land.lhs.true363

cond.end355.cond.false385_crit_edge:              ; preds = %cond.end355
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false385

land.lhs.true363:                                 ; preds = %cond.end355
  %funcs366 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %163 = ptrtoint ptr %funcs366 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %funcs366, align 4
  %tobool367.not = icmp eq ptr %164, null
  br i1 %tobool367.not, label %land.lhs.true363.cond.false385_crit_edge, label %land.lhs.true368

land.lhs.true363.cond.false385_crit_edge:         ; preds = %land.lhs.true363
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false385

land.lhs.true368:                                 ; preds = %land.lhs.true363
  %sriov_rreg372 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %164, i32 0, i32 13
  %165 = ptrtoint ptr %sriov_rreg372 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %sriov_rreg372, align 4
  %tobool373.not = icmp eq ptr %166, null
  br i1 %tobool373.not, label %land.lhs.true368.cond.false385_crit_edge, label %cond.true374

land.lhs.true368.cond.false385_crit_edge:         ; preds = %land.lhs.true368
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false385

cond.true374:                                     ; preds = %land.lhs.true368
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx380 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %167 = ptrtoint ptr %arrayidx380 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %arrayidx380, align 8
  %169 = ptrtoint ptr %168 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %168, align 4
  %add383 = add i32 %170, 8126
  %call384 = tail call i32 %166(ptr noundef %1, i32 noundef %add383, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end392

cond.false385:                                    ; preds = %land.lhs.true368.cond.false385_crit_edge, %land.lhs.true363.cond.false385_crit_edge, %cond.end355.cond.false385_crit_edge
  %arrayidx387 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %171 = ptrtoint ptr %arrayidx387 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %arrayidx387, align 8
  %173 = ptrtoint ptr %172 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %172, align 4
  %add390 = add i32 %174, 8126
  %call391 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add390, i32 noundef 0) #13
  br label %cond.end392

cond.end392:                                      ; preds = %cond.false385, %cond.true374
  %cond393 = phi i32 [ %call384, %cond.true374 ], [ %call391, %cond.false385 ]
  %or395 = or i32 %cond393, 3145728
  %cp_hqd_ib_control = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 149
  %175 = ptrtoint ptr %cp_hqd_ib_control to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 %or395, ptr %cp_hqd_ib_control, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %176 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %funcs.i, align 4
  %178 = ptrtoint ptr %177 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %177, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %179)
  %cmp.i3 = icmp eq i32 %179, 1
  br i1 %cmp.i3, label %if.then.i, label %cond.end392.gfx_v10_0_compute_mqd_set_priority.exit_crit_edge

cond.end392.gfx_v10_0_compute_mqd_set_priority.exit_crit_edge: ; preds = %cond.end392
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_compute_mqd_set_priority.exit

if.then.i:                                        ; preds = %cond.end392
  %180 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %ring, align 8
  %call.i = tail call zeroext i1 @amdgpu_gfx_is_high_priority_compute_queue(ptr noundef %181, ptr noundef %ring) #13
  br i1 %call.i, label %if.then2.i, label %if.then.i.gfx_v10_0_compute_mqd_set_priority.exit_crit_edge

if.then.i.gfx_v10_0_compute_mqd_set_priority.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  br label %gfx_v10_0_compute_mqd_set_priority.exit

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #15
  %cp_hqd_pipe_priority.i = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 133
  %182 = ptrtoint ptr %cp_hqd_pipe_priority.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 2, ptr %cp_hqd_pipe_priority.i, align 4
  %cp_hqd_queue_priority.i = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 134
  %183 = ptrtoint ptr %cp_hqd_queue_priority.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 15, ptr %cp_hqd_queue_priority.i, align 4
  br label %gfx_v10_0_compute_mqd_set_priority.exit

gfx_v10_0_compute_mqd_set_priority.exit:          ; preds = %if.then2.i, %if.then.i.gfx_v10_0_compute_mqd_set_priority.exit_crit_edge, %cond.end392.gfx_v10_0_compute_mqd_set_priority.exit_crit_edge
  %184 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %funcs.i, align 4
  %186 = ptrtoint ptr %185 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %185, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %187)
  %cmp397 = icmp eq i32 %187, 9
  br i1 %cmp397, label %if.then399, label %gfx_v10_0_compute_mqd_set_priority.exit.if.end400_crit_edge

gfx_v10_0_compute_mqd_set_priority.exit.if.end400_crit_edge: ; preds = %gfx_v10_0_compute_mqd_set_priority.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end400

if.then399:                                       ; preds = %gfx_v10_0_compute_mqd_set_priority.exit
  call void @__sanitizer_cov_trace_pc() #15
  %cp_hqd_active = getelementptr inbounds %struct.v10_compute_mqd, ptr %3, i32 0, i32 130
  %188 = ptrtoint ptr %cp_hqd_active to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 1, ptr %cp_hqd_active, align 4
  br label %if.end400

if.end400:                                        ; preds = %if.then399, %gfx_v10_0_compute_mqd_set_priority.exit.if.end400_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_enable_kcq(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_cp_gfx_switch_pipe(ptr noundef %adev, i32 noundef %pipe) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 3522
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 3522
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, -4
  %and20 = and i32 %pipe, 3
  %or = or i32 %and19, %and20
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and23 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %cond.end.cond.false45_crit_edge, label %land.lhs.true25

cond.end.cond.false45_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true25:                                  ; preds = %cond.end
  %funcs28 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs28 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs28, align 4
  %tobool29.not = icmp eq ptr %17, null
  br i1 %tobool29.not, label %land.lhs.true25.cond.false45_crit_edge, label %land.lhs.true30

land.lhs.true25.cond.false45_crit_edge:           ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg, align 4
  %tobool34.not = icmp eq ptr %19, null
  br i1 %tobool34.not, label %land.lhs.true30.cond.false45_crit_edge, label %cond.true35

land.lhs.true30.cond.false45_crit_edge:           ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false45

cond.true35:                                      ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx41 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx41, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add44 = add i32 %23, 3522
  tail call void %19(ptr noundef %adev, i32 noundef %add44, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end51

cond.false45:                                     ; preds = %land.lhs.true30.cond.false45_crit_edge, %land.lhs.true25.cond.false45_crit_edge, %cond.end.cond.false45_crit_edge
  %arrayidx47 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx47, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add50 = add i32 %27, 3522
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50, i32 noundef %or, i32 noundef 0) #13
  br label %cond.end51

cond.end51:                                       ; preds = %cond.false45, %cond.true35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_cp_gfx_set_doorbell(ptr noundef %adev, ptr nocapture noundef readonly %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_async_gfx_ring to i32))
  %0 = load i32, ptr @amdgpu_async_gfx_ring, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end59_crit_edge

entry.if.end59_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end59

if.then:                                          ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %1 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %virt, align 8
  %and = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.then.cond.false_crit_edge, label %land.lhs.true

if.then.cond.false_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %3 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %funcs, align 4
  %tobool2.not = icmp eq ptr %4, null
  br i1 %tobool2.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true3

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %4, i32 0, i32 13
  %5 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sriov_rreg, align 4
  %tobool7.not = icmp eq ptr %6, null
  br i1 %tobool7.not, label %land.lhs.true3.cond.false_crit_edge, label %cond.true

land.lhs.true3.cond.false_crit_edge:              ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %add = add i32 %10, 7821
  %call = tail call i32 %6(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true3.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then.cond.false_crit_edge
  %arrayidx15 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %11 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx15, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %add18 = add i32 %14, 7821
  %call19 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add18, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call19, %cond.false ]
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %15 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %use_doorbell, align 4, !range !478
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool20.not = icmp eq i8 %16, 0
  br i1 %tobool20.not, label %if.else, label %if.then21

if.then21:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  %and22 = and i32 %cond, -1342177277
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %17 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %doorbell_index, align 8
  %shl = shl i32 %18, 2
  %and23 = and i32 %shl, 268435452
  %or = or i32 %and22, %and23
  %or25 = or i32 %or, 1073741824
  br label %if.end

if.else:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  %and26 = and i32 %cond, -1073741825
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then21
  %tmp.0 = phi i32 [ %or25, %if.then21 ], [ %and26, %if.else ]
  %19 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %virt, align 8
  %and30 = and i32 %20, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %if.end.cond.false52_crit_edge, label %land.lhs.true32

if.end.cond.false52_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52

land.lhs.true32:                                  ; preds = %if.end
  %funcs35 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %21 = ptrtoint ptr %funcs35 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %funcs35, align 4
  %tobool36.not = icmp eq ptr %22, null
  br i1 %tobool36.not, label %land.lhs.true32.cond.false52_crit_edge, label %land.lhs.true37

land.lhs.true32.cond.false52_crit_edge:           ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52

land.lhs.true37:                                  ; preds = %land.lhs.true32
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %22, i32 0, i32 12
  %23 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %sriov_wreg, align 4
  %tobool41.not = icmp eq ptr %24, null
  br i1 %tobool41.not, label %land.lhs.true37.cond.false52_crit_edge, label %cond.true42

land.lhs.true37.cond.false52_crit_edge:           ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false52

cond.true42:                                      ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx48 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %25 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx48, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  %add51 = add i32 %28, 7821
  tail call void %24(ptr noundef %adev, i32 noundef %add51, i32 noundef %tmp.0, i32 noundef 0, i32 noundef 1) #13
  br label %if.end59

cond.false52:                                     ; preds = %land.lhs.true37.cond.false52_crit_edge, %land.lhs.true32.cond.false52_crit_edge, %if.end.cond.false52_crit_edge
  %arrayidx54 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %29 = ptrtoint ptr %arrayidx54 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx54, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %add57 = add i32 %32, 7821
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add57, i32 noundef %tmp.0, i32 noundef 0) #13
  br label %if.end59

if.end59:                                         ; preds = %cond.false52, %cond.true42, %entry.if.end59_crit_edge
  %arrayidx60 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %33 = ptrtoint ptr %arrayidx60 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx60, align 4
  %.off = add i32 %34, -656128
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %.off)
  %switch = icmp ult i32 %.off, 6
  %doorbell_index62 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %35 = ptrtoint ptr %doorbell_index62 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %doorbell_index62, align 8
  %shl63 = shl i32 %36, 2
  br i1 %switch, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %if.end59
  %and64 = and i32 %shl63, 4092
  %virt66 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %37 = ptrtoint ptr %virt66 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %virt66, align 8
  %and68 = and i32 %38, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68)
  %tobool69.not = icmp eq i32 %and68, 0
  br i1 %tobool69.not, label %sw.bb.cond.false91_crit_edge, label %land.lhs.true70

sw.bb.cond.false91_crit_edge:                     ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false91

land.lhs.true70:                                  ; preds = %sw.bb
  %funcs73 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %39 = ptrtoint ptr %funcs73 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %funcs73, align 4
  %tobool74.not = icmp eq ptr %40, null
  br i1 %tobool74.not, label %land.lhs.true70.cond.false91_crit_edge, label %land.lhs.true75

land.lhs.true70.cond.false91_crit_edge:           ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false91

land.lhs.true75:                                  ; preds = %land.lhs.true70
  %sriov_wreg79 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %40, i32 0, i32 12
  %41 = ptrtoint ptr %sriov_wreg79 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sriov_wreg79, align 4
  %tobool80.not = icmp eq ptr %42, null
  br i1 %tobool80.not, label %land.lhs.true75.cond.false91_crit_edge, label %cond.true81

land.lhs.true75.cond.false91_crit_edge:           ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false91

cond.true81:                                      ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx87 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %43 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx87, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add90 = add i32 %46, 7674
  tail call void %42(ptr noundef %adev, i32 noundef %add90, i32 noundef %and64, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end97

cond.false91:                                     ; preds = %land.lhs.true75.cond.false91_crit_edge, %land.lhs.true70.cond.false91_crit_edge, %sw.bb.cond.false91_crit_edge
  %arrayidx93 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %47 = ptrtoint ptr %arrayidx93 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx93, align 8
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %48, align 4
  %add96 = add i32 %50, 7674
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add96, i32 noundef %and64, i32 noundef 0) #13
  br label %cond.end97

cond.end97:                                       ; preds = %cond.false91, %cond.true81
  %51 = ptrtoint ptr %virt66 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %virt66, align 8
  %and100 = and i32 %52, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and100)
  %tobool101.not = icmp eq i32 %and100, 0
  br i1 %tobool101.not, label %cond.end97.cond.false123_crit_edge, label %land.lhs.true102

cond.end97.cond.false123_crit_edge:               ; preds = %cond.end97
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false123

land.lhs.true102:                                 ; preds = %cond.end97
  %funcs105 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %53 = ptrtoint ptr %funcs105 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %funcs105, align 4
  %tobool106.not = icmp eq ptr %54, null
  br i1 %tobool106.not, label %land.lhs.true102.cond.false123_crit_edge, label %land.lhs.true107

land.lhs.true102.cond.false123_crit_edge:         ; preds = %land.lhs.true102
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false123

land.lhs.true107:                                 ; preds = %land.lhs.true102
  %sriov_wreg111 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %54, i32 0, i32 12
  %55 = ptrtoint ptr %sriov_wreg111 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %sriov_wreg111, align 4
  %tobool112.not = icmp eq ptr %56, null
  br i1 %tobool112.not, label %land.lhs.true107.cond.false123_crit_edge, label %cond.true113

land.lhs.true107.cond.false123_crit_edge:         ; preds = %land.lhs.true107
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false123

cond.true113:                                     ; preds = %land.lhs.true107
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx119 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %57 = ptrtoint ptr %arrayidx119 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx119, align 8
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %58, align 4
  %add122 = add i32 %60, 7675
  tail call void %56(ptr noundef %adev, i32 noundef %add122, i32 noundef 4092, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

cond.false123:                                    ; preds = %land.lhs.true107.cond.false123_crit_edge, %land.lhs.true102.cond.false123_crit_edge, %cond.end97.cond.false123_crit_edge
  %arrayidx125 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %61 = ptrtoint ptr %arrayidx125 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %arrayidx125, align 8
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %62, align 4
  %add128 = add i32 %64, 7675
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add128, i32 noundef 4092, i32 noundef 0) #13
  br label %sw.epilog

sw.default:                                       ; preds = %if.end59
  %and132 = and i32 %shl63, 268435452
  %virt134 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %65 = ptrtoint ptr %virt134 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %virt134, align 8
  %and136 = and i32 %66, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and136)
  %tobool137.not = icmp eq i32 %and136, 0
  br i1 %tobool137.not, label %sw.default.cond.false159_crit_edge, label %land.lhs.true138

sw.default.cond.false159_crit_edge:               ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false159

land.lhs.true138:                                 ; preds = %sw.default
  %funcs141 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %67 = ptrtoint ptr %funcs141 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %funcs141, align 4
  %tobool142.not = icmp eq ptr %68, null
  br i1 %tobool142.not, label %land.lhs.true138.cond.false159_crit_edge, label %land.lhs.true143

land.lhs.true138.cond.false159_crit_edge:         ; preds = %land.lhs.true138
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false159

land.lhs.true143:                                 ; preds = %land.lhs.true138
  %sriov_wreg147 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %68, i32 0, i32 12
  %69 = ptrtoint ptr %sriov_wreg147 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %sriov_wreg147, align 4
  %tobool148.not = icmp eq ptr %70, null
  br i1 %tobool148.not, label %land.lhs.true143.cond.false159_crit_edge, label %cond.true149

land.lhs.true143.cond.false159_crit_edge:         ; preds = %land.lhs.true143
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false159

cond.true149:                                     ; preds = %land.lhs.true143
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx155 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %71 = ptrtoint ptr %arrayidx155 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx155, align 8
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %72, align 4
  %add158 = add i32 %74, 7674
  tail call void %70(ptr noundef %adev, i32 noundef %add158, i32 noundef %and132, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end165

cond.false159:                                    ; preds = %land.lhs.true143.cond.false159_crit_edge, %land.lhs.true138.cond.false159_crit_edge, %sw.default.cond.false159_crit_edge
  %arrayidx161 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %75 = ptrtoint ptr %arrayidx161 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %arrayidx161, align 8
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %76, align 4
  %add164 = add i32 %78, 7674
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add164, i32 noundef %and132, i32 noundef 0) #13
  br label %cond.end165

cond.end165:                                      ; preds = %cond.false159, %cond.true149
  %79 = ptrtoint ptr %virt134 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %virt134, align 8
  %and168 = and i32 %80, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and168)
  %tobool169.not = icmp eq i32 %and168, 0
  br i1 %tobool169.not, label %cond.end165.cond.false191_crit_edge, label %land.lhs.true170

cond.end165.cond.false191_crit_edge:              ; preds = %cond.end165
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false191

land.lhs.true170:                                 ; preds = %cond.end165
  %funcs173 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %81 = ptrtoint ptr %funcs173 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %funcs173, align 4
  %tobool174.not = icmp eq ptr %82, null
  br i1 %tobool174.not, label %land.lhs.true170.cond.false191_crit_edge, label %land.lhs.true175

land.lhs.true170.cond.false191_crit_edge:         ; preds = %land.lhs.true170
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false191

land.lhs.true175:                                 ; preds = %land.lhs.true170
  %sriov_wreg179 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %82, i32 0, i32 12
  %83 = ptrtoint ptr %sriov_wreg179 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %sriov_wreg179, align 4
  %tobool180.not = icmp eq ptr %84, null
  br i1 %tobool180.not, label %land.lhs.true175.cond.false191_crit_edge, label %cond.true181

land.lhs.true175.cond.false191_crit_edge:         ; preds = %land.lhs.true175
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false191

cond.true181:                                     ; preds = %land.lhs.true175
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx187 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %85 = ptrtoint ptr %arrayidx187 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx187, align 8
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %86, align 4
  %add190 = add i32 %88, 7675
  tail call void %84(ptr noundef %adev, i32 noundef %add190, i32 noundef 268435452, i32 noundef 0, i32 noundef 1) #13
  br label %sw.epilog

cond.false191:                                    ; preds = %land.lhs.true175.cond.false191_crit_edge, %land.lhs.true170.cond.false191_crit_edge, %cond.end165.cond.false191_crit_edge
  %arrayidx193 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %89 = ptrtoint ptr %arrayidx193 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx193, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add196 = add i32 %92, 7675
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add196, i32 noundef 268435452, i32 noundef 0) #13
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.false191, %cond.true181, %cond.false123, %cond.true113
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v10_0_cp_gfx_start(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 7758
  %max_hw_contexts = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %10 = ptrtoint ptr %max_hw_contexts to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_hw_contexts, align 8
  %sub = add i32 %11, -1
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %sub, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx15 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx15, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add18 = add i32 %15, 7758
  %max_hw_contexts21 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %16 = ptrtoint ptr %max_hw_contexts21 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %max_hw_contexts21, align 8
  %sub22 = add i32 %17, -1
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add18, i32 noundef %sub22, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %18 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt, align 8
  %and25 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %cond.end.cond.false48_crit_edge, label %land.lhs.true27

cond.end.cond.false48_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48

land.lhs.true27:                                  ; preds = %cond.end
  %funcs30 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs30 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs30, align 4
  %tobool31.not = icmp eq ptr %21, null
  br i1 %tobool31.not, label %land.lhs.true27.cond.false48_crit_edge, label %land.lhs.true32

land.lhs.true27.cond.false48_crit_edge:           ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48

land.lhs.true32:                                  ; preds = %land.lhs.true27
  %sriov_wreg36 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %sriov_wreg36 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_wreg36, align 4
  %tobool37.not = icmp eq ptr %23, null
  br i1 %tobool37.not, label %land.lhs.true32.cond.false48_crit_edge, label %cond.true38

land.lhs.true32.cond.false48_crit_edge:           ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false48

cond.true38:                                      ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx44 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx44, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add47 = add i32 %27, 7659
  tail call void %23(ptr noundef %adev, i32 noundef %add47, i32 noundef 1, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end54

cond.false48:                                     ; preds = %land.lhs.true32.cond.false48_crit_edge, %land.lhs.true27.cond.false48_crit_edge, %cond.end.cond.false48_crit_edge
  %arrayidx50 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx50, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add53 = add i32 %31, 7659
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add53, i32 noundef 1, i32 noundef 0) #13
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false48, %cond.true38
  tail call fastcc void @gfx_v10_0_cp_gfx_enable(ptr noundef %adev, i1 noundef zeroext true)
  %gfx_ring = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36
  %call59 = tail call i32 @amdgpu_ring_alloc(ptr noundef %gfx_ring, i32 noundef 953) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end54
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.111, i32 noundef %call59) #13
  br label %cleanup

if.end:                                           ; preds = %cond.end54
  %count_dw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 11
  %32 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp.i = icmp slt i32 %33, 1
  br i1 %cmp.i, label %if.then.i, label %if.end.amdgpu_ring_write.exit_crit_edge

if.end.amdgpu_ring_write.exit_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.end.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 5
  %34 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 7
  %36 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %37, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 14
  %38 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %buf_mask.i, align 8
  %40 = trunc i64 %37 to i32
  %idxprom.i = and i32 %39, %40
  %arrayidx.i = getelementptr i32, ptr %35, i32 %idxprom.i
  %41 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 -1073722880, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 13
  %42 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %ptr_mask.i, align 8
  %44 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %44, %43
  store i64 %and3.i, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %46, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i173 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i173, label %if.then.i174, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit184_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit184_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit184

if.then.i174:                                     ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit184

amdgpu_ring_write.exit184:                        ; preds = %if.then.i174, %amdgpu_ring_write.exit.amdgpu_ring_write.exit184_crit_edge
  %47 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ring1.i, align 4
  %49 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %wptr.i, align 8
  %inc.i177 = add i64 %50, 1
  store i64 %inc.i177, ptr %wptr.i, align 8
  %51 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %buf_mask.i, align 8
  %53 = trunc i64 %50 to i32
  %idxprom.i179 = and i32 %52, %53
  %arrayidx.i180 = getelementptr i32, ptr %48, i32 %idxprom.i179
  %54 = ptrtoint ptr %arrayidx.i180 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile i32 536870912, ptr %arrayidx.i180, align 4
  %55 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %ptr_mask.i, align 8
  %57 = load i64, ptr %wptr.i, align 8
  %and3.i182 = and i64 %57, %56
  store i64 %and3.i182, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %count_dw.i, align 8
  %dec.i183 = add i32 %59, -1
  store i32 %dec.i183, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i183)
  %cmp.i186 = icmp slt i32 %dec.i183, 1
  br i1 %cmp.i186, label %if.then.i187, label %amdgpu_ring_write.exit184.amdgpu_ring_write.exit197_crit_edge

amdgpu_ring_write.exit184.amdgpu_ring_write.exit197_crit_edge: ; preds = %amdgpu_ring_write.exit184
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit197

if.then.i187:                                     ; preds = %amdgpu_ring_write.exit184
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit197

amdgpu_ring_write.exit197:                        ; preds = %if.then.i187, %amdgpu_ring_write.exit184.amdgpu_ring_write.exit197_crit_edge
  %60 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ring1.i, align 4
  %62 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %wptr.i, align 8
  %inc.i190 = add i64 %63, 1
  store i64 %inc.i190, ptr %wptr.i, align 8
  %64 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_mask.i, align 8
  %66 = trunc i64 %63 to i32
  %idxprom.i192 = and i32 %65, %66
  %arrayidx.i193 = getelementptr i32, ptr %61, i32 %idxprom.i192
  %67 = ptrtoint ptr %arrayidx.i193 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile i32 -1073666048, ptr %arrayidx.i193, align 4
  %68 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %ptr_mask.i, align 8
  %70 = load i64, ptr %wptr.i, align 8
  %and3.i195 = and i64 %70, %69
  store i64 %and3.i195, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %count_dw.i, align 8
  %dec.i196 = add i32 %72, -1
  store i32 %dec.i196, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i196)
  %cmp.i199 = icmp slt i32 %dec.i196, 1
  br i1 %cmp.i199, label %if.then.i200, label %amdgpu_ring_write.exit197.amdgpu_ring_write.exit210_crit_edge

amdgpu_ring_write.exit197.amdgpu_ring_write.exit210_crit_edge: ; preds = %amdgpu_ring_write.exit197
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit210

if.then.i200:                                     ; preds = %amdgpu_ring_write.exit197
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit210

amdgpu_ring_write.exit210:                        ; preds = %if.then.i200, %amdgpu_ring_write.exit197.amdgpu_ring_write.exit210_crit_edge
  %73 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ring1.i, align 4
  %75 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %wptr.i, align 8
  %inc.i203 = add i64 %76, 1
  store i64 %inc.i203, ptr %wptr.i, align 8
  %77 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %buf_mask.i, align 8
  %79 = trunc i64 %76 to i32
  %idxprom.i205 = and i32 %78, %79
  %arrayidx.i206 = getelementptr i32, ptr %74, i32 %idxprom.i205
  %80 = ptrtoint ptr %arrayidx.i206 to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile i32 -2147483648, ptr %arrayidx.i206, align 4
  %81 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %ptr_mask.i, align 8
  %83 = load i64, ptr %wptr.i, align 8
  %and3.i208 = and i64 %83, %82
  store i64 %and3.i208, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %count_dw.i, align 8
  %dec.i209 = add i32 %85, -1
  store i32 %dec.i209, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i209)
  %cmp.i212 = icmp slt i32 %dec.i209, 1
  br i1 %cmp.i212, label %if.then.i213, label %amdgpu_ring_write.exit210.for.body64.lr.ph_crit_edge

amdgpu_ring_write.exit210.for.body64.lr.ph_crit_edge: ; preds = %amdgpu_ring_write.exit210
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body64.lr.ph

if.then.i213:                                     ; preds = %amdgpu_ring_write.exit210
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %for.body64.lr.ph

for.body64.lr.ph:                                 ; preds = %if.then.i213, %amdgpu_ring_write.exit210.for.body64.lr.ph_crit_edge
  %86 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %ring1.i, align 4
  %88 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %wptr.i, align 8
  %inc.i216 = add i64 %89, 1
  store i64 %inc.i216, ptr %wptr.i, align 8
  %90 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %buf_mask.i, align 8
  %92 = trunc i64 %89 to i32
  %idxprom.i218 = and i32 %91, %92
  %arrayidx.i219 = getelementptr i32, ptr %87, i32 %idxprom.i218
  %93 = ptrtoint ptr %arrayidx.i219 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile i32 -2147483648, ptr %arrayidx.i219, align 4
  %94 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %ptr_mask.i, align 8
  %96 = load i64, ptr %wptr.i, align 8
  %and3.i221 = and i64 %96, %95
  store i64 %and3.i221, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %count_dw.i, align 8
  %dec.i222 = add i32 %98, -1
  store i32 %dec.i222, ptr %count_dw.i, align 8
  br label %if.then66

if.then66thread-pre-split:                        ; preds = %for.inc76
  call void @__sanitizer_cov_trace_pc() #15
  %99 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %.pr = load i32, ptr %count_dw.i, align 8
  br label %if.then66

if.then66:                                        ; preds = %if.then66thread-pre-split, %for.body64.lr.ph
  %100 = phi i32 [ %.pr, %if.then66thread-pre-split ], [ %dec.i222, %for.body64.lr.ph ]
  %ext.0435 = phi ptr [ %incdec.ptr, %if.then66thread-pre-split ], [ @gfx10_SECT_CONTEXT_defs, %for.body64.lr.ph ]
  %reg_count = getelementptr inbounds %struct.cs_extent_def, ptr %ext.0435, i32 0, i32 2
  %101 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %reg_count, align 4
  %and67 = shl i32 %102, 16
  %or = or i32 %and67, -1073714944
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %100)
  %cmp.i225 = icmp slt i32 %100, 1
  br i1 %cmp.i225, label %if.then.i226, label %if.then66.amdgpu_ring_write.exit236_crit_edge

if.then66.amdgpu_ring_write.exit236_crit_edge:    ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit236

if.then.i226:                                     ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit236

amdgpu_ring_write.exit236:                        ; preds = %if.then.i226, %if.then66.amdgpu_ring_write.exit236_crit_edge
  %103 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %ring1.i, align 4
  %105 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %105)
  %106 = load i64, ptr %wptr.i, align 8
  %inc.i229 = add i64 %106, 1
  store i64 %inc.i229, ptr %wptr.i, align 8
  %107 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %buf_mask.i, align 8
  %109 = trunc i64 %106 to i32
  %idxprom.i231 = and i32 %108, %109
  %arrayidx.i232 = getelementptr i32, ptr %104, i32 %idxprom.i231
  %110 = ptrtoint ptr %arrayidx.i232 to i32
  call void @__asan_store4_noabort(i32 %110)
  store volatile i32 %or, ptr %arrayidx.i232, align 4
  %111 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %111)
  %112 = load i64, ptr %ptr_mask.i, align 8
  %113 = load i64, ptr %wptr.i, align 8
  %and3.i234 = and i64 %113, %112
  store i64 %and3.i234, ptr %wptr.i, align 8
  %114 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %count_dw.i, align 8
  %dec.i235 = add i32 %115, -1
  store i32 %dec.i235, ptr %count_dw.i, align 8
  %reg_index = getelementptr inbounds %struct.cs_extent_def, ptr %ext.0435, i32 0, i32 1
  %116 = ptrtoint ptr %reg_index to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %reg_index, align 4
  %sub68 = add i32 %117, -40960
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i235)
  %cmp.i238 = icmp slt i32 %dec.i235, 1
  br i1 %cmp.i238, label %if.then.i239, label %amdgpu_ring_write.exit236.amdgpu_ring_write.exit249_crit_edge

amdgpu_ring_write.exit236.amdgpu_ring_write.exit249_crit_edge: ; preds = %amdgpu_ring_write.exit236
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit249

if.then.i239:                                     ; preds = %amdgpu_ring_write.exit236
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit249

amdgpu_ring_write.exit249:                        ; preds = %if.then.i239, %amdgpu_ring_write.exit236.amdgpu_ring_write.exit249_crit_edge
  %118 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %ring1.i, align 4
  %120 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %wptr.i, align 8
  %inc.i242 = add i64 %121, 1
  store i64 %inc.i242, ptr %wptr.i, align 8
  %122 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %buf_mask.i, align 8
  %124 = trunc i64 %121 to i32
  %idxprom.i244 = and i32 %123, %124
  %arrayidx.i245 = getelementptr i32, ptr %119, i32 %idxprom.i244
  %125 = ptrtoint ptr %arrayidx.i245 to i32
  call void @__asan_store4_noabort(i32 %125)
  store volatile i32 %sub68, ptr %arrayidx.i245, align 4
  %126 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %126)
  %127 = load i64, ptr %ptr_mask.i, align 8
  %128 = load i64, ptr %wptr.i, align 8
  %and3.i247 = and i64 %128, %127
  store i64 %and3.i247, ptr %wptr.i, align 8
  %129 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %count_dw.i, align 8
  %dec.i248 = add i32 %130, -1
  store i32 %dec.i248, ptr %count_dw.i, align 8
  %131 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %reg_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %132)
  %cmp71432.not = icmp eq i32 %132, 0
  br i1 %cmp71432.not, label %amdgpu_ring_write.exit249.for.inc76_crit_edge, label %amdgpu_ring_write.exit249.for.body72_crit_edge

amdgpu_ring_write.exit249.for.body72_crit_edge:   ; preds = %amdgpu_ring_write.exit249
  br label %for.body72

amdgpu_ring_write.exit249.for.inc76_crit_edge:    ; preds = %amdgpu_ring_write.exit249
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc76

for.body72:                                       ; preds = %amdgpu_ring_write.exit262.for.body72_crit_edge, %amdgpu_ring_write.exit249.for.body72_crit_edge
  %133 = phi i32 [ %dec.i261, %amdgpu_ring_write.exit262.for.body72_crit_edge ], [ %dec.i248, %amdgpu_ring_write.exit249.for.body72_crit_edge ]
  %i.0433 = phi i32 [ %inc, %amdgpu_ring_write.exit262.for.body72_crit_edge ], [ 0, %amdgpu_ring_write.exit249.for.body72_crit_edge ]
  %134 = ptrtoint ptr %ext.0435 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %ext.0435, align 4
  %arrayidx74 = getelementptr i32, ptr %135, i32 %i.0433
  %136 = ptrtoint ptr %arrayidx74 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %arrayidx74, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %133)
  %cmp.i251 = icmp slt i32 %133, 1
  br i1 %cmp.i251, label %if.then.i252, label %for.body72.amdgpu_ring_write.exit262_crit_edge

for.body72.amdgpu_ring_write.exit262_crit_edge:   ; preds = %for.body72
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit262

if.then.i252:                                     ; preds = %for.body72
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit262

amdgpu_ring_write.exit262:                        ; preds = %if.then.i252, %for.body72.amdgpu_ring_write.exit262_crit_edge
  %138 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %ring1.i, align 4
  %140 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %140)
  %141 = load i64, ptr %wptr.i, align 8
  %inc.i255 = add i64 %141, 1
  store i64 %inc.i255, ptr %wptr.i, align 8
  %142 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %buf_mask.i, align 8
  %144 = trunc i64 %141 to i32
  %idxprom.i257 = and i32 %143, %144
  %arrayidx.i258 = getelementptr i32, ptr %139, i32 %idxprom.i257
  %145 = ptrtoint ptr %arrayidx.i258 to i32
  call void @__asan_store4_noabort(i32 %145)
  store volatile i32 %137, ptr %arrayidx.i258, align 4
  %146 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %146)
  %147 = load i64, ptr %ptr_mask.i, align 8
  %148 = load i64, ptr %wptr.i, align 8
  %and3.i260 = and i64 %148, %147
  store i64 %and3.i260, ptr %wptr.i, align 8
  %149 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %count_dw.i, align 8
  %dec.i261 = add i32 %150, -1
  store i32 %dec.i261, ptr %count_dw.i, align 8
  %inc = add nuw i32 %i.0433, 1
  %151 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %reg_count, align 4
  %cmp71 = icmp ult i32 %inc, %152
  br i1 %cmp71, label %amdgpu_ring_write.exit262.for.body72_crit_edge, label %amdgpu_ring_write.exit262.for.inc76_crit_edge

amdgpu_ring_write.exit262.for.inc76_crit_edge:    ; preds = %amdgpu_ring_write.exit262
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.inc76

amdgpu_ring_write.exit262.for.body72_crit_edge:   ; preds = %amdgpu_ring_write.exit262
  call void @__sanitizer_cov_trace_pc() #15
  br label %for.body72

for.inc76:                                        ; preds = %amdgpu_ring_write.exit262.for.inc76_crit_edge, %amdgpu_ring_write.exit249.for.inc76_crit_edge
  %incdec.ptr = getelementptr %struct.cs_extent_def, ptr %ext.0435, i32 1
  %153 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %incdec.ptr, align 4
  %cmp63.not = icmp eq ptr %154, null
  br i1 %cmp63.not, label %for.inc78, label %if.then66thread-pre-split

for.inc78:                                        ; preds = %for.inc76
  %arrayidx82 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %155 = ptrtoint ptr %arrayidx82 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %arrayidx82, align 8
  %arrayidx84 = getelementptr i32, ptr %156, i32 1
  %157 = ptrtoint ptr %arrayidx84 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %arrayidx84, align 4
  %sub86 = add i32 %158, -40745
  %159 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %160)
  %cmp.i264 = icmp slt i32 %160, 1
  br i1 %cmp.i264, label %if.then.i265, label %for.inc78.amdgpu_ring_write.exit275_crit_edge

for.inc78.amdgpu_ring_write.exit275_crit_edge:    ; preds = %for.inc78
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit275

if.then.i265:                                     ; preds = %for.inc78
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit275

amdgpu_ring_write.exit275:                        ; preds = %if.then.i265, %for.inc78.amdgpu_ring_write.exit275_crit_edge
  %161 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %ring1.i, align 4
  %163 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %163)
  %164 = load i64, ptr %wptr.i, align 8
  %inc.i268 = add i64 %164, 1
  store i64 %inc.i268, ptr %wptr.i, align 8
  %165 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %buf_mask.i, align 8
  %167 = trunc i64 %164 to i32
  %idxprom.i270 = and i32 %166, %167
  %arrayidx.i271 = getelementptr i32, ptr %162, i32 %idxprom.i270
  %168 = ptrtoint ptr %arrayidx.i271 to i32
  call void @__asan_store4_noabort(i32 %168)
  store volatile i32 -1073649408, ptr %arrayidx.i271, align 4
  %169 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %169)
  %170 = load i64, ptr %ptr_mask.i, align 8
  %171 = load i64, ptr %wptr.i, align 8
  %and3.i273 = and i64 %171, %170
  store i64 %and3.i273, ptr %wptr.i, align 8
  %172 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %count_dw.i, align 8
  %dec.i274 = add i32 %173, -1
  store i32 %dec.i274, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i274)
  %cmp.i277 = icmp slt i32 %dec.i274, 1
  br i1 %cmp.i277, label %if.then.i278, label %amdgpu_ring_write.exit275.amdgpu_ring_write.exit288_crit_edge

amdgpu_ring_write.exit275.amdgpu_ring_write.exit288_crit_edge: ; preds = %amdgpu_ring_write.exit275
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit288

if.then.i278:                                     ; preds = %amdgpu_ring_write.exit275
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit288

amdgpu_ring_write.exit288:                        ; preds = %if.then.i278, %amdgpu_ring_write.exit275.amdgpu_ring_write.exit288_crit_edge
  %174 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %ring1.i, align 4
  %176 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %176)
  %177 = load i64, ptr %wptr.i, align 8
  %inc.i281 = add i64 %177, 1
  store i64 %inc.i281, ptr %wptr.i, align 8
  %178 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %buf_mask.i, align 8
  %180 = trunc i64 %177 to i32
  %idxprom.i283 = and i32 %179, %180
  %arrayidx.i284 = getelementptr i32, ptr %175, i32 %idxprom.i283
  %181 = ptrtoint ptr %arrayidx.i284 to i32
  call void @__asan_store4_noabort(i32 %181)
  store volatile i32 %sub86, ptr %arrayidx.i284, align 4
  %182 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %182)
  %183 = load i64, ptr %ptr_mask.i, align 8
  %184 = load i64, ptr %wptr.i, align 8
  %and3.i286 = and i64 %184, %183
  store i64 %and3.i286, ptr %wptr.i, align 8
  %185 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %count_dw.i, align 8
  %dec.i287 = add i32 %186, -1
  store i32 %dec.i287, ptr %count_dw.i, align 8
  %pa_sc_tile_steering_override = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 35
  %187 = ptrtoint ptr %pa_sc_tile_steering_override to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %pa_sc_tile_steering_override, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i287)
  %cmp.i290 = icmp slt i32 %dec.i287, 1
  br i1 %cmp.i290, label %if.then.i291, label %amdgpu_ring_write.exit288.amdgpu_ring_write.exit301_crit_edge

amdgpu_ring_write.exit288.amdgpu_ring_write.exit301_crit_edge: ; preds = %amdgpu_ring_write.exit288
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit301

if.then.i291:                                     ; preds = %amdgpu_ring_write.exit288
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit301

amdgpu_ring_write.exit301:                        ; preds = %if.then.i291, %amdgpu_ring_write.exit288.amdgpu_ring_write.exit301_crit_edge
  %189 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %ring1.i, align 4
  %191 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %191)
  %192 = load i64, ptr %wptr.i, align 8
  %inc.i294 = add i64 %192, 1
  store i64 %inc.i294, ptr %wptr.i, align 8
  %193 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %buf_mask.i, align 8
  %195 = trunc i64 %192 to i32
  %idxprom.i296 = and i32 %194, %195
  %arrayidx.i297 = getelementptr i32, ptr %190, i32 %idxprom.i296
  %196 = ptrtoint ptr %arrayidx.i297 to i32
  call void @__asan_store4_noabort(i32 %196)
  store volatile i32 %188, ptr %arrayidx.i297, align 4
  %197 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %197)
  %198 = load i64, ptr %ptr_mask.i, align 8
  %199 = load i64, ptr %wptr.i, align 8
  %and3.i299 = and i64 %199, %198
  store i64 %and3.i299, ptr %wptr.i, align 8
  %200 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %count_dw.i, align 8
  %dec.i300 = add i32 %201, -1
  store i32 %dec.i300, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i300)
  %cmp.i303 = icmp slt i32 %dec.i300, 1
  br i1 %cmp.i303, label %if.then.i304, label %amdgpu_ring_write.exit301.amdgpu_ring_write.exit314_crit_edge

amdgpu_ring_write.exit301.amdgpu_ring_write.exit314_crit_edge: ; preds = %amdgpu_ring_write.exit301
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit314

if.then.i304:                                     ; preds = %amdgpu_ring_write.exit301
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit314

amdgpu_ring_write.exit314:                        ; preds = %if.then.i304, %amdgpu_ring_write.exit301.amdgpu_ring_write.exit314_crit_edge
  %202 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %ring1.i, align 4
  %204 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %204)
  %205 = load i64, ptr %wptr.i, align 8
  %inc.i307 = add i64 %205, 1
  store i64 %inc.i307, ptr %wptr.i, align 8
  %206 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %buf_mask.i, align 8
  %208 = trunc i64 %205 to i32
  %idxprom.i309 = and i32 %207, %208
  %arrayidx.i310 = getelementptr i32, ptr %203, i32 %idxprom.i309
  %209 = ptrtoint ptr %arrayidx.i310 to i32
  call void @__asan_store4_noabort(i32 %209)
  store volatile i32 -1073722880, ptr %arrayidx.i310, align 4
  %210 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %210)
  %211 = load i64, ptr %ptr_mask.i, align 8
  %212 = load i64, ptr %wptr.i, align 8
  %and3.i312 = and i64 %212, %211
  store i64 %and3.i312, ptr %wptr.i, align 8
  %213 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %count_dw.i, align 8
  %dec.i313 = add i32 %214, -1
  store i32 %dec.i313, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i313)
  %cmp.i316 = icmp slt i32 %dec.i313, 1
  br i1 %cmp.i316, label %if.then.i317, label %amdgpu_ring_write.exit314.amdgpu_ring_write.exit327_crit_edge

amdgpu_ring_write.exit314.amdgpu_ring_write.exit327_crit_edge: ; preds = %amdgpu_ring_write.exit314
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit327

if.then.i317:                                     ; preds = %amdgpu_ring_write.exit314
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit327

amdgpu_ring_write.exit327:                        ; preds = %if.then.i317, %amdgpu_ring_write.exit314.amdgpu_ring_write.exit327_crit_edge
  %215 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %ring1.i, align 4
  %217 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %217)
  %218 = load i64, ptr %wptr.i, align 8
  %inc.i320 = add i64 %218, 1
  store i64 %inc.i320, ptr %wptr.i, align 8
  %219 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %buf_mask.i, align 8
  %221 = trunc i64 %218 to i32
  %idxprom.i322 = and i32 %220, %221
  %arrayidx.i323 = getelementptr i32, ptr %216, i32 %idxprom.i322
  %222 = ptrtoint ptr %arrayidx.i323 to i32
  call void @__asan_store4_noabort(i32 %222)
  store volatile i32 805306368, ptr %arrayidx.i323, align 4
  %223 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %223)
  %224 = load i64, ptr %ptr_mask.i, align 8
  %225 = load i64, ptr %wptr.i, align 8
  %and3.i325 = and i64 %225, %224
  store i64 %and3.i325, ptr %wptr.i, align 8
  %226 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %count_dw.i, align 8
  %dec.i326 = add i32 %227, -1
  store i32 %dec.i326, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i326)
  %cmp.i329 = icmp slt i32 %dec.i326, 1
  br i1 %cmp.i329, label %if.then.i330, label %amdgpu_ring_write.exit327.amdgpu_ring_write.exit340_crit_edge

amdgpu_ring_write.exit327.amdgpu_ring_write.exit340_crit_edge: ; preds = %amdgpu_ring_write.exit327
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit340

if.then.i330:                                     ; preds = %amdgpu_ring_write.exit327
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit340

amdgpu_ring_write.exit340:                        ; preds = %if.then.i330, %amdgpu_ring_write.exit327.amdgpu_ring_write.exit340_crit_edge
  %228 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %ring1.i, align 4
  %230 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %230)
  %231 = load i64, ptr %wptr.i, align 8
  %inc.i333 = add i64 %231, 1
  store i64 %inc.i333, ptr %wptr.i, align 8
  %232 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %buf_mask.i, align 8
  %234 = trunc i64 %231 to i32
  %idxprom.i335 = and i32 %233, %234
  %arrayidx.i336 = getelementptr i32, ptr %229, i32 %idxprom.i335
  %235 = ptrtoint ptr %arrayidx.i336 to i32
  call void @__asan_store4_noabort(i32 %235)
  store volatile i32 -1073737216, ptr %arrayidx.i336, align 4
  %236 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %236)
  %237 = load i64, ptr %ptr_mask.i, align 8
  %238 = load i64, ptr %wptr.i, align 8
  %and3.i338 = and i64 %238, %237
  store i64 %and3.i338, ptr %wptr.i, align 8
  %239 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %count_dw.i, align 8
  %dec.i339 = add i32 %240, -1
  store i32 %dec.i339, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i339)
  %cmp.i342 = icmp slt i32 %dec.i339, 1
  br i1 %cmp.i342, label %if.then.i343, label %amdgpu_ring_write.exit340.amdgpu_ring_write.exit353_crit_edge

amdgpu_ring_write.exit340.amdgpu_ring_write.exit353_crit_edge: ; preds = %amdgpu_ring_write.exit340
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit353

if.then.i343:                                     ; preds = %amdgpu_ring_write.exit340
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit353

amdgpu_ring_write.exit353:                        ; preds = %if.then.i343, %amdgpu_ring_write.exit340.amdgpu_ring_write.exit353_crit_edge
  %241 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %ring1.i, align 4
  %243 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %243)
  %244 = load i64, ptr %wptr.i, align 8
  %inc.i346 = add i64 %244, 1
  store i64 %inc.i346, ptr %wptr.i, align 8
  %245 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %buf_mask.i, align 8
  %247 = trunc i64 %244 to i32
  %idxprom.i348 = and i32 %246, %247
  %arrayidx.i349 = getelementptr i32, ptr %242, i32 %idxprom.i348
  %248 = ptrtoint ptr %arrayidx.i349 to i32
  call void @__asan_store4_noabort(i32 %248)
  store volatile i32 0, ptr %arrayidx.i349, align 4
  %249 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %249)
  %250 = load i64, ptr %ptr_mask.i, align 8
  %251 = load i64, ptr %wptr.i, align 8
  %and3.i351 = and i64 %251, %250
  store i64 %and3.i351, ptr %wptr.i, align 8
  %252 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %count_dw.i, align 8
  %dec.i352 = add i32 %253, -1
  store i32 %dec.i352, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i352)
  %cmp.i355 = icmp slt i32 %dec.i352, 1
  br i1 %cmp.i355, label %if.then.i356, label %amdgpu_ring_write.exit353.amdgpu_ring_write.exit366_crit_edge

amdgpu_ring_write.exit353.amdgpu_ring_write.exit366_crit_edge: ; preds = %amdgpu_ring_write.exit353
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit366

if.then.i356:                                     ; preds = %amdgpu_ring_write.exit353
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit366

amdgpu_ring_write.exit366:                        ; preds = %if.then.i356, %amdgpu_ring_write.exit353.amdgpu_ring_write.exit366_crit_edge
  %254 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %ring1.i, align 4
  %256 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %256)
  %257 = load i64, ptr %wptr.i, align 8
  %inc.i359 = add i64 %257, 1
  store i64 %inc.i359, ptr %wptr.i, align 8
  %258 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %buf_mask.i, align 8
  %260 = trunc i64 %257 to i32
  %idxprom.i361 = and i32 %259, %260
  %arrayidx.i362 = getelementptr i32, ptr %255, i32 %idxprom.i361
  %261 = ptrtoint ptr %arrayidx.i362 to i32
  call void @__asan_store4_noabort(i32 %261)
  store volatile i32 -1073606400, ptr %arrayidx.i362, align 4
  %262 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %262)
  %263 = load i64, ptr %ptr_mask.i, align 8
  %264 = load i64, ptr %wptr.i, align 8
  %and3.i364 = and i64 %264, %263
  store i64 %and3.i364, ptr %wptr.i, align 8
  %265 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load i32, ptr %count_dw.i, align 8
  %dec.i365 = add i32 %266, -1
  store i32 %dec.i365, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i365)
  %cmp.i368 = icmp slt i32 %dec.i365, 1
  br i1 %cmp.i368, label %if.then.i369, label %amdgpu_ring_write.exit366.amdgpu_ring_write.exit379_crit_edge

amdgpu_ring_write.exit366.amdgpu_ring_write.exit379_crit_edge: ; preds = %amdgpu_ring_write.exit366
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit379

if.then.i369:                                     ; preds = %amdgpu_ring_write.exit366
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit379

amdgpu_ring_write.exit379:                        ; preds = %if.then.i369, %amdgpu_ring_write.exit366.amdgpu_ring_write.exit379_crit_edge
  %267 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %ring1.i, align 4
  %269 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %269)
  %270 = load i64, ptr %wptr.i, align 8
  %inc.i372 = add i64 %270, 1
  store i64 %inc.i372, ptr %wptr.i, align 8
  %271 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %buf_mask.i, align 8
  %273 = trunc i64 %270 to i32
  %idxprom.i374 = and i32 %272, %273
  %arrayidx.i375 = getelementptr i32, ptr %268, i32 %idxprom.i374
  %274 = ptrtoint ptr %arrayidx.i375 to i32
  call void @__asan_store4_noabort(i32 %274)
  store volatile i32 3, ptr %arrayidx.i375, align 4
  %275 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %275)
  %276 = load i64, ptr %ptr_mask.i, align 8
  %277 = load i64, ptr %wptr.i, align 8
  %and3.i377 = and i64 %277, %276
  store i64 %and3.i377, ptr %wptr.i, align 8
  %278 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %count_dw.i, align 8
  %dec.i378 = add i32 %279, -1
  store i32 %dec.i378, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i378)
  %cmp.i381 = icmp slt i32 %dec.i378, 1
  br i1 %cmp.i381, label %if.then.i382, label %amdgpu_ring_write.exit379.amdgpu_ring_write.exit392_crit_edge

amdgpu_ring_write.exit379.amdgpu_ring_write.exit392_crit_edge: ; preds = %amdgpu_ring_write.exit379
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit392

if.then.i382:                                     ; preds = %amdgpu_ring_write.exit379
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit392

amdgpu_ring_write.exit392:                        ; preds = %if.then.i382, %amdgpu_ring_write.exit379.amdgpu_ring_write.exit392_crit_edge
  %280 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %ring1.i, align 4
  %282 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %282)
  %283 = load i64, ptr %wptr.i, align 8
  %inc.i385 = add i64 %283, 1
  store i64 %inc.i385, ptr %wptr.i, align 8
  %284 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %buf_mask.i, align 8
  %286 = trunc i64 %283 to i32
  %idxprom.i387 = and i32 %285, %286
  %arrayidx.i388 = getelementptr i32, ptr %281, i32 %idxprom.i387
  %287 = ptrtoint ptr %arrayidx.i388 to i32
  call void @__asan_store4_noabort(i32 %287)
  store volatile i32 32768, ptr %arrayidx.i388, align 4
  %288 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %288)
  %289 = load i64, ptr %ptr_mask.i, align 8
  %290 = load i64, ptr %wptr.i, align 8
  %and3.i390 = and i64 %290, %289
  store i64 %and3.i390, ptr %wptr.i, align 8
  %291 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load i32, ptr %count_dw.i, align 8
  %dec.i391 = add i32 %292, -1
  store i32 %dec.i391, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i391)
  %cmp.i394 = icmp slt i32 %dec.i391, 1
  br i1 %cmp.i394, label %if.then.i395, label %amdgpu_ring_write.exit392.amdgpu_ring_write.exit405_crit_edge

amdgpu_ring_write.exit392.amdgpu_ring_write.exit405_crit_edge: ; preds = %amdgpu_ring_write.exit392
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit405

if.then.i395:                                     ; preds = %amdgpu_ring_write.exit392
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit405

amdgpu_ring_write.exit405:                        ; preds = %if.then.i395, %amdgpu_ring_write.exit392.amdgpu_ring_write.exit405_crit_edge
  %293 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load ptr, ptr %ring1.i, align 4
  %295 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %295)
  %296 = load i64, ptr %wptr.i, align 8
  %inc.i398 = add i64 %296, 1
  store i64 %inc.i398, ptr %wptr.i, align 8
  %297 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %buf_mask.i, align 8
  %299 = trunc i64 %296 to i32
  %idxprom.i400 = and i32 %298, %299
  %arrayidx.i401 = getelementptr i32, ptr %294, i32 %idxprom.i400
  %300 = ptrtoint ptr %arrayidx.i401 to i32
  call void @__asan_store4_noabort(i32 %300)
  store volatile i32 32768, ptr %arrayidx.i401, align 4
  %301 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %301)
  %302 = load i64, ptr %ptr_mask.i, align 8
  %303 = load i64, ptr %wptr.i, align 8
  %and3.i403 = and i64 %303, %302
  store i64 %and3.i403, ptr %wptr.i, align 8
  %304 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %count_dw.i, align 8
  %dec.i404 = add i32 %305, -1
  store i32 %dec.i404, ptr %count_dw.i, align 8
  tail call void @amdgpu_ring_commit(ptr noundef %gfx_ring) #13
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %306 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %307)
  %cmp90 = icmp ugt i32 %307, 1
  br i1 %cmp90, label %if.then91, label %amdgpu_ring_write.exit405.cleanup_crit_edge

amdgpu_ring_write.exit405.cleanup_crit_edge:      ; preds = %amdgpu_ring_write.exit405
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then91:                                        ; preds = %amdgpu_ring_write.exit405
  %arrayidx94 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1
  %call95 = tail call i32 @amdgpu_ring_alloc(ptr noundef %arrayidx94, i32 noundef 2) #13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call95)
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %if.end98, label %if.then97

if.then97:                                        ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.111, i32 noundef %call95) #13
  br label %cleanup

if.end98:                                         ; preds = %if.then91
  %count_dw.i406 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 11
  %308 = ptrtoint ptr %count_dw.i406 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %count_dw.i406, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %309)
  %cmp.i407 = icmp slt i32 %309, 1
  br i1 %cmp.i407, label %if.then.i408, label %if.end98.amdgpu_ring_write.exit418_crit_edge

if.end98.amdgpu_ring_write.exit418_crit_edge:     ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit418

if.then.i408:                                     ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit418

amdgpu_ring_write.exit418:                        ; preds = %if.then.i408, %if.end98.amdgpu_ring_write.exit418_crit_edge
  %ring1.i409 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 5
  %310 = ptrtoint ptr %ring1.i409 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %ring1.i409, align 4
  %wptr.i410 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 7
  %312 = ptrtoint ptr %wptr.i410 to i32
  call void @__asan_load8_noabort(i32 %312)
  %313 = load i64, ptr %wptr.i410, align 8
  %inc.i411 = add i64 %313, 1
  store i64 %inc.i411, ptr %wptr.i410, align 8
  %buf_mask.i412 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 14
  %314 = ptrtoint ptr %buf_mask.i412 to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %buf_mask.i412, align 8
  %316 = trunc i64 %313 to i32
  %idxprom.i413 = and i32 %315, %316
  %arrayidx.i414 = getelementptr i32, ptr %311, i32 %idxprom.i413
  %317 = ptrtoint ptr %arrayidx.i414 to i32
  call void @__asan_store4_noabort(i32 %317)
  store volatile i32 -1073737216, ptr %arrayidx.i414, align 4
  %ptr_mask.i415 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 1, i32 13
  %318 = ptrtoint ptr %ptr_mask.i415 to i32
  call void @__asan_load8_noabort(i32 %318)
  %319 = load i64, ptr %ptr_mask.i415, align 8
  %320 = load i64, ptr %wptr.i410, align 8
  %and3.i416 = and i64 %320, %319
  store i64 %and3.i416, ptr %wptr.i410, align 8
  %321 = ptrtoint ptr %count_dw.i406 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %count_dw.i406, align 8
  %dec.i417 = add i32 %322, -1
  store i32 %dec.i417, ptr %count_dw.i406, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i417)
  %cmp.i420 = icmp slt i32 %dec.i417, 1
  br i1 %cmp.i420, label %if.then.i421, label %amdgpu_ring_write.exit418.amdgpu_ring_write.exit431_crit_edge

amdgpu_ring_write.exit418.amdgpu_ring_write.exit431_crit_edge: ; preds = %amdgpu_ring_write.exit418
  call void @__sanitizer_cov_trace_pc() #15
  br label %amdgpu_ring_write.exit431

if.then.i421:                                     ; preds = %amdgpu_ring_write.exit418
  call void @__sanitizer_cov_trace_pc() #15
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #13
  br label %amdgpu_ring_write.exit431

amdgpu_ring_write.exit431:                        ; preds = %if.then.i421, %amdgpu_ring_write.exit418.amdgpu_ring_write.exit431_crit_edge
  %323 = ptrtoint ptr %ring1.i409 to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %ring1.i409, align 4
  %325 = ptrtoint ptr %wptr.i410 to i32
  call void @__asan_load8_noabort(i32 %325)
  %326 = load i64, ptr %wptr.i410, align 8
  %inc.i424 = add i64 %326, 1
  store i64 %inc.i424, ptr %wptr.i410, align 8
  %327 = ptrtoint ptr %buf_mask.i412 to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %buf_mask.i412, align 8
  %329 = trunc i64 %326 to i32
  %idxprom.i426 = and i32 %328, %329
  %arrayidx.i427 = getelementptr i32, ptr %324, i32 %idxprom.i426
  %330 = ptrtoint ptr %arrayidx.i427 to i32
  call void @__asan_store4_noabort(i32 %330)
  store volatile i32 0, ptr %arrayidx.i427, align 4
  %331 = ptrtoint ptr %ptr_mask.i415 to i32
  call void @__asan_load8_noabort(i32 %331)
  %332 = load i64, ptr %ptr_mask.i415, align 8
  %333 = load i64, ptr %wptr.i410, align 8
  %and3.i429 = and i64 %333, %332
  store i64 %and3.i429, ptr %wptr.i410, align 8
  %334 = ptrtoint ptr %count_dw.i406 to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load i32, ptr %count_dw.i406, align 8
  %dec.i430 = add i32 %335, -1
  store i32 %dec.i430, ptr %count_dw.i406, align 8
  tail call void @amdgpu_ring_commit(ptr noundef %arrayidx94) #13
  br label %cleanup

cleanup:                                          ; preds = %amdgpu_ring_write.exit431, %if.then97, %amdgpu_ring_write.exit405.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %call59, %if.then ], [ %call95, %if.then97 ], [ 0, %amdgpu_ring_write.exit431 ], [ 0, %amdgpu_ring_write.exit405.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_irq_put(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_disable_kcq(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_update_fine_grain_clock_gating(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %0 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cg_flags, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %tobool.not = icmp sgt i32 %1, -1
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and3 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %enable, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  br i1 %tobool4.not, label %if.then2.cond.false_crit_edge, label %land.lhs.true

if.then2.cond.false_crit_edge:                    ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then2
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %arrayidx16 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx16, align 4
  %add = add i32 %11, 19528
  %call = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then2.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx18, align 8
  %arrayidx20 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx20, align 4
  %add21 = add i32 %15, 19528
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add21, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call22, %cond.false ]
  %and23 = and i32 %cond, -257
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %and23)
  %cmp.not = icmp eq i32 %cond, %and23
  br i1 %cmp.not, label %cond.end.if.end56_crit_edge, label %if.then24

cond.end.if.end56_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end56

if.then24:                                        ; preds = %cond.end
  %16 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %virt, align 8
  %and27 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  br i1 %tobool28.not, label %if.then24.cond.false49_crit_edge, label %land.lhs.true29

if.then24.cond.false49_crit_edge:                 ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false49

land.lhs.true29:                                  ; preds = %if.then24
  %funcs32 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %18 = ptrtoint ptr %funcs32 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs32, align 4
  %tobool33.not = icmp eq ptr %19, null
  br i1 %tobool33.not, label %land.lhs.true29.cond.false49_crit_edge, label %land.lhs.true34

land.lhs.true29.cond.false49_crit_edge:           ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false49

land.lhs.true34:                                  ; preds = %land.lhs.true29
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %19, i32 0, i32 12
  %20 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_wreg, align 4
  %tobool38.not = icmp eq ptr %21, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false49_crit_edge, label %cond.true39

land.lhs.true34.cond.false49_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false49

cond.true39:                                      ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx45 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %22 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx45, align 8
  %arrayidx47 = getelementptr i32, ptr %23, i32 1
  %24 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx47, align 4
  %add48 = add i32 %25, 19528
  tail call void %21(ptr noundef %adev, i32 noundef %add48, i32 noundef %and23, i32 noundef 0, i32 noundef 1) #13
  br label %if.end56

cond.false49:                                     ; preds = %land.lhs.true34.cond.false49_crit_edge, %land.lhs.true29.cond.false49_crit_edge, %if.then24.cond.false49_crit_edge
  %arrayidx51 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx51, align 8
  %arrayidx53 = getelementptr i32, ptr %27, i32 1
  %28 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx53, align 4
  %add54 = add i32 %29, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add54, i32 noundef %and23, i32 noundef 0) #13
  br label %if.end56

if.end56:                                         ; preds = %cond.false49, %cond.true39, %cond.end.if.end56_crit_edge
  %30 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %virt, align 8
  %and59 = and i32 %31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %if.end56.cond.false83_crit_edge, label %land.lhs.true61

if.end56.cond.false83_crit_edge:                  ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

land.lhs.true61:                                  ; preds = %if.end56
  %funcs64 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %32 = ptrtoint ptr %funcs64 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %funcs64, align 4
  %tobool65.not = icmp eq ptr %33, null
  br i1 %tobool65.not, label %land.lhs.true61.cond.false83_crit_edge, label %land.lhs.true66

land.lhs.true61.cond.false83_crit_edge:           ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

land.lhs.true66:                                  ; preds = %land.lhs.true61
  %sriov_rreg70 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %33, i32 0, i32 13
  %34 = ptrtoint ptr %sriov_rreg70 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_rreg70, align 4
  %tobool71.not = icmp eq ptr %35, null
  br i1 %tobool71.not, label %land.lhs.true66.cond.false83_crit_edge, label %cond.true72

land.lhs.true66.cond.false83_crit_edge:           ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

cond.true72:                                      ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx78 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %36 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx78, align 8
  %arrayidx80 = getelementptr i32, ptr %37, i32 1
  %38 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx80, align 4
  %add81 = add i32 %39, 23345
  %call82 = tail call i32 %35(ptr noundef %adev, i32 noundef %add81, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end90

cond.false83:                                     ; preds = %land.lhs.true66.cond.false83_crit_edge, %land.lhs.true61.cond.false83_crit_edge, %if.end56.cond.false83_crit_edge
  %arrayidx85 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %40 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx85, align 8
  %arrayidx87 = getelementptr i32, ptr %41, i32 1
  %42 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx87, align 4
  %add88 = add i32 %43, 23345
  %call89 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add88, i32 noundef 0) #13
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false83, %cond.true72
  %cond91 = phi i32 [ %call82, %cond.true72 ], [ %call89, %cond.false83 ]
  %and92 = and i32 %cond91, -257
  call void @__sanitizer_cov_trace_cmp4(i32 %cond91, i32 %and92)
  %cmp93.not = icmp eq i32 %cond91, %and92
  br i1 %cmp93.not, label %cond.end90.cleanup_crit_edge, label %if.then94

cond.end90.cleanup_crit_edge:                     ; preds = %cond.end90
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then94:                                        ; preds = %cond.end90
  %44 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %virt, align 8
  %and97 = and i32 %45, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and97)
  %tobool98.not = icmp eq i32 %and97, 0
  br i1 %tobool98.not, label %if.then94.cond.false120_crit_edge, label %land.lhs.true99

if.then94.cond.false120_crit_edge:                ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false120

land.lhs.true99:                                  ; preds = %if.then94
  %funcs102 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %46 = ptrtoint ptr %funcs102 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %funcs102, align 4
  %tobool103.not = icmp eq ptr %47, null
  br i1 %tobool103.not, label %land.lhs.true99.cond.false120_crit_edge, label %land.lhs.true104

land.lhs.true99.cond.false120_crit_edge:          ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false120

land.lhs.true104:                                 ; preds = %land.lhs.true99
  %sriov_wreg108 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %47, i32 0, i32 12
  %48 = ptrtoint ptr %sriov_wreg108 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sriov_wreg108, align 4
  %tobool109.not = icmp eq ptr %49, null
  br i1 %tobool109.not, label %land.lhs.true104.cond.false120_crit_edge, label %cond.true110

land.lhs.true104.cond.false120_crit_edge:         ; preds = %land.lhs.true104
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false120

cond.true110:                                     ; preds = %land.lhs.true104
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx116 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %50 = ptrtoint ptr %arrayidx116 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx116, align 8
  %arrayidx118 = getelementptr i32, ptr %51, i32 1
  %52 = ptrtoint ptr %arrayidx118 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx118, align 4
  %add119 = add i32 %53, 23345
  tail call void %49(ptr noundef %adev, i32 noundef %add119, i32 noundef %and92, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false120:                                    ; preds = %land.lhs.true104.cond.false120_crit_edge, %land.lhs.true99.cond.false120_crit_edge, %if.then94.cond.false120_crit_edge
  %arrayidx122 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %54 = ptrtoint ptr %arrayidx122 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx122, align 8
  %arrayidx124 = getelementptr i32, ptr %55, i32 1
  %56 = ptrtoint ptr %arrayidx124 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx124, align 4
  %add125 = add i32 %57, 23345
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add125, i32 noundef %and92, i32 noundef 0) #13
  br label %cleanup

if.else:                                          ; preds = %if.end
  br i1 %tobool4.not, label %if.else.cond.false154_crit_edge, label %land.lhs.true132

if.else.cond.false154_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false154

land.lhs.true132:                                 ; preds = %if.else
  %funcs135 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %58 = ptrtoint ptr %funcs135 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %funcs135, align 4
  %tobool136.not = icmp eq ptr %59, null
  br i1 %tobool136.not, label %land.lhs.true132.cond.false154_crit_edge, label %land.lhs.true137

land.lhs.true132.cond.false154_crit_edge:         ; preds = %land.lhs.true132
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false154

land.lhs.true137:                                 ; preds = %land.lhs.true132
  %sriov_rreg141 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %59, i32 0, i32 13
  %60 = ptrtoint ptr %sriov_rreg141 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %sriov_rreg141, align 4
  %tobool142.not = icmp eq ptr %61, null
  br i1 %tobool142.not, label %land.lhs.true137.cond.false154_crit_edge, label %cond.true143

land.lhs.true137.cond.false154_crit_edge:         ; preds = %land.lhs.true137
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false154

cond.true143:                                     ; preds = %land.lhs.true137
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx149 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %62 = ptrtoint ptr %arrayidx149 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx149, align 8
  %arrayidx151 = getelementptr i32, ptr %63, i32 1
  %64 = ptrtoint ptr %arrayidx151 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx151, align 4
  %add152 = add i32 %65, 19528
  %call153 = tail call i32 %61(ptr noundef %adev, i32 noundef %add152, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end161

cond.false154:                                    ; preds = %land.lhs.true137.cond.false154_crit_edge, %land.lhs.true132.cond.false154_crit_edge, %if.else.cond.false154_crit_edge
  %arrayidx156 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %66 = ptrtoint ptr %arrayidx156 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx156, align 8
  %arrayidx158 = getelementptr i32, ptr %67, i32 1
  %68 = ptrtoint ptr %arrayidx158 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx158, align 4
  %add159 = add i32 %69, 19528
  %call160 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add159, i32 noundef 0) #13
  br label %cond.end161

cond.end161:                                      ; preds = %cond.false154, %cond.true143
  %cond162 = phi i32 [ %call153, %cond.true143 ], [ %call160, %cond.false154 ]
  %or = or i32 %cond162, 256
  call void @__sanitizer_cov_trace_cmp4(i32 %cond162, i32 %or)
  %cmp163.not = icmp eq i32 %cond162, %or
  br i1 %cmp163.not, label %cond.end161.if.end197_crit_edge, label %if.then164

cond.end161.if.end197_crit_edge:                  ; preds = %cond.end161
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end197

if.then164:                                       ; preds = %cond.end161
  %70 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %virt, align 8
  %and167 = and i32 %71, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and167)
  %tobool168.not = icmp eq i32 %and167, 0
  br i1 %tobool168.not, label %if.then164.cond.false190_crit_edge, label %land.lhs.true169

if.then164.cond.false190_crit_edge:               ; preds = %if.then164
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false190

land.lhs.true169:                                 ; preds = %if.then164
  %funcs172 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %72 = ptrtoint ptr %funcs172 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %funcs172, align 4
  %tobool173.not = icmp eq ptr %73, null
  br i1 %tobool173.not, label %land.lhs.true169.cond.false190_crit_edge, label %land.lhs.true174

land.lhs.true169.cond.false190_crit_edge:         ; preds = %land.lhs.true169
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false190

land.lhs.true174:                                 ; preds = %land.lhs.true169
  %sriov_wreg178 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %73, i32 0, i32 12
  %74 = ptrtoint ptr %sriov_wreg178 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %sriov_wreg178, align 4
  %tobool179.not = icmp eq ptr %75, null
  br i1 %tobool179.not, label %land.lhs.true174.cond.false190_crit_edge, label %cond.true180

land.lhs.true174.cond.false190_crit_edge:         ; preds = %land.lhs.true174
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false190

cond.true180:                                     ; preds = %land.lhs.true174
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx186 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %76 = ptrtoint ptr %arrayidx186 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx186, align 8
  %arrayidx188 = getelementptr i32, ptr %77, i32 1
  %78 = ptrtoint ptr %arrayidx188 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx188, align 4
  %add189 = add i32 %79, 19528
  tail call void %75(ptr noundef %adev, i32 noundef %add189, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %if.end197

cond.false190:                                    ; preds = %land.lhs.true174.cond.false190_crit_edge, %land.lhs.true169.cond.false190_crit_edge, %if.then164.cond.false190_crit_edge
  %arrayidx192 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %80 = ptrtoint ptr %arrayidx192 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %arrayidx192, align 8
  %arrayidx194 = getelementptr i32, ptr %81, i32 1
  %82 = ptrtoint ptr %arrayidx194 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %arrayidx194, align 4
  %add195 = add i32 %83, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add195, i32 noundef %or, i32 noundef 0) #13
  br label %if.end197

if.end197:                                        ; preds = %cond.false190, %cond.true180, %cond.end161.if.end197_crit_edge
  %84 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %virt, align 8
  %and200 = and i32 %85, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and200)
  %tobool201.not = icmp eq i32 %and200, 0
  br i1 %tobool201.not, label %if.end197.cond.false224_crit_edge, label %land.lhs.true202

if.end197.cond.false224_crit_edge:                ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false224

land.lhs.true202:                                 ; preds = %if.end197
  %funcs205 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %86 = ptrtoint ptr %funcs205 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %funcs205, align 4
  %tobool206.not = icmp eq ptr %87, null
  br i1 %tobool206.not, label %land.lhs.true202.cond.false224_crit_edge, label %land.lhs.true207

land.lhs.true202.cond.false224_crit_edge:         ; preds = %land.lhs.true202
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false224

land.lhs.true207:                                 ; preds = %land.lhs.true202
  %sriov_rreg211 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %87, i32 0, i32 13
  %88 = ptrtoint ptr %sriov_rreg211 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %sriov_rreg211, align 4
  %tobool212.not = icmp eq ptr %89, null
  br i1 %tobool212.not, label %land.lhs.true207.cond.false224_crit_edge, label %cond.true213

land.lhs.true207.cond.false224_crit_edge:         ; preds = %land.lhs.true207
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false224

cond.true213:                                     ; preds = %land.lhs.true207
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx219 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %90 = ptrtoint ptr %arrayidx219 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %arrayidx219, align 8
  %arrayidx221 = getelementptr i32, ptr %91, i32 1
  %92 = ptrtoint ptr %arrayidx221 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %arrayidx221, align 4
  %add222 = add i32 %93, 23345
  %call223 = tail call i32 %89(ptr noundef %adev, i32 noundef %add222, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end231

cond.false224:                                    ; preds = %land.lhs.true207.cond.false224_crit_edge, %land.lhs.true202.cond.false224_crit_edge, %if.end197.cond.false224_crit_edge
  %arrayidx226 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %94 = ptrtoint ptr %arrayidx226 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %arrayidx226, align 8
  %arrayidx228 = getelementptr i32, ptr %95, i32 1
  %96 = ptrtoint ptr %arrayidx228 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %arrayidx228, align 4
  %add229 = add i32 %97, 23345
  %call230 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add229, i32 noundef 0) #13
  br label %cond.end231

cond.end231:                                      ; preds = %cond.false224, %cond.true213
  %cond232 = phi i32 [ %call223, %cond.true213 ], [ %call230, %cond.false224 ]
  %or233 = or i32 %cond232, 256
  call void @__sanitizer_cov_trace_cmp4(i32 %cond232, i32 %or233)
  %cmp234.not = icmp eq i32 %cond232, %or233
  br i1 %cmp234.not, label %cond.end231.cleanup_crit_edge, label %if.then235

cond.end231.cleanup_crit_edge:                    ; preds = %cond.end231
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then235:                                       ; preds = %cond.end231
  %98 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %virt, align 8
  %and238 = and i32 %99, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and238)
  %tobool239.not = icmp eq i32 %and238, 0
  br i1 %tobool239.not, label %if.then235.cond.false261_crit_edge, label %land.lhs.true240

if.then235.cond.false261_crit_edge:               ; preds = %if.then235
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false261

land.lhs.true240:                                 ; preds = %if.then235
  %funcs243 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %100 = ptrtoint ptr %funcs243 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %funcs243, align 4
  %tobool244.not = icmp eq ptr %101, null
  br i1 %tobool244.not, label %land.lhs.true240.cond.false261_crit_edge, label %land.lhs.true245

land.lhs.true240.cond.false261_crit_edge:         ; preds = %land.lhs.true240
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false261

land.lhs.true245:                                 ; preds = %land.lhs.true240
  %sriov_wreg249 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %101, i32 0, i32 12
  %102 = ptrtoint ptr %sriov_wreg249 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %sriov_wreg249, align 4
  %tobool250.not = icmp eq ptr %103, null
  br i1 %tobool250.not, label %land.lhs.true245.cond.false261_crit_edge, label %cond.true251

land.lhs.true245.cond.false261_crit_edge:         ; preds = %land.lhs.true245
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false261

cond.true251:                                     ; preds = %land.lhs.true245
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx257 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %104 = ptrtoint ptr %arrayidx257 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %arrayidx257, align 8
  %arrayidx259 = getelementptr i32, ptr %105, i32 1
  %106 = ptrtoint ptr %arrayidx259 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx259, align 4
  %add260 = add i32 %107, 23345
  tail call void %103(ptr noundef %adev, i32 noundef %add260, i32 noundef %or233, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false261:                                    ; preds = %land.lhs.true245.cond.false261_crit_edge, %land.lhs.true240.cond.false261_crit_edge, %if.then235.cond.false261_crit_edge
  %arrayidx263 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %108 = ptrtoint ptr %arrayidx263 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %arrayidx263, align 8
  %arrayidx265 = getelementptr i32, ptr %109, i32 1
  %110 = ptrtoint ptr %arrayidx265 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arrayidx265, align 4
  %add266 = add i32 %111, 23345
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add266, i32 noundef %or233, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false261, %cond.true251, %cond.end231.cleanup_crit_edge, %cond.false120, %cond.true110, %cond.end90.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_update_medium_grain_clock_gating(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %0 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cg_flags, align 8
  %and = and i32 %1, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %enable.not = xor i1 %enable, true
  %and3 = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  %or.cond = select i1 %enable.not, i1 true, i1 %tobool4.not
  %virt350 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt350, align 8
  %and352 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and352)
  %tobool353.not = icmp eq i32 %and352, 0
  br i1 %or.cond, label %if.then349, label %if.then5

if.then5:                                         ; preds = %if.end
  br i1 %tobool353.not, label %if.then5.cond.false_crit_edge, label %land.lhs.true8

if.then5.cond.false_crit_edge:                    ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true8:                                   ; preds = %if.then5
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool9.not = icmp eq ptr %5, null
  br i1 %tobool9.not, label %land.lhs.true8.cond.false_crit_edge, label %land.lhs.true10

land.lhs.true8.cond.false_crit_edge:              ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_wreg, align 4
  %tobool14.not = icmp eq ptr %7, null
  br i1 %tobool14.not, label %land.lhs.true10.cond.false_crit_edge, label %cond.true

land.lhs.true10.cond.false_crit_edge:             ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %arrayidx20 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx20, align 4
  %add = add i32 %11, 8704
  tail call void %7(ptr noundef %adev, i32 noundef %add, i32 noundef -536870912, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true10.cond.false_crit_edge, %land.lhs.true8.cond.false_crit_edge, %if.then5.cond.false_crit_edge
  %arrayidx22 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx22, align 8
  %arrayidx24 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx24, align 4
  %add25 = add i32 %15, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add25, i32 noundef -536870912, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %16 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %virt350, align 8
  %and28 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %cond.end.cond.false51_crit_edge, label %land.lhs.true30

cond.end.cond.false51_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false51

land.lhs.true30:                                  ; preds = %cond.end
  %funcs33 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %18 = ptrtoint ptr %funcs33 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs33, align 4
  %tobool34.not = icmp eq ptr %19, null
  br i1 %tobool34.not, label %land.lhs.true30.cond.false51_crit_edge, label %land.lhs.true35

land.lhs.true30.cond.false51_crit_edge:           ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false51

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %sriov_wreg39 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %19, i32 0, i32 12
  %20 = ptrtoint ptr %sriov_wreg39 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_wreg39, align 4
  %tobool40.not = icmp eq ptr %21, null
  br i1 %tobool40.not, label %land.lhs.true35.cond.false51_crit_edge, label %cond.true41

land.lhs.true35.cond.false51_crit_edge:           ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false51

cond.true41:                                      ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx47 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %22 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx47, align 8
  %arrayidx49 = getelementptr i32, ptr %23, i32 1
  %24 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx49, align 4
  %add50 = add i32 %25, 20614
  tail call void %21(ptr noundef %adev, i32 noundef %add50, i32 noundef -16777216, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end57

cond.false51:                                     ; preds = %land.lhs.true35.cond.false51_crit_edge, %land.lhs.true30.cond.false51_crit_edge, %cond.end.cond.false51_crit_edge
  %arrayidx53 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx53, align 8
  %arrayidx55 = getelementptr i32, ptr %27, i32 1
  %28 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx55, align 4
  %add56 = add i32 %29, 20614
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add56, i32 noundef -16777216, i32 noundef 0) #13
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false51, %cond.true41
  %30 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %virt350, align 8
  %and60 = and i32 %31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and60)
  %tobool61.not = icmp eq i32 %and60, 0
  br i1 %tobool61.not, label %cond.end57.cond.false83_crit_edge, label %land.lhs.true62

cond.end57.cond.false83_crit_edge:                ; preds = %cond.end57
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

land.lhs.true62:                                  ; preds = %cond.end57
  %funcs65 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %32 = ptrtoint ptr %funcs65 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %funcs65, align 4
  %tobool66.not = icmp eq ptr %33, null
  br i1 %tobool66.not, label %land.lhs.true62.cond.false83_crit_edge, label %land.lhs.true67

land.lhs.true62.cond.false83_crit_edge:           ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

land.lhs.true67:                                  ; preds = %land.lhs.true62
  %sriov_wreg71 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %33, i32 0, i32 12
  %34 = ptrtoint ptr %sriov_wreg71 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_wreg71, align 4
  %tobool72.not = icmp eq ptr %35, null
  br i1 %tobool72.not, label %land.lhs.true67.cond.false83_crit_edge, label %cond.true73

land.lhs.true67.cond.false83_crit_edge:           ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false83

cond.true73:                                      ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx79 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %36 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx79, align 8
  %arrayidx81 = getelementptr i32, ptr %37, i32 1
  %38 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx81, align 4
  %add82 = add i32 %39, 20612
  tail call void %35(ptr noundef %adev, i32 noundef %add82, i32 noundef -16777216, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end89

cond.false83:                                     ; preds = %land.lhs.true67.cond.false83_crit_edge, %land.lhs.true62.cond.false83_crit_edge, %cond.end57.cond.false83_crit_edge
  %arrayidx85 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %40 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx85, align 8
  %arrayidx87 = getelementptr i32, ptr %41, i32 1
  %42 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx87, align 4
  %add88 = add i32 %43, 20612
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add88, i32 noundef -16777216, i32 noundef 0) #13
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false83, %cond.true73
  %44 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %virt350, align 8
  %and92 = and i32 %45, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and92)
  %tobool93.not = icmp eq i32 %and92, 0
  br i1 %tobool93.not, label %cond.end89.cond.false115_crit_edge, label %land.lhs.true94

cond.end89.cond.false115_crit_edge:               ; preds = %cond.end89
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false115

land.lhs.true94:                                  ; preds = %cond.end89
  %funcs97 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %46 = ptrtoint ptr %funcs97 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %funcs97, align 4
  %tobool98.not = icmp eq ptr %47, null
  br i1 %tobool98.not, label %land.lhs.true94.cond.false115_crit_edge, label %land.lhs.true99

land.lhs.true94.cond.false115_crit_edge:          ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false115

land.lhs.true99:                                  ; preds = %land.lhs.true94
  %sriov_wreg103 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %47, i32 0, i32 12
  %48 = ptrtoint ptr %sriov_wreg103 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sriov_wreg103, align 4
  %tobool104.not = icmp eq ptr %49, null
  br i1 %tobool104.not, label %land.lhs.true99.cond.false115_crit_edge, label %cond.true105

land.lhs.true99.cond.false115_crit_edge:          ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false115

cond.true105:                                     ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx111 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %50 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx111, align 8
  %arrayidx113 = getelementptr i32, ptr %51, i32 1
  %52 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx113, align 4
  %add114 = add i32 %53, 20613
  tail call void %49(ptr noundef %adev, i32 noundef %add114, i32 noundef -16777216, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end121

cond.false115:                                    ; preds = %land.lhs.true99.cond.false115_crit_edge, %land.lhs.true94.cond.false115_crit_edge, %cond.end89.cond.false115_crit_edge
  %arrayidx117 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %54 = ptrtoint ptr %arrayidx117 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx117, align 8
  %arrayidx119 = getelementptr i32, ptr %55, i32 1
  %56 = ptrtoint ptr %arrayidx119 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx119, align 4
  %add120 = add i32 %57, 20613
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add120, i32 noundef -16777216, i32 noundef 0) #13
  br label %cond.end121

cond.end121:                                      ; preds = %cond.false115, %cond.true105
  %58 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %virt350, align 8
  %and124 = and i32 %59, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and124)
  %tobool125.not = icmp eq i32 %and124, 0
  br i1 %tobool125.not, label %cond.end121.cond.false146_crit_edge, label %land.lhs.true126

cond.end121.cond.false146_crit_edge:              ; preds = %cond.end121
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false146

land.lhs.true126:                                 ; preds = %cond.end121
  %funcs129 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %60 = ptrtoint ptr %funcs129 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %funcs129, align 4
  %tobool130.not = icmp eq ptr %61, null
  br i1 %tobool130.not, label %land.lhs.true126.cond.false146_crit_edge, label %land.lhs.true131

land.lhs.true126.cond.false146_crit_edge:         ; preds = %land.lhs.true126
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false146

land.lhs.true131:                                 ; preds = %land.lhs.true126
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %61, i32 0, i32 13
  %62 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %sriov_rreg, align 4
  %tobool135.not = icmp eq ptr %63, null
  br i1 %tobool135.not, label %land.lhs.true131.cond.false146_crit_edge, label %cond.true136

land.lhs.true131.cond.false146_crit_edge:         ; preds = %land.lhs.true131
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false146

cond.true136:                                     ; preds = %land.lhs.true131
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx142 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %64 = ptrtoint ptr %arrayidx142 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx142, align 8
  %arrayidx144 = getelementptr i32, ptr %65, i32 1
  %66 = ptrtoint ptr %arrayidx144 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx144, align 4
  %add145 = add i32 %67, 19528
  %call = tail call i32 %63(ptr noundef %adev, i32 noundef %add145, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end153

cond.false146:                                    ; preds = %land.lhs.true131.cond.false146_crit_edge, %land.lhs.true126.cond.false146_crit_edge, %cond.end121.cond.false146_crit_edge
  %arrayidx148 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %68 = ptrtoint ptr %arrayidx148 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %arrayidx148, align 8
  %arrayidx150 = getelementptr i32, ptr %69, i32 1
  %70 = ptrtoint ptr %arrayidx150 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx150, align 4
  %add151 = add i32 %71, 19528
  %call152 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add151, i32 noundef 0) #13
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false146, %cond.true136
  %cond = phi i32 [ %call, %cond.true136 ], [ %call152, %cond.false146 ]
  %and154 = and i32 %cond, -65895
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %and154)
  %cmp.not = icmp eq i32 %cond, %and154
  br i1 %cmp.not, label %cond.end153.if.end188_crit_edge, label %if.then155

cond.end153.if.end188_crit_edge:                  ; preds = %cond.end153
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end188

if.then155:                                       ; preds = %cond.end153
  %72 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %virt350, align 8
  %and158 = and i32 %73, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and158)
  %tobool159.not = icmp eq i32 %and158, 0
  br i1 %tobool159.not, label %if.then155.cond.false181_crit_edge, label %land.lhs.true160

if.then155.cond.false181_crit_edge:               ; preds = %if.then155
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false181

land.lhs.true160:                                 ; preds = %if.then155
  %funcs163 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %74 = ptrtoint ptr %funcs163 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %funcs163, align 4
  %tobool164.not = icmp eq ptr %75, null
  br i1 %tobool164.not, label %land.lhs.true160.cond.false181_crit_edge, label %land.lhs.true165

land.lhs.true160.cond.false181_crit_edge:         ; preds = %land.lhs.true160
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false181

land.lhs.true165:                                 ; preds = %land.lhs.true160
  %sriov_wreg169 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %75, i32 0, i32 12
  %76 = ptrtoint ptr %sriov_wreg169 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %sriov_wreg169, align 4
  %tobool170.not = icmp eq ptr %77, null
  br i1 %tobool170.not, label %land.lhs.true165.cond.false181_crit_edge, label %cond.true171

land.lhs.true165.cond.false181_crit_edge:         ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false181

cond.true171:                                     ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx177 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %78 = ptrtoint ptr %arrayidx177 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx177, align 8
  %arrayidx179 = getelementptr i32, ptr %79, i32 1
  %80 = ptrtoint ptr %arrayidx179 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %arrayidx179, align 4
  %add180 = add i32 %81, 19528
  tail call void %77(ptr noundef %adev, i32 noundef %add180, i32 noundef %and154, i32 noundef 0, i32 noundef 1) #13
  br label %if.end188

cond.false181:                                    ; preds = %land.lhs.true165.cond.false181_crit_edge, %land.lhs.true160.cond.false181_crit_edge, %if.then155.cond.false181_crit_edge
  %arrayidx183 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %82 = ptrtoint ptr %arrayidx183 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %arrayidx183, align 8
  %arrayidx185 = getelementptr i32, ptr %83, i32 1
  %84 = ptrtoint ptr %arrayidx185 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %arrayidx185, align 4
  %add186 = add i32 %85, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add186, i32 noundef %and154, i32 noundef 0) #13
  br label %if.end188

if.end188:                                        ; preds = %cond.false181, %cond.true171, %cond.end153.if.end188_crit_edge
  %86 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %cg_flags, align 8
  %and190 = and i32 %87, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and190)
  %tobool191.not = icmp eq i32 %and190, 0
  br i1 %tobool191.not, label %if.end188.cleanup_crit_edge, label %if.then192

if.end188.cleanup_crit_edge:                      ; preds = %if.end188
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then192:                                       ; preds = %if.end188
  %and194 = and i32 %87, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and194)
  %tobool195.not = icmp eq i32 %and194, 0
  br i1 %tobool195.not, label %if.then192.if.end267_crit_edge, label %if.then196

if.then192.if.end267_crit_edge:                   ; preds = %if.then192
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end267

if.then196:                                       ; preds = %if.then192
  %88 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %virt350, align 8
  %and199 = and i32 %89, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and199)
  %tobool200.not = icmp eq i32 %and199, 0
  br i1 %tobool200.not, label %if.then196.cond.false223_crit_edge, label %land.lhs.true201

if.then196.cond.false223_crit_edge:               ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false223

land.lhs.true201:                                 ; preds = %if.then196
  %funcs204 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %90 = ptrtoint ptr %funcs204 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %funcs204, align 4
  %tobool205.not = icmp eq ptr %91, null
  br i1 %tobool205.not, label %land.lhs.true201.cond.false223_crit_edge, label %land.lhs.true206

land.lhs.true201.cond.false223_crit_edge:         ; preds = %land.lhs.true201
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false223

land.lhs.true206:                                 ; preds = %land.lhs.true201
  %sriov_rreg210 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %91, i32 0, i32 13
  %92 = ptrtoint ptr %sriov_rreg210 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %sriov_rreg210, align 4
  %tobool211.not = icmp eq ptr %93, null
  br i1 %tobool211.not, label %land.lhs.true206.cond.false223_crit_edge, label %cond.true212

land.lhs.true206.cond.false223_crit_edge:         ; preds = %land.lhs.true206
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false223

cond.true212:                                     ; preds = %land.lhs.true206
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx218 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %94 = ptrtoint ptr %arrayidx218 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %arrayidx218, align 8
  %arrayidx220 = getelementptr i32, ptr %95, i32 1
  %96 = ptrtoint ptr %arrayidx220 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %arrayidx220, align 4
  %add221 = add i32 %97, 19462
  %call222 = tail call i32 %93(ptr noundef %adev, i32 noundef %add221, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end230

cond.false223:                                    ; preds = %land.lhs.true206.cond.false223_crit_edge, %land.lhs.true201.cond.false223_crit_edge, %if.then196.cond.false223_crit_edge
  %arrayidx225 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %98 = ptrtoint ptr %arrayidx225 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %arrayidx225, align 8
  %arrayidx227 = getelementptr i32, ptr %99, i32 1
  %100 = ptrtoint ptr %arrayidx227 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx227, align 4
  %add228 = add i32 %101, 19462
  %call229 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add228, i32 noundef 0) #13
  br label %cond.end230

cond.end230:                                      ; preds = %cond.false223, %cond.true212
  %cond231 = phi i32 [ %call222, %cond.true212 ], [ %call229, %cond.false223 ]
  %or = or i32 %cond231, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %cond231, i32 %or)
  %cmp232.not = icmp eq i32 %cond231, %or
  br i1 %cmp232.not, label %cond.end230.if.end267_crit_edge, label %if.then233

cond.end230.if.end267_crit_edge:                  ; preds = %cond.end230
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end267

if.then233:                                       ; preds = %cond.end230
  %102 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %virt350, align 8
  %and236 = and i32 %103, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and236)
  %tobool237.not = icmp eq i32 %and236, 0
  br i1 %tobool237.not, label %if.then233.cond.false259_crit_edge, label %land.lhs.true238

if.then233.cond.false259_crit_edge:               ; preds = %if.then233
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false259

land.lhs.true238:                                 ; preds = %if.then233
  %funcs241 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %104 = ptrtoint ptr %funcs241 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %funcs241, align 4
  %tobool242.not = icmp eq ptr %105, null
  br i1 %tobool242.not, label %land.lhs.true238.cond.false259_crit_edge, label %land.lhs.true243

land.lhs.true238.cond.false259_crit_edge:         ; preds = %land.lhs.true238
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false259

land.lhs.true243:                                 ; preds = %land.lhs.true238
  %sriov_wreg247 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %105, i32 0, i32 12
  %106 = ptrtoint ptr %sriov_wreg247 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %sriov_wreg247, align 4
  %tobool248.not = icmp eq ptr %107, null
  br i1 %tobool248.not, label %land.lhs.true243.cond.false259_crit_edge, label %cond.true249

land.lhs.true243.cond.false259_crit_edge:         ; preds = %land.lhs.true243
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false259

cond.true249:                                     ; preds = %land.lhs.true243
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx255 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %108 = ptrtoint ptr %arrayidx255 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %arrayidx255, align 8
  %arrayidx257 = getelementptr i32, ptr %109, i32 1
  %110 = ptrtoint ptr %arrayidx257 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arrayidx257, align 4
  %add258 = add i32 %111, 19462
  tail call void %107(ptr noundef %adev, i32 noundef %add258, i32 noundef %or, i32 noundef 0, i32 noundef 1) #13
  br label %if.end267

cond.false259:                                    ; preds = %land.lhs.true243.cond.false259_crit_edge, %land.lhs.true238.cond.false259_crit_edge, %if.then233.cond.false259_crit_edge
  %arrayidx261 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %112 = ptrtoint ptr %arrayidx261 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %arrayidx261, align 8
  %arrayidx263 = getelementptr i32, ptr %113, i32 1
  %114 = ptrtoint ptr %arrayidx263 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %arrayidx263, align 4
  %add264 = add i32 %115, 19462
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add264, i32 noundef %or, i32 noundef 0) #13
  br label %if.end267

if.end267:                                        ; preds = %cond.false259, %cond.true249, %cond.end230.if.end267_crit_edge, %if.then192.if.end267_crit_edge
  %116 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %cg_flags, align 8
  %and269 = and i32 %117, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and269)
  %tobool270.not = icmp eq i32 %and269, 0
  br i1 %tobool270.not, label %if.end267.cleanup_crit_edge, label %if.then271

if.end267.cleanup_crit_edge:                      ; preds = %if.end267
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then271:                                       ; preds = %if.end267
  %118 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %virt350, align 8
  %and274 = and i32 %119, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and274)
  %tobool275.not = icmp eq i32 %and274, 0
  br i1 %tobool275.not, label %if.then271.cond.false298_crit_edge, label %land.lhs.true276

if.then271.cond.false298_crit_edge:               ; preds = %if.then271
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false298

land.lhs.true276:                                 ; preds = %if.then271
  %funcs279 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %120 = ptrtoint ptr %funcs279 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %funcs279, align 4
  %tobool280.not = icmp eq ptr %121, null
  br i1 %tobool280.not, label %land.lhs.true276.cond.false298_crit_edge, label %land.lhs.true281

land.lhs.true276.cond.false298_crit_edge:         ; preds = %land.lhs.true276
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false298

land.lhs.true281:                                 ; preds = %land.lhs.true276
  %sriov_rreg285 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %121, i32 0, i32 13
  %122 = ptrtoint ptr %sriov_rreg285 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %sriov_rreg285, align 4
  %tobool286.not = icmp eq ptr %123, null
  br i1 %tobool286.not, label %land.lhs.true281.cond.false298_crit_edge, label %cond.true287

land.lhs.true281.cond.false298_crit_edge:         ; preds = %land.lhs.true281
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false298

cond.true287:                                     ; preds = %land.lhs.true281
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx293 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %124 = ptrtoint ptr %arrayidx293 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %arrayidx293, align 8
  %126 = ptrtoint ptr %125 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %125, align 4
  %add296 = add i32 %127, 7705
  %call297 = tail call i32 %123(ptr noundef %adev, i32 noundef %add296, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end305

cond.false298:                                    ; preds = %land.lhs.true281.cond.false298_crit_edge, %land.lhs.true276.cond.false298_crit_edge, %if.then271.cond.false298_crit_edge
  %arrayidx300 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %128 = ptrtoint ptr %arrayidx300 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %arrayidx300, align 8
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %129, align 4
  %add303 = add i32 %131, 7705
  %call304 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add303, i32 noundef 0) #13
  br label %cond.end305

cond.end305:                                      ; preds = %cond.false298, %cond.true287
  %cond306 = phi i32 [ %call297, %cond.true287 ], [ %call304, %cond.false298 ]
  %or307 = or i32 %cond306, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %cond306, i32 %or307)
  %cmp308.not = icmp eq i32 %cond306, %or307
  br i1 %cmp308.not, label %cond.end305.cleanup_crit_edge, label %if.then309

cond.end305.cleanup_crit_edge:                    ; preds = %cond.end305
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then309:                                       ; preds = %cond.end305
  %132 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %virt350, align 8
  %and312 = and i32 %133, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and312)
  %tobool313.not = icmp eq i32 %and312, 0
  br i1 %tobool313.not, label %if.then309.cond.false335_crit_edge, label %land.lhs.true314

if.then309.cond.false335_crit_edge:               ; preds = %if.then309
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false335

land.lhs.true314:                                 ; preds = %if.then309
  %funcs317 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %134 = ptrtoint ptr %funcs317 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %funcs317, align 4
  %tobool318.not = icmp eq ptr %135, null
  br i1 %tobool318.not, label %land.lhs.true314.cond.false335_crit_edge, label %land.lhs.true319

land.lhs.true314.cond.false335_crit_edge:         ; preds = %land.lhs.true314
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false335

land.lhs.true319:                                 ; preds = %land.lhs.true314
  %sriov_wreg323 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %135, i32 0, i32 12
  %136 = ptrtoint ptr %sriov_wreg323 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %sriov_wreg323, align 4
  %tobool324.not = icmp eq ptr %137, null
  br i1 %tobool324.not, label %land.lhs.true319.cond.false335_crit_edge, label %cond.true325

land.lhs.true319.cond.false335_crit_edge:         ; preds = %land.lhs.true319
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false335

cond.true325:                                     ; preds = %land.lhs.true319
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx331 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %138 = ptrtoint ptr %arrayidx331 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %arrayidx331, align 8
  %140 = ptrtoint ptr %139 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %139, align 4
  %add334 = add i32 %141, 7705
  tail call void %137(ptr noundef %adev, i32 noundef %add334, i32 noundef %or307, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false335:                                    ; preds = %land.lhs.true319.cond.false335_crit_edge, %land.lhs.true314.cond.false335_crit_edge, %if.then309.cond.false335_crit_edge
  %arrayidx337 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %142 = ptrtoint ptr %arrayidx337 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %arrayidx337, align 8
  %144 = ptrtoint ptr %143 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %143, align 4
  %add340 = add i32 %145, 7705
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add340, i32 noundef %or307, i32 noundef 0) #13
  br label %cleanup

if.then349:                                       ; preds = %if.end
  br i1 %tobool353.not, label %if.then349.cond.false376_crit_edge, label %land.lhs.true354

if.then349.cond.false376_crit_edge:               ; preds = %if.then349
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false376

land.lhs.true354:                                 ; preds = %if.then349
  %funcs357 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %146 = ptrtoint ptr %funcs357 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %funcs357, align 4
  %tobool358.not = icmp eq ptr %147, null
  br i1 %tobool358.not, label %land.lhs.true354.cond.false376_crit_edge, label %land.lhs.true359

land.lhs.true354.cond.false376_crit_edge:         ; preds = %land.lhs.true354
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false376

land.lhs.true359:                                 ; preds = %land.lhs.true354
  %sriov_rreg363 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %147, i32 0, i32 13
  %148 = ptrtoint ptr %sriov_rreg363 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %sriov_rreg363, align 4
  %tobool364.not = icmp eq ptr %149, null
  br i1 %tobool364.not, label %land.lhs.true359.cond.false376_crit_edge, label %cond.true365

land.lhs.true359.cond.false376_crit_edge:         ; preds = %land.lhs.true359
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false376

cond.true365:                                     ; preds = %land.lhs.true359
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx371 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %150 = ptrtoint ptr %arrayidx371 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %arrayidx371, align 8
  %arrayidx373 = getelementptr i32, ptr %151, i32 1
  %152 = ptrtoint ptr %arrayidx373 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %arrayidx373, align 4
  %add374 = add i32 %153, 19528
  %call375 = tail call i32 %149(ptr noundef %adev, i32 noundef %add374, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end383

cond.false376:                                    ; preds = %land.lhs.true359.cond.false376_crit_edge, %land.lhs.true354.cond.false376_crit_edge, %if.then349.cond.false376_crit_edge
  %arrayidx378 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %154 = ptrtoint ptr %arrayidx378 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %arrayidx378, align 8
  %arrayidx380 = getelementptr i32, ptr %155, i32 1
  %156 = ptrtoint ptr %arrayidx380 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %arrayidx380, align 4
  %add381 = add i32 %157, 19528
  %call382 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add381, i32 noundef 0) #13
  br label %cond.end383

cond.end383:                                      ; preds = %cond.false376, %cond.true365
  %cond384 = phi i32 [ %call375, %cond.true365 ], [ %call382, %cond.false376 ]
  %or385 = or i32 %cond384, 65894
  call void @__sanitizer_cov_trace_cmp4(i32 %cond384, i32 %or385)
  %cmp386.not = icmp eq i32 %cond384, %or385
  br i1 %cmp386.not, label %cond.end383.if.end420_crit_edge, label %if.then387

cond.end383.if.end420_crit_edge:                  ; preds = %cond.end383
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end420

if.then387:                                       ; preds = %cond.end383
  %158 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %virt350, align 8
  %and390 = and i32 %159, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and390)
  %tobool391.not = icmp eq i32 %and390, 0
  br i1 %tobool391.not, label %if.then387.cond.false413_crit_edge, label %land.lhs.true392

if.then387.cond.false413_crit_edge:               ; preds = %if.then387
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false413

land.lhs.true392:                                 ; preds = %if.then387
  %funcs395 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %160 = ptrtoint ptr %funcs395 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %funcs395, align 4
  %tobool396.not = icmp eq ptr %161, null
  br i1 %tobool396.not, label %land.lhs.true392.cond.false413_crit_edge, label %land.lhs.true397

land.lhs.true392.cond.false413_crit_edge:         ; preds = %land.lhs.true392
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false413

land.lhs.true397:                                 ; preds = %land.lhs.true392
  %sriov_wreg401 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %161, i32 0, i32 12
  %162 = ptrtoint ptr %sriov_wreg401 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %sriov_wreg401, align 4
  %tobool402.not = icmp eq ptr %163, null
  br i1 %tobool402.not, label %land.lhs.true397.cond.false413_crit_edge, label %cond.true403

land.lhs.true397.cond.false413_crit_edge:         ; preds = %land.lhs.true397
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false413

cond.true403:                                     ; preds = %land.lhs.true397
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx409 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %164 = ptrtoint ptr %arrayidx409 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %arrayidx409, align 8
  %arrayidx411 = getelementptr i32, ptr %165, i32 1
  %166 = ptrtoint ptr %arrayidx411 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %arrayidx411, align 4
  %add412 = add i32 %167, 19528
  tail call void %163(ptr noundef %adev, i32 noundef %add412, i32 noundef %or385, i32 noundef 0, i32 noundef 1) #13
  br label %if.end420

cond.false413:                                    ; preds = %land.lhs.true397.cond.false413_crit_edge, %land.lhs.true392.cond.false413_crit_edge, %if.then387.cond.false413_crit_edge
  %arrayidx415 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %168 = ptrtoint ptr %arrayidx415 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %arrayidx415, align 8
  %arrayidx417 = getelementptr i32, ptr %169, i32 1
  %170 = ptrtoint ptr %arrayidx417 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %arrayidx417, align 4
  %add418 = add i32 %171, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add418, i32 noundef %or385, i32 noundef 0) #13
  br label %if.end420

if.end420:                                        ; preds = %cond.false413, %cond.true403, %cond.end383.if.end420_crit_edge
  %172 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %virt350, align 8
  %and423 = and i32 %173, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and423)
  %tobool424.not = icmp eq i32 %and423, 0
  br i1 %tobool424.not, label %if.end420.cond.false447_crit_edge, label %land.lhs.true425

if.end420.cond.false447_crit_edge:                ; preds = %if.end420
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false447

land.lhs.true425:                                 ; preds = %if.end420
  %funcs428 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %174 = ptrtoint ptr %funcs428 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %funcs428, align 4
  %tobool429.not = icmp eq ptr %175, null
  br i1 %tobool429.not, label %land.lhs.true425.cond.false447_crit_edge, label %land.lhs.true430

land.lhs.true425.cond.false447_crit_edge:         ; preds = %land.lhs.true425
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false447

land.lhs.true430:                                 ; preds = %land.lhs.true425
  %sriov_rreg434 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %175, i32 0, i32 13
  %176 = ptrtoint ptr %sriov_rreg434 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %sriov_rreg434, align 4
  %tobool435.not = icmp eq ptr %177, null
  br i1 %tobool435.not, label %land.lhs.true430.cond.false447_crit_edge, label %cond.true436

land.lhs.true430.cond.false447_crit_edge:         ; preds = %land.lhs.true430
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false447

cond.true436:                                     ; preds = %land.lhs.true430
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx442 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %178 = ptrtoint ptr %arrayidx442 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %arrayidx442, align 8
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %179, align 4
  %add445 = add i32 %181, 7705
  %call446 = tail call i32 %177(ptr noundef %adev, i32 noundef %add445, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end454

cond.false447:                                    ; preds = %land.lhs.true430.cond.false447_crit_edge, %land.lhs.true425.cond.false447_crit_edge, %if.end420.cond.false447_crit_edge
  %arrayidx449 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %182 = ptrtoint ptr %arrayidx449 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %arrayidx449, align 8
  %184 = ptrtoint ptr %183 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %183, align 4
  %add452 = add i32 %185, 7705
  %call453 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add452, i32 noundef 0) #13
  br label %cond.end454

cond.end454:                                      ; preds = %cond.false447, %cond.true436
  %cond455 = phi i32 [ %call446, %cond.true436 ], [ %call453, %cond.false447 ]
  %and456 = and i32 %cond455, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and456)
  %tobool457.not = icmp eq i32 %and456, 0
  br i1 %tobool457.not, label %cond.end454.if.end492_crit_edge, label %if.then458

cond.end454.if.end492_crit_edge:                  ; preds = %cond.end454
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end492

if.then458:                                       ; preds = %cond.end454
  %and459 = and i32 %cond455, -2
  %186 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %virt350, align 8
  %and462 = and i32 %187, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and462)
  %tobool463.not = icmp eq i32 %and462, 0
  br i1 %tobool463.not, label %if.then458.cond.false485_crit_edge, label %land.lhs.true464

if.then458.cond.false485_crit_edge:               ; preds = %if.then458
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false485

land.lhs.true464:                                 ; preds = %if.then458
  %funcs467 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %188 = ptrtoint ptr %funcs467 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %funcs467, align 4
  %tobool468.not = icmp eq ptr %189, null
  br i1 %tobool468.not, label %land.lhs.true464.cond.false485_crit_edge, label %land.lhs.true469

land.lhs.true464.cond.false485_crit_edge:         ; preds = %land.lhs.true464
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false485

land.lhs.true469:                                 ; preds = %land.lhs.true464
  %sriov_wreg473 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %189, i32 0, i32 12
  %190 = ptrtoint ptr %sriov_wreg473 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %sriov_wreg473, align 4
  %tobool474.not = icmp eq ptr %191, null
  br i1 %tobool474.not, label %land.lhs.true469.cond.false485_crit_edge, label %cond.true475

land.lhs.true469.cond.false485_crit_edge:         ; preds = %land.lhs.true469
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false485

cond.true475:                                     ; preds = %land.lhs.true469
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx481 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %192 = ptrtoint ptr %arrayidx481 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %arrayidx481, align 8
  %194 = ptrtoint ptr %193 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %193, align 4
  %add484 = add i32 %195, 7705
  tail call void %191(ptr noundef %adev, i32 noundef %add484, i32 noundef %and459, i32 noundef 0, i32 noundef 1) #13
  br label %if.end492

cond.false485:                                    ; preds = %land.lhs.true469.cond.false485_crit_edge, %land.lhs.true464.cond.false485_crit_edge, %if.then458.cond.false485_crit_edge
  %arrayidx487 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %196 = ptrtoint ptr %arrayidx487 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %arrayidx487, align 8
  %198 = ptrtoint ptr %197 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %197, align 4
  %add490 = add i32 %199, 7705
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add490, i32 noundef %and459, i32 noundef 0) #13
  br label %if.end492

if.end492:                                        ; preds = %cond.false485, %cond.true475, %cond.end454.if.end492_crit_edge
  %200 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %virt350, align 8
  %and495 = and i32 %201, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and495)
  %tobool496.not = icmp eq i32 %and495, 0
  br i1 %tobool496.not, label %if.end492.cond.false519_crit_edge, label %land.lhs.true497

if.end492.cond.false519_crit_edge:                ; preds = %if.end492
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false519

land.lhs.true497:                                 ; preds = %if.end492
  %funcs500 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %202 = ptrtoint ptr %funcs500 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %funcs500, align 4
  %tobool501.not = icmp eq ptr %203, null
  br i1 %tobool501.not, label %land.lhs.true497.cond.false519_crit_edge, label %land.lhs.true502

land.lhs.true497.cond.false519_crit_edge:         ; preds = %land.lhs.true497
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false519

land.lhs.true502:                                 ; preds = %land.lhs.true497
  %sriov_rreg506 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %203, i32 0, i32 13
  %204 = ptrtoint ptr %sriov_rreg506 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %sriov_rreg506, align 4
  %tobool507.not = icmp eq ptr %205, null
  br i1 %tobool507.not, label %land.lhs.true502.cond.false519_crit_edge, label %cond.true508

land.lhs.true502.cond.false519_crit_edge:         ; preds = %land.lhs.true502
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false519

cond.true508:                                     ; preds = %land.lhs.true502
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx514 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %206 = ptrtoint ptr %arrayidx514 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %arrayidx514, align 8
  %arrayidx516 = getelementptr i32, ptr %207, i32 1
  %208 = ptrtoint ptr %arrayidx516 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %arrayidx516, align 4
  %add517 = add i32 %209, 19462
  %call518 = tail call i32 %205(ptr noundef %adev, i32 noundef %add517, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end526

cond.false519:                                    ; preds = %land.lhs.true502.cond.false519_crit_edge, %land.lhs.true497.cond.false519_crit_edge, %if.end492.cond.false519_crit_edge
  %arrayidx521 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %210 = ptrtoint ptr %arrayidx521 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %arrayidx521, align 8
  %arrayidx523 = getelementptr i32, ptr %211, i32 1
  %212 = ptrtoint ptr %arrayidx523 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %arrayidx523, align 4
  %add524 = add i32 %213, 19462
  %call525 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add524, i32 noundef 0) #13
  br label %cond.end526

cond.end526:                                      ; preds = %cond.false519, %cond.true508
  %cond527 = phi i32 [ %call518, %cond.true508 ], [ %call525, %cond.false519 ]
  %and528 = and i32 %cond527, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and528)
  %tobool529.not = icmp eq i32 %and528, 0
  br i1 %tobool529.not, label %cond.end526.cleanup_crit_edge, label %if.then530

cond.end526.cleanup_crit_edge:                    ; preds = %cond.end526
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then530:                                       ; preds = %cond.end526
  %and531 = and i32 %cond527, -2
  %214 = ptrtoint ptr %virt350 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %virt350, align 8
  %and534 = and i32 %215, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and534)
  %tobool535.not = icmp eq i32 %and534, 0
  br i1 %tobool535.not, label %if.then530.cond.false557_crit_edge, label %land.lhs.true536

if.then530.cond.false557_crit_edge:               ; preds = %if.then530
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false557

land.lhs.true536:                                 ; preds = %if.then530
  %funcs539 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %216 = ptrtoint ptr %funcs539 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %funcs539, align 4
  %tobool540.not = icmp eq ptr %217, null
  br i1 %tobool540.not, label %land.lhs.true536.cond.false557_crit_edge, label %land.lhs.true541

land.lhs.true536.cond.false557_crit_edge:         ; preds = %land.lhs.true536
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false557

land.lhs.true541:                                 ; preds = %land.lhs.true536
  %sriov_wreg545 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %217, i32 0, i32 12
  %218 = ptrtoint ptr %sriov_wreg545 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %sriov_wreg545, align 4
  %tobool546.not = icmp eq ptr %219, null
  br i1 %tobool546.not, label %land.lhs.true541.cond.false557_crit_edge, label %cond.true547

land.lhs.true541.cond.false557_crit_edge:         ; preds = %land.lhs.true541
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false557

cond.true547:                                     ; preds = %land.lhs.true541
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx553 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %220 = ptrtoint ptr %arrayidx553 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %arrayidx553, align 8
  %arrayidx555 = getelementptr i32, ptr %221, i32 1
  %222 = ptrtoint ptr %arrayidx555 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %arrayidx555, align 4
  %add556 = add i32 %223, 19462
  tail call void %219(ptr noundef %adev, i32 noundef %add556, i32 noundef %and531, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false557:                                    ; preds = %land.lhs.true541.cond.false557_crit_edge, %land.lhs.true536.cond.false557_crit_edge, %if.then530.cond.false557_crit_edge
  %arrayidx559 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %224 = ptrtoint ptr %arrayidx559 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %arrayidx559, align 8
  %arrayidx561 = getelementptr i32, ptr %225, i32 1
  %226 = ptrtoint ptr %arrayidx561 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %arrayidx561, align 4
  %add562 = add i32 %227, 19462
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add562, i32 noundef %and531, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false557, %cond.true547, %cond.end526.cleanup_crit_edge, %cond.false335, %cond.true325, %cond.end305.cleanup_crit_edge, %if.end267.cleanup_crit_edge, %if.end188.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_update_3d_clock_gating(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %0 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cg_flags, align 8
  %and = and i32 %1, 3145728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and3 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %enable, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  br i1 %tobool4.not, label %if.then2.cond.false_crit_edge, label %land.lhs.true

if.then2.cond.false_crit_edge:                    ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then2
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %arrayidx16 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx16, align 4
  %add = add i32 %11, 19528
  %call = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then2.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx18, align 8
  %arrayidx20 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx20, align 4
  %add21 = add i32 %15, 19528
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add21, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call22, %cond.false ]
  %16 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cg_flags, align 8
  %and24 = and i32 %17, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  %and27 = and i32 %cond, -129
  %spec.select = select i1 %tobool25.not, i32 %cond, i32 %and27
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %spec.select)
  %cmp.not = icmp eq i32 %cond, %spec.select
  br i1 %cmp.not, label %cond.end.if.end61_crit_edge, label %if.then29

cond.end.if.end61_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end61

if.then29:                                        ; preds = %cond.end
  %18 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt, align 8
  %and32 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.then29.cond.false54_crit_edge, label %land.lhs.true34

if.then29.cond.false54_crit_edge:                 ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false54

land.lhs.true34:                                  ; preds = %if.then29
  %funcs37 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs37 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs37, align 4
  %tobool38.not = icmp eq ptr %21, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false54_crit_edge, label %land.lhs.true39

land.lhs.true34.cond.false54_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false54

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_wreg, align 4
  %tobool43.not = icmp eq ptr %23, null
  br i1 %tobool43.not, label %land.lhs.true39.cond.false54_crit_edge, label %cond.true44

land.lhs.true39.cond.false54_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false54

cond.true44:                                      ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx50 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx50, align 8
  %arrayidx52 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx52, align 4
  %add53 = add i32 %27, 19528
  tail call void %23(ptr noundef %adev, i32 noundef %add53, i32 noundef %spec.select, i32 noundef 0, i32 noundef 1) #13
  br label %if.end61

cond.false54:                                     ; preds = %land.lhs.true39.cond.false54_crit_edge, %land.lhs.true34.cond.false54_crit_edge, %if.then29.cond.false54_crit_edge
  %arrayidx56 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx56, align 8
  %arrayidx58 = getelementptr i32, ptr %29, i32 1
  %30 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx58, align 4
  %add59 = add i32 %31, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add59, i32 noundef %spec.select, i32 noundef 0) #13
  br label %if.end61

if.end61:                                         ; preds = %cond.false54, %cond.true44, %cond.end.if.end61_crit_edge
  %32 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %virt, align 8
  %and64 = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and64)
  %tobool65.not = icmp eq i32 %and64, 0
  br i1 %tobool65.not, label %if.end61.cond.false88_crit_edge, label %land.lhs.true66

if.end61.cond.false88_crit_edge:                  ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88

land.lhs.true66:                                  ; preds = %if.end61
  %funcs69 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %34 = ptrtoint ptr %funcs69 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %funcs69, align 4
  %tobool70.not = icmp eq ptr %35, null
  br i1 %tobool70.not, label %land.lhs.true66.cond.false88_crit_edge, label %land.lhs.true71

land.lhs.true66.cond.false88_crit_edge:           ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88

land.lhs.true71:                                  ; preds = %land.lhs.true66
  %sriov_rreg75 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %35, i32 0, i32 13
  %36 = ptrtoint ptr %sriov_rreg75 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sriov_rreg75, align 4
  %tobool76.not = icmp eq ptr %37, null
  br i1 %tobool76.not, label %land.lhs.true71.cond.false88_crit_edge, label %cond.true77

land.lhs.true71.cond.false88_crit_edge:           ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false88

cond.true77:                                      ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx83 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %38 = ptrtoint ptr %arrayidx83 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx83, align 8
  %arrayidx85 = getelementptr i32, ptr %39, i32 1
  %40 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx85, align 4
  %add86 = add i32 %41, 19653
  %call87 = tail call i32 %37(ptr noundef %adev, i32 noundef %add86, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end95

cond.false88:                                     ; preds = %land.lhs.true71.cond.false88_crit_edge, %land.lhs.true66.cond.false88_crit_edge, %if.end61.cond.false88_crit_edge
  %arrayidx90 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %42 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx90, align 8
  %arrayidx92 = getelementptr i32, ptr %43, i32 1
  %44 = ptrtoint ptr %arrayidx92 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx92, align 4
  %add93 = add i32 %45, 19653
  %call94 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add93, i32 noundef 0) #13
  br label %cond.end95

cond.end95:                                       ; preds = %cond.false88, %cond.true77
  %cond96 = phi i32 [ %call87, %cond.true77 ], [ %call94, %cond.false88 ]
  %46 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %cg_flags, align 8
  %and98 = and i32 %47, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and98)
  %tobool99.not = icmp eq i32 %and98, 0
  %spec.store.select = select i1 %tobool99.not, i32 0, i32 13825
  %and103 = and i32 %47, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and103)
  %tobool104.not = icmp eq i32 %and103, 0
  %or = or i32 %spec.store.select, 62
  %spec.select398 = select i1 %tobool104.not, i32 %spec.store.select, i32 %or
  call void @__sanitizer_cov_trace_cmp4(i32 %cond96, i32 %spec.select398)
  %cmp107.not = icmp eq i32 %cond96, %spec.select398
  br i1 %cmp107.not, label %cond.end95.if.end141_crit_edge, label %if.then108

cond.end95.if.end141_crit_edge:                   ; preds = %cond.end95
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end141

if.then108:                                       ; preds = %cond.end95
  %48 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %virt, align 8
  %and111 = and i32 %49, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and111)
  %tobool112.not = icmp eq i32 %and111, 0
  br i1 %tobool112.not, label %if.then108.cond.false134_crit_edge, label %land.lhs.true113

if.then108.cond.false134_crit_edge:               ; preds = %if.then108
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false134

land.lhs.true113:                                 ; preds = %if.then108
  %funcs116 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %50 = ptrtoint ptr %funcs116 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %funcs116, align 4
  %tobool117.not = icmp eq ptr %51, null
  br i1 %tobool117.not, label %land.lhs.true113.cond.false134_crit_edge, label %land.lhs.true118

land.lhs.true113.cond.false134_crit_edge:         ; preds = %land.lhs.true113
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false134

land.lhs.true118:                                 ; preds = %land.lhs.true113
  %sriov_wreg122 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %51, i32 0, i32 12
  %52 = ptrtoint ptr %sriov_wreg122 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %sriov_wreg122, align 4
  %tobool123.not = icmp eq ptr %53, null
  br i1 %tobool123.not, label %land.lhs.true118.cond.false134_crit_edge, label %cond.true124

land.lhs.true118.cond.false134_crit_edge:         ; preds = %land.lhs.true118
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false134

cond.true124:                                     ; preds = %land.lhs.true118
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx130 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %54 = ptrtoint ptr %arrayidx130 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx130, align 8
  %arrayidx132 = getelementptr i32, ptr %55, i32 1
  %56 = ptrtoint ptr %arrayidx132 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx132, align 4
  %add133 = add i32 %57, 19653
  tail call void %53(ptr noundef %adev, i32 noundef %add133, i32 noundef %spec.select398, i32 noundef 0, i32 noundef 1) #13
  br label %if.end141

cond.false134:                                    ; preds = %land.lhs.true118.cond.false134_crit_edge, %land.lhs.true113.cond.false134_crit_edge, %if.then108.cond.false134_crit_edge
  %arrayidx136 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %58 = ptrtoint ptr %arrayidx136 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx136, align 8
  %arrayidx138 = getelementptr i32, ptr %59, i32 1
  %60 = ptrtoint ptr %arrayidx138 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx138, align 4
  %add139 = add i32 %61, 19653
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add139, i32 noundef %spec.select398, i32 noundef 0) #13
  br label %if.end141

if.end141:                                        ; preds = %cond.false134, %cond.true124, %cond.end95.if.end141_crit_edge
  %62 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %virt, align 8
  %and144 = and i32 %63, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and144)
  %tobool145.not = icmp eq i32 %and144, 0
  br i1 %tobool145.not, label %if.end141.cond.false168_crit_edge, label %land.lhs.true146

if.end141.cond.false168_crit_edge:                ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false168

land.lhs.true146:                                 ; preds = %if.end141
  %funcs149 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %64 = ptrtoint ptr %funcs149 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %funcs149, align 4
  %tobool150.not = icmp eq ptr %65, null
  br i1 %tobool150.not, label %land.lhs.true146.cond.false168_crit_edge, label %land.lhs.true151

land.lhs.true146.cond.false168_crit_edge:         ; preds = %land.lhs.true146
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false168

land.lhs.true151:                                 ; preds = %land.lhs.true146
  %sriov_rreg155 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %65, i32 0, i32 13
  %66 = ptrtoint ptr %sriov_rreg155 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %sriov_rreg155, align 4
  %tobool156.not = icmp eq ptr %67, null
  br i1 %tobool156.not, label %land.lhs.true151.cond.false168_crit_edge, label %cond.true157

land.lhs.true151.cond.false168_crit_edge:         ; preds = %land.lhs.true151
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false168

cond.true157:                                     ; preds = %land.lhs.true151
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx163 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %68 = ptrtoint ptr %arrayidx163 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %arrayidx163, align 8
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %69, align 4
  %add166 = add i32 %71, 3938
  %call167 = tail call i32 %67(ptr noundef %adev, i32 noundef %add166, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end175

cond.false168:                                    ; preds = %land.lhs.true151.cond.false168_crit_edge, %land.lhs.true146.cond.false168_crit_edge, %if.end141.cond.false168_crit_edge
  %arrayidx170 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %72 = ptrtoint ptr %arrayidx170 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx170, align 8
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %73, align 4
  %add173 = add i32 %75, 3938
  %call174 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add173, i32 noundef 0) #13
  br label %cond.end175

cond.end175:                                      ; preds = %cond.false168, %cond.true157
  %cond176 = phi i32 [ %call167, %cond.true157 ], [ %call174, %cond.false168 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9437440, i32 %cond176)
  %cmp177.not = icmp eq i32 %cond176, 9437440
  br i1 %cmp177.not, label %cond.end175.cleanup_crit_edge, label %if.then178

cond.end175.cleanup_crit_edge:                    ; preds = %cond.end175
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then178:                                       ; preds = %cond.end175
  %76 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %virt, align 8
  %and181 = and i32 %77, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and181)
  %tobool182.not = icmp eq i32 %and181, 0
  br i1 %tobool182.not, label %if.then178.cond.false204_crit_edge, label %land.lhs.true183

if.then178.cond.false204_crit_edge:               ; preds = %if.then178
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false204

land.lhs.true183:                                 ; preds = %if.then178
  %funcs186 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %78 = ptrtoint ptr %funcs186 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %funcs186, align 4
  %tobool187.not = icmp eq ptr %79, null
  br i1 %tobool187.not, label %land.lhs.true183.cond.false204_crit_edge, label %land.lhs.true188

land.lhs.true183.cond.false204_crit_edge:         ; preds = %land.lhs.true183
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false204

land.lhs.true188:                                 ; preds = %land.lhs.true183
  %sriov_wreg192 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %79, i32 0, i32 12
  %80 = ptrtoint ptr %sriov_wreg192 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %sriov_wreg192, align 4
  %tobool193.not = icmp eq ptr %81, null
  br i1 %tobool193.not, label %land.lhs.true188.cond.false204_crit_edge, label %cond.true194

land.lhs.true188.cond.false204_crit_edge:         ; preds = %land.lhs.true188
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false204

cond.true194:                                     ; preds = %land.lhs.true188
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx200 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %82 = ptrtoint ptr %arrayidx200 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %arrayidx200, align 8
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %83, align 4
  %add203 = add i32 %85, 3938
  tail call void %81(ptr noundef %adev, i32 noundef %add203, i32 noundef 9437440, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false204:                                    ; preds = %land.lhs.true188.cond.false204_crit_edge, %land.lhs.true183.cond.false204_crit_edge, %if.then178.cond.false204_crit_edge
  %arrayidx206 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %86 = ptrtoint ptr %arrayidx206 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %arrayidx206, align 8
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %87, align 4
  %add209 = add i32 %89, 3938
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add209, i32 noundef 9437440, i32 noundef 0) #13
  br label %cleanup

if.else:                                          ; preds = %if.end
  br i1 %tobool4.not, label %if.else.cond.false238_crit_edge, label %land.lhs.true216

if.else.cond.false238_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false238

land.lhs.true216:                                 ; preds = %if.else
  %funcs219 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %90 = ptrtoint ptr %funcs219 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %funcs219, align 4
  %tobool220.not = icmp eq ptr %91, null
  br i1 %tobool220.not, label %land.lhs.true216.cond.false238_crit_edge, label %land.lhs.true221

land.lhs.true216.cond.false238_crit_edge:         ; preds = %land.lhs.true216
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false238

land.lhs.true221:                                 ; preds = %land.lhs.true216
  %sriov_rreg225 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %91, i32 0, i32 13
  %92 = ptrtoint ptr %sriov_rreg225 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %sriov_rreg225, align 4
  %tobool226.not = icmp eq ptr %93, null
  br i1 %tobool226.not, label %land.lhs.true221.cond.false238_crit_edge, label %cond.true227

land.lhs.true221.cond.false238_crit_edge:         ; preds = %land.lhs.true221
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false238

cond.true227:                                     ; preds = %land.lhs.true221
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx233 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %94 = ptrtoint ptr %arrayidx233 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %arrayidx233, align 8
  %arrayidx235 = getelementptr i32, ptr %95, i32 1
  %96 = ptrtoint ptr %arrayidx235 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %arrayidx235, align 4
  %add236 = add i32 %97, 19653
  %call237 = tail call i32 %93(ptr noundef %adev, i32 noundef %add236, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end245

cond.false238:                                    ; preds = %land.lhs.true221.cond.false238_crit_edge, %land.lhs.true216.cond.false238_crit_edge, %if.else.cond.false238_crit_edge
  %arrayidx240 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %98 = ptrtoint ptr %arrayidx240 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %arrayidx240, align 8
  %arrayidx242 = getelementptr i32, ptr %99, i32 1
  %100 = ptrtoint ptr %arrayidx242 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx242, align 4
  %add243 = add i32 %101, 19653
  %call244 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add243, i32 noundef 0) #13
  br label %cond.end245

cond.end245:                                      ; preds = %cond.false238, %cond.true227
  %cond246 = phi i32 [ %call237, %cond.true227 ], [ %call244, %cond.false238 ]
  %102 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cg_flags, align 8
  %and248 = and i32 %103, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and248)
  %tobool249.not = icmp eq i32 %and248, 0
  %and251 = and i32 %cond246, -2
  %spec.select399 = select i1 %tobool249.not, i32 %cond246, i32 %and251
  %and254 = and i32 %103, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and254)
  %tobool255.not = icmp eq i32 %and254, 0
  %and257 = and i32 %spec.select399, -3
  %data.3 = select i1 %tobool255.not, i32 %spec.select399, i32 %and257
  call void @__sanitizer_cov_trace_cmp4(i32 %cond246, i32 %data.3)
  %cmp259.not = icmp eq i32 %cond246, %data.3
  br i1 %cmp259.not, label %cond.end245.cleanup_crit_edge, label %if.then260

cond.end245.cleanup_crit_edge:                    ; preds = %cond.end245
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then260:                                       ; preds = %cond.end245
  %104 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %virt, align 8
  %and263 = and i32 %105, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and263)
  %tobool264.not = icmp eq i32 %and263, 0
  br i1 %tobool264.not, label %if.then260.cond.false286_crit_edge, label %land.lhs.true265

if.then260.cond.false286_crit_edge:               ; preds = %if.then260
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false286

land.lhs.true265:                                 ; preds = %if.then260
  %funcs268 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %106 = ptrtoint ptr %funcs268 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %funcs268, align 4
  %tobool269.not = icmp eq ptr %107, null
  br i1 %tobool269.not, label %land.lhs.true265.cond.false286_crit_edge, label %land.lhs.true270

land.lhs.true265.cond.false286_crit_edge:         ; preds = %land.lhs.true265
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false286

land.lhs.true270:                                 ; preds = %land.lhs.true265
  %sriov_wreg274 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %107, i32 0, i32 12
  %108 = ptrtoint ptr %sriov_wreg274 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %sriov_wreg274, align 4
  %tobool275.not = icmp eq ptr %109, null
  br i1 %tobool275.not, label %land.lhs.true270.cond.false286_crit_edge, label %cond.true276

land.lhs.true270.cond.false286_crit_edge:         ; preds = %land.lhs.true270
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false286

cond.true276:                                     ; preds = %land.lhs.true270
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx282 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %110 = ptrtoint ptr %arrayidx282 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %arrayidx282, align 8
  %arrayidx284 = getelementptr i32, ptr %111, i32 1
  %112 = ptrtoint ptr %arrayidx284 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx284, align 4
  %add285 = add i32 %113, 19653
  tail call void %109(ptr noundef %adev, i32 noundef %add285, i32 noundef %data.3, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false286:                                    ; preds = %land.lhs.true270.cond.false286_crit_edge, %land.lhs.true265.cond.false286_crit_edge, %if.then260.cond.false286_crit_edge
  %arrayidx288 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %114 = ptrtoint ptr %arrayidx288 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %arrayidx288, align 8
  %arrayidx290 = getelementptr i32, ptr %115, i32 1
  %116 = ptrtoint ptr %arrayidx290 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %arrayidx290, align 4
  %add291 = add i32 %117, 19653
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add291, i32 noundef %data.3, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false286, %cond.true276, %cond.end245.cleanup_crit_edge, %cond.false204, %cond.true194, %cond.end175.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v10_0_update_coarse_grain_clock_gating(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #15
  call void @llvm.arm.gnu.eabi.mcount()
  %cg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %0 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cg_flags, align 8
  %and = and i32 %1, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and3 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %enable, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  br i1 %tobool4.not, label %if.then2.cond.false_crit_edge, label %land.lhs.true

if.then2.cond.false_crit_edge:                    ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then2
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %arrayidx16 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx16, align 4
  %add = add i32 %11, 19528
  %call = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then2.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx18, align 8
  %arrayidx20 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx20, align 4
  %add21 = add i32 %15, 19528
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add21, i32 noundef 0) #13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call22, %cond.false ]
  %16 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cg_flags, align 8
  %and24 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  %and27 = and i32 %cond, -9
  %spec.select = select i1 %tobool25.not, i32 %cond, i32 %and27
  %and30 = and i32 %17, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  %and33 = and i32 %spec.select, -17
  %data.1 = select i1 %tobool31.not, i32 %spec.select, i32 %and33
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %data.1)
  %cmp.not = icmp eq i32 %cond, %data.1
  br i1 %cmp.not, label %cond.end.if.end67_crit_edge, label %if.then35

cond.end.if.end67_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end67

if.then35:                                        ; preds = %cond.end
  %18 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt, align 8
  %and38 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38)
  %tobool39.not = icmp eq i32 %and38, 0
  br i1 %tobool39.not, label %if.then35.cond.false60_crit_edge, label %land.lhs.true40

if.then35.cond.false60_crit_edge:                 ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false60

land.lhs.true40:                                  ; preds = %if.then35
  %funcs43 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs43 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs43, align 4
  %tobool44.not = icmp eq ptr %21, null
  br i1 %tobool44.not, label %land.lhs.true40.cond.false60_crit_edge, label %land.lhs.true45

land.lhs.true40.cond.false60_crit_edge:           ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false60

land.lhs.true45:                                  ; preds = %land.lhs.true40
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_wreg, align 4
  %tobool49.not = icmp eq ptr %23, null
  br i1 %tobool49.not, label %land.lhs.true45.cond.false60_crit_edge, label %cond.true50

land.lhs.true45.cond.false60_crit_edge:           ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false60

cond.true50:                                      ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx56 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx56, align 8
  %arrayidx58 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx58, align 4
  %add59 = add i32 %27, 19528
  tail call void %23(ptr noundef %adev, i32 noundef %add59, i32 noundef %data.1, i32 noundef 0, i32 noundef 1) #13
  br label %if.end67

cond.false60:                                     ; preds = %land.lhs.true45.cond.false60_crit_edge, %land.lhs.true40.cond.false60_crit_edge, %if.then35.cond.false60_crit_edge
  %arrayidx62 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx62, align 8
  %arrayidx64 = getelementptr i32, ptr %29, i32 1
  %30 = ptrtoint ptr %arrayidx64 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx64, align 4
  %add65 = add i32 %31, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add65, i32 noundef %data.1, i32 noundef 0) #13
  br label %if.end67

if.end67:                                         ; preds = %cond.false60, %cond.true50, %cond.end.if.end67_crit_edge
  %32 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %virt, align 8
  %and70 = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70)
  %tobool71.not = icmp eq i32 %and70, 0
  br i1 %tobool71.not, label %if.end67.cond.false94_crit_edge, label %land.lhs.true72

if.end67.cond.false94_crit_edge:                  ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false94

land.lhs.true72:                                  ; preds = %if.end67
  %funcs75 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %34 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %funcs75, align 4
  %tobool76.not = icmp eq ptr %35, null
  br i1 %tobool76.not, label %land.lhs.true72.cond.false94_crit_edge, label %land.lhs.true77

land.lhs.true72.cond.false94_crit_edge:           ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false94

land.lhs.true77:                                  ; preds = %land.lhs.true72
  %sriov_rreg81 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %35, i32 0, i32 13
  %36 = ptrtoint ptr %sriov_rreg81 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sriov_rreg81, align 4
  %tobool82.not = icmp eq ptr %37, null
  br i1 %tobool82.not, label %land.lhs.true77.cond.false94_crit_edge, label %cond.true83

land.lhs.true77.cond.false94_crit_edge:           ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false94

cond.true83:                                      ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx89 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %38 = ptrtoint ptr %arrayidx89 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx89, align 8
  %arrayidx91 = getelementptr i32, ptr %39, i32 1
  %40 = ptrtoint ptr %arrayidx91 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx91, align 4
  %add92 = add i32 %41, 19529
  %call93 = tail call i32 %37(ptr noundef %adev, i32 noundef %add92, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end101

cond.false94:                                     ; preds = %land.lhs.true77.cond.false94_crit_edge, %land.lhs.true72.cond.false94_crit_edge, %if.end67.cond.false94_crit_edge
  %arrayidx96 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %42 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx96, align 8
  %arrayidx98 = getelementptr i32, ptr %43, i32 1
  %44 = ptrtoint ptr %arrayidx98 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx98, align 4
  %add99 = add i32 %45, 19529
  %call100 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add99, i32 noundef 0) #13
  br label %cond.end101

cond.end101:                                      ; preds = %cond.false94, %cond.true83
  %cond102 = phi i32 [ %call93, %cond.true83 ], [ %call100, %cond.false94 ]
  %46 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %cg_flags, align 8
  %and104 = and i32 %47, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and104)
  %tobool105.not = icmp eq i32 %and104, 0
  %spec.store.select = select i1 %tobool105.not, i32 0, i32 13825
  %and109 = and i32 %47, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and109)
  %tobool110.not = icmp eq i32 %and109, 0
  %or = or i32 %spec.store.select, 62
  %spec.select406 = select i1 %tobool110.not, i32 %spec.store.select, i32 %or
  call void @__sanitizer_cov_trace_cmp4(i32 %cond102, i32 %spec.select406)
  %cmp113.not = icmp eq i32 %cond102, %spec.select406
  br i1 %cmp113.not, label %cond.end101.if.end147_crit_edge, label %if.then114

cond.end101.if.end147_crit_edge:                  ; preds = %cond.end101
  call void @__sanitizer_cov_trace_pc() #15
  br label %if.end147

if.then114:                                       ; preds = %cond.end101
  %48 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %virt, align 8
  %and117 = and i32 %49, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and117)
  %tobool118.not = icmp eq i32 %and117, 0
  br i1 %tobool118.not, label %if.then114.cond.false140_crit_edge, label %land.lhs.true119

if.then114.cond.false140_crit_edge:               ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false140

land.lhs.true119:                                 ; preds = %if.then114
  %funcs122 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %50 = ptrtoint ptr %funcs122 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %funcs122, align 4
  %tobool123.not = icmp eq ptr %51, null
  br i1 %tobool123.not, label %land.lhs.true119.cond.false140_crit_edge, label %land.lhs.true124

land.lhs.true119.cond.false140_crit_edge:         ; preds = %land.lhs.true119
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false140

land.lhs.true124:                                 ; preds = %land.lhs.true119
  %sriov_wreg128 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %51, i32 0, i32 12
  %52 = ptrtoint ptr %sriov_wreg128 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %sriov_wreg128, align 4
  %tobool129.not = icmp eq ptr %53, null
  br i1 %tobool129.not, label %land.lhs.true124.cond.false140_crit_edge, label %cond.true130

land.lhs.true124.cond.false140_crit_edge:         ; preds = %land.lhs.true124
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false140

cond.true130:                                     ; preds = %land.lhs.true124
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx136 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %54 = ptrtoint ptr %arrayidx136 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx136, align 8
  %arrayidx138 = getelementptr i32, ptr %55, i32 1
  %56 = ptrtoint ptr %arrayidx138 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx138, align 4
  %add139 = add i32 %57, 19529
  tail call void %53(ptr noundef %adev, i32 noundef %add139, i32 noundef %spec.select406, i32 noundef 0, i32 noundef 1) #13
  br label %if.end147

cond.false140:                                    ; preds = %land.lhs.true124.cond.false140_crit_edge, %land.lhs.true119.cond.false140_crit_edge, %if.then114.cond.false140_crit_edge
  %arrayidx142 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %58 = ptrtoint ptr %arrayidx142 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx142, align 8
  %arrayidx144 = getelementptr i32, ptr %59, i32 1
  %60 = ptrtoint ptr %arrayidx144 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx144, align 4
  %add145 = add i32 %61, 19529
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add145, i32 noundef %spec.select406, i32 noundef 0) #13
  br label %if.end147

if.end147:                                        ; preds = %cond.false140, %cond.true130, %cond.end101.if.end147_crit_edge
  %62 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %virt, align 8
  %and150 = and i32 %63, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and150)
  %tobool151.not = icmp eq i32 %and150, 0
  br i1 %tobool151.not, label %if.end147.cond.false174_crit_edge, label %land.lhs.true152

if.end147.cond.false174_crit_edge:                ; preds = %if.end147
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false174

land.lhs.true152:                                 ; preds = %if.end147
  %funcs155 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %64 = ptrtoint ptr %funcs155 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %funcs155, align 4
  %tobool156.not = icmp eq ptr %65, null
  br i1 %tobool156.not, label %land.lhs.true152.cond.false174_crit_edge, label %land.lhs.true157

land.lhs.true152.cond.false174_crit_edge:         ; preds = %land.lhs.true152
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false174

land.lhs.true157:                                 ; preds = %land.lhs.true152
  %sriov_rreg161 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %65, i32 0, i32 13
  %66 = ptrtoint ptr %sriov_rreg161 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %sriov_rreg161, align 4
  %tobool162.not = icmp eq ptr %67, null
  br i1 %tobool162.not, label %land.lhs.true157.cond.false174_crit_edge, label %cond.true163

land.lhs.true157.cond.false174_crit_edge:         ; preds = %land.lhs.true157
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false174

cond.true163:                                     ; preds = %land.lhs.true157
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx169 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %68 = ptrtoint ptr %arrayidx169 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %arrayidx169, align 8
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %69, align 4
  %add172 = add i32 %71, 3938
  %call173 = tail call i32 %67(ptr noundef %adev, i32 noundef %add172, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end181

cond.false174:                                    ; preds = %land.lhs.true157.cond.false174_crit_edge, %land.lhs.true152.cond.false174_crit_edge, %if.end147.cond.false174_crit_edge
  %arrayidx176 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %72 = ptrtoint ptr %arrayidx176 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx176, align 8
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %73, align 4
  %add179 = add i32 %75, 3938
  %call180 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add179, i32 noundef 0) #13
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false174, %cond.true163
  %cond182 = phi i32 [ %call173, %cond.true163 ], [ %call180, %cond.false174 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9437440, i32 %cond182)
  %cmp183.not = icmp eq i32 %cond182, 9437440
  br i1 %cmp183.not, label %cond.end181.cleanup_crit_edge, label %if.then184

cond.end181.cleanup_crit_edge:                    ; preds = %cond.end181
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then184:                                       ; preds = %cond.end181
  %76 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %virt, align 8
  %and187 = and i32 %77, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and187)
  %tobool188.not = icmp eq i32 %and187, 0
  br i1 %tobool188.not, label %if.then184.cond.false210_crit_edge, label %land.lhs.true189

if.then184.cond.false210_crit_edge:               ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false210

land.lhs.true189:                                 ; preds = %if.then184
  %funcs192 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %78 = ptrtoint ptr %funcs192 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %funcs192, align 4
  %tobool193.not = icmp eq ptr %79, null
  br i1 %tobool193.not, label %land.lhs.true189.cond.false210_crit_edge, label %land.lhs.true194

land.lhs.true189.cond.false210_crit_edge:         ; preds = %land.lhs.true189
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false210

land.lhs.true194:                                 ; preds = %land.lhs.true189
  %sriov_wreg198 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %79, i32 0, i32 12
  %80 = ptrtoint ptr %sriov_wreg198 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %sriov_wreg198, align 4
  %tobool199.not = icmp eq ptr %81, null
  br i1 %tobool199.not, label %land.lhs.true194.cond.false210_crit_edge, label %cond.true200

land.lhs.true194.cond.false210_crit_edge:         ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false210

cond.true200:                                     ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx206 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %82 = ptrtoint ptr %arrayidx206 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %arrayidx206, align 8
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %83, align 4
  %add209 = add i32 %85, 3938
  tail call void %81(ptr noundef %adev, i32 noundef %add209, i32 noundef 9437440, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false210:                                    ; preds = %land.lhs.true194.cond.false210_crit_edge, %land.lhs.true189.cond.false210_crit_edge, %if.then184.cond.false210_crit_edge
  %arrayidx212 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %86 = ptrtoint ptr %arrayidx212 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %arrayidx212, align 8
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %87, align 4
  %add215 = add i32 %89, 3938
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add215, i32 noundef 9437440, i32 noundef 0) #13
  br label %cleanup

if.else:                                          ; preds = %if.end
  br i1 %tobool4.not, label %if.else.cond.false244_crit_edge, label %land.lhs.true222

if.else.cond.false244_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false244

land.lhs.true222:                                 ; preds = %if.else
  %funcs225 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %90 = ptrtoint ptr %funcs225 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %funcs225, align 4
  %tobool226.not = icmp eq ptr %91, null
  br i1 %tobool226.not, label %land.lhs.true222.cond.false244_crit_edge, label %land.lhs.true227

land.lhs.true222.cond.false244_crit_edge:         ; preds = %land.lhs.true222
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false244

land.lhs.true227:                                 ; preds = %land.lhs.true222
  %sriov_rreg231 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %91, i32 0, i32 13
  %92 = ptrtoint ptr %sriov_rreg231 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %sriov_rreg231, align 4
  %tobool232.not = icmp eq ptr %93, null
  br i1 %tobool232.not, label %land.lhs.true227.cond.false244_crit_edge, label %cond.true233

land.lhs.true227.cond.false244_crit_edge:         ; preds = %land.lhs.true227
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false244

cond.true233:                                     ; preds = %land.lhs.true227
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx239 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %94 = ptrtoint ptr %arrayidx239 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %arrayidx239, align 8
  %arrayidx241 = getelementptr i32, ptr %95, i32 1
  %96 = ptrtoint ptr %arrayidx241 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %arrayidx241, align 4
  %add242 = add i32 %97, 19529
  %call243 = tail call i32 %93(ptr noundef %adev, i32 noundef %add242, i32 noundef 0, i32 noundef 1) #13
  br label %cond.end251

cond.false244:                                    ; preds = %land.lhs.true227.cond.false244_crit_edge, %land.lhs.true222.cond.false244_crit_edge, %if.else.cond.false244_crit_edge
  %arrayidx246 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %98 = ptrtoint ptr %arrayidx246 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %arrayidx246, align 8
  %arrayidx248 = getelementptr i32, ptr %99, i32 1
  %100 = ptrtoint ptr %arrayidx248 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx248, align 4
  %add249 = add i32 %101, 19529
  %call250 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add249, i32 noundef 0) #13
  br label %cond.end251

cond.end251:                                      ; preds = %cond.false244, %cond.true233
  %cond252 = phi i32 [ %call243, %cond.true233 ], [ %call250, %cond.false244 ]
  %102 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cg_flags, align 8
  %and254 = and i32 %103, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and254)
  %tobool255.not = icmp eq i32 %and254, 0
  %and257 = and i32 %cond252, -2
  %spec.select407 = select i1 %tobool255.not, i32 %cond252, i32 %and257
  %and260 = and i32 %103, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and260)
  %tobool261.not = icmp eq i32 %and260, 0
  %and263 = and i32 %spec.select407, -3
  %data.4 = select i1 %tobool261.not, i32 %spec.select407, i32 %and263
  call void @__sanitizer_cov_trace_cmp4(i32 %cond252, i32 %data.4)
  %cmp265.not = icmp eq i32 %cond252, %data.4
  br i1 %cmp265.not, label %cond.end251.cleanup_crit_edge, label %if.then266

cond.end251.cleanup_crit_edge:                    ; preds = %cond.end251
  call void @__sanitizer_cov_trace_pc() #15
  br label %cleanup

if.then266:                                       ; preds = %cond.end251
  %104 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %virt, align 8
  %and269 = and i32 %105, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and269)
  %tobool270.not = icmp eq i32 %and269, 0
  br i1 %tobool270.not, label %if.then266.cond.false292_crit_edge, label %land.lhs.true271

if.then266.cond.false292_crit_edge:               ; preds = %if.then266
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false292

land.lhs.true271:                                 ; preds = %if.then266
  %funcs274 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %106 = ptrtoint ptr %funcs274 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %funcs274, align 4
  %tobool275.not = icmp eq ptr %107, null
  br i1 %tobool275.not, label %land.lhs.true271.cond.false292_crit_edge, label %land.lhs.true276

land.lhs.true271.cond.false292_crit_edge:         ; preds = %land.lhs.true271
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false292

land.lhs.true276:                                 ; preds = %land.lhs.true271
  %sriov_wreg280 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %107, i32 0, i32 12
  %108 = ptrtoint ptr %sriov_wreg280 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %sriov_wreg280, align 4
  %tobool281.not = icmp eq ptr %109, null
  br i1 %tobool281.not, label %land.lhs.true276.cond.false292_crit_edge, label %cond.true282

land.lhs.true276.cond.false292_crit_edge:         ; preds = %land.lhs.true276
  call void @__sanitizer_cov_trace_pc() #15
  br label %cond.false292

cond.true282:                                     ; preds = %land.lhs.true276
  call void @__sanitizer_cov_trace_pc() #15
  %arrayidx288 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %110 = ptrtoint ptr %arrayidx288 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %arrayidx288, align 8
  %arrayidx290 = getelementptr i32, ptr %111, i32 1
  %112 = ptrtoint ptr %arrayidx290 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx290, align 4
  %add291 = add i32 %113, 19529
  tail call void %109(ptr noundef %adev, i32 noundef %add291, i32 noundef %data.4, i32 noundef 0, i32 noundef 1) #13
  br label %cleanup

cond.false292:                                    ; preds = %land.lhs.true276.cond.false292_crit_edge, %land.lhs.true271.cond.false292_crit_edge, %if.then266.cond.false292_crit_edge
  %arrayidx294 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %114 = ptrtoint ptr %arrayidx294 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %arrayidx294, align 8
  %arrayidx296 = getelementptr i32, ptr %115, i32 1
  %116 = ptrtoint ptr %arrayidx296 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %arrayidx296, align 4
  %add297 = add i32 %117, 19529
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add297, i32 noundef %data.4, i32 noundef 0) #13
  br label %cleanup

cleanup:                                          ; preds = %cond.false292, %cond.true282, %cond.end251.cleanup_crit_edge, %cond.false210, %cond.true200, %cond.end181.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_kiq_rreg(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #5

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #13

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #14 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 169)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #14 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 169)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #15 = { nomerge }
attributes #16 = { cold nounwind }
attributes #17 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !178, !180, !182, !184, !186, !188, !190, !192, !194, !196, !198, !200, !202, !204, !206, !208, !209, !210, !211, !212, !213, !214, !216, !217, !218, !219, !221, !223, !224, !225, !227, !228, !229, !231, !232, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !258, !259, !260, !262, !263, !264, !266, !267, !268, !270, !271, !272, !274, !275, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294, !296, !298, !300, !302, !304, !306, !308, !310, !312, !314, !316, !318, !320, !322, !324, !326, !327, !328, !329, !331, !332, !333, !334, !335, !337, !338, !339, !340, !341, !343, !344, !345, !347, !349, !351, !352, !353, !354, !356, !357, !358, !359, !361, !362, !363, !364, !366, !368, !370, !372, !374, !376, !378, !380, !382, !384, !386, !388, !390, !392, !394, !396, !398, !400, !402, !403, !404, !405, !407, !408, !409, !411, !412, !413, !415, !416, !417, !419, !420, !421, !422, !424, !425, !427, !428, !429, !430, !432, !433, !435, !436, !437, !438, !440, !441, !443, !444, !445, !447, !448, !449, !450, !451, !453, !455, !457, !459, !461, !463, !464, !465, !466}
!llvm.named.register.sp = !{!467}
!llvm.module.flags = !{!468, !469, !470, !471, !472, !473, !474, !475}
!llvm.ident = !{!476}

!0 = !{ptr @__UNIQUE_ID_firmware343, !1, !"__UNIQUE_ID_firmware343", i1 false, i1 false}
!1 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 191, i32 1}
!2 = !{ptr @__UNIQUE_ID_firmware344, !3, !"__UNIQUE_ID_firmware344", i1 false, i1 false}
!3 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 192, i32 1}
!4 = !{ptr @__UNIQUE_ID_firmware345, !5, !"__UNIQUE_ID_firmware345", i1 false, i1 false}
!5 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 193, i32 1}
!6 = !{ptr @__UNIQUE_ID_firmware346, !7, !"__UNIQUE_ID_firmware346", i1 false, i1 false}
!7 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 194, i32 1}
!8 = !{ptr @__UNIQUE_ID_firmware347, !9, !"__UNIQUE_ID_firmware347", i1 false, i1 false}
!9 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 195, i32 1}
!10 = !{ptr @__UNIQUE_ID_firmware348, !11, !"__UNIQUE_ID_firmware348", i1 false, i1 false}
!11 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 196, i32 1}
!12 = !{ptr @__UNIQUE_ID_firmware349, !13, !"__UNIQUE_ID_firmware349", i1 false, i1 false}
!13 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 198, i32 1}
!14 = !{ptr @__UNIQUE_ID_firmware350, !15, !"__UNIQUE_ID_firmware350", i1 false, i1 false}
!15 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 199, i32 1}
!16 = !{ptr @__UNIQUE_ID_firmware351, !17, !"__UNIQUE_ID_firmware351", i1 false, i1 false}
!17 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 200, i32 1}
!18 = !{ptr @__UNIQUE_ID_firmware352, !19, !"__UNIQUE_ID_firmware352", i1 false, i1 false}
!19 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 201, i32 1}
!20 = !{ptr @__UNIQUE_ID_firmware353, !21, !"__UNIQUE_ID_firmware353", i1 false, i1 false}
!21 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 202, i32 1}
!22 = !{ptr @__UNIQUE_ID_firmware354, !23, !"__UNIQUE_ID_firmware354", i1 false, i1 false}
!23 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 203, i32 1}
!24 = !{ptr @__UNIQUE_ID_firmware355, !25, !"__UNIQUE_ID_firmware355", i1 false, i1 false}
!25 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 204, i32 1}
!26 = !{ptr @__UNIQUE_ID_firmware356, !27, !"__UNIQUE_ID_firmware356", i1 false, i1 false}
!27 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 205, i32 1}
!28 = !{ptr @__UNIQUE_ID_firmware357, !29, !"__UNIQUE_ID_firmware357", i1 false, i1 false}
!29 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 206, i32 1}
!30 = !{ptr @__UNIQUE_ID_firmware358, !31, !"__UNIQUE_ID_firmware358", i1 false, i1 false}
!31 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 207, i32 1}
!32 = !{ptr @__UNIQUE_ID_firmware359, !33, !"__UNIQUE_ID_firmware359", i1 false, i1 false}
!33 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 208, i32 1}
!34 = !{ptr @__UNIQUE_ID_firmware360, !35, !"__UNIQUE_ID_firmware360", i1 false, i1 false}
!35 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 210, i32 1}
!36 = !{ptr @__UNIQUE_ID_firmware361, !37, !"__UNIQUE_ID_firmware361", i1 false, i1 false}
!37 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 211, i32 1}
!38 = !{ptr @__UNIQUE_ID_firmware362, !39, !"__UNIQUE_ID_firmware362", i1 false, i1 false}
!39 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 212, i32 1}
!40 = !{ptr @__UNIQUE_ID_firmware363, !41, !"__UNIQUE_ID_firmware363", i1 false, i1 false}
!41 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 213, i32 1}
!42 = !{ptr @__UNIQUE_ID_firmware364, !43, !"__UNIQUE_ID_firmware364", i1 false, i1 false}
!43 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 214, i32 1}
!44 = !{ptr @__UNIQUE_ID_firmware365, !45, !"__UNIQUE_ID_firmware365", i1 false, i1 false}
!45 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 215, i32 1}
!46 = !{ptr @__UNIQUE_ID_firmware366, !47, !"__UNIQUE_ID_firmware366", i1 false, i1 false}
!47 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 217, i32 1}
!48 = !{ptr @__UNIQUE_ID_firmware367, !49, !"__UNIQUE_ID_firmware367", i1 false, i1 false}
!49 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 218, i32 1}
!50 = !{ptr @__UNIQUE_ID_firmware368, !51, !"__UNIQUE_ID_firmware368", i1 false, i1 false}
!51 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 219, i32 1}
!52 = !{ptr @__UNIQUE_ID_firmware369, !53, !"__UNIQUE_ID_firmware369", i1 false, i1 false}
!53 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 220, i32 1}
!54 = !{ptr @__UNIQUE_ID_firmware370, !55, !"__UNIQUE_ID_firmware370", i1 false, i1 false}
!55 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 221, i32 1}
!56 = !{ptr @__UNIQUE_ID_firmware371, !57, !"__UNIQUE_ID_firmware371", i1 false, i1 false}
!57 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 222, i32 1}
!58 = !{ptr @__UNIQUE_ID_firmware372, !59, !"__UNIQUE_ID_firmware372", i1 false, i1 false}
!59 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 224, i32 1}
!60 = !{ptr @__UNIQUE_ID_firmware373, !61, !"__UNIQUE_ID_firmware373", i1 false, i1 false}
!61 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 225, i32 1}
!62 = !{ptr @__UNIQUE_ID_firmware374, !63, !"__UNIQUE_ID_firmware374", i1 false, i1 false}
!63 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 226, i32 1}
!64 = !{ptr @__UNIQUE_ID_firmware375, !65, !"__UNIQUE_ID_firmware375", i1 false, i1 false}
!65 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 227, i32 1}
!66 = !{ptr @__UNIQUE_ID_firmware376, !67, !"__UNIQUE_ID_firmware376", i1 false, i1 false}
!67 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 228, i32 1}
!68 = !{ptr @__UNIQUE_ID_firmware377, !69, !"__UNIQUE_ID_firmware377", i1 false, i1 false}
!69 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 229, i32 1}
!70 = !{ptr @__UNIQUE_ID_firmware378, !71, !"__UNIQUE_ID_firmware378", i1 false, i1 false}
!71 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 231, i32 1}
!72 = !{ptr @__UNIQUE_ID_firmware379, !73, !"__UNIQUE_ID_firmware379", i1 false, i1 false}
!73 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 232, i32 1}
!74 = !{ptr @__UNIQUE_ID_firmware380, !75, !"__UNIQUE_ID_firmware380", i1 false, i1 false}
!75 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 233, i32 1}
!76 = !{ptr @__UNIQUE_ID_firmware381, !77, !"__UNIQUE_ID_firmware381", i1 false, i1 false}
!77 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 234, i32 1}
!78 = !{ptr @__UNIQUE_ID_firmware382, !79, !"__UNIQUE_ID_firmware382", i1 false, i1 false}
!79 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 235, i32 1}
!80 = !{ptr @__UNIQUE_ID_firmware383, !81, !"__UNIQUE_ID_firmware383", i1 false, i1 false}
!81 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 236, i32 1}
!82 = !{ptr @__UNIQUE_ID_firmware384, !83, !"__UNIQUE_ID_firmware384", i1 false, i1 false}
!83 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 238, i32 1}
!84 = !{ptr @__UNIQUE_ID_firmware385, !85, !"__UNIQUE_ID_firmware385", i1 false, i1 false}
!85 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 239, i32 1}
!86 = !{ptr @__UNIQUE_ID_firmware386, !87, !"__UNIQUE_ID_firmware386", i1 false, i1 false}
!87 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 240, i32 1}
!88 = !{ptr @__UNIQUE_ID_firmware387, !89, !"__UNIQUE_ID_firmware387", i1 false, i1 false}
!89 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 241, i32 1}
!90 = !{ptr @__UNIQUE_ID_firmware388, !91, !"__UNIQUE_ID_firmware388", i1 false, i1 false}
!91 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 242, i32 1}
!92 = !{ptr @__UNIQUE_ID_firmware389, !93, !"__UNIQUE_ID_firmware389", i1 false, i1 false}
!93 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 243, i32 1}
!94 = !{ptr @__UNIQUE_ID_firmware390, !95, !"__UNIQUE_ID_firmware390", i1 false, i1 false}
!95 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 245, i32 1}
!96 = !{ptr @__UNIQUE_ID_firmware391, !97, !"__UNIQUE_ID_firmware391", i1 false, i1 false}
!97 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 246, i32 1}
!98 = !{ptr @__UNIQUE_ID_firmware392, !99, !"__UNIQUE_ID_firmware392", i1 false, i1 false}
!99 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 247, i32 1}
!100 = !{ptr @__UNIQUE_ID_firmware393, !101, !"__UNIQUE_ID_firmware393", i1 false, i1 false}
!101 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 248, i32 1}
!102 = !{ptr @__UNIQUE_ID_firmware394, !103, !"__UNIQUE_ID_firmware394", i1 false, i1 false}
!103 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 249, i32 1}
!104 = !{ptr @__UNIQUE_ID_firmware395, !105, !"__UNIQUE_ID_firmware395", i1 false, i1 false}
!105 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 250, i32 1}
!106 = !{ptr @__UNIQUE_ID_firmware396, !107, !"__UNIQUE_ID_firmware396", i1 false, i1 false}
!107 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 252, i32 1}
!108 = !{ptr @__UNIQUE_ID_firmware397, !109, !"__UNIQUE_ID_firmware397", i1 false, i1 false}
!109 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 253, i32 1}
!110 = !{ptr @__UNIQUE_ID_firmware398, !111, !"__UNIQUE_ID_firmware398", i1 false, i1 false}
!111 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 254, i32 1}
!112 = !{ptr @__UNIQUE_ID_firmware399, !113, !"__UNIQUE_ID_firmware399", i1 false, i1 false}
!113 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 255, i32 1}
!114 = !{ptr @__UNIQUE_ID_firmware400, !115, !"__UNIQUE_ID_firmware400", i1 false, i1 false}
!115 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 256, i32 1}
!116 = !{ptr @__UNIQUE_ID_firmware401, !117, !"__UNIQUE_ID_firmware401", i1 false, i1 false}
!117 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 257, i32 1}
!118 = !{ptr @__UNIQUE_ID_firmware402, !119, !"__UNIQUE_ID_firmware402", i1 false, i1 false}
!119 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 259, i32 1}
!120 = !{ptr @__UNIQUE_ID_firmware403, !121, !"__UNIQUE_ID_firmware403", i1 false, i1 false}
!121 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 260, i32 1}
!122 = !{ptr @__UNIQUE_ID_firmware404, !123, !"__UNIQUE_ID_firmware404", i1 false, i1 false}
!123 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 261, i32 1}
!124 = !{ptr @__UNIQUE_ID_firmware405, !125, !"__UNIQUE_ID_firmware405", i1 false, i1 false}
!125 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 262, i32 1}
!126 = !{ptr @__UNIQUE_ID_firmware406, !127, !"__UNIQUE_ID_firmware406", i1 false, i1 false}
!127 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 263, i32 1}
!128 = !{ptr @__UNIQUE_ID_firmware407, !129, !"__UNIQUE_ID_firmware407", i1 false, i1 false}
!129 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 264, i32 1}
!130 = !{ptr @__UNIQUE_ID_firmware408, !131, !"__UNIQUE_ID_firmware408", i1 false, i1 false}
!131 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 266, i32 1}
!132 = !{ptr @__UNIQUE_ID_firmware409, !133, !"__UNIQUE_ID_firmware409", i1 false, i1 false}
!133 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 267, i32 1}
!134 = !{ptr @__UNIQUE_ID_firmware410, !135, !"__UNIQUE_ID_firmware410", i1 false, i1 false}
!135 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 268, i32 1}
!136 = !{ptr @__UNIQUE_ID_firmware411, !137, !"__UNIQUE_ID_firmware411", i1 false, i1 false}
!137 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 269, i32 1}
!138 = !{ptr @__UNIQUE_ID_firmware412, !139, !"__UNIQUE_ID_firmware412", i1 false, i1 false}
!139 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 270, i32 1}
!140 = !{ptr @__UNIQUE_ID_firmware413, !141, !"__UNIQUE_ID_firmware413", i1 false, i1 false}
!141 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 271, i32 1}
!142 = !{ptr @gfx_v10_0_ip_block, !143, !"gfx_v10_0_ip_block", i1 false, i1 false}
!143 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9740, i32 38}
!144 = !{ptr @.str, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9347, i32 10}
!146 = !{ptr @gfx_v10_0_ip_funcs, !147, !"gfx_v10_0_ip_funcs", i1 false, i1 false}
!147 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9346, i32 34}
!148 = !{ptr @gfx_v10_0_kiq_pm4_funcs, !149, !"gfx_v10_0_kiq_pm4_funcs", i1 false, i1 false}
!149 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3691, i32 35}
!150 = !{ptr @.str.1, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ring.h", i32 314, i32 3}
!152 = !{ptr @gfx_v10_0_ring_funcs_kiq, !153, !"gfx_v10_0_ring_funcs_kiq", i1 false, i1 false}
!153 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9455, i32 39}
!154 = !{ptr @.str.2, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3853, i32 3}
!156 = !{ptr @.str.3, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3861, i32 3}
!158 = !{ptr @gfx_v10_0_ring_funcs_gfx, !159, !"gfx_v10_0_ring_funcs_gfx", i1 false, i1 false}
!159 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9364, i32 39}
!160 = !{ptr @.str.4, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 8841, i32 3}
!162 = !{ptr @gfx_v10_0_ring_funcs_compute, !163, !"gfx_v10_0_ring_funcs_compute", i1 false, i1 false}
!163 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9419, i32 39}
!164 = !{ptr @gfx_v10_0_eop_irq_funcs, !165, !"gfx_v10_0_eop_irq_funcs", i1 false, i1 false}
!165 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9499, i32 42}
!166 = !{ptr @.str.5, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9015, i32 4}
!168 = !{ptr @.str.6, !169, !"<string literal>", i1 false, i1 false}
!169 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9019, i32 3}
!170 = !{ptr @.str.7, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9144, i32 2}
!172 = !{ptr @gfx_v10_0_kiq_irq_funcs, !173, !"gfx_v10_0_kiq_irq_funcs", i1 false, i1 false}
!173 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9514, i32 42}
!174 = !{ptr @.str.8, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9316, i32 2}
!176 = !{ptr @gfx_v10_0_priv_reg_irq_funcs, !177, !"gfx_v10_0_priv_reg_irq_funcs", i1 false, i1 false}
!177 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9504, i32 42}
!178 = !{ptr @.str.9, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9247, i32 2}
!180 = !{ptr @gfx_v10_0_priv_inst_irq_funcs, !181, !"gfx_v10_0_priv_inst_irq_funcs", i1 false, i1 false}
!181 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9509, i32 42}
!182 = !{ptr @.str.10, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 9256, i32 2}
!184 = !{ptr @gfx_v10_0_rlc_funcs, !185, !"gfx_v10_0_rlc_funcs", i1 false, i1 false}
!185 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 8354, i32 38}
!186 = !{ptr @gfx10_cs_data, !187, !"gfx10_cs_data", i1 false, i1 false}
!187 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 972, i32 36}
!188 = !{ptr @gfx10_SECT_CONTEXT_defs, !189, !"gfx10_SECT_CONTEXT_defs", i1 false, i1 false}
!189 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 961, i32 35}
!190 = !{ptr @gfx10_SECT_CONTEXT_def_1, !191, !"gfx10_SECT_CONTEXT_def_1", i1 false, i1 false}
!191 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 24, i32 27}
!192 = !{ptr @gfx10_SECT_CONTEXT_def_2, !193, !"gfx10_SECT_CONTEXT_def_2", i1 false, i1 false}
!193 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 241, i32 27}
!194 = !{ptr @gfx10_SECT_CONTEXT_def_3, !195, !"gfx10_SECT_CONTEXT_def_3", i1 false, i1 false}
!195 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 515, i32 27}
!196 = !{ptr @gfx10_SECT_CONTEXT_def_4, !197, !"gfx10_SECT_CONTEXT_def_4", i1 false, i1 false}
!197 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 521, i32 27}
!198 = !{ptr @gfx10_SECT_CONTEXT_def_5, !199, !"gfx10_SECT_CONTEXT_def_5", i1 false, i1 false}
!199 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 681, i32 27}
!200 = !{ptr @gfx10_SECT_CONTEXT_def_6, !201, !"gfx10_SECT_CONTEXT_def_6", i1 false, i1 false}
!201 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 685, i32 27}
!202 = !{ptr @gfx10_SECT_CONTEXT_def_7, !203, !"gfx10_SECT_CONTEXT_def_7", i1 false, i1 false}
!203 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 688, i32 27}
!204 = !{ptr @gfx10_SECT_CONTEXT_def_8, !205, !"gfx10_SECT_CONTEXT_def_8", i1 false, i1 false}
!205 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx10.h", i32 756, i32 27}
!206 = !{ptr @.str.14, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5895, i32 3}
!208 = !{ptr @.str.15, !207, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @.str.16, !207, !"<string literal>", i1 false, i1 false}
!210 = !{ptr @.str.17, !207, !"<string literal>", i1 false, i1 false}
!211 = !{ptr @.str.18, !207, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @gfx_v10_0_wait_for_rlc_autoload_complete._entry, !207, !"_entry", i1 false, i1 false}
!213 = !{ptr @gfx_v10_0_wait_for_rlc_autoload_complete._entry_ptr, !207, !"_entry_ptr", i1 false, i1 false}
!214 = !{ptr @.str.19, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5751, i32 3}
!216 = !{ptr @.str.20, !215, !"<string literal>", i1 false, i1 false}
!217 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry, !215, !"_entry", i1 false, i1 false}
!218 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_me_cache._entry_ptr, !215, !"_entry_ptr", i1 false, i1 false}
!219 = !{ptr @rlc_autoload_info, !220, !"rlc_autoload_info", i1 false, i1 false}
!220 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5469, i32 3}
!221 = !{ptr @.str.21, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5788, i32 3}
!223 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry, !222, !"_entry", i1 false, i1 false}
!224 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_ce_cache._entry_ptr, !222, !"_entry_ptr", i1 false, i1 false}
!225 = !{ptr @.str.22, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5825, i32 3}
!227 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry, !226, !"_entry", i1 false, i1 false}
!228 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_pfp_cache._entry_ptr, !226, !"_entry_ptr", i1 false, i1 false}
!229 = !{ptr @.str.23, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5862, i32 3}
!231 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry, !230, !"_entry", i1 false, i1 false}
!232 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_config_mec_cache._entry_ptr, !230, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @.str.24, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5716, i32 3}
!235 = !{ptr @.str.25, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5722, i32 3}
!237 = !{ptr @gfx_v10_0_rlc_funcs_sriov, !238, !"gfx_v10_0_rlc_funcs_sriov", i1 false, i1 false}
!238 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 8368, i32 38}
!239 = !{ptr @.str.26, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1492, i32 3}
!241 = !{ptr @gfx_v10_rlcg_rw.scratch_reg0, !242, !"scratch_reg0", i1 false, i1 false}
!242 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1500, i32 15}
!243 = !{ptr @gfx_v10_rlcg_rw.scratch_reg1, !244, !"scratch_reg1", i1 false, i1 false}
!244 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1501, i32 15}
!245 = !{ptr @gfx_v10_rlcg_rw.scratch_reg2, !246, !"scratch_reg2", i1 false, i1 false}
!246 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1502, i32 15}
!247 = !{ptr @gfx_v10_rlcg_rw.scratch_reg3, !248, !"scratch_reg3", i1 false, i1 false}
!248 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1503, i32 15}
!249 = !{ptr @gfx_v10_rlcg_rw.spare_int, !250, !"spare_int", i1 false, i1 false}
!250 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1504, i32 15}
!251 = distinct !{null, !252, !"grbm_cntl", i1 false, i1 false}
!252 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1505, i32 18}
!253 = distinct !{null, !254, !"grbm_idx", i1 false, i1 false}
!254 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1506, i32 18}
!255 = !{ptr @.str.27, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1556, i32 6}
!257 = !{ptr @.str.28, !256, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @gfx_v10_rlcg_rw._entry, !256, !"_entry", i1 false, i1 false}
!259 = !{ptr @gfx_v10_rlcg_rw._entry_ptr, !256, !"_entry_ptr", i1 false, i1 false}
!260 = !{ptr @.str.30, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1558, i32 6}
!262 = !{ptr @gfx_v10_rlcg_rw._entry.29, !261, !"_entry", i1 false, i1 false}
!263 = !{ptr @gfx_v10_rlcg_rw._entry_ptr.31, !261, !"_entry_ptr", i1 false, i1 false}
!264 = !{ptr @.str.33, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1560, i32 6}
!266 = !{ptr @gfx_v10_rlcg_rw._entry.32, !265, !"_entry", i1 false, i1 false}
!267 = !{ptr @gfx_v10_rlcg_rw._entry_ptr.34, !265, !"_entry_ptr", i1 false, i1 false}
!268 = !{ptr @.str.36, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1562, i32 6}
!270 = !{ptr @gfx_v10_rlcg_rw._entry.35, !269, !"_entry", i1 false, i1 false}
!271 = !{ptr @gfx_v10_rlcg_rw._entry_ptr.37, !269, !"_entry_ptr", i1 false, i1 false}
!272 = !{ptr @.str.39, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1564, i32 5}
!274 = !{ptr @gfx_v10_rlcg_rw._entry.38, !273, !"_entry", i1 false, i1 false}
!275 = !{ptr @gfx_v10_rlcg_rw._entry_ptr.40, !273, !"_entry_ptr", i1 false, i1 false}
!276 = !{ptr @.str.41, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4870, i32 3}
!278 = !{ptr @.str.42, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4876, i32 3}
!280 = !{ptr @.str.43, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4917, i32 3}
!282 = !{ptr @.str.44, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4490, i32 3}
!284 = !{ptr @.str.45, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4061, i32 14}
!286 = !{ptr @.str.46, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4072, i32 2}
!288 = !{ptr @.str.47, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4076, i32 15}
!290 = !{ptr @.str.48, !291, !"<string literal>", i1 false, i1 false}
!291 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4079, i32 15}
!292 = !{ptr @.str.49, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4082, i32 10}
!294 = !{ptr @.str.50, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4085, i32 15}
!296 = !{ptr @.str.51, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4088, i32 15}
!298 = !{ptr @.str.52, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4091, i32 15}
!300 = !{ptr @.str.53, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4094, i32 15}
!302 = !{ptr @.str.54, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4097, i32 15}
!304 = !{ptr @.str.55, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4100, i32 15}
!306 = !{ptr @.str.56, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4103, i32 15}
!308 = !{ptr @.str.57, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4107, i32 16}
!310 = !{ptr @.str.58, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4109, i32 16}
!312 = !{ptr @.str.59, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4115, i32 37}
!314 = !{ptr @.str.60, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4126, i32 37}
!316 = !{ptr @.str.61, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4137, i32 37}
!318 = !{ptr @.str.62, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4149, i32 38}
!320 = !{ptr @.str.63, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4206, i32 37}
!322 = !{ptr @.str.64, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4217, i32 37}
!324 = !{ptr @.str.65, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4338, i32 3}
!326 = !{ptr @.str.66, !325, !"<string literal>", i1 false, i1 false}
!327 = !{ptr @gfx_v10_0_init_microcode._entry, !325, !"_entry", i1 false, i1 false}
!328 = !{ptr @gfx_v10_0_init_microcode._entry_ptr, !325, !"_entry_ptr", i1 false, i1 false}
!329 = distinct !{null, !330, !"__already_done", i1 false, i1 false}
!330 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3992, i32 3}
!331 = !{ptr @.str.67, !330, !"<string literal>", i1 false, i1 false}
!332 = !{ptr @.str.68, !330, !"<string literal>", i1 false, i1 false}
!333 = !{ptr @gfx_v10_0_check_fw_write_wait._entry, !330, !"_entry", i1 false, i1 false}
!334 = !{ptr @gfx_v10_0_check_fw_write_wait._entry_ptr, !330, !"_entry_ptr", i1 false, i1 false}
!335 = !{ptr @.str.69, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4519, i32 4}
!337 = !{ptr @.str.70, !336, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @.str.71, !336, !"<string literal>", i1 false, i1 false}
!339 = !{ptr @gfx_v10_0_mec_init._entry, !336, !"_entry", i1 false, i1 false}
!340 = !{ptr @gfx_v10_0_mec_init._entry_ptr, !336, !"_entry_ptr", i1 false, i1 false}
!341 = !{ptr @.str.73, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4543, i32 4}
!343 = !{ptr @gfx_v10_0_mec_init._entry.72, !342, !"_entry", i1 false, i1 false}
!344 = !{ptr @gfx_v10_0_mec_init._entry_ptr.74, !342, !"_entry_ptr", i1 false, i1 false}
!345 = !{ptr @.str.75, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4747, i32 22}
!347 = !{ptr @.str.76, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4777, i32 22}
!349 = !{ptr @.str.77, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5544, i32 3}
!351 = !{ptr @.str.78, !350, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry, !350, !"_entry", i1 false, i1 false}
!353 = !{ptr @gfx_v10_0_rlc_backdoor_autoload_buffer_init._entry_ptr, !350, !"_entry_ptr", i1 false, i1 false}
!354 = !{ptr @.str.79, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5516, i32 3}
!356 = !{ptr @.str.80, !355, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @gfx_v10_0_calc_toc_total_size._entry, !355, !"_entry", i1 false, i1 false}
!358 = !{ptr @gfx_v10_0_calc_toc_total_size._entry_ptr, !355, !"_entry_ptr", i1 false, i1 false}
!359 = !{ptr @.str.81, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5482, i32 3}
!361 = !{ptr @.str.82, !360, !"<string literal>", i1 false, i1 false}
!362 = !{ptr @gfx_v10_0_parse_rlc_toc._entry, !360, !"_entry", i1 false, i1 false}
!363 = !{ptr @gfx_v10_0_parse_rlc_toc._entry_ptr, !360, !"_entry_ptr", i1 false, i1 false}
!364 = !{ptr @gfx_v10_0_gfx_funcs, !365, !"gfx_v10_0_gfx_funcs", i1 false, i1 false}
!365 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 4648, i32 38}
!366 = !{ptr @golden_settings_gc_rlc_spm_10_0_nv10, !367, !"golden_settings_gc_rlc_spm_10_0_nv10", i1 false, i1 false}
!367 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 322, i32 38}
!368 = !{ptr @golden_settings_gc_rlc_spm_10_1_nv14, !369, !"golden_settings_gc_rlc_spm_10_1_nv14", i1 false, i1 false}
!369 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1608, i32 38}
!370 = !{ptr @golden_settings_gc_rlc_spm_10_1_2_nv12, !371, !"golden_settings_gc_rlc_spm_10_1_2_nv12", i1 false, i1 false}
!371 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 2237, i32 38}
!372 = !{ptr @golden_settings_gc_10_1, !373, !"golden_settings_gc_10_1", i1 false, i1 false}
!373 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 273, i32 38}
!374 = !{ptr @golden_settings_gc_10_0_nv10, !375, !"golden_settings_gc_10_0_nv10", i1 false, i1 false}
!375 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 317, i32 38}
!376 = !{ptr @golden_settings_gc_10_1_1, !377, !"golden_settings_gc_10_1_1", i1 false, i1 false}
!377 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1378, i32 38}
!378 = !{ptr @golden_settings_gc_10_1_nv14, !379, !"golden_settings_gc_10_1_nv14", i1 false, i1 false}
!379 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1603, i32 38}
!380 = !{ptr @golden_settings_gc_10_1_2, !381, !"golden_settings_gc_10_1_2", i1 false, i1 false}
!381 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 1420, i32 38}
!382 = !{ptr @golden_settings_gc_10_1_2_nv12, !383, !"golden_settings_gc_10_1_2_nv12", i1 false, i1 false}
!383 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 2232, i32 38}
!384 = !{ptr @golden_settings_gc_10_3, !385, !"golden_settings_gc_10_3", i1 false, i1 false}
!385 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3293, i32 38}
!386 = !{ptr @golden_settings_gc_10_3_sienna_cichlid, !387, !"golden_settings_gc_10_3_sienna_cichlid", i1 false, i1 false}
!387 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3340, i32 38}
!388 = !{ptr @golden_settings_gc_10_3_2, !389, !"golden_settings_gc_10_3_2", i1 false, i1 false}
!389 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3345, i32 38}
!390 = !{ptr @golden_settings_gc_10_3_vangogh, !391, !"golden_settings_gc_10_3_vangogh", i1 false, i1 false}
!391 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3393, i32 38}
!392 = !{ptr @golden_settings_gc_10_3_3, !393, !"golden_settings_gc_10_3_3", i1 false, i1 false}
!393 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3424, i32 38}
!394 = !{ptr @golden_settings_gc_10_3_4, !395, !"golden_settings_gc_10_3_4", i1 false, i1 false}
!395 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3448, i32 38}
!396 = !{ptr @golden_settings_gc_10_3_5, !397, !"golden_settings_gc_10_3_5", i1 false, i1 false}
!397 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3488, i32 38}
!398 = !{ptr @golden_settings_gc_10_0_cyan_skillfish, !399, !"golden_settings_gc_10_0_cyan_skillfish", i1 false, i1 false}
!399 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 3523, i32 38}
!400 = !{ptr @.str.83, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6190, i32 3}
!402 = !{ptr @.str.84, !401, !"<string literal>", i1 false, i1 false}
!403 = !{ptr @gfx_v10_0_cp_gfx_load_microcode._entry, !401, !"_entry", i1 false, i1 false}
!404 = !{ptr @gfx_v10_0_cp_gfx_load_microcode._entry_ptr, !401, !"_entry_ptr", i1 false, i1 false}
!405 = !{ptr @.str.86, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6196, i32 3}
!407 = !{ptr @gfx_v10_0_cp_gfx_load_microcode._entry.85, !406, !"_entry", i1 false, i1 false}
!408 = !{ptr @gfx_v10_0_cp_gfx_load_microcode._entry_ptr.87, !406, !"_entry_ptr", i1 false, i1 false}
!409 = !{ptr @.str.89, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6202, i32 3}
!411 = !{ptr @gfx_v10_0_cp_gfx_load_microcode._entry.88, !410, !"_entry", i1 false, i1 false}
!412 = !{ptr @gfx_v10_0_cp_gfx_load_microcode._entry_ptr.90, !410, !"_entry_ptr", i1 false, i1 false}
!413 = !{ptr @.str.91, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5942, i32 3}
!415 = !{ptr @.str.92, !414, !"<string literal>", i1 false, i1 false}
!416 = !{ptr @.str.93, !414, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @.str.94, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5971, i32 3}
!419 = !{ptr @.str.95, !418, !"<string literal>", i1 false, i1 false}
!420 = !{ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry, !418, !"_entry", i1 false, i1 false}
!421 = !{ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry_ptr, !418, !"_entry_ptr", i1 false, i1 false}
!422 = !{ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry.96, !423, !"_entry", i1 false, i1 false}
!423 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 5996, i32 3}
!424 = !{ptr @gfx_v10_0_cp_gfx_load_pfp_microcode._entry_ptr.97, !423, !"_entry_ptr", i1 false, i1 false}
!425 = !{ptr @.str.98, !426, !"<string literal>", i1 false, i1 false}
!426 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6049, i32 3}
!427 = !{ptr @.str.99, !426, !"<string literal>", i1 false, i1 false}
!428 = !{ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry, !426, !"_entry", i1 false, i1 false}
!429 = !{ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry_ptr, !426, !"_entry_ptr", i1 false, i1 false}
!430 = !{ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry.100, !431, !"_entry", i1 false, i1 false}
!431 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6074, i32 3}
!432 = !{ptr @gfx_v10_0_cp_gfx_load_ce_microcode._entry_ptr.101, !431, !"_entry_ptr", i1 false, i1 false}
!433 = !{ptr @.str.102, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6126, i32 3}
!435 = !{ptr @.str.103, !434, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry, !434, !"_entry", i1 false, i1 false}
!437 = !{ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry_ptr, !434, !"_entry_ptr", i1 false, i1 false}
!438 = !{ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry.104, !439, !"_entry", i1 false, i1 false}
!439 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6151, i32 3}
!440 = !{ptr @gfx_v10_0_cp_gfx_load_me_microcode._entry_ptr.105, !439, !"_entry_ptr", i1 false, i1 false}
!441 = !{ptr @.str.106, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6526, i32 3}
!443 = !{ptr @gfx_v10_0_cp_compute_load_microcode._entry, !442, !"_entry", i1 false, i1 false}
!444 = !{ptr @gfx_v10_0_cp_compute_load_microcode._entry_ptr, !442, !"_entry_ptr", i1 false, i1 false}
!445 = !{ptr @.str.107, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_object.h", i32 179, i32 4}
!447 = !{ptr @.str.108, !446, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @.str.109, !446, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @amdgpu_bo_reserve._entry, !446, !"_entry", i1 false, i1 false}
!450 = !{ptr @amdgpu_bo_reserve._entry_ptr, !446, !"_entry_ptr", i1 false, i1 false}
!451 = distinct !{null, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../include/drm/ttm/ttm_bo_driver.h", i32 140, i32 7}
!453 = !{ptr @.str.111, !454, !"<string literal>", i1 false, i1 false}
!454 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6227, i32 3}
!455 = !{ptr @.str.112, !456, !"<string literal>", i1 false, i1 false}
!456 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 6786, i32 3}
!457 = !{ptr @.str.113, !458, !"<string literal>", i1 false, i1 false}
!458 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 7555, i32 5}
!459 = !{ptr @.str.114, !460, !"<string literal>", i1 false, i1 false}
!460 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 7559, i32 4}
!461 = !{ptr @.str.115, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c", i32 7686, i32 4}
!463 = !{ptr @.str.116, !462, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @.str.117, !462, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @gfx_v10_0_soft_reset._entry, !462, !"_entry", i1 false, i1 false}
!466 = !{ptr @gfx_v10_0_soft_reset._entry_ptr, !462, !"_entry_ptr", i1 false, i1 false}
!467 = !{!"sp"}
!468 = !{i32 1, !"wchar_size", i32 2}
!469 = !{i32 1, !"min_enum_size", i32 4}
!470 = !{i32 8, !"branch-target-enforcement", i32 0}
!471 = !{i32 8, !"sign-return-address", i32 0}
!472 = !{i32 8, !"sign-return-address-all", i32 0}
!473 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!474 = !{i32 7, !"uwtable", i32 1}
!475 = !{i32 7, !"frame-pointer", i32 2}
!476 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!477 = !{i32 0, i32 33}
!478 = !{i8 0, i8 2}
!479 = !{i64 2167346219, i64 2167346723, i64 2167346256, i64 2167346312, i64 2167346346, i64 2167346370, i64 2167346411, i64 2167346432, i64 2167346460, i64 2167346494}
!480 = !{i64 2167347831, i64 2167348335, i64 2167347868, i64 2167347924, i64 2167347958, i64 2167347982, i64 2167348023, i64 2167348044, i64 2167348072, i64 2167348106}
!481 = !{!"branch_weights", i32 2000, i32 1}
!482 = !{i64 2167351915, i64 2167352419, i64 2167351952, i64 2167352008, i64 2167352042, i64 2167352066, i64 2167352107, i64 2167352128, i64 2167352156, i64 2167352190}
!483 = !{i64 2167357585, i64 2167358089, i64 2167357622, i64 2167357678, i64 2167357712, i64 2167357736, i64 2167357777, i64 2167357798, i64 2167357826, i64 2167357860}
!484 = !{!"auto-init"}
!485 = !{i64 2148718704}
!486 = !{i64 2148633168, i64 2148633200, i64 2148633229, i64 2148633263, i64 2148633294, i64 2148633317}
!487 = !{i64 2149997422}
!488 = !{!"branch_weights", i32 4001, i32 1}
!489 = !{i64 2166874008, i64 2166874512, i64 2166874045, i64 2166874101, i64 2166874135, i64 2166874159, i64 2166874200, i64 2166874221, i64 2166874249, i64 2166874283}
!490 = !{!"branch_weights", i32 1, i32 2000}
!491 = !{i64 2167349922, i64 2167350426, i64 2167349959, i64 2167350015, i64 2167350049, i64 2167350073, i64 2167350114, i64 2167350135, i64 2167350163, i64 2167350197}
!492 = !{i64 2167353915, i64 2167354419, i64 2167353952, i64 2167354008, i64 2167354042, i64 2167354066, i64 2167354107, i64 2167354128, i64 2167354156, i64 2167354190}
!493 = !{i64 2167355551, i64 2167356055, i64 2167355588, i64 2167355644, i64 2167355678, i64 2167355702, i64 2167355743, i64 2167355764, i64 2167355792, i64 2167355826}
!494 = !{i64 2167360331, i64 2167360835, i64 2167360368, i64 2167360424, i64 2167360458, i64 2167360482, i64 2167360523, i64 2167360544, i64 2167360572, i64 2167360606}
!495 = !{i64 2167362011, i64 2167362515, i64 2167362048, i64 2167362104, i64 2167362138, i64 2167362162, i64 2167362203, i64 2167362224, i64 2167362252, i64 2167362286}
!496 = !{i64 2167398744, i64 2167399248, i64 2167398781, i64 2167398837, i64 2167398871, i64 2167398895, i64 2167398936, i64 2167398957, i64 2167398985, i64 2167399019}
!497 = !{i64 2167386411, i64 2167386915, i64 2167386448, i64 2167386504, i64 2167386538, i64 2167386562, i64 2167386603, i64 2167386624, i64 2167386652, i64 2167386686}
!498 = !{i64 2166451447}
!499 = !{i64 5430896}
!500 = !{i64 2166451818}
!501 = !{i64 2166452221}
!502 = !{i64 2166452624}
!503 = !{i64 2166453007}
!504 = !{i64 2166453411}
!505 = !{i64 5431314}
!506 = !{i64 2166454038}
!507 = !{i64 2166464665}
!508 = !{i64 2166883883, i64 2166884387, i64 2166883920, i64 2166883976, i64 2166884010, i64 2166884034, i64 2166884075, i64 2166884096, i64 2166884124, i64 2166884158}
!509 = !{i64 2166919482, i64 2166919986, i64 2166919519, i64 2166919575, i64 2166919609, i64 2166919633, i64 2166919674, i64 2166919695, i64 2166919723, i64 2166919757}
!510 = !{i64 2167288438}
!511 = !{i64 2167291243}
!512 = !{i64 2167291436}
!513 = !{i64 2167294177}
!514 = !{!"branch_weights", i32 1, i32 4000, i32 1}
