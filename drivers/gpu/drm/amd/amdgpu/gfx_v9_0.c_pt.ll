; ModuleID = '/llk/IR_all_yes/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c_pt.bc'
source_filename = "../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.amd_ip_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_ip_block_version = type { i32, i32, i32, i32, ptr }
%struct.kiq_pm4_funcs = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32 }
%struct.amdgpu_ring_funcs = type { i32, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.amdgpu_irq_src_funcs = type { ptr, ptr }
%struct.amdgpu_rlc_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cs_section_def = type { ptr, i32 }
%struct.cs_extent_def = type { ptr, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.soc15_reg_entry = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_gfx_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_gfx_ras_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ras_gfx_subblock = type { ptr, i32, i32, i32 }
%struct.soc15_ras_field_entry = type { ptr, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.soc15_reg_golden = type { i32, i32, i32, i32, i32, i32 }
%struct.atomic_t = type { i32 }
%struct.amdgpu_device = type { ptr, ptr, %struct.drm_device, %struct.amdgpu_acp, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, i8, i8, i8, %struct.notifier_block, [16 x ptr], %struct.debugfs_blob_wrapper, %struct.debugfs_blob_wrapper, %struct.mutex, %struct.mutex, %struct.dev_pm_domain, i8, i8, i8, ptr, i32, i32, [16 x i32], i32, i32, ptr, %struct.spinlock, %struct.amdgpu_mmio_remap, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.amdgpu_doorbell, %struct.amdgpu_clock, %struct.amdgpu_gmc, %struct.amdgpu_gart, i32, %struct.amdgpu_vm_manager, [3 x %struct.amdgpu_vmhub], i32, %struct.amdgpu_mman, %struct.amdgpu_vram_scratch, %struct.amdgpu_wb, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.anon.97, i8, ptr, %struct.amdgpu_mode_info, %struct.work_struct, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i64, i32, [28 x ptr], i8, [3 x %struct.amdgpu_sa_manager], [9 x [3 x %struct.amdgpu_sched]], %struct.amdgpu_irq, %struct.amd_powerplay, i8, %struct.smu_context, %struct.amdgpu_pm, i32, i32, %struct.amdgpu_nbio, %struct.amdgpu_hdp, %struct.amdgpu_smuio, %struct.amdgpu_mmhub, %struct.amdgpu_gfxhub, %struct.amdgpu_gfx, %struct.amdgpu_sdma, %struct.amdgpu_uvd, %struct.amdgpu_vce, %struct.amdgpu_vcn, %struct.amdgpu_jpeg, %struct.amdgpu_firmware, %struct.psp_context, %struct.amdgpu_gds, %struct.amdgpu_kfd_dev, %struct.amdgpu_umc, %struct.amdgpu_display_manager, i8, %struct.amdgpu_mes, %struct.amdgpu_df, %struct.amdgpu_mca, [16 x %struct.amdgpu_ip_block], i32, i32, %struct.mutex, [128 x %struct.hlist_head], %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, [31 x [10 x ptr]], %struct.delayed_work, %struct.amdgpu_virt, %struct.list_head, %struct.mutex, i8, [64 x i8], i8, i8, i8, i8, %struct.atomic_t, i32, %struct.rw_semaphore, %struct.amdgpu_doorbell_index, %struct.mutex, i32, %struct.work_struct, %struct.list_head, i32, i32, i32, i32, i64, [4 x i64], i8, i8, i8, i8, i8, i8, [16 x i8], [64 x i8], [20 x i8], %struct.atomic_t, %struct.ratelimit_state, i32, i32, i8, ptr, i32, ptr, [31 x [10 x i32]], i8 }
%struct.drm_device = type { i32, %struct.kref, ptr, %struct.anon.79, ptr, ptr, ptr, ptr, i8, ptr, i32, i8, ptr, ptr, %struct.mutex, %struct.mutex, %struct.atomic_t, %struct.mutex, %struct.list_head, %struct.list_head, %struct.mutex, %struct.list_head, i8, ptr, %struct.spinlock, %struct.spinlock, i32, %struct.list_head, %struct.spinlock, i32, %struct.drm_mode_config, %struct.mutex, %struct.idr, ptr, ptr, i32, ptr, %struct.list_head, ptr, %struct.list_head, %struct.mutex, %struct.idr, %struct.list_head, %struct.drm_open_hash, %struct.list_head, ptr, i32, i32, %struct.spinlock, i32, %struct.atomic_t, %struct.anon.89, ptr, i32, ptr, i8, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.anon.79 = type { %struct.list_head, ptr, %struct.spinlock }
%struct.drm_mode_config = type { %struct.mutex, %struct.drm_modeset_lock, ptr, %struct.mutex, %struct.idr, %struct.idr, %struct.mutex, i32, %struct.list_head, %struct.spinlock, i32, %struct.ida, %struct.list_head, %struct.llist_head, %struct.work_struct, i32, %struct.list_head, i32, %struct.list_head, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, ptr, i32, i8, i8, i8, %struct.delayed_work, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, ptr, i32, i32, ptr, ptr }
%struct.drm_modeset_lock = type { %struct.ww_mutex, %struct.list_head }
%struct.ww_mutex = type { %struct.mutex, ptr, ptr }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.llist_head = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.drm_open_hash = type { ptr, i8 }
%struct.anon.89 = type { i32, ptr }
%struct.amdgpu_acp = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.debugfs_blob_wrapper = type { ptr, i32 }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_mmio_remap = type { i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.amdgpu_doorbell = type { i32, i32, ptr, i32 }
%struct.amdgpu_clock = type { [3 x %struct.amdgpu_pll], %struct.amdgpu_pll, %struct.amdgpu_pll, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_pll = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_gmc = type { i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i64, i32, i64, ptr, i32, %struct.amdgpu_irq_src, i32, i8, i32, i8, i32, i64, i64, i64, i64, %struct.spinlock, i8, ptr, %struct.atomic_t, [256 x %struct.amdgpu_gmc_fault], [256 x %struct.anon.96], i8, i8, ptr, %struct.amdgpu_xgmi, %struct.amdgpu_irq_src, i32, i32, i32, ptr, ptr }
%struct.amdgpu_gmc_fault = type { i56, %struct.atomic64_t }
%struct.anon.96 = type { i8, [7 x i8] }
%struct.amdgpu_xgmi = type { i64, i64, i64, i32, i32, %struct.list_head, i8, ptr, i8, i8, ptr }
%struct.amdgpu_gart = type { ptr, ptr, i32, i32, i32, i8, i64 }
%struct.amdgpu_vm_manager = type { [3 x %struct.amdgpu_vmid_mgr], i32, i8, i64, [28 x i32], i64, i32, i32, i32, i32, i64, ptr, [28 x ptr], i32, ptr, %struct.spinlock, %struct.atomic_t, i32, %struct.xarray }
%struct.amdgpu_vmid_mgr = type { %struct.mutex, i32, %struct.list_head, [16 x %struct.amdgpu_vmid], %struct.atomic_t }
%struct.amdgpu_vmid = type { %struct.list_head, %struct.amdgpu_sync, ptr, i64, i64, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_sync = type { [16 x %struct.hlist_head], ptr }
%struct.hlist_head = type { ptr }
%struct.amdgpu_vmhub = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_mman = type { %struct.ttm_device, i8, ptr, ptr, ptr, i8, %struct.mutex, %struct.drm_sched_entity, %struct.amdgpu_vram_mgr, %struct.amdgpu_gtt_mgr, %struct.amdgpu_preempt_mgr, i64, ptr, i64, ptr, i8, ptr, i64, i64, ptr, i32, ptr, i64, i64, ptr, ptr }
%struct.ttm_device = type { %struct.list_head, ptr, %struct.ttm_resource_manager, [8 x ptr], ptr, %struct.ttm_pool, %struct.spinlock, %struct.list_head, %struct.list_head, ptr, %struct.delayed_work }
%struct.ttm_resource_manager = type { i8, i8, i64, ptr, %struct.spinlock, [4 x %struct.list_head], ptr }
%struct.ttm_pool = type { ptr, i8, i8, [3 x %struct.anon.93] }
%struct.anon.93 = type { [12 x %struct.ttm_pool_type] }
%struct.ttm_pool_type = type { ptr, i32, i32, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.drm_sched_entity = type { %struct.list_head, ptr, ptr, i32, i32, %struct.spinlock, %struct.spsc_queue, %struct.atomic_t, i64, ptr, %struct.dma_fence_cb, ptr, ptr, ptr, i8, %struct.completion }
%struct.spsc_queue = type { ptr, %struct.atomic_t, %struct.atomic_t }
%struct.dma_fence_cb = type { %struct.list_head, ptr }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.amdgpu_vram_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.atomic64_t, %struct.atomic64_t }
%struct.drm_mm = type { ptr, %struct.list_head, %struct.drm_mm_node, %struct.rb_root_cached, %struct.rb_root_cached, %struct.rb_root, i32 }
%struct.drm_mm_node = type { i32, i64, i64, ptr, %struct.list_head, %struct.list_head, %struct.rb_node, %struct.rb_node, %struct.rb_node, i64, i64, i64, i32, i32 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.amdgpu_gtt_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.atomic64_t }
%struct.amdgpu_preempt_mgr = type { %struct.ttm_resource_manager, %struct.atomic64_t }
%struct.amdgpu_vram_scratch = type { ptr, ptr, i64 }
%struct.amdgpu_wb = type { ptr, ptr, i64, i32, [8 x i32] }
%struct.anon.97 = type { %struct.spinlock, i64, i64, i64, i32 }
%struct.amdgpu_mode_info = type { ptr, ptr, i8, [6 x ptr], [6 x ptr], [9 x ptr], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i8, %struct.amdgpu_audio, i32, i32, i32, i32, ptr, ptr }
%struct.amdgpu_audio = type { i8, [9 x %struct.amdgpu_audio_pin], i32 }
%struct.amdgpu_audio_pin = type { i32, i32, i32, i8, i8, i32, i8, i32 }
%struct.amdgpu_irq_src = type { i32, ptr, ptr }
%struct.amdgpu_sa_manager = type { %struct.wait_queue_head, ptr, ptr, [32 x %struct.list_head], %struct.list_head, i32, i64, ptr, i32, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.amdgpu_sched = type { i32, [8 x ptr] }
%struct.amdgpu_irq = type { i8, i32, %struct.spinlock, [32 x %struct.amdgpu_irq_client], i8, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, ptr, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.amdgpu_irq_src, ptr, [256 x i32], i32 }
%struct.amdgpu_irq_client = type { ptr }
%struct.amdgpu_ih_ring = type { i32, i32, i32, i8, i8, ptr, ptr, i64, i64, ptr, i64, ptr, i8, i32, %struct.amdgpu_ih_regs, %struct.wait_queue_head, i64 }
%struct.amdgpu_ih_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amd_powerplay = type { ptr, ptr }
%struct.smu_context = type { ptr, %struct.amdgpu_irq_src, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, i64, %struct.smu_table_context, %struct.smu_dpm_context, %struct.smu_power_context, %struct.smu_feature, ptr, %struct.smu_baco_context, %struct.smu_temperature_range, ptr, %struct.smu_umd_pstate_table, i32, i32, i8, i32, i32, i32, i32, i32, ptr, i8, i8, i32, i32, i8, i32, [7 x i32], [7 x i32], i32, i32, i8, i8, i32, i32, i32, i8, i8, %struct.work_struct, %struct.atomic64_t, %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, %struct.smu_user_dpm_profile, %struct.stb_context }
%struct.smu_table_context = type { ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, %struct.smu_bios_boot_up_values, ptr, ptr, [15 x %struct.smu_table], %struct.smu_table, %struct.smu_table, %struct.smu_table, i8, ptr, ptr, ptr, i32, ptr }
%struct.smu_bios_boot_up_values = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i32, i32, i32, i32, i32, i32 }
%struct.smu_table = type { i64, i32, i8, i64, ptr, ptr }
%struct.smu_dpm_context = type { i32, ptr, ptr, i8, i32, i32, i32, ptr, ptr, ptr }
%struct.smu_power_context = type { ptr, i32, %struct.smu_power_gate }
%struct.smu_power_gate = type { i8, i8, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.mutex }
%struct.smu_feature = type { i32, [2 x i32], [2 x i32], [2 x i32], %struct.mutex }
%struct.smu_baco_context = type { %struct.mutex, i32, i8 }
%struct.smu_temperature_range = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.smu_umd_pstate_table = type { %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq }
%struct.pstates_clk_freq = type { i32, i32, i32, %struct.smu_freq_info, %struct.smu_freq_info }
%struct.smu_freq_info = type { i32, i32, i32 }
%struct.smu_user_dpm_profile = type { i32, i32, i32, i32, i32, i32, [23 x i32], i32 }
%struct.stb_context = type { i32, i8, %struct.spinlock }
%struct.amdgpu_pm = type { %struct.mutex, i32, i32, i32, i32, ptr, i8, i32, ptr, i8, i8, i8, i8, i8, i8, %struct.amdgpu_dpm, ptr, i32, i32, i32, %struct.amd_pp_display_configuration, i32, ptr, i8, i32, %struct.i2c_adapter, %struct.mutex, %struct.list_head, [14 x %struct.atomic_t], i32 }
%struct.amdgpu_dpm = type { ptr, i32, ptr, ptr, ptr, ptr, i32, [6 x %struct.amd_vce_state], i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, %struct.amdgpu_dpm_dynamic_state, %struct.amdgpu_dpm_fan, i32, i32, i32, i32, i32, i16, i32, i16, i8, i8, i8, i8, %struct.amdgpu_dpm_thermal, i32 }
%struct.amd_vce_state = type { i32, i32, i32, i32, i8, i8 }
%struct.amdgpu_dpm_dynamic_state = type { %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_uvd_clock_voltage_dependency_table, %struct.amdgpu_vce_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_array, %struct.amdgpu_clock_array, %struct.amdgpu_clock_and_voltage_limits, %struct.amdgpu_clock_and_voltage_limits, i32, i32, i16, i16, %struct.amdgpu_cac_leakage_table, %struct.amdgpu_phase_shedding_limits_table, ptr, ptr }
%struct.amdgpu_uvd_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_vce_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_clock_voltage_dependency_table = type { i32, ptr }
%struct.amdgpu_clock_array = type { i32, ptr }
%struct.amdgpu_clock_and_voltage_limits = type { i32, i32, i16, i16 }
%struct.amdgpu_cac_leakage_table = type { i32, ptr }
%struct.amdgpu_phase_shedding_limits_table = type { i32, ptr }
%struct.amdgpu_dpm_fan = type { i16, i16, i16, i16, i16, i16, i8, i32, i16, i8, i16, i16, i16, i8 }
%struct.amdgpu_dpm_thermal = type { %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.amdgpu_irq_src }
%struct.amd_pp_display_configuration = type { i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.single_display_configuration], i32, i32, i8, i32, i32, i8, i32, i32, i32, i32 }
%struct.single_display_configuration = type { i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32 }
%struct.i2c_adapter = type { ptr, i32, ptr, ptr, ptr, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i32, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr }
%struct.rt_mutex = type { %struct.rt_mutex_base, %struct.lockdep_map }
%struct.rt_mutex_base = type { %struct.raw_spinlock, %struct.rb_root_cached, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.amdgpu_nbio = type { ptr, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, ptr, ptr, ptr }
%struct.amdgpu_hdp = type { ptr, ptr, ptr }
%struct.amdgpu_smuio = type { ptr }
%struct.amdgpu_mmhub = type { ptr, ptr, ptr }
%struct.amdgpu_gfxhub = type { ptr }
%struct.amdgpu_gfx = type { %struct.mutex, %struct.amdgpu_gfx_config, %struct.amdgpu_rlc, %struct.amdgpu_pfp, %struct.amdgpu_ce, %struct.amdgpu_me, %struct.amdgpu_mec, %struct.amdgpu_kiq, %struct.amdgpu_scratch, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_ring], i32, [8 x %struct.amdgpu_ring], i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.sq_work, i32, i32, %struct.amdgpu_cu_info, ptr, i32, i32, i8, %struct.mutex, i32, %struct.delayed_work, %struct.mutex, [4 x i32], ptr, ptr }
%struct.amdgpu_gfx_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x i32], [16 x i32], %struct.gb_addr_config, [4 x [2 x %struct.amdgpu_rb_config]], i32, i32, i32, i32, i32, i64 }
%struct.gb_addr_config = type { i16, i8, i8, i8, i8, i8, i8 }
%struct.amdgpu_rb_config = type { i32, i32, i32, i32 }
%struct.amdgpu_rlc = type { ptr, i64, ptr, ptr, i32, ptr, i64, ptr, ptr, i32, ptr, i64, ptr, i32, i8, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, ptr, i64, ptr, ptr, i64, ptr }
%struct.amdgpu_pfp = type { ptr, i64, ptr }
%struct.amdgpu_ce = type { ptr, i64, ptr }
%struct.amdgpu_me = type { ptr, i64, ptr, i32, i32, i32, [2 x ptr], [4 x i32] }
%struct.amdgpu_mec = type { ptr, i64, ptr, i64, i32, i32, i32, [9 x ptr], [4 x i32] }
%struct.amdgpu_kiq = type { i64, ptr, %struct.spinlock, %struct.amdgpu_ring, %struct.amdgpu_irq_src, ptr }
%struct.amdgpu_ring = type { ptr, ptr, %struct.amdgpu_fence_driver, %struct.drm_gpu_scheduler, ptr, ptr, i32, i64, i64, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, ptr, i64, ptr, i64, i32, i8, i8, i32, i32, i64, [16 x i8], i32, i32, i64, ptr, i32, i64, ptr, i32, ptr, i8, i8, i32 }
%struct.amdgpu_fence_driver = type { i64, ptr, i32, %struct.atomic_t, i8, ptr, i32, %struct.timer_list, i32, %struct.spinlock, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.drm_gpu_scheduler = type { ptr, i32, i32, ptr, [4 x %struct.drm_sched_rq], %struct.wait_queue_head, %struct.wait_queue_head, %struct.atomic_t, %struct.atomic64_t, ptr, %struct.delayed_work, ptr, %struct.list_head, %struct.spinlock, i32, ptr, %struct.atomic_t, i8, i8 }
%struct.drm_sched_rq = type { %struct.spinlock, ptr, %struct.list_head, ptr }
%struct.amdgpu_scratch = type { i32, i32, i32 }
%struct.sq_work = type { %struct.work_struct, i32 }
%struct.amdgpu_cu_info = type { i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i32]], [4 x [4 x i32]] }
%struct.amdgpu_sdma = type { [8 x %struct.amdgpu_sdma_instance], %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i32, i32, i8, ptr, ptr }
%struct.amdgpu_sdma_instance = type { ptr, i32, i32, %struct.amdgpu_ring, %struct.amdgpu_ring, i8 }
%struct.amdgpu_uvd = type { ptr, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_uvd_inst], [40 x ptr], [40 x %struct.atomic_t], %struct.drm_sched_entity, %struct.delayed_work, i32, i32, i32, ptr }
%struct.amdgpu_uvd_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [2 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32 }
%struct.amdgpu_vce = type { ptr, i64, ptr, ptr, i32, i32, [16 x %struct.atomic_t], [16 x ptr], [16 x i32], %struct.delayed_work, %struct.mutex, ptr, [3 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32, %struct.drm_sched_entity, i32, i32 }
%struct.amdgpu_vcn = type { i32, %struct.delayed_work, ptr, i32, i32, i8, i8, [2 x %struct.amdgpu_vcn_inst], [2 x i8], %struct.amdgpu_vcn_reg, %struct.mutex, %struct.mutex, %struct.atomic_t, i32, ptr }
%struct.amdgpu_vcn_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [3 x %struct.amdgpu_ring], %struct.atomic_t, %struct.amdgpu_irq_src, %struct.amdgpu_vcn_reg, ptr, %struct.dpg_pause_state, ptr, i64, ptr, %struct.atomic_t, ptr, i64 }
%struct.dpg_pause_state = type { i32, i32 }
%struct.amdgpu_vcn_reg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_jpeg = type { i8, [2 x %struct.amdgpu_jpeg_inst], %struct.amdgpu_jpeg_reg, i32, %struct.delayed_work, i32, %struct.mutex, %struct.atomic_t }
%struct.amdgpu_jpeg_inst = type { %struct.amdgpu_ring, %struct.amdgpu_irq_src, %struct.amdgpu_jpeg_reg }
%struct.amdgpu_jpeg_reg = type { i32 }
%struct.amdgpu_firmware = type { [35 x %struct.amdgpu_firmware_info], i32, ptr, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i64 }
%struct.amdgpu_firmware_info = type { i32, ptr, i64, ptr, i32, i32, i32 }
%struct.psp_context = type { ptr, %struct.psp_ring, ptr, ptr, ptr, i64, ptr, ptr, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, ptr, i64, ptr, ptr, ptr, i64, ptr, ptr, i64, ptr, %struct.atomic_t, i8, i8, ptr, i32, %struct.ta_context, %struct.psp_xgmi_context, %struct.psp_ras_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.mutex, %struct.psp_memory_training_context, i32 }
%struct.psp_ring = type { i32, ptr, i64, ptr, i32, i32 }
%struct.psp_bin_desc = type { i32, i32, i32, ptr }
%struct.ta_context = type { i8, i32, %struct.ta_mem_context, %struct.psp_bin_desc, i32 }
%struct.ta_mem_context = type { ptr, i64, ptr, i32 }
%struct.psp_xgmi_context = type { %struct.ta_context, %struct.psp_xgmi_topology_info, i8 }
%struct.psp_xgmi_topology_info = type { i32, [64 x %struct.psp_xgmi_node_info] }
%struct.psp_xgmi_node_info = type { i64, i8, i8, i32, i8 }
%struct.psp_ras_context = type { %struct.ta_context, ptr }
%struct.ta_cp_context = type { %struct.ta_context, %struct.mutex }
%struct.psp_memory_training_context = type { i64, ptr, i64, i64, ptr, i32, i32, i8 }
%struct.amdgpu_gds = type { i32, i32, i32, i32 }
%struct.amdgpu_kfd_dev = type { ptr, i64, i8 }
%struct.amdgpu_umc = type { i32, i32, i32, i32, ptr, ptr, ptr, ptr }
%struct.amdgpu_display_manager = type { ptr, ptr, ptr, [5 x ptr], [5 x i8], ptr, ptr, ptr, i64, ptr, i32, ptr, ptr, ptr, i16, %struct.drm_private_obj, %struct.mutex, %struct.mutex, ptr, i8, [99 x %struct.list_head], [99 x %struct.list_head], [7 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [1 x %struct.common_irq_params], [1 x %struct.common_irq_params], %struct.spinlock, [2 x ptr], [2 x ptr], i8, [2 x %struct.amdgpu_dm_backlight_caps], ptr, ptr, ptr, ptr, %struct.dm_compressor_info, ptr, i32, ptr, ptr, [6 x %struct.amdgpu_encoder], i8, i8, i8, %struct.list_head, %struct.completion, ptr, [2 x i32] }
%struct.drm_private_obj = type { %struct.list_head, %struct.drm_modeset_lock, ptr, ptr }
%struct.common_irq_params = type { ptr, i32, %struct.atomic64_t }
%struct.amdgpu_dm_backlight_caps = type { ptr, i32, i32, i32, i32, i8, i8 }
%struct.dm_compressor_info = type { ptr, ptr, i64 }
%struct.amdgpu_encoder = type { %struct.drm_encoder, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.drm_display_mode, ptr, i32, i8, i16 }
%struct.drm_encoder = type { ptr, %struct.list_head, %struct.drm_mode_object, ptr, i32, i32, i32, i32, ptr, %struct.list_head, ptr, ptr }
%struct.drm_mode_object = type { i32, i32, ptr, %struct.kref, ptr }
%struct.drm_display_mode = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %struct.list_head, [32 x i8], i32, i32 }
%struct.amdgpu_mes = type { ptr, i32, i32, i32, i64, i64, %struct.amdgpu_ring, ptr, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i32, [8 x i32], [2 x i32], [2 x i32], [5 x i32], i32, i64, ptr, i32, i64, ptr, ptr }
%struct.amdgpu_df = type { %struct.amdgpu_df_hash_status, ptr }
%struct.amdgpu_df_hash_status = type { i8, i8, i8 }
%struct.amdgpu_mca = type { ptr, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras }
%struct.amdgpu_mca_ras = type { ptr, ptr }
%struct.amdgpu_ip_block = type { %struct.amdgpu_ip_block_status, ptr }
%struct.amdgpu_ip_block_status = type { i8, i8, i8, i8, i8 }
%struct.atomic64_t = type { i64 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.amdgpu_virt = type { i32, ptr, ptr, i8, i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.work_struct, %struct.amdgpu_mm_table, ptr, %struct.amdgpu_vf_error_buffer, %struct.amdgpu_virt_fw_reserve, i32, i32, i32, i8, ptr, i8, i32, %struct.delayed_work, i32, i8, i32, i32, i32, i32 }
%struct.amdgpu_mm_table = type { ptr, ptr, i64 }
%struct.amdgpu_vf_error_buffer = type { %struct.mutex, i32, i32, [16 x i16], [16 x i16], [16 x i64] }
%struct.amdgpu_virt_fw_reserve = type { ptr, ptr, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.amdgpu_doorbell_index = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, %union.anon.110, i32, i32, i32, i32 }
%union.anon.110 = type { %struct.anon.112 }
%struct.anon.112 = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.list_head = type { ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_ib = type { ptr, i32, i64, ptr, i32 }
%struct.dma_fence = type { ptr, ptr, %union.anon.85, i64, i64, i32, %struct.kref, i32 }
%union.anon.85 = type { i64 }
%struct.amdgpu_smuio_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.firmware = type { i32, ptr, ptr }
%struct.common_firmware_header = type { i32, i32, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.gfx_firmware_header_v1_0 = type { %struct.common_firmware_header, i32, i32, i32 }
%struct.amdgpu_bo = type { i32, i32, [3 x %struct.ttm_place], %struct.ttm_placement, %struct.ttm_buffer_object, %struct.ttm_bo_kmap_obj, i64, ptr, ptr, %struct.mmu_interval_notifier, ptr }
%struct.ttm_place = type { i32, i32, i32, i32 }
%struct.ttm_placement = type { i32, ptr, i32, ptr }
%struct.ttm_buffer_object = type { %struct.drm_gem_object, ptr, i32, i32, ptr, %struct.kref, ptr, ptr, i8, %struct.list_head, %struct.list_head, ptr, i32, i32, ptr }
%struct.drm_gem_object = type { %struct.kref, i32, ptr, ptr, %struct.drm_vma_offset_node, i32, i32, ptr, ptr, ptr, %struct.dma_resv, ptr }
%struct.drm_vma_offset_node = type { %struct.rwlock_t, %struct.drm_mm_node, %struct.rb_root, ptr }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.dma_resv = type { %struct.ww_mutex, %struct.seqcount_ww_mutex, ptr, ptr }
%struct.seqcount_ww_mutex = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ttm_bo_kmap_obj = type { ptr, ptr, i32, ptr }
%struct.mmu_interval_notifier = type { %struct.interval_tree_node, ptr, ptr, %struct.hlist_node, i32 }
%struct.interval_tree_node = type { %struct.rb_node, i32, i32, i32 }
%struct.v9_mqd = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.v9_mqd_allocation = type { %struct.v9_mqd, i32, i32, i32, i32 }
%struct.v9_de_ib_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_job = type { %struct.drm_sched_job, ptr, %struct.amdgpu_sync, %struct.amdgpu_sync, ptr, %struct.dma_fence, ptr, i32, i32, i32, i8, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32 }
%struct.drm_sched_job = type { %struct.spsc_node, %struct.list_head, ptr, ptr, %union.anon.92, i64, %struct.atomic_t, i32, ptr, %struct.dma_fence_cb, %struct.xarray, i32 }
%struct.spsc_node = type { ptr }
%union.anon.92 = type { %struct.irq_work }
%struct.irq_work = type { %struct.__call_single_node, ptr, %struct.rcuwait }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.rcuwait = type { ptr }
%struct.amdgpu_gmc_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.nbio_hdp_flush_reg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_nbio_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.v9_ce_ib_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_iv_entry = type { ptr, i32, i32, i32, i32, i32, i64, i32, i32, i32, [4 x i32], ptr }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.78, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.78 = type { ptr }
%struct.rlc_firmware_header_v2_0 = type { %struct.common_firmware_header, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.rlc_firmware_header_v2_1 = type { %struct.rlc_firmware_header_v2_0, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.ta_ras_trigger_error_input = type { i32, i32, i32, i64, i64 }
%struct.ras_common_if = type { i32, i32, i32, [32 x i8] }
%struct.ras_inject_if = type { %struct.ras_common_if, i64, i64 }
%struct.ras_err_data = type { i32, i32, i32, ptr }

@__UNIQUE_ID_firmware343 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/vega10_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware344 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega10_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware345 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/vega10_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware346 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega10_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware347 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/vega10_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware348 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega10_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware349 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/vega12_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware350 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega12_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware351 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/vega12_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware352 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega12_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware353 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/vega12_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware354 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega12_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware355 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/vega20_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware356 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega20_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware357 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/vega20_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware358 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega20_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware359 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/vega20_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware360 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/vega20_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware361 = internal constant [36 x i8] c"amdgpu.firmware=amdgpu/raven_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware362 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/raven_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware363 = internal constant [36 x i8] c"amdgpu.firmware=amdgpu/raven_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware364 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/raven_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware365 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/raven_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware366 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/raven_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware367 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/picasso_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware368 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/picasso_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware369 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/picasso_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware370 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/picasso_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware371 = internal constant [40 x i8] c"amdgpu.firmware=amdgpu/picasso_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware372 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/picasso_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware373 = internal constant [43 x i8] c"amdgpu.firmware=amdgpu/picasso_rlc_am4.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware374 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/raven2_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware375 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/raven2_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware376 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/raven2_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware377 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/raven2_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware378 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/raven2_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware379 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/raven2_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware380 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/raven_kicker_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware381 = internal constant [40 x i8] c"amdgpu.firmware=amdgpu/arcturus_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware382 = internal constant [40 x i8] c"amdgpu.firmware=amdgpu/arcturus_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware383 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/renoir_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware384 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/renoir_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware385 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/renoir_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware386 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/renoir_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware387 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/renoir_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware388 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/green_sardine_ce.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware389 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/green_sardine_pfp.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware390 = internal constant [44 x i8] c"amdgpu.firmware=amdgpu/green_sardine_me.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware391 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/green_sardine_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware392 = internal constant [46 x i8] c"amdgpu.firmware=amdgpu/green_sardine_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware393 = internal constant [45 x i8] c"amdgpu.firmware=amdgpu/green_sardine_rlc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware394 = internal constant [41 x i8] c"amdgpu.firmware=amdgpu/aldebaran_mec.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware395 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/aldebaran_mec2.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware396 = internal constant [41 x i8] c"amdgpu.firmware=amdgpu/aldebaran_rlc.bin\00", section ".modinfo", align 1
@gfx_v9_0_ip_funcs = internal constant { %struct.amd_ip_funcs, [44 x i8] } { %struct.amd_ip_funcs { ptr @.str, ptr @gfx_v9_0_early_init, ptr @gfx_v9_0_late_init, ptr @gfx_v9_0_sw_init, ptr @gfx_v9_0_sw_fini, ptr null, ptr @gfx_v9_0_hw_init, ptr @gfx_v9_0_hw_fini, ptr null, ptr @gfx_v9_0_suspend, ptr @gfx_v9_0_resume, ptr @gfx_v9_0_is_idle, ptr @gfx_v9_0_wait_for_idle, ptr null, ptr null, ptr @gfx_v9_0_soft_reset, ptr null, ptr @gfx_v9_0_set_clockgating_state, ptr @gfx_v9_0_set_powergating_state, ptr @gfx_v9_0_get_clockgating_state, ptr null }, [44 x i8] zeroinitializer }, align 32
@gfx_v9_0_ip_block = dso_local constant { %struct.amdgpu_ip_block_version, [44 x i8] } { %struct.amdgpu_ip_block_version { i32 6, i32 9, i32 0, i32 0, ptr @gfx_v9_0_ip_funcs }, [44 x i8] zeroinitializer }, align 32
@.str = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gfx_v9_0\00", [23 x i8] zeroinitializer }, align 32
@gfx_v9_0_kiq_pm4_funcs = internal constant { %struct.kiq_pm4_funcs, [56 x i8] } { %struct.kiq_pm4_funcs { ptr @gfx_v9_0_kiq_set_resources, ptr @gfx_v9_0_kiq_map_queues, ptr @gfx_v9_0_kiq_unmap_queues, ptr @gfx_v9_0_kiq_query_status, ptr @gfx_v9_0_kiq_invalidate_tlbs, i32 8, i32 7, i32 6, i32 7, i32 2 }, [56 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"amdgpu: writing more dwords to the ring than expected!\0A\00", [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_ring_funcs_kiq = internal constant { %struct.amdgpu_ring_funcs, [32 x i8] } { %struct.amdgpu_ring_funcs { i32 9, i32 255, i32 -61440, i8 1, i8 0, i32 0, i32 0, ptr @gfx_v9_0_ring_get_rptr_compute, ptr @gfx_v9_0_ring_get_wptr_compute, ptr @gfx_v9_0_ring_set_wptr_compute, ptr null, ptr null, i32 116, i32 7, ptr null, ptr @gfx_v9_0_ring_emit_fence_kiq, ptr null, ptr null, ptr null, ptr null, ptr @gfx_v9_0_ring_test_ring, ptr null, ptr @amdgpu_ring_insert_nop, ptr null, ptr null, ptr @amdgpu_ring_generic_pad_ib, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @gfx_v9_0_ring_emit_rreg, ptr @gfx_v9_0_ring_emit_wreg, ptr @gfx_v9_0_ring_emit_reg_wait, ptr @gfx_v9_0_ring_emit_reg_write_reg_wait, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@gfx_v9_0_ring_funcs_gfx = internal constant { %struct.amdgpu_ring_funcs, [32 x i8] } { %struct.amdgpu_ring_funcs { i32 0, i32 255, i32 -61440, i8 1, i8 0, i32 0, i32 0, ptr @gfx_v9_0_ring_get_rptr_gfx, ptr @gfx_v9_0_ring_get_wptr_gfx, ptr @gfx_v9_0_ring_set_wptr_gfx, ptr null, ptr null, i32 191, i32 4, ptr @gfx_v9_0_ring_emit_ib_gfx, ptr @gfx_v9_0_ring_emit_fence, ptr @gfx_v9_0_ring_emit_pipeline_sync, ptr @gfx_v9_0_ring_emit_vm_flush, ptr @gfx_v9_0_ring_emit_hdp_flush, ptr @gfx_v9_0_ring_emit_gds_switch, ptr @gfx_v9_0_ring_test_ring, ptr @gfx_v9_0_ring_test_ib, ptr @amdgpu_ring_insert_nop, ptr null, ptr null, ptr @amdgpu_ring_generic_pad_ib, ptr @gfx_v9_0_ring_emit_init_cond_exec, ptr @gfx_v9_0_ring_emit_patch_cond_exec, ptr null, ptr null, ptr @gfx_v9_ring_emit_sb, ptr @gfx_v9_ring_emit_cntxcntl, ptr null, ptr @gfx_v9_0_ring_emit_wreg, ptr @gfx_v9_0_ring_emit_reg_wait, ptr @gfx_v9_0_ring_emit_reg_write_reg_wait, ptr @gfx_v9_0_ring_emit_frame_cntl, ptr @gfx_v9_0_ring_soft_recovery, ptr null, ptr @gfx_v9_0_emit_mem_sync, ptr null }, [32 x i8] zeroinitializer }, align 32
@gfx_v9_0_ring_funcs_compute = internal constant { %struct.amdgpu_ring_funcs, [32 x i8] } { %struct.amdgpu_ring_funcs { i32 1, i32 255, i32 -61440, i8 1, i8 0, i32 0, i32 0, ptr @gfx_v9_0_ring_get_rptr_compute, ptr @gfx_v9_0_ring_get_wptr_compute, ptr @gfx_v9_0_ring_set_wptr_compute, ptr null, ptr null, i32 143, i32 7, ptr @gfx_v9_0_ring_emit_ib_compute, ptr @gfx_v9_0_ring_emit_fence, ptr @gfx_v9_0_ring_emit_pipeline_sync, ptr @gfx_v9_0_ring_emit_vm_flush, ptr @gfx_v9_0_ring_emit_hdp_flush, ptr @gfx_v9_0_ring_emit_gds_switch, ptr @gfx_v9_0_ring_test_ring, ptr @gfx_v9_0_ring_test_ib, ptr @amdgpu_ring_insert_nop, ptr null, ptr null, ptr @amdgpu_ring_generic_pad_ib, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @gfx_v9_0_ring_emit_wreg, ptr @gfx_v9_0_ring_emit_reg_wait, ptr @gfx_v9_0_ring_emit_reg_write_reg_wait, ptr null, ptr null, ptr null, ptr @gfx_v9_0_emit_mem_sync, ptr @gfx_v9_0_emit_wave_limit }, [32 x i8] zeroinitializer }, align 32
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@.str.2 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"invalid pipe %d\0A\00", [47 x i8] zeroinitializer }, align 32
@gfx_v9_0_eop_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v9_0_set_eop_interrupt_state, ptr @gfx_v9_0_eop_irq }, [24 x i8] zeroinitializer }, align 32
@gfx_v9_0_priv_reg_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v9_0_set_priv_reg_fault_state, ptr @gfx_v9_0_priv_reg_irq }, [24 x i8] zeroinitializer }, align 32
@gfx_v9_0_priv_inst_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v9_0_set_priv_inst_fault_state, ptr @gfx_v9_0_priv_inst_irq }, [24 x i8] zeroinitializer }, align 32
@gfx_v9_0_cp_ecc_error_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @gfx_v9_0_set_cp_ecc_error_state, ptr @amdgpu_gfx_cp_ecc_error_irq }, [24 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"invalid me %d\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"IH: CP EOP\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Illegal register access in command stream\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Illegal instruction in command stream\0A\00", [57 x i8] zeroinitializer }, align 32
@gfx_v9_0_rlc_funcs = internal constant { %struct.amdgpu_rlc_funcs, [36 x i8] } { %struct.amdgpu_rlc_funcs { ptr @gfx_v9_0_is_rlc_enabled, ptr @gfx_v9_0_set_safe_mode, ptr @gfx_v9_0_unset_safe_mode, ptr @gfx_v9_0_rlc_init, ptr @gfx_v9_0_get_csb_size, ptr @gfx_v9_0_get_csb_buffer, ptr @gfx_v9_0_cp_jump_table_num, ptr @gfx_v9_0_rlc_resume, ptr @gfx_v9_0_rlc_stop, ptr @gfx_v9_0_rlc_reset, ptr @gfx_v9_0_rlc_start, ptr @gfx_v9_0_update_spm_vmid, ptr @gfx_v9_0_sriov_wreg, ptr @gfx_v9_0_sriov_rreg, ptr @gfx_v9_0_is_rlcg_access_range }, [36 x i8] zeroinitializer }, align 32
@gfx9_cs_data = internal constant { [2 x %struct.cs_section_def], [16 x i8] } { [2 x %struct.cs_section_def] [%struct.cs_section_def { ptr @gfx9_SECT_CONTEXT_defs, i32 1 }, %struct.cs_section_def zeroinitializer], [16 x i8] zeroinitializer }, align 32
@gfx9_SECT_CONTEXT_defs = internal constant { [9 x %struct.cs_extent_def], [52 x i8] } { [9 x %struct.cs_extent_def] [%struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_1, i32 40960, i32 212 }, %struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_2, i32 41174, i32 282 }, %struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_3, i32 41461, i32 4 }, %struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_4, i32 41472, i32 157 }, %struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_5, i32 41632, i32 2 }, %struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_6, i32 41635, i32 1 }, %struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_7, i32 41637, i32 66 }, %struct.cs_extent_def { ptr @gfx9_SECT_CONTEXT_def_8, i32 41717, i32 155 }, %struct.cs_extent_def zeroinitializer], [52 x i8] zeroinitializer }, align 32
@gfx9_SECT_CONTEXT_def_1 = internal constant { [212 x i32], [208 x i8] } { [212 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1073758208, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -2147483648, i32 1073758208, i32 65535, i32 0, i32 1073758208, i32 0, i32 1073758208, i32 0, i32 1073758208, i32 0, i32 1073758208, i32 -1432769878, i32 0, i32 -1, i32 -1, i32 -2147483648, i32 1073758208, i32 0, i32 0, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 -2147483648, i32 1073758208, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216, i32 0, i32 1065353216], [208 x i8] zeroinitializer }, align 32
@gfx9_SECT_CONTEXT_def_3 = internal constant { [4 x i32], [16 x i8] } zeroinitializer, align 32
@gfx9_SECT_CONTEXT_def_4 = internal constant { [157 x i32], [140 x i8] } { [157 x i32] [i32 0, i32 0, i32 0, i32 0, i32 589824, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 256, i32 128, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0], [140 x i8] zeroinitializer }, align 32
@gfx9_SECT_CONTEXT_def_5 = internal constant { [2 x i32], [24 x i8] } zeroinitializer, align 32
@gfx9_SECT_CONTEXT_def_6 = internal constant { [1 x i32], [28 x i8] } zeroinitializer, align 32
@gfx9_SECT_CONTEXT_def_7 = internal constant { [66 x i32], [88 x i8] } zeroinitializer, align 32
@gfx9_SECT_CONTEXT_def_2 = internal constant { <{ [225 x i32], [57 x i32] }>, [280 x i8] } { <{ [225 x i32], [57 x i32] }> <{ [225 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16777216, i32 16777216, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2], [57 x i32] zeroinitializer }>, [280 x i8] zeroinitializer }, align 32
@gfx9_SECT_CONTEXT_def_8 = internal constant { <{ [35 x i32], [120 x i32] }>, [148 x i8] } { <{ [35 x i32], [120 x i32] }> <{ [35 x i32] [i32 0, i32 0, i32 4096, i32 0, i32 5, i32 1065353216, i32 1065353216, i32 1065353216, i32 1065353216, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 30, i32 32], [120 x i32] zeroinitializer }>, [148 x i8] zeroinitializer }, align 32
@amdgpu_lbpw = external dso_local local_unnamed_addr global i32, align 4
@GFX_RLC_SRM_INDEX_CNTL_ADDR_OFFSETS = internal constant { [8 x i32], [32 x i8] } { [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], [32 x i8] zeroinitializer }, align 32
@GFX_RLC_SRM_INDEX_CNTL_DATA_OFFSETS = internal constant { [8 x i32], [32 x i8] } { [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], [32 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\00", [58 x i8] zeroinitializer }, align 32
@gfx_v9_0_wait_for_rlc_serdes._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.11, ptr @.str.9, i32 2752, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016[drm] Timeout wait for RLC serdes %u,%u\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"gfx_v9_0_wait_for_rlc_serdes\00", [35 x i8] zeroinitializer }, align 32
@gfx_v9_0_wait_for_rlc_serdes._entry_ptr = internal global ptr @gfx_v9_0_wait_for_rlc_serdes._entry, section ".printk_index", align 4
@gfx_v9_0_rlcg_rw.scratch_reg0 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v9_0_rlcg_rw.scratch_reg1 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v9_0_rlcg_rw.scratch_reg2 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v9_0_rlcg_rw.scratch_reg3 = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v9_0_rlcg_rw.spare_int = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@gfx_v9_0_rlcg_rw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.13, ptr @.str.9, i32 801, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013amdgpu: The vfgate is disabled, program reg:0x%05x failed!\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"gfx_v9_0_rlcg_rw\00", [47 x i8] zeroinitializer }, align 32
@gfx_v9_0_rlcg_rw._entry_ptr = internal global ptr @gfx_v9_0_rlcg_rw._entry, section ".printk_index", align 4
@gfx_v9_0_rlcg_rw._entry.14 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.13, ptr @.str.9, i32 803, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013amdgpu: Wrong operation type, program reg:0x%05x failed!\0A\00", [36 x i8] zeroinitializer }, align 32
@gfx_v9_0_rlcg_rw._entry_ptr.16 = internal global ptr @gfx_v9_0_rlcg_rw._entry.14, section ".printk_index", align 4
@gfx_v9_0_rlcg_rw._entry.17 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.13, ptr @.str.9, i32 805, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013amdgpu: The register is not in range, program reg:0x%05x failed!\0A\00", [60 x i8] zeroinitializer }, align 32
@gfx_v9_0_rlcg_rw._entry_ptr.19 = internal global ptr @gfx_v9_0_rlcg_rw._entry.17, section ".printk_index", align 4
@gfx_v9_0_rlcg_rw._entry.20 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.13, ptr @.str.9, i32 807, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013amdgpu: Unknown error type, program reg:0x%05x failed!\0A\00", [38 x i8] zeroinitializer }, align 32
@gfx_v9_0_rlcg_rw._entry_ptr.22 = internal global ptr @gfx_v9_0_rlcg_rw._entry.20, section ".printk_index", align 4
@gfx_v9_0_rlcg_rw._entry.23 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.13, ptr @.str.9, i32 809, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013amdgpu: timeout: rlcg program reg:0x%05x failed!\0A\00", [44 x i8] zeroinitializer }, align 32
@gfx_v9_0_rlcg_rw._entry_ptr.25 = internal global ptr @gfx_v9_0_rlcg_rw._entry.23, section ".printk_index", align 4
@.str.26 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"amdgpu: GDS workarounds failed to lock ring %s (%d).\0A\00", [42 x i8] zeroinitializer }, align 32
@vgpr_init_compute_shader_arcturus = internal constant { [548 x i32], [560 x i8] } { [548 x i32] [i32 -740737024, i32 402653312, i32 -740737023, i32 402653312, i32 -740737022, i32 402653312, i32 -740737021, i32 402653312, i32 -740737020, i32 402653312, i32 -740737019, i32 402653312, i32 -740737018, i32 402653312, i32 -740737017, i32 402653312, i32 -740737016, i32 402653312, i32 -740737015, i32 402653312, i32 -740737014, i32 402653312, i32 -740737013, i32 402653312, i32 -740737012, i32 402653312, i32 -740737011, i32 402653312, i32 -740737010, i32 402653312, i32 -740737009, i32 402653312, i32 -740737008, i32 402653312, i32 -740737007, i32 402653312, i32 -740737006, i32 402653312, i32 -740737005, i32 402653312, i32 -740737004, i32 402653312, i32 -740737003, i32 402653312, i32 -740737002, i32 402653312, i32 -740737001, i32 402653312, i32 -740737000, i32 402653312, i32 -740736999, i32 402653312, i32 -740736998, i32 402653312, i32 -740736997, i32 402653312, i32 -740736996, i32 402653312, i32 -740736995, i32 402653312, i32 -740736994, i32 402653312, i32 -740736993, i32 402653312, i32 -740736992, i32 402653312, i32 -740736991, i32 402653312, i32 -740736990, i32 402653312, i32 -740736989, i32 402653312, i32 -740736988, i32 402653312, i32 -740736987, i32 402653312, i32 -740736986, i32 402653312, i32 -740736985, i32 402653312, i32 -740736984, i32 402653312, i32 -740736983, i32 402653312, i32 -740736982, i32 402653312, i32 -740736981, i32 402653312, i32 -740736980, i32 402653312, i32 -740736979, i32 402653312, i32 -740736978, i32 402653312, i32 -740736977, i32 402653312, i32 -740736976, i32 402653312, i32 -740736975, i32 402653312, i32 -740736974, i32 402653312, i32 -740736973, i32 402653312, i32 -740736972, i32 402653312, i32 -740736971, i32 402653312, i32 -740736970, i32 402653312, i32 -740736969, i32 402653312, i32 -740736968, i32 402653312, i32 -740736967, i32 402653312, i32 -740736966, i32 402653312, i32 -740736965, i32 402653312, i32 -740736964, i32 402653312, i32 -740736963, i32 402653312, i32 -740736962, i32 402653312, i32 -740736961, i32 402653312, i32 -740736960, i32 402653312, i32 -740736959, i32 402653312, i32 -740736958, i32 402653312, i32 -740736957, i32 402653312, i32 -740736956, i32 402653312, i32 -740736955, i32 402653312, i32 -740736954, i32 402653312, i32 -740736953, i32 402653312, i32 -740736952, i32 402653312, i32 -740736951, i32 402653312, i32 -740736950, i32 402653312, i32 -740736949, i32 402653312, i32 -740736948, i32 402653312, i32 -740736947, i32 402653312, i32 -740736946, i32 402653312, i32 -740736945, i32 402653312, i32 -740736944, i32 402653312, i32 -740736943, i32 402653312, i32 -740736942, i32 402653312, i32 -740736941, i32 402653312, i32 -740736940, i32 402653312, i32 -740736939, i32 402653312, i32 -740736938, i32 402653312, i32 -740736937, i32 402653312, i32 -740736936, i32 402653312, i32 -740736935, i32 402653312, i32 -740736934, i32 402653312, i32 -740736933, i32 402653312, i32 -740736932, i32 402653312, i32 -740736931, i32 402653312, i32 -740736930, i32 402653312, i32 -740736929, i32 402653312, i32 -740736928, i32 402653312, i32 -740736927, i32 402653312, i32 -740736926, i32 402653312, i32 -740736925, i32 402653312, i32 -740736924, i32 402653312, i32 -740736923, i32 402653312, i32 -740736922, i32 402653312, i32 -740736921, i32 402653312, i32 -740736920, i32 402653312, i32 -740736919, i32 402653312, i32 -740736918, i32 402653312, i32 -740736917, i32 402653312, i32 -740736916, i32 402653312, i32 -740736915, i32 402653312, i32 -740736914, i32 402653312, i32 -740736913, i32 402653312, i32 -740736912, i32 402653312, i32 -740736911, i32 402653312, i32 -740736910, i32 402653312, i32 -740736909, i32 402653312, i32 -740736908, i32 402653312, i32 -740736907, i32 402653312, i32 -740736906, i32 402653312, i32 -740736905, i32 402653312, i32 -740736904, i32 402653312, i32 -740736903, i32 402653312, i32 -740736902, i32 402653312, i32 -740736901, i32 402653312, i32 -740736900, i32 402653312, i32 -740736899, i32 402653312, i32 -740736898, i32 402653312, i32 -740736897, i32 402653312, i32 -740736896, i32 402653312, i32 -740736895, i32 402653312, i32 -740736894, i32 402653312, i32 -740736893, i32 402653312, i32 -740736892, i32 402653312, i32 -740736891, i32 402653312, i32 -740736890, i32 402653312, i32 -740736889, i32 402653312, i32 -740736888, i32 402653312, i32 -740736887, i32 402653312, i32 -740736886, i32 402653312, i32 -740736885, i32 402653312, i32 -740736884, i32 402653312, i32 -740736883, i32 402653312, i32 -740736882, i32 402653312, i32 -740736881, i32 402653312, i32 -740736880, i32 402653312, i32 -740736879, i32 402653312, i32 -740736878, i32 402653312, i32 -740736877, i32 402653312, i32 -740736876, i32 402653312, i32 -740736875, i32 402653312, i32 -740736874, i32 402653312, i32 -740736873, i32 402653312, i32 -740736872, i32 402653312, i32 -740736871, i32 402653312, i32 -740736870, i32 402653312, i32 -740736869, i32 402653312, i32 -740736868, i32 402653312, i32 -740736867, i32 402653312, i32 -740736866, i32 402653312, i32 -740736865, i32 402653312, i32 -740736864, i32 402653312, i32 -740736863, i32 402653312, i32 -740736862, i32 402653312, i32 -740736861, i32 402653312, i32 -740736860, i32 402653312, i32 -740736859, i32 402653312, i32 -740736858, i32 402653312, i32 -740736857, i32 402653312, i32 -740736856, i32 402653312, i32 -740736855, i32 402653312, i32 -740736854, i32 402653312, i32 -740736853, i32 402653312, i32 -740736852, i32 402653312, i32 -740736851, i32 402653312, i32 -740736850, i32 402653312, i32 -740736849, i32 402653312, i32 -740736848, i32 402653312, i32 -740736847, i32 402653312, i32 -740736846, i32 402653312, i32 -740736845, i32 402653312, i32 -740736844, i32 402653312, i32 -740736843, i32 402653312, i32 -740736842, i32 402653312, i32 -740736841, i32 402653312, i32 -740736840, i32 402653312, i32 -740736839, i32 402653312, i32 -740736838, i32 402653312, i32 -740736837, i32 402653312, i32 -740736836, i32 402653312, i32 -740736835, i32 402653312, i32 -740736834, i32 402653312, i32 -740736833, i32 402653312, i32 -740736832, i32 402653312, i32 -740736831, i32 402653312, i32 -740736830, i32 402653312, i32 -740736829, i32 402653312, i32 -740736828, i32 402653312, i32 -740736827, i32 402653312, i32 -740736826, i32 402653312, i32 -740736825, i32 402653312, i32 -740736824, i32 402653312, i32 -740736823, i32 402653312, i32 -740736822, i32 402653312, i32 -740736821, i32 402653312, i32 -740736820, i32 402653312, i32 -740736819, i32 402653312, i32 -740736818, i32 402653312, i32 -740736817, i32 402653312, i32 -740736816, i32 402653312, i32 -740736815, i32 402653312, i32 -740736814, i32 402653312, i32 -740736813, i32 402653312, i32 -740736812, i32 402653312, i32 -740736811, i32 402653312, i32 -740736810, i32 402653312, i32 -740736809, i32 402653312, i32 -740736808, i32 402653312, i32 -740736807, i32 402653312, i32 -740736806, i32 402653312, i32 -740736805, i32 402653312, i32 -740736804, i32 402653312, i32 -740736803, i32 402653312, i32 -740736802, i32 402653312, i32 -740736801, i32 402653312, i32 -740736800, i32 402653312, i32 -740736799, i32 402653312, i32 -740736798, i32 402653312, i32 -740736797, i32 402653312, i32 -740736796, i32 402653312, i32 -740736795, i32 402653312, i32 -740736794, i32 402653312, i32 -740736793, i32 402653312, i32 -740736792, i32 402653312, i32 -740736791, i32 402653312, i32 -740736790, i32 402653312, i32 -740736789, i32 402653312, i32 -740736788, i32 402653312, i32 -740736787, i32 402653312, i32 -740736786, i32 402653312, i32 -740736785, i32 402653312, i32 -740736784, i32 402653312, i32 -740736783, i32 402653312, i32 -740736782, i32 402653312, i32 -740736781, i32 402653312, i32 -740736780, i32 402653312, i32 -740736779, i32 402653312, i32 -740736778, i32 402653312, i32 -740736777, i32 402653312, i32 -740736776, i32 402653312, i32 -740736775, i32 402653312, i32 -740736774, i32 402653312, i32 -740736773, i32 402653312, i32 -740736772, i32 402653312, i32 -740736771, i32 402653312, i32 -740736770, i32 402653312, i32 -740736769, i32 402653312, i32 -1334050816, i32 -1098252033, i32 248, i32 -1089402870, i32 2113929856, i32 2114060928, i32 2114192000, i32 2114323072, i32 2114454144, i32 2114585216, i32 2114716288, i32 2114847360, i32 -2138404854, i32 -1098894838, i32 -1081802763, i32 -1080295424, i32 -762576895, i32 65663, i32 -762511359, i32 131710, i32 268567176, i32 -1198847740, i32 -1215610880, i32 -786863615, i32 5889, i32 -1098252153, i32 -1090780991, i32 -660848640, i32 131585, i32 -660815744, i32 263169, i32 838992639, i32 2048, i32 -2138406646, i32 -1081802760, i32 -1082064896], [560 x i8] zeroinitializer }, align 32
@vgpr_init_regs_arcturus = internal constant { [14 x %struct.soc15_reg_entry], [120 x i8] } { [14 x %struct.soc15_reg_entry] [%struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3605, i32 0, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3591, i32 64, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3592, i32 4, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3593, i32 1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3602, i32 191, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3603, i32 4194304, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3606, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3607, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3609, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3610, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3621, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3622, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3623, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3624, i32 -1, i32 0, i32 0 }], [120 x i8] zeroinitializer }, align 32
@vgpr_init_compute_shader = internal constant { [38 x i32], [40 x i8] } { [38 x i32] [i32 -1334050816, i32 -1098907393, i32 248, i32 -1089402880, i32 2113929856, i32 2114060928, i32 2114192000, i32 2114323072, i32 2114454144, i32 2114585216, i32 2114716288, i32 2114847360, i32 -2139060224, i32 -1098894848, i32 -1081802763, i32 -1080295424, i32 -762576895, i32 65663, i32 -762511359, i32 131710, i32 268567176, i32 -1199503100, i32 -1216266240, i32 -786863615, i32 769, i32 -1098907513, i32 -1090780991, i32 -660848640, i32 131585, i32 -660815744, i32 263169, i32 838992639, i32 2048, i32 -2139062016, i32 -1081802760, i32 2114060928, i32 -1082064896, i32 0], [40 x i8] zeroinitializer }, align 32
@vgpr_init_regs = internal constant { [14 x %struct.soc15_reg_entry], [120 x i8] } { [14 x %struct.soc15_reg_entry] [%struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3605, i32 0, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3591, i32 64, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3592, i32 4, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3593, i32 1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3602, i32 63, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3603, i32 4194304, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3606, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3607, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3609, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3610, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3621, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3622, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3623, i32 -1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3624, i32 -1, i32 0, i32 0 }], [120 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: failed to get ib (%d).\0A\00", [32 x i8] zeroinitializer }, align 32
@sgpr1_init_regs = internal constant { [14 x %struct.soc15_reg_entry], [120 x i8] } { [14 x %struct.soc15_reg_entry] [%struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3605, i32 0, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3591, i32 64, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3592, i32 8, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3593, i32 1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3602, i32 576, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3603, i32 0, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3606, i32 255, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3607, i32 255, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3609, i32 255, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3610, i32 255, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3621, i32 255, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3622, i32 255, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3623, i32 255, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3624, i32 255, i32 0, i32 0 }], [120 x i8] zeroinitializer }, align 32
@sgpr2_init_regs = internal constant { [14 x %struct.soc15_reg_entry], [120 x i8] } { [14 x %struct.soc15_reg_entry] [%struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3605, i32 0, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3591, i32 64, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3592, i32 8, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3593, i32 1, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3602, i32 576, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3603, i32 0, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3606, i32 65280, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3607, i32 65280, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3609, i32 65280, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3610, i32 65280, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3621, i32 65280, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3622, i32 65280, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3623, i32 65280, i32 0, i32 0 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3624, i32 65280, i32 0, i32 0 }], [120 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: ib submit failed (%d).\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"amdgpu: fence wait failed (%d).\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Failed to load gfx firmware!\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to init rlc BOs!\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to init MEC BOs!\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"gfx_%d\00", [25 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Failed to init KIQ BOs!\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vega10\00", [25 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vega12\00", [25 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vega20\00", [25 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"raven2\00", [25 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"picasso\00", [24 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"raven\00", [26 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"arcturus\00", [23 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"renoir\00", [25 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"green_sardine\00", [18 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"aldebaran\00", [22 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu/%s_pfp.bin\00", [46 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"amdgpu/%s_me.bin\00", [47 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"amdgpu/%s_ce.bin\00", [47 x i8] zeroinitializer }, align 32
@gfx_v9_0_init_cp_gfx_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.50, ptr @.str.51, ptr @.str.9, i32 1480, ptr @.str.52, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"amdgpu: gfx9: Failed to load firmware \22%s\22\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"gfx_v9_0_init_cp_gfx_microcode\00", [33 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@gfx_v9_0_init_cp_gfx_microcode._entry_ptr = internal global ptr @gfx_v9_0_init_cp_gfx_microcode._entry, section ".printk_index", align 4
@.str.54 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"amdgpu/%s_rlc_am4.bin\00", [42 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"amdgpu/%s_kicker_rlc.bin\00", [39 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu/%s_rlc.bin\00", [46 x i8] zeroinitializer }, align 32
@gfx_v9_0_init_rlc_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.50, ptr @.str.57, ptr @.str.9, i32 1615, ptr @.str.52, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"gfx_v9_0_init_rlc_microcode\00", [36 x i8] zeroinitializer }, align 32
@gfx_v9_0_init_rlc_microcode._entry_ptr = internal global ptr @gfx_v9_0_init_rlc_microcode._entry, section ".printk_index", align 4
@.str.58 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu/%s_mec.bin\00", [46 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"amdgpu/%s_mec2.bin\00", [45 x i8] zeroinitializer }, align 32
@gfx_v9_0_init_cp_compute_microcode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.50, ptr @.str.60, ptr @.str.9, i32 1718, ptr @.str.52, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"gfx_v9_0_init_cp_compute_microcode\00", [61 x i8] zeroinitializer }, align 32
@gfx_v9_0_init_cp_compute_microcode._entry_ptr = internal global ptr @gfx_v9_0_init_cp_compute_microcode._entry, section ".printk_index", align 4
@gfx_v9_0_check_fw_write_wait.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@gfx_v9_0_check_fw_write_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.62, ptr @.str.9, i32 1267, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014[drm] CP firmware version too old, please update!\00", [44 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"gfx_v9_0_check_fw_write_wait\00", [35 x i8] zeroinitializer }, align 32
@gfx_v9_0_check_fw_write_wait._entry_ptr = internal global ptr @gfx_v9_0_check_fw_write_wait._entry, section ".printk_index", align 4
@gfx_v9_0_mec_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.9, i32 2083, ptr @.str.65, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"amdgpu: (%d) create HDP EOP bo failed\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"gfx_v9_0_mec_init\00", [46 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@gfx_v9_0_mec_init._entry_ptr = internal global ptr @gfx_v9_0_mec_init._entry, section ".printk_index", align 4
@gfx_v9_0_mec_init._entry.66 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.64, ptr @.str.9, i32 2107, ptr @.str.65, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"amdgpu: (%d) create mec firmware bo failed\0A\00", [52 x i8] zeroinitializer }, align 32
@gfx_v9_0_mec_init._entry_ptr.68 = internal global ptr @gfx_v9_0_mec_init._entry.66, section ".printk_index", align 4
@.str.69 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"comp_%d.%d.%d\00", [18 x i8] zeroinitializer }, align 32
@gfx_v9_0_gfx_funcs = internal constant { %struct.amdgpu_gfx_funcs, [32 x i8] } { %struct.amdgpu_gfx_funcs { ptr @gfx_v9_0_get_gpu_clock_counter, ptr @gfx_v9_0_select_se_sh, ptr @gfx_v9_0_read_wave_data, ptr @gfx_v9_0_read_wave_vgprs, ptr @gfx_v9_0_read_wave_sgprs, ptr @gfx_v9_0_select_me_pipe_q, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@gfx_v9_0_gpu_early_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.71, ptr @.str.9, i32 2231, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\016[drm] fix gfx.config for vega12\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"gfx_v9_0_gpu_early_init\00", [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_gpu_early_init._entry_ptr = internal global ptr @gfx_v9_0_gpu_early_init._entry, section ".printk_index", align 4
@gfx_v9_0_ras_funcs = internal constant { %struct.amdgpu_gfx_ras_funcs, [32 x i8] } { %struct.amdgpu_gfx_ras_funcs { ptr @amdgpu_gfx_ras_late_init, ptr @amdgpu_gfx_ras_fini, ptr @gfx_v9_0_ras_error_inject, ptr @gfx_v9_0_query_ras_error_count, ptr @gfx_v9_0_reset_ras_error_count, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@gfx_v9_4_ras_funcs = external dso_local constant %struct.amdgpu_gfx_ras_funcs, align 4
@gfx_v9_4_2_ras_funcs = external dso_local constant %struct.amdgpu_gfx_ras_funcs, align 4
@gfx_v9_0_kiq_read_clock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @.str.73, ptr @.str.9, i32 4244, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013amdgpu: critical bug! too many kiq readers\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"gfx_v9_0_kiq_read_clock\00", [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_kiq_read_clock._entry_ptr = internal global ptr @gfx_v9_0_kiq_read_clock._entry, section ".printk_index", align 4
@gfx_v9_0_kiq_read_clock._entry.74 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.73, ptr @.str.9, i32 4301, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013amdgpu: failed to read gpu clock\0A\00", [60 x i8] zeroinitializer }, align 32
@gfx_v9_0_kiq_read_clock._entry_ptr.76 = internal global ptr @gfx_v9_0_kiq_read_clock._entry.74, section ".printk_index", align 4
@ras_gfx_subblocks = internal constant { [112 x %struct.ras_gfx_subblock], [448 x i8] } { [112 x %struct.ras_gfx_subblock] [%struct.ras_gfx_subblock { ptr @.str.79, i32 0, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.80, i32 1, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.81, i32 2, i32 9, i32 1 }, %struct.ras_gfx_subblock { ptr @.str.82, i32 3, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.83, i32 4, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.84, i32 5, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.85, i32 6, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.86, i32 7, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.87, i32 8, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.88, i32 9, i32 9, i32 1 }, %struct.ras_gfx_subblock { ptr @.str.89, i32 10, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.90, i32 11, i32 9, i32 1 }, %struct.ras_gfx_subblock { ptr @.str.91, i32 12, i32 14, i32 12 }, %struct.ras_gfx_subblock { ptr @.str.92, i32 13, i32 14, i32 14 }, %struct.ras_gfx_subblock { ptr @.str.93, i32 14, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.94, i32 15, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.95, i32 16, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.96, i32 17, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.97, i32 18, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.98, i32 19, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.99, i32 20, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.100, i32 21, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.101, i32 22, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.102, i32 23, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.103, i32 24, i32 14, i32 4 }, %struct.ras_gfx_subblock { ptr @.str.104, i32 25, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.105, i32 26, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.106, i32 27, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.107, i32 28, i32 14, i32 2 }, %struct.ras_gfx_subblock { ptr @.str.108, i32 29, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.109, i32 30, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.110, i32 31, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.111, i32 32, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.112, i32 33, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.113, i32 34, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.114, i32 35, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.115, i32 36, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.116, i32 37, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.117, i32 38, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.118, i32 39, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.119, i32 40, i32 14, i32 2 }, %struct.ras_gfx_subblock { ptr @.str.120, i32 41, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.121, i32 42, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.122, i32 43, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.123, i32 44, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.124, i32 45, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.125, i32 46, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.126, i32 47, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.127, i32 48, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.128, i32 49, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.129, i32 50, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.130, i32 51, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.131, i32 52, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.132, i32 53, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.133, i32 54, i32 9, i32 9 }, %struct.ras_gfx_subblock { ptr @.str.134, i32 55, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.135, i32 56, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.136, i32 57, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.137, i32 58, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.138, i32 59, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.139, i32 60, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.140, i32 61, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.141, i32 62, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.142, i32 63, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.143, i32 64, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.144, i32 65, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.145, i32 66, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.146, i32 67, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.147, i32 68, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.148, i32 69, i32 9, i32 9 }, %struct.ras_gfx_subblock { ptr @.str.149, i32 70, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.150, i32 71, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.151, i32 72, i32 9, i32 1 }, %struct.ras_gfx_subblock { ptr @.str.152, i32 73, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.153, i32 74, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.154, i32 75, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.155, i32 76, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.156, i32 77, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.157, i32 78, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.158, i32 79, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.159, i32 80, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.160, i32 81, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.161, i32 82, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.162, i32 83, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.163, i32 84, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.164, i32 85, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.165, i32 86, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.166, i32 87, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.167, i32 88, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.168, i32 89, i32 14, i32 6 }, %struct.ras_gfx_subblock { ptr @.str.169, i32 90, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.170, i32 91, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.171, i32 92, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.172, i32 93, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.173, i32 94, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.174, i32 95, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.175, i32 96, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.176, i32 97, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.177, i32 98, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.178, i32 99, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.179, i32 100, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.180, i32 101, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.181, i32 102, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.182, i32 103, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.183, i32 104, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.184, i32 105, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.185, i32 106, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.186, i32 107, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.187, i32 108, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.188, i32 109, i32 14, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.189, i32 110, i32 9, i32 0 }, %struct.ras_gfx_subblock { ptr @.str.190, i32 111, i32 14, i32 0 }], [448 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"GFX Subblock %s, hardware do not support type 0x%x\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"GFX Subblock %s, driver do not support type 0x%x\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_CPC_SCRATCH\00", [16 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"GFX_CPC_UCODE\00", [18 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_DC_STATE_ME1\00", [47 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_DC_CSINVOC_ME1\00", [45 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_DC_RESTORE_ME1\00", [45 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_DC_STATE_ME2\00", [47 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_DC_CSINVOC_ME2\00", [45 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_DC_RESTORE_ME2\00", [45 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_CPF_ROQ_ME2\00", [16 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_CPF_ROQ_ME1\00", [16 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GFX_CPF_TAG\00", [20 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_CPG_DMA_ROQ\00", [16 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_CPG_DMA_TAG\00", [16 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GFX_CPG_TAG\00", [20 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GFX_GDS_MEM\00", [20 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFX_GDS_INPUT_QUEUE\00", [44 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GFX_GDS_OA_PHY_CMD_RAM_MEM\00", [37 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_GDS_OA_PHY_DATA_RAM_MEM\00", [36 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFX_GDS_OA_PIPE_MEM\00", [44 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"GFX_SPI_SR_MEM\00", [17 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GFX_SQ_SGPR\00", [20 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"GFX_SQ_LDS_D\00", [19 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"GFX_SQ_LDS_I\00", [19 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GFX_SQ_VGPR\00", [20 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"GFX_SQC_INST_UTCL1_LFIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"GFX_SQC_DATA_CU0_WRITE_DATA_BUF\00", [32 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_SQC_DATA_CU0_UTCL1_LFIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"GFX_SQC_DATA_CU1_WRITE_DATA_BUF\00", [32 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_SQC_DATA_CU1_UTCL1_LFIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"GFX_SQC_DATA_CU2_WRITE_DATA_BUF\00", [32 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_SQC_DATA_CU2_UTCL1_LFIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GFX_SQC_INST_BANKA_TAG_RAM\00", [37 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"GFX_SQC_INST_BANKA_UTCL1_MISS_FIFO\00", [61 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_SQC_INST_BANKA_MISS_FIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_SQC_INST_BANKA_BANK_RAM\00", [36 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GFX_SQC_DATA_BANKA_TAG_RAM\00", [37 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_SQC_DATA_BANKA_HIT_FIFO\00", [36 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_SQC_DATA_BANKA_MISS_FIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"GFX_SQC_DATA_BANKA_DIRTY_BIT_RAM\00", [63 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_SQC_DATA_BANKA_BANK_RAM\00", [36 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GFX_SQC_INST_BANKB_TAG_RAM\00", [37 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"GFX_SQC_INST_BANKB_UTCL1_MISS_FIFO\00", [61 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_SQC_INST_BANKB_MISS_FIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_SQC_INST_BANKB_BANK_RAM\00", [36 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GFX_SQC_DATA_BANKB_TAG_RAM\00", [37 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_SQC_DATA_BANKB_HIT_FIFO\00", [36 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_SQC_DATA_BANKB_MISS_FIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"GFX_SQC_DATA_BANKB_DIRTY_BIT_RAM\00", [63 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_SQC_DATA_BANKB_BANK_RAM\00", [36 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_TA_FS_DFIFO\00", [16 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_TA_FS_AFIFO\00", [16 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_TA_FL_LFIFO\00", [16 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_TA_FX_LFIFO\00", [16 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_TA_FS_CFIFO\00", [16 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"GFX_TCA_HOLE_FIFO\00", [46 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_TCA_REQ_FIFO\00", [47 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_TCC_CACHE_DATA\00", [45 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_TCC_CACHE_DATA_BANK_0_1\00", [36 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_TCC_CACHE_DATA_BANK_1_0\00", [36 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GFX_TCC_CACHE_DATA_BANK_1_1\00", [36 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GFX_TCC_CACHE_DIRTY_BANK_0\00", [37 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GFX_TCC_CACHE_DIRTY_BANK_1\00", [37 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"GFX_TCC_HIGH_RATE_TAG\00", [42 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_TCC_LOW_RATE_TAG\00", [43 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_TCC_IN_USE_DEC\00", [45 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"GFX_TCC_IN_USE_TRANSFER\00", [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFX_TCC_RETURN_DATA\00", [44 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"GFX_TCC_RETURN_CONTROL\00", [41 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"GFX_TCC_UC_ATOMIC_FIFO\00", [41 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_TCC_WRITE_RETURN\00", [43 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"GFX_TCC_WRITE_CACHE_READ\00", [39 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_TCC_SRC_FIFO\00", [47 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"GFX_TCC_SRC_FIFO_NEXT_RAM\00", [38 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_TCC_CACHE_TAG_PROBE_FIFO\00", [35 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_TCC_LATENCY_FIFO\00", [43 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"GFX_TCC_LATENCY_FIFO_NEXT_RAM\00", [34 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"GFX_TCC_WRRET_TAG_WRITE_RETURN\00", [33 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"GFX_TCC_ATOMIC_RETURN_BUFFER\00", [35 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"GFX_TCI_WRITE_RAM\00", [46 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"GFX_TCP_CACHE_RAM\00", [46 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"GFX_TCP_LFIFO_RAM\00", [46 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_TCP_CMD_FIFO\00", [47 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GFX_TCP_VM_FIFO\00", [16 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"GFX_TCP_DB_RAM\00", [17 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_TCP_UTCL1_LFIFO0\00", [43 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_TCP_UTCL1_LFIFO1\00", [43 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"GFX_TD_SS_FIFO_LO\00", [46 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"GFX_TD_SS_FIFO_HI\00", [46 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"GFX_TD_CS_FIFO\00", [17 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_EA_DRAMRD_CMDMEM\00", [43 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_EA_DRAMWR_CMDMEM\00", [43 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"GFX_EA_DRAMWR_DATAMEM\00", [42 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_EA_RRET_TAGMEM\00", [45 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_EA_WRET_TAGMEM\00", [45 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFX_EA_GMIRD_CMDMEM\00", [44 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFX_EA_GMIWR_CMDMEM\00", [44 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_EA_GMIWR_DATAMEM\00", [43 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"GFX_EA_DRAMRD_PAGEMEM\00", [42 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"GFX_EA_DRAMWR_PAGEMEM\00", [42 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_EA_IORD_CMDMEM\00", [45 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"GFX_EA_IOWR_CMDMEM\00", [45 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GFX_EA_IOWR_DATAMEM\00", [44 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_EA_GMIRD_PAGEMEM\00", [43 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"GFX_EA_GMIWR_PAGEMEM\00", [43 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_EA_MAM_D0MEM\00", [47 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_EA_MAM_D1MEM\00", [47 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_EA_MAM_D2MEM\00", [47 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"GFX_EA_MAM_D3MEM\00", [47 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"UTC_VML2_BANK_CACHE\00", [44 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"UTC_VML2_WALKER\00", [16 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"UTC_ATCL2_CACHE_2M_BANK\00", [40 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"UTC_ATCL2_CACHE_4K_BANK\00", [40 x i8] zeroinitializer }, align 32
@amdgpu_ras_block_to_ta.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.191 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ras.h\00", [46 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"RAS ERROR: unexpected block id %d\0A\00", [61 x i8] zeroinitializer }, align 32
@amdgpu_ras_error_to_ta.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.193 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"RAS ERROR: unexpected error type %d\0A\00", [59 x i8] zeroinitializer }, align 32
@gfx_v9_0_edc_counter_regs = internal constant { [33 x %struct.soc15_reg_entry], [228 x i8] } { [33 x %struct.soc15_reg_entry] [%struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4494, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4495, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4490, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4489, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4493, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4491, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4498, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4499, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4497, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1477, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1478, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1479, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1093, i32 0, i32 4, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 930, i32 0, i32 4, i32 6 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 932, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 933, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 931, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 2946, i32 0, i32 1, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 4785, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 2839, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 2840, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1326, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 812, i32 0, i32 4, i32 6 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 934, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1414, i32 0, i32 4, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1483, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1484, i32 0, i32 1, i32 1 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1798, i32 0, i32 1, i32 32 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 1799, i32 0, i32 1, i32 32 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 2912, i32 0, i32 1, i32 72 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 2947, i32 0, i32 1, i32 16 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 3013, i32 0, i32 1, i32 2 }, %struct.soc15_reg_entry { i32 1, i32 0, i32 0, i32 813, i32 0, i32 4, i32 6 }], [228 x i8] zeroinitializer }, align 32
@gfx_v9_0_ras_fields = internal constant { [108 x %struct.soc15_ras_field_entry], [976 x i8] } { [108 x %struct.soc15_ras_field_entry] [%struct.soc15_ras_field_entry { ptr @.str.200, i32 1, i32 0, i32 0, i32 4494, i32 12, i32 2, i32 3, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.201, i32 1, i32 0, i32 0, i32 4495, i32 12, i32 2, i32 3, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.202, i32 1, i32 0, i32 0, i32 4490, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.203, i32 1, i32 0, i32 0, i32 4490, i32 12, i32 2, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.204, i32 1, i32 0, i32 0, i32 4489, i32 12, i32 2, i32 3, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.205, i32 1, i32 0, i32 0, i32 4493, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.206, i32 1, i32 0, i32 0, i32 4493, i32 48, i32 4, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.207, i32 1, i32 0, i32 0, i32 4491, i32 12, i32 2, i32 3, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.208, i32 1, i32 0, i32 0, i32 4498, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.209, i32 1, i32 0, i32 0, i32 4499, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.210, i32 1, i32 0, i32 0, i32 4497, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.211, i32 1, i32 0, i32 0, i32 1477, i32 48, i32 4, i32 3, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.212, i32 1, i32 0, i32 0, i32 1477, i32 12, i32 2, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.213, i32 1, i32 0, i32 0, i32 1483, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.214, i32 1, i32 0, i32 0, i32 1483, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.215, i32 1, i32 0, i32 0, i32 1483, i32 768, i32 8, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.216, i32 1, i32 0, i32 0, i32 1484, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.217, i32 1, i32 0, i32 0, i32 1484, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.218, i32 1, i32 0, i32 0, i32 1484, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.219, i32 1, i32 0, i32 0, i32 1484, i32 12288, i32 12, i32 49152, i32 14 }, %struct.soc15_ras_field_entry { ptr @.str.220, i32 1, i32 0, i32 0, i32 1093, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.221, i32 1, i32 0, i32 0, i32 1414, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.222, i32 1, i32 0, i32 0, i32 1414, i32 48, i32 4, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.223, i32 1, i32 0, i32 0, i32 1414, i32 192, i32 6, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.224, i32 1, i32 0, i32 0, i32 1414, i32 768, i32 8, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.225, i32 1, i32 0, i32 0, i32 1414, i32 3072, i32 10, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.226, i32 1, i32 0, i32 0, i32 3013, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.227, i32 1, i32 0, i32 0, i32 3013, i32 12, i32 2, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.228, i32 1, i32 0, i32 0, i32 2946, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.229, i32 1, i32 0, i32 0, i32 2946, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.230, i32 1, i32 0, i32 0, i32 2946, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.231, i32 1, i32 0, i32 0, i32 2946, i32 12288, i32 12, i32 49152, i32 14 }, %struct.soc15_ras_field_entry { ptr @.str.232, i32 1, i32 0, i32 0, i32 2946, i32 196608, i32 16, i32 786432, i32 18 }, %struct.soc15_ras_field_entry { ptr @.str.233, i32 1, i32 0, i32 0, i32 2946, i32 3145728, i32 20, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.234, i32 1, i32 0, i32 0, i32 2946, i32 12582912, i32 22, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.235, i32 1, i32 0, i32 0, i32 2946, i32 50331648, i32 24, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.236, i32 1, i32 0, i32 0, i32 2946, i32 201326592, i32 26, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.237, i32 1, i32 0, i32 0, i32 2946, i32 805306368, i32 28, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.238, i32 1, i32 0, i32 0, i32 2946, i32 -1073741824, i32 30, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.239, i32 1, i32 0, i32 0, i32 2947, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.240, i32 1, i32 0, i32 0, i32 2947, i32 12, i32 2, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.241, i32 1, i32 0, i32 0, i32 2947, i32 48, i32 4, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.242, i32 1, i32 0, i32 0, i32 2947, i32 192, i32 6, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.243, i32 1, i32 0, i32 0, i32 2947, i32 768, i32 8, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.244, i32 1, i32 0, i32 0, i32 2947, i32 3072, i32 10, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.245, i32 1, i32 0, i32 0, i32 2947, i32 12288, i32 12, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.246, i32 1, i32 0, i32 0, i32 2912, i32 3, i32 0, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.247, i32 1, i32 0, i32 0, i32 2840, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.248, i32 1, i32 0, i32 0, i32 2840, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.249, i32 1, i32 0, i32 0, i32 2840, i32 768, i32 8, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.250, i32 1, i32 0, i32 0, i32 2840, i32 3072, i32 10, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.251, i32 1, i32 0, i32 0, i32 2840, i32 49152, i32 14, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.252, i32 1, i32 0, i32 0, i32 2840, i32 196608, i32 16, i32 786432, i32 18 }, %struct.soc15_ras_field_entry { ptr @.str.253, i32 1, i32 0, i32 0, i32 2840, i32 3145728, i32 20, i32 12582912, i32 22 }, %struct.soc15_ras_field_entry { ptr @.str.254, i32 1, i32 0, i32 0, i32 1326, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.255, i32 1, i32 0, i32 0, i32 1326, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.256, i32 1, i32 0, i32 0, i32 1326, i32 768, i32 8, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.257, i32 1, i32 0, i32 0, i32 934, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.258, i32 1, i32 0, i32 0, i32 934, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.259, i32 1, i32 0, i32 0, i32 934, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.260, i32 1, i32 0, i32 0, i32 934, i32 12288, i32 12, i32 49152, i32 14 }, %struct.soc15_ras_field_entry { ptr @.str.261, i32 1, i32 0, i32 0, i32 934, i32 196608, i32 16, i32 786432, i32 18 }, %struct.soc15_ras_field_entry { ptr @.str.262, i32 1, i32 0, i32 0, i32 934, i32 3145728, i32 20, i32 12582912, i32 22 }, %struct.soc15_ras_field_entry { ptr @.str.263, i32 1, i32 0, i32 0, i32 934, i32 50331648, i32 24, i32 201326592, i32 26 }, %struct.soc15_ras_field_entry { ptr @.str.264, i32 1, i32 0, i32 0, i32 930, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.265, i32 1, i32 0, i32 0, i32 930, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.266, i32 1, i32 0, i32 0, i32 930, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.267, i32 1, i32 0, i32 0, i32 930, i32 12288, i32 12, i32 49152, i32 14 }, %struct.soc15_ras_field_entry { ptr @.str.268, i32 1, i32 0, i32 0, i32 930, i32 196608, i32 16, i32 786432, i32 18 }, %struct.soc15_ras_field_entry { ptr @.str.269, i32 1, i32 0, i32 0, i32 930, i32 3145728, i32 20, i32 12582912, i32 22 }, %struct.soc15_ras_field_entry { ptr @.str.270, i32 1, i32 0, i32 0, i32 812, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.271, i32 1, i32 0, i32 0, i32 812, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.272, i32 1, i32 0, i32 0, i32 812, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.273, i32 1, i32 0, i32 0, i32 812, i32 12288, i32 12, i32 49152, i32 14 }, %struct.soc15_ras_field_entry { ptr @.str.274, i32 1, i32 0, i32 0, i32 812, i32 196608, i32 16, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.275, i32 1, i32 0, i32 0, i32 812, i32 786432, i32 18, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.276, i32 1, i32 0, i32 0, i32 812, i32 3145728, i32 20, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.277, i32 1, i32 0, i32 0, i32 812, i32 12582912, i32 22, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.278, i32 1, i32 0, i32 0, i32 812, i32 50331648, i32 24, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.279, i32 1, i32 0, i32 0, i32 812, i32 201326592, i32 26, i32 805306368, i32 28 }, %struct.soc15_ras_field_entry { ptr @.str.280, i32 1, i32 0, i32 0, i32 813, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.281, i32 1, i32 0, i32 0, i32 813, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.282, i32 1, i32 0, i32 0, i32 813, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.283, i32 1, i32 0, i32 0, i32 813, i32 12288, i32 12, i32 49152, i32 14 }, %struct.soc15_ras_field_entry { ptr @.str.284, i32 1, i32 0, i32 0, i32 813, i32 196608, i32 16, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.285, i32 1, i32 0, i32 0, i32 813, i32 786432, i32 18, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.286, i32 1, i32 0, i32 0, i32 813, i32 3145728, i32 20, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.287, i32 1, i32 0, i32 0, i32 813, i32 12582912, i32 22, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.288, i32 1, i32 0, i32 0, i32 813, i32 50331648, i32 24, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.289, i32 1, i32 0, i32 0, i32 1798, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.290, i32 1, i32 0, i32 0, i32 1798, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.291, i32 1, i32 0, i32 0, i32 1798, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.292, i32 1, i32 0, i32 0, i32 1798, i32 12288, i32 12, i32 49152, i32 14 }, %struct.soc15_ras_field_entry { ptr @.str.293, i32 1, i32 0, i32 0, i32 1798, i32 196608, i32 16, i32 786432, i32 18 }, %struct.soc15_ras_field_entry { ptr @.str.294, i32 1, i32 0, i32 0, i32 1798, i32 3145728, i32 20, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.295, i32 1, i32 0, i32 0, i32 1798, i32 12582912, i32 22, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.296, i32 1, i32 0, i32 0, i32 1798, i32 50331648, i32 24, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.297, i32 1, i32 0, i32 0, i32 1798, i32 201326592, i32 26, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.298, i32 1, i32 0, i32 0, i32 1798, i32 805306368, i32 28, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.299, i32 1, i32 0, i32 0, i32 1799, i32 3, i32 0, i32 12, i32 2 }, %struct.soc15_ras_field_entry { ptr @.str.300, i32 1, i32 0, i32 0, i32 1799, i32 48, i32 4, i32 192, i32 6 }, %struct.soc15_ras_field_entry { ptr @.str.301, i32 1, i32 0, i32 0, i32 1799, i32 768, i32 8, i32 3072, i32 10 }, %struct.soc15_ras_field_entry { ptr @.str.302, i32 1, i32 0, i32 0, i32 1799, i32 12288, i32 12, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.303, i32 1, i32 0, i32 0, i32 1799, i32 49152, i32 14, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.304, i32 1, i32 0, i32 0, i32 1799, i32 196608, i32 16, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.305, i32 1, i32 0, i32 0, i32 1799, i32 786432, i32 18, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.306, i32 1, i32 0, i32 0, i32 1799, i32 3145728, i32 20, i32 0, i32 0 }, %struct.soc15_ras_field_entry { ptr @.str.307, i32 1, i32 0, i32 0, i32 1799, i32 12582912, i32 22, i32 0, i32 0 }], [976 x i8] zeroinitializer }, align 32
@gfx_v9_0_ras_error_count._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.194, ptr @.str.195, ptr @.str.9, i32 6747, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"amdgpu: GFX SubBlock %s, Instance[%d][%d], SEC %d\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"gfx_v9_0_ras_error_count\00", [39 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@gfx_v9_0_ras_error_count._entry_ptr = internal global ptr @gfx_v9_0_ras_error_count._entry, section ".printk_index", align 4
@gfx_v9_0_ras_error_count._entry.197 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.195, ptr @.str.9, i32 6759, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"amdgpu: GFX SubBlock %s, Instance[%d][%d], DED %d\0A\00", [45 x i8] zeroinitializer }, align 32
@gfx_v9_0_ras_error_count._entry_ptr.199 = internal global ptr @gfx_v9_0_ras_error_count._entry.197, section ".printk_index", align 4
@.str.200 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"CPC_SCRATCH\00", [20 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CPC_UCODE\00", [22 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"CPF_ROQ_ME1\00", [20 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"CPF_ROQ_ME2\00", [20 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CPF_TAG\00", [24 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"CPG_DMA_ROQ\00", [20 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"CPG_DMA_TAG\00", [20 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CPG_TAG\00", [24 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"DC_CSINVOC\00", [21 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"DC_RESTORE\00", [21 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"DC_STATE\00", [23 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"GDS_MEM\00", [24 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"GDS_INPUT_QUEUE\00", [16 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"GDS_ME0_CS_PIPE_MEM\00", [44 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"GDS_OA_PHY_PHY_CMD_RAM_MEM\00", [37 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"GDS_OA_PHY_PHY_DATA_RAM_MEM\00", [36 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"GDS_OA_PIPE_ME1_PIPE0_PIPE_MEM\00", [33 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"GDS_OA_PIPE_ME1_PIPE1_PIPE_MEM\00", [33 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"GDS_OA_PIPE_ME1_PIPE2_PIPE_MEM\00", [33 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"GDS_OA_PIPE_ME1_PIPE3_PIPE_MEM\00", [33 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SPI_SR_MEM\00", [21 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TA_FS_DFIFO\00", [20 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TA_FS_AFIFO\00", [20 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TA_FL_LFIFO\00", [20 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TA_FX_LFIFO\00", [20 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TA_FS_CFIFO\00", [20 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCA_HOLE_FIFO\00", [18 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCA_REQ_FIFO\00", [19 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"TCC_CACHE_DATA\00", [17 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"TCC_CACHE_DIRTY\00", [16 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"TCC_HIGH_RATE_TAG\00", [46 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"TCC_LOW_RATE_TAG\00", [47 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCC_SRC_FIFO\00", [19 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"TCC_IN_USE_DEC\00", [17 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"TCC_IN_USE_TRANSFER\00", [44 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"TCC_LATENCY_FIFO\00", [47 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"TCC_RETURN_DATA\00", [16 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"TCC_RETURN_CONTROL\00", [45 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"TCC_UC_ATOMIC_FIFO\00", [45 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"TCC_WRITE_RETURN\00", [47 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"TCC_WRITE_CACHE_READ\00", [43 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"TCC_SRC_FIFO_NEXT_RAM\00", [42 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"TCC_LATENCY_FIFO_NEXT_RAM\00", [38 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"TCC_CACHE_TAG_PROBE_FIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"TCC_WRRET_TAG_WRITE_RETURN\00", [37 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"TCC_ATOMIC_RETURN_BUFFER\00", [39 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCI_WRITE_RAM\00", [18 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_CACHE_RAM\00", [18 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_LFIFO_RAM\00", [18 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCP_CMD_FIFO\00", [19 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TCP_VM_FIFO\00", [20 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"TCP_DB_RAM\00", [21 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"TCP_UTCL1_LFIFO0\00", [47 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"TCP_UTCL1_LFIFO1\00", [47 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TD_SS_FIFO_LO\00", [18 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TD_SS_FIFO_HI\00", [18 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"TD_CS_FIFO\00", [21 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SQ_LDS_D\00", [23 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SQ_LDS_I\00", [23 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SQ_SGPR\00", [24 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SQ_VGPR0\00", [23 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SQ_VGPR1\00", [23 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SQ_VGPR2\00", [23 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"SQ_VGPR3\00", [23 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"SQC_DATA_CU0_WRITE_DATA_BUF\00", [36 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SQC_DATA_CU0_UTCL1_LFIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"SQC_DATA_CU1_WRITE_DATA_BUF\00", [36 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SQC_DATA_CU1_UTCL1_LFIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"SQC_DATA_CU2_WRITE_DATA_BUF\00", [36 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SQC_DATA_CU2_UTCL1_LFIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"SQC_INST_BANKA_TAG_RAM\00", [41 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SQC_INST_BANKA_BANK_RAM\00", [40 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"SQC_DATA_BANKA_TAG_RAM\00", [41 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SQC_DATA_BANKA_BANK_RAM\00", [40 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"SQC_INST_BANKA_UTCL1_MISS_FIFO\00", [33 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SQC_INST_BANKA_MISS_FIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SQC_DATA_BANKA_HIT_FIFO\00", [40 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SQC_DATA_BANKA_MISS_FIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"SQC_DATA_BANKA_DIRTY_BIT_RAM\00", [35 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"SQC_INST_UTCL1_LFIFO\00", [43 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"SQC_INST_BANKB_TAG_RAM\00", [41 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SQC_INST_BANKB_BANK_RAM\00", [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"SQC_DATA_BANKB_TAG_RAM\00", [41 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SQC_DATA_BANKB_BANK_RAM\00", [40 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"SQC_INST_BANKB_UTCL1_MISS_FIFO\00", [33 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SQC_INST_BANKB_MISS_FIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SQC_DATA_BANKB_HIT_FIFO\00", [40 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SQC_DATA_BANKB_MISS_FIFO\00", [39 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"SQC_DATA_BANKB_DIRTY_BIT_RAM\00", [35 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"EA_DRAMRD_CMDMEM\00", [47 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"EA_DRAMWR_CMDMEM\00", [47 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"EA_DRAMWR_DATAMEM\00", [46 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"EA_RRET_TAGMEM\00", [17 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"EA_WRET_TAGMEM\00", [17 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"EA_DRAMRD_PAGEMEM\00", [46 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"EA_DRAMWR_PAGEMEM\00", [46 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"EA_IORD_CMDMEM\00", [17 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"EA_IOWR_CMDMEM\00", [17 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"EA_IOWR_DATAMEM\00", [16 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"GMIRD_CMDMEM\00", [19 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"GMIWR_CMDMEM\00", [19 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"GMIWR_DATAMEM\00", [18 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"GMIRD_PAGEMEM\00", [18 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"GMIWR_PAGEMEM\00", [18 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"MAM_D0MEM\00", [22 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"MAM_D1MEM\00", [22 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"MAM_D2MEM\00", [22 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"MAM_D3MEM\00", [22 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.309, ptr @.str.9, i32 6650, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"amdgpu: Instance[%d]: SubBlock %s, SEC %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"gfx_v9_0_query_utc_edc_status\00", [34 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry_ptr = internal global ptr @gfx_v9_0_query_utc_edc_status._entry, section ".printk_index", align 4
@vml2_mems = internal constant { [16 x ptr], [32 x i8] } { [16 x ptr] [ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @.str.337, ptr @.str.338], [32 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry.310 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.311, ptr @.str.309, ptr @.str.9, i32 6657, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"amdgpu: Instance[%d]: SubBlock %s, DED %d\0A\00", [53 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry_ptr.312 = internal global ptr @gfx_v9_0_query_utc_edc_status._entry.310, section ".printk_index", align 4
@gfx_v9_0_query_utc_edc_status._entry.313 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.309, ptr @.str.9, i32 6670, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry_ptr.314 = internal global ptr @gfx_v9_0_query_utc_edc_status._entry.313, section ".printk_index", align 4
@vml2_walker_mems = internal constant { [7 x ptr], [36 x i8] } { [7 x ptr] [ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345], [36 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry.315 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.311, ptr @.str.309, ptr @.str.9, i32 6678, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry_ptr.316 = internal global ptr @gfx_v9_0_query_utc_edc_status._entry.315, section ".printk_index", align 4
@gfx_v9_0_query_utc_edc_status._entry.317 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.309, ptr @.str.9, i32 6691, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry_ptr.318 = internal global ptr @gfx_v9_0_query_utc_edc_status._entry.317, section ".printk_index", align 4
@atc_l2_cache_2m_mems = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349], [16 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry.319 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.309, ptr @.str.9, i32 6704, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry_ptr.320 = internal global ptr @gfx_v9_0_query_utc_edc_status._entry.319, section ".printk_index", align 4
@atc_l2_cache_4k_mems = internal constant { [32 x ptr], [32 x i8] } { [32 x ptr] [ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.371, ptr @.str.372, ptr @.str.373, ptr @.str.374, ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381], [32 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry.321 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.311, ptr @.str.309, ptr @.str.9, i32 6712, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@gfx_v9_0_query_utc_edc_status._entry_ptr.322 = internal global ptr @gfx_v9_0_query_utc_edc_status._entry.321, section ".printk_index", align 4
@.str.323 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_0_BIGK_MEM0\00", [32 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_0_BIGK_MEM1\00", [32 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_0_4K_MEM0\00", [34 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_0_4K_MEM1\00", [34 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_1_BIGK_MEM0\00", [32 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_1_BIGK_MEM1\00", [32 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_1_4K_MEM0\00", [34 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_1_4K_MEM1\00", [34 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_2_BIGK_MEM0\00", [32 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_2_BIGK_MEM1\00", [32 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_2_4K_MEM0\00", [34 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_2_4K_MEM1\00", [34 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_3_BIGK_MEM0\00", [32 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"UTC_VML2_BANK_CACHE_3_BIGK_MEM1\00", [32 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_3_4K_MEM0\00", [34 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"UTC_VML2_BANK_CACHE_3_4K_MEM1\00", [34 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"UTC_VML2_CACHE_PDE0_MEM0\00", [39 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"UTC_VML2_CACHE_PDE0_MEM1\00", [39 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"UTC_VML2_CACHE_PDE1_MEM0\00", [39 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"UTC_VML2_CACHE_PDE1_MEM1\00", [39 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"UTC_VML2_CACHE_PDE2_MEM0\00", [39 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"UTC_VML2_CACHE_PDE2_MEM1\00", [39 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"UTC_VML2_RDIF_LOG_FIFO\00", [41 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"UTC_ATCL2_CACHE_2M_BANK0_WAY0_MEM\00", [62 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"UTC_ATCL2_CACHE_2M_BANK0_WAY1_MEM\00", [62 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"UTC_ATCL2_CACHE_2M_BANK1_WAY0_MEM\00", [62 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"UTC_ATCL2_CACHE_2M_BANK1_WAY1_MEM\00", [62 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM0\00", [61 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM1\00", [61 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM2\00", [61 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM3\00", [61 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM4\00", [61 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM5\00", [61 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM6\00", [61 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY0_MEM7\00", [61 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM0\00", [61 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM1\00", [61 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM2\00", [61 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM3\00", [61 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM4\00", [61 x i8] zeroinitializer }, align 32
@.str.363 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM5\00", [61 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM6\00", [61 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK0_WAY1_MEM7\00", [61 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM0\00", [61 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM1\00", [61 x i8] zeroinitializer }, align 32
@.str.368 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM2\00", [61 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM3\00", [61 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM4\00", [61 x i8] zeroinitializer }, align 32
@.str.371 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM5\00", [61 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM6\00", [61 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY0_MEM7\00", [61 x i8] zeroinitializer }, align 32
@.str.374 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM0\00", [61 x i8] zeroinitializer }, align 32
@.str.375 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM1\00", [61 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM2\00", [61 x i8] zeroinitializer }, align 32
@.str.377 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM3\00", [61 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM4\00", [61 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM5\00", [61 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM6\00", [61 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"UTC_ATCL2_CACHE_4K_BANK1_WAY1_MEM7\00", [61 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_0 = internal constant { [20 x %struct.soc15_reg_golden], [96 x i8] } { [20 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1549, i32 -267386881, i32 1024 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1550, i32 -2147483648, i32 -2147483648 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1600, i32 15, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 719, i32 3, i32 -2109734876 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 764, i32 1073741823, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 65295, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 781, i32 4096, i32 4096 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4572, i32 524287, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4573, i32 524287, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4582, i32 33554431, i32 16777095 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4583, i32 33554431, i32 16777103 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 769, i32 50331648, i32 34217984 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1346, i32 -273, i32 17498112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2820, i32 -1, i32 1244401256 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2819, i32 -1, i32 -1244401257 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 561, i32 1073691379, i32 421527552 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 617, i32 4095, i32 1023 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4285, i32 2048, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4286, i32 2048, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4223, i32 32768, i32 32768 }], [96 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_0_vg10 = internal constant { [18 x %struct.soc15_reg_golden], [112 x i8] } { [18 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1664, i32 61440, i32 73991 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1667, i32 805306368, i32 268435456 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4157, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4158, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4156, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1598, i32 -34817, i32 705773634 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1602, i32 -34817, i32 705773634 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 582, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 765, i32 32768, i32 294912 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19634, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19635, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19636, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19661, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19637, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1932, i32 196608, i32 131072 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 9281, i32 15, i32 16777479 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1317, i32 6144, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 579, i32 134217728, i32 134217856 }], [112 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_2_1 = internal constant { [16 x %struct.soc15_reg_golden], [96 x i8] } { [16 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1549, i32 -267386881, i32 1056 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1600, i32 15, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 719, i32 3, i32 -2109734876 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 764, i32 1073741823, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 65295, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 781, i32 4096, i32 4096 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4572, i32 524287, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4573, i32 524287, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4582, i32 33554431, i32 65415 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4583, i32 33554431, i32 65423 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 769, i32 50331648, i32 34217984 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1346, i32 -273, i32 17498112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2820, i32 -1, i32 1244401256 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2819, i32 -1, i32 -1244401257 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 561, i32 1073691379, i32 421527552 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 617, i32 4095, i32 1023 }], [96 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_2_1_vg12 = internal constant { [13 x %struct.soc15_reg_golden], [72 x i8] } { [13 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1672, i32 128, i32 67108992 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1664, i32 -134193, i32 82180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1666, i32 251658240, i32 167772160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1598, i32 -34817, i32 605044801 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1602, i32 -34817, i32 605044801 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 765, i32 -1, i32 67371008 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 9281, i32 -64513, i32 16777479 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2820, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2819, i32 -1, i32 1983009808 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1317, i32 29204275, i32 16777216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4285, i32 2048, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4286, i32 2048, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4223, i32 32768, i32 32768 }], [72 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_0_vg20 = internal constant { [11 x %struct.soc15_reg_golden], [88 x i8] } { [11 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1672, i32 251658368, i32 67108992 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1666, i32 251658240, i32 167772160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1667, i32 805306368, i32 268435456 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1598, i32 -202934273, i32 570507330 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1602, i32 -202934273, i32 570507330 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1549, i32 15872, i32 1024 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 765, i32 -8126464, i32 67371008 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1932, i32 196608, i32 196608 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 9281, i32 -65265, i32 16777479 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1346, i32 720896, i32 720896 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1317, i32 16777216, i32 16777216 }], [88 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_4_1_arct = internal constant { [11 x %struct.soc15_reg_golden], [88 x i8] } { [11 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1598, i32 -34817, i32 705773634 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1346, i32 -273, i32 17498112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2819, i32 1073741823, i32 879692366 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2820, i32 1073741823, i32 29770442 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2825, i32 1073741823, i32 653545624 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2826, i32 1073741823, i32 784179171 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2827, i32 1073741823, i32 194049457 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2828, i32 1023, i32 309 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 768, i32 -1, i32 18481152 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 773, i32 -1, i32 3840 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4789, i32 805306368, i32 805306368 }], [88 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_1 = internal constant { [24 x %struct.soc15_reg_golden], [128 x i8] } { [24 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1664, i32 -134193, i32 82180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4157, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4158, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4156, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1549, i32 -267386881, i32 1056 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1600, i32 15, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 582, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 719, i32 3, i32 -2109734876 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 764, i32 1073741823, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 65295, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19634, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19635, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19636, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19661, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19637, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1346, i32 -273, i32 17498112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2820, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2819, i32 -1, i32 12576 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 561, i32 1073691379, i32 421527552 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 617, i32 4095, i32 255 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 579, i32 134217728, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4285, i32 2048, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4286, i32 2048, i32 2048 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4223, i32 32768, i32 32768 }], [128 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_1_rv2 = internal constant { [19 x %struct.soc15_reg_golden], [120 x i8] } { [19 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1672, i32 -8388609, i32 67108864 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1664, i32 -134193, i32 82180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1666, i32 -8388609, i32 167772160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4157, i32 2131755007, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4158, i32 -7340033, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4156, i32 2140143615, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1598, i32 -34817, i32 637612097 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1602, i32 -34817, i32 637612097 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 582, i32 1066401791, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 765, i32 -1, i32 67371008 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19634, i32 -15728641, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19635, i32 -15728641, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19636, i32 -15728641, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19661, i32 -15728641, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 19637, i32 -15728641, i32 134217856 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2820, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2819, i32 -1, i32 16 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1317, i32 29204275, i32 16777216 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 579, i32 1066401791, i32 134217856 }], [120 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_1_rv1 = internal constant { [7 x %struct.soc15_reg_golden], [56 x i8] } { [7 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1667, i32 805306368, i32 268435456 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1598, i32 -34817, i32 603979842 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1602, i32 -34817, i32 603979842 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 765, i32 -1, i32 67403776 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 659, i32 100663296, i32 100663296 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1932, i32 196608, i32 131072 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1317, i32 29204275, i32 2048 }], [56 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_1_rn = internal constant { [12 x %struct.soc15_reg_golden], [64 x i8] } { [12 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1664, i32 -134193, i32 82180 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1666, i32 -8388609, i32 167772160 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1549, i32 -267386881, i32 1024 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1598, i32 -202934273, i32 603979842 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1602, i32 -202934273, i32 603979842 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 764, i32 1073741823, i32 1 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 765, i32 -1, i32 67371008 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 8833, i32 65295, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1346, i32 -273, i32 17498112 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2820, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 2819, i32 -1, i32 12576 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 1804, i32 -1, i32 52428 }], [64 x i8] zeroinitializer }, align 32
@golden_settings_gc_9_x_common = internal constant { [3 x %struct.soc15_reg_golden], [56 x i8] } { [3 x %struct.soc15_reg_golden] [%struct.soc15_reg_golden { i32 1, i32 0, i32 0, i32 4535, i32 -1, i32 511 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 23044, i32 -1, i32 0 }, %struct.soc15_reg_golden { i32 1, i32 0, i32 1, i32 23045, i32 -1, i32 625263490 }], [56 x i8] zeroinitializer }, align 32
@amdgpu_bo_reserve._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.382, ptr @.str.383, ptr @.str.384, i32 179, ptr @.str.52, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"amdgpu: %p reserve failed\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu_bo_reserve\00", [46 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_object.h\00", [43 x i8] zeroinitializer }, align 32
@amdgpu_bo_reserve._entry_ptr = internal global ptr @amdgpu_bo_reserve._entry, section ".printk_index", align 4
@.str.386 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"amdgpu: cp failed to lock ring (%d).\0A\00", [58 x i8] zeroinitializer }, align 32
@gfx_v9_0_hw_fini.__UNIQUE_ID_ddebug397 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.387, ptr @.str.388, ptr @.str.9, ptr @.str.389, i8 4, i8 7, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.387 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"amdgpu\00", [25 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"gfx_v9_0_hw_fini\00", [47 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"amdgpu: Skipping RLC halt\0A\00", [37 x i8] zeroinitializer }, align 32
@amdgpu_ras_in_intr = external dso_local global %struct.atomic_t, align 4
@.str.390 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"KIQ dequeue request failed.\0A\00", [35 x i8] zeroinitializer }, align 32
@gfx_v9_0_soft_reset._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.391, ptr @.str.392, ptr @.str.9, i32 4214, ptr @.str.196, ptr @.str.53 }, [40 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"amdgpu: GRBM_SOFT_RESET=0x%08X\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.392 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"gfx_v9_0_soft_reset\00", [44 x i8] zeroinitializer }, align 32
@gfx_v9_0_soft_reset._entry_ptr = internal global ptr @gfx_v9_0_soft_reset._entry, section ".printk_index", align 4
@switch.table.gfx_v9_0_ras_error_inject = internal constant { [9 x i32], [60 x i8] } { [9 x i32] [i32 0, i32 1, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0, i32 8], [60 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [6 x i64] [i64 4, i64 32, i64 590080, i64 590338, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.393 = internal global [8 x i64] [i64 6, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590848, i64 590849]
@__sancov_gen_cov_switch_values.394 = internal global [10 x i64] [i64 8, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590592, i64 590848, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.395 = internal global [10 x i64] [i64 8, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590592, i64 590848, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.396 = internal global [10 x i64] [i64 8, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590592, i64 590848, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.397 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294966784]
@__sancov_gen_cov_switch_values.398 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294966784]
@__sancov_gen_cov_switch_values.399 = internal global [10 x i64] [i64 8, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590592, i64 590848, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.400 = internal global [6 x i64] [i64 4, i64 32, i64 590080, i64 590337, i64 590338, i64 590592]
@__sancov_gen_cov_switch_values.401 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.402 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.403 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.404 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.405 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.406 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.407 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.408 = internal global [5 x i64] [i64 3, i64 32, i64 590080, i64 590338, i64 590848]
@__sancov_gen_cov_switch_values.409 = internal global [5 x i64] [i64 3, i64 32, i64 590592, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.410 = internal global [5 x i64] [i64 3, i64 32, i64 590080, i64 590338, i64 590848]
@__sancov_gen_cov_switch_values.411 = internal global [10 x i64] [i64 8, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590592, i64 590848, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.412 = internal global [5 x i64] [i64 3, i64 32, i64 590592, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.413 = internal global [5 x i64] [i64 3, i64 32, i64 590592, i64 590849, i64 590850]
@__sancov_gen_cov_switch_values.414 = internal global [4 x i64] [i64 2, i64 16, i64 4098, i64 4156]
@__sancov_gen_cov_switch_values.415 = internal global [4 x i64] [i64 2, i64 8, i64 198, i64 200]
@__sancov_gen_cov_switch_values.416 = internal global [5 x i64] [i64 3, i64 32, i64 590080, i64 590338, i64 590592]
@__sancov_gen_cov_switch_values.417 = internal global [7 x i64] [i64 5, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590848]
@__sancov_gen_cov_switch_values.418 = internal global [10 x i64] [i64 8, i64 32, i64 589825, i64 590080, i64 590337, i64 590338, i64 590592, i64 590848, i64 590849, i64 590850]
@___asan_gen_.419 = private unnamed_addr constant [18 x i8] c"gfx_v9_0_ip_funcs\00", align 1
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6942, i32 34 }
@___asan_gen_.422 = private unnamed_addr constant [18 x i8] c"gfx_v9_0_ip_block\00", align 1
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 7304, i32 38 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6943, i32 10 }
@___asan_gen_.428 = private unnamed_addr constant [23 x i8] c"gfx_v9_0_kiq_pm4_funcs\00", align 1
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1001, i32 35 }
@___asan_gen_.432 = private unnamed_addr constant [54 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ring.h\00", align 1
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.432, i32 314, i32 3 }
@___asan_gen_.434 = private unnamed_addr constant [24 x i8] c"gfx_v9_0_ring_funcs_kiq\00", align 1
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 7052, i32 39 }
@___asan_gen_.437 = private unnamed_addr constant [24 x i8] c"gfx_v9_0_ring_funcs_gfx\00", align 1
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6960, i32 39 }
@___asan_gen_.440 = private unnamed_addr constant [28 x i8] c"gfx_v9_0_ring_funcs_compute\00", align 1
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 7013, i32 39 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6907, i32 3 }
@___asan_gen_.446 = private unnamed_addr constant [23 x i8] c"gfx_v9_0_eop_irq_funcs\00", align 1
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 7094, i32 42 }
@___asan_gen_.449 = private unnamed_addr constant [28 x i8] c"gfx_v9_0_priv_reg_irq_funcs\00", align 1
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 7099, i32 42 }
@___asan_gen_.452 = private unnamed_addr constant [29 x i8] c"gfx_v9_0_priv_inst_irq_funcs\00", align 1
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 7104, i32 42 }
@___asan_gen_.455 = private unnamed_addr constant [32 x i8] c"gfx_v9_0_cp_ecc_error_irq_funcs\00", align 1
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 7109, i32 42 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 5854, i32 3 }
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6000, i32 2 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6055, i32 2 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6064, i32 2 }
@___asan_gen_.470 = private unnamed_addr constant [19 x i8] c"gfx_v9_0_rlc_funcs\00", align 1
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 5240, i32 38 }
@___asan_gen_.473 = private unnamed_addr constant [13 x i8] c"gfx9_cs_data\00", align 1
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 939, i32 36 }
@___asan_gen_.476 = private unnamed_addr constant [23 x i8] c"gfx9_SECT_CONTEXT_defs\00", align 1
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 927, i32 35 }
@___asan_gen_.479 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_1\00", align 1
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 24, i32 27 }
@___asan_gen_.482 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_3\00", align 1
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 524, i32 27 }
@___asan_gen_.485 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_4\00", align 1
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 531, i32 27 }
@___asan_gen_.488 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_5\00", align 1
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 691, i32 27 }
@___asan_gen_.491 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_6\00", align 1
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 696, i32 27 }
@___asan_gen_.494 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_7\00", align 1
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 700, i32 27 }
@___asan_gen_.497 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_2\00", align 1
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 239, i32 27 }
@___asan_gen_.500 = private unnamed_addr constant [24 x i8] c"gfx9_SECT_CONTEXT_def_8\00", align 1
@___asan_gen_.501 = private unnamed_addr constant [58 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h\00", align 1
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 769, i32 27 }
@___asan_gen_.503 = private unnamed_addr constant [36 x i8] c"GFX_RLC_SRM_INDEX_CNTL_ADDR_OFFSETS\00", align 1
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 725, i32 18 }
@___asan_gen_.506 = private unnamed_addr constant [36 x i8] c"GFX_RLC_SRM_INDEX_CNTL_DATA_OFFSETS\00", align 1
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 737, i32 18 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2813, i32 3 }
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2751, i32 5 }
@___asan_gen_.521 = private unnamed_addr constant [13 x i8] c"scratch_reg0\00", align 1
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 751, i32 15 }
@___asan_gen_.524 = private unnamed_addr constant [13 x i8] c"scratch_reg1\00", align 1
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 752, i32 15 }
@___asan_gen_.527 = private unnamed_addr constant [13 x i8] c"scratch_reg2\00", align 1
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 753, i32 15 }
@___asan_gen_.530 = private unnamed_addr constant [13 x i8] c"scratch_reg3\00", align 1
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 754, i32 15 }
@___asan_gen_.533 = private unnamed_addr constant [10 x i8] c"spare_int\00", align 1
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 755, i32 15 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 801, i32 6 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 803, i32 6 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 805, i32 6 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 807, i32 6 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 809, i32 5 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4618, i32 3 }
@___asan_gen_.572 = private unnamed_addr constant [34 x i8] c"vgpr_init_compute_shader_arcturus\00", align 1
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4405, i32 18 }
@___asan_gen_.575 = private unnamed_addr constant [24 x i8] c"vgpr_init_regs_arcturus\00", align 1
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4520, i32 37 }
@___asan_gen_.578 = private unnamed_addr constant [25 x i8] c"vgpr_init_compute_shader\00", align 1
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4371, i32 18 }
@___asan_gen_.581 = private unnamed_addr constant [15 x i8] c"vgpr_init_regs\00", align 1
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4503, i32 37 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4707, i32 3 }
@___asan_gen_.587 = private unnamed_addr constant [16 x i8] c"sgpr1_init_regs\00", align 1
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4537, i32 37 }
@___asan_gen_.590 = private unnamed_addr constant [16 x i8] c"sgpr2_init_regs\00", align 1
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4554, i32 37 }
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4808, i32 3 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4815, i32 3 }
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2433, i32 3 }
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2439, i32 3 }
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2445, i32 3 }
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2456, i32 24 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2487, i32 3 }
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1732, i32 2 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1736, i32 15 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1739, i32 15 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1742, i32 15 }
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1747, i32 16 }
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1749, i32 16 }
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1751, i32 16 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1754, i32 15 }
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1758, i32 16 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1760, i32 16 }
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1763, i32 15 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1420, i32 37 }
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1431, i32 37 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1442, i32 37 }
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1478, i32 3 }
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1516, i32 38 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1522, i32 38 }
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1524, i32 38 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1613, i32 3 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1641, i32 37 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1654, i32 38 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1716, i32 3 }
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 1267, i32 3 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2083, i32 4 }
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2107, i32 3 }
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2360, i32 22 }
@___asan_gen_.728 = private unnamed_addr constant [19 x i8] c"gfx_v9_0_gfx_funcs\00", align 1
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2191, i32 38 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2231, i32 3 }
@___asan_gen_.740 = private unnamed_addr constant [19 x i8] c"gfx_v9_0_ras_funcs\00", align 1
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 2200, i32 42 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4244, i32 3 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4301, i32 2 }
@___asan_gen_.758 = private unnamed_addr constant [18 x i8] c"ras_gfx_subblocks\00", align 1
@___asan_gen_.760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 372, i32 38 }
@___asan_gen_.763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6529, i32 3 }
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6537, i32 3 }
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 373, i32 2 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 374, i32 2 }
@___asan_gen_.775 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 375, i32 2 }
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 376, i32 2 }
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 377, i32 2 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 378, i32 2 }
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 379, i32 2 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 380, i32 2 }
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 381, i32 2 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 382, i32 2 }
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 383, i32 2 }
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 384, i32 2 }
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 385, i32 2 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 386, i32 2 }
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 387, i32 2 }
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 388, i32 2 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 389, i32 2 }
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 391, i32 2 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 393, i32 2 }
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 394, i32 2 }
@___asan_gen_.829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 395, i32 2 }
@___asan_gen_.832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 396, i32 2 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 397, i32 2 }
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 398, i32 2 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 399, i32 2 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 400, i32 2 }
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 402, i32 2 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 404, i32 2 }
@___asan_gen_.853 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 406, i32 2 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 408, i32 2 }
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 410, i32 2 }
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 412, i32 2 }
@___asan_gen_.865 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 414, i32 2 }
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 416, i32 2 }
@___asan_gen_.871 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 418, i32 2 }
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 420, i32 2 }
@___asan_gen_.877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 422, i32 2 }
@___asan_gen_.880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 424, i32 2 }
@___asan_gen_.883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 426, i32 2 }
@___asan_gen_.886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 428, i32 2 }
@___asan_gen_.889 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 430, i32 2 }
@___asan_gen_.892 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 432, i32 2 }
@___asan_gen_.895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 434, i32 2 }
@___asan_gen_.898 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 436, i32 2 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 438, i32 2 }
@___asan_gen_.904 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 440, i32 2 }
@___asan_gen_.907 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 442, i32 2 }
@___asan_gen_.910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 444, i32 2 }
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 446, i32 2 }
@___asan_gen_.916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 448, i32 2 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 449, i32 2 }
@___asan_gen_.922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 450, i32 2 }
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 451, i32 2 }
@___asan_gen_.928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 452, i32 2 }
@___asan_gen_.931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 453, i32 2 }
@___asan_gen_.934 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 454, i32 2 }
@___asan_gen_.937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 455, i32 2 }
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 456, i32 2 }
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 458, i32 2 }
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 460, i32 2 }
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 462, i32 2 }
@___asan_gen_.952 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 464, i32 2 }
@___asan_gen_.955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 466, i32 2 }
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 467, i32 2 }
@___asan_gen_.961 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 468, i32 2 }
@___asan_gen_.964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 469, i32 2 }
@___asan_gen_.967 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 470, i32 2 }
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 471, i32 2 }
@___asan_gen_.973 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 472, i32 2 }
@___asan_gen_.976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 473, i32 2 }
@___asan_gen_.979 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 474, i32 2 }
@___asan_gen_.982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 475, i32 2 }
@___asan_gen_.985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 476, i32 2 }
@___asan_gen_.988 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 477, i32 2 }
@___asan_gen_.991 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 479, i32 2 }
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 480, i32 2 }
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 482, i32 2 }
@___asan_gen_.1000 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 484, i32 2 }
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 486, i32 2 }
@___asan_gen_.1006 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 487, i32 2 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 488, i32 2 }
@___asan_gen_.1012 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 489, i32 2 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 490, i32 2 }
@___asan_gen_.1018 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 491, i32 2 }
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 492, i32 2 }
@___asan_gen_.1024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 493, i32 2 }
@___asan_gen_.1027 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 494, i32 2 }
@___asan_gen_.1030 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 495, i32 2 }
@___asan_gen_.1033 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 496, i32 2 }
@___asan_gen_.1036 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 497, i32 2 }
@___asan_gen_.1039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 498, i32 2 }
@___asan_gen_.1042 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 499, i32 2 }
@___asan_gen_.1045 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 500, i32 2 }
@___asan_gen_.1048 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 501, i32 2 }
@___asan_gen_.1051 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 502, i32 2 }
@___asan_gen_.1054 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 503, i32 2 }
@___asan_gen_.1057 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 504, i32 2 }
@___asan_gen_.1060 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 505, i32 2 }
@___asan_gen_.1063 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 506, i32 2 }
@___asan_gen_.1066 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 507, i32 2 }
@___asan_gen_.1069 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 508, i32 2 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 509, i32 2 }
@___asan_gen_.1075 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 510, i32 2 }
@___asan_gen_.1078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 511, i32 2 }
@___asan_gen_.1081 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 512, i32 2 }
@___asan_gen_.1084 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 513, i32 2 }
@___asan_gen_.1087 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 514, i32 2 }
@___asan_gen_.1090 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 515, i32 2 }
@___asan_gen_.1093 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 516, i32 2 }
@___asan_gen_.1096 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 517, i32 2 }
@___asan_gen_.1099 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 518, i32 2 }
@___asan_gen_.1102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 519, i32 2 }
@___asan_gen_.1108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1110, i32 573, i32 3 }
@___asan_gen_.1110 = private unnamed_addr constant [53 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ras.h\00", align 1
@___asan_gen_.1111 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1110, i32 592, i32 3 }
@___asan_gen_.1112 = private unnamed_addr constant [26 x i8] c"gfx_v9_0_edc_counter_regs\00", align 1
@___asan_gen_.1114 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4571, i32 37 }
@___asan_gen_.1115 = private unnamed_addr constant [20 x i8] c"gfx_v9_0_ras_fields\00", align 1
@___asan_gen_.1117 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6070, i32 43 }
@___asan_gen_.1129 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6743, i32 4 }
@___asan_gen_.1135 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6755, i32 4 }
@___asan_gen_.1138 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6071, i32 4 }
@___asan_gen_.1141 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6075, i32 4 }
@___asan_gen_.1144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6079, i32 4 }
@___asan_gen_.1147 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6083, i32 4 }
@___asan_gen_.1150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6087, i32 4 }
@___asan_gen_.1153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6091, i32 4 }
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6095, i32 4 }
@___asan_gen_.1159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6099, i32 4 }
@___asan_gen_.1162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6103, i32 4 }
@___asan_gen_.1165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6107, i32 4 }
@___asan_gen_.1168 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6111, i32 4 }
@___asan_gen_.1171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6115, i32 4 }
@___asan_gen_.1174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6119, i32 4 }
@___asan_gen_.1177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6123, i32 4 }
@___asan_gen_.1180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6127, i32 4 }
@___asan_gen_.1183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6132, i32 4 }
@___asan_gen_.1186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6137, i32 4 }
@___asan_gen_.1189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6142, i32 4 }
@___asan_gen_.1192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6147, i32 4 }
@___asan_gen_.1195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6152, i32 4 }
@___asan_gen_.1198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6157, i32 4 }
@___asan_gen_.1201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6161, i32 4 }
@___asan_gen_.1204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6165, i32 4 }
@___asan_gen_.1207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6169, i32 4 }
@___asan_gen_.1210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6173, i32 4 }
@___asan_gen_.1213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6177, i32 4 }
@___asan_gen_.1216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6181, i32 4 }
@___asan_gen_.1219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6185, i32 4 }
@___asan_gen_.1222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6189, i32 4 }
@___asan_gen_.1225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6193, i32 4 }
@___asan_gen_.1228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6197, i32 4 }
@___asan_gen_.1231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6201, i32 4 }
@___asan_gen_.1234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6205, i32 4 }
@___asan_gen_.1237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6209, i32 4 }
@___asan_gen_.1240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6213, i32 4 }
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6217, i32 4 }
@___asan_gen_.1246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6221, i32 4 }
@___asan_gen_.1249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6225, i32 4 }
@___asan_gen_.1252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6229, i32 4 }
@___asan_gen_.1255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6233, i32 4 }
@___asan_gen_.1258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6237, i32 4 }
@___asan_gen_.1261 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6241, i32 4 }
@___asan_gen_.1264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6245, i32 4 }
@___asan_gen_.1267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6249, i32 4 }
@___asan_gen_.1270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6253, i32 4 }
@___asan_gen_.1273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6257, i32 4 }
@___asan_gen_.1276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6261, i32 4 }
@___asan_gen_.1279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6265, i32 4 }
@___asan_gen_.1282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6269, i32 4 }
@___asan_gen_.1285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6273, i32 4 }
@___asan_gen_.1288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6277, i32 4 }
@___asan_gen_.1291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6281, i32 4 }
@___asan_gen_.1294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6285, i32 4 }
@___asan_gen_.1297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6289, i32 4 }
@___asan_gen_.1300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6293, i32 4 }
@___asan_gen_.1303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6297, i32 4 }
@___asan_gen_.1306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6301, i32 4 }
@___asan_gen_.1309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6305, i32 4 }
@___asan_gen_.1312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6309, i32 4 }
@___asan_gen_.1315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6313, i32 4 }
@___asan_gen_.1318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6317, i32 4 }
@___asan_gen_.1321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6321, i32 4 }
@___asan_gen_.1324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6325, i32 4 }
@___asan_gen_.1327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6329, i32 4 }
@___asan_gen_.1330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6333, i32 4 }
@___asan_gen_.1333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6337, i32 4 }
@___asan_gen_.1336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6341, i32 4 }
@___asan_gen_.1339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6345, i32 4 }
@___asan_gen_.1342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6349, i32 4 }
@___asan_gen_.1345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6353, i32 4 }
@___asan_gen_.1348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6357, i32 4 }
@___asan_gen_.1351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6361, i32 4 }
@___asan_gen_.1354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6365, i32 4 }
@___asan_gen_.1357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6369, i32 4 }
@___asan_gen_.1360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6373, i32 4 }
@___asan_gen_.1363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6377, i32 4 }
@___asan_gen_.1366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6381, i32 4 }
@___asan_gen_.1369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6385, i32 4 }
@___asan_gen_.1372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6389, i32 4 }
@___asan_gen_.1375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6393, i32 4 }
@___asan_gen_.1378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6397, i32 4 }
@___asan_gen_.1381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6401, i32 4 }
@___asan_gen_.1384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6405, i32 4 }
@___asan_gen_.1387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6409, i32 4 }
@___asan_gen_.1390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6413, i32 4 }
@___asan_gen_.1393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6417, i32 4 }
@___asan_gen_.1396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6421, i32 4 }
@___asan_gen_.1399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6425, i32 4 }
@___asan_gen_.1402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6429, i32 4 }
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6433, i32 4 }
@___asan_gen_.1408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6437, i32 4 }
@___asan_gen_.1411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6441, i32 4 }
@___asan_gen_.1414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6445, i32 4 }
@___asan_gen_.1417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6449, i32 4 }
@___asan_gen_.1420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6453, i32 4 }
@___asan_gen_.1423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6457, i32 4 }
@___asan_gen_.1426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6461, i32 4 }
@___asan_gen_.1429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6465, i32 4 }
@___asan_gen_.1432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6469, i32 4 }
@___asan_gen_.1435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6473, i32 4 }
@___asan_gen_.1438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6477, i32 4 }
@___asan_gen_.1441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6481, i32 4 }
@___asan_gen_.1444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6485, i32 4 }
@___asan_gen_.1447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6489, i32 4 }
@___asan_gen_.1450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6493, i32 4 }
@___asan_gen_.1453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6497, i32 4 }
@___asan_gen_.1456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6501, i32 4 }
@___asan_gen_.1459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6505, i32 4 }
@___asan_gen_.1468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6649, i32 4 }
@___asan_gen_.1469 = private unnamed_addr constant [10 x i8] c"vml2_mems\00", align 1
@___asan_gen_.1471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6557, i32 20 }
@___asan_gen_.1477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6656, i32 4 }
@___asan_gen_.1480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6669, i32 4 }
@___asan_gen_.1481 = private unnamed_addr constant [17 x i8] c"vml2_walker_mems\00", align 1
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6576, i32 20 }
@___asan_gen_.1486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6677, i32 4 }
@___asan_gen_.1489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6689, i32 4 }
@___asan_gen_.1490 = private unnamed_addr constant [21 x i8] c"atc_l2_cache_2m_mems\00", align 1
@___asan_gen_.1492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6586, i32 20 }
@___asan_gen_.1495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6702, i32 4 }
@___asan_gen_.1496 = private unnamed_addr constant [21 x i8] c"atc_l2_cache_4k_mems\00", align 1
@___asan_gen_.1498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6593, i32 20 }
@___asan_gen_.1501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6710, i32 4 }
@___asan_gen_.1504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6558, i32 2 }
@___asan_gen_.1507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6559, i32 2 }
@___asan_gen_.1510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6560, i32 2 }
@___asan_gen_.1513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6561, i32 2 }
@___asan_gen_.1516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6562, i32 2 }
@___asan_gen_.1519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6563, i32 2 }
@___asan_gen_.1522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6564, i32 2 }
@___asan_gen_.1525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6565, i32 2 }
@___asan_gen_.1528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6566, i32 2 }
@___asan_gen_.1531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6567, i32 2 }
@___asan_gen_.1534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6568, i32 2 }
@___asan_gen_.1537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6569, i32 2 }
@___asan_gen_.1540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6570, i32 2 }
@___asan_gen_.1543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6571, i32 2 }
@___asan_gen_.1546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6572, i32 2 }
@___asan_gen_.1549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6573, i32 2 }
@___asan_gen_.1552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6577, i32 2 }
@___asan_gen_.1555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6578, i32 2 }
@___asan_gen_.1558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6579, i32 2 }
@___asan_gen_.1561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6580, i32 2 }
@___asan_gen_.1564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6581, i32 2 }
@___asan_gen_.1567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6582, i32 2 }
@___asan_gen_.1570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6583, i32 2 }
@___asan_gen_.1573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6587, i32 2 }
@___asan_gen_.1576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6588, i32 2 }
@___asan_gen_.1579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6589, i32 2 }
@___asan_gen_.1582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6590, i32 2 }
@___asan_gen_.1585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6594, i32 2 }
@___asan_gen_.1588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6595, i32 2 }
@___asan_gen_.1591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6596, i32 2 }
@___asan_gen_.1594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6597, i32 2 }
@___asan_gen_.1597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6598, i32 2 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6599, i32 2 }
@___asan_gen_.1603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6600, i32 2 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6601, i32 2 }
@___asan_gen_.1609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6602, i32 2 }
@___asan_gen_.1612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6603, i32 2 }
@___asan_gen_.1615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6604, i32 2 }
@___asan_gen_.1618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6605, i32 2 }
@___asan_gen_.1621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6606, i32 2 }
@___asan_gen_.1624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6607, i32 2 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6608, i32 2 }
@___asan_gen_.1630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6609, i32 2 }
@___asan_gen_.1633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6610, i32 2 }
@___asan_gen_.1636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6611, i32 2 }
@___asan_gen_.1639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6612, i32 2 }
@___asan_gen_.1642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6613, i32 2 }
@___asan_gen_.1645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6614, i32 2 }
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6615, i32 2 }
@___asan_gen_.1651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6616, i32 2 }
@___asan_gen_.1654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6617, i32 2 }
@___asan_gen_.1657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6618, i32 2 }
@___asan_gen_.1660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6619, i32 2 }
@___asan_gen_.1663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6620, i32 2 }
@___asan_gen_.1666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6621, i32 2 }
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6622, i32 2 }
@___asan_gen_.1672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6623, i32 2 }
@___asan_gen_.1675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6624, i32 2 }
@___asan_gen_.1678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 6625, i32 2 }
@___asan_gen_.1679 = private unnamed_addr constant [23 x i8] c"golden_settings_gc_9_0\00", align 1
@___asan_gen_.1681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 522, i32 38 }
@___asan_gen_.1682 = private unnamed_addr constant [28 x i8] c"golden_settings_gc_9_0_vg10\00", align 1
@___asan_gen_.1684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 546, i32 38 }
@___asan_gen_.1685 = private unnamed_addr constant [25 x i8] c"golden_settings_gc_9_2_1\00", align 1
@___asan_gen_.1687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 668, i32 38 }
@___asan_gen_.1688 = private unnamed_addr constant [30 x i8] c"golden_settings_gc_9_2_1_vg12\00", align 1
@___asan_gen_.1690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 688, i32 38 }
@___asan_gen_.1691 = private unnamed_addr constant [28 x i8] c"golden_settings_gc_9_0_vg20\00", align 1
@___asan_gen_.1693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 568, i32 38 }
@___asan_gen_.1694 = private unnamed_addr constant [30 x i8] c"golden_settings_gc_9_4_1_arct\00", align 1
@___asan_gen_.1696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 705, i32 38 }
@___asan_gen_.1697 = private unnamed_addr constant [23 x i8] c"golden_settings_gc_9_1\00", align 1
@___asan_gen_.1699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 583, i32 38 }
@___asan_gen_.1700 = private unnamed_addr constant [27 x i8] c"golden_settings_gc_9_1_rv2\00", align 1
@___asan_gen_.1702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 622, i32 38 }
@___asan_gen_.1703 = private unnamed_addr constant [27 x i8] c"golden_settings_gc_9_1_rv1\00", align 1
@___asan_gen_.1705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 611, i32 38 }
@___asan_gen_.1706 = private unnamed_addr constant [26 x i8] c"golden_settings_gc_9_1_rn\00", align 1
@___asan_gen_.1708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 645, i32 38 }
@___asan_gen_.1709 = private unnamed_addr constant [30 x i8] c"golden_settings_gc_9_x_common\00", align 1
@___asan_gen_.1711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 661, i32 38 }
@___asan_gen_.1722 = private unnamed_addr constant [56 x i8] c"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_object.h\00", align 1
@___asan_gen_.1723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1722, i32 179, i32 4 }
@___asan_gen_.1726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 3340, i32 3 }
@___asan_gen_.1735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4126, i32 3 }
@___asan_gen_.1738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 3819, i32 4 }
@___asan_gen_.1739 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1745 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1746 = private constant [41 x i8] c"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\00", align 1
@___asan_gen_.1747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1746, i32 4214, i32 4 }
@___asan_gen_.1748 = private unnamed_addr constant [39 x i8] c"switch.table.gfx_v9_0_ras_error_inject\00", align 1
@llvm.compiler.used = appending global [524 x ptr] [ptr @__UNIQUE_ID_firmware343, ptr @__UNIQUE_ID_firmware344, ptr @__UNIQUE_ID_firmware345, ptr @__UNIQUE_ID_firmware346, ptr @__UNIQUE_ID_firmware347, ptr @__UNIQUE_ID_firmware348, ptr @__UNIQUE_ID_firmware349, ptr @__UNIQUE_ID_firmware350, ptr @__UNIQUE_ID_firmware351, ptr @__UNIQUE_ID_firmware352, ptr @__UNIQUE_ID_firmware353, ptr @__UNIQUE_ID_firmware354, ptr @__UNIQUE_ID_firmware355, ptr @__UNIQUE_ID_firmware356, ptr @__UNIQUE_ID_firmware357, ptr @__UNIQUE_ID_firmware358, ptr @__UNIQUE_ID_firmware359, ptr @__UNIQUE_ID_firmware360, ptr @__UNIQUE_ID_firmware361, ptr @__UNIQUE_ID_firmware362, ptr @__UNIQUE_ID_firmware363, ptr @__UNIQUE_ID_firmware364, ptr @__UNIQUE_ID_firmware365, ptr @__UNIQUE_ID_firmware366, ptr @__UNIQUE_ID_firmware367, ptr @__UNIQUE_ID_firmware368, ptr @__UNIQUE_ID_firmware369, ptr @__UNIQUE_ID_firmware370, ptr @__UNIQUE_ID_firmware371, ptr @__UNIQUE_ID_firmware372, ptr @__UNIQUE_ID_firmware373, ptr @__UNIQUE_ID_firmware374, ptr @__UNIQUE_ID_firmware375, ptr @__UNIQUE_ID_firmware376, ptr @__UNIQUE_ID_firmware377, ptr @__UNIQUE_ID_firmware378, ptr @__UNIQUE_ID_firmware379, ptr @__UNIQUE_ID_firmware380, ptr @__UNIQUE_ID_firmware381, ptr @__UNIQUE_ID_firmware382, ptr @__UNIQUE_ID_firmware383, ptr @__UNIQUE_ID_firmware384, ptr @__UNIQUE_ID_firmware385, ptr @__UNIQUE_ID_firmware386, ptr @__UNIQUE_ID_firmware387, ptr @__UNIQUE_ID_firmware388, ptr @__UNIQUE_ID_firmware389, ptr @__UNIQUE_ID_firmware390, ptr @__UNIQUE_ID_firmware391, ptr @__UNIQUE_ID_firmware392, ptr @__UNIQUE_ID_firmware393, ptr @__UNIQUE_ID_firmware394, ptr @__UNIQUE_ID_firmware395, ptr @__UNIQUE_ID_firmware396, ptr @amdgpu_bo_reserve._entry, ptr @amdgpu_bo_reserve._entry_ptr, ptr @gfx_v9_0_check_fw_write_wait._entry, ptr @gfx_v9_0_check_fw_write_wait._entry_ptr, ptr @gfx_v9_0_gpu_early_init._entry, ptr @gfx_v9_0_gpu_early_init._entry_ptr, ptr @gfx_v9_0_init_cp_compute_microcode._entry, ptr @gfx_v9_0_init_cp_compute_microcode._entry_ptr, ptr @gfx_v9_0_init_cp_gfx_microcode._entry, ptr @gfx_v9_0_init_cp_gfx_microcode._entry_ptr, ptr @gfx_v9_0_init_rlc_microcode._entry, ptr @gfx_v9_0_init_rlc_microcode._entry_ptr, ptr @gfx_v9_0_kiq_read_clock._entry, ptr @gfx_v9_0_kiq_read_clock._entry.74, ptr @gfx_v9_0_kiq_read_clock._entry_ptr, ptr @gfx_v9_0_kiq_read_clock._entry_ptr.76, ptr @gfx_v9_0_mec_init._entry, ptr @gfx_v9_0_mec_init._entry.66, ptr @gfx_v9_0_mec_init._entry_ptr, ptr @gfx_v9_0_mec_init._entry_ptr.68, ptr @gfx_v9_0_query_utc_edc_status._entry, ptr @gfx_v9_0_query_utc_edc_status._entry.310, ptr @gfx_v9_0_query_utc_edc_status._entry.313, ptr @gfx_v9_0_query_utc_edc_status._entry.315, ptr @gfx_v9_0_query_utc_edc_status._entry.317, ptr @gfx_v9_0_query_utc_edc_status._entry.319, ptr @gfx_v9_0_query_utc_edc_status._entry.321, ptr @gfx_v9_0_query_utc_edc_status._entry_ptr, ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.312, ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.314, ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.316, ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.318, ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.320, ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.322, ptr @gfx_v9_0_ras_error_count._entry, ptr @gfx_v9_0_ras_error_count._entry.197, ptr @gfx_v9_0_ras_error_count._entry_ptr, ptr @gfx_v9_0_ras_error_count._entry_ptr.199, ptr @gfx_v9_0_rlcg_rw._entry, ptr @gfx_v9_0_rlcg_rw._entry.14, ptr @gfx_v9_0_rlcg_rw._entry.17, ptr @gfx_v9_0_rlcg_rw._entry.20, ptr @gfx_v9_0_rlcg_rw._entry.23, ptr @gfx_v9_0_rlcg_rw._entry_ptr, ptr @gfx_v9_0_rlcg_rw._entry_ptr.16, ptr @gfx_v9_0_rlcg_rw._entry_ptr.19, ptr @gfx_v9_0_rlcg_rw._entry_ptr.22, ptr @gfx_v9_0_rlcg_rw._entry_ptr.25, ptr @gfx_v9_0_soft_reset._entry, ptr @gfx_v9_0_soft_reset._entry_ptr, ptr @gfx_v9_0_wait_for_rlc_serdes._entry, ptr @gfx_v9_0_wait_for_rlc_serdes._entry_ptr, ptr @gfx_v9_0_ip_funcs, ptr @gfx_v9_0_ip_block, ptr @.str, ptr @gfx_v9_0_kiq_pm4_funcs, ptr @.str.1, ptr @gfx_v9_0_ring_funcs_kiq, ptr @gfx_v9_0_ring_funcs_gfx, ptr @gfx_v9_0_ring_funcs_compute, ptr @.str.2, ptr @gfx_v9_0_eop_irq_funcs, ptr @gfx_v9_0_priv_reg_irq_funcs, ptr @gfx_v9_0_priv_inst_irq_funcs, ptr @gfx_v9_0_cp_ecc_error_irq_funcs, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @gfx_v9_0_rlc_funcs, ptr @gfx9_cs_data, ptr @gfx9_SECT_CONTEXT_defs, ptr @gfx9_SECT_CONTEXT_def_1, ptr @gfx9_SECT_CONTEXT_def_3, ptr @gfx9_SECT_CONTEXT_def_4, ptr @gfx9_SECT_CONTEXT_def_5, ptr @gfx9_SECT_CONTEXT_def_6, ptr @gfx9_SECT_CONTEXT_def_7, ptr @gfx9_SECT_CONTEXT_def_2, ptr @gfx9_SECT_CONTEXT_def_8, ptr @GFX_RLC_SRM_INDEX_CNTL_ADDR_OFFSETS, ptr @GFX_RLC_SRM_INDEX_CNTL_DATA_OFFSETS, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @gfx_v9_0_rlcg_rw.scratch_reg0, ptr @gfx_v9_0_rlcg_rw.scratch_reg1, ptr @gfx_v9_0_rlcg_rw.scratch_reg2, ptr @gfx_v9_0_rlcg_rw.scratch_reg3, ptr @gfx_v9_0_rlcg_rw.spare_int, ptr @.str.12, ptr @.str.13, ptr @.str.15, ptr @.str.18, ptr @.str.21, ptr @.str.24, ptr @.str.26, ptr @vgpr_init_compute_shader_arcturus, ptr @vgpr_init_regs_arcturus, ptr @vgpr_init_compute_shader, ptr @vgpr_init_regs, ptr @.str.27, ptr @sgpr1_init_regs, ptr @sgpr2_init_regs, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.67, ptr @.str.69, ptr @gfx_v9_0_gfx_funcs, ptr @.str.70, ptr @.str.71, ptr @gfx_v9_0_ras_funcs, ptr @.str.72, ptr @.str.73, ptr @.str.75, ptr @ras_gfx_subblocks, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @gfx_v9_0_edc_counter_regs, ptr @gfx_v9_0_ras_fields, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.198, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @vml2_mems, ptr @.str.311, ptr @vml2_walker_mems, ptr @atc_l2_cache_2m_mems, ptr @atc_l2_cache_4k_mems, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.371, ptr @.str.372, ptr @.str.373, ptr @.str.374, ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @golden_settings_gc_9_0, ptr @golden_settings_gc_9_0_vg10, ptr @golden_settings_gc_9_2_1, ptr @golden_settings_gc_9_2_1_vg12, ptr @golden_settings_gc_9_0_vg20, ptr @golden_settings_gc_9_4_1_arct, ptr @golden_settings_gc_9_1, ptr @golden_settings_gc_9_1_rv2, ptr @golden_settings_gc_9_1_rv1, ptr @golden_settings_gc_9_1_rn, ptr @golden_settings_gc_9_x_common, ptr @.str.382, ptr @.str.383, ptr @.str.384, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.389, ptr @.str.390, ptr @.str.391, ptr @.str.392, ptr @switch.table.gfx_v9_0_ras_error_inject], section "llvm.metadata"
@0 = internal global [444 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ip_funcs to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ip_block to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_kiq_pm4_funcs to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ring_funcs_kiq to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ring_funcs_gfx to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ring_funcs_compute to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_eop_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_priv_reg_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_priv_inst_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_cp_ecc_error_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlc_funcs to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_cs_data to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_defs to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_1 to i32), i32 848, i32 1056, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_3 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_4 to i32), i32 628, i32 768, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_5 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_6 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_7 to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_2 to i32), i32 1128, i32 1408, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx9_SECT_CONTEXT_def_8 to i32), i32 620, i32 768, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @GFX_RLC_SRM_INDEX_CNTL_ADDR_OFFSETS to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @GFX_RLC_SRM_INDEX_CNTL_DATA_OFFSETS to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_wait_for_rlc_serdes._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw.scratch_reg0 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw.scratch_reg1 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw.scratch_reg2 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw.scratch_reg3 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw.spare_int to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw._entry.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw._entry.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw._entry.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_rlcg_rw._entry.23 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vgpr_init_compute_shader_arcturus to i32), i32 2192, i32 2752, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vgpr_init_regs_arcturus to i32), i32 392, i32 512, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vgpr_init_compute_shader to i32), i32 152, i32 192, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vgpr_init_regs to i32), i32 392, i32 512, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sgpr1_init_regs to i32), i32 392, i32 512, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sgpr2_init_regs to i32), i32 392, i32 512, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_init_cp_gfx_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_init_rlc_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_init_cp_compute_microcode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_check_fw_write_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_mec_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_mec_init._entry.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_gfx_funcs to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_gpu_early_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ras_funcs to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_kiq_read_clock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_kiq_read_clock._entry.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ras_gfx_subblocks to i32), i32 1792, i32 2240, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.871 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.952 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.961 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.979 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1006 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1012 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_edc_counter_regs to i32), i32 924, i32 1152, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ras_fields to i32), i32 3888, i32 4864, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ras_error_count._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_ras_error_count._entry.197 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1168 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_query_utc_edc_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vml2_mems to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1469 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_query_utc_edc_status._entry.310 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_query_utc_edc_status._entry.313 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vml2_walker_mems to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_query_utc_edc_status._entry.315 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_query_utc_edc_status._entry.317 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @atc_l2_cache_2m_mems to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_query_utc_edc_status._entry.319 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @atc_l2_cache_4k_mems to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1496 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_query_utc_edc_status._entry.321 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_0 to i32), i32 480, i32 576, i32 ptrtoint (ptr @___asan_gen_.1679 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_0_vg10 to i32), i32 432, i32 544, i32 ptrtoint (ptr @___asan_gen_.1682 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_2_1 to i32), i32 384, i32 480, i32 ptrtoint (ptr @___asan_gen_.1685 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_2_1_vg12 to i32), i32 312, i32 384, i32 ptrtoint (ptr @___asan_gen_.1688 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_0_vg20 to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.1691 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_4_1_arct to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.1694 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_1 to i32), i32 576, i32 704, i32 ptrtoint (ptr @___asan_gen_.1697 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_1_rv2 to i32), i32 456, i32 576, i32 ptrtoint (ptr @___asan_gen_.1700 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_1_rv1 to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.1703 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_1_rn to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.1706 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @golden_settings_gc_9_x_common to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1709 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @amdgpu_bo_reserve._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gfx_v9_0_soft_reset._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1739 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1745 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.gfx_v9_0_ras_error_inject to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1748 to i32), i32 ptrtoint (ptr @___asan_gen_.1746 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @gfx_v9_0_select_se_sh(ptr noundef %adev, i32 noundef %se_num, i32 noundef %sh_num, i32 noundef %instance) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %instance)
  %cmp = icmp eq i32 %instance, -1
  %and = and i32 %instance, 255
  %data.0 = select i1 %cmp, i32 1073741824, i32 %and
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %se_num)
  %cmp1 = icmp eq i32 %se_num, -1
  %shl7 = shl i32 %se_num, 16
  %and8 = and i32 %shl7, 16711680
  %data.1.v = select i1 %cmp1, i32 -2147483648, i32 %and8
  %data.1 = or i32 %data.0, %data.1.v
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sh_num)
  %cmp11 = icmp eq i32 %sh_num, -1
  %shl17 = shl i32 %sh_num, 8
  %and18 = and i32 %shl17, 65280
  %data.2.v = select i1 %cmp11, i32 536870912, i32 %and18
  %data.2 = or i32 %data.1, %data.2.v
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and21 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool.not = icmp eq i32 %and21, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool22.not = icmp eq ptr %3, null
  br i1 %tobool22.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true23

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true23:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool27.not = icmp eq ptr %5, null
  br i1 %tobool27.not, label %land.lhs.true23.cond.false_crit_edge, label %cond.true

land.lhs.true23.cond.false_crit_edge:             ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx33 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx33, align 4
  %add = add i32 %9, 8704
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %data.2, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true23.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx35 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx35, align 8
  %arrayidx37 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx37, align 4
  %add38 = add i32 %13, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38, i32 noundef %data.2, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_device_wreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_early_init(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = add i32 %1, -590851
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %2)
  %switch = icmp ult i32 %2, -2
  %spec.select = zext i1 %switch to i32
  %3 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %spec.select, ptr %3, align 8
  %call = tail call i32 @amdgpu_gfx_get_num_kcq(ptr noundef %handle) #15
  %5 = tail call i32 @llvm.smin.i32(i32 %call, i32 8)
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 39
  %6 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %num_compute_rings, align 8
  %pmf.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 5
  %7 = ptrtoint ptr %pmf.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @gfx_v9_0_kiq_pm4_funcs, ptr %pmf.i, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 1
  %8 = ptrtoint ptr %funcs.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @gfx_v9_0_ring_funcs_kiq, ptr %funcs.i, align 4
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp23.not.i = icmp eq i32 %10, 0
  br i1 %cmp23.not.i, label %entry.for.cond4.preheader.i_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.for.cond4.preheader.i_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond4.preheader.i

for.cond4.preheader.i:                            ; preds = %for.body.i.for.cond4.preheader.i_crit_edge, %entry.for.cond4.preheader.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp625.not.i = icmp eq i32 %5, 0
  br i1 %cmp625.not.i, label %for.cond4.preheader.i.gfx_v9_0_set_ring_funcs.exit_crit_edge, label %for.cond4.preheader.i.for.body7.i_crit_edge

for.cond4.preheader.i.for.body7.i_crit_edge:      ; preds = %for.cond4.preheader.i
  br label %for.body7.i

for.cond4.preheader.i.gfx_v9_0_set_ring_funcs.exit_crit_edge: ; preds = %for.cond4.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_set_ring_funcs.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %i.024.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %entry.for.body.i_crit_edge ]
  %funcs3.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.024.i, i32 1
  %11 = ptrtoint ptr %funcs3.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @gfx_v9_0_ring_funcs_gfx, ptr %funcs3.i, align 4
  %inc.i = add nuw i32 %i.024.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %10
  br i1 %exitcond.not.i, label %for.body.i.for.cond4.preheader.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.body.i.for.cond4.preheader.i_crit_edge:       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond4.preheader.i

for.body7.i:                                      ; preds = %for.body7.i.for.body7.i_crit_edge, %for.cond4.preheader.i.for.body7.i_crit_edge
  %i.126.i = phi i32 [ %inc12.i, %for.body7.i.for.body7.i_crit_edge ], [ 0, %for.cond4.preheader.i.for.body7.i_crit_edge ]
  %funcs10.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.126.i, i32 1
  %12 = ptrtoint ptr %funcs10.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @gfx_v9_0_ring_funcs_compute, ptr %funcs10.i, align 4
  %inc12.i = add nuw i32 %i.126.i, 1
  %exitcond27.not.i = icmp eq i32 %inc12.i, %5
  br i1 %exitcond27.not.i, label %for.body7.i.gfx_v9_0_set_ring_funcs.exit_crit_edge, label %for.body7.i.for.body7.i_crit_edge

for.body7.i.for.body7.i_crit_edge:                ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body7.i

for.body7.i.gfx_v9_0_set_ring_funcs.exit_crit_edge: ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_set_ring_funcs.exit

gfx_v9_0_set_ring_funcs.exit:                     ; preds = %for.body7.i.gfx_v9_0_set_ring_funcs.exit_crit_edge, %for.cond4.preheader.i.gfx_v9_0_set_ring_funcs.exit_crit_edge
  %eop_irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 40
  %13 = ptrtoint ptr %eop_irq.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 10, ptr %eop_irq.i, align 4
  %funcs.i22 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 40, i32 2
  %14 = ptrtoint ptr %funcs.i22 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @gfx_v9_0_eop_irq_funcs, ptr %funcs.i22, align 4
  %priv_reg_irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %15 = ptrtoint ptr %priv_reg_irq.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 1, ptr %priv_reg_irq.i, align 8
  %funcs7.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41, i32 2
  %16 = ptrtoint ptr %funcs7.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @gfx_v9_0_priv_reg_irq_funcs, ptr %funcs7.i, align 8
  %priv_inst_irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %17 = ptrtoint ptr %priv_inst_irq.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %priv_inst_irq.i, align 4
  %funcs12.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42, i32 2
  %18 = ptrtoint ptr %funcs12.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @gfx_v9_0_priv_inst_irq_funcs, ptr %funcs12.i, align 4
  %cp_ecc_error_irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 43
  %19 = ptrtoint ptr %cp_ecc_error_irq.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 2, ptr %cp_ecc_error_irq.i, align 8
  %funcs17.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 43, i32 2
  %20 = ptrtoint ptr %funcs17.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @gfx_v9_0_cp_ecc_error_irq_funcs, ptr %funcs17.i, align 8
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx, align 4
  %23 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values)
  switch i32 %22, label %gfx_v9_0_set_ring_funcs.exit.sw.epilog.i_crit_edge [
    i32 590850, label %sw.epilog.thread.i
    i32 590849, label %gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge
    i32 590080, label %gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge28
    i32 590338, label %gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge29
  ]

gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge29: ; preds = %gfx_v9_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb2.i

gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge28: ; preds = %gfx_v9_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb2.i

gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge:  ; preds = %gfx_v9_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb2.i

gfx_v9_0_set_ring_funcs.exit.sw.epilog.i_crit_edge: ; preds = %gfx_v9_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge, %gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge28, %gfx_v9_0_set_ring_funcs.exit.sw.bb2.i_crit_edge29
  br label %sw.epilog.i

sw.epilog.thread.i:                               ; preds = %gfx_v9_0_set_ring_funcs.exit
  call void @__sanitizer_cov_trace_pc() #17
  %gds6.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114
  %24 = ptrtoint ptr %gds6.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %gds6.i, align 8
  br label %gfx_v9_0_set_gds_init.exit.thread

sw.epilog.i:                                      ; preds = %sw.bb2.i, %gfx_v9_0_set_ring_funcs.exit.sw.epilog.i_crit_edge
  %.sink.i = phi i32 [ 4096, %sw.bb2.i ], [ 65536, %gfx_v9_0_set_ring_funcs.exit.sw.epilog.i_crit_edge ]
  %gds8.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114
  %25 = ptrtoint ptr %gds8.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %.sink.i, ptr %gds8.i, align 8
  %26 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.393)
  switch i32 %22, label %sw.default29.i [
    i32 589825, label %sw.epilog.i.sw.bb13.i_crit_edge
    i32 590848, label %sw.epilog.i.sw.bb13.i_crit_edge30
    i32 590337, label %sw.epilog.i.gfx_v9_0_set_gds_init.exit.thread_crit_edge
    i32 590338, label %sw.epilog.i.sw.bb18.i_crit_edge
    i32 590080, label %sw.epilog.i.sw.bb18.i_crit_edge31
    i32 590849, label %sw.bb23.i
  ]

sw.epilog.i.sw.bb18.i_crit_edge31:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb18.i

sw.epilog.i.sw.bb18.i_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb18.i

sw.epilog.i.gfx_v9_0_set_gds_init.exit.thread_crit_edge: ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_set_gds_init.exit.thread

sw.epilog.i.sw.bb13.i_crit_edge30:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb13.i

sw.epilog.i.sw.bb13.i_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb13.i

sw.bb13.i:                                        ; preds = %sw.epilog.i.sw.bb13.i_crit_edge, %sw.epilog.i.sw.bb13.i_crit_edge30
  %gds_compute_max_wave_id.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 3
  %27 = ptrtoint ptr %gds_compute_max_wave_id.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 2047, ptr %gds_compute_max_wave_id.i, align 4
  br label %gfx_v9_0_set_gds_init.exit

sw.bb18.i:                                        ; preds = %sw.epilog.i.sw.bb18.i_crit_edge, %sw.epilog.i.sw.bb18.i_crit_edge31
  %apu_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 10
  %28 = ptrtoint ptr %apu_flags.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %apu_flags.i, align 4
  %and.i = and i32 %29, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %gds_compute_max_wave_id22.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 3
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #17
  %30 = ptrtoint ptr %gds_compute_max_wave_id22.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 119, ptr %gds_compute_max_wave_id22.i, align 4
  br label %gfx_v9_0_set_gds_init.exit

if.else.i:                                        ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #17
  %31 = ptrtoint ptr %gds_compute_max_wave_id22.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 351, ptr %gds_compute_max_wave_id22.i, align 4
  br label %gfx_v9_0_set_gds_init.exit

sw.bb23.i:                                        ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_set_gds_init.exit.thread

sw.default29.i:                                   ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  %gds_compute_max_wave_id31.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 3
  %32 = ptrtoint ptr %gds_compute_max_wave_id31.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 2047, ptr %gds_compute_max_wave_id31.i, align 4
  br label %gfx_v9_0_set_gds_init.exit

gfx_v9_0_set_gds_init.exit.thread:                ; preds = %sw.bb23.i, %sw.epilog.i.gfx_v9_0_set_gds_init.exit.thread_crit_edge, %sw.epilog.thread.i
  %.sink = phi i32 [ 0, %sw.epilog.thread.i ], [ 4095, %sw.bb23.i ], [ 639, %sw.epilog.i.gfx_v9_0_set_gds_init.exit.thread_crit_edge ]
  %gds_compute_max_wave_id28.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 3
  %33 = ptrtoint ptr %gds_compute_max_wave_id28.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %.sink, ptr %gds_compute_max_wave_id28.i, align 4
  %gws_size.i26 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 1
  %34 = ptrtoint ptr %gws_size.i26 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 64, ptr %gws_size.i26, align 4
  %oa_size.i27 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 2
  %35 = ptrtoint ptr %oa_size.i27 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 16, ptr %oa_size.i27, align 8
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit:                       ; preds = %sw.default29.i, %if.else.i, %if.then.i, %sw.bb13.i
  %gws_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 1
  %36 = ptrtoint ptr %gws_size.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 64, ptr %gws_size.i, align 4
  %oa_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114, i32 2
  %37 = ptrtoint ptr %oa_size.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 16, ptr %oa_size.i, align 8
  %38 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values.394)
  switch i32 %22, label %gfx_v9_0_set_gds_init.exit.gfx_v9_0_set_rlc_funcs.exit_crit_edge [
    i32 589825, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge
    i32 590337, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge32
    i32 590848, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge33
    i32 590338, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge34
    i32 590080, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge35
    i32 590849, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge36
    i32 590592, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge37
    i32 590850, label %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge38
  ]

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge38:   ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge37:   ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge36:   ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge35:   ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge34:   ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge33:   ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge32:   ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge:     ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb.i

gfx_v9_0_set_gds_init.exit.gfx_v9_0_set_rlc_funcs.exit_crit_edge: ; preds = %gfx_v9_0_set_gds_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_set_rlc_funcs.exit

sw.bb.i:                                          ; preds = %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge, %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge32, %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge33, %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge34, %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge35, %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge36, %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge37, %gfx_v9_0_set_gds_init.exit.sw.bb.i_crit_edge38, %gfx_v9_0_set_gds_init.exit.thread
  %funcs.i24 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %39 = ptrtoint ptr %funcs.i24 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @gfx_v9_0_rlc_funcs, ptr %funcs.i24, align 4
  br label %gfx_v9_0_set_rlc_funcs.exit

gfx_v9_0_set_rlc_funcs.exit:                      ; preds = %sw.bb.i, %gfx_v9_0_set_gds_init.exit.gfx_v9_0_set_rlc_funcs.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_late_init(ptr noundef %handle) #0 align 64 {
entry:
  %ib.i.i = alloca %struct.amdgpu_ib, align 8
  %f.i.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %priv_reg_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %call = tail call i32 @amdgpu_irq_get(ptr noundef %handle, ptr noundef %priv_reg_irq, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %priv_inst_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %call2 = tail call i32 @amdgpu_irq_get(ptr noundef %handle, ptr noundef %priv_inst_irq, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %in_suspend.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 137
  %0 = ptrtoint ptr %in_suspend.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %in_suspend.i, align 1, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end5.if.end4.i_crit_edge

if.end5.if.end4.i_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

land.lhs.true.i:                                  ; preds = %if.end5
  %gds.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 114
  %2 = ptrtoint ptr %gds.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gds.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool1.not.i = icmp eq i32 %3, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.end4.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end4.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %compute_ring.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38
  %ras1.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 113, i32 34, i32 1
  %4 = ptrtoint ptr %ras1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ras1.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i.i, label %if.then.i.if.end4.i_crit_edge, label %amdgpu_ras_is_supported.exit.i.i

if.then.i.if.end4.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

amdgpu_ras_is_supported.exit.i.i:                 ; preds = %if.then.i
  %ras_enabled.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 167
  %6 = ptrtoint ptr %ras_enabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ras_enabled.i.i.i, align 8
  %8 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i.i, label %amdgpu_ras_is_supported.exit.i.i.if.end4.i_crit_edge, label %if.end.i.i

amdgpu_ras_is_supported.exit.i.i.if.end4.i_crit_edge: ; preds = %amdgpu_ras_is_supported.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.end.i.i:                                       ; preds = %amdgpu_ras_is_supported.exit.i.i
  %call1.i.i = tail call i32 @amdgpu_ring_alloc(ptr noundef %compute_ring.i.i, i32 noundef 7) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.end4.i.i, label %gfx_v9_0_do_edc_gds_workarounds.exit.thread77.i

gfx_v9_0_do_edc_gds_workarounds.exit.thread77.i:  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %name.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 29
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.26, ptr noundef %name.i.i, i32 noundef %call1.i.i) #15
  br label %cleanup

if.end4.i.i:                                      ; preds = %if.end.i.i
  %virt.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %9 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %virt.i.i, align 8
  %and.i.i = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool5.not.i.i, label %if.end4.i.i.cond.false.i.i_crit_edge, label %land.lhs.true.i.i

if.end4.i.i.cond.false.i.i_crit_edge:             ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true.i.i:                                ; preds = %if.end4.i.i
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %11 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %funcs.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %12, null
  br i1 %tobool7.not.i.i, label %land.lhs.true.i.i.cond.false.i.i_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i.i.cond.false.i.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %12, i32 0, i32 12
  %13 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool12.not.i.i = icmp eq ptr %14, null
  br i1 %tobool12.not.i.i, label %land.lhs.true8.i.i.cond.false.i.i_crit_edge, label %cond.true.i.i

land.lhs.true8.i.i.cond.false.i.i_crit_edge:      ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx17.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %15 = ptrtoint ptr %arrayidx17.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx17.i.i, align 8
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  %add.i.i = add i32 %18, 4864
  tail call void %14(ptr noundef %handle, i32 noundef %add.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %land.lhs.true8.i.i.cond.false.i.i_crit_edge, %land.lhs.true.i.i.cond.false.i.i_crit_edge, %if.end4.i.i.cond.false.i.i_crit_edge
  %arrayidx21.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx21.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx21.i.i, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add24.i.i = add i32 %22, 4864
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add24.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.true.i.i
  %23 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %virt.i.i, align 8
  %and27.i.i = and i32 %24, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i.i)
  %tobool28.not.i.i = icmp eq i32 %and27.i.i, 0
  br i1 %tobool28.not.i.i, label %cond.end.i.i.cond.false50.i.i_crit_edge, label %land.lhs.true29.i.i

cond.end.i.i.cond.false50.i.i_crit_edge:          ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50.i.i

land.lhs.true29.i.i:                              ; preds = %cond.end.i.i
  %funcs32.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %25 = ptrtoint ptr %funcs32.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %funcs32.i.i, align 4
  %tobool33.not.i.i = icmp eq ptr %26, null
  br i1 %tobool33.not.i.i, label %land.lhs.true29.i.i.cond.false50.i.i_crit_edge, label %land.lhs.true34.i.i

land.lhs.true29.i.i.cond.false50.i.i_crit_edge:   ; preds = %land.lhs.true29.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50.i.i

land.lhs.true34.i.i:                              ; preds = %land.lhs.true29.i.i
  %sriov_wreg38.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %26, i32 0, i32 12
  %27 = ptrtoint ptr %sriov_wreg38.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sriov_wreg38.i.i, align 4
  %tobool39.not.i.i = icmp eq ptr %28, null
  br i1 %tobool39.not.i.i, label %land.lhs.true34.i.i.cond.false50.i.i_crit_edge, label %cond.true40.i.i

land.lhs.true34.i.i.cond.false50.i.i_crit_edge:   ; preds = %land.lhs.true34.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50.i.i

cond.true40.i.i:                                  ; preds = %land.lhs.true34.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx46.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %29 = ptrtoint ptr %arrayidx46.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx46.i.i, align 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %add49.i.i = add i32 %32, 4865
  %33 = ptrtoint ptr %gds.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %gds.i, align 8
  tail call void %28(ptr noundef %handle, i32 noundef %add49.i.i, i32 noundef %34, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end58.i.i

cond.false50.i.i:                                 ; preds = %land.lhs.true34.i.i.cond.false50.i.i_crit_edge, %land.lhs.true29.i.i.cond.false50.i.i_crit_edge, %cond.end.i.i.cond.false50.i.i_crit_edge
  %arrayidx52.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %35 = ptrtoint ptr %arrayidx52.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx52.i.i, align 8
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %36, align 4
  %add55.i.i = add i32 %38, 4865
  %39 = ptrtoint ptr %gds.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %gds.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add55.i.i, i32 noundef %40, i32 noundef 0) #15
  br label %cond.end58.i.i

cond.end58.i.i:                                   ; preds = %cond.false50.i.i, %cond.true40.i.i
  %count_dw.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 11
  %41 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %count_dw.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %42)
  %cmp.i.i.i = icmp slt i32 %42, 1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %cond.end58.i.i.amdgpu_ring_write.exit.i.i_crit_edge

cond.end58.i.i.amdgpu_ring_write.exit.i.i_crit_edge: ; preds = %cond.end58.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit.i.i

if.then.i.i.i:                                    ; preds = %cond.end58.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit.i.i

amdgpu_ring_write.exit.i.i:                       ; preds = %if.then.i.i.i, %cond.end58.i.i.amdgpu_ring_write.exit.i.i_crit_edge
  %ring1.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 5
  %43 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ring1.i.i.i, align 4
  %wptr.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 7
  %45 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %wptr.i.i.i, align 8
  %inc.i.i.i = add i64 %46, 1
  store i64 %inc.i.i.i, ptr %wptr.i.i.i, align 8
  %buf_mask.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 14
  %47 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %buf_mask.i.i.i, align 8
  %49 = trunc i64 %46 to i32
  %idxprom.i.i.i = and i32 %48, %49
  %arrayidx.i.i.i = getelementptr i32, ptr %44, i32 %idxprom.i.i.i
  %50 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile i32 -1073393664, ptr %arrayidx.i.i.i, align 4
  %ptr_mask.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 13
  %51 = ptrtoint ptr %ptr_mask.i.i.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %ptr_mask.i.i.i, align 8
  %53 = load i64, ptr %wptr.i.i.i, align 8
  %and3.i.i.i = and i64 %53, %52
  store i64 %and3.i.i.i, ptr %wptr.i.i.i, align 8
  %54 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %count_dw.i.i.i, align 8
  %dec.i.i.i = add i32 %55, -1
  store i32 %dec.i.i.i, ptr %count_dw.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i.i.i)
  %cmp.i155.i.i = icmp slt i32 %dec.i.i.i, 1
  br i1 %cmp.i155.i.i, label %if.then.i156.i.i, label %amdgpu_ring_write.exit.i.i.amdgpu_ring_write.exit166.i.i_crit_edge

amdgpu_ring_write.exit.i.i.amdgpu_ring_write.exit166.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit166.i.i

if.then.i156.i.i:                                 ; preds = %amdgpu_ring_write.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit166.i.i

amdgpu_ring_write.exit166.i.i:                    ; preds = %if.then.i156.i.i, %amdgpu_ring_write.exit.i.i.amdgpu_ring_write.exit166.i.i_crit_edge
  %56 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ring1.i.i.i, align 4
  %58 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %wptr.i.i.i, align 8
  %inc.i159.i.i = add i64 %59, 1
  store i64 %inc.i159.i.i, ptr %wptr.i.i.i, align 8
  %60 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %buf_mask.i.i.i, align 8
  %62 = trunc i64 %59 to i32
  %idxprom.i161.i.i = and i32 %61, %62
  %arrayidx.i162.i.i = getelementptr i32, ptr %57, i32 %idxprom.i161.i.i
  %63 = ptrtoint ptr %arrayidx.i162.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile i32 -1072693248, ptr %arrayidx.i162.i.i, align 4
  %64 = ptrtoint ptr %ptr_mask.i.i.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %ptr_mask.i.i.i, align 8
  %66 = load i64, ptr %wptr.i.i.i, align 8
  %and3.i164.i.i = and i64 %66, %65
  store i64 %and3.i164.i.i, ptr %wptr.i.i.i, align 8
  %67 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %count_dw.i.i.i, align 8
  %dec.i165.i.i = add i32 %68, -1
  store i32 %dec.i165.i.i, ptr %count_dw.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i165.i.i)
  %cmp.i168.i.i = icmp slt i32 %dec.i165.i.i, 1
  br i1 %cmp.i168.i.i, label %if.then.i169.i.i, label %amdgpu_ring_write.exit166.i.i.amdgpu_ring_write.exit179.i.i_crit_edge

amdgpu_ring_write.exit166.i.i.amdgpu_ring_write.exit179.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit166.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit179.i.i

if.then.i169.i.i:                                 ; preds = %amdgpu_ring_write.exit166.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit179.i.i

amdgpu_ring_write.exit179.i.i:                    ; preds = %if.then.i169.i.i, %amdgpu_ring_write.exit166.i.i.amdgpu_ring_write.exit179.i.i_crit_edge
  %69 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ring1.i.i.i, align 4
  %71 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %wptr.i.i.i, align 8
  %inc.i172.i.i = add i64 %72, 1
  store i64 %inc.i172.i.i, ptr %wptr.i.i.i, align 8
  %73 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %buf_mask.i.i.i, align 8
  %75 = trunc i64 %72 to i32
  %idxprom.i174.i.i = and i32 %74, %75
  %arrayidx.i175.i.i = getelementptr i32, ptr %70, i32 %idxprom.i174.i.i
  %76 = ptrtoint ptr %arrayidx.i175.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile i32 0, ptr %arrayidx.i175.i.i, align 4
  %77 = ptrtoint ptr %ptr_mask.i.i.i to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %ptr_mask.i.i.i, align 8
  %79 = load i64, ptr %wptr.i.i.i, align 8
  %and3.i177.i.i = and i64 %79, %78
  store i64 %and3.i177.i.i, ptr %wptr.i.i.i, align 8
  %80 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %count_dw.i.i.i, align 8
  %dec.i178.i.i = add i32 %81, -1
  store i32 %dec.i178.i.i, ptr %count_dw.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i178.i.i)
  %cmp.i181.i.i = icmp slt i32 %dec.i178.i.i, 1
  br i1 %cmp.i181.i.i, label %if.then.i182.i.i, label %amdgpu_ring_write.exit179.i.i.amdgpu_ring_write.exit192.i.i_crit_edge

amdgpu_ring_write.exit179.i.i.amdgpu_ring_write.exit192.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit179.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit192.i.i

if.then.i182.i.i:                                 ; preds = %amdgpu_ring_write.exit179.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit192.i.i

amdgpu_ring_write.exit192.i.i:                    ; preds = %if.then.i182.i.i, %amdgpu_ring_write.exit179.i.i.amdgpu_ring_write.exit192.i.i_crit_edge
  %82 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ring1.i.i.i, align 4
  %84 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %wptr.i.i.i, align 8
  %inc.i185.i.i = add i64 %85, 1
  store i64 %inc.i185.i.i, ptr %wptr.i.i.i, align 8
  %86 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %buf_mask.i.i.i, align 8
  %88 = trunc i64 %85 to i32
  %idxprom.i187.i.i = and i32 %87, %88
  %arrayidx.i188.i.i = getelementptr i32, ptr %83, i32 %idxprom.i187.i.i
  %89 = ptrtoint ptr %arrayidx.i188.i.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store volatile i32 0, ptr %arrayidx.i188.i.i, align 4
  %90 = ptrtoint ptr %ptr_mask.i.i.i to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %ptr_mask.i.i.i, align 8
  %92 = load i64, ptr %wptr.i.i.i, align 8
  %and3.i190.i.i = and i64 %92, %91
  store i64 %and3.i190.i.i, ptr %wptr.i.i.i, align 8
  %93 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %count_dw.i.i.i, align 8
  %dec.i191.i.i = add i32 %94, -1
  store i32 %dec.i191.i.i, ptr %count_dw.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i191.i.i)
  %cmp.i194.i.i = icmp slt i32 %dec.i191.i.i, 1
  br i1 %cmp.i194.i.i, label %if.then.i195.i.i, label %amdgpu_ring_write.exit192.i.i.amdgpu_ring_write.exit205.i.i_crit_edge

amdgpu_ring_write.exit192.i.i.amdgpu_ring_write.exit205.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit192.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit205.i.i

if.then.i195.i.i:                                 ; preds = %amdgpu_ring_write.exit192.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit205.i.i

amdgpu_ring_write.exit205.i.i:                    ; preds = %if.then.i195.i.i, %amdgpu_ring_write.exit192.i.i.amdgpu_ring_write.exit205.i.i_crit_edge
  %95 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %ring1.i.i.i, align 4
  %97 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %wptr.i.i.i, align 8
  %inc.i198.i.i = add i64 %98, 1
  store i64 %inc.i198.i.i, ptr %wptr.i.i.i, align 8
  %99 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %buf_mask.i.i.i, align 8
  %101 = trunc i64 %98 to i32
  %idxprom.i200.i.i = and i32 %100, %101
  %arrayidx.i201.i.i = getelementptr i32, ptr %96, i32 %idxprom.i200.i.i
  %102 = ptrtoint ptr %arrayidx.i201.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store volatile i32 0, ptr %arrayidx.i201.i.i, align 4
  %103 = ptrtoint ptr %ptr_mask.i.i.i to i32
  call void @__asan_load8_noabort(i32 %103)
  %104 = load i64, ptr %ptr_mask.i.i.i, align 8
  %105 = load i64, ptr %wptr.i.i.i, align 8
  %and3.i203.i.i = and i64 %105, %104
  store i64 %and3.i203.i.i, ptr %wptr.i.i.i, align 8
  %106 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %count_dw.i.i.i, align 8
  %dec.i204.i.i = add i32 %107, -1
  store i32 %dec.i204.i.i, ptr %count_dw.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i204.i.i)
  %cmp.i207.i.i = icmp slt i32 %dec.i204.i.i, 1
  br i1 %cmp.i207.i.i, label %if.then.i208.i.i, label %amdgpu_ring_write.exit205.i.i.amdgpu_ring_write.exit218.i.i_crit_edge

amdgpu_ring_write.exit205.i.i.amdgpu_ring_write.exit218.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit205.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit218.i.i

if.then.i208.i.i:                                 ; preds = %amdgpu_ring_write.exit205.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit218.i.i

amdgpu_ring_write.exit218.i.i:                    ; preds = %if.then.i208.i.i, %amdgpu_ring_write.exit205.i.i.amdgpu_ring_write.exit218.i.i_crit_edge
  %108 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %ring1.i.i.i, align 4
  %110 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %110)
  %111 = load i64, ptr %wptr.i.i.i, align 8
  %inc.i211.i.i = add i64 %111, 1
  store i64 %inc.i211.i.i, ptr %wptr.i.i.i, align 8
  %112 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %buf_mask.i.i.i, align 8
  %114 = trunc i64 %111 to i32
  %idxprom.i213.i.i = and i32 %113, %114
  %arrayidx.i214.i.i = getelementptr i32, ptr %109, i32 %idxprom.i213.i.i
  %115 = ptrtoint ptr %arrayidx.i214.i.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store volatile i32 0, ptr %arrayidx.i214.i.i, align 4
  %116 = ptrtoint ptr %ptr_mask.i.i.i to i32
  call void @__asan_load8_noabort(i32 %116)
  %117 = load i64, ptr %ptr_mask.i.i.i, align 8
  %118 = load i64, ptr %wptr.i.i.i, align 8
  %and3.i216.i.i = and i64 %118, %117
  store i64 %and3.i216.i.i, ptr %wptr.i.i.i, align 8
  %119 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %count_dw.i.i.i, align 8
  %dec.i217.i.i = add i32 %120, -1
  store i32 %dec.i217.i.i, ptr %count_dw.i.i.i, align 8
  %121 = ptrtoint ptr %gds.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %gds.i, align 8
  %or.i.i = or i32 %122, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i217.i.i)
  %cmp.i220.i.i = icmp slt i32 %dec.i217.i.i, 1
  br i1 %cmp.i220.i.i, label %if.then.i221.i.i, label %amdgpu_ring_write.exit218.i.i.amdgpu_ring_write.exit231.i.i_crit_edge

amdgpu_ring_write.exit218.i.i.amdgpu_ring_write.exit231.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit218.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit231.i.i

if.then.i221.i.i:                                 ; preds = %amdgpu_ring_write.exit218.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit231.i.i

amdgpu_ring_write.exit231.i.i:                    ; preds = %if.then.i221.i.i, %amdgpu_ring_write.exit218.i.i.amdgpu_ring_write.exit231.i.i_crit_edge
  %123 = ptrtoint ptr %ring1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %ring1.i.i.i, align 4
  %125 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %wptr.i.i.i, align 8
  %inc.i224.i.i = add i64 %126, 1
  store i64 %inc.i224.i.i, ptr %wptr.i.i.i, align 8
  %127 = ptrtoint ptr %buf_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %buf_mask.i.i.i, align 8
  %129 = trunc i64 %126 to i32
  %idxprom.i226.i.i = and i32 %128, %129
  %arrayidx.i227.i.i = getelementptr i32, ptr %124, i32 %idxprom.i226.i.i
  %130 = ptrtoint ptr %arrayidx.i227.i.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store volatile i32 %or.i.i, ptr %arrayidx.i227.i.i, align 4
  %131 = ptrtoint ptr %ptr_mask.i.i.i to i32
  call void @__asan_load8_noabort(i32 %131)
  %132 = load i64, ptr %ptr_mask.i.i.i, align 8
  %133 = load i64, ptr %wptr.i.i.i, align 8
  %and3.i229.i.i = and i64 %133, %132
  store i64 %and3.i229.i.i, ptr %wptr.i.i.i, align 8
  %134 = ptrtoint ptr %count_dw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %count_dw.i.i.i, align 8
  %dec.i230.i.i = add i32 %135, -1
  store i32 %dec.i230.i.i, ptr %count_dw.i.i.i, align 8
  tail call void @amdgpu_ring_commit(ptr noundef %compute_ring.i.i) #15
  %usec_timeout.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 11
  %136 = ptrtoint ptr %usec_timeout.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %usec_timeout.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %137)
  %cmp234.i.i = icmp sgt i32 %137, 0
  br i1 %cmp234.i.i, label %for.body.lr.ph.i.i, label %amdgpu_ring_write.exit231.i.i.for.end.i.i_crit_edge

amdgpu_ring_write.exit231.i.i.for.end.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit231.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.body.lr.ph.i.i:                               ; preds = %amdgpu_ring_write.exit231.i.i
  %rptr_offs.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 6
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end64.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.0235.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %if.end64.i.i.for.body.i.i_crit_edge ]
  %138 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %138)
  %139 = load i64, ptr %wptr.i.i.i, align 8
  %140 = ptrtoint ptr %compute_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %compute_ring.i.i, align 8
  %wb1.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %141, i32 0, i32 70, i32 1
  %142 = ptrtoint ptr %wb1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %wb1.i.i.i, align 4
  %144 = ptrtoint ptr %rptr_offs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %rptr_offs.i.i.i, align 8
  %arrayidx.i232.i.i = getelementptr i32, ptr %143, i32 %145
  %146 = ptrtoint ptr %arrayidx.i232.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load volatile i32, ptr %arrayidx.i232.i.i, align 4
  %conv.i.i.i = zext i32 %147 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %139, i64 %conv.i.i.i)
  %cmp62.i.i = icmp eq i64 %139, %conv.i.i.i
  br i1 %cmp62.i.i, label %for.body.i.i.for.end.i.i_crit_edge, label %if.end64.i.i

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

if.end64.i.i:                                     ; preds = %for.body.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %148 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %148(i32 noundef 214748) #15
  %inc.i.i = add nuw nsw i32 %i.0235.i.i, 1
  %149 = ptrtoint ptr %usec_timeout.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %usec_timeout.i.i, align 8
  %cmp.i.i = icmp slt i32 %inc.i.i, %150
  br i1 %cmp.i.i, label %if.end64.i.i.for.body.i.i_crit_edge, label %if.end64.i.i.for.end.i.i_crit_edge

if.end64.i.i.for.end.i.i_crit_edge:               ; preds = %if.end64.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

if.end64.i.i.for.body.i.i_crit_edge:              ; preds = %if.end64.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

for.end.i.i:                                      ; preds = %if.end64.i.i.for.end.i.i_crit_edge, %for.body.i.i.for.end.i.i_crit_edge, %amdgpu_ring_write.exit231.i.i.for.end.i.i_crit_edge
  %tobool2.not.i = phi i1 [ false, %amdgpu_ring_write.exit231.i.i.for.end.i.i_crit_edge ], [ %cmp62.i.i, %for.body.i.i.for.end.i.i_crit_edge ], [ %cmp62.i.i, %if.end64.i.i.for.end.i.i_crit_edge ]
  %spec.select.i.i = phi i32 [ -110, %amdgpu_ring_write.exit231.i.i.for.end.i.i_crit_edge ], [ -110, %if.end64.i.i.for.end.i.i_crit_edge ], [ 0, %for.body.i.i.for.end.i.i_crit_edge ]
  %151 = ptrtoint ptr %virt.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %virt.i.i, align 8
  %and71.i.i = and i32 %152, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and71.i.i)
  %tobool72.not.i.i = icmp eq i32 %and71.i.i, 0
  br i1 %tobool72.not.i.i, label %for.end.i.i.cond.false94.i.i_crit_edge, label %land.lhs.true73.i.i

for.end.i.i.cond.false94.i.i_crit_edge:           ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false94.i.i

land.lhs.true73.i.i:                              ; preds = %for.end.i.i
  %funcs76.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %153 = ptrtoint ptr %funcs76.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %funcs76.i.i, align 4
  %tobool77.not.i.i = icmp eq ptr %154, null
  br i1 %tobool77.not.i.i, label %land.lhs.true73.i.i.cond.false94.i.i_crit_edge, label %land.lhs.true78.i.i

land.lhs.true73.i.i.cond.false94.i.i_crit_edge:   ; preds = %land.lhs.true73.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false94.i.i

land.lhs.true78.i.i:                              ; preds = %land.lhs.true73.i.i
  %sriov_wreg82.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %154, i32 0, i32 12
  %155 = ptrtoint ptr %sriov_wreg82.i.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %sriov_wreg82.i.i, align 4
  %tobool83.not.i.i = icmp eq ptr %156, null
  br i1 %tobool83.not.i.i, label %land.lhs.true78.i.i.cond.false94.i.i_crit_edge, label %cond.true84.i.i

land.lhs.true78.i.i.cond.false94.i.i_crit_edge:   ; preds = %land.lhs.true78.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false94.i.i

cond.true84.i.i:                                  ; preds = %land.lhs.true78.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx90.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %157 = ptrtoint ptr %arrayidx90.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %arrayidx90.i.i, align 8
  %159 = ptrtoint ptr %158 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %158, align 4
  %add93.i.i = add i32 %160, 4865
  tail call void %156(ptr noundef %handle, i32 noundef %add93.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %gfx_v9_0_do_edc_gds_workarounds.exit.i

cond.false94.i.i:                                 ; preds = %land.lhs.true78.i.i.cond.false94.i.i_crit_edge, %land.lhs.true73.i.i.cond.false94.i.i_crit_edge, %for.end.i.i.cond.false94.i.i_crit_edge
  %arrayidx96.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %161 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %arrayidx96.i.i, align 8
  %163 = ptrtoint ptr %162 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %162, align 4
  %add99.i.i = add i32 %164, 4865
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add99.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %gfx_v9_0_do_edc_gds_workarounds.exit.i

gfx_v9_0_do_edc_gds_workarounds.exit.i:           ; preds = %cond.false94.i.i, %cond.true84.i.i
  br i1 %tobool2.not.i, label %gfx_v9_0_do_edc_gds_workarounds.exit.i.if.end4.i_crit_edge, label %gfx_v9_0_do_edc_gds_workarounds.exit.i.cleanup_crit_edge

gfx_v9_0_do_edc_gds_workarounds.exit.i.cleanup_crit_edge: ; preds = %gfx_v9_0_do_edc_gds_workarounds.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

gfx_v9_0_do_edc_gds_workarounds.exit.i.if.end4.i_crit_edge: ; preds = %gfx_v9_0_do_edc_gds_workarounds.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.end4.i:                                        ; preds = %gfx_v9_0_do_edc_gds_workarounds.exit.i.if.end4.i_crit_edge, %amdgpu_ras_is_supported.exit.i.i.if.end4.i_crit_edge, %if.then.i.if.end4.i_crit_edge, %land.lhs.true.i.if.end4.i_crit_edge, %if.end5.if.end4.i_crit_edge
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %165 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590850, i32 %166)
  %cmp.i = icmp eq i32 %166, 590850
  br i1 %cmp.i, label %if.then6.i, label %if.else.i

if.then6.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  %call7.i = tail call i32 @gfx_v9_4_2_do_edc_gpr_workarounds(ptr noundef %handle) #15
  br label %if.end9.i

if.else.i:                                        ; preds = %if.end4.i
  %compute_ring.i61.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ib.i.i) #15
  %167 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib.i.i, i32 0, i32 1
  %168 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib.i.i, i32 0, i32 2
  %169 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib.i.i, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %f.i.i) #15
  %170 = ptrtoint ptr %f.i.i to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr null, ptr %f.i.i, align 4
  %config.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1
  %171 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %config.i.i, align 8
  %max_cu_per_sh.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 2
  %173 = ptrtoint ptr %max_cu_per_sh.i.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %max_cu_per_sh.i.i, align 8
  %mul.i.i = mul i32 %174, %172
  %max_sh_per_se.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 3
  %175 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %max_sh_per_se.i.i, align 4
  %mul6.i.i = mul i32 %mul.i.i, %176
  %add.i62.i = add i32 %172, 6
  %ras1.i.i63.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 113, i32 34, i32 1
  %177 = ptrtoint ptr %ras1.i.i63.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %ras1.i.i63.i, align 8
  %tobool.not.i.i64.i = icmp eq ptr %178, null
  br i1 %tobool.not.i.i64.i, label %if.else.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, label %amdgpu_ras_is_supported.exit.i67.i

if.else.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

amdgpu_ras_is_supported.exit.i67.i:               ; preds = %if.else.i
  %ras_enabled.i.i65.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 167
  %179 = ptrtoint ptr %ras_enabled.i.i65.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %ras_enabled.i.i65.i, align 8
  %181 = and i32 %180, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %181)
  %tobool.not.i66.i = icmp eq i32 %181, 0
  br i1 %tobool.not.i66.i, label %amdgpu_ras_is_supported.exit.i67.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, label %if.end.i68.i

amdgpu_ras_is_supported.exit.i67.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge: ; preds = %amdgpu_ras_is_supported.exit.i67.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

if.end.i68.i:                                     ; preds = %amdgpu_ras_is_supported.exit.i67.i
  %ready.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 0, i32 3, i32 17
  %182 = ptrtoint ptr %ready.i.i to i32
  call void @__asan_load1_noabort(i32 %182)
  %183 = load i8, ptr %ready.i.i, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %183)
  %tobool10.not.i.i = icmp eq i8 %183, 0
  br i1 %tobool10.not.i.i, label %if.end.i68.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, label %if.end12.i.i

if.end.i68.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge: ; preds = %if.end.i68.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

if.end12.i.i:                                     ; preds = %if.end.i68.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 590849, i32 %166)
  %cmp.i69.i = icmp eq i32 %166, 590849
  %..i.i = select i1 %cmp.i69.i, i32 2192, i32 152
  %vgpr_init_compute_shader_arcturus.vgpr_init_compute_shader.i.i = select i1 %cmp.i69.i, ptr @vgpr_init_compute_shader_arcturus, ptr @vgpr_init_compute_shader
  %vgpr_init_regs_arcturus.vgpr_init_regs.i.i = select i1 %cmp.i69.i, ptr @vgpr_init_regs_arcturus, ptr @vgpr_init_regs
  %184 = mul i32 %add.i62.i, 36
  %add34.i.i = add i32 %184, 387
  %and.i70.i = and i32 %add34.i.i, -256
  %add35.i.i = add nuw nsw i32 %..i.i, 255
  %and36.i.i = and i32 %add35.i.i, 2304
  %add37.i.i = add i32 %and.i70.i, %and36.i.i
  %add38.i.i = or i32 %add37.i.i, 56
  %185 = call ptr @memset(ptr %ib.i.i, i32 0, i32 24)
  %call39.i.i = call i32 @amdgpu_ib_get(ptr noundef %handle, ptr noundef null, i32 noundef %add38.i.i, i32 noundef 2, ptr noundef nonnull %ib.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39.i.i)
  %tobool40.not.i.i = icmp eq i32 %call39.i.i, 0
  br i1 %tobool40.not.i.i, label %for.cond.preheader.i.i, label %if.then41.i.i

for.cond.preheader.i.i:                           ; preds = %if.end12.i.i
  %div437.i.i = lshr exact i32 %..i.i, 2
  %div45439.i.i = lshr exact i32 %and.i70.i, 2
  br label %for.body.i72.i

if.then41.i.i:                                    ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.27, i32 noundef %call39.i.i) #15
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

for.cond48.preheader.i.i:                         ; preds = %for.body.i72.i
  %div53438.i.i = lshr exact i32 %add37.i.i, 2
  %186 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %169, align 8
  %arrayidx55.i.i = getelementptr i32, ptr %187, i32 %div53438.i.i
  %188 = ptrtoint ptr %arrayidx55.i.i to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 -1334050816, ptr %arrayidx55.i.i, align 4
  %189 = load ptr, ptr %169, align 8
  %add54.1.i.i = or i32 %div53438.i.i, 1
  %arrayidx55.1.i.i = getelementptr i32, ptr %189, i32 %add54.1.i.i
  %190 = ptrtoint ptr %arrayidx55.1.i.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 -1098907393, ptr %arrayidx55.1.i.i, align 4
  %191 = load ptr, ptr %169, align 8
  %add54.2.i.i = or i32 %div53438.i.i, 2
  %arrayidx55.2.i.i = getelementptr i32, ptr %191, i32 %add54.2.i.i
  %192 = ptrtoint ptr %arrayidx55.2.i.i to i32
  call void @__asan_store4_noabort(i32 %192)
  store i32 95, ptr %arrayidx55.2.i.i, align 4
  %193 = load ptr, ptr %169, align 8
  %add54.3.i.i = or i32 %div53438.i.i, 3
  %arrayidx55.3.i.i = getelementptr i32, ptr %193, i32 %add54.3.i.i
  %194 = ptrtoint ptr %arrayidx55.3.i.i to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 -1092288384, ptr %arrayidx55.3.i.i, align 4
  %195 = load ptr, ptr %169, align 8
  %add54.4.i.i = or i32 %div53438.i.i, 4
  %arrayidx55.4.i.i = getelementptr i32, ptr %195, i32 %add54.4.i.i
  %196 = ptrtoint ptr %arrayidx55.4.i.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store i32 -1098830747, ptr %arrayidx55.4.i.i, align 4
  %197 = load ptr, ptr %169, align 8
  %add54.5.i.i = or i32 %div53438.i.i, 5
  %arrayidx55.5.i.i = getelementptr i32, ptr %197, i32 %add54.5.i.i
  %198 = ptrtoint ptr %arrayidx55.5.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 -1098765211, ptr %arrayidx55.5.i.i, align 4
  %199 = load ptr, ptr %169, align 8
  %add54.6.i.i = or i32 %div53438.i.i, 6
  %arrayidx55.6.i.i = getelementptr i32, ptr %199, i32 %add54.6.i.i
  %200 = ptrtoint ptr %arrayidx55.6.i.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 -1098699675, ptr %arrayidx55.6.i.i, align 4
  %201 = load ptr, ptr %169, align 8
  %add54.7.i.i = or i32 %div53438.i.i, 7
  %arrayidx55.7.i.i = getelementptr i32, ptr %201, i32 %add54.7.i.i
  %202 = ptrtoint ptr %arrayidx55.7.i.i to i32
  call void @__asan_store4_noabort(i32 %202)
  store i32 -1098634139, ptr %arrayidx55.7.i.i, align 4
  %203 = load ptr, ptr %169, align 8
  %add54.8.i.i = or i32 %div53438.i.i, 8
  %arrayidx55.8.i.i = getelementptr i32, ptr %203, i32 %add54.8.i.i
  %204 = ptrtoint ptr %arrayidx55.8.i.i to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 -1098568603, ptr %arrayidx55.8.i.i, align 4
  %205 = load ptr, ptr %169, align 8
  %add54.9.i.i = or i32 %div53438.i.i, 9
  %arrayidx55.9.i.i = getelementptr i32, ptr %205, i32 %add54.9.i.i
  %206 = ptrtoint ptr %arrayidx55.9.i.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 -1216610299, ptr %arrayidx55.9.i.i, align 4
  %207 = load ptr, ptr %169, align 8
  %add54.10.i.i = or i32 %div53438.i.i, 10
  %arrayidx55.10.i.i = getelementptr i32, ptr %207, i32 %add54.10.i.i
  %208 = ptrtoint ptr %arrayidx55.10.i.i to i32
  call void @__asan_store4_noabort(i32 %208)
  store i32 -2139060992, ptr %arrayidx55.10.i.i, align 4
  %209 = load ptr, ptr %169, align 8
  %add54.11.i.i = or i32 %div53438.i.i, 11
  %arrayidx55.11.i.i = getelementptr i32, ptr %209, i32 %add54.11.i.i
  %210 = ptrtoint ptr %arrayidx55.11.i.i to i32
  call void @__asan_store4_noabort(i32 %210)
  store i32 -1081802760, ptr %arrayidx55.11.i.i, align 4
  %211 = load ptr, ptr %169, align 8
  %add54.12.i.i = or i32 %div53438.i.i, 12
  %arrayidx55.12.i.i = getelementptr i32, ptr %211, i32 %add54.12.i.i
  %212 = ptrtoint ptr %arrayidx55.12.i.i to i32
  call void @__asan_store4_noabort(i32 %212)
  store i32 -1098907520, ptr %arrayidx55.12.i.i, align 4
  %213 = load ptr, ptr %169, align 8
  %add54.13.i.i = or i32 %div53438.i.i, 13
  %arrayidx55.13.i.i = getelementptr i32, ptr %213, i32 %add54.13.i.i
  %214 = ptrtoint ptr %arrayidx55.13.i.i to i32
  call void @__asan_store4_noabort(i32 %214)
  store i32 -1082064896, ptr %arrayidx55.13.i.i, align 4
  %215 = ptrtoint ptr %167 to i32
  call void @__asan_store4_noabort(i32 %215)
  store i32 0, ptr %167, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add.i62.i)
  %cmp60444.i.i = icmp sgt i32 %add.i62.i, 0
  br i1 %cmp60444.i.i, label %for.cond48.preheader.i.i.for.body61.i.i_crit_edge, label %for.cond48.preheader.i.i.for.end86.i.i_crit_edge

for.cond48.preheader.i.i.for.end86.i.i_crit_edge: ; preds = %for.cond48.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end86.i.i

for.cond48.preheader.i.i.for.body61.i.i_crit_edge: ; preds = %for.cond48.preheader.i.i
  br label %for.body61.i.i

for.body.i72.i:                                   ; preds = %for.body.i72.i.for.body.i72.i_crit_edge, %for.cond.preheader.i.i
  %i.0442.i.i = phi i32 [ 0, %for.cond.preheader.i.i ], [ %inc.i71.i, %for.body.i72.i.for.body.i72.i_crit_edge ]
  %arrayidx44.i.i = getelementptr i32, ptr %vgpr_init_compute_shader_arcturus.vgpr_init_compute_shader.i.i, i32 %i.0442.i.i
  %216 = ptrtoint ptr %arrayidx44.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx44.i.i, align 4
  %218 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %169, align 8
  %add46.i.i = add nuw nsw i32 %i.0442.i.i, %div45439.i.i
  %arrayidx47.i.i = getelementptr i32, ptr %219, i32 %add46.i.i
  %220 = ptrtoint ptr %arrayidx47.i.i to i32
  call void @__asan_store4_noabort(i32 %220)
  store i32 %217, ptr %arrayidx47.i.i, align 4
  %inc.i71.i = add nuw nsw i32 %i.0442.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i71.i, %div437.i.i
  br i1 %exitcond.not.i.i, label %for.cond48.preheader.i.i, label %for.body.i72.i.for.body.i72.i_crit_edge

for.body.i72.i.for.body.i72.i_crit_edge:          ; preds = %for.body.i72.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i72.i

for.body61.i.i:                                   ; preds = %for.body61.i.i.for.body61.i.i_crit_edge, %for.cond48.preheader.i.i.for.body61.i.i_crit_edge
  %i.2445.i.i = phi i32 [ %inc85.i.i, %for.body61.i.i.for.body61.i.i_crit_edge ], [ 0, %for.cond48.preheader.i.i.for.body61.i.i_crit_edge ]
  %221 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %169, align 8
  %223 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %167, align 4
  %inc64.i.i = add i32 %224, 1
  store i32 %inc64.i.i, ptr %167, align 4
  %arrayidx65.i.i = getelementptr i32, ptr %222, i32 %224
  %225 = ptrtoint ptr %arrayidx65.i.i to i32
  call void @__asan_store4_noabort(i32 %225)
  store i32 -1073646080, ptr %arrayidx65.i.i, align 4
  %arrayidx66.i.i = getelementptr %struct.soc15_reg_entry, ptr %vgpr_init_regs_arcturus.vgpr_init_regs.i.i, i32 %i.2445.i.i
  %226 = ptrtoint ptr %arrayidx66.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %arrayidx66.i.i, align 4
  %inst.i.i = getelementptr %struct.soc15_reg_entry, ptr %vgpr_init_regs_arcturus.vgpr_init_regs.i.i, i32 %i.2445.i.i, i32 1
  %228 = ptrtoint ptr %inst.i.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %inst.i.i, align 4
  %arrayidx69.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 %227, i32 %229
  %230 = ptrtoint ptr %arrayidx69.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %arrayidx69.i.i, align 4
  %seg.i.i = getelementptr %struct.soc15_reg_entry, ptr %vgpr_init_regs_arcturus.vgpr_init_regs.i.i, i32 %i.2445.i.i, i32 2
  %232 = ptrtoint ptr %seg.i.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %seg.i.i, align 4
  %arrayidx71.i.i = getelementptr i32, ptr %231, i32 %233
  %234 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %arrayidx71.i.i, align 4
  %reg_offset73.i.i = getelementptr %struct.soc15_reg_entry, ptr %vgpr_init_regs_arcturus.vgpr_init_regs.i.i, i32 %i.2445.i.i, i32 3
  %236 = ptrtoint ptr %reg_offset73.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %reg_offset73.i.i, align 4
  %add74.i.i = add i32 %235, -11264
  %sub.i.i = add i32 %add74.i.i, %237
  %238 = load ptr, ptr %169, align 8
  %239 = load i32, ptr %167, align 4
  %inc77.i.i = add i32 %239, 1
  store i32 %inc77.i.i, ptr %167, align 4
  %arrayidx78.i.i = getelementptr i32, ptr %238, i32 %239
  %240 = ptrtoint ptr %arrayidx78.i.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 %sub.i.i, ptr %arrayidx78.i.i, align 4
  %reg_value.i.i = getelementptr %struct.soc15_reg_entry, ptr %vgpr_init_regs_arcturus.vgpr_init_regs.i.i, i32 %i.2445.i.i, i32 4
  %241 = ptrtoint ptr %reg_value.i.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %reg_value.i.i, align 4
  %243 = load ptr, ptr %169, align 8
  %244 = load i32, ptr %167, align 4
  %inc82.i.i = add i32 %244, 1
  store i32 %inc82.i.i, ptr %167, align 4
  %arrayidx83.i.i = getelementptr i32, ptr %243, i32 %244
  %245 = ptrtoint ptr %arrayidx83.i.i to i32
  call void @__asan_store4_noabort(i32 %245)
  store i32 %242, ptr %arrayidx83.i.i, align 4
  %inc85.i.i = add nuw nsw i32 %i.2445.i.i, 1
  %exitcond451.not.i.i = icmp eq i32 %inc85.i.i, %add.i62.i
  br i1 %exitcond451.not.i.i, label %for.body61.i.i.for.end86.i.i_crit_edge, label %for.body61.i.i.for.body61.i.i_crit_edge

for.body61.i.i.for.body61.i.i_crit_edge:          ; preds = %for.body61.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body61.i.i

for.body61.i.i.for.end86.i.i_crit_edge:           ; preds = %for.body61.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end86.i.i

for.end86.i.i:                                    ; preds = %for.body61.i.i.for.end86.i.i_crit_edge, %for.cond48.preheader.i.i.for.end86.i.i_crit_edge
  %246 = ptrtoint ptr %168 to i32
  call void @__asan_load8_noabort(i32 %246)
  %247 = load i64, ptr %168, align 8
  %conv.i.i = zext i32 %and.i70.i to i64
  %add88.i.i = add i64 %247, %conv.i.i
  %shr.i.i = lshr i64 %add88.i.i, 8
  %248 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %169, align 8
  %250 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %167, align 4
  %inc91.i.i = add i32 %251, 1
  store i32 %inc91.i.i, ptr %167, align 4
  %arrayidx92.i.i = getelementptr i32, ptr %249, i32 %251
  %252 = ptrtoint ptr %arrayidx92.i.i to i32
  call void @__asan_store4_noabort(i32 %252)
  store i32 -1073580544, ptr %arrayidx92.i.i, align 4
  %arrayidx94.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %253 = ptrtoint ptr %arrayidx94.i.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %arrayidx94.i.i, align 8
  %255 = ptrtoint ptr %254 to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load i32, ptr %254, align 4
  %sub98.i.i = add i32 %256, -7668
  %257 = load ptr, ptr %169, align 8
  %258 = load i32, ptr %167, align 4
  %inc101.i.i = add i32 %258, 1
  store i32 %inc101.i.i, ptr %167, align 4
  %arrayidx102.i.i = getelementptr i32, ptr %257, i32 %258
  %259 = ptrtoint ptr %arrayidx102.i.i to i32
  call void @__asan_store4_noabort(i32 %259)
  store i32 %sub98.i.i, ptr %arrayidx102.i.i, align 4
  %conv104.i.i = trunc i64 %shr.i.i to i32
  %260 = load ptr, ptr %169, align 8
  %261 = load i32, ptr %167, align 4
  %inc107.i.i = add i32 %261, 1
  store i32 %inc107.i.i, ptr %167, align 4
  %arrayidx108.i.i = getelementptr i32, ptr %260, i32 %261
  %262 = ptrtoint ptr %arrayidx108.i.i to i32
  call void @__asan_store4_noabort(i32 %262)
  store i32 %conv104.i.i, ptr %arrayidx108.i.i, align 4
  %shr109.i.i = lshr i64 %add88.i.i, 40
  %conv111.i.i = trunc i64 %shr109.i.i to i32
  %263 = load ptr, ptr %169, align 8
  %264 = load i32, ptr %167, align 4
  %inc114.i.i = add i32 %264, 1
  store i32 %inc114.i.i, ptr %167, align 4
  %arrayidx115.i.i = getelementptr i32, ptr %263, i32 %264
  %265 = ptrtoint ptr %arrayidx115.i.i to i32
  call void @__asan_store4_noabort(i32 %265)
  store i32 %conv111.i.i, ptr %arrayidx115.i.i, align 4
  %266 = load ptr, ptr %169, align 8
  %267 = load i32, ptr %167, align 4
  %inc118.i.i = add i32 %267, 1
  store i32 %inc118.i.i, ptr %167, align 4
  %arrayidx119.i.i = getelementptr i32, ptr %266, i32 %267
  %268 = ptrtoint ptr %arrayidx119.i.i to i32
  call void @__asan_store4_noabort(i32 %268)
  store i32 -1073539840, ptr %arrayidx119.i.i, align 4
  %mul120.i.i = shl i32 %mul6.i.i, 1
  %269 = load ptr, ptr %169, align 8
  %270 = load i32, ptr %167, align 4
  %inc123.i.i = add i32 %270, 1
  store i32 %inc123.i.i, ptr %167, align 4
  %arrayidx124.i.i = getelementptr i32, ptr %269, i32 %270
  %271 = ptrtoint ptr %arrayidx124.i.i to i32
  call void @__asan_store4_noabort(i32 %271)
  store i32 %mul120.i.i, ptr %arrayidx124.i.i, align 4
  %272 = load ptr, ptr %169, align 8
  %273 = load i32, ptr %167, align 4
  %inc127.i.i = add i32 %273, 1
  store i32 %inc127.i.i, ptr %167, align 4
  %arrayidx128.i.i = getelementptr i32, ptr %272, i32 %273
  %274 = ptrtoint ptr %arrayidx128.i.i to i32
  call void @__asan_store4_noabort(i32 %274)
  store i32 1, ptr %arrayidx128.i.i, align 4
  %275 = load ptr, ptr %169, align 8
  %276 = load i32, ptr %167, align 4
  %inc131.i.i = add i32 %276, 1
  store i32 %inc131.i.i, ptr %167, align 4
  %arrayidx132.i.i = getelementptr i32, ptr %275, i32 %276
  %277 = ptrtoint ptr %arrayidx132.i.i to i32
  call void @__asan_store4_noabort(i32 %277)
  store i32 1, ptr %arrayidx132.i.i, align 4
  %278 = load ptr, ptr %169, align 8
  %279 = load i32, ptr %167, align 4
  %inc135.i.i = add i32 %279, 1
  store i32 %inc135.i.i, ptr %167, align 4
  %arrayidx136.i.i = getelementptr i32, ptr %278, i32 %279
  %280 = ptrtoint ptr %arrayidx136.i.i to i32
  call void @__asan_store4_noabort(i32 %280)
  store i32 1, ptr %arrayidx136.i.i, align 4
  %281 = load ptr, ptr %169, align 8
  %282 = load i32, ptr %167, align 4
  %inc139.i.i = add i32 %282, 1
  store i32 %inc139.i.i, ptr %167, align 4
  %arrayidx140.i.i = getelementptr i32, ptr %281, i32 %282
  %283 = ptrtoint ptr %arrayidx140.i.i to i32
  call void @__asan_store4_noabort(i32 %283)
  store i32 -1073723904, ptr %arrayidx140.i.i, align 4
  %284 = load ptr, ptr %169, align 8
  %285 = load i32, ptr %167, align 4
  %inc143.i.i = add i32 %285, 1
  store i32 %inc143.i.i, ptr %167, align 4
  %arrayidx144.i.i = getelementptr i32, ptr %284, i32 %285
  %286 = ptrtoint ptr %arrayidx144.i.i to i32
  call void @__asan_store4_noabort(i32 %286)
  store i32 1031, ptr %arrayidx144.i.i, align 4
  br i1 %cmp60444.i.i, label %for.end86.i.i.for.body148.i.i_crit_edge, label %for.end86.i.i.for.end179.i.i_crit_edge

for.end86.i.i.for.end179.i.i_crit_edge:           ; preds = %for.end86.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end179.i.i

for.end86.i.i.for.body148.i.i_crit_edge:          ; preds = %for.end86.i.i
  br label %for.body148.i.i

for.body148.i.i:                                  ; preds = %for.body148.i.i.for.body148.i.i_crit_edge, %for.end86.i.i.for.body148.i.i_crit_edge
  %i.3447.i.i = phi i32 [ %inc178.i.i, %for.body148.i.i.for.body148.i.i_crit_edge ], [ 0, %for.end86.i.i.for.body148.i.i_crit_edge ]
  %287 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %169, align 8
  %289 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load i32, ptr %167, align 4
  %inc151.i.i = add i32 %290, 1
  store i32 %inc151.i.i, ptr %167, align 4
  %arrayidx152.i.i = getelementptr i32, ptr %288, i32 %290
  %291 = ptrtoint ptr %arrayidx152.i.i to i32
  call void @__asan_store4_noabort(i32 %291)
  store i32 -1073646080, ptr %arrayidx152.i.i, align 4
  %arrayidx154.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr1_init_regs, i32 0, i32 %i.3447.i.i
  %292 = ptrtoint ptr %arrayidx154.i.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %arrayidx154.i.i, align 4
  %inst158.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr1_init_regs, i32 0, i32 %i.3447.i.i, i32 1
  %294 = ptrtoint ptr %inst158.i.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %inst158.i.i, align 4
  %arrayidx159.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 %293, i32 %295
  %296 = ptrtoint ptr %arrayidx159.i.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %arrayidx159.i.i, align 4
  %seg161.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr1_init_regs, i32 0, i32 %i.3447.i.i, i32 2
  %298 = ptrtoint ptr %seg161.i.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %seg161.i.i, align 4
  %arrayidx162.i.i = getelementptr i32, ptr %297, i32 %299
  %300 = ptrtoint ptr %arrayidx162.i.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load i32, ptr %arrayidx162.i.i, align 4
  %reg_offset164.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr1_init_regs, i32 0, i32 %i.3447.i.i, i32 3
  %302 = ptrtoint ptr %reg_offset164.i.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %reg_offset164.i.i, align 4
  %add165.i.i = add i32 %301, -11264
  %sub166.i.i = add i32 %add165.i.i, %303
  %304 = load ptr, ptr %169, align 8
  %305 = load i32, ptr %167, align 4
  %inc169.i.i = add i32 %305, 1
  store i32 %inc169.i.i, ptr %167, align 4
  %arrayidx170.i.i = getelementptr i32, ptr %304, i32 %305
  %306 = ptrtoint ptr %arrayidx170.i.i to i32
  call void @__asan_store4_noabort(i32 %306)
  store i32 %sub166.i.i, ptr %arrayidx170.i.i, align 4
  %reg_value172.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr1_init_regs, i32 0, i32 %i.3447.i.i, i32 4
  %307 = ptrtoint ptr %reg_value172.i.i to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load i32, ptr %reg_value172.i.i, align 4
  %309 = load ptr, ptr %169, align 8
  %310 = load i32, ptr %167, align 4
  %inc175.i.i = add i32 %310, 1
  store i32 %inc175.i.i, ptr %167, align 4
  %arrayidx176.i.i = getelementptr i32, ptr %309, i32 %310
  %311 = ptrtoint ptr %arrayidx176.i.i to i32
  call void @__asan_store4_noabort(i32 %311)
  store i32 %308, ptr %arrayidx176.i.i, align 4
  %inc178.i.i = add nuw nsw i32 %i.3447.i.i, 1
  %exitcond452.not.i.i = icmp eq i32 %inc178.i.i, %add.i62.i
  br i1 %exitcond452.not.i.i, label %for.body148.i.i.for.end179.i.i_crit_edge, label %for.body148.i.i.for.body148.i.i_crit_edge

for.body148.i.i.for.body148.i.i_crit_edge:        ; preds = %for.body148.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body148.i.i

for.body148.i.i.for.end179.i.i_crit_edge:         ; preds = %for.body148.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end179.i.i

for.end179.i.i:                                   ; preds = %for.body148.i.i.for.end179.i.i_crit_edge, %for.end86.i.i.for.end179.i.i_crit_edge
  %312 = ptrtoint ptr %168 to i32
  call void @__asan_load8_noabort(i32 %312)
  %313 = load i64, ptr %168, align 8
  %conv181.i.i = zext i32 %add37.i.i to i64
  %add182.i.i = add i64 %313, %conv181.i.i
  %shr183.i.i = lshr i64 %add182.i.i, 8
  %314 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load ptr, ptr %169, align 8
  %316 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %167, align 4
  %inc186.i.i = add i32 %317, 1
  store i32 %inc186.i.i, ptr %167, align 4
  %arrayidx187.i.i = getelementptr i32, ptr %315, i32 %317
  %318 = ptrtoint ptr %arrayidx187.i.i to i32
  call void @__asan_store4_noabort(i32 %318)
  store i32 -1073580544, ptr %arrayidx187.i.i, align 4
  %319 = ptrtoint ptr %arrayidx94.i.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %arrayidx94.i.i, align 8
  %321 = ptrtoint ptr %320 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %320, align 4
  %sub193.i.i = add i32 %322, -7668
  %323 = load ptr, ptr %169, align 8
  %324 = load i32, ptr %167, align 4
  %inc196.i.i = add i32 %324, 1
  store i32 %inc196.i.i, ptr %167, align 4
  %arrayidx197.i.i = getelementptr i32, ptr %323, i32 %324
  %325 = ptrtoint ptr %arrayidx197.i.i to i32
  call void @__asan_store4_noabort(i32 %325)
  store i32 %sub193.i.i, ptr %arrayidx197.i.i, align 4
  %conv199.i.i = trunc i64 %shr183.i.i to i32
  %326 = load ptr, ptr %169, align 8
  %327 = load i32, ptr %167, align 4
  %inc202.i.i = add i32 %327, 1
  store i32 %inc202.i.i, ptr %167, align 4
  %arrayidx203.i.i = getelementptr i32, ptr %326, i32 %327
  %328 = ptrtoint ptr %arrayidx203.i.i to i32
  call void @__asan_store4_noabort(i32 %328)
  store i32 %conv199.i.i, ptr %arrayidx203.i.i, align 4
  %shr204.i.i = lshr i64 %add182.i.i, 40
  %conv206.i.i = trunc i64 %shr204.i.i to i32
  %329 = load ptr, ptr %169, align 8
  %330 = load i32, ptr %167, align 4
  %inc209.i.i = add i32 %330, 1
  store i32 %inc209.i.i, ptr %167, align 4
  %arrayidx210.i.i = getelementptr i32, ptr %329, i32 %330
  %331 = ptrtoint ptr %arrayidx210.i.i to i32
  call void @__asan_store4_noabort(i32 %331)
  store i32 %conv206.i.i, ptr %arrayidx210.i.i, align 4
  %332 = load ptr, ptr %169, align 8
  %333 = load i32, ptr %167, align 4
  %inc213.i.i = add i32 %333, 1
  store i32 %inc213.i.i, ptr %167, align 4
  %arrayidx214.i.i = getelementptr i32, ptr %332, i32 %333
  %334 = ptrtoint ptr %arrayidx214.i.i to i32
  call void @__asan_store4_noabort(i32 %334)
  store i32 -1073539840, ptr %arrayidx214.i.i, align 4
  %div215.i.i = sdiv i32 %mul6.i.i, 2
  %mul216.i.i = mul i32 %div215.i.i, 5
  %335 = load ptr, ptr %169, align 8
  %336 = load i32, ptr %167, align 4
  %inc219.i.i = add i32 %336, 1
  store i32 %inc219.i.i, ptr %167, align 4
  %arrayidx220.i.i = getelementptr i32, ptr %335, i32 %336
  %337 = ptrtoint ptr %arrayidx220.i.i to i32
  call void @__asan_store4_noabort(i32 %337)
  store i32 %mul216.i.i, ptr %arrayidx220.i.i, align 4
  %338 = load ptr, ptr %169, align 8
  %339 = load i32, ptr %167, align 4
  %inc223.i.i = add i32 %339, 1
  store i32 %inc223.i.i, ptr %167, align 4
  %arrayidx224.i.i = getelementptr i32, ptr %338, i32 %339
  %340 = ptrtoint ptr %arrayidx224.i.i to i32
  call void @__asan_store4_noabort(i32 %340)
  store i32 1, ptr %arrayidx224.i.i, align 4
  %341 = load ptr, ptr %169, align 8
  %342 = load i32, ptr %167, align 4
  %inc227.i.i = add i32 %342, 1
  store i32 %inc227.i.i, ptr %167, align 4
  %arrayidx228.i.i = getelementptr i32, ptr %341, i32 %342
  %343 = ptrtoint ptr %arrayidx228.i.i to i32
  call void @__asan_store4_noabort(i32 %343)
  store i32 1, ptr %arrayidx228.i.i, align 4
  %344 = load ptr, ptr %169, align 8
  %345 = load i32, ptr %167, align 4
  %inc231.i.i = add i32 %345, 1
  store i32 %inc231.i.i, ptr %167, align 4
  %arrayidx232.i.i = getelementptr i32, ptr %344, i32 %345
  %346 = ptrtoint ptr %arrayidx232.i.i to i32
  call void @__asan_store4_noabort(i32 %346)
  store i32 1, ptr %arrayidx232.i.i, align 4
  %347 = load ptr, ptr %169, align 8
  %348 = load i32, ptr %167, align 4
  %inc235.i.i = add i32 %348, 1
  store i32 %inc235.i.i, ptr %167, align 4
  %arrayidx236.i.i = getelementptr i32, ptr %347, i32 %348
  %349 = ptrtoint ptr %arrayidx236.i.i to i32
  call void @__asan_store4_noabort(i32 %349)
  store i32 -1073723904, ptr %arrayidx236.i.i, align 4
  %350 = load ptr, ptr %169, align 8
  %351 = load i32, ptr %167, align 4
  %inc239.i.i = add i32 %351, 1
  store i32 %inc239.i.i, ptr %167, align 4
  %arrayidx240.i.i = getelementptr i32, ptr %350, i32 %351
  %352 = ptrtoint ptr %arrayidx240.i.i to i32
  call void @__asan_store4_noabort(i32 %352)
  store i32 1031, ptr %arrayidx240.i.i, align 4
  br i1 %cmp60444.i.i, label %for.end179.i.i.for.body244.i.i_crit_edge, label %for.end179.i.i.for.end275.i.i_crit_edge

for.end179.i.i.for.end275.i.i_crit_edge:          ; preds = %for.end179.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end275.i.i

for.end179.i.i.for.body244.i.i_crit_edge:         ; preds = %for.end179.i.i
  br label %for.body244.i.i

for.body244.i.i:                                  ; preds = %for.body244.i.i.for.body244.i.i_crit_edge, %for.end179.i.i.for.body244.i.i_crit_edge
  %i.4449.i.i = phi i32 [ %inc274.i.i, %for.body244.i.i.for.body244.i.i_crit_edge ], [ 0, %for.end179.i.i.for.body244.i.i_crit_edge ]
  %353 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load ptr, ptr %169, align 8
  %355 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load i32, ptr %167, align 4
  %inc247.i.i = add i32 %356, 1
  store i32 %inc247.i.i, ptr %167, align 4
  %arrayidx248.i.i = getelementptr i32, ptr %354, i32 %356
  %357 = ptrtoint ptr %arrayidx248.i.i to i32
  call void @__asan_store4_noabort(i32 %357)
  store i32 -1073646080, ptr %arrayidx248.i.i, align 4
  %arrayidx250.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr2_init_regs, i32 0, i32 %i.4449.i.i
  %358 = ptrtoint ptr %arrayidx250.i.i to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load i32, ptr %arrayidx250.i.i, align 4
  %inst254.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr2_init_regs, i32 0, i32 %i.4449.i.i, i32 1
  %360 = ptrtoint ptr %inst254.i.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load i32, ptr %inst254.i.i, align 4
  %arrayidx255.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 %359, i32 %361
  %362 = ptrtoint ptr %arrayidx255.i.i to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load ptr, ptr %arrayidx255.i.i, align 4
  %seg257.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr2_init_regs, i32 0, i32 %i.4449.i.i, i32 2
  %364 = ptrtoint ptr %seg257.i.i to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load i32, ptr %seg257.i.i, align 4
  %arrayidx258.i.i = getelementptr i32, ptr %363, i32 %365
  %366 = ptrtoint ptr %arrayidx258.i.i to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %arrayidx258.i.i, align 4
  %reg_offset260.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr2_init_regs, i32 0, i32 %i.4449.i.i, i32 3
  %368 = ptrtoint ptr %reg_offset260.i.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %reg_offset260.i.i, align 4
  %add261.i.i = add i32 %367, -11264
  %sub262.i.i = add i32 %add261.i.i, %369
  %370 = load ptr, ptr %169, align 8
  %371 = load i32, ptr %167, align 4
  %inc265.i.i = add i32 %371, 1
  store i32 %inc265.i.i, ptr %167, align 4
  %arrayidx266.i.i = getelementptr i32, ptr %370, i32 %371
  %372 = ptrtoint ptr %arrayidx266.i.i to i32
  call void @__asan_store4_noabort(i32 %372)
  store i32 %sub262.i.i, ptr %arrayidx266.i.i, align 4
  %reg_value268.i.i = getelementptr [14 x %struct.soc15_reg_entry], ptr @sgpr2_init_regs, i32 0, i32 %i.4449.i.i, i32 4
  %373 = ptrtoint ptr %reg_value268.i.i to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %reg_value268.i.i, align 4
  %375 = load ptr, ptr %169, align 8
  %376 = load i32, ptr %167, align 4
  %inc271.i.i = add i32 %376, 1
  store i32 %inc271.i.i, ptr %167, align 4
  %arrayidx272.i.i = getelementptr i32, ptr %375, i32 %376
  %377 = ptrtoint ptr %arrayidx272.i.i to i32
  call void @__asan_store4_noabort(i32 %377)
  store i32 %374, ptr %arrayidx272.i.i, align 4
  %inc274.i.i = add nuw nsw i32 %i.4449.i.i, 1
  %exitcond453.not.i.i = icmp eq i32 %inc274.i.i, %add.i62.i
  br i1 %exitcond453.not.i.i, label %for.body244.i.i.for.end275.i.i_crit_edge, label %for.body244.i.i.for.body244.i.i_crit_edge

for.body244.i.i.for.body244.i.i_crit_edge:        ; preds = %for.body244.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body244.i.i

for.body244.i.i.for.end275.i.i_crit_edge:         ; preds = %for.body244.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end275.i.i

for.end275.i.i:                                   ; preds = %for.body244.i.i.for.end275.i.i_crit_edge, %for.end179.i.i.for.end275.i.i_crit_edge
  %378 = ptrtoint ptr %168 to i32
  call void @__asan_load8_noabort(i32 %378)
  %379 = load i64, ptr %168, align 8
  %add278.i.i = add i64 %379, %conv181.i.i
  %shr279.i.i = lshr i64 %add278.i.i, 8
  %380 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load ptr, ptr %169, align 8
  %382 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load i32, ptr %167, align 4
  %inc282.i.i = add i32 %383, 1
  store i32 %inc282.i.i, ptr %167, align 4
  %arrayidx283.i.i = getelementptr i32, ptr %381, i32 %383
  %384 = ptrtoint ptr %arrayidx283.i.i to i32
  call void @__asan_store4_noabort(i32 %384)
  store i32 -1073580544, ptr %arrayidx283.i.i, align 4
  %385 = ptrtoint ptr %arrayidx94.i.i to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load ptr, ptr %arrayidx94.i.i, align 8
  %387 = ptrtoint ptr %386 to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load i32, ptr %386, align 4
  %sub289.i.i = add i32 %388, -7668
  %389 = load ptr, ptr %169, align 8
  %390 = load i32, ptr %167, align 4
  %inc292.i.i = add i32 %390, 1
  store i32 %inc292.i.i, ptr %167, align 4
  %arrayidx293.i.i = getelementptr i32, ptr %389, i32 %390
  %391 = ptrtoint ptr %arrayidx293.i.i to i32
  call void @__asan_store4_noabort(i32 %391)
  store i32 %sub289.i.i, ptr %arrayidx293.i.i, align 4
  %conv295.i.i = trunc i64 %shr279.i.i to i32
  %392 = load ptr, ptr %169, align 8
  %393 = load i32, ptr %167, align 4
  %inc298.i.i = add i32 %393, 1
  store i32 %inc298.i.i, ptr %167, align 4
  %arrayidx299.i.i = getelementptr i32, ptr %392, i32 %393
  %394 = ptrtoint ptr %arrayidx299.i.i to i32
  call void @__asan_store4_noabort(i32 %394)
  store i32 %conv295.i.i, ptr %arrayidx299.i.i, align 4
  %shr300.i.i = lshr i64 %add278.i.i, 40
  %conv302.i.i = trunc i64 %shr300.i.i to i32
  %395 = load ptr, ptr %169, align 8
  %396 = load i32, ptr %167, align 4
  %inc305.i.i = add i32 %396, 1
  store i32 %inc305.i.i, ptr %167, align 4
  %arrayidx306.i.i = getelementptr i32, ptr %395, i32 %396
  %397 = ptrtoint ptr %arrayidx306.i.i to i32
  call void @__asan_store4_noabort(i32 %397)
  store i32 %conv302.i.i, ptr %arrayidx306.i.i, align 4
  %398 = load ptr, ptr %169, align 8
  %399 = load i32, ptr %167, align 4
  %inc309.i.i = add i32 %399, 1
  store i32 %inc309.i.i, ptr %167, align 4
  %arrayidx310.i.i = getelementptr i32, ptr %398, i32 %399
  %400 = ptrtoint ptr %arrayidx310.i.i to i32
  call void @__asan_store4_noabort(i32 %400)
  store i32 -1073539840, ptr %arrayidx310.i.i, align 4
  %401 = load ptr, ptr %169, align 8
  %402 = load i32, ptr %167, align 4
  %inc315.i.i = add i32 %402, 1
  store i32 %inc315.i.i, ptr %167, align 4
  %arrayidx316.i.i = getelementptr i32, ptr %401, i32 %402
  %403 = ptrtoint ptr %arrayidx316.i.i to i32
  call void @__asan_store4_noabort(i32 %403)
  store i32 %mul216.i.i, ptr %arrayidx316.i.i, align 4
  %404 = load ptr, ptr %169, align 8
  %405 = load i32, ptr %167, align 4
  %inc319.i.i = add i32 %405, 1
  store i32 %inc319.i.i, ptr %167, align 4
  %arrayidx320.i.i = getelementptr i32, ptr %404, i32 %405
  %406 = ptrtoint ptr %arrayidx320.i.i to i32
  call void @__asan_store4_noabort(i32 %406)
  store i32 1, ptr %arrayidx320.i.i, align 4
  %407 = load ptr, ptr %169, align 8
  %408 = load i32, ptr %167, align 4
  %inc323.i.i = add i32 %408, 1
  store i32 %inc323.i.i, ptr %167, align 4
  %arrayidx324.i.i = getelementptr i32, ptr %407, i32 %408
  %409 = ptrtoint ptr %arrayidx324.i.i to i32
  call void @__asan_store4_noabort(i32 %409)
  store i32 1, ptr %arrayidx324.i.i, align 4
  %410 = load ptr, ptr %169, align 8
  %411 = load i32, ptr %167, align 4
  %inc327.i.i = add i32 %411, 1
  store i32 %inc327.i.i, ptr %167, align 4
  %arrayidx328.i.i = getelementptr i32, ptr %410, i32 %411
  %412 = ptrtoint ptr %arrayidx328.i.i to i32
  call void @__asan_store4_noabort(i32 %412)
  store i32 1, ptr %arrayidx328.i.i, align 4
  %413 = load ptr, ptr %169, align 8
  %414 = load i32, ptr %167, align 4
  %inc331.i.i = add i32 %414, 1
  store i32 %inc331.i.i, ptr %167, align 4
  %arrayidx332.i.i = getelementptr i32, ptr %413, i32 %414
  %415 = ptrtoint ptr %arrayidx332.i.i to i32
  call void @__asan_store4_noabort(i32 %415)
  store i32 -1073723904, ptr %arrayidx332.i.i, align 4
  %416 = load ptr, ptr %169, align 8
  %417 = load i32, ptr %167, align 4
  %inc335.i.i = add i32 %417, 1
  store i32 %inc335.i.i, ptr %167, align 4
  %arrayidx336.i.i = getelementptr i32, ptr %416, i32 %417
  %418 = ptrtoint ptr %arrayidx336.i.i to i32
  call void @__asan_store4_noabort(i32 %418)
  store i32 1031, ptr %arrayidx336.i.i, align 4
  %call337.i.i = call i32 @amdgpu_ib_schedule(ptr noundef %compute_ring.i61.i, i32 noundef 1, ptr noundef nonnull %ib.i.i, ptr noundef null, ptr noundef nonnull %f.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call337.i.i)
  %tobool338.not.i.i = icmp eq i32 %call337.i.i, 0
  br i1 %tobool338.not.i.i, label %if.end340.i.i, label %if.then339.i.i

if.then339.i.i:                                   ; preds = %for.end275.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.28, i32 noundef %call337.i.i) #15
  br label %fail.i.i

if.end340.i.i:                                    ; preds = %for.end275.i.i
  %419 = ptrtoint ptr %f.i.i to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load ptr, ptr %f.i.i, align 4
  %call.i.i.i = call i32 @dma_fence_wait_timeout(ptr noundef %420, i1 noundef zeroext false, i32 noundef 2147483647) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i.i)
  %tobool342.not.i.i = icmp sgt i32 %call.i.i.i, -1
  br i1 %tobool342.not.i.i, label %if.end340.i.i.fail.i.i_crit_edge, label %if.then343.i.i

if.end340.i.i.fail.i.i_crit_edge:                 ; preds = %if.end340.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %fail.i.i

if.then343.i.i:                                   ; preds = %if.end340.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.29, i32 noundef %call.i.i.i) #15
  br label %fail.i.i

fail.i.i:                                         ; preds = %if.then343.i.i, %if.end340.i.i.fail.i.i_crit_edge, %if.then339.i.i
  %r.0.i.i = phi i32 [ %call337.i.i, %if.then339.i.i ], [ %call.i.i.i, %if.then343.i.i ], [ 0, %if.end340.i.i.fail.i.i_crit_edge ]
  call void @amdgpu_ib_free(ptr noundef %handle, ptr noundef nonnull %ib.i.i, ptr noundef null) #15
  %421 = ptrtoint ptr %f.i.i to i32
  call void @__asan_load4_noabort(i32 %421)
  %422 = load ptr, ptr %f.i.i, align 4
  %tobool.not.i440.i.i = icmp eq ptr %422, null
  br i1 %tobool.not.i440.i.i, label %fail.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, label %if.then.i.i73.i

fail.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge: ; preds = %fail.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

if.then.i.i73.i:                                  ; preds = %fail.i.i
  %refcount.i.i.i = getelementptr inbounds %struct.dma_fence, ptr %422, i32 0, i32 6
  %call.i.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i.i, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1009
  call void @llvm.prefetch.p0(ptr %refcount.i.i.i, i32 1, i32 3, i32 1) #15
  %423 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i.i, ptr %refcount.i.i.i, i32 1, ptr elementtype(i32) %refcount.i.i.i) #15, !srcloc !1010
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %423, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i, label %if.end5.i.i.i.i.i.i.i

if.end5.i.i.i.i.i.i.i:                            ; preds = %if.then.i.i73.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i.i, label %if.end5.i.i.i.i.i.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, label %if.then10.i.i.i.i.i.i.i, !prof !1011

if.end5.i.i.i.i.i.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge: ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

if.then10.i.i.i.i.i.i.i:                          ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @refcount_warn_saturate(ptr noundef %refcount.i.i.i, i32 noundef 3) #15
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i73.i
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1012
  call void @dma_fence_release(ptr noundef %refcount.i.i.i) #15
  br label %gfx_v9_0_do_edc_gpr_workarounds.exit.i

gfx_v9_0_do_edc_gpr_workarounds.exit.i:           ; preds = %if.then.i.i.i.i, %if.then10.i.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, %fail.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, %if.then41.i.i, %if.end.i68.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, %amdgpu_ras_is_supported.exit.i67.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge, %if.else.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge
  %retval.0.i74.i = phi i32 [ %call39.i.i, %if.then41.i.i ], [ 0, %amdgpu_ras_is_supported.exit.i67.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge ], [ 0, %if.end.i68.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge ], [ %r.0.i.i, %fail.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge ], [ %r.0.i.i, %if.end5.i.i.i.i.i.i.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge ], [ %r.0.i.i, %if.then10.i.i.i.i.i.i.i ], [ %r.0.i.i, %if.then.i.i.i.i ], [ 0, %if.else.i.gfx_v9_0_do_edc_gpr_workarounds.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %f.i.i) #15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ib.i.i) #15
  br label %if.end9.i

if.end9.i:                                        ; preds = %gfx_v9_0_do_edc_gpr_workarounds.exit.i, %if.then6.i
  %r.0.i = phi i32 [ %call7.i, %if.then6.i ], [ %retval.0.i74.i, %gfx_v9_0_do_edc_gpr_workarounds.exit.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.0.i)
  %tobool10.not.i = icmp eq i32 %r.0.i, 0
  br i1 %tobool10.not.i, label %if.end12.i, label %if.end9.i.cleanup_crit_edge

if.end9.i.cleanup_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end12.i:                                       ; preds = %if.end9.i
  %ras_funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 59
  %424 = ptrtoint ptr %ras_funcs.i to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load ptr, ptr %ras_funcs.i, align 8
  %tobool13.not.i = icmp eq ptr %425, null
  br i1 %tobool13.not.i, label %if.end12.i.cleanup_crit_edge, label %land.lhs.true14.i

if.end12.i.cleanup_crit_edge:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true14.i:                                ; preds = %if.end12.i
  %426 = ptrtoint ptr %425 to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load ptr, ptr %425, align 4
  %tobool17.not.i = icmp eq ptr %427, null
  br i1 %tobool17.not.i, label %land.lhs.true14.i.land.lhs.true30.i_crit_edge, label %if.then18.i

land.lhs.true14.i.land.lhs.true30.i_crit_edge:    ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true30.i

if.then18.i:                                      ; preds = %land.lhs.true14.i
  %call22.i = call i32 %427(ptr noundef %handle) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22.i)
  %tobool23.not.i = icmp eq i32 %call22.i, 0
  br i1 %tobool23.not.i, label %if.end26.i, label %if.then18.i.cleanup_crit_edge

if.then18.i.cleanup_crit_edge:                    ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end26.i:                                       ; preds = %if.then18.i
  %428 = ptrtoint ptr %ras_funcs.i to i32
  call void @__asan_load4_noabort(i32 %428)
  %.pr.i = load ptr, ptr %ras_funcs.i, align 8
  %tobool29.not.i = icmp eq ptr %.pr.i, null
  br i1 %tobool29.not.i, label %if.end26.i.cleanup_crit_edge, label %if.end26.i.land.lhs.true30.i_crit_edge

if.end26.i.land.lhs.true30.i_crit_edge:           ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true30.i

if.end26.i.cleanup_crit_edge:                     ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true30.i:                                ; preds = %if.end26.i.land.lhs.true30.i_crit_edge, %land.lhs.true14.i.land.lhs.true30.i_crit_edge
  %429 = phi ptr [ %.pr.i, %if.end26.i.land.lhs.true30.i_crit_edge ], [ %425, %land.lhs.true14.i.land.lhs.true30.i_crit_edge ]
  %enable_watchdog_timer.i = getelementptr inbounds %struct.amdgpu_gfx_ras_funcs, ptr %429, i32 0, i32 7
  %430 = ptrtoint ptr %enable_watchdog_timer.i to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load ptr, ptr %enable_watchdog_timer.i, align 4
  %tobool33.not.i = icmp eq ptr %431, null
  br i1 %tobool33.not.i, label %land.lhs.true30.i.cleanup_crit_edge, label %if.then34.i

land.lhs.true30.i.cleanup_crit_edge:              ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then34.i:                                      ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %431(ptr noundef %handle) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then34.i, %land.lhs.true30.i.cleanup_crit_edge, %if.end26.i.cleanup_crit_edge, %if.then18.i.cleanup_crit_edge, %if.end12.i.cleanup_crit_edge, %if.end9.i.cleanup_crit_edge, %gfx_v9_0_do_edc_gds_workarounds.exit.i.cleanup_crit_edge, %gfx_v9_0_do_edc_gds_workarounds.exit.thread77.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call2, %if.end.cleanup_crit_edge ], [ %spec.select.i.i, %gfx_v9_0_do_edc_gds_workarounds.exit.i.cleanup_crit_edge ], [ %r.0.i, %if.end9.i.cleanup_crit_edge ], [ %call22.i, %if.then18.i.cleanup_crit_edge ], [ 0, %if.then34.i ], [ 0, %land.lhs.true30.i.cleanup_crit_edge ], [ 0, %if.end26.i.cleanup_crit_edge ], [ %call1.i.i, %gfx_v9_0_do_edc_gds_workarounds.exit.thread77.i ], [ 0, %if.end12.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_sw_init(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.395)
  switch i32 %1, label %sw.default [
    i32 589825, label %entry.sw.epilog_crit_edge
    i32 590337, label %entry.sw.epilog_crit_edge236
    i32 590848, label %entry.sw.epilog_crit_edge237
    i32 590338, label %entry.sw.epilog_crit_edge238
    i32 590080, label %entry.sw.epilog_crit_edge239
    i32 590849, label %entry.sw.epilog_crit_edge240
    i32 590592, label %entry.sw.epilog_crit_edge241
    i32 590850, label %entry.sw.epilog_crit_edge242
  ]

entry.sw.epilog_crit_edge242:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

entry.sw.epilog_crit_edge241:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

entry.sw.epilog_crit_edge240:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

entry.sw.epilog_crit_edge239:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

entry.sw.epilog_crit_edge238:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

entry.sw.epilog_crit_edge237:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

entry.sw.epilog_crit_edge236:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge236, %entry.sw.epilog_crit_edge237, %entry.sw.epilog_crit_edge238, %entry.sw.epilog_crit_edge239, %entry.sw.epilog_crit_edge240, %entry.sw.epilog_crit_edge241, %entry.sw.epilog_crit_edge242
  %.sink = phi i32 [ 1, %sw.default ], [ 2, %entry.sw.epilog_crit_edge ], [ 2, %entry.sw.epilog_crit_edge236 ], [ 2, %entry.sw.epilog_crit_edge237 ], [ 2, %entry.sw.epilog_crit_edge238 ], [ 2, %entry.sw.epilog_crit_edge239 ], [ 2, %entry.sw.epilog_crit_edge240 ], [ 2, %entry.sw.epilog_crit_edge241 ], [ 2, %entry.sw.epilog_crit_edge242 ]
  %num_mec4 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 4
  %3 = ptrtoint ptr %num_mec4 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %.sink, ptr %num_mec4, align 8
  %num_pipe_per_mec = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 5
  %4 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 4, ptr %num_pipe_per_mec, align 4
  %num_queue_per_pipe = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 6
  %5 = ptrtoint ptr %num_queue_per_pipe to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 8, ptr %num_queue_per_pipe, align 8
  %eop_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 40
  %call = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 181, ptr noundef %eop_irq) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %sw.epilog
  %priv_reg_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %call11 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 184, ptr noundef %priv_reg_irq) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end14:                                         ; preds = %if.end
  %priv_inst_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %call16 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 185, ptr noundef %priv_inst_irq) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end19:                                         ; preds = %if.end14
  %cp_ecc_error_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 43
  %call21 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 197, ptr noundef %cp_ecc_error_irq) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end19.cleanup_crit_edge

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end24:                                         ; preds = %if.end19
  %call27 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 20, i32 noundef 201, ptr noundef %cp_ecc_error_irq) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %if.end24.cleanup_crit_edge

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end30:                                         ; preds = %if.end24
  %gfx_current_status = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 46
  %6 = ptrtoint ptr %gfx_current_status to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %gfx_current_status, align 8
  %scratch.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 8
  %7 = ptrtoint ptr %scratch.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 8, ptr %scratch.i, align 8
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx2.i = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx2.i, align 4
  %add.i = add i32 %11, 8256
  %reg_base.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 8, i32 1
  %12 = ptrtoint ptr %reg_base.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %add.i, ptr %reg_base.i, align 4
  %free_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 8, i32 2
  %13 = ptrtoint ptr %free_mask.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 255, ptr %free_mask.i, align 8
  %call32 = tail call fastcc i32 @gfx_v9_0_init_microcode(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %if.end35, label %if.then34

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.30) #15
  br label %cleanup

if.end35:                                         ; preds = %if.end30
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %14 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs, align 4
  %init = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %init, align 4
  %call37 = tail call i32 %17(ptr noundef %handle) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end40, label %if.then39

if.then39:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.31) #15
  br label %cleanup

if.end40:                                         ; preds = %if.end35
  %call41 = tail call fastcc i32 @gfx_v9_0_mec_init(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %for.cond.preheader, label %if.then43

for.cond.preheader:                               ; preds = %if.end40
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %18 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp211.not = icmp eq i32 %19, 0
  br i1 %cmp211.not, label %for.cond.preheader.for.cond62.preheader_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.cond62.preheader_crit_edge: ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond62.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gfx_ring0 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 144, i32 11
  %name = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 29
  br label %for.body

if.then43:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.32) #15
  br label %cleanup

for.cond:                                         ; preds = %if.end54
  %inc = add nuw i32 %i.0212, 1
  %20 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_gfx_rings, align 8
  %cmp = icmp ult i32 %inc, %21
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.for.cond62.preheader_crit_edge

for.cond.for.cond62.preheader_crit_edge:          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond62.preheader

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.cond62.preheader:                             ; preds = %for.cond.for.cond62.preheader_crit_edge, %for.cond.preheader.for.cond62.preheader_crit_edge
  %num_mec65 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 4
  %22 = ptrtoint ptr %num_mec65 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_mec65, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp66223.not = icmp eq i32 %23, 0
  br i1 %cmp66223.not, label %for.cond62.preheader.for.end96_crit_edge, label %for.cond62.preheader.for.cond68.preheader_crit_edge

for.cond62.preheader.for.cond68.preheader_crit_edge: ; preds = %for.cond62.preheader
  br label %for.cond68.preheader

for.cond62.preheader.for.end96_crit_edge:         ; preds = %for.cond62.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end96

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.lr.ph
  %i.0212 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.cond.for.body_crit_edge ]
  %arrayidx47 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.0212
  %ring_obj = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.0212, i32 4
  %24 = ptrtoint ptr %ring_obj to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %ring_obj, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0212)
  %tobool48.not = icmp eq i32 %i.0212, 0
  br i1 %tobool48.not, label %if.then49, label %if.else

if.then49:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %25 = ptrtoint ptr %name to i32
  call void @__asan_storeN_noabort(i32 %25, i32 4)
  store i32 1734768640, ptr %name, align 1
  br label %if.end54

if.else:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %name51 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.0212, i32 29
  %call53 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %name51, ptr noundef nonnull @.str.34, i32 noundef %i.0212)
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then49
  %use_doorbell = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.0212, i32 24
  %26 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 1, ptr %use_doorbell, align 4
  %27 = ptrtoint ptr %gfx_ring0 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %gfx_ring0, align 4
  %shl = shl i32 %28, 1
  %doorbell_index55 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.0212, i32 23
  %29 = ptrtoint ptr %doorbell_index55 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %shl, ptr %doorbell_index55, align 8
  %call58 = tail call i32 @amdgpu_ring_init(ptr noundef %handle, ptr noundef %arrayidx47, i32 noundef 1024, ptr noundef %eop_irq, i32 noundef 0, i32 noundef 1, ptr noundef null) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %for.cond, label %if.end54.cleanup_crit_edge

if.end54.cleanup_crit_edge:                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.cond68.preheader:                             ; preds = %for.inc94.for.cond68.preheader_crit_edge, %for.cond62.preheader.for.cond68.preheader_crit_edge
  %ring_id.0226 = phi i32 [ %ring_id.1.lcssa, %for.inc94.for.cond68.preheader_crit_edge ], [ 0, %for.cond62.preheader.for.cond68.preheader_crit_edge ]
  %i.1224 = phi i32 [ %inc95, %for.inc94.for.cond68.preheader_crit_edge ], [ 0, %for.cond62.preheader.for.cond68.preheader_crit_edge ]
  %30 = ptrtoint ptr %num_queue_per_pipe to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_queue_per_pipe, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp72218.not = icmp eq i32 %31, 0
  br i1 %cmp72218.not, label %for.cond68.preheader.for.inc94_crit_edge, label %for.cond68.preheader.for.cond74.preheader_crit_edge

for.cond68.preheader.for.cond74.preheader_crit_edge: ; preds = %for.cond68.preheader
  br label %for.cond74.preheader

for.cond68.preheader.for.inc94_crit_edge:         ; preds = %for.cond68.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc94

for.cond74.preheader:                             ; preds = %for.inc91.for.cond74.preheader_crit_edge, %for.cond68.preheader.for.cond74.preheader_crit_edge
  %ring_id.1221 = phi i32 [ %ring_id.2.lcssa, %for.inc91.for.cond74.preheader_crit_edge ], [ %ring_id.0226, %for.cond68.preheader.for.cond74.preheader_crit_edge ]
  %j.0219 = phi i32 [ %inc92, %for.inc91.for.cond74.preheader_crit_edge ], [ 0, %for.cond68.preheader.for.cond74.preheader_crit_edge ]
  %32 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_pipe_per_mec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp78214.not = icmp eq i32 %33, 0
  br i1 %cmp78214.not, label %for.cond74.preheader.for.inc91_crit_edge, label %for.cond74.preheader.for.body79_crit_edge

for.cond74.preheader.for.body79_crit_edge:        ; preds = %for.cond74.preheader
  br label %for.body79

for.cond74.preheader.for.inc91_crit_edge:         ; preds = %for.cond74.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc91

for.body79:                                       ; preds = %for.inc88.for.body79_crit_edge, %for.cond74.preheader.for.body79_crit_edge
  %ring_id.2217 = phi i32 [ %ring_id.3, %for.inc88.for.body79_crit_edge ], [ %ring_id.1221, %for.cond74.preheader.for.body79_crit_edge ]
  %k.0215 = phi i32 [ %inc89, %for.inc88.for.body79_crit_edge ], [ 0, %for.cond74.preheader.for.body79_crit_edge ]
  %call80 = tail call zeroext i1 @amdgpu_gfx_is_mec_queue_enabled(ptr noundef %handle, i32 noundef %i.1224, i32 noundef %k.0215, i32 noundef %j.0219) #15
  br i1 %call80, label %if.end82, label %for.body79.for.inc88_crit_edge

for.body79.for.inc88_crit_edge:                   ; preds = %for.body79
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc88

if.end82:                                         ; preds = %for.body79
  %call83 = tail call fastcc i32 @gfx_v9_0_compute_ring_init(ptr noundef %handle, i32 noundef %ring_id.2217, i32 noundef %i.1224, i32 noundef %k.0215, i32 noundef %j.0219)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %if.end86, label %if.end82.cleanup_crit_edge

if.end82.cleanup_crit_edge:                       ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end86:                                         ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #17
  %inc87 = add i32 %ring_id.2217, 1
  br label %for.inc88

for.inc88:                                        ; preds = %if.end86, %for.body79.for.inc88_crit_edge
  %ring_id.3 = phi i32 [ %inc87, %if.end86 ], [ %ring_id.2217, %for.body79.for.inc88_crit_edge ]
  %inc89 = add nuw i32 %k.0215, 1
  %34 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %num_pipe_per_mec, align 4
  %cmp78 = icmp ult i32 %inc89, %35
  br i1 %cmp78, label %for.inc88.for.body79_crit_edge, label %for.inc88.for.inc91_crit_edge

for.inc88.for.inc91_crit_edge:                    ; preds = %for.inc88
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc91

for.inc88.for.body79_crit_edge:                   ; preds = %for.inc88
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body79

for.inc91:                                        ; preds = %for.inc88.for.inc91_crit_edge, %for.cond74.preheader.for.inc91_crit_edge
  %ring_id.2.lcssa = phi i32 [ %ring_id.1221, %for.cond74.preheader.for.inc91_crit_edge ], [ %ring_id.3, %for.inc88.for.inc91_crit_edge ]
  %inc92 = add nuw i32 %j.0219, 1
  %36 = ptrtoint ptr %num_queue_per_pipe to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %num_queue_per_pipe, align 8
  %cmp72 = icmp ult i32 %inc92, %37
  br i1 %cmp72, label %for.inc91.for.cond74.preheader_crit_edge, label %for.inc91.for.inc94_crit_edge

for.inc91.for.inc94_crit_edge:                    ; preds = %for.inc91
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc94

for.inc91.for.cond74.preheader_crit_edge:         ; preds = %for.inc91
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond74.preheader

for.inc94:                                        ; preds = %for.inc91.for.inc94_crit_edge, %for.cond68.preheader.for.inc94_crit_edge
  %ring_id.1.lcssa = phi i32 [ %ring_id.0226, %for.cond68.preheader.for.inc94_crit_edge ], [ %ring_id.2.lcssa, %for.inc91.for.inc94_crit_edge ]
  %inc95 = add nuw i32 %i.1224, 1
  %38 = ptrtoint ptr %num_mec65 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %num_mec65, align 8
  %cmp66 = icmp ult i32 %inc95, %39
  br i1 %cmp66, label %for.inc94.for.cond68.preheader_crit_edge, label %for.inc94.for.end96_crit_edge

for.inc94.for.end96_crit_edge:                    ; preds = %for.inc94
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end96

for.inc94.for.cond68.preheader_crit_edge:         ; preds = %for.inc94
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond68.preheader

for.end96:                                        ; preds = %for.inc94.for.end96_crit_edge, %for.cond62.preheader.for.end96_crit_edge
  %call97 = tail call i32 @amdgpu_gfx_kiq_init(ptr noundef %handle, i32 noundef 4096) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call97)
  %tobool98.not = icmp eq i32 %call97, 0
  br i1 %tobool98.not, label %if.end100, label %if.then99

if.then99:                                        ; preds = %for.end96
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.35) #15
  br label %cleanup

if.end100:                                        ; preds = %for.end96
  %ring103 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3
  %irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 4
  %call104 = tail call i32 @amdgpu_gfx_kiq_init_ring(ptr noundef %handle, ptr noundef %ring103, ptr noundef %irq) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %if.end107, label %if.end100.cleanup_crit_edge

if.end100.cleanup_crit_edge:                      ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end107:                                        ; preds = %if.end100
  %call108 = tail call i32 @amdgpu_gfx_mqd_sw_init(ptr noundef %handle, i32 noundef 2064) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call108)
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %if.end111, label %if.end107.cleanup_crit_edge

if.end107.cleanup_crit_edge:                      ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end111:                                        ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #17
  %ce_ram_size = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 47
  %40 = ptrtoint ptr %ce_ram_size to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 32768, ptr %ce_ram_size, align 4
  %call113 = tail call fastcc i32 @gfx_v9_0_gpu_early_init(ptr noundef %handle)
  br label %cleanup

cleanup:                                          ; preds = %if.end111, %if.end107.cleanup_crit_edge, %if.end100.cleanup_crit_edge, %if.then99, %if.end82.cleanup_crit_edge, %if.end54.cleanup_crit_edge, %if.then43, %if.then39, %if.then34, %if.end24.cleanup_crit_edge, %if.end19.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %if.end.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge
  %retval.0 = phi i32 [ %call32, %if.then34 ], [ %call37, %if.then39 ], [ %call41, %if.then43 ], [ %call97, %if.then99 ], [ %call, %sw.epilog.cleanup_crit_edge ], [ %call11, %if.end.cleanup_crit_edge ], [ %call16, %if.end14.cleanup_crit_edge ], [ %call21, %if.end19.cleanup_crit_edge ], [ %call27, %if.end24.cleanup_crit_edge ], [ %call104, %if.end100.cleanup_crit_edge ], [ %call108, %if.end107.cleanup_crit_edge ], [ %call113, %if.end111 ], [ %call83, %if.end82.cleanup_crit_edge ], [ %call58, %if.end54.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_sw_fini(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %ras_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 59
  %0 = ptrtoint ptr %ras_funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ras_funcs, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %ras_fini = getelementptr inbounds %struct.amdgpu_gfx_ras_funcs, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ras_fini to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ras_fini, align 4
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %3(ptr noundef %handle) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %4 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp58.not = icmp eq i32 %5, 0
  br i1 %cmp58.not, label %if.end.for.cond9.preheader_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.cond9.preheader_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond9.preheader

for.cond9.preheader:                              ; preds = %for.body.for.cond9.preheader_crit_edge, %if.end.for.cond9.preheader_crit_edge
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 39
  %6 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_compute_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp1160.not = icmp eq i32 %7, 0
  br i1 %cmp1160.not, label %for.cond9.preheader.for.end17_crit_edge, label %for.cond9.preheader.for.body12_crit_edge

for.cond9.preheader.for.body12_crit_edge:         ; preds = %for.cond9.preheader
  br label %for.body12

for.cond9.preheader.for.end17_crit_edge:          ; preds = %for.cond9.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end17

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.059 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 %i.059
  tail call void @amdgpu_ring_fini(ptr noundef %arrayidx) #15
  %inc = add nuw i32 %i.059, 1
  %8 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_gfx_rings, align 8
  %cmp = icmp ult i32 %inc, %9
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.cond9.preheader_crit_edge

for.body.for.cond9.preheader_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond9.preheader

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.body12:                                       ; preds = %for.body12.for.body12_crit_edge, %for.cond9.preheader.for.body12_crit_edge
  %i.161 = phi i32 [ %inc16, %for.body12.for.body12_crit_edge ], [ 0, %for.cond9.preheader.for.body12_crit_edge ]
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.161
  tail call void @amdgpu_ring_fini(ptr noundef %arrayidx14) #15
  %inc16 = add nuw i32 %i.161, 1
  %10 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_compute_rings, align 8
  %cmp11 = icmp ult i32 %inc16, %11
  br i1 %cmp11, label %for.body12.for.body12_crit_edge, label %for.body12.for.end17_crit_edge

for.body12.for.end17_crit_edge:                   ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end17

for.body12.for.body12_crit_edge:                  ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body12

for.end17:                                        ; preds = %for.body12.for.end17_crit_edge, %for.cond9.preheader.for.end17_crit_edge
  tail call void @amdgpu_gfx_mqd_sw_fini(ptr noundef %handle) #15
  %ring = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3
  tail call void @amdgpu_gfx_kiq_free_ring(ptr noundef %ring) #15
  tail call void @amdgpu_gfx_kiq_fini(ptr noundef %handle) #15
  %mec.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6
  tail call void @amdgpu_bo_free_kernel(ptr noundef %mec.i, ptr noundef null, ptr noundef null) #15
  %mec_fw_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 2
  tail call void @amdgpu_bo_free_kernel(ptr noundef %mec_fw_obj.i, ptr noundef null, ptr noundef null) #15
  %clear_state_obj = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 5
  %clear_state_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 6
  %cs_ptr = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 7
  tail call void @amdgpu_bo_free_kernel(ptr noundef %clear_state_obj, ptr noundef %clear_state_gpu_addr, ptr noundef %cs_ptr) #15
  %flags = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 9
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 8
  %and = and i32 %13, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool24.not = icmp eq i32 %and, 0
  br i1 %tobool24.not, label %for.end17.if.end32_crit_edge, label %if.then25

for.end17.if.end32_crit_edge:                     ; preds = %for.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end32

if.then25:                                        ; preds = %for.end17
  call void @__sanitizer_cov_trace_pc() #17
  %cp_table_obj = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 10
  %cp_table_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 11
  %cp_table_ptr = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 12
  tail call void @amdgpu_bo_free_kernel(ptr noundef %cp_table_obj, ptr noundef %cp_table_gpu_addr, ptr noundef %cp_table_ptr) #15
  br label %if.end32

if.end32:                                         ; preds = %if.then25, %for.end17.if.end32_crit_edge
  %pfp_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 11
  %14 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pfp_fw.i, align 4
  tail call void @release_firmware(ptr noundef %15) #15
  %16 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %pfp_fw.i, align 4
  %me_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 9
  %17 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %me_fw.i, align 4
  tail call void @release_firmware(ptr noundef %18) #15
  %19 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %me_fw.i, align 4
  %ce_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 13
  %20 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ce_fw.i, align 4
  tail call void @release_firmware(ptr noundef %21) #15
  %22 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %ce_fw.i, align 4
  %rlc_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 15
  %23 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rlc_fw.i, align 4
  tail call void @release_firmware(ptr noundef %24) #15
  %25 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %rlc_fw.i, align 4
  %mec_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 17
  %26 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mec_fw.i, align 4
  tail call void @release_firmware(ptr noundef %27) #15
  %28 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %mec_fw.i, align 4
  %mec2_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 19
  %29 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mec2_fw.i, align 4
  tail call void @release_firmware(ptr noundef %30) #15
  %31 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %mec2_fw.i, align 4
  %register_list_format.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 31
  %32 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %register_list_format.i, align 4
  tail call void @kfree(ptr noundef %33) #15
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_hw_init(ptr noundef %handle) #0 align 64 {
entry:
  %disable_masks.i.i = alloca [16 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.396)
  switch i32 %3, label %if.then.sw.epilog.i_crit_edge [
    i32 589825, label %sw.bb.i
    i32 590337, label %sw.bb2.i
    i32 590848, label %sw.bb3.i
    i32 590849, label %sw.bb4.i
    i32 590338, label %if.then.sw.bb5.i_crit_edge
    i32 590080, label %if.then.sw.bb5.i_crit_edge174
    i32 590592, label %sw.bb6.i
    i32 590850, label %sw.bb7.i
  ]

if.then.sw.bb5.i_crit_edge174:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb5.i

if.then.sw.bb5.i_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb5.i

if.then.sw.epilog.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_0, i32 noundef 20) #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_0_vg10, i32 noundef 18) #15
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_2_1, i32 noundef 16) #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_2_1_vg12, i32 noundef 13) #15
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_0, i32 noundef 20) #15
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_0_vg20, i32 noundef 11) #15
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_4_1_arct, i32 noundef 11) #15
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.then.sw.bb5.i_crit_edge, %if.then.sw.bb5.i_crit_edge174
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_1, i32 noundef 24) #15
  %apu_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 10
  %5 = ptrtoint ptr %apu_flags.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %apu_flags.i, align 4
  %and.i = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_1_rv2, i32 noundef 19) #15
  br label %sw.epilog.i

if.else.i:                                        ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_1_rv1, i32 noundef 7) #15
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_1_rn, i32 noundef 12) #15
  br label %if.end

sw.bb7.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %smuio.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 103
  %7 = ptrtoint ptr %smuio.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %smuio.i, align 4
  %get_die_id.i = getelementptr inbounds %struct.amdgpu_smuio_funcs, ptr %8, i32 0, i32 4
  %9 = ptrtoint ptr %get_die_id.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %get_die_id.i, align 4
  %call.i = tail call i32 %10(ptr noundef %handle) #15
  tail call void @gfx_v9_4_2_init_golden_registers(ptr noundef %handle, i32 noundef %call.i) #15
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb7.i, %if.else.i, %if.then.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb.i, %if.then.sw.epilog.i_crit_edge
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %.off.i = add i32 %12, -590849
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %sw.epilog.i.if.end_crit_edge, label %if.then15.i

sw.epilog.i.if.end_crit_edge:                     ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then15.i:                                      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @soc15_program_register_sequence(ptr noundef %handle, ptr noundef nonnull @golden_settings_gc_9_x_common, i32 noundef 3) #15
  br label %if.end

if.end:                                           ; preds = %if.then15.i, %sw.epilog.i.if.end_crit_edge, %sw.bb6.i, %entry.if.end_crit_edge
  %13 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %virt, align 8
  %and.i24 = and i32 %14, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i24)
  %tobool.not.i25 = icmp eq i32 %and.i24, 0
  br i1 %tobool.not.i25, label %if.end.cond.false76.sink.split.i_crit_edge, label %land.lhs.true.i

if.end.cond.false76.sink.split.i_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split.i

land.lhs.true.i:                                  ; preds = %if.end
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %15 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %16, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.cond.false76.sink.split.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cond.false76.sink.split.i_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %16, i32 0, i32 12
  %17 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool6.not.i = icmp eq ptr %18, null
  %arrayidx46495.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx46495.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx46495.i, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %sriov_rreg63.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %16, i32 0, i32 13
  %23 = ptrtoint ptr %sriov_rreg63.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %sriov_rreg63.i, align 4
  %tobool64.not.i = icmp eq ptr %24, null
  br i1 %tobool6.not.i, label %land.lhs.true59.i, label %cond.true.i

cond.true.i:                                      ; preds = %land.lhs.true2.i
  br i1 %tobool64.not.i, label %cond.false.i, label %cond.true27.i

cond.true27.i:                                    ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i27 = tail call i32 %24(ptr noundef %handle, i32 noundef %22, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end.i

cond.false.i:                                     ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %call42.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %22, i32 noundef 0) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true27.i
  %cond.i = phi i32 [ %call.i27, %cond.true27.i ], [ %call42.i, %cond.false.i ]
  %or.i = or i32 %cond.i, 255
  tail call void %18(ptr noundef %handle, i32 noundef %22, i32 noundef %or.i, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end87.i

land.lhs.true59.i:                                ; preds = %land.lhs.true2.i
  br i1 %tobool64.not.i, label %land.lhs.true59.i.cond.false76.i_crit_edge, label %cond.true65.i

land.lhs.true59.i.cond.false76.i_crit_edge:       ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.i

cond.true65.i:                                    ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #17
  %call75.i = tail call i32 %24(ptr noundef %handle, i32 noundef %22, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end83.i

cond.false76.sink.split.i:                        ; preds = %land.lhs.true.i.cond.false76.sink.split.i_crit_edge, %if.end.cond.false76.sink.split.i_crit_edge
  %arrayidx46495498.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %25 = ptrtoint ptr %arrayidx46495498.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx46495498.i, align 8
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  br label %cond.false76.i

cond.false76.i:                                   ; preds = %cond.false76.sink.split.i, %land.lhs.true59.i.cond.false76.i_crit_edge
  %29 = phi i32 [ %22, %land.lhs.true59.i.cond.false76.i_crit_edge ], [ %28, %cond.false76.sink.split.i ]
  %call82.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %29, i32 noundef 0) #15
  br label %cond.end83.i

cond.end83.i:                                     ; preds = %cond.false76.i, %cond.true65.i
  %30 = phi i32 [ %22, %cond.true65.i ], [ %29, %cond.false76.i ]
  %cond84.i = phi i32 [ %call75.i, %cond.true65.i ], [ %call82.i, %cond.false76.i ]
  %or86.i = or i32 %cond84.i, 255
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %30, i32 noundef %or86.i, i32 noundef 0) #15
  br label %cond.end87.i

cond.end87.i:                                     ; preds = %cond.end83.i, %cond.end.i
  %config.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1
  %max_backends_per_se.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 4
  %31 = ptrtoint ptr %max_backends_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %max_backends_per_se.i.i, align 8
  %max_sh_per_se.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 3
  %33 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %max_sh_per_se.i.i, align 4
  %div.i.i = udiv i32 %32, %34
  %grbm_idx_mutex.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i.i, i32 noundef 0) #15
  %35 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp393.not.i.i = icmp eq i32 %36, 0
  br i1 %cmp393.not.i.i, label %cond.end87.i.for.end17.i.i_crit_edge, label %for.cond5.preheader.lr.ph.i.i

cond.end87.i.for.end17.i.i_crit_edge:             ; preds = %cond.end87.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end17.i.i

for.cond5.preheader.lr.ph.i.i:                    ; preds = %cond.end87.i
  %funcs.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.cond5.preheader.i.i

for.cond5.preheader.i.i:                          ; preds = %for.inc15.i.i.for.cond5.preheader.i.i_crit_edge, %for.cond5.preheader.lr.ph.i.i
  %active_rbs.0396.i.i = phi i32 [ 0, %for.cond5.preheader.lr.ph.i.i ], [ %active_rbs.1.lcssa.i.i, %for.inc15.i.i.for.cond5.preheader.i.i_crit_edge ]
  %i.0394.i.i = phi i32 [ 0, %for.cond5.preheader.lr.ph.i.i ], [ %inc16.i.i, %for.inc15.i.i.for.cond5.preheader.i.i_crit_edge ]
  %37 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %max_sh_per_se.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp9390.not.i.i = icmp eq i32 %38, 0
  br i1 %cmp9390.not.i.i, label %for.cond5.preheader.i.i.for.inc15.i.i_crit_edge, label %for.body10.lr.ph.i.i

for.cond5.preheader.i.i.for.inc15.i.i_crit_edge:  ; preds = %for.cond5.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc15.i.i

for.body10.lr.ph.i.i:                             ; preds = %for.cond5.preheader.i.i
  %shl7.i.i.i = shl i32 %i.0394.i.i, 16
  %and8.i.i.i = and i32 %shl7.i.i.i, 16711680
  br label %for.body10.i.i

for.body10.i.i:                                   ; preds = %gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.body10.i.i_crit_edge, %for.body10.lr.ph.i.i
  %active_rbs.1392.i.i = phi i32 [ %active_rbs.0396.i.i, %for.body10.lr.ph.i.i ], [ %or.i.i, %gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.body10.i.i_crit_edge ]
  %j.0391.i.i = phi i32 [ 0, %for.body10.lr.ph.i.i ], [ %inc.i.i, %gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.body10.i.i_crit_edge ]
  %shl17.i.i.i = shl i32 %j.0391.i.i, 8
  %and18.i.i.i = and i32 %shl17.i.i.i, 65280
  %and8.i.op.i.i = or i32 %and8.i.i.i, %and18.i.i.i
  %data.2.i.i.i = or i32 %and8.i.op.i.i, 1073741824
  %39 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %virt, align 8
  %and21.i.i.i = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and21.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %for.body10.i.i.cond.false.i.i.i_crit_edge, label %land.lhs.true.i.i.i

for.body10.i.i.cond.false.i.i.i_crit_edge:        ; preds = %for.body10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body10.i.i
  %41 = ptrtoint ptr %funcs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %funcs.i.i.i, align 4
  %tobool22.not.i.i.i = icmp eq ptr %42, null
  br i1 %tobool22.not.i.i.i, label %land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge, label %land.lhs.true23.i.i.i

land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge:   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i

land.lhs.true23.i.i.i:                            ; preds = %land.lhs.true.i.i.i
  %sriov_wreg.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %42, i32 0, i32 12
  %43 = ptrtoint ptr %sriov_wreg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %sriov_wreg.i.i.i, align 4
  %tobool27.not.i.i.i = icmp eq ptr %44, null
  br i1 %tobool27.not.i.i.i, label %land.lhs.true23.i.i.i.cond.false.i.i.i_crit_edge, label %cond.true.i.i.i

land.lhs.true23.i.i.i.cond.false.i.i.i_crit_edge: ; preds = %land.lhs.true23.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i

cond.true.i.i.i:                                  ; preds = %land.lhs.true23.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %45 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx.i.i.i, align 8
  %arrayidx33.i.i.i = getelementptr i32, ptr %46, i32 1
  %47 = ptrtoint ptr %arrayidx33.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx33.i.i.i, align 4
  %add.i.i.i = add i32 %48, 8704
  tail call void %44(ptr noundef %handle, i32 noundef %add.i.i.i, i32 noundef %data.2.i.i.i, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit.i.i

cond.false.i.i.i:                                 ; preds = %land.lhs.true23.i.i.i.cond.false.i.i.i_crit_edge, %land.lhs.true.i.i.i.cond.false.i.i.i_crit_edge, %for.body10.i.i.cond.false.i.i.i_crit_edge
  %49 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i.i.i, align 8
  %arrayidx37.i.i.i = getelementptr i32, ptr %50, i32 1
  %51 = ptrtoint ptr %arrayidx37.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx37.i.i.i, align 4
  %add38.i.i.i = add i32 %52, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i.i.i, i32 noundef %data.2.i.i.i, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit.i.i

gfx_v9_0_select_se_sh.exit.i.i:                   ; preds = %cond.false.i.i.i, %cond.true.i.i.i
  %53 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %virt, align 8
  %and.i.i.i = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i359.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i359.i.i, label %gfx_v9_0_select_se_sh.exit.i.i.cond.false.i365.i.i_crit_edge, label %land.lhs.true.i361.i.i

gfx_v9_0_select_se_sh.exit.i.i.cond.false.i365.i.i_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i365.i.i

land.lhs.true.i361.i.i:                           ; preds = %gfx_v9_0_select_se_sh.exit.i.i
  %55 = ptrtoint ptr %funcs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %funcs.i.i.i, align 4
  %tobool1.not.i.i.i = icmp eq ptr %56, null
  br i1 %tobool1.not.i.i.i, label %land.lhs.true.i361.i.i.cond.false.i365.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i361.i.i.cond.false.i365.i.i_crit_edge: ; preds = %land.lhs.true.i361.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i365.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i361.i.i
  %sriov_rreg.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %56, i32 0, i32 13
  %57 = ptrtoint ptr %sriov_rreg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sriov_rreg.i.i.i, align 4
  %tobool6.not.i.i.i = icmp eq ptr %58, null
  br i1 %tobool6.not.i.i.i, label %land.lhs.true2.i.i.i.cond.false.i365.i.i_crit_edge, label %cond.true.i364.i.i

land.lhs.true2.i.i.i.cond.false.i365.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i365.i.i

cond.true.i364.i.i:                               ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %59 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx.i.i.i, align 8
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %60, align 4
  %add.i363.i.i = add i32 %62, 1597
  %call.i.i.i = tail call i32 %58(ptr noundef %handle, i32 noundef %add.i363.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i.i.i

cond.false.i365.i.i:                              ; preds = %land.lhs.true2.i.i.i.cond.false.i365.i.i_crit_edge, %land.lhs.true.i361.i.i.cond.false.i365.i.i_crit_edge, %gfx_v9_0_select_se_sh.exit.i.i.cond.false.i365.i.i_crit_edge
  %63 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx.i.i.i, align 8
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %64, align 4
  %add17.i.i.i = add i32 %66, 1597
  %call18.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17.i.i.i, i32 noundef 0) #15
  br label %cond.end.i.i.i

cond.end.i.i.i:                                   ; preds = %cond.false.i365.i.i, %cond.true.i364.i.i
  %cond.i.i.i = phi i32 [ %call.i.i.i, %cond.true.i364.i.i ], [ %call18.i.i.i, %cond.false.i365.i.i ]
  %67 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %virt, align 8
  %and21.i366.i.i = and i32 %68, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i366.i.i)
  %tobool22.not.i367.i.i = icmp eq i32 %and21.i366.i.i, 0
  br i1 %tobool22.not.i367.i.i, label %cond.end.i.i.i.cond.false45.i.i.i_crit_edge, label %land.lhs.true23.i369.i.i

cond.end.i.i.i.cond.false45.i.i.i_crit_edge:      ; preds = %cond.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false45.i.i.i

land.lhs.true23.i369.i.i:                         ; preds = %cond.end.i.i.i
  %69 = ptrtoint ptr %funcs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %funcs.i.i.i, align 4
  %tobool27.not.i368.i.i = icmp eq ptr %70, null
  br i1 %tobool27.not.i368.i.i, label %land.lhs.true23.i369.i.i.cond.false45.i.i.i_crit_edge, label %land.lhs.true28.i.i.i

land.lhs.true23.i369.i.i.cond.false45.i.i.i_crit_edge: ; preds = %land.lhs.true23.i369.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false45.i.i.i

land.lhs.true28.i.i.i:                            ; preds = %land.lhs.true23.i369.i.i
  %sriov_rreg32.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %70, i32 0, i32 13
  %71 = ptrtoint ptr %sriov_rreg32.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sriov_rreg32.i.i.i, align 4
  %tobool33.not.i.i.i = icmp eq ptr %72, null
  br i1 %tobool33.not.i.i.i, label %land.lhs.true28.i.i.i.cond.false45.i.i.i_crit_edge, label %cond.true34.i.i.i

land.lhs.true28.i.i.i.cond.false45.i.i.i_crit_edge: ; preds = %land.lhs.true28.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false45.i.i.i

cond.true34.i.i.i:                                ; preds = %land.lhs.true28.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %73 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx.i.i.i, align 8
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %74, align 4
  %add43.i.i.i = add i32 %76, 1759
  %call44.i.i.i = tail call i32 %72(ptr noundef %handle, i32 noundef %add43.i.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %gfx_v9_0_get_rb_active_bitmap.exit.i.i

cond.false45.i.i.i:                               ; preds = %land.lhs.true28.i.i.i.cond.false45.i.i.i_crit_edge, %land.lhs.true23.i369.i.i.cond.false45.i.i.i_crit_edge, %cond.end.i.i.i.cond.false45.i.i.i_crit_edge
  %77 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx.i.i.i, align 8
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %78, align 4
  %add50.i.i.i = add i32 %80, 1759
  %call51.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add50.i.i.i, i32 noundef 0) #15
  br label %gfx_v9_0_get_rb_active_bitmap.exit.i.i

gfx_v9_0_get_rb_active_bitmap.exit.i.i:           ; preds = %cond.false45.i.i.i, %cond.true34.i.i.i
  %cond53.i.i.i = phi i32 [ %call44.i.i.i, %cond.true34.i.i.i ], [ %call51.i.i.i, %cond.false45.i.i.i ]
  %or.i.i.i = or i32 %cond53.i.i.i, %cond.i.i.i
  %and54.i.i.i = lshr i32 %or.i.i.i, 16
  %shr.i.i.i = and i32 %and54.i.i.i, 255
  %81 = ptrtoint ptr %max_backends_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %max_backends_per_se.i.i, align 8
  %83 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %max_sh_per_se.i.i, align 4
  %div.i.i.i = udiv i32 %82, %84
  %sh_prom.i.i.i.i = zext i32 %div.i.i.i to i64
  %notmask.i.i.i.i = shl nsw i64 -1, %sh_prom.i.i.i.i
  %85 = trunc i64 %notmask.i.i.i.i to i32
  %and59.demorgan.i.i.i = or i32 %shr.i.i.i, %85
  %and59.i.i.i = xor i32 %and59.demorgan.i.i.i, -1
  %mul.i.i = mul i32 %84, %i.0394.i.i
  %add.i.i = add i32 %mul.i.i, %j.0391.i.i
  %mul14.i.i = mul i32 %add.i.i, %div.i.i
  %shl.i.i = shl i32 %and59.i.i.i, %mul14.i.i
  %or.i.i = or i32 %shl.i.i, %active_rbs.1392.i.i
  %inc.i.i = add nuw i32 %j.0391.i.i, 1
  %cmp9.i.i = icmp ult i32 %inc.i.i, %84
  br i1 %cmp9.i.i, label %gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.body10.i.i_crit_edge, label %gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.inc15.i.i_crit_edge

gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.inc15.i.i_crit_edge: ; preds = %gfx_v9_0_get_rb_active_bitmap.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc15.i.i

gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.body10.i.i_crit_edge: ; preds = %gfx_v9_0_get_rb_active_bitmap.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body10.i.i

for.inc15.i.i:                                    ; preds = %gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.inc15.i.i_crit_edge, %for.cond5.preheader.i.i.for.inc15.i.i_crit_edge
  %active_rbs.1.lcssa.i.i = phi i32 [ %active_rbs.0396.i.i, %for.cond5.preheader.i.i.for.inc15.i.i_crit_edge ], [ %or.i.i, %gfx_v9_0_get_rb_active_bitmap.exit.i.i.for.inc15.i.i_crit_edge ]
  %inc16.i.i = add nuw i32 %i.0394.i.i, 1
  %86 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %config.i.i, align 8
  %cmp.i.i = icmp ult i32 %inc16.i.i, %87
  br i1 %cmp.i.i, label %for.inc15.i.i.for.cond5.preheader.i.i_crit_edge, label %for.inc15.i.i.for.end17.i.i_crit_edge

for.inc15.i.i.for.end17.i.i_crit_edge:            ; preds = %for.inc15.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end17.i.i

for.inc15.i.i.for.cond5.preheader.i.i_crit_edge:  ; preds = %for.inc15.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond5.preheader.i.i

for.end17.i.i:                                    ; preds = %for.inc15.i.i.for.end17.i.i_crit_edge, %cond.end87.i.for.end17.i.i_crit_edge
  %active_rbs.0.lcssa.i.i = phi i32 [ 0, %cond.end87.i.for.end17.i.i_crit_edge ], [ %active_rbs.1.lcssa.i.i, %for.inc15.i.i.for.end17.i.i_crit_edge ]
  %88 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %virt, align 8
  %and21.i371.i.i = and i32 %89, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i371.i.i)
  %tobool.not.i372.i.i = icmp eq i32 %and21.i371.i.i, 0
  br i1 %tobool.not.i372.i.i, label %for.end17.i.i.cond.false.i386.i.i_crit_edge, label %land.lhs.true.i375.i.i

for.end17.i.i.cond.false.i386.i.i_crit_edge:      ; preds = %for.end17.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i386.i.i

land.lhs.true.i375.i.i:                           ; preds = %for.end17.i.i
  %funcs.i373.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %90 = ptrtoint ptr %funcs.i373.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %funcs.i373.i.i, align 4
  %tobool22.not.i374.i.i = icmp eq ptr %91, null
  br i1 %tobool22.not.i374.i.i, label %land.lhs.true.i375.i.i.cond.false.i386.i.i_crit_edge, label %land.lhs.true23.i378.i.i

land.lhs.true.i375.i.i.cond.false.i386.i.i_crit_edge: ; preds = %land.lhs.true.i375.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i386.i.i

land.lhs.true23.i378.i.i:                         ; preds = %land.lhs.true.i375.i.i
  %sriov_wreg.i376.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %91, i32 0, i32 12
  %92 = ptrtoint ptr %sriov_wreg.i376.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %sriov_wreg.i376.i.i, align 4
  %tobool27.not.i377.i.i = icmp eq ptr %93, null
  br i1 %tobool27.not.i377.i.i, label %land.lhs.true23.i378.i.i.cond.false.i386.i.i_crit_edge, label %cond.true.i382.i.i

land.lhs.true23.i378.i.i.cond.false.i386.i.i_crit_edge: ; preds = %land.lhs.true23.i378.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i386.i.i

cond.true.i382.i.i:                               ; preds = %land.lhs.true23.i378.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i379.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %94 = ptrtoint ptr %arrayidx.i379.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %arrayidx.i379.i.i, align 8
  %arrayidx33.i380.i.i = getelementptr i32, ptr %95, i32 1
  %96 = ptrtoint ptr %arrayidx33.i380.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %arrayidx33.i380.i.i, align 4
  %add.i381.i.i = add i32 %97, 8704
  tail call void %93(ptr noundef %handle, i32 noundef %add.i381.i.i, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit388.i.i

cond.false.i386.i.i:                              ; preds = %land.lhs.true23.i378.i.i.cond.false.i386.i.i_crit_edge, %land.lhs.true.i375.i.i.cond.false.i386.i.i_crit_edge, %for.end17.i.i.cond.false.i386.i.i_crit_edge
  %arrayidx35.i383.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %98 = ptrtoint ptr %arrayidx35.i383.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %arrayidx35.i383.i.i, align 8
  %arrayidx37.i384.i.i = getelementptr i32, ptr %99, i32 1
  %100 = ptrtoint ptr %arrayidx37.i384.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx37.i384.i.i, align 4
  %add38.i385.i.i = add i32 %101, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i385.i.i, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit388.i.i

gfx_v9_0_select_se_sh.exit388.i.i:                ; preds = %cond.false.i386.i.i, %cond.true.i382.i.i
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i.i) #15
  %backend_enable_mask.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 14
  %102 = ptrtoint ptr %backend_enable_mask.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %active_rbs.0.lcssa.i.i, ptr %backend_enable_mask.i.i, align 8
  %call.i389.i.i = tail call i32 @__sw_hweight32(i32 noundef %active_rbs.0.lcssa.i.i) #15
  %num_rbs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 24
  %103 = ptrtoint ptr %num_rbs.i.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %call.i389.i.i, ptr %num_rbs.i.i, align 8
  %cu_info.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %disable_masks.i.i) #15
  %104 = call ptr @memset(ptr %disable_masks.i.i, i32 255, i32 64)
  %tobool.not.i.i = icmp eq ptr %handle, null
  br i1 %tobool.not.i.i, label %gfx_v9_0_select_se_sh.exit388.i.i.gfx_v9_0_get_cu_info.exit.i_crit_edge, label %if.end.i.i

gfx_v9_0_select_se_sh.exit388.i.i.gfx_v9_0_get_cu_info.exit.i_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit388.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_get_cu_info.exit.i

if.end.i.i:                                       ; preds = %gfx_v9_0_select_se_sh.exit388.i.i
  %105 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %config.i.i, align 8
  %107 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %max_sh_per_se.i.i, align 4
  %mul.i384.i = mul i32 %108, %106
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %mul.i384.i)
  %cmp.i385.i = icmp ugt i32 %mul.i384.i, 16
  br i1 %cmp.i385.i, label %if.end.i.i.gfx_v9_0_get_cu_info.exit.i_crit_edge, label %if.end5.i.i

if.end.i.i.gfx_v9_0_get_cu_info.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_get_cu_info.exit.i

if.end5.i.i:                                      ; preds = %if.end.i.i
  call void @amdgpu_gfx_parse_disable_cu(ptr noundef nonnull %disable_masks.i.i, i32 noundef %106, i32 noundef %108) #15
  call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i.i, i32 noundef 0) #15
  %109 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %cmp1554.not.i.i = icmp eq i32 %110, 0
  br i1 %cmp1554.not.i.i, label %if.end5.i.i.for.end65.i.i_crit_edge, label %for.cond16.preheader.lr.ph.i.i

if.end5.i.i.for.end65.i.i_crit_edge:              ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end65.i.i

for.cond16.preheader.lr.ph.i.i:                   ; preds = %if.end5.i.i
  %funcs.i.i388.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i.i389.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %max_cu_per_sh.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 2
  br label %for.cond16.preheader.i.i

for.cond16.preheader.i.i:                         ; preds = %for.inc63.i.i.for.cond16.preheader.i.i_crit_edge, %for.cond16.preheader.lr.ph.i.i
  %ao_cu_mask.058.i.i = phi i32 [ 0, %for.cond16.preheader.lr.ph.i.i ], [ %ao_cu_mask.1.lcssa.i.i, %for.inc63.i.i.for.cond16.preheader.i.i_crit_edge ]
  %active_cu_number.057.i.i = phi i32 [ 0, %for.cond16.preheader.lr.ph.i.i ], [ %active_cu_number.1.lcssa.i.i, %for.inc63.i.i.for.cond16.preheader.i.i_crit_edge ]
  %i.055.i.i = phi i32 [ 0, %for.cond16.preheader.lr.ph.i.i ], [ %inc64.i.i, %for.inc63.i.i.for.cond16.preheader.i.i_crit_edge ]
  %111 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %max_sh_per_se.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %cmp2048.not.i.i = icmp eq i32 %112, 0
  br i1 %cmp2048.not.i.i, label %for.cond16.preheader.i.i.for.inc63.i.i_crit_edge, label %for.body21.lr.ph.i.i

for.cond16.preheader.i.i.for.inc63.i.i_crit_edge: ; preds = %for.cond16.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc63.i.i

for.body21.lr.ph.i.i:                             ; preds = %for.cond16.preheader.i.i
  %shl7.i.i390.i = shl i32 %i.055.i.i, 16
  %and8.i.i391.i = and i32 %shl7.i.i390.i, 16711680
  %i.055.i.i.frozen = freeze i32 %i.055.i.i
  %div.i393.i = sdiv i32 %i.055.i.i.frozen, 4
  %113 = mul i32 %div.i393.i, 4
  %rem.i.i.decomposed = sub i32 %i.055.i.i.frozen, %113
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %i.055.i.i)
  %cmp46.i.i = icmp slt i32 %i.055.i.i, 2
  %mul49.i.i = shl i32 %i.055.i.i, 4
  br label %for.body21.i.i

for.body21.i.i:                                   ; preds = %for.end.i.i.for.body21.i.i_crit_edge, %for.body21.lr.ph.i.i
  %ao_cu_mask.151.i.i = phi i32 [ %ao_cu_mask.058.i.i, %for.body21.lr.ph.i.i ], [ %ao_cu_mask.2.i.i, %for.end.i.i.for.body21.i.i_crit_edge ]
  %active_cu_number.150.i.i = phi i32 [ %active_cu_number.057.i.i, %for.body21.lr.ph.i.i ], [ %add45.i440.i, %for.end.i.i.for.body21.i.i_crit_edge ]
  %j.049.i.i = phi i32 [ 0, %for.body21.lr.ph.i.i ], [ %inc61.i.i, %for.end.i.i.for.body21.i.i_crit_edge ]
  %shl17.i.i394.i = shl i32 %j.049.i.i, 8
  %and18.i.i395.i = and i32 %shl17.i.i394.i, 65280
  %and8.i.op.i392.i = or i32 %and8.i.i391.i, %and18.i.i395.i
  %data.2.i.i396.i = or i32 %and8.i.op.i392.i, 1073741824
  %114 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %virt, align 8
  %and21.i.i397.i = and i32 %115, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i397.i)
  %tobool.not.i.i398.i = icmp eq i32 %and21.i.i397.i, 0
  br i1 %tobool.not.i.i398.i, label %for.body21.i.i.cond.false.i.i409.i_crit_edge, label %land.lhs.true.i.i400.i

for.body21.i.i.cond.false.i.i409.i_crit_edge:     ; preds = %for.body21.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i409.i

land.lhs.true.i.i400.i:                           ; preds = %for.body21.i.i
  %116 = ptrtoint ptr %funcs.i.i388.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %funcs.i.i388.i, align 4
  %tobool22.not.i.i399.i = icmp eq ptr %117, null
  br i1 %tobool22.not.i.i399.i, label %land.lhs.true.i.i400.i.cond.false.i.i409.i_crit_edge, label %land.lhs.true23.i.i403.i

land.lhs.true.i.i400.i.cond.false.i.i409.i_crit_edge: ; preds = %land.lhs.true.i.i400.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i409.i

land.lhs.true23.i.i403.i:                         ; preds = %land.lhs.true.i.i400.i
  %sriov_wreg.i.i401.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %117, i32 0, i32 12
  %118 = ptrtoint ptr %sriov_wreg.i.i401.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %sriov_wreg.i.i401.i, align 4
  %tobool27.not.i.i402.i = icmp eq ptr %119, null
  br i1 %tobool27.not.i.i402.i, label %land.lhs.true23.i.i403.i.cond.false.i.i409.i_crit_edge, label %cond.true.i.i406.i

land.lhs.true23.i.i403.i.cond.false.i.i409.i_crit_edge: ; preds = %land.lhs.true23.i.i403.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i409.i

cond.true.i.i406.i:                               ; preds = %land.lhs.true23.i.i403.i
  call void @__sanitizer_cov_trace_pc() #17
  %120 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %arrayidx33.i.i404.i = getelementptr i32, ptr %121, i32 1
  %122 = ptrtoint ptr %arrayidx33.i.i404.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %arrayidx33.i.i404.i, align 4
  %add.i.i405.i = add i32 %123, 8704
  call void %119(ptr noundef %handle, i32 noundef %add.i.i405.i, i32 noundef %data.2.i.i396.i, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit.i411.i

cond.false.i.i409.i:                              ; preds = %land.lhs.true23.i.i403.i.cond.false.i.i409.i_crit_edge, %land.lhs.true.i.i400.i.cond.false.i.i409.i_crit_edge, %for.body21.i.i.cond.false.i.i409.i_crit_edge
  %124 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %arrayidx37.i.i407.i = getelementptr i32, ptr %125, i32 1
  %126 = ptrtoint ptr %arrayidx37.i.i407.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %arrayidx37.i.i407.i, align 4
  %add38.i.i408.i = add i32 %127, 8704
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i.i408.i, i32 noundef %data.2.i.i396.i, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit.i411.i

gfx_v9_0_select_se_sh.exit.i411.i:                ; preds = %cond.false.i.i409.i, %cond.true.i.i406.i
  %128 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %max_sh_per_se.i.i, align 4
  %mul25.i.i = mul i32 %129, %i.055.i.i
  %add.i410.i = add i32 %mul25.i.i, %j.049.i.i
  %arrayidx.i.i = getelementptr [16 x i32], ptr %disable_masks.i.i, i32 0, i32 %add.i410.i
  %130 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool.not.i2.i.i = icmp eq i32 %131, 0
  br i1 %tobool.not.i2.i.i, label %gfx_v9_0_select_se_sh.exit.i411.i.gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i_crit_edge, label %if.end.i.i.i

gfx_v9_0_select_se_sh.exit.i411.i.gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit.i411.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i

if.end.i.i.i:                                     ; preds = %gfx_v9_0_select_se_sh.exit.i411.i
  %shl.i.i.i = shl i32 %131, 16
  %132 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %virt, align 8
  %and1.i.i.i = and i32 %133, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.cond.false.i10.i.i_crit_edge, label %land.lhs.true.i5.i.i

if.end.i.i.i.cond.false.i10.i.i_crit_edge:        ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i10.i.i

land.lhs.true.i5.i.i:                             ; preds = %if.end.i.i.i
  %134 = ptrtoint ptr %funcs.i.i388.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %funcs.i.i388.i, align 4
  %tobool3.not.i.i.i = icmp eq ptr %135, null
  br i1 %tobool3.not.i.i.i, label %land.lhs.true.i5.i.i.cond.false.i10.i.i_crit_edge, label %land.lhs.true4.i.i.i

land.lhs.true.i5.i.i.cond.false.i10.i.i_crit_edge: ; preds = %land.lhs.true.i5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i10.i.i

land.lhs.true4.i.i.i:                             ; preds = %land.lhs.true.i5.i.i
  %sriov_wreg.i6.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %135, i32 0, i32 12
  %136 = ptrtoint ptr %sriov_wreg.i6.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %sriov_wreg.i6.i.i, align 4
  %tobool8.not.i.i.i = icmp eq ptr %137, null
  br i1 %tobool8.not.i.i.i, label %land.lhs.true4.i.i.i.cond.false.i10.i.i_crit_edge, label %cond.true.i9.i.i

land.lhs.true4.i.i.i.cond.false.i10.i.i_crit_edge: ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i10.i.i

cond.true.i9.i.i:                                 ; preds = %land.lhs.true4.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %138 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %140 = ptrtoint ptr %139 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %139, align 4
  %add.i8.i.i = add i32 %141, 624
  call void %137(ptr noundef %handle, i32 noundef %add.i8.i.i, i32 noundef %shl.i.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i

cond.false.i10.i.i:                               ; preds = %land.lhs.true4.i.i.i.cond.false.i10.i.i_crit_edge, %land.lhs.true.i5.i.i.cond.false.i10.i.i_crit_edge, %if.end.i.i.i.cond.false.i10.i.i_crit_edge
  %142 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %144 = ptrtoint ptr %143 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %143, align 4
  %add19.i.i.i = add i32 %145, 624
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add19.i.i.i, i32 noundef %shl.i.i.i, i32 noundef 0) #15
  br label %gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i

gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i:    ; preds = %cond.false.i10.i.i, %cond.true.i9.i.i, %gfx_v9_0_select_se_sh.exit.i411.i.gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i_crit_edge
  %146 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %virt, align 8
  %and.i.i412.i = and i32 %147, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i412.i)
  %tobool.not.i12.i.i = icmp eq i32 %and.i.i412.i, 0
  br i1 %tobool.not.i12.i.i, label %gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i.cond.false.i18.i.i_crit_edge, label %land.lhs.true.i14.i.i

gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i.cond.false.i18.i.i_crit_edge: ; preds = %gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i18.i.i

land.lhs.true.i14.i.i:                            ; preds = %gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i
  %148 = ptrtoint ptr %funcs.i.i388.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %funcs.i.i388.i, align 4
  %tobool1.not.i.i413.i = icmp eq ptr %149, null
  br i1 %tobool1.not.i.i413.i, label %land.lhs.true.i14.i.i.cond.false.i18.i.i_crit_edge, label %land.lhs.true2.i.i416.i

land.lhs.true.i14.i.i.cond.false.i18.i.i_crit_edge: ; preds = %land.lhs.true.i14.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i18.i.i

land.lhs.true2.i.i416.i:                          ; preds = %land.lhs.true.i14.i.i
  %sriov_rreg.i.i414.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %149, i32 0, i32 13
  %150 = ptrtoint ptr %sriov_rreg.i.i414.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %sriov_rreg.i.i414.i, align 4
  %tobool6.not.i.i415.i = icmp eq ptr %151, null
  br i1 %tobool6.not.i.i415.i, label %land.lhs.true2.i.i416.i.cond.false.i18.i.i_crit_edge, label %cond.true.i17.i.i

land.lhs.true2.i.i416.i.cond.false.i18.i.i_crit_edge: ; preds = %land.lhs.true2.i.i416.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i18.i.i

cond.true.i17.i.i:                                ; preds = %land.lhs.true2.i.i416.i
  call void @__sanitizer_cov_trace_pc() #17
  %152 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %154 = ptrtoint ptr %153 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %153, align 4
  %add.i16.i.i = add i32 %155, 623
  %call.i.i417.i = call i32 %151(ptr noundef %handle, i32 noundef %add.i16.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i.i421.i

cond.false.i18.i.i:                               ; preds = %land.lhs.true2.i.i416.i.cond.false.i18.i.i_crit_edge, %land.lhs.true.i14.i.i.cond.false.i18.i.i_crit_edge, %gfx_v9_0_set_user_cu_inactive_bitmap.exit.i.i.cond.false.i18.i.i_crit_edge
  %156 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %158 = ptrtoint ptr %157 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %157, align 4
  %add17.i.i418.i = add i32 %159, 623
  %call18.i.i419.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17.i.i418.i, i32 noundef 0) #15
  br label %cond.end.i.i421.i

cond.end.i.i421.i:                                ; preds = %cond.false.i18.i.i, %cond.true.i17.i.i
  %cond.i.i420.i = phi i32 [ %call.i.i417.i, %cond.true.i17.i.i ], [ %call18.i.i419.i, %cond.false.i18.i.i ]
  %160 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %virt, align 8
  %and21.i19.i.i = and i32 %161, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i19.i.i)
  %tobool22.not.i20.i.i = icmp eq i32 %and21.i19.i.i, 0
  br i1 %tobool22.not.i20.i.i, label %cond.end.i.i421.i.cond.false45.i.i430.i_crit_edge, label %land.lhs.true23.i22.i.i

cond.end.i.i421.i.cond.false45.i.i430.i_crit_edge: ; preds = %cond.end.i.i421.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false45.i.i430.i

land.lhs.true23.i22.i.i:                          ; preds = %cond.end.i.i421.i
  %162 = ptrtoint ptr %funcs.i.i388.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %funcs.i.i388.i, align 4
  %tobool27.not.i21.i.i = icmp eq ptr %163, null
  br i1 %tobool27.not.i21.i.i, label %land.lhs.true23.i22.i.i.cond.false45.i.i430.i_crit_edge, label %land.lhs.true28.i.i424.i

land.lhs.true23.i22.i.i.cond.false45.i.i430.i_crit_edge: ; preds = %land.lhs.true23.i22.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false45.i.i430.i

land.lhs.true28.i.i424.i:                         ; preds = %land.lhs.true23.i22.i.i
  %sriov_rreg32.i.i422.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %163, i32 0, i32 13
  %164 = ptrtoint ptr %sriov_rreg32.i.i422.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %sriov_rreg32.i.i422.i, align 4
  %tobool33.not.i.i423.i = icmp eq ptr %165, null
  br i1 %tobool33.not.i.i423.i, label %land.lhs.true28.i.i424.i.cond.false45.i.i430.i_crit_edge, label %cond.true34.i.i427.i

land.lhs.true28.i.i424.i.cond.false45.i.i430.i_crit_edge: ; preds = %land.lhs.true28.i.i424.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false45.i.i430.i

cond.true34.i.i427.i:                             ; preds = %land.lhs.true28.i.i424.i
  call void @__sanitizer_cov_trace_pc() #17
  %166 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %168 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %167, align 4
  %add43.i.i425.i = add i32 %169, 624
  %call44.i.i426.i = call i32 %165(ptr noundef %handle, i32 noundef %add43.i.i425.i, i32 noundef 0, i32 noundef 1) #15
  br label %gfx_v9_0_get_cu_active_bitmap.exit.i.i

cond.false45.i.i430.i:                            ; preds = %land.lhs.true28.i.i424.i.cond.false45.i.i430.i_crit_edge, %land.lhs.true23.i22.i.i.cond.false45.i.i430.i_crit_edge, %cond.end.i.i421.i.cond.false45.i.i430.i_crit_edge
  %170 = ptrtoint ptr %arrayidx.i.i389.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %arrayidx.i.i389.i, align 8
  %172 = ptrtoint ptr %171 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %171, align 4
  %add50.i.i428.i = add i32 %173, 624
  %call51.i.i429.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add50.i.i428.i, i32 noundef 0) #15
  br label %gfx_v9_0_get_cu_active_bitmap.exit.i.i

gfx_v9_0_get_cu_active_bitmap.exit.i.i:           ; preds = %cond.false45.i.i430.i, %cond.true34.i.i427.i
  %cond53.i.i431.i = phi i32 [ %call44.i.i426.i, %cond.true34.i.i427.i ], [ %call51.i.i429.i, %cond.false45.i.i430.i ]
  %or.i.i432.i = or i32 %cond53.i.i431.i, %cond.i.i420.i
  %shr.i.i433.i = lshr i32 %or.i.i432.i, 16
  %174 = ptrtoint ptr %max_cu_per_sh.i.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %max_cu_per_sh.i.i.i, align 8
  %sh_prom.i.i.i434.i = zext i32 %175 to i64
  %notmask.i.i.i435.i = shl nsw i64 -1, %sh_prom.i.i.i434.i
  %176 = trunc i64 %notmask.i.i.i435.i to i32
  %and57.demorgan.i.i.i = or i32 %shr.i.i433.i, %176
  %and57.i.i.i = xor i32 %and57.demorgan.i.i.i, -1
  %add28.i.i = add i32 %j.049.i.i, %div.i393.i
  %arrayidx29.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 8, i32 %rem.i.i.decomposed, i32 %add28.i.i
  %177 = ptrtoint ptr %arrayidx29.i.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 %and57.i.i.i, ptr %arrayidx29.i.i, align 4
  %178 = load i32, ptr %max_cu_per_sh.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %178)
  %cmp3342.not.i.i = icmp eq i32 %178, 0
  br i1 %cmp3342.not.i.i, label %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.end.i.i_crit_edge, label %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.body34.i.i_crit_edge

gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.body34.i.i_crit_edge: ; preds = %gfx_v9_0_get_cu_active_bitmap.exit.i.i
  br label %for.body34.i.i

gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.end.i.i_crit_edge: ; preds = %gfx_v9_0_get_cu_active_bitmap.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.body34.i.i:                                   ; preds = %for.body34.i.i.for.body34.i.i_crit_edge, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.body34.i.i_crit_edge
  %ao_bitmap.046.i.i = phi i32 [ %ao_bitmap.2.i.i, %for.body34.i.i.for.body34.i.i_crit_edge ], [ 0, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.body34.i.i_crit_edge ]
  %mask.045.i.i = phi i32 [ %shl.i439.i, %for.body34.i.i.for.body34.i.i_crit_edge ], [ 1, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.body34.i.i_crit_edge ]
  %counter.044.i.i = phi i32 [ %counter.1.i.i, %for.body34.i.i.for.body34.i.i_crit_edge ], [ 0, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.body34.i.i_crit_edge ]
  %k.043.i.i = phi i32 [ %inc44.i.i, %for.body34.i.i.for.body34.i.i_crit_edge ], [ 0, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.body34.i.i_crit_edge ]
  %and.i436.i = and i32 %mask.045.i.i, %and57.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i436.i)
  %tobool35.not.i.i = icmp eq i32 %and.i436.i, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %counter.044.i.i, i32 %178)
  %cmp40.i.i = icmp ult i32 %counter.044.i.i, %178
  %or.i437.i = select i1 %cmp40.i.i, i32 %mask.045.i.i, i32 0
  %not.tobool35.not.i.i = xor i1 %tobool35.not.i.i, true
  %inc.i438.i = zext i1 %not.tobool35.not.i.i to i32
  %counter.1.i.i = add i32 %counter.044.i.i, %inc.i438.i
  %spec.select.i.i = select i1 %tobool35.not.i.i, i32 0, i32 %or.i437.i
  %ao_bitmap.2.i.i = or i32 %spec.select.i.i, %ao_bitmap.046.i.i
  %shl.i439.i = shl i32 %mask.045.i.i, 1
  %inc44.i.i = add nuw i32 %k.043.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc44.i.i, %178
  br i1 %exitcond.not.i.i, label %for.body34.i.i.for.end.i.i_crit_edge, label %for.body34.i.i.for.body34.i.i_crit_edge

for.body34.i.i.for.body34.i.i_crit_edge:          ; preds = %for.body34.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body34.i.i

for.body34.i.i.for.end.i.i_crit_edge:             ; preds = %for.body34.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body34.i.i.for.end.i.i_crit_edge, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.end.i.i_crit_edge
  %counter.0.lcssa.i.i = phi i32 [ 0, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.end.i.i_crit_edge ], [ %counter.1.i.i, %for.body34.i.i.for.end.i.i_crit_edge ]
  %ao_bitmap.0.lcssa.i.i = phi i32 [ 0, %gfx_v9_0_get_cu_active_bitmap.exit.i.i.for.end.i.i_crit_edge ], [ %ao_bitmap.2.i.i, %for.body34.i.i.for.end.i.i_crit_edge ]
  %add45.i440.i = add i32 %counter.0.lcssa.i.i, %active_cu_number.150.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %j.049.i.i)
  %cmp47.i.i = icmp slt i32 %j.049.i.i, 2
  %or.cond1.i.i = select i1 %cmp46.i.i, i1 %cmp47.i.i, i1 false
  %mul50.i.i = shl i32 %j.049.i.i, 3
  %add51.i.i = add i32 %mul50.i.i, %mul49.i.i
  %shl52.i.i = shl i32 %ao_bitmap.0.lcssa.i.i, %add51.i.i
  %or53.i.i = select i1 %or.cond1.i.i, i32 %shl52.i.i, i32 0
  %ao_cu_mask.2.i.i = or i32 %or53.i.i, %ao_cu_mask.151.i.i
  %arrayidx59.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 7, i32 %rem.i.i.decomposed, i32 %add28.i.i
  %179 = ptrtoint ptr %arrayidx59.i.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %ao_bitmap.0.lcssa.i.i, ptr %arrayidx59.i.i, align 4
  %inc61.i.i = add nuw i32 %j.049.i.i, 1
  %180 = ptrtoint ptr %max_sh_per_se.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %max_sh_per_se.i.i, align 4
  %cmp20.i.i = icmp ult i32 %inc61.i.i, %181
  br i1 %cmp20.i.i, label %for.end.i.i.for.body21.i.i_crit_edge, label %for.end.i.i.for.inc63.i.i_crit_edge

for.end.i.i.for.inc63.i.i_crit_edge:              ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc63.i.i

for.end.i.i.for.body21.i.i_crit_edge:             ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body21.i.i

for.inc63.i.i:                                    ; preds = %for.end.i.i.for.inc63.i.i_crit_edge, %for.cond16.preheader.i.i.for.inc63.i.i_crit_edge
  %active_cu_number.1.lcssa.i.i = phi i32 [ %active_cu_number.057.i.i, %for.cond16.preheader.i.i.for.inc63.i.i_crit_edge ], [ %add45.i440.i, %for.end.i.i.for.inc63.i.i_crit_edge ]
  %ao_cu_mask.1.lcssa.i.i = phi i32 [ %ao_cu_mask.058.i.i, %for.cond16.preheader.i.i.for.inc63.i.i_crit_edge ], [ %ao_cu_mask.2.i.i, %for.end.i.i.for.inc63.i.i_crit_edge ]
  %inc64.i.i = add nuw i32 %i.055.i.i, 1
  %182 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %config.i.i, align 8
  %cmp15.i.i = icmp ult i32 %inc64.i.i, %183
  br i1 %cmp15.i.i, label %for.inc63.i.i.for.cond16.preheader.i.i_crit_edge, label %for.inc63.i.i.for.end65.i.i_crit_edge

for.inc63.i.i.for.end65.i.i_crit_edge:            ; preds = %for.inc63.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end65.i.i

for.inc63.i.i.for.cond16.preheader.i.i_crit_edge: ; preds = %for.inc63.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond16.preheader.i.i

for.end65.i.i:                                    ; preds = %for.inc63.i.i.for.end65.i.i_crit_edge, %if.end5.i.i.for.end65.i.i_crit_edge
  %active_cu_number.0.lcssa.i.i = phi i32 [ 0, %if.end5.i.i.for.end65.i.i_crit_edge ], [ %active_cu_number.1.lcssa.i.i, %for.inc63.i.i.for.end65.i.i_crit_edge ]
  %ao_cu_mask.0.lcssa.i.i = phi i32 [ 0, %if.end5.i.i.for.end65.i.i_crit_edge ], [ %ao_cu_mask.1.lcssa.i.i, %for.inc63.i.i.for.end65.i.i_crit_edge ]
  %184 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %virt, align 8
  %and21.i24.i.i = and i32 %185, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i24.i.i)
  %tobool.not.i25.i.i = icmp eq i32 %and21.i24.i.i, 0
  br i1 %tobool.not.i25.i.i, label %for.end65.i.i.cond.false.i39.i.i_crit_edge, label %land.lhs.true.i28.i.i

for.end65.i.i.cond.false.i39.i.i_crit_edge:       ; preds = %for.end65.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i39.i.i

land.lhs.true.i28.i.i:                            ; preds = %for.end65.i.i
  %funcs.i26.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %186 = ptrtoint ptr %funcs.i26.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %funcs.i26.i.i, align 4
  %tobool22.not.i27.i.i = icmp eq ptr %187, null
  br i1 %tobool22.not.i27.i.i, label %land.lhs.true.i28.i.i.cond.false.i39.i.i_crit_edge, label %land.lhs.true23.i31.i.i

land.lhs.true.i28.i.i.cond.false.i39.i.i_crit_edge: ; preds = %land.lhs.true.i28.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i39.i.i

land.lhs.true23.i31.i.i:                          ; preds = %land.lhs.true.i28.i.i
  %sriov_wreg.i29.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %187, i32 0, i32 12
  %188 = ptrtoint ptr %sriov_wreg.i29.i.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %sriov_wreg.i29.i.i, align 4
  %tobool27.not.i30.i.i = icmp eq ptr %189, null
  br i1 %tobool27.not.i30.i.i, label %land.lhs.true23.i31.i.i.cond.false.i39.i.i_crit_edge, label %cond.true.i35.i.i

land.lhs.true23.i31.i.i.cond.false.i39.i.i_crit_edge: ; preds = %land.lhs.true23.i31.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i39.i.i

cond.true.i35.i.i:                                ; preds = %land.lhs.true23.i31.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i32.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %190 = ptrtoint ptr %arrayidx.i32.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %arrayidx.i32.i.i, align 8
  %arrayidx33.i33.i.i = getelementptr i32, ptr %191, i32 1
  %192 = ptrtoint ptr %arrayidx33.i33.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %arrayidx33.i33.i.i, align 4
  %add.i34.i.i = add i32 %193, 8704
  call void %189(ptr noundef %handle, i32 noundef %add.i34.i.i, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit41.i.i

cond.false.i39.i.i:                               ; preds = %land.lhs.true23.i31.i.i.cond.false.i39.i.i_crit_edge, %land.lhs.true.i28.i.i.cond.false.i39.i.i_crit_edge, %for.end65.i.i.cond.false.i39.i.i_crit_edge
  %arrayidx35.i36.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %194 = ptrtoint ptr %arrayidx35.i36.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %arrayidx35.i36.i.i, align 8
  %arrayidx37.i37.i.i = getelementptr i32, ptr %195, i32 1
  %196 = ptrtoint ptr %arrayidx37.i37.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %arrayidx37.i37.i.i, align 4
  %add38.i38.i.i = add i32 %197, 8704
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add38.i38.i.i, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit41.i.i

gfx_v9_0_select_se_sh.exit41.i.i:                 ; preds = %cond.false.i39.i.i, %cond.true.i35.i.i
  call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i.i) #15
  %number.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 5
  %198 = ptrtoint ptr %number.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %active_cu_number.0.lcssa.i.i, ptr %number.i.i, align 4
  %ao_cu_mask67.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 48, i32 6
  %199 = ptrtoint ptr %ao_cu_mask67.i.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %ao_cu_mask.0.lcssa.i.i, ptr %ao_cu_mask67.i.i, align 4
  %200 = ptrtoint ptr %cu_info.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 4, ptr %cu_info.i, align 4
  br label %gfx_v9_0_get_cu_info.exit.i

gfx_v9_0_get_cu_info.exit.i:                      ; preds = %gfx_v9_0_select_se_sh.exit41.i.i, %if.end.i.i.gfx_v9_0_get_cu_info.exit.i_crit_edge, %gfx_v9_0_select_se_sh.exit388.i.i.gfx_v9_0_get_cu_info.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %disable_masks.i.i) #15
  %201 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %virt, align 8
  %and92.i = and i32 %202, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and92.i)
  %tobool93.not.i = icmp eq i32 %and92.i, 0
  br i1 %tobool93.not.i, label %gfx_v9_0_get_cu_info.exit.i.cond.false116.i_crit_edge, label %land.lhs.true94.i

gfx_v9_0_get_cu_info.exit.i.cond.false116.i_crit_edge: ; preds = %gfx_v9_0_get_cu_info.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false116.i

land.lhs.true94.i:                                ; preds = %gfx_v9_0_get_cu_info.exit.i
  %funcs97.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %203 = ptrtoint ptr %funcs97.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %funcs97.i, align 4
  %tobool98.not.i = icmp eq ptr %204, null
  br i1 %tobool98.not.i, label %land.lhs.true94.i.cond.false116.i_crit_edge, label %land.lhs.true99.i

land.lhs.true94.i.cond.false116.i_crit_edge:      ; preds = %land.lhs.true94.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false116.i

land.lhs.true99.i:                                ; preds = %land.lhs.true94.i
  %sriov_rreg103.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %204, i32 0, i32 13
  %205 = ptrtoint ptr %sriov_rreg103.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %sriov_rreg103.i, align 4
  %tobool104.not.i = icmp eq ptr %206, null
  br i1 %tobool104.not.i, label %land.lhs.true99.i.cond.false116.i_crit_edge, label %cond.true105.i

land.lhs.true99.i.cond.false116.i_crit_edge:      ; preds = %land.lhs.true99.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false116.i

cond.true105.i:                                   ; preds = %land.lhs.true99.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx111.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %207 = ptrtoint ptr %arrayidx111.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %arrayidx111.i, align 8
  %209 = ptrtoint ptr %208 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %208, align 4
  %add114.i = add i32 %210, 1549
  %call115.i = call i32 %206(ptr noundef %handle, i32 noundef %add114.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end123.i

cond.false116.i:                                  ; preds = %land.lhs.true99.i.cond.false116.i_crit_edge, %land.lhs.true94.i.cond.false116.i_crit_edge, %gfx_v9_0_get_cu_info.exit.i.cond.false116.i_crit_edge
  %arrayidx118.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %211 = ptrtoint ptr %arrayidx118.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %arrayidx118.i, align 8
  %213 = ptrtoint ptr %212 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %212, align 4
  %add121.i = add i32 %214, 1549
  %call122.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add121.i, i32 noundef 0) #15
  br label %cond.end123.i

cond.end123.i:                                    ; preds = %cond.false116.i, %cond.true105.i
  %cond124.i = phi i32 [ %call115.i, %cond.true105.i ], [ %call122.i, %cond.false116.i ]
  %db_debug2.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 32
  %215 = ptrtoint ptr %db_debug2.i to i32
  call void @__asan_store4_noabort(i32 %215)
  store i32 %cond124.i, ptr %db_debug2.i, align 8
  %srbm_mutex.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 20
  call void @mutex_lock_nested(ptr noundef %srbm_mutex.i, i32 noundef 0) #15
  %num_ids.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 65, i32 0, i32 0, i32 1
  %216 = ptrtoint ptr %num_ids.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %num_ids.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %217)
  %cmp496.not.i = icmp eq i32 %217, 0
  br i1 %cmp496.not.i, label %cond.end123.i.for.end.i_crit_edge, label %for.body.lr.ph.i

cond.end123.i.for.end.i_crit_edge:                ; preds = %cond.end123.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %cond.end123.i
  %noretry193.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 41
  %arrayidx205.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %funcs216.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %private_aperture_start.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 28
  %shared_aperture_start.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 26
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0497.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  call void @soc15_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef %i.0497.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0497.i)
  %cmp127.i = icmp eq i32 %i.0497.i, 0
  %218 = ptrtoint ptr %noretry193.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %noretry193.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %219)
  %tobool129.not.i = icmp eq i32 %219, 0
  %or132.i = select i1 %tobool129.not.i, i32 24, i32 4120
  %220 = ptrtoint ptr %arrayidx205.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %arrayidx205.i, align 8
  %222 = ptrtoint ptr %221 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %221, align 4
  %add137.i = add i32 %223, 781
  %224 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %virt, align 8
  %and140.i = and i32 %225, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and140.i)
  %tobool141.not.i = icmp eq i32 %and140.i, 0
  br i1 %cmp127.i, label %if.then.i28, label %if.else.i29

if.then.i28:                                      ; preds = %for.body.i
  br i1 %tobool141.not.i, label %if.then.i28.cond.false158.i_crit_edge, label %land.lhs.true142.i

if.then.i28.cond.false158.i_crit_edge:            ; preds = %if.then.i28
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false158.i

land.lhs.true142.i:                               ; preds = %if.then.i28
  %226 = ptrtoint ptr %funcs216.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %funcs216.i, align 4
  %tobool146.not.i = icmp eq ptr %227, null
  br i1 %tobool146.not.i, label %land.lhs.true142.i.cond.false158.i_crit_edge, label %land.lhs.true147.i

land.lhs.true142.i.cond.false158.i_crit_edge:     ; preds = %land.lhs.true142.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false158.i

land.lhs.true147.i:                               ; preds = %land.lhs.true142.i
  %sriov_wreg151.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %227, i32 0, i32 12
  %228 = ptrtoint ptr %sriov_wreg151.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %sriov_wreg151.i, align 4
  %tobool152.not.i = icmp eq ptr %229, null
  br i1 %tobool152.not.i, label %land.lhs.true147.i.cond.false158.i_crit_edge, label %cond.true153.i

land.lhs.true147.i.cond.false158.i_crit_edge:     ; preds = %land.lhs.true147.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false158.i

cond.true153.i:                                   ; preds = %land.lhs.true147.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %229(ptr noundef %handle, i32 noundef %add137.i, i32 noundef %or132.i, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end159.i

cond.false158.i:                                  ; preds = %land.lhs.true147.i.cond.false158.i_crit_edge, %land.lhs.true142.i.cond.false158.i_crit_edge, %if.then.i28.cond.false158.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add137.i, i32 noundef %or132.i, i32 noundef 0) #15
  br label %cond.end159.i

cond.end159.i:                                    ; preds = %cond.false158.i, %cond.true153.i
  %230 = ptrtoint ptr %arrayidx205.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %arrayidx205.i, align 8
  %232 = ptrtoint ptr %231 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %231, align 4
  %add166.i = add i32 %233, 778
  %234 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %virt, align 8
  %and169.i = and i32 %235, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and169.i)
  %tobool170.not.i = icmp eq i32 %and169.i, 0
  br i1 %tobool170.not.i, label %cond.end159.i.cond.false187.i_crit_edge, label %land.lhs.true171.i

cond.end159.i.cond.false187.i_crit_edge:          ; preds = %cond.end159.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false187.i

land.lhs.true171.i:                               ; preds = %cond.end159.i
  %236 = ptrtoint ptr %funcs216.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %funcs216.i, align 4
  %tobool175.not.i = icmp eq ptr %237, null
  br i1 %tobool175.not.i, label %land.lhs.true171.i.cond.false187.i_crit_edge, label %land.lhs.true176.i

land.lhs.true171.i.cond.false187.i_crit_edge:     ; preds = %land.lhs.true171.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false187.i

land.lhs.true176.i:                               ; preds = %land.lhs.true171.i
  %sriov_wreg180.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %237, i32 0, i32 12
  %238 = ptrtoint ptr %sriov_wreg180.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %sriov_wreg180.i, align 4
  %tobool181.not.i = icmp eq ptr %239, null
  br i1 %tobool181.not.i, label %land.lhs.true176.i.cond.false187.i_crit_edge, label %cond.true182.i

land.lhs.true176.i.cond.false187.i_crit_edge:     ; preds = %land.lhs.true176.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false187.i

cond.true182.i:                                   ; preds = %land.lhs.true176.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %239(ptr noundef %handle, i32 noundef %add166.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %for.inc.i

cond.false187.i:                                  ; preds = %land.lhs.true176.i.cond.false187.i_crit_edge, %land.lhs.true171.i.cond.false187.i_crit_edge, %cond.end159.i.cond.false187.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add166.i, i32 noundef 0, i32 noundef 0) #15
  br label %for.inc.i

if.else.i29:                                      ; preds = %for.body.i
  br i1 %tobool141.not.i, label %if.else.i29.cond.false229.i_crit_edge, label %land.lhs.true213.i

if.else.i29.cond.false229.i_crit_edge:            ; preds = %if.else.i29
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false229.i

land.lhs.true213.i:                               ; preds = %if.else.i29
  %240 = ptrtoint ptr %funcs216.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %funcs216.i, align 4
  %tobool217.not.i = icmp eq ptr %241, null
  br i1 %tobool217.not.i, label %land.lhs.true213.i.cond.false229.i_crit_edge, label %land.lhs.true218.i

land.lhs.true213.i.cond.false229.i_crit_edge:     ; preds = %land.lhs.true213.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false229.i

land.lhs.true218.i:                               ; preds = %land.lhs.true213.i
  %sriov_wreg222.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %241, i32 0, i32 12
  %242 = ptrtoint ptr %sriov_wreg222.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %sriov_wreg222.i, align 4
  %tobool223.not.i = icmp eq ptr %243, null
  br i1 %tobool223.not.i, label %land.lhs.true218.i.cond.false229.i_crit_edge, label %cond.true224.i

land.lhs.true218.i.cond.false229.i_crit_edge:     ; preds = %land.lhs.true218.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false229.i

cond.true224.i:                                   ; preds = %land.lhs.true218.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %243(ptr noundef %handle, i32 noundef %add137.i, i32 noundef %or132.i, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end230.i

cond.false229.i:                                  ; preds = %land.lhs.true218.i.cond.false229.i_crit_edge, %land.lhs.true213.i.cond.false229.i_crit_edge, %if.else.i29.cond.false229.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add137.i, i32 noundef %or132.i, i32 noundef 0) #15
  br label %cond.end230.i

cond.end230.i:                                    ; preds = %cond.false229.i, %cond.true224.i
  %244 = ptrtoint ptr %private_aperture_start.i to i32
  call void @__asan_load8_noabort(i32 %244)
  %245 = load i64, ptr %private_aperture_start.i, align 8
  %shr.i = lshr i64 %245, 48
  %246 = ptrtoint ptr %shared_aperture_start.i to i32
  call void @__asan_load8_noabort(i32 %246)
  %247 = load i64, ptr %shared_aperture_start.i, align 8
  %248 = lshr i64 %247, 32
  %shl241.i = and i64 %248, 4294901760
  %or243.i = or i64 %shl241.i, %shr.i
  %conv244.i = trunc i64 %or243.i to i32
  %249 = ptrtoint ptr %arrayidx205.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %arrayidx205.i, align 8
  %251 = ptrtoint ptr %250 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %250, align 4
  %add251.i = add i32 %252, 778
  %253 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %virt, align 8
  %and254.i = and i32 %254, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and254.i)
  %tobool255.not.i = icmp eq i32 %and254.i, 0
  br i1 %tobool255.not.i, label %cond.end230.i.cond.false272.i_crit_edge, label %land.lhs.true256.i

cond.end230.i.cond.false272.i_crit_edge:          ; preds = %cond.end230.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272.i

land.lhs.true256.i:                               ; preds = %cond.end230.i
  %255 = ptrtoint ptr %funcs216.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %funcs216.i, align 4
  %tobool260.not.i = icmp eq ptr %256, null
  br i1 %tobool260.not.i, label %land.lhs.true256.i.cond.false272.i_crit_edge, label %land.lhs.true261.i

land.lhs.true256.i.cond.false272.i_crit_edge:     ; preds = %land.lhs.true256.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272.i

land.lhs.true261.i:                               ; preds = %land.lhs.true256.i
  %sriov_wreg265.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %256, i32 0, i32 12
  %257 = ptrtoint ptr %sriov_wreg265.i to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load ptr, ptr %sriov_wreg265.i, align 4
  %tobool266.not.i = icmp eq ptr %258, null
  br i1 %tobool266.not.i, label %land.lhs.true261.i.cond.false272.i_crit_edge, label %cond.true267.i

land.lhs.true261.i.cond.false272.i_crit_edge:     ; preds = %land.lhs.true261.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272.i

cond.true267.i:                                   ; preds = %land.lhs.true261.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %258(ptr noundef %handle, i32 noundef %add251.i, i32 noundef %conv244.i, i32 noundef 4, i32 noundef 1) #15
  br label %for.inc.i

cond.false272.i:                                  ; preds = %land.lhs.true261.i.cond.false272.i_crit_edge, %land.lhs.true256.i.cond.false272.i_crit_edge, %cond.end230.i.cond.false272.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add251.i, i32 noundef %conv244.i, i32 noundef 0) #15
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.false272.i, %cond.true267.i, %cond.false187.i, %cond.true182.i
  %inc.i = add nuw i32 %i.0497.i, 1
  %259 = ptrtoint ptr %num_ids.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %num_ids.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %260
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %cond.end123.i.for.end.i_crit_edge
  call void @soc15_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #15
  call void @mutex_unlock(ptr noundef %srbm_mutex.i) #15
  call void @mutex_lock_nested(ptr noundef %srbm_mutex.i, i32 noundef 0) #15
  %first_kfd_vmid.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 65, i32 1
  %261 = ptrtoint ptr %first_kfd_vmid.i.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %first_kfd_vmid.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %262)
  %cmp270.i.i = icmp slt i32 %262, 16
  br i1 %cmp270.i.i, label %for.body.lr.ph.i.i, label %for.end.i.for.end.i449.i_crit_edge

for.end.i.for.end.i449.i_crit_edge:               ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i449.i

for.body.lr.ph.i.i:                               ; preds = %for.end.i
  %arrayidx.i441.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %cond.end41.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.0271.i.i = phi i32 [ %262, %for.body.lr.ph.i.i ], [ %inc.i447.i, %cond.end41.i.i.for.body.i.i_crit_edge ]
  call void @soc15_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef %i.0271.i.i) #15
  %263 = ptrtoint ptr %arrayidx.i441.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %arrayidx.i441.i, align 8
  %265 = ptrtoint ptr %264 to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load i32, ptr %264, align 4
  %add.i442.i = add i32 %266, 781
  %267 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %virt, align 8
  %and.i443.i = and i32 %268, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i443.i)
  %tobool.not.i444.i = icmp eq i32 %and.i443.i, 0
  br i1 %tobool.not.i444.i, label %for.body.i.i.cond.false.i446.i_crit_edge, label %land.lhs.true.i.i

for.body.i.i.cond.false.i446.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i446.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %269 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %funcs.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %270, null
  br i1 %tobool3.not.i.i, label %land.lhs.true.i.i.cond.false.i446.i_crit_edge, label %land.lhs.true4.i.i

land.lhs.true.i.i.cond.false.i446.i_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i446.i

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %270, i32 0, i32 12
  %271 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool8.not.i.i = icmp eq ptr %272, null
  br i1 %tobool8.not.i.i, label %land.lhs.true4.i.i.cond.false.i446.i_crit_edge, label %cond.true.i445.i

land.lhs.true4.i.i.cond.false.i446.i_crit_edge:   ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i446.i

cond.true.i445.i:                                 ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %272(ptr noundef %handle, i32 noundef %add.i442.i, i32 noundef 24, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end.i.i

cond.false.i446.i:                                ; preds = %land.lhs.true4.i.i.cond.false.i446.i_crit_edge, %land.lhs.true.i.i.cond.false.i446.i_crit_edge, %for.body.i.i.cond.false.i446.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add.i442.i, i32 noundef 24, i32 noundef 0) #15
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i446.i, %cond.true.i445.i
  %273 = ptrtoint ptr %arrayidx.i441.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load ptr, ptr %arrayidx.i441.i, align 8
  %275 = ptrtoint ptr %274 to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load i32, ptr %274, align 4
  %add19.i.i = add i32 %276, 778
  %277 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load i32, ptr %virt, align 8
  %and22.i.i = and i32 %278, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i.i)
  %tobool23.not.i.i = icmp eq i32 %and22.i.i, 0
  br i1 %tobool23.not.i.i, label %cond.end.i.i.cond.false40.i.i_crit_edge, label %land.lhs.true24.i.i

cond.end.i.i.cond.false40.i.i_crit_edge:          ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false40.i.i

land.lhs.true24.i.i:                              ; preds = %cond.end.i.i
  %279 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load ptr, ptr %funcs.i.i, align 4
  %tobool28.not.i.i = icmp eq ptr %280, null
  br i1 %tobool28.not.i.i, label %land.lhs.true24.i.i.cond.false40.i.i_crit_edge, label %land.lhs.true29.i.i

land.lhs.true24.i.i.cond.false40.i.i_crit_edge:   ; preds = %land.lhs.true24.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false40.i.i

land.lhs.true29.i.i:                              ; preds = %land.lhs.true24.i.i
  %sriov_wreg33.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %280, i32 0, i32 12
  %281 = ptrtoint ptr %sriov_wreg33.i.i to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load ptr, ptr %sriov_wreg33.i.i, align 4
  %tobool34.not.i.i = icmp eq ptr %282, null
  br i1 %tobool34.not.i.i, label %land.lhs.true29.i.i.cond.false40.i.i_crit_edge, label %cond.true35.i.i

land.lhs.true29.i.i.cond.false40.i.i_crit_edge:   ; preds = %land.lhs.true29.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false40.i.i

cond.true35.i.i:                                  ; preds = %land.lhs.true29.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %282(ptr noundef %handle, i32 noundef %add19.i.i, i32 noundef 1610637312, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end41.i.i

cond.false40.i.i:                                 ; preds = %land.lhs.true29.i.i.cond.false40.i.i_crit_edge, %land.lhs.true24.i.i.cond.false40.i.i_crit_edge, %cond.end.i.i.cond.false40.i.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add19.i.i, i32 noundef 1610637312, i32 noundef 0) #15
  br label %cond.end41.i.i

cond.end41.i.i:                                   ; preds = %cond.false40.i.i, %cond.true35.i.i
  %inc.i447.i = add i32 %i.0271.i.i, 1
  %exitcond.not.i448.i = icmp eq i32 %inc.i447.i, 16
  br i1 %exitcond.not.i448.i, label %cond.end41.i.i.for.end.i449.i_crit_edge, label %cond.end41.i.i.for.body.i.i_crit_edge

cond.end41.i.i.for.body.i.i_crit_edge:            ; preds = %cond.end41.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

cond.end41.i.i.for.end.i449.i_crit_edge:          ; preds = %cond.end41.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i449.i

for.end.i449.i:                                   ; preds = %cond.end41.i.i.for.end.i449.i_crit_edge, %for.end.i.for.end.i449.i_crit_edge
  call void @soc15_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #15
  call void @mutex_unlock(ptr noundef %srbm_mutex.i) #15
  %283 = ptrtoint ptr %first_kfd_vmid.i.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load i32, ptr %first_kfd_vmid.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %284)
  %cmp48272.i.i = icmp slt i32 %284, 16
  br i1 %cmp48272.i.i, label %for.body49.lr.ph.i.i, label %for.end.i449.i.gfx_v9_0_init_compute_vmid.exit.i_crit_edge

for.end.i449.i.gfx_v9_0_init_compute_vmid.exit.i_crit_edge: ; preds = %for.end.i449.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_compute_vmid.exit.i

for.body49.lr.ph.i.i:                             ; preds = %for.end.i449.i
  %funcs57.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx71.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.body49.i.i

for.body49.i.i:                                   ; preds = %for.inc189.i.i.for.body49.i.i_crit_edge, %for.body49.lr.ph.i.i
  %i.1273.i.i = phi i32 [ %284, %for.body49.lr.ph.i.i ], [ %inc190.i.i, %for.inc189.i.i.for.body49.i.i_crit_edge ]
  %285 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load i32, ptr %virt, align 8
  %and52.i.i = and i32 %286, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52.i.i)
  %tobool53.not.i.i = icmp eq i32 %and52.i.i, 0
  br i1 %tobool53.not.i.i, label %for.body49.i.i.cond.false76.i.i_crit_edge, label %land.lhs.true54.i.i

for.body49.i.i.cond.false76.i.i_crit_edge:        ; preds = %for.body49.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.i.i

land.lhs.true54.i.i:                              ; preds = %for.body49.i.i
  %287 = ptrtoint ptr %funcs57.i.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load ptr, ptr %funcs57.i.i, align 4
  %tobool58.not.i.i = icmp eq ptr %288, null
  br i1 %tobool58.not.i.i, label %land.lhs.true54.i.i.cond.false76.i.i_crit_edge, label %land.lhs.true59.i.i

land.lhs.true54.i.i.cond.false76.i.i_crit_edge:   ; preds = %land.lhs.true54.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.i.i

land.lhs.true59.i.i:                              ; preds = %land.lhs.true54.i.i
  %sriov_wreg63.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %288, i32 0, i32 12
  %289 = ptrtoint ptr %sriov_wreg63.i.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %sriov_wreg63.i.i, align 4
  %tobool64.not.i.i = icmp eq ptr %290, null
  br i1 %tobool64.not.i.i, label %land.lhs.true59.i.i.cond.false76.i.i_crit_edge, label %cond.true65.i.i

land.lhs.true59.i.i.cond.false76.i.i_crit_edge:   ; preds = %land.lhs.true59.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.i.i

cond.true65.i.i:                                  ; preds = %land.lhs.true59.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %291 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %arrayidx71.i.i, align 8
  %293 = ptrtoint ptr %292 to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %292, align 4
  %mul.i450.i = shl i32 %i.1273.i.i, 1
  %add74.i.i = add i32 %mul.i450.i, 4864
  %add75.i.i = add i32 %add74.i.i, %294
  call void %290(ptr noundef %handle, i32 noundef %add75.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end84.i.i

cond.false76.i.i:                                 ; preds = %land.lhs.true59.i.i.cond.false76.i.i_crit_edge, %land.lhs.true54.i.i.cond.false76.i.i_crit_edge, %for.body49.i.i.cond.false76.i.i_crit_edge
  %295 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %arrayidx71.i.i, align 8
  %297 = ptrtoint ptr %296 to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %296, align 4
  %mul82.i.i = shl i32 %i.1273.i.i, 1
  %add81.i.i = add i32 %mul82.i.i, 4864
  %add83.i.i = add i32 %add81.i.i, %298
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add83.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end84.i.i

cond.end84.i.i:                                   ; preds = %cond.false76.i.i, %cond.true65.i.i
  %299 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load i32, ptr %virt, align 8
  %and87.i451.i = and i32 %300, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and87.i451.i)
  %tobool88.not.i.i = icmp eq i32 %and87.i451.i, 0
  br i1 %tobool88.not.i.i, label %cond.end84.i.i.cond.false112.i.i_crit_edge, label %land.lhs.true89.i.i

cond.end84.i.i.cond.false112.i.i_crit_edge:       ; preds = %cond.end84.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false112.i.i

land.lhs.true89.i.i:                              ; preds = %cond.end84.i.i
  %301 = ptrtoint ptr %funcs57.i.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load ptr, ptr %funcs57.i.i, align 4
  %tobool93.not.i.i = icmp eq ptr %302, null
  br i1 %tobool93.not.i.i, label %land.lhs.true89.i.i.cond.false112.i.i_crit_edge, label %land.lhs.true94.i.i

land.lhs.true89.i.i.cond.false112.i.i_crit_edge:  ; preds = %land.lhs.true89.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false112.i.i

land.lhs.true94.i.i:                              ; preds = %land.lhs.true89.i.i
  %sriov_wreg98.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %302, i32 0, i32 12
  %303 = ptrtoint ptr %sriov_wreg98.i.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load ptr, ptr %sriov_wreg98.i.i, align 4
  %tobool99.not.i.i = icmp eq ptr %304, null
  br i1 %tobool99.not.i.i, label %land.lhs.true94.i.i.cond.false112.i.i_crit_edge, label %cond.true100.i.i

land.lhs.true94.i.i.cond.false112.i.i_crit_edge:  ; preds = %land.lhs.true94.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false112.i.i

cond.true100.i.i:                                 ; preds = %land.lhs.true94.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %305 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %arrayidx71.i.i, align 8
  %307 = ptrtoint ptr %306 to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load i32, ptr %306, align 4
  %mul110.i.i = shl i32 %i.1273.i.i, 1
  %add109.i.i = add i32 %mul110.i.i, 4865
  %add111.i452.i = add i32 %add109.i.i, %308
  call void %304(ptr noundef %handle, i32 noundef %add111.i452.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end120.i.i

cond.false112.i.i:                                ; preds = %land.lhs.true94.i.i.cond.false112.i.i_crit_edge, %land.lhs.true89.i.i.cond.false112.i.i_crit_edge, %cond.end84.i.i.cond.false112.i.i_crit_edge
  %309 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load ptr, ptr %arrayidx71.i.i, align 8
  %311 = ptrtoint ptr %310 to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %310, align 4
  %mul118.i.i = shl i32 %i.1273.i.i, 1
  %add117.i.i = add i32 %mul118.i.i, 4865
  %add119.i.i = add i32 %add117.i.i, %312
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add119.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end120.i.i

cond.end120.i.i:                                  ; preds = %cond.false112.i.i, %cond.true100.i.i
  %313 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %virt, align 8
  %and123.i453.i = and i32 %314, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and123.i453.i)
  %tobool124.not.i.i = icmp eq i32 %and123.i453.i, 0
  br i1 %tobool124.not.i.i, label %cond.end120.i.i.cond.false147.i.i_crit_edge, label %land.lhs.true125.i.i

cond.end120.i.i.cond.false147.i.i_crit_edge:      ; preds = %cond.end120.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false147.i.i

land.lhs.true125.i.i:                             ; preds = %cond.end120.i.i
  %315 = ptrtoint ptr %funcs57.i.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %funcs57.i.i, align 4
  %tobool129.not.i.i = icmp eq ptr %316, null
  br i1 %tobool129.not.i.i, label %land.lhs.true125.i.i.cond.false147.i.i_crit_edge, label %land.lhs.true130.i.i

land.lhs.true125.i.i.cond.false147.i.i_crit_edge: ; preds = %land.lhs.true125.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false147.i.i

land.lhs.true130.i.i:                             ; preds = %land.lhs.true125.i.i
  %sriov_wreg134.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %316, i32 0, i32 12
  %317 = ptrtoint ptr %sriov_wreg134.i.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load ptr, ptr %sriov_wreg134.i.i, align 4
  %tobool135.not.i.i = icmp eq ptr %318, null
  br i1 %tobool135.not.i.i, label %land.lhs.true130.i.i.cond.false147.i.i_crit_edge, label %cond.true136.i.i

land.lhs.true130.i.i.cond.false147.i.i_crit_edge: ; preds = %land.lhs.true130.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false147.i.i

cond.true136.i.i:                                 ; preds = %land.lhs.true130.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %319 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %arrayidx71.i.i, align 8
  %321 = ptrtoint ptr %320 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %320, align 4
  %add145.i.i = add i32 %i.1273.i.i, 4896
  %add146.i.i = add i32 %add145.i.i, %322
  call void %318(ptr noundef %handle, i32 noundef %add146.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end154.i.i

cond.false147.i.i:                                ; preds = %land.lhs.true130.i.i.cond.false147.i.i_crit_edge, %land.lhs.true125.i.i.cond.false147.i.i_crit_edge, %cond.end120.i.i.cond.false147.i.i_crit_edge
  %323 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %arrayidx71.i.i, align 8
  %325 = ptrtoint ptr %324 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load i32, ptr %324, align 4
  %add152.i.i = add i32 %i.1273.i.i, 4896
  %add153.i.i = add i32 %add152.i.i, %326
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add153.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end154.i.i

cond.end154.i.i:                                  ; preds = %cond.false147.i.i, %cond.true136.i.i
  %327 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %virt, align 8
  %and157.i.i = and i32 %328, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and157.i.i)
  %tobool158.not.i.i = icmp eq i32 %and157.i.i, 0
  br i1 %tobool158.not.i.i, label %cond.end154.i.i.cond.false181.i.i_crit_edge, label %land.lhs.true159.i.i

cond.end154.i.i.cond.false181.i.i_crit_edge:      ; preds = %cond.end154.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false181.i.i

land.lhs.true159.i.i:                             ; preds = %cond.end154.i.i
  %329 = ptrtoint ptr %funcs57.i.i to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load ptr, ptr %funcs57.i.i, align 4
  %tobool163.not.i.i = icmp eq ptr %330, null
  br i1 %tobool163.not.i.i, label %land.lhs.true159.i.i.cond.false181.i.i_crit_edge, label %land.lhs.true164.i.i

land.lhs.true159.i.i.cond.false181.i.i_crit_edge: ; preds = %land.lhs.true159.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false181.i.i

land.lhs.true164.i.i:                             ; preds = %land.lhs.true159.i.i
  %sriov_wreg168.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %330, i32 0, i32 12
  %331 = ptrtoint ptr %sriov_wreg168.i.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load ptr, ptr %sriov_wreg168.i.i, align 4
  %tobool169.not.i.i = icmp eq ptr %332, null
  br i1 %tobool169.not.i.i, label %land.lhs.true164.i.i.cond.false181.i.i_crit_edge, label %cond.true170.i.i

land.lhs.true164.i.i.cond.false181.i.i_crit_edge: ; preds = %land.lhs.true164.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false181.i.i

cond.true170.i.i:                                 ; preds = %land.lhs.true164.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %333 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %arrayidx71.i.i, align 8
  %335 = ptrtoint ptr %334 to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load i32, ptr %334, align 4
  %add179.i.i = add i32 %i.1273.i.i, 4912
  %add180.i.i = add i32 %add179.i.i, %336
  call void %332(ptr noundef %handle, i32 noundef %add180.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc189.i.i

cond.false181.i.i:                                ; preds = %land.lhs.true164.i.i.cond.false181.i.i_crit_edge, %land.lhs.true159.i.i.cond.false181.i.i_crit_edge, %cond.end154.i.i.cond.false181.i.i_crit_edge
  %337 = ptrtoint ptr %arrayidx71.i.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %arrayidx71.i.i, align 8
  %339 = ptrtoint ptr %338 to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load i32, ptr %338, align 4
  %add186.i.i = add i32 %i.1273.i.i, 4912
  %add187.i.i = add i32 %add186.i.i, %340
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add187.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %for.inc189.i.i

for.inc189.i.i:                                   ; preds = %cond.false181.i.i, %cond.true170.i.i
  %inc190.i.i = add i32 %i.1273.i.i, 1
  %exitcond275.not.i.i = icmp eq i32 %inc190.i.i, 16
  br i1 %exitcond275.not.i.i, label %for.inc189.i.i.gfx_v9_0_init_compute_vmid.exit.i_crit_edge, label %for.inc189.i.i.for.body49.i.i_crit_edge

for.inc189.i.i.for.body49.i.i_crit_edge:          ; preds = %for.inc189.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body49.i.i

for.inc189.i.i.gfx_v9_0_init_compute_vmid.exit.i_crit_edge: ; preds = %for.inc189.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_compute_vmid.exit.i

gfx_v9_0_init_compute_vmid.exit.i:                ; preds = %for.inc189.i.i.gfx_v9_0_init_compute_vmid.exit.i_crit_edge, %for.end.i449.i.gfx_v9_0_init_compute_vmid.exit.i_crit_edge
  %funcs.i455.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i456.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.body.i459.i

for.body.i459.i:                                  ; preds = %for.inc.i.i.for.body.i459.i_crit_edge, %gfx_v9_0_init_compute_vmid.exit.i
  %vmid.0172.i.i = phi i32 [ 1, %gfx_v9_0_init_compute_vmid.exit.i ], [ %inc.i474.i, %for.inc.i.i.for.body.i459.i_crit_edge ]
  %341 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load i32, ptr %virt, align 8
  %and.i457.i = and i32 %342, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i457.i)
  %tobool.not.i458.i = icmp eq i32 %and.i457.i, 0
  br i1 %tobool.not.i458.i, label %for.body.i459.i.cond.false.i466.i_crit_edge, label %land.lhs.true.i461.i

for.body.i459.i.cond.false.i466.i_crit_edge:      ; preds = %for.body.i459.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i466.i

land.lhs.true.i461.i:                             ; preds = %for.body.i459.i
  %343 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load ptr, ptr %funcs.i455.i, align 4
  %tobool1.not.i460.i = icmp eq ptr %344, null
  br i1 %tobool1.not.i460.i, label %land.lhs.true.i461.i.cond.false.i466.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i461.i.cond.false.i466.i_crit_edge: ; preds = %land.lhs.true.i461.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i466.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i461.i
  %sriov_wreg.i462.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %344, i32 0, i32 12
  %345 = ptrtoint ptr %sriov_wreg.i462.i to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load ptr, ptr %sriov_wreg.i462.i, align 4
  %tobool6.not.i.i = icmp eq ptr %346, null
  br i1 %tobool6.not.i.i, label %land.lhs.true2.i.i.cond.false.i466.i_crit_edge, label %cond.true.i465.i

land.lhs.true2.i.i.cond.false.i466.i_crit_edge:   ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i466.i

cond.true.i465.i:                                 ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %347 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load ptr, ptr %arrayidx.i456.i, align 8
  %349 = ptrtoint ptr %348 to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load i32, ptr %348, align 4
  %mul.i463.i = shl nuw i32 %vmid.0172.i.i, 1
  %add.i464.i = add nuw nsw i32 %mul.i463.i, 4864
  %add13.i.i = add i32 %add.i464.i, %350
  call void %346(ptr noundef %handle, i32 noundef %add13.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i468.i

cond.false.i466.i:                                ; preds = %land.lhs.true2.i.i.cond.false.i466.i_crit_edge, %land.lhs.true.i461.i.cond.false.i466.i_crit_edge, %for.body.i459.i.cond.false.i466.i_crit_edge
  %351 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load ptr, ptr %arrayidx.i456.i, align 8
  %353 = ptrtoint ptr %352 to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load i32, ptr %352, align 4
  %mul19.i.i = shl nuw i32 %vmid.0172.i.i, 1
  %add18.i.i = add nuw nsw i32 %mul19.i.i, 4864
  %add20.i.i = add i32 %add18.i.i, %354
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add20.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end.i468.i

cond.end.i468.i:                                  ; preds = %cond.false.i466.i, %cond.true.i465.i
  %355 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load i32, ptr %virt, align 8
  %and23.i467.i = and i32 %356, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i467.i)
  %tobool24.not.i.i = icmp eq i32 %and23.i467.i, 0
  br i1 %tobool24.not.i.i, label %cond.end.i468.i.cond.false48.i.i_crit_edge, label %land.lhs.true25.i.i

cond.end.i468.i.cond.false48.i.i_crit_edge:       ; preds = %cond.end.i468.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false48.i.i

land.lhs.true25.i.i:                              ; preds = %cond.end.i468.i
  %357 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load ptr, ptr %funcs.i455.i, align 4
  %tobool29.not.i.i = icmp eq ptr %358, null
  br i1 %tobool29.not.i.i, label %land.lhs.true25.i.i.cond.false48.i.i_crit_edge, label %land.lhs.true30.i.i

land.lhs.true25.i.i.cond.false48.i.i_crit_edge:   ; preds = %land.lhs.true25.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false48.i.i

land.lhs.true30.i.i:                              ; preds = %land.lhs.true25.i.i
  %sriov_wreg34.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %358, i32 0, i32 12
  %359 = ptrtoint ptr %sriov_wreg34.i.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load ptr, ptr %sriov_wreg34.i.i, align 4
  %tobool35.not.i469.i = icmp eq ptr %360, null
  br i1 %tobool35.not.i469.i, label %land.lhs.true30.i.i.cond.false48.i.i_crit_edge, label %cond.true36.i.i

land.lhs.true30.i.i.cond.false48.i.i_crit_edge:   ; preds = %land.lhs.true30.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false48.i.i

cond.true36.i.i:                                  ; preds = %land.lhs.true30.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %361 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load ptr, ptr %arrayidx.i456.i, align 8
  %363 = ptrtoint ptr %362 to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %362, align 4
  %mul46.i.i = shl nuw i32 %vmid.0172.i.i, 1
  %add45.i470.i = add nuw nsw i32 %mul46.i.i, 4865
  %add47.i.i = add i32 %add45.i470.i, %364
  call void %360(ptr noundef %handle, i32 noundef %add47.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end56.i.i

cond.false48.i.i:                                 ; preds = %land.lhs.true30.i.i.cond.false48.i.i_crit_edge, %land.lhs.true25.i.i.cond.false48.i.i_crit_edge, %cond.end.i468.i.cond.false48.i.i_crit_edge
  %365 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %arrayidx.i456.i, align 8
  %367 = ptrtoint ptr %366 to i32
  call void @__asan_load4_noabort(i32 %367)
  %368 = load i32, ptr %366, align 4
  %mul54.i.i = shl nuw i32 %vmid.0172.i.i, 1
  %add53.i471.i = add nuw nsw i32 %mul54.i.i, 4865
  %add55.i.i = add i32 %add53.i471.i, %368
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add55.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end56.i.i

cond.end56.i.i:                                   ; preds = %cond.false48.i.i, %cond.true36.i.i
  %369 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load i32, ptr %virt, align 8
  %and59.i.i = and i32 %370, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59.i.i)
  %tobool60.not.i.i = icmp eq i32 %and59.i.i, 0
  br i1 %tobool60.not.i.i, label %cond.end56.i.i.cond.false83.i.i_crit_edge, label %land.lhs.true61.i.i

cond.end56.i.i.cond.false83.i.i_crit_edge:        ; preds = %cond.end56.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83.i.i

land.lhs.true61.i.i:                              ; preds = %cond.end56.i.i
  %371 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load ptr, ptr %funcs.i455.i, align 4
  %tobool65.not.i.i = icmp eq ptr %372, null
  br i1 %tobool65.not.i.i, label %land.lhs.true61.i.i.cond.false83.i.i_crit_edge, label %land.lhs.true66.i.i

land.lhs.true61.i.i.cond.false83.i.i_crit_edge:   ; preds = %land.lhs.true61.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83.i.i

land.lhs.true66.i.i:                              ; preds = %land.lhs.true61.i.i
  %sriov_wreg70.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %372, i32 0, i32 12
  %373 = ptrtoint ptr %sriov_wreg70.i.i to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load ptr, ptr %sriov_wreg70.i.i, align 4
  %tobool71.not.i.i = icmp eq ptr %374, null
  br i1 %tobool71.not.i.i, label %land.lhs.true66.i.i.cond.false83.i.i_crit_edge, label %cond.true72.i.i

land.lhs.true66.i.i.cond.false83.i.i_crit_edge:   ; preds = %land.lhs.true66.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83.i.i

cond.true72.i.i:                                  ; preds = %land.lhs.true66.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %375 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load ptr, ptr %arrayidx.i456.i, align 8
  %377 = ptrtoint ptr %376 to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %376, align 4
  %add81.i472.i = add nuw nsw i32 %vmid.0172.i.i, 4896
  %add82.i.i = add i32 %add81.i472.i, %378
  call void %374(ptr noundef %handle, i32 noundef %add82.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end90.i.i

cond.false83.i.i:                                 ; preds = %land.lhs.true66.i.i.cond.false83.i.i_crit_edge, %land.lhs.true61.i.i.cond.false83.i.i_crit_edge, %cond.end56.i.i.cond.false83.i.i_crit_edge
  %379 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load ptr, ptr %arrayidx.i456.i, align 8
  %381 = ptrtoint ptr %380 to i32
  call void @__asan_load4_noabort(i32 %381)
  %382 = load i32, ptr %380, align 4
  %add88.i.i = add nuw nsw i32 %vmid.0172.i.i, 4896
  %add89.i.i = add i32 %add88.i.i, %382
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add89.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end90.i.i

cond.end90.i.i:                                   ; preds = %cond.false83.i.i, %cond.true72.i.i
  %383 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load i32, ptr %virt, align 8
  %and93.i.i = and i32 %384, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93.i.i)
  %tobool94.not.i.i = icmp eq i32 %and93.i.i, 0
  br i1 %tobool94.not.i.i, label %cond.end90.i.i.cond.false117.i.i_crit_edge, label %land.lhs.true95.i.i

cond.end90.i.i.cond.false117.i.i_crit_edge:       ; preds = %cond.end90.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false117.i.i

land.lhs.true95.i.i:                              ; preds = %cond.end90.i.i
  %385 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load ptr, ptr %funcs.i455.i, align 4
  %tobool99.not.i473.i = icmp eq ptr %386, null
  br i1 %tobool99.not.i473.i, label %land.lhs.true95.i.i.cond.false117.i.i_crit_edge, label %land.lhs.true100.i.i

land.lhs.true95.i.i.cond.false117.i.i_crit_edge:  ; preds = %land.lhs.true95.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false117.i.i

land.lhs.true100.i.i:                             ; preds = %land.lhs.true95.i.i
  %sriov_wreg104.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %386, i32 0, i32 12
  %387 = ptrtoint ptr %sriov_wreg104.i.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %sriov_wreg104.i.i, align 4
  %tobool105.not.i.i = icmp eq ptr %388, null
  br i1 %tobool105.not.i.i, label %land.lhs.true100.i.i.cond.false117.i.i_crit_edge, label %cond.true106.i.i

land.lhs.true100.i.i.cond.false117.i.i_crit_edge: ; preds = %land.lhs.true100.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false117.i.i

cond.true106.i.i:                                 ; preds = %land.lhs.true100.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %389 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load ptr, ptr %arrayidx.i456.i, align 8
  %391 = ptrtoint ptr %390 to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load i32, ptr %390, align 4
  %add115.i.i = add nuw nsw i32 %vmid.0172.i.i, 4912
  %add116.i.i = add i32 %add115.i.i, %392
  call void %388(ptr noundef %handle, i32 noundef %add116.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc.i.i

cond.false117.i.i:                                ; preds = %land.lhs.true100.i.i.cond.false117.i.i_crit_edge, %land.lhs.true95.i.i.cond.false117.i.i_crit_edge, %cond.end90.i.i.cond.false117.i.i_crit_edge
  %393 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load ptr, ptr %arrayidx.i456.i, align 8
  %395 = ptrtoint ptr %394 to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load i32, ptr %394, align 4
  %add122.i.i = add nuw nsw i32 %vmid.0172.i.i, 4912
  %add123.i.i = add i32 %add122.i.i, %396
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add123.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %cond.false117.i.i, %cond.true106.i.i
  %inc.i474.i = add nuw nsw i32 %vmid.0172.i.i, 1
  %exitcond.not.i475.i = icmp eq i32 %inc.i474.i, 16
  br i1 %exitcond.not.i475.i, label %gfx_v9_0_init_gds_vmid.exit.i, label %for.inc.i.i.for.body.i459.i_crit_edge

for.inc.i.i.for.body.i459.i_crit_edge:            ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i459.i

gfx_v9_0_init_gds_vmid.exit.i:                    ; preds = %for.inc.i.i
  %arrayidx.i477.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %397 = ptrtoint ptr %arrayidx.i477.i to i32
  call void @__asan_load4_noabort(i32 %397)
  %398 = load i32, ptr %arrayidx.i477.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590849, i32 %398)
  %cond53.i.i = icmp eq i32 %398, 590849
  br i1 %cond53.i.i, label %sw.bb.i.i, label %gfx_v9_0_init_gds_vmid.exit.i.gfx_v9_0_constants_init.exit_crit_edge

gfx_v9_0_init_gds_vmid.exit.i.gfx_v9_0_constants_init.exit_crit_edge: ; preds = %gfx_v9_0_init_gds_vmid.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_constants_init.exit

sw.bb.i.i:                                        ; preds = %gfx_v9_0_init_gds_vmid.exit.i
  %399 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load i32, ptr %virt, align 8
  %and.i479.i = and i32 %400, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i479.i)
  %tobool.not.i480.i = icmp eq i32 %and.i479.i, 0
  br i1 %tobool.not.i480.i, label %sw.bb.i.i.cond.false.i486.i_crit_edge, label %land.lhs.true.i482.i

sw.bb.i.i.cond.false.i486.i_crit_edge:            ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i486.i

land.lhs.true.i482.i:                             ; preds = %sw.bb.i.i
  %401 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load ptr, ptr %funcs.i455.i, align 4
  %tobool2.not.i.i = icmp eq ptr %402, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i482.i.cond.false.i486.i_crit_edge, label %land.lhs.true3.i.i

land.lhs.true.i482.i.cond.false.i486.i_crit_edge: ; preds = %land.lhs.true.i482.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i486.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i482.i
  %sriov_rreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %402, i32 0, i32 13
  %403 = ptrtoint ptr %sriov_rreg.i.i to i32
  call void @__asan_load4_noabort(i32 %403)
  %404 = load ptr, ptr %sriov_rreg.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %404, null
  br i1 %tobool7.not.i.i, label %land.lhs.true3.i.i.cond.false.i486.i_crit_edge, label %cond.true.i484.i

land.lhs.true3.i.i.cond.false.i486.i_crit_edge:   ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i486.i

cond.true.i484.i:                                 ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %405 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %405)
  %406 = load ptr, ptr %arrayidx.i456.i, align 8
  %407 = ptrtoint ptr %406 to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load i32, ptr %406, align 4
  %add.i483.i = add i32 %408, 768
  %call.i.i = call i32 %404(ptr noundef %handle, i32 noundef %add.i483.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i489.i

cond.false.i486.i:                                ; preds = %land.lhs.true3.i.i.cond.false.i486.i_crit_edge, %land.lhs.true.i482.i.cond.false.i486.i_crit_edge, %sw.bb.i.i.cond.false.i486.i_crit_edge
  %409 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %409)
  %410 = load ptr, ptr %arrayidx.i456.i, align 8
  %411 = ptrtoint ptr %410 to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load i32, ptr %410, align 4
  %add19.i485.i = add i32 %412, 768
  %call20.i.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add19.i485.i, i32 noundef 0) #15
  br label %cond.end.i489.i

cond.end.i489.i:                                  ; preds = %cond.false.i486.i, %cond.true.i484.i
  %cond.i487.i = phi i32 [ %call.i.i, %cond.true.i484.i ], [ %call20.i.i, %cond.false.i486.i ]
  %or.i488.i = or i32 %cond.i487.i, 1
  %413 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %413)
  %414 = load i32, ptr %virt, align 8
  %and24.i.i = and i32 %414, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24.i.i)
  %tobool25.not.i.i = icmp eq i32 %and24.i.i, 0
  br i1 %tobool25.not.i.i, label %cond.end.i489.i.cond.false46.i.i_crit_edge, label %land.lhs.true26.i.i

cond.end.i489.i.cond.false46.i.i_crit_edge:       ; preds = %cond.end.i489.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false46.i.i

land.lhs.true26.i.i:                              ; preds = %cond.end.i489.i
  %415 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %415)
  %416 = load ptr, ptr %funcs.i455.i, align 4
  %tobool30.not.i.i = icmp eq ptr %416, null
  br i1 %tobool30.not.i.i, label %land.lhs.true26.i.i.cond.false46.i.i_crit_edge, label %land.lhs.true31.i.i

land.lhs.true26.i.i.cond.false46.i.i_crit_edge:   ; preds = %land.lhs.true26.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false46.i.i

land.lhs.true31.i.i:                              ; preds = %land.lhs.true26.i.i
  %sriov_wreg.i490.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %416, i32 0, i32 12
  %417 = ptrtoint ptr %sriov_wreg.i490.i to i32
  call void @__asan_load4_noabort(i32 %417)
  %418 = load ptr, ptr %sriov_wreg.i490.i, align 4
  %tobool35.not.i491.i = icmp eq ptr %418, null
  br i1 %tobool35.not.i491.i, label %land.lhs.true31.i.i.cond.false46.i.i_crit_edge, label %cond.true36.i493.i

land.lhs.true31.i.i.cond.false46.i.i_crit_edge:   ; preds = %land.lhs.true31.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false46.i.i

cond.true36.i493.i:                               ; preds = %land.lhs.true31.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %419 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load ptr, ptr %arrayidx.i456.i, align 8
  %421 = ptrtoint ptr %420 to i32
  call void @__asan_load4_noabort(i32 %421)
  %422 = load i32, ptr %420, align 4
  %add45.i492.i = add i32 %422, 768
  call void %418(ptr noundef %handle, i32 noundef %add45.i492.i, i32 noundef %or.i488.i, i32 noundef 0, i32 noundef 1) #15
  br label %gfx_v9_0_constants_init.exit

cond.false46.i.i:                                 ; preds = %land.lhs.true31.i.i.cond.false46.i.i_crit_edge, %land.lhs.true26.i.i.cond.false46.i.i_crit_edge, %cond.end.i489.i.cond.false46.i.i_crit_edge
  %423 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %423)
  %424 = load ptr, ptr %arrayidx.i456.i, align 8
  %425 = ptrtoint ptr %424 to i32
  call void @__asan_load4_noabort(i32 %425)
  %426 = load i32, ptr %424, align 4
  %add51.i494.i = add i32 %426, 768
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add51.i494.i, i32 noundef %or.i488.i, i32 noundef 0) #15
  br label %gfx_v9_0_constants_init.exit

gfx_v9_0_constants_init.exit:                     ; preds = %cond.false46.i.i, %cond.true36.i493.i, %gfx_v9_0_init_gds_vmid.exit.i.gfx_v9_0_constants_init.exit_crit_edge
  %427 = ptrtoint ptr %arrayidx.i477.i to i32
  call void @__asan_load4_noabort(i32 %427)
  %428 = load i32, ptr %arrayidx.i477.i, align 4
  %.off.i31 = add i32 %428, -590849
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i31)
  %switch.i32 = icmp ult i32 %.off.i31, 2
  br i1 %switch.i32, label %if.end.i, label %gfx_v9_0_constants_init.exit.gfx_v9_0_init_tcp_config.exit_crit_edge

gfx_v9_0_constants_init.exit.gfx_v9_0_init_tcp_config.exit_crit_edge: ; preds = %gfx_v9_0_constants_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_tcp_config.exit

if.end.i:                                         ; preds = %gfx_v9_0_constants_init.exit
  %429 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %429)
  %430 = load i32, ptr %virt, align 8
  %and.i34 = and i32 %430, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i34)
  %tobool.not.i35 = icmp eq i32 %and.i34, 0
  br i1 %tobool.not.i35, label %if.end.i.cond.false.i40_crit_edge, label %land.lhs.true6.i

if.end.i.cond.false.i40_crit_edge:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i40

land.lhs.true6.i:                                 ; preds = %if.end.i
  %431 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %431)
  %432 = load ptr, ptr %funcs.i455.i, align 4
  %tobool7.not.i = icmp eq ptr %432, null
  br i1 %tobool7.not.i, label %land.lhs.true6.i.cond.false.i40_crit_edge, label %land.lhs.true8.i

land.lhs.true6.i.cond.false.i40_crit_edge:        ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i40

land.lhs.true8.i:                                 ; preds = %land.lhs.true6.i
  %sriov_rreg.i37 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %432, i32 0, i32 13
  %433 = ptrtoint ptr %sriov_rreg.i37 to i32
  call void @__asan_load4_noabort(i32 %433)
  %434 = load ptr, ptr %sriov_rreg.i37, align 4
  %tobool12.not.i = icmp eq ptr %434, null
  br i1 %tobool12.not.i, label %land.lhs.true8.i.cond.false.i40_crit_edge, label %cond.true.i39

land.lhs.true8.i.cond.false.i40_crit_edge:        ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i40

cond.true.i39:                                    ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #17
  %435 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load ptr, ptr %arrayidx.i456.i, align 8
  %437 = ptrtoint ptr %436 to i32
  call void @__asan_load4_noabort(i32 %437)
  %438 = load i32, ptr %436, align 4
  %add.i = add i32 %438, 2821
  %call.i38 = call i32 %434(ptr noundef %handle, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i43

cond.false.i40:                                   ; preds = %land.lhs.true8.i.cond.false.i40_crit_edge, %land.lhs.true6.i.cond.false.i40_crit_edge, %if.end.i.cond.false.i40_crit_edge
  %439 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %439)
  %440 = load ptr, ptr %arrayidx.i456.i, align 8
  %441 = ptrtoint ptr %440 to i32
  call void @__asan_load4_noabort(i32 %441)
  %442 = load i32, ptr %440, align 4
  %add24.i = add i32 %442, 2821
  %call25.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add24.i, i32 noundef 0) #15
  br label %cond.end.i43

cond.end.i43:                                     ; preds = %cond.false.i40, %cond.true.i39
  %cond.i41 = phi i32 [ %call.i38, %cond.true.i39 ], [ %call25.i, %cond.false.i40 ]
  %and26.i = and i32 %cond.i41, -14337
  %df.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 120
  %443 = ptrtoint ptr %df.i to i32
  call void @__asan_load1_noabort(i32 %443)
  %444 = load i8, ptr %df.i, align 8, !range !1008
  %445 = zext i8 %444 to i32
  %shl.i = shl nuw nsw i32 %445, 11
  %or.i42 = or i32 %shl.i, %and26.i
  %hash_2m.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 120, i32 0, i32 1
  %446 = ptrtoint ptr %hash_2m.i to i32
  call void @__asan_load1_noabort(i32 %446)
  %447 = load i8, ptr %hash_2m.i, align 1, !range !1008
  %448 = zext i8 %447 to i32
  %shl34.i = shl nuw nsw i32 %448, 12
  %or36.i = or i32 %or.i42, %shl34.i
  %hash_1g.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 120, i32 0, i32 2
  %449 = ptrtoint ptr %hash_1g.i to i32
  call void @__asan_load1_noabort(i32 %449)
  %450 = load i8, ptr %hash_1g.i, align 2, !range !1008
  %451 = zext i8 %450 to i32
  %shl42.i = shl nuw nsw i32 %451, 13
  %or44.i = or i32 %or36.i, %shl42.i
  %452 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %452)
  %453 = load i32, ptr %virt, align 8
  %and47.i = and i32 %453, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47.i)
  %tobool48.not.i = icmp eq i32 %and47.i, 0
  br i1 %tobool48.not.i, label %cond.end.i43.cond.false69.i_crit_edge, label %land.lhs.true49.i

cond.end.i43.cond.false69.i_crit_edge:            ; preds = %cond.end.i43
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false69.i

land.lhs.true49.i:                                ; preds = %cond.end.i43
  %454 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load ptr, ptr %funcs.i455.i, align 4
  %tobool53.not.i = icmp eq ptr %455, null
  br i1 %tobool53.not.i, label %land.lhs.true49.i.cond.false69.i_crit_edge, label %land.lhs.true54.i46

land.lhs.true49.i.cond.false69.i_crit_edge:       ; preds = %land.lhs.true49.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false69.i

land.lhs.true54.i46:                              ; preds = %land.lhs.true49.i
  %sriov_wreg.i44 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %455, i32 0, i32 12
  %456 = ptrtoint ptr %sriov_wreg.i44 to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load ptr, ptr %sriov_wreg.i44, align 4
  %tobool58.not.i45 = icmp eq ptr %457, null
  br i1 %tobool58.not.i45, label %land.lhs.true54.i46.cond.false69.i_crit_edge, label %cond.true59.i

land.lhs.true54.i46.cond.false69.i_crit_edge:     ; preds = %land.lhs.true54.i46
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false69.i

cond.true59.i:                                    ; preds = %land.lhs.true54.i46
  call void @__sanitizer_cov_trace_pc() #17
  %458 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load ptr, ptr %arrayidx.i456.i, align 8
  %460 = ptrtoint ptr %459 to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load i32, ptr %459, align 4
  %add68.i = add i32 %461, 2821
  call void %457(ptr noundef %handle, i32 noundef %add68.i, i32 noundef %or44.i, i32 noundef 0, i32 noundef 1) #15
  br label %gfx_v9_0_init_tcp_config.exit

cond.false69.i:                                   ; preds = %land.lhs.true54.i46.cond.false69.i_crit_edge, %land.lhs.true49.i.cond.false69.i_crit_edge, %cond.end.i43.cond.false69.i_crit_edge
  %462 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load ptr, ptr %arrayidx.i456.i, align 8
  %464 = ptrtoint ptr %463 to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %463, align 4
  %add74.i = add i32 %465, 2821
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add74.i, i32 noundef %or44.i, i32 noundef 0) #15
  br label %gfx_v9_0_init_tcp_config.exit

gfx_v9_0_init_tcp_config.exit:                    ; preds = %cond.false69.i, %cond.true59.i, %gfx_v9_0_constants_init.exit.gfx_v9_0_init_tcp_config.exit_crit_edge
  %466 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load ptr, ptr %funcs.i455.i, align 4
  %resume = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %467, i32 0, i32 7
  %468 = ptrtoint ptr %resume to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load ptr, ptr %resume, align 4
  %call = call i32 %469(ptr noundef %handle) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end3, label %gfx_v9_0_init_tcp_config.exit.cleanup_crit_edge

gfx_v9_0_init_tcp_config.exit.cleanup_crit_edge:  ; preds = %gfx_v9_0_init_tcp_config.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end3:                                          ; preds = %gfx_v9_0_init_tcp_config.exit
  %flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 9
  %470 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load i32, ptr %flags.i, align 8
  %and.i47 = and i32 %471, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i47)
  %tobool.not.i48 = icmp eq i32 %and.i47, 0
  br i1 %tobool.not.i48, label %if.then.i49, label %if.end3.if.end.i50_crit_edge

if.end3.if.end.i50_crit_edge:                     ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i50

if.then.i49:                                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @gfx_v9_0_enable_gui_idle_interrupt(ptr noundef %handle, i1 noundef zeroext false) #15
  br label %if.end.i50

if.end.i50:                                       ; preds = %if.then.i49, %if.end3.if.end.i50_crit_edge
  %load_type.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 112, i32 1
  %472 = ptrtoint ptr %load_type.i to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %load_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %473)
  %cmp.not.i = icmp eq i32 %473, 2
  br i1 %cmp.not.i, label %if.end.i50.if.end12.i_crit_edge, label %if.then1.i

if.end.i50.if.end12.i_crit_edge:                  ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12.i

if.then1.i:                                       ; preds = %if.end.i50
  %num_gfx_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %474 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load i32, ptr %num_gfx_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %475)
  %tobool2.not.i = icmp eq i32 %475, 0
  br i1 %tobool2.not.i, label %if.then1.i.if.end7.i_crit_edge, label %if.then3.i

if.then1.i.if.end7.i_crit_edge:                   ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7.i

if.then3.i:                                       ; preds = %if.then1.i
  %me_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 9
  %476 = ptrtoint ptr %me_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %476)
  %477 = load ptr, ptr %me_fw.i.i, align 4
  %tobool.not.i.i51 = icmp eq ptr %477, null
  br i1 %tobool.not.i.i51, label %if.then3.i.cleanup_crit_edge, label %lor.lhs.false.i.i

if.then3.i.cleanup_crit_edge:                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %if.then3.i
  %pfp_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 11
  %478 = ptrtoint ptr %pfp_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load ptr, ptr %pfp_fw.i.i, align 4
  %tobool2.not.i.i52 = icmp eq ptr %479, null
  br i1 %tobool2.not.i.i52, label %lor.lhs.false.i.i.cleanup_crit_edge, label %lor.lhs.false3.i.i

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false3.i.i:                               ; preds = %lor.lhs.false.i.i
  %ce_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 13
  %480 = ptrtoint ptr %ce_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %480)
  %481 = load ptr, ptr %ce_fw.i.i, align 4
  %tobool5.not.i.i = icmp eq ptr %481, null
  br i1 %tobool5.not.i.i, label %lor.lhs.false3.i.i.cleanup_crit_edge, label %if.end.i.i54

lor.lhs.false3.i.i.cleanup_crit_edge:             ; preds = %lor.lhs.false3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i.i54:                                     ; preds = %lor.lhs.false3.i.i
  %data.i.i = getelementptr inbounds %struct.firmware, ptr %479, i32 0, i32 1
  %482 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %482)
  %483 = load ptr, ptr %data.i.i, align 4
  %data10.i.i = getelementptr inbounds %struct.firmware, ptr %481, i32 0, i32 1
  %484 = ptrtoint ptr %data10.i.i to i32
  call void @__asan_load4_noabort(i32 %484)
  %485 = load ptr, ptr %data10.i.i, align 4
  %data13.i.i = getelementptr inbounds %struct.firmware, ptr %477, i32 0, i32 1
  %486 = ptrtoint ptr %data13.i.i to i32
  call void @__asan_load4_noabort(i32 %486)
  %487 = load ptr, ptr %data13.i.i, align 4
  call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %483) #15
  call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %485) #15
  call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %487) #15
  call fastcc void @gfx_v9_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext false) #15
  %488 = ptrtoint ptr %pfp_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %488)
  %489 = load ptr, ptr %pfp_fw.i.i, align 4
  %data18.i.i = getelementptr inbounds %struct.firmware, ptr %489, i32 0, i32 1
  %490 = ptrtoint ptr %data18.i.i to i32
  call void @__asan_load4_noabort(i32 %490)
  %491 = load ptr, ptr %data18.i.i, align 4
  %ucode_array_offset_bytes.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %483, i32 0, i32 8
  %492 = ptrtoint ptr %ucode_array_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %492)
  %493 = load i32, ptr %ucode_array_offset_bytes.i.i, align 4
  %494 = call i32 @llvm.bswap.i32(i32 %493) #15
  %add.ptr.i.i = getelementptr i8, ptr %491, i32 %494
  %ucode_size_bytes.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %483, i32 0, i32 7
  %495 = ptrtoint ptr %ucode_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %495)
  %496 = load i32, ptr %ucode_size_bytes.i.i, align 4
  %497 = call i32 @llvm.bswap.i32(i32 %496) #15
  %div475.i.i = lshr i32 %497, 2
  %498 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %498)
  %499 = load i32, ptr %virt, align 8
  %and.i.i53 = and i32 %499, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i53)
  %tobool21.not.i.i = icmp eq i32 %and.i.i53, 0
  br i1 %tobool21.not.i.i, label %if.end.i.i54.cond.false.i.i64_crit_edge, label %land.lhs.true.i.i57

if.end.i.i54.cond.false.i.i64_crit_edge:          ; preds = %if.end.i.i54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i64

land.lhs.true.i.i57:                              ; preds = %if.end.i.i54
  %500 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %500)
  %501 = load ptr, ptr %funcs.i455.i, align 4
  %tobool23.not.i.i56 = icmp eq ptr %501, null
  br i1 %tobool23.not.i.i56, label %land.lhs.true.i.i57.cond.false.i.i64_crit_edge, label %land.lhs.true24.i.i60

land.lhs.true.i.i57.cond.false.i.i64_crit_edge:   ; preds = %land.lhs.true.i.i57
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i64

land.lhs.true24.i.i60:                            ; preds = %land.lhs.true.i.i57
  %sriov_wreg.i.i58 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %501, i32 0, i32 12
  %502 = ptrtoint ptr %sriov_wreg.i.i58 to i32
  call void @__asan_load4_noabort(i32 %502)
  %503 = load ptr, ptr %sriov_wreg.i.i58, align 4
  %tobool28.not.i.i59 = icmp eq ptr %503, null
  br i1 %tobool28.not.i.i59, label %land.lhs.true24.i.i60.cond.false.i.i64_crit_edge, label %cond.true.i.i63

land.lhs.true24.i.i60.cond.false.i.i64_crit_edge: ; preds = %land.lhs.true24.i.i60
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i64

cond.true.i.i63:                                  ; preds = %land.lhs.true24.i.i60
  call void @__sanitizer_cov_trace_pc() #17
  %504 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %504)
  %505 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx34.i.i = getelementptr i32, ptr %505, i32 1
  %506 = ptrtoint ptr %arrayidx34.i.i to i32
  call void @__asan_load4_noabort(i32 %506)
  %507 = load i32, ptr %arrayidx34.i.i, align 4
  %add.i.i62 = add i32 %507, 22548
  call void %503(ptr noundef %handle, i32 noundef %add.i.i62, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i.i65

cond.false.i.i64:                                 ; preds = %land.lhs.true24.i.i60.cond.false.i.i64_crit_edge, %land.lhs.true.i.i57.cond.false.i.i64_crit_edge, %if.end.i.i54.cond.false.i.i64_crit_edge
  %508 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %508)
  %509 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx38.i.i = getelementptr i32, ptr %509, i32 1
  %510 = ptrtoint ptr %arrayidx38.i.i to i32
  call void @__asan_load4_noabort(i32 %510)
  %511 = load i32, ptr %arrayidx38.i.i, align 4
  %add39.i.i = add i32 %511, 22548
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add39.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end.i.i65

cond.end.i.i65:                                   ; preds = %cond.false.i.i64, %cond.true.i.i63
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %497)
  %cmp478.not.i.i = icmp ult i32 %497, 4
  br i1 %cmp478.not.i.i, label %cond.end.i.i65.for.end.i.i71_crit_edge, label %for.body.lr.ph.i.i66

cond.end.i.i65.for.end.i.i71_crit_edge:           ; preds = %cond.end.i.i65
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i71

for.body.lr.ph.i.i66:                             ; preds = %cond.end.i.i65
  %umax.i.i = call i32 @llvm.umax.i32(i32 %div475.i.i, i32 1) #15
  br label %for.body.i.i67

for.body.i.i67:                                   ; preds = %for.inc.i.i70.for.body.i.i67_crit_edge, %for.body.lr.ph.i.i66
  %i.0481.i.i = phi i32 [ 0, %for.body.lr.ph.i.i66 ], [ %inc.i.i68, %for.inc.i.i70.for.body.i.i67_crit_edge ]
  %fw_data.0479.i.i = phi ptr [ %add.ptr.i.i, %for.body.lr.ph.i.i66 ], [ %fw_data.1.i.i, %for.inc.i.i70.for.body.i.i67_crit_edge ]
  %512 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load i32, ptr %virt, align 8
  %and42.i.i = and i32 %513, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42.i.i)
  %tobool43.not.i.i = icmp eq i32 %and42.i.i, 0
  br i1 %tobool43.not.i.i, label %for.body.i.i67.cond.false65.i.i_crit_edge, label %land.lhs.true44.i.i

for.body.i.i67.cond.false65.i.i_crit_edge:        ; preds = %for.body.i.i67
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false65.i.i

land.lhs.true44.i.i:                              ; preds = %for.body.i.i67
  %514 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %514)
  %515 = load ptr, ptr %funcs.i455.i, align 4
  %tobool48.not.i.i = icmp eq ptr %515, null
  br i1 %tobool48.not.i.i, label %land.lhs.true44.i.i.cond.false65.i.i_crit_edge, label %land.lhs.true49.i.i

land.lhs.true44.i.i.cond.false65.i.i_crit_edge:   ; preds = %land.lhs.true44.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false65.i.i

land.lhs.true49.i.i:                              ; preds = %land.lhs.true44.i.i
  %sriov_wreg53.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %515, i32 0, i32 12
  %516 = ptrtoint ptr %sriov_wreg53.i.i to i32
  call void @__asan_load4_noabort(i32 %516)
  %517 = load ptr, ptr %sriov_wreg53.i.i, align 4
  %tobool54.not.i.i = icmp eq ptr %517, null
  br i1 %tobool54.not.i.i, label %land.lhs.true49.i.i.cond.false65.i.i_crit_edge, label %cond.true55.i.i

land.lhs.true49.i.i.cond.false65.i.i_crit_edge:   ; preds = %land.lhs.true49.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false65.i.i

cond.true55.i.i:                                  ; preds = %land.lhs.true49.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %518 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %518)
  %519 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx63.i.i = getelementptr i32, ptr %519, i32 1
  %520 = ptrtoint ptr %arrayidx63.i.i to i32
  call void @__asan_load4_noabort(i32 %520)
  %521 = load i32, ptr %arrayidx63.i.i, align 4
  %add64.i.i = add i32 %521, 22549
  %522 = ptrtoint ptr %fw_data.0479.i.i to i32
  call void @__asan_load4_noabort(i32 %522)
  %523 = load i32, ptr %fw_data.0479.i.i, align 4
  %524 = call i32 @llvm.bswap.i32(i32 %523) #15
  call void %517(ptr noundef %handle, i32 noundef %add64.i.i, i32 noundef %524, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc.i.i70

cond.false65.i.i:                                 ; preds = %land.lhs.true49.i.i.cond.false65.i.i_crit_edge, %land.lhs.true44.i.i.cond.false65.i.i_crit_edge, %for.body.i.i67.cond.false65.i.i_crit_edge
  %525 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %525)
  %526 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx69.i.i = getelementptr i32, ptr %526, i32 1
  %527 = ptrtoint ptr %arrayidx69.i.i to i32
  call void @__asan_load4_noabort(i32 %527)
  %528 = load i32, ptr %arrayidx69.i.i, align 4
  %add70.i.i = add i32 %528, 22549
  %529 = ptrtoint ptr %fw_data.0479.i.i to i32
  call void @__asan_load4_noabort(i32 %529)
  %530 = load i32, ptr %fw_data.0479.i.i, align 4
  %531 = call i32 @llvm.bswap.i32(i32 %530) #15
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add70.i.i, i32 noundef %531, i32 noundef 0) #15
  br label %for.inc.i.i70

for.inc.i.i70:                                    ; preds = %cond.false65.i.i, %cond.true55.i.i
  %fw_data.1.i.i = getelementptr i32, ptr %fw_data.0479.i.i, i32 1
  %inc.i.i68 = add nuw nsw i32 %i.0481.i.i, 1
  %exitcond.not.i.i69 = icmp eq i32 %inc.i.i68, %umax.i.i
  br i1 %exitcond.not.i.i69, label %for.inc.i.i70.for.end.i.i71_crit_edge, label %for.inc.i.i70.for.body.i.i67_crit_edge

for.inc.i.i70.for.body.i.i67_crit_edge:           ; preds = %for.inc.i.i70
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i67

for.inc.i.i70.for.end.i.i71_crit_edge:            ; preds = %for.inc.i.i70
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i71

for.end.i.i71:                                    ; preds = %for.inc.i.i70.for.end.i.i71_crit_edge, %cond.end.i.i65.for.end.i.i71_crit_edge
  %532 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load i32, ptr %virt, align 8
  %and76.i.i = and i32 %533, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76.i.i)
  %tobool77.not.i.i = icmp eq i32 %and76.i.i, 0
  br i1 %tobool77.not.i.i, label %for.end.i.i71.cond.false100.i.i_crit_edge, label %land.lhs.true78.i.i

for.end.i.i71.cond.false100.i.i_crit_edge:        ; preds = %for.end.i.i71
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false100.i.i

land.lhs.true78.i.i:                              ; preds = %for.end.i.i71
  %534 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load ptr, ptr %funcs.i455.i, align 4
  %tobool82.not.i.i = icmp eq ptr %535, null
  br i1 %tobool82.not.i.i, label %land.lhs.true78.i.i.cond.false100.i.i_crit_edge, label %land.lhs.true83.i.i

land.lhs.true78.i.i.cond.false100.i.i_crit_edge:  ; preds = %land.lhs.true78.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false100.i.i

land.lhs.true83.i.i:                              ; preds = %land.lhs.true78.i.i
  %sriov_wreg87.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %535, i32 0, i32 12
  %536 = ptrtoint ptr %sriov_wreg87.i.i to i32
  call void @__asan_load4_noabort(i32 %536)
  %537 = load ptr, ptr %sriov_wreg87.i.i, align 4
  %tobool88.not.i.i72 = icmp eq ptr %537, null
  br i1 %tobool88.not.i.i72, label %land.lhs.true83.i.i.cond.false100.i.i_crit_edge, label %cond.true89.i.i

land.lhs.true83.i.i.cond.false100.i.i_crit_edge:  ; preds = %land.lhs.true83.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false100.i.i

cond.true89.i.i:                                  ; preds = %land.lhs.true83.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %538 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx97.i.i = getelementptr i32, ptr %539, i32 1
  %540 = ptrtoint ptr %arrayidx97.i.i to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load i32, ptr %arrayidx97.i.i, align 4
  %add98.i.i = add i32 %541, 22548
  %pfp_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 12
  %542 = ptrtoint ptr %pfp_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %542)
  %543 = load i32, ptr %pfp_fw_version.i.i, align 8
  call void %537(ptr noundef %handle, i32 noundef %add98.i.i, i32 noundef %543, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end108.i.i

cond.false100.i.i:                                ; preds = %land.lhs.true83.i.i.cond.false100.i.i_crit_edge, %land.lhs.true78.i.i.cond.false100.i.i_crit_edge, %for.end.i.i71.cond.false100.i.i_crit_edge
  %544 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %544)
  %545 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx104.i.i = getelementptr i32, ptr %545, i32 1
  %546 = ptrtoint ptr %arrayidx104.i.i to i32
  call void @__asan_load4_noabort(i32 %546)
  %547 = load i32, ptr %arrayidx104.i.i, align 4
  %add105.i.i = add i32 %547, 22548
  %pfp_fw_version107.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 12
  %548 = ptrtoint ptr %pfp_fw_version107.i.i to i32
  call void @__asan_load4_noabort(i32 %548)
  %549 = load i32, ptr %pfp_fw_version107.i.i, align 8
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add105.i.i, i32 noundef %549, i32 noundef 0) #15
  br label %cond.end108.i.i

cond.end108.i.i:                                  ; preds = %cond.false100.i.i, %cond.true89.i.i
  %550 = ptrtoint ptr %ce_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load ptr, ptr %ce_fw.i.i, align 4
  %data111.i.i = getelementptr inbounds %struct.firmware, ptr %551, i32 0, i32 1
  %552 = ptrtoint ptr %data111.i.i to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load ptr, ptr %data111.i.i, align 4
  %ucode_array_offset_bytes113.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %485, i32 0, i32 8
  %554 = ptrtoint ptr %ucode_array_offset_bytes113.i.i to i32
  call void @__asan_load4_noabort(i32 %554)
  %555 = load i32, ptr %ucode_array_offset_bytes113.i.i, align 4
  %556 = call i32 @llvm.bswap.i32(i32 %555) #15
  %add.ptr114.i.i = getelementptr i8, ptr %553, i32 %556
  %ucode_size_bytes116.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %485, i32 0, i32 7
  %557 = ptrtoint ptr %ucode_size_bytes116.i.i to i32
  call void @__asan_load4_noabort(i32 %557)
  %558 = load i32, ptr %ucode_size_bytes116.i.i, align 4
  %559 = call i32 @llvm.bswap.i32(i32 %558) #15
  %div117476.i.i = lshr i32 %559, 2
  %560 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %560)
  %561 = load i32, ptr %virt, align 8
  %and120.i.i = and i32 %561, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and120.i.i)
  %tobool121.not.i.i = icmp eq i32 %and120.i.i, 0
  br i1 %tobool121.not.i.i, label %cond.end108.i.i.cond.false143.i.i_crit_edge, label %land.lhs.true122.i.i

cond.end108.i.i.cond.false143.i.i_crit_edge:      ; preds = %cond.end108.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false143.i.i

land.lhs.true122.i.i:                             ; preds = %cond.end108.i.i
  %562 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %562)
  %563 = load ptr, ptr %funcs.i455.i, align 4
  %tobool126.not.i.i = icmp eq ptr %563, null
  br i1 %tobool126.not.i.i, label %land.lhs.true122.i.i.cond.false143.i.i_crit_edge, label %land.lhs.true127.i.i

land.lhs.true122.i.i.cond.false143.i.i_crit_edge: ; preds = %land.lhs.true122.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false143.i.i

land.lhs.true127.i.i:                             ; preds = %land.lhs.true122.i.i
  %sriov_wreg131.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %563, i32 0, i32 12
  %564 = ptrtoint ptr %sriov_wreg131.i.i to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load ptr, ptr %sriov_wreg131.i.i, align 4
  %tobool132.not.i.i = icmp eq ptr %565, null
  br i1 %tobool132.not.i.i, label %land.lhs.true127.i.i.cond.false143.i.i_crit_edge, label %cond.true133.i.i

land.lhs.true127.i.i.cond.false143.i.i_crit_edge: ; preds = %land.lhs.true127.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false143.i.i

cond.true133.i.i:                                 ; preds = %land.lhs.true127.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %566 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %566)
  %567 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx141.i.i = getelementptr i32, ptr %567, i32 1
  %568 = ptrtoint ptr %arrayidx141.i.i to i32
  call void @__asan_load4_noabort(i32 %568)
  %569 = load i32, ptr %arrayidx141.i.i, align 4
  %add142.i.i = add i32 %569, 22552
  call void %565(ptr noundef %handle, i32 noundef %add142.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end149.i.i

cond.false143.i.i:                                ; preds = %land.lhs.true127.i.i.cond.false143.i.i_crit_edge, %land.lhs.true122.i.i.cond.false143.i.i_crit_edge, %cond.end108.i.i.cond.false143.i.i_crit_edge
  %570 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx147.i.i = getelementptr i32, ptr %571, i32 1
  %572 = ptrtoint ptr %arrayidx147.i.i to i32
  call void @__asan_load4_noabort(i32 %572)
  %573 = load i32, ptr %arrayidx147.i.i, align 4
  %add148.i.i73 = add i32 %573, 22552
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add148.i.i73, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end149.i.i

cond.end149.i.i:                                  ; preds = %cond.false143.i.i, %cond.true133.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %559)
  %cmp151482.not.i.i = icmp ult i32 %559, 4
  br i1 %cmp151482.not.i.i, label %cond.end149.i.i.for.end191.i.i_crit_edge, label %for.body152.lr.ph.i.i

cond.end149.i.i.for.end191.i.i_crit_edge:         ; preds = %cond.end149.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end191.i.i

for.body152.lr.ph.i.i:                            ; preds = %cond.end149.i.i
  %umax490.i.i = call i32 @llvm.umax.i32(i32 %div117476.i.i, i32 1) #15
  br label %for.body152.i.i

for.body152.i.i:                                  ; preds = %for.inc189.i.i75.for.body152.i.i_crit_edge, %for.body152.lr.ph.i.i
  %i.1485.i.i = phi i32 [ 0, %for.body152.lr.ph.i.i ], [ %inc190.i.i74, %for.inc189.i.i75.for.body152.i.i_crit_edge ]
  %fw_data.2483.i.i = phi ptr [ %add.ptr114.i.i, %for.body152.lr.ph.i.i ], [ %fw_data.3.i.i, %for.inc189.i.i75.for.body152.i.i_crit_edge ]
  %574 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load i32, ptr %virt, align 8
  %and155.i.i = and i32 %575, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and155.i.i)
  %tobool156.not.i.i = icmp eq i32 %and155.i.i, 0
  br i1 %tobool156.not.i.i, label %for.body152.i.i.cond.false180.i.i_crit_edge, label %land.lhs.true157.i.i

for.body152.i.i.cond.false180.i.i_crit_edge:      ; preds = %for.body152.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false180.i.i

land.lhs.true157.i.i:                             ; preds = %for.body152.i.i
  %576 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load ptr, ptr %funcs.i455.i, align 4
  %tobool161.not.i.i = icmp eq ptr %577, null
  br i1 %tobool161.not.i.i, label %land.lhs.true157.i.i.cond.false180.i.i_crit_edge, label %land.lhs.true162.i.i

land.lhs.true157.i.i.cond.false180.i.i_crit_edge: ; preds = %land.lhs.true157.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false180.i.i

land.lhs.true162.i.i:                             ; preds = %land.lhs.true157.i.i
  %sriov_wreg166.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %577, i32 0, i32 12
  %578 = ptrtoint ptr %sriov_wreg166.i.i to i32
  call void @__asan_load4_noabort(i32 %578)
  %579 = load ptr, ptr %sriov_wreg166.i.i, align 4
  %tobool167.not.i.i = icmp eq ptr %579, null
  br i1 %tobool167.not.i.i, label %land.lhs.true162.i.i.cond.false180.i.i_crit_edge, label %cond.true168.i.i

land.lhs.true162.i.i.cond.false180.i.i_crit_edge: ; preds = %land.lhs.true162.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false180.i.i

cond.true168.i.i:                                 ; preds = %land.lhs.true162.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %580 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %580)
  %581 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx176.i.i = getelementptr i32, ptr %581, i32 1
  %582 = ptrtoint ptr %arrayidx176.i.i to i32
  call void @__asan_load4_noabort(i32 %582)
  %583 = load i32, ptr %arrayidx176.i.i, align 4
  %add177.i.i = add i32 %583, 22553
  %584 = ptrtoint ptr %fw_data.2483.i.i to i32
  call void @__asan_load4_noabort(i32 %584)
  %585 = load i32, ptr %fw_data.2483.i.i, align 4
  %586 = call i32 @llvm.bswap.i32(i32 %585) #15
  call void %579(ptr noundef %handle, i32 noundef %add177.i.i, i32 noundef %586, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc189.i.i75

cond.false180.i.i:                                ; preds = %land.lhs.true162.i.i.cond.false180.i.i_crit_edge, %land.lhs.true157.i.i.cond.false180.i.i_crit_edge, %for.body152.i.i.cond.false180.i.i_crit_edge
  %587 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %587)
  %588 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx184.i.i = getelementptr i32, ptr %588, i32 1
  %589 = ptrtoint ptr %arrayidx184.i.i to i32
  call void @__asan_load4_noabort(i32 %589)
  %590 = load i32, ptr %arrayidx184.i.i, align 4
  %add185.i.i = add i32 %590, 22553
  %591 = ptrtoint ptr %fw_data.2483.i.i to i32
  call void @__asan_load4_noabort(i32 %591)
  %592 = load i32, ptr %fw_data.2483.i.i, align 4
  %593 = call i32 @llvm.bswap.i32(i32 %592) #15
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add185.i.i, i32 noundef %593, i32 noundef 0) #15
  br label %for.inc189.i.i75

for.inc189.i.i75:                                 ; preds = %cond.false180.i.i, %cond.true168.i.i
  %fw_data.3.i.i = getelementptr i32, ptr %fw_data.2483.i.i, i32 1
  %inc190.i.i74 = add nuw nsw i32 %i.1485.i.i, 1
  %exitcond491.not.i.i = icmp eq i32 %inc190.i.i74, %umax490.i.i
  br i1 %exitcond491.not.i.i, label %for.inc189.i.i75.for.end191.i.i_crit_edge, label %for.inc189.i.i75.for.body152.i.i_crit_edge

for.inc189.i.i75.for.body152.i.i_crit_edge:       ; preds = %for.inc189.i.i75
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body152.i.i

for.inc189.i.i75.for.end191.i.i_crit_edge:        ; preds = %for.inc189.i.i75
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end191.i.i

for.end191.i.i:                                   ; preds = %for.inc189.i.i75.for.end191.i.i_crit_edge, %cond.end149.i.i.for.end191.i.i_crit_edge
  %594 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %594)
  %595 = load i32, ptr %virt, align 8
  %and194.i.i = and i32 %595, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and194.i.i)
  %tobool195.not.i.i = icmp eq i32 %and194.i.i, 0
  br i1 %tobool195.not.i.i, label %for.end191.i.i.cond.false218.i.i_crit_edge, label %land.lhs.true196.i.i

for.end191.i.i.cond.false218.i.i_crit_edge:       ; preds = %for.end191.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false218.i.i

land.lhs.true196.i.i:                             ; preds = %for.end191.i.i
  %596 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %596)
  %597 = load ptr, ptr %funcs.i455.i, align 4
  %tobool200.not.i.i = icmp eq ptr %597, null
  br i1 %tobool200.not.i.i, label %land.lhs.true196.i.i.cond.false218.i.i_crit_edge, label %land.lhs.true201.i.i

land.lhs.true196.i.i.cond.false218.i.i_crit_edge: ; preds = %land.lhs.true196.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false218.i.i

land.lhs.true201.i.i:                             ; preds = %land.lhs.true196.i.i
  %sriov_wreg205.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %597, i32 0, i32 12
  %598 = ptrtoint ptr %sriov_wreg205.i.i to i32
  call void @__asan_load4_noabort(i32 %598)
  %599 = load ptr, ptr %sriov_wreg205.i.i, align 4
  %tobool206.not.i.i = icmp eq ptr %599, null
  br i1 %tobool206.not.i.i, label %land.lhs.true201.i.i.cond.false218.i.i_crit_edge, label %cond.true207.i.i

land.lhs.true201.i.i.cond.false218.i.i_crit_edge: ; preds = %land.lhs.true201.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false218.i.i

cond.true207.i.i:                                 ; preds = %land.lhs.true201.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %600 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %600)
  %601 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx215.i.i = getelementptr i32, ptr %601, i32 1
  %602 = ptrtoint ptr %arrayidx215.i.i to i32
  call void @__asan_load4_noabort(i32 %602)
  %603 = load i32, ptr %arrayidx215.i.i, align 4
  %add216.i.i = add i32 %603, 22552
  %ce_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 14
  %604 = ptrtoint ptr %ce_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %604)
  %605 = load i32, ptr %ce_fw_version.i.i, align 8
  call void %599(ptr noundef %handle, i32 noundef %add216.i.i, i32 noundef %605, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end226.i.i

cond.false218.i.i:                                ; preds = %land.lhs.true201.i.i.cond.false218.i.i_crit_edge, %land.lhs.true196.i.i.cond.false218.i.i_crit_edge, %for.end191.i.i.cond.false218.i.i_crit_edge
  %606 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %606)
  %607 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx222.i.i = getelementptr i32, ptr %607, i32 1
  %608 = ptrtoint ptr %arrayidx222.i.i to i32
  call void @__asan_load4_noabort(i32 %608)
  %609 = load i32, ptr %arrayidx222.i.i, align 4
  %add223.i.i = add i32 %609, 22552
  %ce_fw_version225.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 14
  %610 = ptrtoint ptr %ce_fw_version225.i.i to i32
  call void @__asan_load4_noabort(i32 %610)
  %611 = load i32, ptr %ce_fw_version225.i.i, align 8
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add223.i.i, i32 noundef %611, i32 noundef 0) #15
  br label %cond.end226.i.i

cond.end226.i.i:                                  ; preds = %cond.false218.i.i, %cond.true207.i.i
  %612 = ptrtoint ptr %me_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %612)
  %613 = load ptr, ptr %me_fw.i.i, align 4
  %data229.i.i = getelementptr inbounds %struct.firmware, ptr %613, i32 0, i32 1
  %614 = ptrtoint ptr %data229.i.i to i32
  call void @__asan_load4_noabort(i32 %614)
  %615 = load ptr, ptr %data229.i.i, align 4
  %ucode_array_offset_bytes231.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %487, i32 0, i32 8
  %616 = ptrtoint ptr %ucode_array_offset_bytes231.i.i to i32
  call void @__asan_load4_noabort(i32 %616)
  %617 = load i32, ptr %ucode_array_offset_bytes231.i.i, align 4
  %618 = call i32 @llvm.bswap.i32(i32 %617) #15
  %add.ptr232.i.i = getelementptr i8, ptr %615, i32 %618
  %ucode_size_bytes234.i.i = getelementptr inbounds %struct.common_firmware_header, ptr %487, i32 0, i32 7
  %619 = ptrtoint ptr %ucode_size_bytes234.i.i to i32
  call void @__asan_load4_noabort(i32 %619)
  %620 = load i32, ptr %ucode_size_bytes234.i.i, align 4
  %621 = call i32 @llvm.bswap.i32(i32 %620) #15
  %div235477.i.i = lshr i32 %621, 2
  %622 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %622)
  %623 = load i32, ptr %virt, align 8
  %and238.i.i = and i32 %623, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and238.i.i)
  %tobool239.not.i.i = icmp eq i32 %and238.i.i, 0
  br i1 %tobool239.not.i.i, label %cond.end226.i.i.cond.false261.i.i_crit_edge, label %land.lhs.true240.i.i

cond.end226.i.i.cond.false261.i.i_crit_edge:      ; preds = %cond.end226.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false261.i.i

land.lhs.true240.i.i:                             ; preds = %cond.end226.i.i
  %624 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %624)
  %625 = load ptr, ptr %funcs.i455.i, align 4
  %tobool244.not.i.i = icmp eq ptr %625, null
  br i1 %tobool244.not.i.i, label %land.lhs.true240.i.i.cond.false261.i.i_crit_edge, label %land.lhs.true245.i.i

land.lhs.true240.i.i.cond.false261.i.i_crit_edge: ; preds = %land.lhs.true240.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false261.i.i

land.lhs.true245.i.i:                             ; preds = %land.lhs.true240.i.i
  %sriov_wreg249.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %625, i32 0, i32 12
  %626 = ptrtoint ptr %sriov_wreg249.i.i to i32
  call void @__asan_load4_noabort(i32 %626)
  %627 = load ptr, ptr %sriov_wreg249.i.i, align 4
  %tobool250.not.i.i = icmp eq ptr %627, null
  br i1 %tobool250.not.i.i, label %land.lhs.true245.i.i.cond.false261.i.i_crit_edge, label %cond.true251.i.i

land.lhs.true245.i.i.cond.false261.i.i_crit_edge: ; preds = %land.lhs.true245.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false261.i.i

cond.true251.i.i:                                 ; preds = %land.lhs.true245.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %628 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %628)
  %629 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx259.i.i = getelementptr i32, ptr %629, i32 1
  %630 = ptrtoint ptr %arrayidx259.i.i to i32
  call void @__asan_load4_noabort(i32 %630)
  %631 = load i32, ptr %arrayidx259.i.i, align 4
  %add260.i.i = add i32 %631, 22550
  call void %627(ptr noundef %handle, i32 noundef %add260.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end267.i.i

cond.false261.i.i:                                ; preds = %land.lhs.true245.i.i.cond.false261.i.i_crit_edge, %land.lhs.true240.i.i.cond.false261.i.i_crit_edge, %cond.end226.i.i.cond.false261.i.i_crit_edge
  %632 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %632)
  %633 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx265.i.i = getelementptr i32, ptr %633, i32 1
  %634 = ptrtoint ptr %arrayidx265.i.i to i32
  call void @__asan_load4_noabort(i32 %634)
  %635 = load i32, ptr %arrayidx265.i.i, align 4
  %add266.i.i = add i32 %635, 22550
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add266.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end267.i.i

cond.end267.i.i:                                  ; preds = %cond.false261.i.i, %cond.true251.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %621)
  %cmp269486.not.i.i = icmp ult i32 %621, 4
  br i1 %cmp269486.not.i.i, label %cond.end267.i.i.for.end309.i.i_crit_edge, label %for.body270.lr.ph.i.i

cond.end267.i.i.for.end309.i.i_crit_edge:         ; preds = %cond.end267.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end309.i.i

for.body270.lr.ph.i.i:                            ; preds = %cond.end267.i.i
  %umax492.i.i = call i32 @llvm.umax.i32(i32 %div235477.i.i, i32 1) #15
  br label %for.body270.i.i

for.body270.i.i:                                  ; preds = %for.inc307.i.i.for.body270.i.i_crit_edge, %for.body270.lr.ph.i.i
  %i.2489.i.i = phi i32 [ 0, %for.body270.lr.ph.i.i ], [ %inc308.i.i, %for.inc307.i.i.for.body270.i.i_crit_edge ]
  %fw_data.4487.i.i = phi ptr [ %add.ptr232.i.i, %for.body270.lr.ph.i.i ], [ %fw_data.5.i.i, %for.inc307.i.i.for.body270.i.i_crit_edge ]
  %636 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %636)
  %637 = load i32, ptr %virt, align 8
  %and273.i.i = and i32 %637, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and273.i.i)
  %tobool274.not.i.i = icmp eq i32 %and273.i.i, 0
  br i1 %tobool274.not.i.i, label %for.body270.i.i.cond.false298.i.i_crit_edge, label %land.lhs.true275.i.i

for.body270.i.i.cond.false298.i.i_crit_edge:      ; preds = %for.body270.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false298.i.i

land.lhs.true275.i.i:                             ; preds = %for.body270.i.i
  %638 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %638)
  %639 = load ptr, ptr %funcs.i455.i, align 4
  %tobool279.not.i.i = icmp eq ptr %639, null
  br i1 %tobool279.not.i.i, label %land.lhs.true275.i.i.cond.false298.i.i_crit_edge, label %land.lhs.true280.i.i

land.lhs.true275.i.i.cond.false298.i.i_crit_edge: ; preds = %land.lhs.true275.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false298.i.i

land.lhs.true280.i.i:                             ; preds = %land.lhs.true275.i.i
  %sriov_wreg284.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %639, i32 0, i32 12
  %640 = ptrtoint ptr %sriov_wreg284.i.i to i32
  call void @__asan_load4_noabort(i32 %640)
  %641 = load ptr, ptr %sriov_wreg284.i.i, align 4
  %tobool285.not.i.i = icmp eq ptr %641, null
  br i1 %tobool285.not.i.i, label %land.lhs.true280.i.i.cond.false298.i.i_crit_edge, label %cond.true286.i.i

land.lhs.true280.i.i.cond.false298.i.i_crit_edge: ; preds = %land.lhs.true280.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false298.i.i

cond.true286.i.i:                                 ; preds = %land.lhs.true280.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %642 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %642)
  %643 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx294.i.i = getelementptr i32, ptr %643, i32 1
  %644 = ptrtoint ptr %arrayidx294.i.i to i32
  call void @__asan_load4_noabort(i32 %644)
  %645 = load i32, ptr %arrayidx294.i.i, align 4
  %add295.i.i = add i32 %645, 22551
  %646 = ptrtoint ptr %fw_data.4487.i.i to i32
  call void @__asan_load4_noabort(i32 %646)
  %647 = load i32, ptr %fw_data.4487.i.i, align 4
  %648 = call i32 @llvm.bswap.i32(i32 %647) #15
  call void %641(ptr noundef %handle, i32 noundef %add295.i.i, i32 noundef %648, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc307.i.i

cond.false298.i.i:                                ; preds = %land.lhs.true280.i.i.cond.false298.i.i_crit_edge, %land.lhs.true275.i.i.cond.false298.i.i_crit_edge, %for.body270.i.i.cond.false298.i.i_crit_edge
  %649 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %649)
  %650 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx302.i.i = getelementptr i32, ptr %650, i32 1
  %651 = ptrtoint ptr %arrayidx302.i.i to i32
  call void @__asan_load4_noabort(i32 %651)
  %652 = load i32, ptr %arrayidx302.i.i, align 4
  %add303.i.i = add i32 %652, 22551
  %653 = ptrtoint ptr %fw_data.4487.i.i to i32
  call void @__asan_load4_noabort(i32 %653)
  %654 = load i32, ptr %fw_data.4487.i.i, align 4
  %655 = call i32 @llvm.bswap.i32(i32 %654) #15
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add303.i.i, i32 noundef %655, i32 noundef 0) #15
  br label %for.inc307.i.i

for.inc307.i.i:                                   ; preds = %cond.false298.i.i, %cond.true286.i.i
  %fw_data.5.i.i = getelementptr i32, ptr %fw_data.4487.i.i, i32 1
  %inc308.i.i = add nuw nsw i32 %i.2489.i.i, 1
  %exitcond493.not.i.i = icmp eq i32 %inc308.i.i, %umax492.i.i
  br i1 %exitcond493.not.i.i, label %for.inc307.i.i.for.end309.i.i_crit_edge, label %for.inc307.i.i.for.body270.i.i_crit_edge

for.inc307.i.i.for.body270.i.i_crit_edge:         ; preds = %for.inc307.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body270.i.i

for.inc307.i.i.for.end309.i.i_crit_edge:          ; preds = %for.inc307.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end309.i.i

for.end309.i.i:                                   ; preds = %for.inc307.i.i.for.end309.i.i_crit_edge, %cond.end267.i.i.for.end309.i.i_crit_edge
  %656 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %656)
  %657 = load i32, ptr %virt, align 8
  %and312.i.i = and i32 %657, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and312.i.i)
  %tobool313.not.i.i = icmp eq i32 %and312.i.i, 0
  br i1 %tobool313.not.i.i, label %for.end309.i.i.cond.false336.i.i_crit_edge, label %land.lhs.true314.i.i

for.end309.i.i.cond.false336.i.i_crit_edge:       ; preds = %for.end309.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false336.i.i

land.lhs.true314.i.i:                             ; preds = %for.end309.i.i
  %658 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %658)
  %659 = load ptr, ptr %funcs.i455.i, align 4
  %tobool318.not.i.i = icmp eq ptr %659, null
  br i1 %tobool318.not.i.i, label %land.lhs.true314.i.i.cond.false336.i.i_crit_edge, label %land.lhs.true319.i.i

land.lhs.true314.i.i.cond.false336.i.i_crit_edge: ; preds = %land.lhs.true314.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false336.i.i

land.lhs.true319.i.i:                             ; preds = %land.lhs.true314.i.i
  %sriov_wreg323.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %659, i32 0, i32 12
  %660 = ptrtoint ptr %sriov_wreg323.i.i to i32
  call void @__asan_load4_noabort(i32 %660)
  %661 = load ptr, ptr %sriov_wreg323.i.i, align 4
  %tobool324.not.i.i = icmp eq ptr %661, null
  br i1 %tobool324.not.i.i, label %land.lhs.true319.i.i.cond.false336.i.i_crit_edge, label %cond.true325.i.i

land.lhs.true319.i.i.cond.false336.i.i_crit_edge: ; preds = %land.lhs.true319.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false336.i.i

cond.true325.i.i:                                 ; preds = %land.lhs.true319.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %662 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %662)
  %663 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx333.i.i = getelementptr i32, ptr %663, i32 1
  %664 = ptrtoint ptr %arrayidx333.i.i to i32
  call void @__asan_load4_noabort(i32 %664)
  %665 = load i32, ptr %arrayidx333.i.i, align 4
  %add334.i.i = add i32 %665, 22550
  %me_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 10
  %666 = ptrtoint ptr %me_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %666)
  %667 = load i32, ptr %me_fw_version.i.i, align 8
  call void %661(ptr noundef %handle, i32 noundef %add334.i.i, i32 noundef %667, i32 noundef 0, i32 noundef 1) #15
  br label %if.end7.i

cond.false336.i.i:                                ; preds = %land.lhs.true319.i.i.cond.false336.i.i_crit_edge, %land.lhs.true314.i.i.cond.false336.i.i_crit_edge, %for.end309.i.i.cond.false336.i.i_crit_edge
  %668 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %668)
  %669 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx340.i.i = getelementptr i32, ptr %669, i32 1
  %670 = ptrtoint ptr %arrayidx340.i.i to i32
  call void @__asan_load4_noabort(i32 %670)
  %671 = load i32, ptr %arrayidx340.i.i, align 4
  %add341.i.i = add i32 %671, 22550
  %me_fw_version343.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 10
  %672 = ptrtoint ptr %me_fw_version343.i.i to i32
  call void @__asan_load4_noabort(i32 %672)
  %673 = load i32, ptr %me_fw_version343.i.i, align 8
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add341.i.i, i32 noundef %673, i32 noundef 0) #15
  br label %if.end7.i

if.end7.i:                                        ; preds = %cond.false336.i.i, %cond.true325.i.i, %if.then1.i.if.end7.i_crit_edge
  %mec_fw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 17
  %674 = ptrtoint ptr %mec_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %674)
  %675 = load ptr, ptr %mec_fw.i.i, align 4
  %tobool.not.i75.i = icmp eq ptr %675, null
  br i1 %tobool.not.i75.i, label %if.end7.i.cleanup_crit_edge, label %if.end.i76.i

if.end7.i.cleanup_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i76.i:                                     ; preds = %if.end7.i
  %676 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %676)
  %677 = load ptr, ptr %arrayidx.i456.i, align 8
  %678 = ptrtoint ptr %677 to i32
  call void @__asan_load4_noabort(i32 %678)
  %679 = load i32, ptr %677, align 4
  %add.i.i.i77 = add i32 %679, 141
  %680 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %680)
  %681 = load i32, ptr %virt, align 8
  %and.i.i.i78 = and i32 %681, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i78)
  %tobool3.not.i.i.i79 = icmp eq i32 %and.i.i.i78, 0
  br i1 %tobool3.not.i.i.i79, label %if.end.i76.i.cond.false41.i.i.i_crit_edge, label %land.lhs.true25.i.i.i

if.end.i76.i.cond.false41.i.i.i_crit_edge:        ; preds = %if.end.i76.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i.i.i

land.lhs.true25.i.i.i:                            ; preds = %if.end.i76.i
  %682 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %682)
  %683 = load ptr, ptr %funcs.i455.i, align 4
  %tobool29.not.i.i.i = icmp eq ptr %683, null
  br i1 %tobool29.not.i.i.i, label %land.lhs.true25.i.i.i.cond.false41.i.i.i_crit_edge, label %land.lhs.true30.i.i.i

land.lhs.true25.i.i.i.cond.false41.i.i.i_crit_edge: ; preds = %land.lhs.true25.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i.i.i

land.lhs.true30.i.i.i:                            ; preds = %land.lhs.true25.i.i.i
  %sriov_wreg34.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %683, i32 0, i32 12
  %684 = ptrtoint ptr %sriov_wreg34.i.i.i to i32
  call void @__asan_load4_noabort(i32 %684)
  %685 = load ptr, ptr %sriov_wreg34.i.i.i, align 4
  %tobool35.not.i.i.i = icmp eq ptr %685, null
  br i1 %tobool35.not.i.i.i, label %land.lhs.true30.i.i.i.cond.false41.i.i.i_crit_edge, label %cond.true36.i.i.i

land.lhs.true30.i.i.i.cond.false41.i.i.i_crit_edge: ; preds = %land.lhs.true30.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i.i.i

cond.true36.i.i.i:                                ; preds = %land.lhs.true30.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %685(ptr noundef %handle, i32 noundef %add.i.i.i77, i32 noundef 1342177280, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_cp_compute_enable.exit.i.i

cond.false41.i.i.i:                               ; preds = %land.lhs.true30.i.i.i.cond.false41.i.i.i_crit_edge, %land.lhs.true25.i.i.i.cond.false41.i.i.i_crit_edge, %if.end.i76.i.cond.false41.i.i.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add.i.i.i77, i32 noundef 1342177280, i32 noundef 0) #15
  br label %gfx_v9_0_cp_compute_enable.exit.i.i

gfx_v9_0_cp_compute_enable.exit.i.i:              ; preds = %cond.false41.i.i.i, %cond.true36.i.i.i
  %ready.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 3, i32 17
  %686 = ptrtoint ptr %ready.i.i.i to i32
  call void @__asan_store1_noabort(i32 %686)
  store i8 0, ptr %ready.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %687 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %687(i32 noundef 10737400) #15
  %688 = ptrtoint ptr %mec_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %688)
  %689 = load ptr, ptr %mec_fw.i.i, align 4
  %data.i77.i = getelementptr inbounds %struct.firmware, ptr %689, i32 0, i32 1
  %690 = ptrtoint ptr %data.i77.i to i32
  call void @__asan_load4_noabort(i32 %690)
  %691 = load ptr, ptr %data.i77.i, align 4
  call void @amdgpu_ucode_print_gfx_hdr(ptr noundef %691) #15
  %692 = ptrtoint ptr %mec_fw.i.i to i32
  call void @__asan_load4_noabort(i32 %692)
  %693 = load ptr, ptr %mec_fw.i.i, align 4
  %data5.i.i = getelementptr inbounds %struct.firmware, ptr %693, i32 0, i32 1
  %694 = ptrtoint ptr %data5.i.i to i32
  call void @__asan_load4_noabort(i32 %694)
  %695 = load ptr, ptr %data5.i.i, align 4
  %ucode_array_offset_bytes.i78.i = getelementptr inbounds %struct.common_firmware_header, ptr %691, i32 0, i32 8
  %696 = ptrtoint ptr %ucode_array_offset_bytes.i78.i to i32
  call void @__asan_load4_noabort(i32 %696)
  %697 = load i32, ptr %ucode_array_offset_bytes.i78.i, align 4
  %698 = call i32 @llvm.bswap.i32(i32 %697) #15
  %add.ptr.i79.i = getelementptr i8, ptr %695, i32 %698
  %699 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %699)
  %700 = load i32, ptr %virt, align 8
  %and9.i.i = and i32 %700, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i.i)
  %tobool10.not.i.i = icmp eq i32 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %gfx_v9_0_cp_compute_enable.exit.i.i.cond.false.i85.i_crit_edge, label %land.lhs.true.i81.i

gfx_v9_0_cp_compute_enable.exit.i.i.cond.false.i85.i_crit_edge: ; preds = %gfx_v9_0_cp_compute_enable.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i85.i

land.lhs.true.i81.i:                              ; preds = %gfx_v9_0_cp_compute_enable.exit.i.i
  %701 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %701)
  %702 = load ptr, ptr %funcs.i455.i, align 4
  %tobool12.not.i.i = icmp eq ptr %702, null
  br i1 %tobool12.not.i.i, label %land.lhs.true.i81.i.cond.false.i85.i_crit_edge, label %land.lhs.true13.i.i

land.lhs.true.i81.i.cond.false.i85.i_crit_edge:   ; preds = %land.lhs.true.i81.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i85.i

land.lhs.true13.i.i:                              ; preds = %land.lhs.true.i81.i
  %sriov_wreg.i82.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %702, i32 0, i32 12
  %703 = ptrtoint ptr %sriov_wreg.i82.i to i32
  call void @__asan_load4_noabort(i32 %703)
  %704 = load ptr, ptr %sriov_wreg.i82.i, align 4
  %tobool17.not.i.i = icmp eq ptr %704, null
  br i1 %tobool17.not.i.i, label %land.lhs.true13.i.i.cond.false.i85.i_crit_edge, label %cond.true.i84.i

land.lhs.true13.i.i.cond.false.i85.i_crit_edge:   ; preds = %land.lhs.true13.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i85.i

cond.true.i84.i:                                  ; preds = %land.lhs.true13.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %705 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %705)
  %706 = load ptr, ptr %arrayidx.i456.i, align 8
  %707 = ptrtoint ptr %706 to i32
  call void @__asan_load4_noabort(i32 %707)
  %708 = load i32, ptr %706, align 4
  %add.i83.i = add i32 %708, 4283
  call void %704(ptr noundef %handle, i32 noundef %add.i83.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i86.i

cond.false.i85.i:                                 ; preds = %land.lhs.true13.i.i.cond.false.i85.i_crit_edge, %land.lhs.true.i81.i.cond.false.i85.i_crit_edge, %gfx_v9_0_cp_compute_enable.exit.i.i.cond.false.i85.i_crit_edge
  %709 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %709)
  %710 = load ptr, ptr %arrayidx.i456.i, align 8
  %711 = ptrtoint ptr %710 to i32
  call void @__asan_load4_noabort(i32 %711)
  %712 = load i32, ptr %710, align 4
  %add28.i.i80 = add i32 %712, 4283
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add28.i.i80, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end.i86.i

cond.end.i86.i:                                   ; preds = %cond.false.i85.i, %cond.true.i84.i
  %713 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %713)
  %714 = load i32, ptr %virt, align 8
  %and31.i.i81 = and i32 %714, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31.i.i81)
  %tobool32.not.i.i = icmp eq i32 %and31.i.i81, 0
  br i1 %tobool32.not.i.i, label %cond.end.i86.i.cond.false56.i.i_crit_edge, label %land.lhs.true33.i.i

cond.end.i86.i.cond.false56.i.i_crit_edge:        ; preds = %cond.end.i86.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56.i.i

land.lhs.true33.i.i:                              ; preds = %cond.end.i86.i
  %715 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %715)
  %716 = load ptr, ptr %funcs.i455.i, align 4
  %tobool37.not.i.i = icmp eq ptr %716, null
  br i1 %tobool37.not.i.i, label %land.lhs.true33.i.i.cond.false56.i.i_crit_edge, label %land.lhs.true38.i.i

land.lhs.true33.i.i.cond.false56.i.i_crit_edge:   ; preds = %land.lhs.true33.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56.i.i

land.lhs.true38.i.i:                              ; preds = %land.lhs.true33.i.i
  %sriov_wreg42.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %716, i32 0, i32 12
  %717 = ptrtoint ptr %sriov_wreg42.i.i to i32
  call void @__asan_load4_noabort(i32 %717)
  %718 = load ptr, ptr %sriov_wreg42.i.i, align 4
  %tobool43.not.i87.i = icmp eq ptr %718, null
  br i1 %tobool43.not.i87.i, label %land.lhs.true38.i.i.cond.false56.i.i_crit_edge, label %cond.true44.i.i

land.lhs.true38.i.i.cond.false56.i.i_crit_edge:   ; preds = %land.lhs.true38.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56.i.i

cond.true44.i.i:                                  ; preds = %land.lhs.true38.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %719 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %719)
  %720 = load ptr, ptr %arrayidx.i456.i, align 8
  %721 = ptrtoint ptr %720 to i32
  call void @__asan_load4_noabort(i32 %721)
  %722 = load i32, ptr %720, align 4
  %add53.i.i82 = add i32 %722, 4281
  %mec_fw_gpu_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 3
  %723 = ptrtoint ptr %mec_fw_gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %723)
  %724 = load i64, ptr %mec_fw_gpu_addr.i.i, align 8
  %725 = trunc i64 %724 to i32
  %conv.i.i = and i32 %725, -4096
  call void %718(ptr noundef %handle, i32 noundef %add53.i.i82, i32 noundef %conv.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end67.i.i

cond.false56.i.i:                                 ; preds = %land.lhs.true38.i.i.cond.false56.i.i_crit_edge, %land.lhs.true33.i.i.cond.false56.i.i_crit_edge, %cond.end.i86.i.cond.false56.i.i_crit_edge
  %726 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %726)
  %727 = load ptr, ptr %arrayidx.i456.i, align 8
  %728 = ptrtoint ptr %727 to i32
  call void @__asan_load4_noabort(i32 %728)
  %729 = load i32, ptr %727, align 4
  %add61.i.i83 = add i32 %729, 4281
  %mec_fw_gpu_addr64.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 3
  %730 = ptrtoint ptr %mec_fw_gpu_addr64.i.i to i32
  call void @__asan_load8_noabort(i32 %730)
  %731 = load i64, ptr %mec_fw_gpu_addr64.i.i, align 8
  %732 = trunc i64 %731 to i32
  %conv66.i.i = and i32 %732, -4096
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add61.i.i83, i32 noundef %conv66.i.i, i32 noundef 0) #15
  br label %cond.end67.i.i

cond.end67.i.i:                                   ; preds = %cond.false56.i.i, %cond.true44.i.i
  %733 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %733)
  %734 = load i32, ptr %virt, align 8
  %and70.i.i = and i32 %734, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70.i.i)
  %tobool71.not.i.i84 = icmp eq i32 %and70.i.i, 0
  br i1 %tobool71.not.i.i84, label %cond.end67.i.i.cond.false98.i.i_crit_edge, label %land.lhs.true72.i.i

cond.end67.i.i.cond.false98.i.i_crit_edge:        ; preds = %cond.end67.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false98.i.i

land.lhs.true72.i.i:                              ; preds = %cond.end67.i.i
  %735 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %735)
  %736 = load ptr, ptr %funcs.i455.i, align 4
  %tobool76.not.i.i = icmp eq ptr %736, null
  br i1 %tobool76.not.i.i, label %land.lhs.true72.i.i.cond.false98.i.i_crit_edge, label %land.lhs.true77.i.i

land.lhs.true72.i.i.cond.false98.i.i_crit_edge:   ; preds = %land.lhs.true72.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false98.i.i

land.lhs.true77.i.i:                              ; preds = %land.lhs.true72.i.i
  %sriov_wreg81.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %736, i32 0, i32 12
  %737 = ptrtoint ptr %sriov_wreg81.i.i to i32
  call void @__asan_load4_noabort(i32 %737)
  %738 = load ptr, ptr %sriov_wreg81.i.i, align 4
  %tobool82.not.i88.i = icmp eq ptr %738, null
  br i1 %tobool82.not.i88.i, label %land.lhs.true77.i.i.cond.false98.i.i_crit_edge, label %cond.true83.i.i

land.lhs.true77.i.i.cond.false98.i.i_crit_edge:   ; preds = %land.lhs.true77.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false98.i.i

cond.true83.i.i:                                  ; preds = %land.lhs.true77.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %739 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %739)
  %740 = load ptr, ptr %arrayidx.i456.i, align 8
  %741 = ptrtoint ptr %740 to i32
  call void @__asan_load4_noabort(i32 %741)
  %742 = load i32, ptr %740, align 4
  %add92.i.i = add i32 %742, 4282
  %mec_fw_gpu_addr95.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 3
  %743 = ptrtoint ptr %mec_fw_gpu_addr95.i.i to i32
  call void @__asan_load8_noabort(i32 %743)
  %744 = load i64, ptr %mec_fw_gpu_addr95.i.i, align 8
  %shr.i.i85 = lshr i64 %744, 32
  %conv97.i.i = trunc i64 %shr.i.i85 to i32
  call void %738(ptr noundef %handle, i32 noundef %add92.i.i, i32 noundef %conv97.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end110.i.i

cond.false98.i.i:                                 ; preds = %land.lhs.true77.i.i.cond.false98.i.i_crit_edge, %land.lhs.true72.i.i.cond.false98.i.i_crit_edge, %cond.end67.i.i.cond.false98.i.i_crit_edge
  %745 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %745)
  %746 = load ptr, ptr %arrayidx.i456.i, align 8
  %747 = ptrtoint ptr %746 to i32
  call void @__asan_load4_noabort(i32 %747)
  %748 = load i32, ptr %746, align 4
  %add103.i.i = add i32 %748, 4282
  %mec_fw_gpu_addr106.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 6, i32 3
  %749 = ptrtoint ptr %mec_fw_gpu_addr106.i.i to i32
  call void @__asan_load8_noabort(i32 %749)
  %750 = load i64, ptr %mec_fw_gpu_addr106.i.i, align 8
  %shr107.i.i = lshr i64 %750, 32
  %conv109.i.i = trunc i64 %shr107.i.i to i32
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add103.i.i, i32 noundef %conv109.i.i, i32 noundef 0) #15
  br label %cond.end110.i.i

cond.end110.i.i:                                  ; preds = %cond.false98.i.i, %cond.true83.i.i
  %751 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %751)
  %752 = load i32, ptr %virt, align 8
  %and113.i.i = and i32 %752, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and113.i.i)
  %tobool114.not.i.i = icmp eq i32 %and113.i.i, 0
  br i1 %tobool114.not.i.i, label %cond.end110.i.i.cond.false136.i.i_crit_edge, label %land.lhs.true115.i.i

cond.end110.i.i.cond.false136.i.i_crit_edge:      ; preds = %cond.end110.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false136.i.i

land.lhs.true115.i.i:                             ; preds = %cond.end110.i.i
  %753 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %753)
  %754 = load ptr, ptr %funcs.i455.i, align 4
  %tobool119.not.i.i = icmp eq ptr %754, null
  br i1 %tobool119.not.i.i, label %land.lhs.true115.i.i.cond.false136.i.i_crit_edge, label %land.lhs.true120.i.i

land.lhs.true115.i.i.cond.false136.i.i_crit_edge: ; preds = %land.lhs.true115.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false136.i.i

land.lhs.true120.i.i:                             ; preds = %land.lhs.true115.i.i
  %sriov_wreg124.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %754, i32 0, i32 12
  %755 = ptrtoint ptr %sriov_wreg124.i.i to i32
  call void @__asan_load4_noabort(i32 %755)
  %756 = load ptr, ptr %sriov_wreg124.i.i, align 4
  %tobool125.not.i.i = icmp eq ptr %756, null
  br i1 %tobool125.not.i.i, label %land.lhs.true120.i.i.cond.false136.i.i_crit_edge, label %cond.true126.i.i

land.lhs.true120.i.i.cond.false136.i.i_crit_edge: ; preds = %land.lhs.true120.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false136.i.i

cond.true126.i.i:                                 ; preds = %land.lhs.true120.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %757 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %757)
  %758 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx134.i.i = getelementptr i32, ptr %758, i32 1
  %759 = ptrtoint ptr %arrayidx134.i.i to i32
  call void @__asan_load4_noabort(i32 %759)
  %760 = load i32, ptr %arrayidx134.i.i, align 4
  %add135.i.i = add i32 %760, 22554
  %jt_offset.i.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %691, i32 0, i32 2
  %761 = ptrtoint ptr %jt_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %761)
  %762 = load i32, ptr %jt_offset.i.i, align 4
  call void %756(ptr noundef %handle, i32 noundef %add135.i.i, i32 noundef %762, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end143.i.i

cond.false136.i.i:                                ; preds = %land.lhs.true120.i.i.cond.false136.i.i_crit_edge, %land.lhs.true115.i.i.cond.false136.i.i_crit_edge, %cond.end110.i.i.cond.false136.i.i_crit_edge
  %763 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %763)
  %764 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx140.i.i = getelementptr i32, ptr %764, i32 1
  %765 = ptrtoint ptr %arrayidx140.i.i to i32
  call void @__asan_load4_noabort(i32 %765)
  %766 = load i32, ptr %arrayidx140.i.i, align 4
  %add141.i.i = add i32 %766, 22554
  %jt_offset142.i.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %691, i32 0, i32 2
  %767 = ptrtoint ptr %jt_offset142.i.i to i32
  call void @__asan_load4_noabort(i32 %767)
  %768 = load i32, ptr %jt_offset142.i.i, align 4
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add141.i.i, i32 noundef %768, i32 noundef 0) #15
  br label %cond.end143.i.i

cond.end143.i.i:                                  ; preds = %cond.false136.i.i, %cond.true126.i.i
  %jt_size.i.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %691, i32 0, i32 3
  %769 = ptrtoint ptr %jt_size.i.i to i32
  call void @__asan_load4_noabort(i32 %769)
  %770 = load i32, ptr %jt_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %770)
  %cmp303.not.i.i = icmp eq i32 %770, 0
  br i1 %cmp303.not.i.i, label %cond.end143.i.i.for.end.i93.i_crit_edge, label %for.body.lr.ph.i89.i

cond.end143.i.i.for.end.i93.i_crit_edge:          ; preds = %cond.end143.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i93.i

for.body.lr.ph.i89.i:                             ; preds = %cond.end143.i.i
  %jt_offset170.i.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %691, i32 0, i32 2
  br label %for.body.i90.i

for.body.i90.i:                                   ; preds = %for.inc.i92.i.for.body.i90.i_crit_edge, %for.body.lr.ph.i89.i
  %i.0304.i.i = phi i32 [ 0, %for.body.lr.ph.i89.i ], [ %inc.i91.i, %for.inc.i92.i.for.body.i90.i_crit_edge ]
  %771 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %771)
  %772 = load i32, ptr %virt, align 8
  %and147.i.i = and i32 %772, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and147.i.i)
  %tobool148.not.i.i = icmp eq i32 %and147.i.i, 0
  br i1 %tobool148.not.i.i, label %for.body.i90.i.cond.false173.i.i_crit_edge, label %land.lhs.true149.i.i

for.body.i90.i.cond.false173.i.i_crit_edge:       ; preds = %for.body.i90.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false173.i.i

land.lhs.true149.i.i:                             ; preds = %for.body.i90.i
  %773 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %773)
  %774 = load ptr, ptr %funcs.i455.i, align 4
  %tobool153.not.i.i = icmp eq ptr %774, null
  br i1 %tobool153.not.i.i, label %land.lhs.true149.i.i.cond.false173.i.i_crit_edge, label %land.lhs.true154.i.i

land.lhs.true149.i.i.cond.false173.i.i_crit_edge: ; preds = %land.lhs.true149.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false173.i.i

land.lhs.true154.i.i:                             ; preds = %land.lhs.true149.i.i
  %sriov_wreg158.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %774, i32 0, i32 12
  %775 = ptrtoint ptr %sriov_wreg158.i.i to i32
  call void @__asan_load4_noabort(i32 %775)
  %776 = load ptr, ptr %sriov_wreg158.i.i, align 4
  %tobool159.not.i.i = icmp eq ptr %776, null
  br i1 %tobool159.not.i.i, label %land.lhs.true154.i.i.cond.false173.i.i_crit_edge, label %cond.true160.i.i

land.lhs.true154.i.i.cond.false173.i.i_crit_edge: ; preds = %land.lhs.true154.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false173.i.i

cond.true160.i.i:                                 ; preds = %land.lhs.true154.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %777 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %777)
  %778 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx168.i.i = getelementptr i32, ptr %778, i32 1
  %779 = ptrtoint ptr %arrayidx168.i.i to i32
  call void @__asan_load4_noabort(i32 %779)
  %780 = load i32, ptr %arrayidx168.i.i, align 4
  %add169.i.i = add i32 %780, 22555
  %781 = ptrtoint ptr %jt_offset170.i.i to i32
  call void @__asan_load4_noabort(i32 %781)
  %782 = load i32, ptr %jt_offset170.i.i, align 4
  %add.ptr171.i.i = getelementptr i32, ptr %add.ptr.i79.i, i32 %782
  %add.ptr172.i.i = getelementptr i32, ptr %add.ptr171.i.i, i32 %i.0304.i.i
  %783 = ptrtoint ptr %add.ptr172.i.i to i32
  call void @__asan_load4_noabort(i32 %783)
  %784 = load i32, ptr %add.ptr172.i.i, align 4
  %785 = call i32 @llvm.bswap.i32(i32 %784) #15
  call void %776(ptr noundef %handle, i32 noundef %add169.i.i, i32 noundef %785, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc.i92.i

cond.false173.i.i:                                ; preds = %land.lhs.true154.i.i.cond.false173.i.i_crit_edge, %land.lhs.true149.i.i.cond.false173.i.i_crit_edge, %for.body.i90.i.cond.false173.i.i_crit_edge
  %786 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %786)
  %787 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx177.i.i = getelementptr i32, ptr %787, i32 1
  %788 = ptrtoint ptr %arrayidx177.i.i to i32
  call void @__asan_load4_noabort(i32 %788)
  %789 = load i32, ptr %arrayidx177.i.i, align 4
  %add178.i.i = add i32 %789, 22555
  %790 = ptrtoint ptr %jt_offset170.i.i to i32
  call void @__asan_load4_noabort(i32 %790)
  %791 = load i32, ptr %jt_offset170.i.i, align 4
  %add.ptr180.i.i = getelementptr i32, ptr %add.ptr.i79.i, i32 %791
  %add.ptr181.i.i = getelementptr i32, ptr %add.ptr180.i.i, i32 %i.0304.i.i
  %792 = ptrtoint ptr %add.ptr181.i.i to i32
  call void @__asan_load4_noabort(i32 %792)
  %793 = load i32, ptr %add.ptr181.i.i, align 4
  %794 = call i32 @llvm.bswap.i32(i32 %793) #15
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add178.i.i, i32 noundef %794, i32 noundef 0) #15
  br label %for.inc.i92.i

for.inc.i92.i:                                    ; preds = %cond.false173.i.i, %cond.true160.i.i
  %inc.i91.i = add nuw i32 %i.0304.i.i, 1
  %795 = ptrtoint ptr %jt_size.i.i to i32
  call void @__asan_load4_noabort(i32 %795)
  %796 = load i32, ptr %jt_size.i.i, align 4
  %cmp.i.i86 = icmp ult i32 %inc.i91.i, %796
  br i1 %cmp.i.i86, label %for.inc.i92.i.for.body.i90.i_crit_edge, label %for.inc.i92.i.for.end.i93.i_crit_edge

for.inc.i92.i.for.end.i93.i_crit_edge:            ; preds = %for.inc.i92.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i93.i

for.inc.i92.i.for.body.i90.i_crit_edge:           ; preds = %for.inc.i92.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i90.i

for.end.i93.i:                                    ; preds = %for.inc.i92.i.for.end.i93.i_crit_edge, %cond.end143.i.i.for.end.i93.i_crit_edge
  %797 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %797)
  %798 = load i32, ptr %virt, align 8
  %and186.i.i87 = and i32 %798, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and186.i.i87)
  %tobool187.not.i.i = icmp eq i32 %and186.i.i87, 0
  br i1 %tobool187.not.i.i, label %for.end.i93.i.cond.false210.i.i_crit_edge, label %land.lhs.true188.i.i

for.end.i93.i.cond.false210.i.i_crit_edge:        ; preds = %for.end.i93.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210.i.i

land.lhs.true188.i.i:                             ; preds = %for.end.i93.i
  %799 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %799)
  %800 = load ptr, ptr %funcs.i455.i, align 4
  %tobool192.not.i.i = icmp eq ptr %800, null
  br i1 %tobool192.not.i.i, label %land.lhs.true188.i.i.cond.false210.i.i_crit_edge, label %land.lhs.true193.i.i

land.lhs.true188.i.i.cond.false210.i.i_crit_edge: ; preds = %land.lhs.true188.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210.i.i

land.lhs.true193.i.i:                             ; preds = %land.lhs.true188.i.i
  %sriov_wreg197.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %800, i32 0, i32 12
  %801 = ptrtoint ptr %sriov_wreg197.i.i to i32
  call void @__asan_load4_noabort(i32 %801)
  %802 = load ptr, ptr %sriov_wreg197.i.i, align 4
  %tobool198.not.i.i = icmp eq ptr %802, null
  br i1 %tobool198.not.i.i, label %land.lhs.true193.i.i.cond.false210.i.i_crit_edge, label %cond.true199.i.i

land.lhs.true193.i.i.cond.false210.i.i_crit_edge: ; preds = %land.lhs.true193.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210.i.i

cond.true199.i.i:                                 ; preds = %land.lhs.true193.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %803 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %803)
  %804 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx207.i.i = getelementptr i32, ptr %804, i32 1
  %805 = ptrtoint ptr %arrayidx207.i.i to i32
  call void @__asan_load4_noabort(i32 %805)
  %806 = load i32, ptr %arrayidx207.i.i, align 4
  %add208.i.i = add i32 %806, 22554
  %mec_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 18
  %807 = ptrtoint ptr %mec_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %807)
  %808 = load i32, ptr %mec_fw_version.i.i, align 8
  call void %802(ptr noundef %handle, i32 noundef %add208.i.i, i32 noundef %808, i32 noundef 0, i32 noundef 1) #15
  br label %if.end12.i

cond.false210.i.i:                                ; preds = %land.lhs.true193.i.i.cond.false210.i.i_crit_edge, %land.lhs.true188.i.i.cond.false210.i.i_crit_edge, %for.end.i93.i.cond.false210.i.i_crit_edge
  %809 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %809)
  %810 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx214.i.i = getelementptr i32, ptr %810, i32 1
  %811 = ptrtoint ptr %arrayidx214.i.i to i32
  call void @__asan_load4_noabort(i32 %811)
  %812 = load i32, ptr %arrayidx214.i.i, align 4
  %add215.i.i = add i32 %812, 22554
  %mec_fw_version217.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 18
  %813 = ptrtoint ptr %mec_fw_version217.i.i to i32
  call void @__asan_load4_noabort(i32 %813)
  %814 = load i32, ptr %mec_fw_version217.i.i, align 8
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add215.i.i, i32 noundef %814, i32 noundef 0) #15
  br label %if.end12.i

if.end12.i:                                       ; preds = %cond.false210.i.i, %cond.true199.i.i, %if.end.i50.if.end12.i_crit_edge
  %ring1.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3
  %mqd_obj.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 19
  %815 = ptrtoint ptr %mqd_obj.i.i to i32
  call void @__asan_load4_noabort(i32 %815)
  %816 = load ptr, ptr %mqd_obj.i.i, align 4
  %bdev.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %816, i32 0, i32 4, i32 1
  %817 = ptrtoint ptr %bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %817)
  %818 = load ptr, ptr %bdev.i.i.i, align 8
  %resv32.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %816, i32 0, i32 4, i32 0, i32 9
  %819 = ptrtoint ptr %resv32.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %819)
  %820 = load ptr, ptr %resv32.i.i.i.i, align 8
  %call.i.i.i.i.i = call i32 @ww_mutex_lock_interruptible(ptr noundef %820, ptr noundef null) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %call.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %call.i.i.i.i.i, -4
  %retval.1.i.i.i.i = select i1 %cmp.i.i.i.i, i32 -512, i32 %call.i.i.i.i.i
  %821 = zext i32 %retval.1.i.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %821, ptr @__sancov_gen_cov_switch_values.397)
  switch i32 %retval.1.i.i.i.i, label %gfx_v9_0_cp_resume.exit [
    i32 0, label %if.end.i95.i
    i32 -512, label %if.end12.i.cleanup_crit_edge
  ], !prof !1013

if.end12.i.cleanup_crit_edge:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i95.i:                                     ; preds = %if.end12.i
  %822 = ptrtoint ptr %mqd_obj.i.i to i32
  call void @__asan_load4_noabort(i32 %822)
  %823 = load ptr, ptr %mqd_obj.i.i, align 4
  %mqd_ptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 21
  %call4.i.i = call i32 @amdgpu_bo_kmap(ptr noundef %823, ptr noundef %mqd_ptr.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %cmp5.not.i.i, label %if.end13.i.i, label %if.end.i95.i.cleanup_crit_edge, !prof !1011

if.end.i95.i.cleanup_crit_edge:                   ; preds = %if.end.i95.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end13.i.i:                                     ; preds = %if.end.i95.i
  %824 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %824)
  %825 = load ptr, ptr %ring1.i.i, align 8
  %826 = ptrtoint ptr %mqd_ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %826)
  %827 = load ptr, ptr %mqd_ptr.i.i, align 8
  %virt.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %825, i32 0, i32 132
  %828 = ptrtoint ptr %virt.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %828)
  %829 = load i32, ptr %virt.i.i.i.i, align 8
  %and.i.i.i.i = and i32 %829, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end13.i.i.cond.false.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end13.i.i.cond.false.i.i.i.i_crit_edge:        ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end13.i.i
  %funcs.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %825, i32 0, i32 106, i32 2, i32 15
  %830 = ptrtoint ptr %funcs.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %830)
  %831 = load ptr, ptr %funcs.i.i.i.i, align 4
  %tobool2.not.i.i.i.i = icmp eq ptr %831, null
  br i1 %tobool2.not.i.i.i.i, label %land.lhs.true.i.i.i.i.cond.false.i.i.i.i_crit_edge, label %land.lhs.true3.i.i.i.i

land.lhs.true.i.i.i.i.cond.false.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i.i

land.lhs.true3.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %sriov_rreg.i.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %831, i32 0, i32 13
  %832 = ptrtoint ptr %sriov_rreg.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %832)
  %833 = load ptr, ptr %sriov_rreg.i.i.i.i, align 4
  %tobool7.not.i.i.i.i = icmp eq ptr %833, null
  br i1 %tobool7.not.i.i.i.i, label %land.lhs.true3.i.i.i.i.cond.false.i.i.i.i_crit_edge, label %cond.true.i.i.i.i

land.lhs.true3.i.i.i.i.cond.false.i.i.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i.i.i

cond.true.i.i.i.i:                                ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.i.i.i = getelementptr %struct.amdgpu_device, ptr %825, i32 0, i32 130, i32 1
  %834 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %834)
  %835 = load ptr, ptr %arrayidx.i.i.i.i, align 8
  %arrayidx13.i.i.i.i = getelementptr i32, ptr %835, i32 1
  %836 = ptrtoint ptr %arrayidx13.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %836)
  %837 = load i32, ptr %arrayidx13.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %837, 19626
  %call.i.i.i.i = call i32 %833(ptr noundef %825, i32 noundef %add.i.i.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i.i.i.i

cond.false.i.i.i.i:                               ; preds = %land.lhs.true3.i.i.i.i.cond.false.i.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.cond.false.i.i.i.i_crit_edge, %if.end13.i.i.cond.false.i.i.i.i_crit_edge
  %arrayidx15.i.i.i.i = getelementptr %struct.amdgpu_device, ptr %825, i32 0, i32 130, i32 1
  %838 = ptrtoint ptr %arrayidx15.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %838)
  %839 = load ptr, ptr %arrayidx15.i.i.i.i, align 8
  %arrayidx17.i.i.i.i = getelementptr i32, ptr %839, i32 1
  %840 = ptrtoint ptr %arrayidx17.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %840)
  %841 = load i32, ptr %arrayidx17.i.i.i.i, align 4
  %add18.i.i.i.i = add i32 %841, 19626
  %call19.i.i.i.i = call i32 @amdgpu_device_rreg(ptr noundef %825, i32 noundef %add18.i.i.i.i, i32 noundef 0) #15
  br label %cond.end.i.i.i.i

cond.end.i.i.i.i:                                 ; preds = %cond.false.i.i.i.i, %cond.true.i.i.i.i
  %cond.i.i.i.i = phi i32 [ %call.i.i.i.i, %cond.true.i.i.i.i ], [ %call19.i.i.i.i, %cond.false.i.i.i.i ]
  %and20.i.i.i.i = and i32 %cond.i.i.i.i, -256
  %me.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 16
  %842 = ptrtoint ptr %me.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %842)
  %843 = load i32, ptr %me.i.i.i.i, align 8
  %shl.i.i.i.i = shl i32 %843, 5
  %pipe.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 17
  %844 = ptrtoint ptr %pipe.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %844)
  %845 = load i32, ptr %pipe.i.i.i.i, align 4
  %shl21.i.i.i.i = shl i32 %845, 3
  %queue.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 18
  %846 = ptrtoint ptr %queue.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %846)
  %847 = load i32, ptr %queue.i.i.i.i, align 8
  %or.i.i.i.i = or i32 %shl.i.i.i.i, %and20.i.i.i.i
  %or22.i.i.i.i = or i32 %or.i.i.i.i, %shl21.i.i.i.i
  %or23.i.i.i.i = or i32 %or22.i.i.i.i, %847
  %arrayidx25.i.i.i.i = getelementptr %struct.amdgpu_device, ptr %825, i32 0, i32 130, i32 1
  %848 = ptrtoint ptr %arrayidx25.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %848)
  %849 = load ptr, ptr %arrayidx25.i.i.i.i, align 8
  %arrayidx27.i.i.i.i = getelementptr i32, ptr %849, i32 1
  %850 = ptrtoint ptr %arrayidx27.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %850)
  %851 = load i32, ptr %arrayidx27.i.i.i.i, align 4
  %add28.i.i.i.i = add i32 %851, 19626
  %852 = ptrtoint ptr %virt.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %852)
  %853 = load i32, ptr %virt.i.i.i.i, align 8
  %and31.i.i.i.i = and i32 %853, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31.i.i.i.i)
  %tobool32.not.i.i.i.i = icmp eq i32 %and31.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i.i, label %cond.end.i.i.i.i.cond.false48.i.i.i.i_crit_edge, label %land.lhs.true33.i.i.i.i

cond.end.i.i.i.i.cond.false48.i.i.i.i_crit_edge:  ; preds = %cond.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false48.i.i.i.i

land.lhs.true33.i.i.i.i:                          ; preds = %cond.end.i.i.i.i
  %funcs36.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %825, i32 0, i32 106, i32 2, i32 15
  %854 = ptrtoint ptr %funcs36.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %854)
  %855 = load ptr, ptr %funcs36.i.i.i.i, align 4
  %tobool37.not.i.i.i.i = icmp eq ptr %855, null
  br i1 %tobool37.not.i.i.i.i, label %land.lhs.true33.i.i.i.i.cond.false48.i.i.i.i_crit_edge, label %land.lhs.true38.i.i.i.i

land.lhs.true33.i.i.i.i.cond.false48.i.i.i.i_crit_edge: ; preds = %land.lhs.true33.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false48.i.i.i.i

land.lhs.true38.i.i.i.i:                          ; preds = %land.lhs.true33.i.i.i.i
  %sriov_wreg.i.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %855, i32 0, i32 12
  %856 = ptrtoint ptr %sriov_wreg.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %856)
  %857 = load ptr, ptr %sriov_wreg.i.i.i.i, align 4
  %tobool42.not.i.i.i.i = icmp eq ptr %857, null
  br i1 %tobool42.not.i.i.i.i, label %land.lhs.true38.i.i.i.i.cond.false48.i.i.i.i_crit_edge, label %cond.true43.i.i.i.i

land.lhs.true38.i.i.i.i.cond.false48.i.i.i.i_crit_edge: ; preds = %land.lhs.true38.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false48.i.i.i.i

cond.true43.i.i.i.i:                              ; preds = %land.lhs.true38.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %857(ptr noundef %825, i32 noundef %add28.i.i.i.i, i32 noundef %or23.i.i.i.i, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end49.i.i.i.i

cond.false48.i.i.i.i:                             ; preds = %land.lhs.true38.i.i.i.i.cond.false48.i.i.i.i_crit_edge, %land.lhs.true33.i.i.i.i.cond.false48.i.i.i.i_crit_edge, %cond.end.i.i.i.i.cond.false48.i.i.i.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %825, i32 noundef %add28.i.i.i.i, i32 noundef %or23.i.i.i.i, i32 noundef 0) #15
  br label %cond.end49.i.i.i.i

cond.end49.i.i.i.i:                               ; preds = %cond.false48.i.i.i.i, %cond.true43.i.i.i.i
  %or50.i.i.i.i = or i32 %or23.i.i.i.i, 128
  %858 = ptrtoint ptr %arrayidx25.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %858)
  %859 = load ptr, ptr %arrayidx25.i.i.i.i, align 8
  %arrayidx56.i.i.i.i = getelementptr i32, ptr %859, i32 1
  %860 = ptrtoint ptr %arrayidx56.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %860)
  %861 = load i32, ptr %arrayidx56.i.i.i.i, align 4
  %add57.i.i.i.i = add i32 %861, 19626
  %862 = ptrtoint ptr %virt.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %862)
  %863 = load i32, ptr %virt.i.i.i.i, align 8
  %and60.i.i.i.i = and i32 %863, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and60.i.i.i.i)
  %tobool61.not.i.i.i.i = icmp eq i32 %and60.i.i.i.i, 0
  br i1 %tobool61.not.i.i.i.i, label %cond.end49.i.i.i.i.cond.false78.i.i.i.i_crit_edge, label %land.lhs.true62.i.i.i.i

cond.end49.i.i.i.i.cond.false78.i.i.i.i_crit_edge: ; preds = %cond.end49.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78.i.i.i.i

land.lhs.true62.i.i.i.i:                          ; preds = %cond.end49.i.i.i.i
  %funcs65.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %825, i32 0, i32 106, i32 2, i32 15
  %864 = ptrtoint ptr %funcs65.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %864)
  %865 = load ptr, ptr %funcs65.i.i.i.i, align 4
  %tobool66.not.i.i.i.i = icmp eq ptr %865, null
  br i1 %tobool66.not.i.i.i.i, label %land.lhs.true62.i.i.i.i.cond.false78.i.i.i.i_crit_edge, label %land.lhs.true67.i.i.i.i

land.lhs.true62.i.i.i.i.cond.false78.i.i.i.i_crit_edge: ; preds = %land.lhs.true62.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78.i.i.i.i

land.lhs.true67.i.i.i.i:                          ; preds = %land.lhs.true62.i.i.i.i
  %sriov_wreg71.i.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %865, i32 0, i32 12
  %866 = ptrtoint ptr %sriov_wreg71.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %866)
  %867 = load ptr, ptr %sriov_wreg71.i.i.i.i, align 4
  %tobool72.not.i.i.i.i = icmp eq ptr %867, null
  br i1 %tobool72.not.i.i.i.i, label %land.lhs.true67.i.i.i.i.cond.false78.i.i.i.i_crit_edge, label %cond.true73.i.i.i.i

land.lhs.true67.i.i.i.i.cond.false78.i.i.i.i_crit_edge: ; preds = %land.lhs.true67.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78.i.i.i.i

cond.true73.i.i.i.i:                              ; preds = %land.lhs.true67.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %867(ptr noundef %825, i32 noundef %add57.i.i.i.i, i32 noundef %or50.i.i.i.i, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_kiq_setting.exit.i.i.i

cond.false78.i.i.i.i:                             ; preds = %land.lhs.true67.i.i.i.i.cond.false78.i.i.i.i_crit_edge, %land.lhs.true62.i.i.i.i.cond.false78.i.i.i.i_crit_edge, %cond.end49.i.i.i.i.cond.false78.i.i.i.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %825, i32 noundef %add57.i.i.i.i, i32 noundef %or50.i.i.i.i, i32 noundef 0) #15
  br label %gfx_v9_0_kiq_setting.exit.i.i.i

gfx_v9_0_kiq_setting.exit.i.i.i:                  ; preds = %cond.false78.i.i.i.i, %cond.true73.i.i.i.i
  %arrayidx.i.i96.i = getelementptr %struct.amdgpu_device, ptr %825, i32 0, i32 106, i32 6, i32 7, i32 8
  %868 = ptrtoint ptr %arrayidx.i.i96.i to i32
  call void @__asan_load4_noabort(i32 %868)
  %869 = load ptr, ptr %arrayidx.i.i96.i, align 4
  %in_gpu_reset.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %825, i32 0, i32 141
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i.i, i32 noundef 4) #15
  %870 = ptrtoint ptr %in_gpu_reset.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %870)
  %871 = load volatile i32, ptr %in_gpu_reset.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %871)
  %tobool.not.i.i.i88 = icmp eq i32 %871, 0
  br i1 %tobool.not.i.i.i88, label %gfx_v9_0_kiq_setting.exit.i.i.i.if.else.i.i.i_crit_edge, label %land.lhs.true.i.i.i90

gfx_v9_0_kiq_setting.exit.i.i.i.if.else.i.i.i_crit_edge: ; preds = %gfx_v9_0_kiq_setting.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i.i.i

land.lhs.true.i.i.i90:                            ; preds = %gfx_v9_0_kiq_setting.exit.i.i.i
  %cp_hqd_pq_control.i.i.i = getelementptr inbounds %struct.v9_mqd, ptr %869, i32 0, i32 145
  %872 = ptrtoint ptr %cp_hqd_pq_control.i.i.i to i32
  call void @__asan_load4_noabort(i32 %872)
  %873 = load i32, ptr %cp_hqd_pq_control.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %873)
  %tobool2.not.i.i.i89 = icmp eq i32 %873, 0
  br i1 %tobool2.not.i.i.i89, label %land.lhs.true.i.i.i90.if.else.i.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true.i.i.i90.if.else.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i90
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i90
  %874 = ptrtoint ptr %arrayidx.i.i96.i to i32
  call void @__asan_load4_noabort(i32 %874)
  %875 = load ptr, ptr %arrayidx.i.i96.i, align 4
  %tobool7.not.i.i.i = icmp eq ptr %875, null
  br i1 %tobool7.not.i.i.i, label %if.then.i.i.i.if.end.i.i.i91_crit_edge, label %if.then8.i.i.i

if.then.i.i.i.if.end.i.i.i91_crit_edge:           ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i91

if.then8.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %876 = call ptr @memcpy(ptr %827, ptr %875, i32 2064)
  br label %if.end.i.i.i91

if.end.i.i.i91:                                   ; preds = %if.then8.i.i.i, %if.then.i.i.i.if.end.i.i.i91_crit_edge
  %wptr.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 7
  %877 = ptrtoint ptr %wptr.i.i.i to i32
  call void @__asan_store8_noabort(i32 %877)
  store i64 0, ptr %wptr.i.i.i, align 8
  %buf_mask.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 14
  %funcs.i1.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 1
  %ring1.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 5
  br label %while.body.i.i.i.i

while.body.i.i.i.i:                               ; preds = %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.end.i.i.i91
  %i.05.i.i.i.i = phi i32 [ 0, %if.end.i.i.i91 ], [ %inc.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ]
  %878 = ptrtoint ptr %funcs.i1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %878)
  %879 = load ptr, ptr %funcs.i1.i.i.i, align 4
  %nop.i.i.i.i = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %879, i32 0, i32 2
  %880 = ptrtoint ptr %nop.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %880)
  %881 = load i32, ptr %nop.i.i.i.i, align 4
  %882 = ptrtoint ptr %ring1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %882)
  %883 = load ptr, ptr %ring1.i.i.i.i, align 4
  %inc.i.i.i.i = add i32 %i.05.i.i.i.i, 1
  %arrayidx.i2.i.i.i = getelementptr i32, ptr %883, i32 %i.05.i.i.i.i
  %884 = ptrtoint ptr %arrayidx.i2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %884)
  store volatile i32 %881, ptr %arrayidx.i2.i.i.i, align 4
  %885 = ptrtoint ptr %buf_mask.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %885)
  %886 = load i32, ptr %buf_mask.i.i.i.i, align 8
  %cmp.not.i.i.i.i = icmp ugt i32 %inc.i.i.i.i, %886
  br i1 %cmp.not.i.i.i.i, label %amdgpu_ring_clear_ring.exit.i.i.i, label %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge

while.body.i.i.i.i.while.body.i.i.i.i_crit_edge:  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i.i.i.i

amdgpu_ring_clear_ring.exit.i.i.i:                ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %srbm_mutex.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %825, i32 0, i32 20
  call void @mutex_lock_nested(ptr noundef %srbm_mutex.i.i.i, i32 noundef 0) #15
  %887 = ptrtoint ptr %me.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %887)
  %888 = load i32, ptr %me.i.i.i.i, align 8
  %889 = ptrtoint ptr %pipe.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %889)
  %890 = load i32, ptr %pipe.i.i.i.i, align 4
  %891 = ptrtoint ptr %queue.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %891)
  %892 = load i32, ptr %queue.i.i.i.i, align 8
  call void @soc15_grbm_select(ptr noundef %825, i32 noundef %888, i32 noundef %890, i32 noundef %892, i32 noundef 0) #15
  call fastcc void @gfx_v9_0_kiq_init_register(ptr noundef %ring1.i.i) #15
  call void @soc15_grbm_select(ptr noundef %825, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #15
  call void @mutex_unlock(ptr noundef %srbm_mutex.i.i.i) #15
  br label %gfx_v9_0_kiq_resume.exit.thread189.i

if.else.i.i.i:                                    ; preds = %land.lhs.true.i.i.i90.if.else.i.i.i_crit_edge, %gfx_v9_0_kiq_setting.exit.i.i.i.if.else.i.i.i_crit_edge
  %893 = call ptr @memset(ptr %827, i32 0, i32 2056)
  %dynamic_cu_mask.i.i.i = getelementptr inbounds %struct.v9_mqd_allocation, ptr %827, i32 0, i32 3
  %894 = ptrtoint ptr %dynamic_cu_mask.i.i.i to i32
  call void @__asan_store4_noabort(i32 %894)
  store i32 -1, ptr %dynamic_cu_mask.i.i.i, align 4
  %dynamic_rb_mask.i.i.i = getelementptr inbounds %struct.v9_mqd_allocation, ptr %827, i32 0, i32 4
  %895 = ptrtoint ptr %dynamic_rb_mask.i.i.i to i32
  call void @__asan_store4_noabort(i32 %895)
  store i32 -1, ptr %dynamic_rb_mask.i.i.i, align 4
  %srbm_mutex15.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %825, i32 0, i32 20
  call void @mutex_lock_nested(ptr noundef %srbm_mutex15.i.i.i, i32 noundef 0) #15
  %896 = ptrtoint ptr %me.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %896)
  %897 = load i32, ptr %me.i.i.i.i, align 8
  %898 = ptrtoint ptr %pipe.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %898)
  %899 = load i32, ptr %pipe.i.i.i.i, align 4
  %900 = ptrtoint ptr %queue.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %900)
  %901 = load i32, ptr %queue.i.i.i.i, align 8
  call void @soc15_grbm_select(ptr noundef %825, i32 noundef %897, i32 noundef %899, i32 noundef %901, i32 noundef 0) #15
  call fastcc void @gfx_v9_0_mqd_init(ptr noundef %ring1.i.i) #15
  call fastcc void @gfx_v9_0_kiq_init_register(ptr noundef %ring1.i.i) #15
  call void @soc15_grbm_select(ptr noundef %825, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #15
  call void @mutex_unlock(ptr noundef %srbm_mutex15.i.i.i) #15
  %902 = ptrtoint ptr %arrayidx.i.i96.i to i32
  call void @__asan_load4_noabort(i32 %902)
  %903 = load ptr, ptr %arrayidx.i.i96.i, align 4
  %tobool26.not.i.i.i = icmp eq ptr %903, null
  br i1 %tobool26.not.i.i.i, label %if.else.i.i.i.gfx_v9_0_kiq_resume.exit.thread189.i_crit_edge, label %if.then27.i.i.i

if.else.i.i.i.gfx_v9_0_kiq_resume.exit.thread189.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_kiq_resume.exit.thread189.i

if.then27.i.i.i:                                  ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %904 = call ptr @memcpy(ptr %903, ptr %827, i32 2064)
  br label %gfx_v9_0_kiq_resume.exit.thread189.i

gfx_v9_0_kiq_resume.exit.thread189.i:             ; preds = %if.then27.i.i.i, %if.else.i.i.i.gfx_v9_0_kiq_resume.exit.thread189.i_crit_edge, %amdgpu_ring_clear_ring.exit.i.i.i
  %905 = ptrtoint ptr %mqd_obj.i.i to i32
  call void @__asan_load4_noabort(i32 %905)
  %906 = load ptr, ptr %mqd_obj.i.i, align 4
  call void @amdgpu_bo_kunmap(ptr noundef %906) #15
  %907 = ptrtoint ptr %mqd_ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %907)
  store ptr null, ptr %mqd_ptr.i.i, align 8
  %908 = ptrtoint ptr %mqd_obj.i.i to i32
  call void @__asan_load4_noabort(i32 %908)
  %909 = load ptr, ptr %mqd_obj.i.i, align 4
  %tbo.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %909, i32 0, i32 4
  %bdev.i.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %909, i32 0, i32 4, i32 1
  %910 = ptrtoint ptr %bdev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %910)
  %911 = load ptr, ptr %bdev.i.i.i.i.i, align 8
  %lru_lock.i.i.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %911, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i.i) #15
  %resource.i.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %909, i32 0, i32 4, i32 6
  %912 = ptrtoint ptr %resource.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %912)
  %913 = load ptr, ptr %resource.i.i.i.i.i, align 4
  call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i.i, ptr noundef %913, ptr noundef null) #15
  %914 = ptrtoint ptr %bdev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %914)
  %915 = load ptr, ptr %bdev.i.i.i.i.i, align 8
  %lru_lock2.i.i.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %915, i32 0, i32 6
  call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i.i) #15
  %resv.i.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %909, i32 0, i32 4, i32 0, i32 9
  %916 = ptrtoint ptr %resv.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %916)
  %917 = load ptr, ptr %resv.i.i.i.i, align 8
  call void @dma_resv_reset_shared_max(ptr noundef %917) #15
  call void @ww_mutex_unlock(ptr noundef %917) #15
  %ready.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 3, i32 17
  %918 = ptrtoint ptr %ready.i.i to i32
  call void @__asan_store1_noabort(i32 %918)
  store i8 1, ptr %ready.i.i, align 4
  %num_gfx_rings18.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %919 = ptrtoint ptr %num_gfx_rings18.i to i32
  call void @__asan_load4_noabort(i32 %919)
  %920 = load i32, ptr %num_gfx_rings18.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %920)
  %tobool19.not.i = icmp eq i32 %920, 0
  br i1 %tobool19.not.i, label %gfx_v9_0_kiq_resume.exit.thread189.i.if.end25.i_crit_edge, label %if.then20.i

gfx_v9_0_kiq_resume.exit.thread189.i.if.end25.i_crit_edge: ; preds = %gfx_v9_0_kiq_resume.exit.thread189.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end25.i

if.then20.i:                                      ; preds = %gfx_v9_0_kiq_resume.exit.thread189.i
  %921 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %921)
  %922 = load i32, ptr %virt, align 8
  %and.i99.i = and i32 %922, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i99.i)
  %tobool.not.i100.i = icmp eq i32 %and.i99.i, 0
  br i1 %tobool.not.i100.i, label %if.then20.i.cond.false.i107.i_crit_edge, label %land.lhs.true.i102.i

if.then20.i.cond.false.i107.i_crit_edge:          ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i107.i

land.lhs.true.i102.i:                             ; preds = %if.then20.i
  %923 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %923)
  %924 = load ptr, ptr %funcs.i455.i, align 4
  %tobool1.not.i.i = icmp eq ptr %924, null
  br i1 %tobool1.not.i.i, label %land.lhs.true.i102.i.cond.false.i107.i_crit_edge, label %land.lhs.true2.i.i93

land.lhs.true.i102.i.cond.false.i107.i_crit_edge: ; preds = %land.lhs.true.i102.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i107.i

land.lhs.true2.i.i93:                             ; preds = %land.lhs.true.i102.i
  %sriov_wreg.i103.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %924, i32 0, i32 12
  %925 = ptrtoint ptr %sriov_wreg.i103.i to i32
  call void @__asan_load4_noabort(i32 %925)
  %926 = load ptr, ptr %sriov_wreg.i103.i, align 4
  %tobool6.not.i.i92 = icmp eq ptr %926, null
  br i1 %tobool6.not.i.i92, label %land.lhs.true2.i.i93.cond.false.i107.i_crit_edge, label %cond.true.i106.i

land.lhs.true2.i.i93.cond.false.i107.i_crit_edge: ; preds = %land.lhs.true2.i.i93
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i107.i

cond.true.i106.i:                                 ; preds = %land.lhs.true2.i.i93
  call void @__sanitizer_cov_trace_pc() #17
  %927 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %927)
  %928 = load ptr, ptr %arrayidx.i456.i, align 8
  %929 = ptrtoint ptr %928 to i32
  call void @__asan_load4_noabort(i32 %929)
  %930 = load i32, ptr %928, align 4
  %add.i105.i = add i32 %930, 449
  call void %926(ptr noundef %handle, i32 noundef %add.i105.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i109.i

cond.false.i107.i:                                ; preds = %land.lhs.true2.i.i93.cond.false.i107.i_crit_edge, %land.lhs.true.i102.i.cond.false.i107.i_crit_edge, %if.then20.i.cond.false.i107.i_crit_edge
  %931 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %931)
  %932 = load ptr, ptr %arrayidx.i456.i, align 8
  %933 = ptrtoint ptr %932 to i32
  call void @__asan_load4_noabort(i32 %933)
  %934 = load i32, ptr %932, align 4
  %add17.i.i = add i32 %934, 449
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add17.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end.i109.i

cond.end.i109.i:                                  ; preds = %cond.false.i107.i, %cond.true.i106.i
  %935 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %935)
  %936 = load i32, ptr %virt, align 8
  %and20.i.i = and i32 %936, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i.i)
  %tobool21.not.i108.i = icmp eq i32 %and20.i.i, 0
  br i1 %tobool21.not.i108.i, label %cond.end.i109.i.cond.false43.i.i_crit_edge, label %land.lhs.true22.i.i

cond.end.i109.i.cond.false43.i.i_crit_edge:       ; preds = %cond.end.i109.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i.i

land.lhs.true22.i.i:                              ; preds = %cond.end.i109.i
  %937 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %937)
  %938 = load ptr, ptr %funcs.i455.i, align 4
  %tobool26.not.i.i = icmp eq ptr %938, null
  br i1 %tobool26.not.i.i, label %land.lhs.true22.i.i.cond.false43.i.i_crit_edge, label %land.lhs.true27.i.i

land.lhs.true22.i.i.cond.false43.i.i_crit_edge:   ; preds = %land.lhs.true22.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i.i

land.lhs.true27.i.i:                              ; preds = %land.lhs.true22.i.i
  %sriov_wreg31.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %938, i32 0, i32 12
  %939 = ptrtoint ptr %sriov_wreg31.i.i to i32
  call void @__asan_load4_noabort(i32 %939)
  %940 = load ptr, ptr %sriov_wreg31.i.i, align 4
  %tobool32.not.i110.i = icmp eq ptr %940, null
  br i1 %tobool32.not.i110.i, label %land.lhs.true27.i.i.cond.false43.i.i_crit_edge, label %cond.true33.i.i

land.lhs.true27.i.i.cond.false43.i.i_crit_edge:   ; preds = %land.lhs.true27.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i.i

cond.true33.i.i:                                  ; preds = %land.lhs.true27.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %941 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %941)
  %942 = load ptr, ptr %arrayidx.i456.i, align 8
  %943 = ptrtoint ptr %942 to i32
  call void @__asan_load4_noabort(i32 %943)
  %944 = load i32, ptr %942, align 4
  %add42.i.i = add i32 %944, 4177
  call void %940(ptr noundef %handle, i32 noundef %add42.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end49.i.i

cond.false43.i.i:                                 ; preds = %land.lhs.true27.i.i.cond.false43.i.i_crit_edge, %land.lhs.true22.i.i.cond.false43.i.i_crit_edge, %cond.end.i109.i.cond.false43.i.i_crit_edge
  %945 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %945)
  %946 = load ptr, ptr %arrayidx.i456.i, align 8
  %947 = ptrtoint ptr %946 to i32
  call void @__asan_load4_noabort(i32 %947)
  %948 = load i32, ptr %946, align 4
  %add48.i.i = add i32 %948, 4177
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add48.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end49.i.i

cond.end49.i.i:                                   ; preds = %cond.false43.i.i, %cond.true33.i.i
  %ring_size.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 9
  %949 = ptrtoint ptr %ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %949)
  %950 = load i32, ptr %ring_size.i.i, align 8
  %div1.i.i = lshr i32 %950, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %950)
  %cmp.i.i.i = icmp ugt i32 %950, 15
  %sub.i2.i.i = add nsw i32 %div1.i.i, -1
  %951 = call i32 @llvm.ctlz.i32(i32 %sub.i2.i.i, i1 false) #15, !range !1014
  %add.i.i112.i = sub nuw nsw i32 32, %951
  %cond88.i.i = select i1 %cmp.i.i.i, i32 %add.i.i112.i, i32 0
  %and89.i.i = and i32 %cond88.i.i, 63
  %sub91.i.i = shl nsw i32 %cond88.i.i, 8
  %shl92.i.i = add nsw i32 %sub91.i.i, 15872
  %and93.i.i97 = and i32 %shl92.i.i, 16128
  %or94.i.i = or i32 %and89.i.i, %and93.i.i97
  %or96.i.i = or i32 %or94.i.i, 131072
  %952 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %952)
  %953 = load i32, ptr %virt, align 8
  %and99.i.i = and i32 %953, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and99.i.i)
  %tobool100.not.i.i = icmp eq i32 %and99.i.i, 0
  br i1 %tobool100.not.i.i, label %cond.end49.i.i.cond.false122.i.i_crit_edge, label %land.lhs.true101.i.i

cond.end49.i.i.cond.false122.i.i_crit_edge:       ; preds = %cond.end49.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false122.i.i

land.lhs.true101.i.i:                             ; preds = %cond.end49.i.i
  %954 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %954)
  %955 = load ptr, ptr %funcs.i455.i, align 4
  %tobool105.not.i.i98 = icmp eq ptr %955, null
  br i1 %tobool105.not.i.i98, label %land.lhs.true101.i.i.cond.false122.i.i_crit_edge, label %land.lhs.true106.i.i

land.lhs.true101.i.i.cond.false122.i.i_crit_edge: ; preds = %land.lhs.true101.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false122.i.i

land.lhs.true106.i.i:                             ; preds = %land.lhs.true101.i.i
  %sriov_wreg110.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %955, i32 0, i32 12
  %956 = ptrtoint ptr %sriov_wreg110.i.i to i32
  call void @__asan_load4_noabort(i32 %956)
  %957 = load ptr, ptr %sriov_wreg110.i.i, align 4
  %tobool111.not.i.i = icmp eq ptr %957, null
  br i1 %tobool111.not.i.i, label %land.lhs.true106.i.i.cond.false122.i.i_crit_edge, label %cond.true112.i.i

land.lhs.true106.i.i.cond.false122.i.i_crit_edge: ; preds = %land.lhs.true106.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false122.i.i

cond.true112.i.i:                                 ; preds = %land.lhs.true106.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %958 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %958)
  %959 = load ptr, ptr %arrayidx.i456.i, align 8
  %960 = ptrtoint ptr %959 to i32
  call void @__asan_load4_noabort(i32 %960)
  %961 = load i32, ptr %959, align 4
  %add121.i.i = add i32 %961, 4161
  call void %957(ptr noundef %handle, i32 noundef %add121.i.i, i32 noundef %or96.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end128.i.i

cond.false122.i.i:                                ; preds = %land.lhs.true106.i.i.cond.false122.i.i_crit_edge, %land.lhs.true101.i.i.cond.false122.i.i_crit_edge, %cond.end49.i.i.cond.false122.i.i_crit_edge
  %962 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %962)
  %963 = load ptr, ptr %arrayidx.i456.i, align 8
  %964 = ptrtoint ptr %963 to i32
  call void @__asan_load4_noabort(i32 %964)
  %965 = load i32, ptr %963, align 4
  %add127.i.i = add i32 %965, 4161
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add127.i.i, i32 noundef %or96.i.i, i32 noundef 0) #15
  br label %cond.end128.i.i

cond.end128.i.i:                                  ; preds = %cond.false122.i.i, %cond.true112.i.i
  %wptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 7
  %966 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_store8_noabort(i32 %966)
  store i64 0, ptr %wptr.i.i, align 8
  %967 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %967)
  %968 = load i32, ptr %virt, align 8
  %and131.i.i = and i32 %968, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and131.i.i)
  %tobool132.not.i113.i = icmp eq i32 %and131.i.i, 0
  br i1 %tobool132.not.i113.i, label %cond.end128.i.i.cond.false157.i.i_crit_edge, label %land.lhs.true133.i.i

cond.end128.i.i.cond.false157.i.i_crit_edge:      ; preds = %cond.end128.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false157.i.i

land.lhs.true133.i.i:                             ; preds = %cond.end128.i.i
  %969 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %969)
  %970 = load ptr, ptr %funcs.i455.i, align 4
  %tobool137.not.i.i = icmp eq ptr %970, null
  br i1 %tobool137.not.i.i, label %land.lhs.true133.i.i.cond.false157.i.i_crit_edge, label %land.lhs.true138.i.i

land.lhs.true133.i.i.cond.false157.i.i_crit_edge: ; preds = %land.lhs.true133.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false157.i.i

land.lhs.true138.i.i:                             ; preds = %land.lhs.true133.i.i
  %sriov_wreg142.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %970, i32 0, i32 12
  %971 = ptrtoint ptr %sriov_wreg142.i.i to i32
  call void @__asan_load4_noabort(i32 %971)
  %972 = load ptr, ptr %sriov_wreg142.i.i, align 4
  %tobool143.not.i.i = icmp eq ptr %972, null
  br i1 %tobool143.not.i.i, label %land.lhs.true138.i.i.cond.false157.i.i_crit_edge, label %cond.true144.i.i

land.lhs.true138.i.i.cond.false157.i.i_crit_edge: ; preds = %land.lhs.true138.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false157.i.i

cond.true144.i.i:                                 ; preds = %land.lhs.true138.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %973 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %973)
  %974 = load ptr, ptr %arrayidx.i456.i, align 8
  %975 = ptrtoint ptr %974 to i32
  call void @__asan_load4_noabort(i32 %975)
  %976 = load i32, ptr %974, align 4
  %add153.i.i99 = add i32 %976, 4180
  call void %972(ptr noundef %handle, i32 noundef %add153.i.i99, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end166.i.i

cond.false157.i.i:                                ; preds = %land.lhs.true138.i.i.cond.false157.i.i_crit_edge, %land.lhs.true133.i.i.cond.false157.i.i_crit_edge, %cond.end128.i.i.cond.false157.i.i_crit_edge
  %977 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %977)
  %978 = load ptr, ptr %arrayidx.i456.i, align 8
  %979 = ptrtoint ptr %978 to i32
  call void @__asan_load4_noabort(i32 %979)
  %980 = load i32, ptr %978, align 4
  %add162.i.i = add i32 %980, 4180
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add162.i.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end166.i.i

cond.end166.i.i:                                  ; preds = %cond.false157.i.i, %cond.true144.i.i
  %981 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %981)
  %982 = load i32, ptr %virt, align 8
  %and169.i.i = and i32 %982, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and169.i.i)
  %tobool170.not.i.i = icmp eq i32 %and169.i.i, 0
  br i1 %tobool170.not.i.i, label %cond.end166.i.i.cond.false195.i.i_crit_edge, label %land.lhs.true171.i.i

cond.end166.i.i.cond.false195.i.i_crit_edge:      ; preds = %cond.end166.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false195.i.i

land.lhs.true171.i.i:                             ; preds = %cond.end166.i.i
  %983 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %983)
  %984 = load ptr, ptr %funcs.i455.i, align 4
  %tobool175.not.i.i = icmp eq ptr %984, null
  br i1 %tobool175.not.i.i, label %land.lhs.true171.i.i.cond.false195.i.i_crit_edge, label %land.lhs.true176.i.i

land.lhs.true171.i.i.cond.false195.i.i_crit_edge: ; preds = %land.lhs.true171.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false195.i.i

land.lhs.true176.i.i:                             ; preds = %land.lhs.true171.i.i
  %sriov_wreg180.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %984, i32 0, i32 12
  %985 = ptrtoint ptr %sriov_wreg180.i.i to i32
  call void @__asan_load4_noabort(i32 %985)
  %986 = load ptr, ptr %sriov_wreg180.i.i, align 4
  %tobool181.not.i.i = icmp eq ptr %986, null
  br i1 %tobool181.not.i.i, label %land.lhs.true176.i.i.cond.false195.i.i_crit_edge, label %cond.true182.i.i

land.lhs.true176.i.i.cond.false195.i.i_crit_edge: ; preds = %land.lhs.true176.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false195.i.i

cond.true182.i.i:                                 ; preds = %land.lhs.true176.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %987 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %987)
  %988 = load ptr, ptr %arrayidx.i456.i, align 8
  %989 = ptrtoint ptr %988 to i32
  call void @__asan_load4_noabort(i32 %989)
  %990 = load i32, ptr %988, align 4
  %add191.i.i = add i32 %990, 4181
  %991 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %991)
  %992 = load i64, ptr %wptr.i.i, align 8
  %shr.i114.i = lshr i64 %992, 32
  %conv194.i.i = trunc i64 %shr.i114.i to i32
  call void %986(ptr noundef %handle, i32 noundef %add191.i.i, i32 noundef %conv194.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end205.i.i

cond.false195.i.i:                                ; preds = %land.lhs.true176.i.i.cond.false195.i.i_crit_edge, %land.lhs.true171.i.i.cond.false195.i.i_crit_edge, %cond.end166.i.i.cond.false195.i.i_crit_edge
  %993 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %993)
  %994 = load ptr, ptr %arrayidx.i456.i, align 8
  %995 = ptrtoint ptr %994 to i32
  call void @__asan_load4_noabort(i32 %995)
  %996 = load i32, ptr %994, align 4
  %add200.i.i = add i32 %996, 4181
  %997 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %997)
  %998 = load i64, ptr %wptr.i.i, align 8
  %shr202.i.i = lshr i64 %998, 32
  %conv204.i.i = trunc i64 %shr202.i.i to i32
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add200.i.i, i32 noundef %conv204.i.i, i32 noundef 0) #15
  br label %cond.end205.i.i

cond.end205.i.i:                                  ; preds = %cond.false195.i.i, %cond.true182.i.i
  %gpu_addr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 70, i32 2
  %999 = ptrtoint ptr %gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %999)
  %1000 = load i64, ptr %gpu_addr.i.i, align 8
  %rptr_offs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 6
  %1001 = ptrtoint ptr %rptr_offs.i.i to i32
  call void @__asan_load4_noabort(i32 %1001)
  %1002 = load i32, ptr %rptr_offs.i.i, align 8
  %mul.i.i100 = shl i32 %1002, 2
  %conv206.i.i = zext i32 %mul.i.i100 to i64
  %add207.i.i = add i64 %1000, %conv206.i.i
  %1003 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1003)
  %1004 = load i32, ptr %virt, align 8
  %and210.i.i = and i32 %1004, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and210.i.i)
  %tobool211.not.i.i = icmp eq i32 %and210.i.i, 0
  br i1 %tobool211.not.i.i, label %cond.end205.i.i.cond.false235.i.i_crit_edge, label %land.lhs.true212.i.i

cond.end205.i.i.cond.false235.i.i_crit_edge:      ; preds = %cond.end205.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false235.i.i

land.lhs.true212.i.i:                             ; preds = %cond.end205.i.i
  %1005 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1005)
  %1006 = load ptr, ptr %funcs.i455.i, align 4
  %tobool216.not.i.i = icmp eq ptr %1006, null
  br i1 %tobool216.not.i.i, label %land.lhs.true212.i.i.cond.false235.i.i_crit_edge, label %land.lhs.true217.i.i

land.lhs.true212.i.i.cond.false235.i.i_crit_edge: ; preds = %land.lhs.true212.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false235.i.i

land.lhs.true217.i.i:                             ; preds = %land.lhs.true212.i.i
  %sriov_wreg221.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1006, i32 0, i32 12
  %1007 = ptrtoint ptr %sriov_wreg221.i.i to i32
  call void @__asan_load4_noabort(i32 %1007)
  %1008 = load ptr, ptr %sriov_wreg221.i.i, align 4
  %tobool222.not.i.i = icmp eq ptr %1008, null
  br i1 %tobool222.not.i.i, label %land.lhs.true217.i.i.cond.false235.i.i_crit_edge, label %cond.true223.i.i

land.lhs.true217.i.i.cond.false235.i.i_crit_edge: ; preds = %land.lhs.true217.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false235.i.i

cond.true223.i.i:                                 ; preds = %land.lhs.true217.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1009 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1009)
  %1010 = load ptr, ptr %arrayidx.i456.i, align 8
  %1011 = ptrtoint ptr %1010 to i32
  call void @__asan_load4_noabort(i32 %1011)
  %1012 = load i32, ptr %1010, align 4
  %add232.i.i = add i32 %1012, 4163
  %conv234.i.i = trunc i64 %add207.i.i to i32
  call void %1008(ptr noundef %handle, i32 noundef %add232.i.i, i32 noundef %conv234.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end243.i.i

cond.false235.i.i:                                ; preds = %land.lhs.true217.i.i.cond.false235.i.i_crit_edge, %land.lhs.true212.i.i.cond.false235.i.i_crit_edge, %cond.end205.i.i.cond.false235.i.i_crit_edge
  %1013 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1013)
  %1014 = load ptr, ptr %arrayidx.i456.i, align 8
  %1015 = ptrtoint ptr %1014 to i32
  call void @__asan_load4_noabort(i32 %1015)
  %1016 = load i32, ptr %1014, align 4
  %add240.i.i = add i32 %1016, 4163
  %conv242.i.i = trunc i64 %add207.i.i to i32
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add240.i.i, i32 noundef %conv242.i.i, i32 noundef 0) #15
  br label %cond.end243.i.i

cond.end243.i.i:                                  ; preds = %cond.false235.i.i, %cond.true223.i.i
  %1017 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1017)
  %1018 = load i32, ptr %virt, align 8
  %and246.i.i = and i32 %1018, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and246.i.i)
  %tobool247.not.i.i = icmp eq i32 %and246.i.i, 0
  br i1 %tobool247.not.i.i, label %cond.end243.i.i.cond.false273.i.i_crit_edge, label %land.lhs.true248.i.i

cond.end243.i.i.cond.false273.i.i_crit_edge:      ; preds = %cond.end243.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false273.i.i

land.lhs.true248.i.i:                             ; preds = %cond.end243.i.i
  %1019 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1019)
  %1020 = load ptr, ptr %funcs.i455.i, align 4
  %tobool252.not.i.i = icmp eq ptr %1020, null
  br i1 %tobool252.not.i.i, label %land.lhs.true248.i.i.cond.false273.i.i_crit_edge, label %land.lhs.true253.i.i

land.lhs.true248.i.i.cond.false273.i.i_crit_edge: ; preds = %land.lhs.true248.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false273.i.i

land.lhs.true253.i.i:                             ; preds = %land.lhs.true248.i.i
  %sriov_wreg257.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1020, i32 0, i32 12
  %1021 = ptrtoint ptr %sriov_wreg257.i.i to i32
  call void @__asan_load4_noabort(i32 %1021)
  %1022 = load ptr, ptr %sriov_wreg257.i.i, align 4
  %tobool258.not.i.i = icmp eq ptr %1022, null
  br i1 %tobool258.not.i.i, label %land.lhs.true253.i.i.cond.false273.i.i_crit_edge, label %cond.true259.i.i

land.lhs.true253.i.i.cond.false273.i.i_crit_edge: ; preds = %land.lhs.true253.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false273.i.i

cond.true259.i.i:                                 ; preds = %land.lhs.true253.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1023 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1023)
  %1024 = load ptr, ptr %arrayidx.i456.i, align 8
  %1025 = ptrtoint ptr %1024 to i32
  call void @__asan_load4_noabort(i32 %1025)
  %1026 = load i32, ptr %1024, align 4
  %add268.i.i101 = add i32 %1026, 4164
  %shr269.i.i = lshr i64 %add207.i.i, 32
  %conv271.i.i = trunc i64 %shr269.i.i to i32
  %and272.i.i102 = and i32 %conv271.i.i, 65535
  call void %1022(ptr noundef %handle, i32 noundef %add268.i.i101, i32 noundef %and272.i.i102, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end283.i.i

cond.false273.i.i:                                ; preds = %land.lhs.true253.i.i.cond.false273.i.i_crit_edge, %land.lhs.true248.i.i.cond.false273.i.i_crit_edge, %cond.end243.i.i.cond.false273.i.i_crit_edge
  %1027 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1027)
  %1028 = load ptr, ptr %arrayidx.i456.i, align 8
  %1029 = ptrtoint ptr %1028 to i32
  call void @__asan_load4_noabort(i32 %1029)
  %1030 = load i32, ptr %1028, align 4
  %add278.i.i103 = add i32 %1030, 4164
  %shr279.i.i = lshr i64 %add207.i.i, 32
  %conv281.i.i = trunc i64 %shr279.i.i to i32
  %and282.i.i104 = and i32 %conv281.i.i, 65535
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add278.i.i103, i32 noundef %and282.i.i104, i32 noundef 0) #15
  br label %cond.end283.i.i

cond.end283.i.i:                                  ; preds = %cond.false273.i.i, %cond.true259.i.i
  %1031 = ptrtoint ptr %gpu_addr.i.i to i32
  call void @__asan_load8_noabort(i32 %1031)
  %1032 = load i64, ptr %gpu_addr.i.i, align 8
  %wptr_offs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 26
  %1033 = ptrtoint ptr %wptr_offs.i.i to i32
  call void @__asan_load4_noabort(i32 %1033)
  %1034 = load i32, ptr %wptr_offs.i.i, align 8
  %mul286.i.i = shl i32 %1034, 2
  %conv287.i.i = zext i32 %mul286.i.i to i64
  %add288.i.i105 = add i64 %1032, %conv287.i.i
  %1035 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1035)
  %1036 = load i32, ptr %virt, align 8
  %and291.i.i = and i32 %1036, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and291.i.i)
  %tobool292.not.i.i = icmp eq i32 %and291.i.i, 0
  br i1 %tobool292.not.i.i, label %cond.end283.i.i.cond.false316.i.i_crit_edge, label %land.lhs.true293.i.i

cond.end283.i.i.cond.false316.i.i_crit_edge:      ; preds = %cond.end283.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false316.i.i

land.lhs.true293.i.i:                             ; preds = %cond.end283.i.i
  %1037 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1037)
  %1038 = load ptr, ptr %funcs.i455.i, align 4
  %tobool297.not.i.i = icmp eq ptr %1038, null
  br i1 %tobool297.not.i.i, label %land.lhs.true293.i.i.cond.false316.i.i_crit_edge, label %land.lhs.true298.i.i

land.lhs.true293.i.i.cond.false316.i.i_crit_edge: ; preds = %land.lhs.true293.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false316.i.i

land.lhs.true298.i.i:                             ; preds = %land.lhs.true293.i.i
  %sriov_wreg302.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1038, i32 0, i32 12
  %1039 = ptrtoint ptr %sriov_wreg302.i.i to i32
  call void @__asan_load4_noabort(i32 %1039)
  %1040 = load ptr, ptr %sriov_wreg302.i.i, align 4
  %tobool303.not.i.i = icmp eq ptr %1040, null
  br i1 %tobool303.not.i.i, label %land.lhs.true298.i.i.cond.false316.i.i_crit_edge, label %cond.true304.i.i

land.lhs.true298.i.i.cond.false316.i.i_crit_edge: ; preds = %land.lhs.true298.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false316.i.i

cond.true304.i.i:                                 ; preds = %land.lhs.true298.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1041 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1041)
  %1042 = load ptr, ptr %arrayidx.i456.i, align 8
  %1043 = ptrtoint ptr %1042 to i32
  call void @__asan_load4_noabort(i32 %1043)
  %1044 = load i32, ptr %1042, align 4
  %add313.i.i = add i32 %1044, 4166
  %conv315.i.i = trunc i64 %add288.i.i105 to i32
  call void %1040(ptr noundef %handle, i32 noundef %add313.i.i, i32 noundef %conv315.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end324.i.i

cond.false316.i.i:                                ; preds = %land.lhs.true298.i.i.cond.false316.i.i_crit_edge, %land.lhs.true293.i.i.cond.false316.i.i_crit_edge, %cond.end283.i.i.cond.false316.i.i_crit_edge
  %1045 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1045)
  %1046 = load ptr, ptr %arrayidx.i456.i, align 8
  %1047 = ptrtoint ptr %1046 to i32
  call void @__asan_load4_noabort(i32 %1047)
  %1048 = load i32, ptr %1046, align 4
  %add321.i.i = add i32 %1048, 4166
  %conv323.i.i = trunc i64 %add288.i.i105 to i32
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add321.i.i, i32 noundef %conv323.i.i, i32 noundef 0) #15
  br label %cond.end324.i.i

cond.end324.i.i:                                  ; preds = %cond.false316.i.i, %cond.true304.i.i
  %1049 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1049)
  %1050 = load i32, ptr %virt, align 8
  %and327.i.i = and i32 %1050, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and327.i.i)
  %tobool328.not.i.i = icmp eq i32 %and327.i.i, 0
  br i1 %tobool328.not.i.i, label %cond.end324.i.i.cond.false353.i.i_crit_edge, label %land.lhs.true329.i.i

cond.end324.i.i.cond.false353.i.i_crit_edge:      ; preds = %cond.end324.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false353.i.i

land.lhs.true329.i.i:                             ; preds = %cond.end324.i.i
  %1051 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1051)
  %1052 = load ptr, ptr %funcs.i455.i, align 4
  %tobool333.not.i.i = icmp eq ptr %1052, null
  br i1 %tobool333.not.i.i, label %land.lhs.true329.i.i.cond.false353.i.i_crit_edge, label %land.lhs.true334.i.i

land.lhs.true329.i.i.cond.false353.i.i_crit_edge: ; preds = %land.lhs.true329.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false353.i.i

land.lhs.true334.i.i:                             ; preds = %land.lhs.true329.i.i
  %sriov_wreg338.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1052, i32 0, i32 12
  %1053 = ptrtoint ptr %sriov_wreg338.i.i to i32
  call void @__asan_load4_noabort(i32 %1053)
  %1054 = load ptr, ptr %sriov_wreg338.i.i, align 4
  %tobool339.not.i.i = icmp eq ptr %1054, null
  br i1 %tobool339.not.i.i, label %land.lhs.true334.i.i.cond.false353.i.i_crit_edge, label %cond.true340.i.i

land.lhs.true334.i.i.cond.false353.i.i_crit_edge: ; preds = %land.lhs.true334.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false353.i.i

cond.true340.i.i:                                 ; preds = %land.lhs.true334.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1055 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1055)
  %1056 = load ptr, ptr %arrayidx.i456.i, align 8
  %1057 = ptrtoint ptr %1056 to i32
  call void @__asan_load4_noabort(i32 %1057)
  %1058 = load i32, ptr %1056, align 4
  %add349.i.i = add i32 %1058, 4167
  %shr350.i.i = lshr i64 %add288.i.i105, 32
  %conv352.i.i = trunc i64 %shr350.i.i to i32
  call void %1054(ptr noundef %handle, i32 noundef %add349.i.i, i32 noundef %conv352.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end362.i.i

cond.false353.i.i:                                ; preds = %land.lhs.true334.i.i.cond.false353.i.i_crit_edge, %land.lhs.true329.i.i.cond.false353.i.i_crit_edge, %cond.end324.i.i.cond.false353.i.i_crit_edge
  %1059 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1059)
  %1060 = load ptr, ptr %arrayidx.i456.i, align 8
  %1061 = ptrtoint ptr %1060 to i32
  call void @__asan_load4_noabort(i32 %1061)
  %1062 = load i32, ptr %1060, align 4
  %add358.i.i = add i32 %1062, 4167
  %shr359.i.i = lshr i64 %add288.i.i105, 32
  %conv361.i.i = trunc i64 %shr359.i.i to i32
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add358.i.i, i32 noundef %conv361.i.i, i32 noundef 0) #15
  br label %cond.end362.i.i

cond.end362.i.i:                                  ; preds = %cond.false353.i.i, %cond.true340.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %1063 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %1063(i32 noundef 214748000) #15
  %1064 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1064)
  %1065 = load i32, ptr %virt, align 8
  %and365.i.i = and i32 %1065, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and365.i.i)
  %tobool366.not.i.i = icmp eq i32 %and365.i.i, 0
  br i1 %tobool366.not.i.i, label %cond.end362.i.i.cond.false388.i.i_crit_edge, label %land.lhs.true367.i.i

cond.end362.i.i.cond.false388.i.i_crit_edge:      ; preds = %cond.end362.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false388.i.i

land.lhs.true367.i.i:                             ; preds = %cond.end362.i.i
  %1066 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1066)
  %1067 = load ptr, ptr %funcs.i455.i, align 4
  %tobool371.not.i.i = icmp eq ptr %1067, null
  br i1 %tobool371.not.i.i, label %land.lhs.true367.i.i.cond.false388.i.i_crit_edge, label %land.lhs.true372.i.i

land.lhs.true367.i.i.cond.false388.i.i_crit_edge: ; preds = %land.lhs.true367.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false388.i.i

land.lhs.true372.i.i:                             ; preds = %land.lhs.true367.i.i
  %sriov_wreg376.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1067, i32 0, i32 12
  %1068 = ptrtoint ptr %sriov_wreg376.i.i to i32
  call void @__asan_load4_noabort(i32 %1068)
  %1069 = load ptr, ptr %sriov_wreg376.i.i, align 4
  %tobool377.not.i.i = icmp eq ptr %1069, null
  br i1 %tobool377.not.i.i, label %land.lhs.true372.i.i.cond.false388.i.i_crit_edge, label %cond.true378.i.i

land.lhs.true372.i.i.cond.false388.i.i_crit_edge: ; preds = %land.lhs.true372.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false388.i.i

cond.true378.i.i:                                 ; preds = %land.lhs.true372.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1070 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1070)
  %1071 = load ptr, ptr %arrayidx.i456.i, align 8
  %1072 = ptrtoint ptr %1071 to i32
  call void @__asan_load4_noabort(i32 %1072)
  %1073 = load i32, ptr %1071, align 4
  %add387.i.i = add i32 %1073, 4161
  call void %1069(ptr noundef %handle, i32 noundef %add387.i.i, i32 noundef %or96.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end394.i.i

cond.false388.i.i:                                ; preds = %land.lhs.true372.i.i.cond.false388.i.i_crit_edge, %land.lhs.true367.i.i.cond.false388.i.i_crit_edge, %cond.end362.i.i.cond.false388.i.i_crit_edge
  %1074 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1074)
  %1075 = load ptr, ptr %arrayidx.i456.i, align 8
  %1076 = ptrtoint ptr %1075 to i32
  call void @__asan_load4_noabort(i32 %1076)
  %1077 = load i32, ptr %1075, align 4
  %add393.i.i = add i32 %1077, 4161
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add393.i.i, i32 noundef %or96.i.i, i32 noundef 0) #15
  br label %cond.end394.i.i

cond.end394.i.i:                                  ; preds = %cond.false388.i.i, %cond.true378.i.i
  %gpu_addr395.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 12
  %1078 = ptrtoint ptr %gpu_addr395.i.i to i32
  call void @__asan_load8_noabort(i32 %1078)
  %1079 = load i64, ptr %gpu_addr395.i.i, align 8
  %shr396.i.i = lshr i64 %1079, 8
  %1080 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1080)
  %1081 = load i32, ptr %virt, align 8
  %and399.i.i = and i32 %1081, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and399.i.i)
  %tobool400.not.i.i = icmp eq i32 %and399.i.i, 0
  br i1 %tobool400.not.i.i, label %cond.end394.i.i.cond.false423.i.i_crit_edge, label %land.lhs.true401.i.i

cond.end394.i.i.cond.false423.i.i_crit_edge:      ; preds = %cond.end394.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false423.i.i

land.lhs.true401.i.i:                             ; preds = %cond.end394.i.i
  %1082 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1082)
  %1083 = load ptr, ptr %funcs.i455.i, align 4
  %tobool405.not.i.i = icmp eq ptr %1083, null
  br i1 %tobool405.not.i.i, label %land.lhs.true401.i.i.cond.false423.i.i_crit_edge, label %land.lhs.true406.i.i

land.lhs.true401.i.i.cond.false423.i.i_crit_edge: ; preds = %land.lhs.true401.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false423.i.i

land.lhs.true406.i.i:                             ; preds = %land.lhs.true401.i.i
  %sriov_wreg410.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1083, i32 0, i32 12
  %1084 = ptrtoint ptr %sriov_wreg410.i.i to i32
  call void @__asan_load4_noabort(i32 %1084)
  %1085 = load ptr, ptr %sriov_wreg410.i.i, align 4
  %tobool411.not.i.i = icmp eq ptr %1085, null
  br i1 %tobool411.not.i.i, label %land.lhs.true406.i.i.cond.false423.i.i_crit_edge, label %cond.true412.i.i

land.lhs.true406.i.i.cond.false423.i.i_crit_edge: ; preds = %land.lhs.true406.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false423.i.i

cond.true412.i.i:                                 ; preds = %land.lhs.true406.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1086 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1086)
  %1087 = load ptr, ptr %arrayidx.i456.i, align 8
  %1088 = ptrtoint ptr %1087 to i32
  call void @__asan_load4_noabort(i32 %1088)
  %1089 = load i32, ptr %1087, align 4
  %add421.i.i = add i32 %1089, 4160
  %conv422.i.i = trunc i64 %shr396.i.i to i32
  call void %1085(ptr noundef %handle, i32 noundef %add421.i.i, i32 noundef %conv422.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end430.i.i

cond.false423.i.i:                                ; preds = %land.lhs.true406.i.i.cond.false423.i.i_crit_edge, %land.lhs.true401.i.i.cond.false423.i.i_crit_edge, %cond.end394.i.i.cond.false423.i.i_crit_edge
  %1090 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1090)
  %1091 = load ptr, ptr %arrayidx.i456.i, align 8
  %1092 = ptrtoint ptr %1091 to i32
  call void @__asan_load4_noabort(i32 %1092)
  %1093 = load i32, ptr %1091, align 4
  %add428.i.i = add i32 %1093, 4160
  %conv429.i.i = trunc i64 %shr396.i.i to i32
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add428.i.i, i32 noundef %conv429.i.i, i32 noundef 0) #15
  br label %cond.end430.i.i

cond.end430.i.i:                                  ; preds = %cond.false423.i.i, %cond.true412.i.i
  %1094 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1094)
  %1095 = load i32, ptr %virt, align 8
  %and433.i.i = and i32 %1095, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and433.i.i)
  %tobool434.not.i.i = icmp eq i32 %and433.i.i, 0
  br i1 %tobool434.not.i.i, label %cond.end430.i.i.cond.false459.i.i_crit_edge, label %land.lhs.true435.i.i

cond.end430.i.i.cond.false459.i.i_crit_edge:      ; preds = %cond.end430.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false459.i.i

land.lhs.true435.i.i:                             ; preds = %cond.end430.i.i
  %1096 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1096)
  %1097 = load ptr, ptr %funcs.i455.i, align 4
  %tobool439.not.i.i = icmp eq ptr %1097, null
  br i1 %tobool439.not.i.i, label %land.lhs.true435.i.i.cond.false459.i.i_crit_edge, label %land.lhs.true440.i.i

land.lhs.true435.i.i.cond.false459.i.i_crit_edge: ; preds = %land.lhs.true435.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false459.i.i

land.lhs.true440.i.i:                             ; preds = %land.lhs.true435.i.i
  %sriov_wreg444.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1097, i32 0, i32 12
  %1098 = ptrtoint ptr %sriov_wreg444.i.i to i32
  call void @__asan_load4_noabort(i32 %1098)
  %1099 = load ptr, ptr %sriov_wreg444.i.i, align 4
  %tobool445.not.i.i = icmp eq ptr %1099, null
  br i1 %tobool445.not.i.i, label %land.lhs.true440.i.i.cond.false459.i.i_crit_edge, label %cond.true446.i.i

land.lhs.true440.i.i.cond.false459.i.i_crit_edge: ; preds = %land.lhs.true440.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false459.i.i

cond.true446.i.i:                                 ; preds = %land.lhs.true440.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1100 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1100)
  %1101 = load ptr, ptr %arrayidx.i456.i, align 8
  %1102 = ptrtoint ptr %1101 to i32
  call void @__asan_load4_noabort(i32 %1102)
  %1103 = load i32, ptr %1101, align 4
  %add455.i.i = add i32 %1103, 4273
  %shr456.i.i = lshr i64 %1079, 40
  %conv458.i.i = trunc i64 %shr456.i.i to i32
  call void %1099(ptr noundef %handle, i32 noundef %add455.i.i, i32 noundef %conv458.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end468.i.i

cond.false459.i.i:                                ; preds = %land.lhs.true440.i.i.cond.false459.i.i_crit_edge, %land.lhs.true435.i.i.cond.false459.i.i_crit_edge, %cond.end430.i.i.cond.false459.i.i_crit_edge
  %1104 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1104)
  %1105 = load ptr, ptr %arrayidx.i456.i, align 8
  %1106 = ptrtoint ptr %1105 to i32
  call void @__asan_load4_noabort(i32 %1106)
  %1107 = load i32, ptr %1105, align 4
  %add464.i.i = add i32 %1107, 4273
  %shr465.i.i = lshr i64 %1079, 40
  %conv467.i.i = trunc i64 %shr465.i.i to i32
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add464.i.i, i32 noundef %conv467.i.i, i32 noundef 0) #15
  br label %cond.end468.i.i

cond.end468.i.i:                                  ; preds = %cond.false459.i.i, %cond.true446.i.i
  %1108 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1108)
  %1109 = load i32, ptr %virt, align 8
  %and471.i.i = and i32 %1109, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and471.i.i)
  %tobool472.not.i.i = icmp eq i32 %and471.i.i, 0
  br i1 %tobool472.not.i.i, label %cond.end468.i.i.cond.false494.i.i_crit_edge, label %land.lhs.true473.i.i

cond.end468.i.i.cond.false494.i.i_crit_edge:      ; preds = %cond.end468.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false494.i.i

land.lhs.true473.i.i:                             ; preds = %cond.end468.i.i
  %1110 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1110)
  %1111 = load ptr, ptr %funcs.i455.i, align 4
  %tobool477.not.i.i = icmp eq ptr %1111, null
  br i1 %tobool477.not.i.i, label %land.lhs.true473.i.i.cond.false494.i.i_crit_edge, label %land.lhs.true478.i.i

land.lhs.true473.i.i.cond.false494.i.i_crit_edge: ; preds = %land.lhs.true473.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false494.i.i

land.lhs.true478.i.i:                             ; preds = %land.lhs.true473.i.i
  %sriov_rreg.i.i106 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1111, i32 0, i32 13
  %1112 = ptrtoint ptr %sriov_rreg.i.i106 to i32
  call void @__asan_load4_noabort(i32 %1112)
  %1113 = load ptr, ptr %sriov_rreg.i.i106, align 4
  %tobool482.not.i.i = icmp eq ptr %1113, null
  br i1 %tobool482.not.i.i, label %land.lhs.true478.i.i.cond.false494.i.i_crit_edge, label %cond.true483.i.i

land.lhs.true478.i.i.cond.false494.i.i_crit_edge: ; preds = %land.lhs.true478.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false494.i.i

cond.true483.i.i:                                 ; preds = %land.lhs.true478.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1114 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1114)
  %1115 = load ptr, ptr %arrayidx.i456.i, align 8
  %1116 = ptrtoint ptr %1115 to i32
  call void @__asan_load4_noabort(i32 %1116)
  %1117 = load i32, ptr %1115, align 4
  %add492.i.i = add i32 %1117, 4185
  %call493.i.i = call i32 %1113(ptr noundef %handle, i32 noundef %add492.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end501.i.i

cond.false494.i.i:                                ; preds = %land.lhs.true478.i.i.cond.false494.i.i_crit_edge, %land.lhs.true473.i.i.cond.false494.i.i_crit_edge, %cond.end468.i.i.cond.false494.i.i_crit_edge
  %1118 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1118)
  %1119 = load ptr, ptr %arrayidx.i456.i, align 8
  %1120 = ptrtoint ptr %1119 to i32
  call void @__asan_load4_noabort(i32 %1120)
  %1121 = load i32, ptr %1119, align 4
  %add499.i.i = add i32 %1121, 4185
  %call500.i.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add499.i.i, i32 noundef 0) #15
  br label %cond.end501.i.i

cond.end501.i.i:                                  ; preds = %cond.false494.i.i, %cond.true483.i.i
  %cond502.i.i = phi i32 [ %call493.i.i, %cond.true483.i.i ], [ %call500.i.i, %cond.false494.i.i ]
  %use_doorbell.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 24
  %1122 = ptrtoint ptr %use_doorbell.i.i to i32
  call void @__asan_load1_noabort(i32 %1122)
  %1123 = load i8, ptr %use_doorbell.i.i, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1123)
  %tobool503.not.i.i = icmp eq i8 %1123, 0
  br i1 %tobool503.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %cond.end501.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %and504.i.i = and i32 %cond502.i.i, -1342177277
  %doorbell_index.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 23
  %1124 = ptrtoint ptr %doorbell_index.i.i to i32
  call void @__asan_load4_noabort(i32 %1124)
  %1125 = load i32, ptr %doorbell_index.i.i, align 8
  %shl505.i.i = shl i32 %1125, 2
  %and506.i.i = and i32 %shl505.i.i, 268435452
  %or507.i.i = or i32 %and504.i.i, %and506.i.i
  %or509.i.i = or i32 %or507.i.i, 1073741824
  br label %if.end.i116.i

if.else.i.i:                                      ; preds = %cond.end501.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %and510.i.i = and i32 %cond502.i.i, -1073741825
  br label %if.end.i116.i

if.end.i116.i:                                    ; preds = %if.else.i.i, %if.then.i.i
  %tmp.0.i.i = phi i32 [ %or509.i.i, %if.then.i.i ], [ %and510.i.i, %if.else.i.i ]
  %1126 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1126)
  %1127 = load i32, ptr %virt, align 8
  %and514.i.i = and i32 %1127, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and514.i.i)
  %tobool515.not.i.i = icmp eq i32 %and514.i.i, 0
  br i1 %tobool515.not.i.i, label %if.end.i116.i.cond.false537.i.i_crit_edge, label %land.lhs.true516.i.i

if.end.i116.i.cond.false537.i.i_crit_edge:        ; preds = %if.end.i116.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false537.i.i

land.lhs.true516.i.i:                             ; preds = %if.end.i116.i
  %1128 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1128)
  %1129 = load ptr, ptr %funcs.i455.i, align 4
  %tobool520.not.i.i = icmp eq ptr %1129, null
  br i1 %tobool520.not.i.i, label %land.lhs.true516.i.i.cond.false537.i.i_crit_edge, label %land.lhs.true521.i.i

land.lhs.true516.i.i.cond.false537.i.i_crit_edge: ; preds = %land.lhs.true516.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false537.i.i

land.lhs.true521.i.i:                             ; preds = %land.lhs.true516.i.i
  %sriov_wreg525.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1129, i32 0, i32 12
  %1130 = ptrtoint ptr %sriov_wreg525.i.i to i32
  call void @__asan_load4_noabort(i32 %1130)
  %1131 = load ptr, ptr %sriov_wreg525.i.i, align 4
  %tobool526.not.i.i = icmp eq ptr %1131, null
  br i1 %tobool526.not.i.i, label %land.lhs.true521.i.i.cond.false537.i.i_crit_edge, label %cond.true527.i.i

land.lhs.true521.i.i.cond.false537.i.i_crit_edge: ; preds = %land.lhs.true521.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false537.i.i

cond.true527.i.i:                                 ; preds = %land.lhs.true521.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1132 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1132)
  %1133 = load ptr, ptr %arrayidx.i456.i, align 8
  %1134 = ptrtoint ptr %1133 to i32
  call void @__asan_load4_noabort(i32 %1134)
  %1135 = load i32, ptr %1133, align 4
  %add536.i.i = add i32 %1135, 4185
  call void %1131(ptr noundef %handle, i32 noundef %add536.i.i, i32 noundef %tmp.0.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end543.i.i

cond.false537.i.i:                                ; preds = %land.lhs.true521.i.i.cond.false537.i.i_crit_edge, %land.lhs.true516.i.i.cond.false537.i.i_crit_edge, %if.end.i116.i.cond.false537.i.i_crit_edge
  %1136 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1136)
  %1137 = load ptr, ptr %arrayidx.i456.i, align 8
  %1138 = ptrtoint ptr %1137 to i32
  call void @__asan_load4_noabort(i32 %1138)
  %1139 = load i32, ptr %1137, align 4
  %add542.i.i = add i32 %1139, 4185
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add542.i.i, i32 noundef %tmp.0.i.i, i32 noundef 0) #15
  br label %cond.end543.i.i

cond.end543.i.i:                                  ; preds = %cond.false537.i.i, %cond.true527.i.i
  %doorbell_index544.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 23
  %1140 = ptrtoint ptr %doorbell_index544.i.i to i32
  call void @__asan_load4_noabort(i32 %1140)
  %1141 = load i32, ptr %doorbell_index544.i.i, align 8
  %shl545.i.i = shl i32 %1141, 2
  %and546.i.i = and i32 %shl545.i.i, 268435452
  %1142 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1142)
  %1143 = load i32, ptr %virt, align 8
  %and550.i.i = and i32 %1143, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and550.i.i)
  %tobool551.not.i.i = icmp eq i32 %and550.i.i, 0
  br i1 %tobool551.not.i.i, label %cond.end543.i.i.cond.false573.i.i_crit_edge, label %land.lhs.true552.i.i

cond.end543.i.i.cond.false573.i.i_crit_edge:      ; preds = %cond.end543.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false573.i.i

land.lhs.true552.i.i:                             ; preds = %cond.end543.i.i
  %1144 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1144)
  %1145 = load ptr, ptr %funcs.i455.i, align 4
  %tobool556.not.i.i = icmp eq ptr %1145, null
  br i1 %tobool556.not.i.i, label %land.lhs.true552.i.i.cond.false573.i.i_crit_edge, label %land.lhs.true557.i.i

land.lhs.true552.i.i.cond.false573.i.i_crit_edge: ; preds = %land.lhs.true552.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false573.i.i

land.lhs.true557.i.i:                             ; preds = %land.lhs.true552.i.i
  %sriov_wreg561.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1145, i32 0, i32 12
  %1146 = ptrtoint ptr %sriov_wreg561.i.i to i32
  call void @__asan_load4_noabort(i32 %1146)
  %1147 = load ptr, ptr %sriov_wreg561.i.i, align 4
  %tobool562.not.i.i = icmp eq ptr %1147, null
  br i1 %tobool562.not.i.i, label %land.lhs.true557.i.i.cond.false573.i.i_crit_edge, label %cond.true563.i.i

land.lhs.true557.i.i.cond.false573.i.i_crit_edge: ; preds = %land.lhs.true557.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false573.i.i

cond.true563.i.i:                                 ; preds = %land.lhs.true557.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1148 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1148)
  %1149 = load ptr, ptr %arrayidx.i456.i, align 8
  %1150 = ptrtoint ptr %1149 to i32
  call void @__asan_load4_noabort(i32 %1150)
  %1151 = load i32, ptr %1149, align 4
  %add572.i.i = add i32 %1151, 4186
  call void %1147(ptr noundef %handle, i32 noundef %add572.i.i, i32 noundef %and546.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end579.i.i

cond.false573.i.i:                                ; preds = %land.lhs.true557.i.i.cond.false573.i.i_crit_edge, %land.lhs.true552.i.i.cond.false573.i.i_crit_edge, %cond.end543.i.i.cond.false573.i.i_crit_edge
  %1152 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1152)
  %1153 = load ptr, ptr %arrayidx.i456.i, align 8
  %1154 = ptrtoint ptr %1153 to i32
  call void @__asan_load4_noabort(i32 %1154)
  %1155 = load i32, ptr %1153, align 4
  %add578.i.i = add i32 %1155, 4186
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add578.i.i, i32 noundef %and546.i.i, i32 noundef 0) #15
  br label %cond.end579.i.i

cond.end579.i.i:                                  ; preds = %cond.false573.i.i, %cond.true563.i.i
  %1156 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1156)
  %1157 = load i32, ptr %virt, align 8
  %and582.i.i = and i32 %1157, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and582.i.i)
  %tobool583.not.i.i = icmp eq i32 %and582.i.i, 0
  br i1 %tobool583.not.i.i, label %cond.end579.i.i.cond.false605.i.i_crit_edge, label %land.lhs.true584.i.i

cond.end579.i.i.cond.false605.i.i_crit_edge:      ; preds = %cond.end579.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false605.i.i

land.lhs.true584.i.i:                             ; preds = %cond.end579.i.i
  %1158 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1158)
  %1159 = load ptr, ptr %funcs.i455.i, align 4
  %tobool588.not.i.i = icmp eq ptr %1159, null
  br i1 %tobool588.not.i.i, label %land.lhs.true584.i.i.cond.false605.i.i_crit_edge, label %land.lhs.true589.i.i

land.lhs.true584.i.i.cond.false605.i.i_crit_edge: ; preds = %land.lhs.true584.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false605.i.i

land.lhs.true589.i.i:                             ; preds = %land.lhs.true584.i.i
  %sriov_wreg593.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1159, i32 0, i32 12
  %1160 = ptrtoint ptr %sriov_wreg593.i.i to i32
  call void @__asan_load4_noabort(i32 %1160)
  %1161 = load ptr, ptr %sriov_wreg593.i.i, align 4
  %tobool594.not.i.i = icmp eq ptr %1161, null
  br i1 %tobool594.not.i.i, label %land.lhs.true589.i.i.cond.false605.i.i_crit_edge, label %cond.true595.i.i

land.lhs.true589.i.i.cond.false605.i.i_crit_edge: ; preds = %land.lhs.true589.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false605.i.i

cond.true595.i.i:                                 ; preds = %land.lhs.true589.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1162 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1162)
  %1163 = load ptr, ptr %arrayidx.i456.i, align 8
  %1164 = ptrtoint ptr %1163 to i32
  call void @__asan_load4_noabort(i32 %1164)
  %1165 = load i32, ptr %1163, align 4
  %add604.i.i = add i32 %1165, 4187
  call void %1161(ptr noundef %handle, i32 noundef %add604.i.i, i32 noundef 268435452, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end611.i.i

cond.false605.i.i:                                ; preds = %land.lhs.true589.i.i.cond.false605.i.i_crit_edge, %land.lhs.true584.i.i.cond.false605.i.i_crit_edge, %cond.end579.i.i.cond.false605.i.i_crit_edge
  %1166 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1166)
  %1167 = load ptr, ptr %arrayidx.i456.i, align 8
  %1168 = ptrtoint ptr %1167 to i32
  call void @__asan_load4_noabort(i32 %1168)
  %1169 = load i32, ptr %1167, align 4
  %add610.i.i = add i32 %1169, 4187
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add610.i.i, i32 noundef 268435452, i32 noundef 0) #15
  br label %cond.end611.i.i

cond.end611.i.i:                                  ; preds = %cond.false605.i.i, %cond.true595.i.i
  %gfx_ring.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36
  %1170 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1170)
  %1171 = load i32, ptr %virt, align 8
  %and.i.i117.i = and i32 %1171, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i117.i)
  %tobool.not.i.i118.i = icmp eq i32 %and.i.i117.i, 0
  br i1 %tobool.not.i.i118.i, label %cond.end611.i.i.cond.false.i6.i.i_crit_edge, label %land.lhs.true.i.i120.i

cond.end611.i.i.cond.false.i6.i.i_crit_edge:      ; preds = %cond.end611.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i6.i.i

land.lhs.true.i.i120.i:                           ; preds = %cond.end611.i.i
  %1172 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1172)
  %1173 = load ptr, ptr %funcs.i455.i, align 4
  %tobool2.not.i.i119.i = icmp eq ptr %1173, null
  br i1 %tobool2.not.i.i119.i, label %land.lhs.true.i.i120.i.cond.false.i6.i.i_crit_edge, label %land.lhs.true3.i.i.i

land.lhs.true.i.i120.i.cond.false.i6.i.i_crit_edge: ; preds = %land.lhs.true.i.i120.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i6.i.i

land.lhs.true3.i.i.i:                             ; preds = %land.lhs.true.i.i120.i
  %sriov_wreg.i.i.i108 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1173, i32 0, i32 12
  %1174 = ptrtoint ptr %sriov_wreg.i.i.i108 to i32
  call void @__asan_load4_noabort(i32 %1174)
  %1175 = load ptr, ptr %sriov_wreg.i.i.i108, align 4
  %tobool7.not.i.i121.i = icmp eq ptr %1175, null
  br i1 %tobool7.not.i.i121.i, label %land.lhs.true3.i.i.i.cond.false.i6.i.i_crit_edge, label %cond.true.i5.i.i

land.lhs.true3.i.i.i.cond.false.i6.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i6.i.i

cond.true.i5.i.i:                                 ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1176 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1176)
  %1177 = load ptr, ptr %arrayidx.i456.i, align 8
  %1178 = ptrtoint ptr %1177 to i32
  call void @__asan_load4_noabort(i32 %1178)
  %1179 = load i32, ptr %1177, align 4
  %add.i3.i.i = add i32 %1179, 4270
  %max_hw_contexts.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 8
  %1180 = ptrtoint ptr %max_hw_contexts.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1180)
  %1181 = load i32, ptr %max_hw_contexts.i.i.i, align 8
  %sub.i4.i.i = add i32 %1181, -1
  call void %1175(ptr noundef %handle, i32 noundef %add.i3.i.i, i32 noundef %sub.i4.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i.i.i109

cond.false.i6.i.i:                                ; preds = %land.lhs.true3.i.i.i.cond.false.i6.i.i_crit_edge, %land.lhs.true.i.i120.i.cond.false.i6.i.i_crit_edge, %cond.end611.i.i.cond.false.i6.i.i_crit_edge
  %1182 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1182)
  %1183 = load ptr, ptr %arrayidx.i456.i, align 8
  %1184 = ptrtoint ptr %1183 to i32
  call void @__asan_load4_noabort(i32 %1184)
  %1185 = load i32, ptr %1183, align 4
  %add20.i.i.i = add i32 %1185, 4270
  %max_hw_contexts23.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 1, i32 8
  %1186 = ptrtoint ptr %max_hw_contexts23.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1186)
  %1187 = load i32, ptr %max_hw_contexts23.i.i.i, align 8
  %sub24.i.i.i = add i32 %1187, -1
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add20.i.i.i, i32 noundef %sub24.i.i.i, i32 noundef 0) #15
  br label %cond.end.i.i.i109

cond.end.i.i.i109:                                ; preds = %cond.false.i6.i.i, %cond.true.i5.i.i
  %1188 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1188)
  %1189 = load i32, ptr %virt, align 8
  %and27.i.i.i = and i32 %1189, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i.i.i)
  %tobool28.not.i.i.i = icmp eq i32 %and27.i.i.i, 0
  br i1 %tobool28.not.i.i.i, label %cond.end.i.i.i109.cond.false50.i.i.i_crit_edge, label %land.lhs.true29.i.i.i

cond.end.i.i.i109.cond.false50.i.i.i_crit_edge:   ; preds = %cond.end.i.i.i109
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50.i.i.i

land.lhs.true29.i.i.i:                            ; preds = %cond.end.i.i.i109
  %1190 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1190)
  %1191 = load ptr, ptr %funcs.i455.i, align 4
  %tobool33.not.i.i.i110 = icmp eq ptr %1191, null
  br i1 %tobool33.not.i.i.i110, label %land.lhs.true29.i.i.i.cond.false50.i.i.i_crit_edge, label %land.lhs.true34.i.i.i

land.lhs.true29.i.i.i.cond.false50.i.i.i_crit_edge: ; preds = %land.lhs.true29.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50.i.i.i

land.lhs.true34.i.i.i:                            ; preds = %land.lhs.true29.i.i.i
  %sriov_wreg38.i.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1191, i32 0, i32 12
  %1192 = ptrtoint ptr %sriov_wreg38.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1192)
  %1193 = load ptr, ptr %sriov_wreg38.i.i.i, align 4
  %tobool39.not.i.i.i = icmp eq ptr %1193, null
  br i1 %tobool39.not.i.i.i, label %land.lhs.true34.i.i.i.cond.false50.i.i.i_crit_edge, label %cond.true40.i.i.i

land.lhs.true34.i.i.i.cond.false50.i.i.i_crit_edge: ; preds = %land.lhs.true34.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50.i.i.i

cond.true40.i.i.i:                                ; preds = %land.lhs.true34.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1194 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1194)
  %1195 = load ptr, ptr %arrayidx.i456.i, align 8
  %1196 = ptrtoint ptr %1195 to i32
  call void @__asan_load4_noabort(i32 %1196)
  %1197 = load i32, ptr %1195, align 4
  %add49.i.i.i = add i32 %1197, 4171
  call void %1193(ptr noundef %handle, i32 noundef %add49.i.i.i, i32 noundef 1, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end56.i.i.i

cond.false50.i.i.i:                               ; preds = %land.lhs.true34.i.i.i.cond.false50.i.i.i_crit_edge, %land.lhs.true29.i.i.i.cond.false50.i.i.i_crit_edge, %cond.end.i.i.i109.cond.false50.i.i.i_crit_edge
  %1198 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1198)
  %1199 = load ptr, ptr %arrayidx.i456.i, align 8
  %1200 = ptrtoint ptr %1199 to i32
  call void @__asan_load4_noabort(i32 %1200)
  %1201 = load i32, ptr %1199, align 4
  %add55.i.i.i = add i32 %1201, 4171
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add55.i.i.i, i32 noundef 1, i32 noundef 0) #15
  br label %cond.end56.i.i.i

cond.end56.i.i.i:                                 ; preds = %cond.false50.i.i.i, %cond.true40.i.i.i
  call fastcc void @gfx_v9_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext true) #15
  %call59.i.i.i = call i32 @amdgpu_ring_alloc(ptr noundef %gfx_ring.i.i.i, i32 noundef 911) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59.i.i.i)
  %tobool60.not.i.i.i = icmp eq i32 %call59.i.i.i, 0
  br i1 %tobool60.not.i.i.i, label %if.end.i.i124.i, label %if.then.i.i122.i

if.then.i.i122.i:                                 ; preds = %cond.end56.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.386, i32 noundef %call59.i.i.i) #15
  br label %gfx_v9_0_cp_gfx_resume.exit.i

if.end.i.i124.i:                                  ; preds = %cond.end56.i.i.i
  %count_dw.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 11
  %1202 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1202)
  %1203 = load i32, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1203)
  %cmp.i.i.i123.i = icmp slt i32 %1203, 1
  br i1 %cmp.i.i.i123.i, label %if.then.i.i.i.i, label %if.end.i.i124.i.amdgpu_ring_write.exit.i.i.i_crit_edge

if.end.i.i124.i.amdgpu_ring_write.exit.i.i.i_crit_edge: ; preds = %if.end.i.i124.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.end.i.i124.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit.i.i.i

amdgpu_ring_write.exit.i.i.i:                     ; preds = %if.then.i.i.i.i, %if.end.i.i124.i.amdgpu_ring_write.exit.i.i.i_crit_edge
  %ring1.i.i.i125.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 5
  %1204 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1204)
  %1205 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1206 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1206)
  %1207 = load i64, ptr %wptr.i.i, align 8
  %inc.i.i.i126.i = add i64 %1207, 1
  store i64 %inc.i.i.i126.i, ptr %wptr.i.i, align 8
  %buf_mask.i.i.i127.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 14
  %1208 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1208)
  %1209 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1210 = trunc i64 %1207 to i32
  %idxprom.i.i.i.i = and i32 %1209, %1210
  %arrayidx.i.i.i128.i = getelementptr i32, ptr %1205, i32 %idxprom.i.i.i.i
  %1211 = ptrtoint ptr %arrayidx.i.i.i128.i to i32
  call void @__asan_store4_noabort(i32 %1211)
  store volatile i32 -1073722880, ptr %arrayidx.i.i.i128.i, align 4
  %ptr_mask.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 13
  %1212 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1212)
  %1213 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1214 = load i64, ptr %wptr.i.i, align 8
  %and3.i.i.i.i = and i64 %1214, %1213
  store i64 %and3.i.i.i.i, ptr %wptr.i.i, align 8
  %1215 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1215)
  %1216 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i.i.i.i = add i32 %1216, -1
  store i32 %dec.i.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i.i.i.i)
  %cmp.i2.i.i.i = icmp slt i32 %dec.i.i.i.i, 1
  br i1 %cmp.i2.i.i.i, label %if.then.i3.i.i.i, label %amdgpu_ring_write.exit.i.i.i.amdgpu_ring_write.exit13.i.i.i_crit_edge

amdgpu_ring_write.exit.i.i.i.amdgpu_ring_write.exit13.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit13.i.i.i

if.then.i3.i.i.i:                                 ; preds = %amdgpu_ring_write.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit13.i.i.i

amdgpu_ring_write.exit13.i.i.i:                   ; preds = %if.then.i3.i.i.i, %amdgpu_ring_write.exit.i.i.i.amdgpu_ring_write.exit13.i.i.i_crit_edge
  %1217 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1217)
  %1218 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1219 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1219)
  %1220 = load i64, ptr %wptr.i.i, align 8
  %inc.i6.i.i.i = add i64 %1220, 1
  store i64 %inc.i6.i.i.i, ptr %wptr.i.i, align 8
  %1221 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1221)
  %1222 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1223 = trunc i64 %1220 to i32
  %idxprom.i8.i.i.i = and i32 %1222, %1223
  %arrayidx.i9.i.i.i = getelementptr i32, ptr %1218, i32 %idxprom.i8.i.i.i
  %1224 = ptrtoint ptr %arrayidx.i9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1224)
  store volatile i32 536870912, ptr %arrayidx.i9.i.i.i, align 4
  %1225 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1225)
  %1226 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1227 = load i64, ptr %wptr.i.i, align 8
  %and3.i11.i.i.i = and i64 %1227, %1226
  store i64 %and3.i11.i.i.i, ptr %wptr.i.i, align 8
  %1228 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1228)
  %1229 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i12.i.i.i = add i32 %1229, -1
  store i32 %dec.i12.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i12.i.i.i)
  %cmp.i15.i.i.i = icmp slt i32 %dec.i12.i.i.i, 1
  br i1 %cmp.i15.i.i.i, label %if.then.i16.i.i.i, label %amdgpu_ring_write.exit13.i.i.i.amdgpu_ring_write.exit26.i.i.i_crit_edge

amdgpu_ring_write.exit13.i.i.i.amdgpu_ring_write.exit26.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit13.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit26.i.i.i

if.then.i16.i.i.i:                                ; preds = %amdgpu_ring_write.exit13.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit26.i.i.i

amdgpu_ring_write.exit26.i.i.i:                   ; preds = %if.then.i16.i.i.i, %amdgpu_ring_write.exit13.i.i.i.amdgpu_ring_write.exit26.i.i.i_crit_edge
  %1230 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1230)
  %1231 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1232 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1232)
  %1233 = load i64, ptr %wptr.i.i, align 8
  %inc.i19.i.i.i = add i64 %1233, 1
  store i64 %inc.i19.i.i.i, ptr %wptr.i.i, align 8
  %1234 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1234)
  %1235 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1236 = trunc i64 %1233 to i32
  %idxprom.i21.i.i.i = and i32 %1235, %1236
  %arrayidx.i22.i.i.i = getelementptr i32, ptr %1231, i32 %idxprom.i21.i.i.i
  %1237 = ptrtoint ptr %arrayidx.i22.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1237)
  store volatile i32 -1073666048, ptr %arrayidx.i22.i.i.i, align 4
  %1238 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1238)
  %1239 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1240 = load i64, ptr %wptr.i.i, align 8
  %and3.i24.i.i.i = and i64 %1240, %1239
  store i64 %and3.i24.i.i.i, ptr %wptr.i.i, align 8
  %1241 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1241)
  %1242 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i25.i.i.i = add i32 %1242, -1
  store i32 %dec.i25.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i25.i.i.i)
  %cmp.i28.i.i.i = icmp slt i32 %dec.i25.i.i.i, 1
  br i1 %cmp.i28.i.i.i, label %if.then.i29.i.i.i, label %amdgpu_ring_write.exit26.i.i.i.amdgpu_ring_write.exit39.i.i.i_crit_edge

amdgpu_ring_write.exit26.i.i.i.amdgpu_ring_write.exit39.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit26.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit39.i.i.i

if.then.i29.i.i.i:                                ; preds = %amdgpu_ring_write.exit26.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit39.i.i.i

amdgpu_ring_write.exit39.i.i.i:                   ; preds = %if.then.i29.i.i.i, %amdgpu_ring_write.exit26.i.i.i.amdgpu_ring_write.exit39.i.i.i_crit_edge
  %1243 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1243)
  %1244 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1245 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1245)
  %1246 = load i64, ptr %wptr.i.i, align 8
  %inc.i32.i.i.i = add i64 %1246, 1
  store i64 %inc.i32.i.i.i, ptr %wptr.i.i, align 8
  %1247 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1247)
  %1248 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1249 = trunc i64 %1246 to i32
  %idxprom.i34.i.i.i = and i32 %1248, %1249
  %arrayidx.i35.i.i.i = getelementptr i32, ptr %1244, i32 %idxprom.i34.i.i.i
  %1250 = ptrtoint ptr %arrayidx.i35.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1250)
  store volatile i32 -2147483648, ptr %arrayidx.i35.i.i.i, align 4
  %1251 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1251)
  %1252 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1253 = load i64, ptr %wptr.i.i, align 8
  %and3.i37.i.i.i = and i64 %1253, %1252
  store i64 %and3.i37.i.i.i, ptr %wptr.i.i, align 8
  %1254 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1254)
  %1255 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i38.i.i.i = add i32 %1255, -1
  store i32 %dec.i38.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i38.i.i.i)
  %cmp.i41.i.i.i = icmp slt i32 %dec.i38.i.i.i, 1
  br i1 %cmp.i41.i.i.i, label %if.then.i42.i.i.i, label %amdgpu_ring_write.exit39.i.i.i.for.body64.lr.ph.i.i.i_crit_edge

amdgpu_ring_write.exit39.i.i.i.for.body64.lr.ph.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit39.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body64.lr.ph.i.i.i

if.then.i42.i.i.i:                                ; preds = %amdgpu_ring_write.exit39.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %for.body64.lr.ph.i.i.i

for.body64.lr.ph.i.i.i:                           ; preds = %if.then.i42.i.i.i, %amdgpu_ring_write.exit39.i.i.i.for.body64.lr.ph.i.i.i_crit_edge
  %1256 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1256)
  %1257 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1258 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1258)
  %1259 = load i64, ptr %wptr.i.i, align 8
  %inc.i45.i.i.i = add i64 %1259, 1
  store i64 %inc.i45.i.i.i, ptr %wptr.i.i, align 8
  %1260 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1260)
  %1261 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1262 = trunc i64 %1259 to i32
  %idxprom.i47.i.i.i = and i32 %1261, %1262
  %arrayidx.i48.i.i.i = getelementptr i32, ptr %1257, i32 %idxprom.i47.i.i.i
  %1263 = ptrtoint ptr %arrayidx.i48.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1263)
  store volatile i32 -2147483648, ptr %arrayidx.i48.i.i.i, align 4
  %1264 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1264)
  %1265 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1266 = load i64, ptr %wptr.i.i, align 8
  %and3.i50.i.i.i = and i64 %1266, %1265
  store i64 %and3.i50.i.i.i, ptr %wptr.i.i, align 8
  %1267 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1267)
  %1268 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i51.i.i.i = add i32 %1268, -1
  store i32 %dec.i51.i.i.i, ptr %count_dw.i.i.i.i, align 8
  br label %if.then66.i.i.i

if.then66.i.i.i:                                  ; preds = %for.inc76.i.i.i.if.then66.i.i.i_crit_edge, %for.body64.lr.ph.i.i.i
  %1269 = phi i32 [ %dec.i51.i.i.i, %for.body64.lr.ph.i.i.i ], [ %1322, %for.inc76.i.i.i.if.then66.i.i.i_crit_edge ]
  %ext.0238.i.i.i = phi ptr [ @gfx9_SECT_CONTEXT_defs, %for.body64.lr.ph.i.i.i ], [ %incdec.ptr.i.i.i, %for.inc76.i.i.i.if.then66.i.i.i_crit_edge ]
  %reg_count.i.i.i = getelementptr inbounds %struct.cs_extent_def, ptr %ext.0238.i.i.i, i32 0, i32 2
  %1270 = ptrtoint ptr %reg_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1270)
  %1271 = load i32, ptr %reg_count.i.i.i, align 4
  %and67.i.i.i = shl i32 %1271, 16
  %or.i.i.i111 = or i32 %and67.i.i.i, -1073714944
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1269)
  %cmp.i54.i.i.i = icmp slt i32 %1269, 1
  br i1 %cmp.i54.i.i.i, label %if.then.i55.i.i.i, label %if.then66.i.i.i.amdgpu_ring_write.exit65.i.i.i_crit_edge

if.then66.i.i.i.amdgpu_ring_write.exit65.i.i.i_crit_edge: ; preds = %if.then66.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit65.i.i.i

if.then.i55.i.i.i:                                ; preds = %if.then66.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit65.i.i.i

amdgpu_ring_write.exit65.i.i.i:                   ; preds = %if.then.i55.i.i.i, %if.then66.i.i.i.amdgpu_ring_write.exit65.i.i.i_crit_edge
  %1272 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1272)
  %1273 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1274 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1274)
  %1275 = load i64, ptr %wptr.i.i, align 8
  %inc.i58.i.i.i = add i64 %1275, 1
  store i64 %inc.i58.i.i.i, ptr %wptr.i.i, align 8
  %1276 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1276)
  %1277 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1278 = trunc i64 %1275 to i32
  %idxprom.i60.i.i.i = and i32 %1277, %1278
  %arrayidx.i61.i.i.i = getelementptr i32, ptr %1273, i32 %idxprom.i60.i.i.i
  %1279 = ptrtoint ptr %arrayidx.i61.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1279)
  store volatile i32 %or.i.i.i111, ptr %arrayidx.i61.i.i.i, align 4
  %1280 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1280)
  %1281 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1282 = load i64, ptr %wptr.i.i, align 8
  %and3.i63.i.i.i = and i64 %1282, %1281
  store i64 %and3.i63.i.i.i, ptr %wptr.i.i, align 8
  %1283 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1283)
  %1284 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i64.i.i.i = add i32 %1284, -1
  store i32 %dec.i64.i.i.i, ptr %count_dw.i.i.i.i, align 8
  %reg_index.i.i.i = getelementptr inbounds %struct.cs_extent_def, ptr %ext.0238.i.i.i, i32 0, i32 1
  %1285 = ptrtoint ptr %reg_index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1285)
  %1286 = load i32, ptr %reg_index.i.i.i, align 4
  %sub68.i.i.i = add i32 %1286, -40960
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i64.i.i.i)
  %cmp.i67.i.i.i = icmp slt i32 %dec.i64.i.i.i, 1
  br i1 %cmp.i67.i.i.i, label %if.then.i68.i.i.i, label %amdgpu_ring_write.exit65.i.i.i.amdgpu_ring_write.exit78.i.i.i_crit_edge

amdgpu_ring_write.exit65.i.i.i.amdgpu_ring_write.exit78.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit65.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit78.i.i.i

if.then.i68.i.i.i:                                ; preds = %amdgpu_ring_write.exit65.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit78.i.i.i

amdgpu_ring_write.exit78.i.i.i:                   ; preds = %if.then.i68.i.i.i, %amdgpu_ring_write.exit65.i.i.i.amdgpu_ring_write.exit78.i.i.i_crit_edge
  %1287 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1287)
  %1288 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1289 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1289)
  %1290 = load i64, ptr %wptr.i.i, align 8
  %inc.i71.i.i.i = add i64 %1290, 1
  store i64 %inc.i71.i.i.i, ptr %wptr.i.i, align 8
  %1291 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1291)
  %1292 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1293 = trunc i64 %1290 to i32
  %idxprom.i73.i.i.i = and i32 %1292, %1293
  %arrayidx.i74.i.i.i = getelementptr i32, ptr %1288, i32 %idxprom.i73.i.i.i
  %1294 = ptrtoint ptr %arrayidx.i74.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1294)
  store volatile i32 %sub68.i.i.i, ptr %arrayidx.i74.i.i.i, align 4
  %1295 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1295)
  %1296 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1297 = load i64, ptr %wptr.i.i, align 8
  %and3.i76.i.i.i = and i64 %1297, %1296
  store i64 %and3.i76.i.i.i, ptr %wptr.i.i, align 8
  %1298 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1298)
  %1299 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i77.i.i.i = add i32 %1299, -1
  store i32 %dec.i77.i.i.i, ptr %count_dw.i.i.i.i, align 8
  %1300 = ptrtoint ptr %reg_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1300)
  %1301 = load i32, ptr %reg_count.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1301)
  %cmp71235.not.i.i.i = icmp eq i32 %1301, 0
  br i1 %cmp71235.not.i.i.i, label %amdgpu_ring_write.exit78.i.i.i.for.inc76.i.i.i_crit_edge, label %amdgpu_ring_write.exit78.i.i.i.for.body72.i.i.i_crit_edge

amdgpu_ring_write.exit78.i.i.i.for.body72.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit78.i.i.i
  br label %for.body72.i.i.i

amdgpu_ring_write.exit78.i.i.i.for.inc76.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit78.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc76.i.i.i

for.body72.i.i.i:                                 ; preds = %amdgpu_ring_write.exit91.i.i.i.for.body72.i.i.i_crit_edge, %amdgpu_ring_write.exit78.i.i.i.for.body72.i.i.i_crit_edge
  %1302 = phi i32 [ %dec.i90.i.i.i, %amdgpu_ring_write.exit91.i.i.i.for.body72.i.i.i_crit_edge ], [ %dec.i77.i.i.i, %amdgpu_ring_write.exit78.i.i.i.for.body72.i.i.i_crit_edge ]
  %i.0236.i.i.i = phi i32 [ %inc.i.i.i, %amdgpu_ring_write.exit91.i.i.i.for.body72.i.i.i_crit_edge ], [ 0, %amdgpu_ring_write.exit78.i.i.i.for.body72.i.i.i_crit_edge ]
  %1303 = ptrtoint ptr %ext.0238.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1303)
  %1304 = load ptr, ptr %ext.0238.i.i.i, align 4
  %arrayidx74.i.i.i = getelementptr i32, ptr %1304, i32 %i.0236.i.i.i
  %1305 = ptrtoint ptr %arrayidx74.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1305)
  %1306 = load i32, ptr %arrayidx74.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1302)
  %cmp.i80.i.i.i = icmp slt i32 %1302, 1
  br i1 %cmp.i80.i.i.i, label %if.then.i81.i.i.i, label %for.body72.i.i.i.amdgpu_ring_write.exit91.i.i.i_crit_edge

for.body72.i.i.i.amdgpu_ring_write.exit91.i.i.i_crit_edge: ; preds = %for.body72.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit91.i.i.i

if.then.i81.i.i.i:                                ; preds = %for.body72.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit91.i.i.i

amdgpu_ring_write.exit91.i.i.i:                   ; preds = %if.then.i81.i.i.i, %for.body72.i.i.i.amdgpu_ring_write.exit91.i.i.i_crit_edge
  %1307 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1307)
  %1308 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1309 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1309)
  %1310 = load i64, ptr %wptr.i.i, align 8
  %inc.i84.i.i.i = add i64 %1310, 1
  store i64 %inc.i84.i.i.i, ptr %wptr.i.i, align 8
  %1311 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1311)
  %1312 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1313 = trunc i64 %1310 to i32
  %idxprom.i86.i.i.i = and i32 %1312, %1313
  %arrayidx.i87.i.i.i = getelementptr i32, ptr %1308, i32 %idxprom.i86.i.i.i
  %1314 = ptrtoint ptr %arrayidx.i87.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1314)
  store volatile i32 %1306, ptr %arrayidx.i87.i.i.i, align 4
  %1315 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1315)
  %1316 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1317 = load i64, ptr %wptr.i.i, align 8
  %and3.i89.i.i.i = and i64 %1317, %1316
  store i64 %and3.i89.i.i.i, ptr %wptr.i.i, align 8
  %1318 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1318)
  %1319 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i90.i.i.i = add i32 %1319, -1
  store i32 %dec.i90.i.i.i, ptr %count_dw.i.i.i.i, align 8
  %inc.i.i.i = add nuw i32 %i.0236.i.i.i, 1
  %1320 = ptrtoint ptr %reg_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1320)
  %1321 = load i32, ptr %reg_count.i.i.i, align 4
  %cmp71.i.i.i = icmp ult i32 %inc.i.i.i, %1321
  br i1 %cmp71.i.i.i, label %amdgpu_ring_write.exit91.i.i.i.for.body72.i.i.i_crit_edge, label %amdgpu_ring_write.exit91.i.i.i.for.inc76.i.i.i_crit_edge

amdgpu_ring_write.exit91.i.i.i.for.inc76.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit91.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc76.i.i.i

amdgpu_ring_write.exit91.i.i.i.for.body72.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit91.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body72.i.i.i

for.inc76.i.i.i:                                  ; preds = %amdgpu_ring_write.exit91.i.i.i.for.inc76.i.i.i_crit_edge, %amdgpu_ring_write.exit78.i.i.i.for.inc76.i.i.i_crit_edge
  %1322 = phi i32 [ %dec.i77.i.i.i, %amdgpu_ring_write.exit78.i.i.i.for.inc76.i.i.i_crit_edge ], [ %dec.i90.i.i.i, %amdgpu_ring_write.exit91.i.i.i.for.inc76.i.i.i_crit_edge ]
  %incdec.ptr.i.i.i = getelementptr %struct.cs_extent_def, ptr %ext.0238.i.i.i, i32 1
  %1323 = ptrtoint ptr %incdec.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1323)
  %1324 = load ptr, ptr %incdec.ptr.i.i.i, align 4
  %cmp63.not.i.i.i = icmp eq ptr %1324, null
  br i1 %cmp63.not.i.i.i, label %for.inc78.i.i.i, label %for.inc76.i.i.i.if.then66.i.i.i_crit_edge

for.inc76.i.i.i.if.then66.i.i.i_crit_edge:        ; preds = %for.inc76.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then66.i.i.i

for.inc78.i.i.i:                                  ; preds = %for.inc76.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1322)
  %cmp.i93.i.i.i = icmp slt i32 %1322, 1
  br i1 %cmp.i93.i.i.i, label %if.then.i94.i.i.i, label %for.inc78.i.i.i.amdgpu_ring_write.exit104.i.i.i_crit_edge

for.inc78.i.i.i.amdgpu_ring_write.exit104.i.i.i_crit_edge: ; preds = %for.inc78.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit104.i.i.i

if.then.i94.i.i.i:                                ; preds = %for.inc78.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit104.i.i.i

amdgpu_ring_write.exit104.i.i.i:                  ; preds = %if.then.i94.i.i.i, %for.inc78.i.i.i.amdgpu_ring_write.exit104.i.i.i_crit_edge
  %1325 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1325)
  %1326 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1327 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1327)
  %1328 = load i64, ptr %wptr.i.i, align 8
  %inc.i97.i.i.i = add i64 %1328, 1
  store i64 %inc.i97.i.i.i, ptr %wptr.i.i, align 8
  %1329 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1329)
  %1330 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1331 = trunc i64 %1328 to i32
  %idxprom.i99.i.i.i = and i32 %1330, %1331
  %arrayidx.i100.i.i.i = getelementptr i32, ptr %1326, i32 %idxprom.i99.i.i.i
  %1332 = ptrtoint ptr %arrayidx.i100.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1332)
  store volatile i32 -1073722880, ptr %arrayidx.i100.i.i.i, align 4
  %1333 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1333)
  %1334 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1335 = load i64, ptr %wptr.i.i, align 8
  %and3.i102.i.i.i = and i64 %1335, %1334
  store i64 %and3.i102.i.i.i, ptr %wptr.i.i, align 8
  %1336 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1336)
  %1337 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i103.i.i.i = add i32 %1337, -1
  store i32 %dec.i103.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i103.i.i.i)
  %cmp.i106.i.i.i = icmp slt i32 %dec.i103.i.i.i, 1
  br i1 %cmp.i106.i.i.i, label %if.then.i107.i.i.i, label %amdgpu_ring_write.exit104.i.i.i.amdgpu_ring_write.exit117.i.i.i_crit_edge

amdgpu_ring_write.exit104.i.i.i.amdgpu_ring_write.exit117.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit104.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit117.i.i.i

if.then.i107.i.i.i:                               ; preds = %amdgpu_ring_write.exit104.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit117.i.i.i

amdgpu_ring_write.exit117.i.i.i:                  ; preds = %if.then.i107.i.i.i, %amdgpu_ring_write.exit104.i.i.i.amdgpu_ring_write.exit117.i.i.i_crit_edge
  %1338 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1338)
  %1339 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1340 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1340)
  %1341 = load i64, ptr %wptr.i.i, align 8
  %inc.i110.i.i.i = add i64 %1341, 1
  store i64 %inc.i110.i.i.i, ptr %wptr.i.i, align 8
  %1342 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1342)
  %1343 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1344 = trunc i64 %1341 to i32
  %idxprom.i112.i.i.i = and i32 %1343, %1344
  %arrayidx.i113.i.i.i = getelementptr i32, ptr %1339, i32 %idxprom.i112.i.i.i
  %1345 = ptrtoint ptr %arrayidx.i113.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1345)
  store volatile i32 805306368, ptr %arrayidx.i113.i.i.i, align 4
  %1346 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1346)
  %1347 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1348 = load i64, ptr %wptr.i.i, align 8
  %and3.i115.i.i.i = and i64 %1348, %1347
  store i64 %and3.i115.i.i.i, ptr %wptr.i.i, align 8
  %1349 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1349)
  %1350 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i116.i.i.i = add i32 %1350, -1
  store i32 %dec.i116.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i116.i.i.i)
  %cmp.i119.i.i.i = icmp slt i32 %dec.i116.i.i.i, 1
  br i1 %cmp.i119.i.i.i, label %if.then.i120.i.i.i, label %amdgpu_ring_write.exit117.i.i.i.amdgpu_ring_write.exit130.i.i.i_crit_edge

amdgpu_ring_write.exit117.i.i.i.amdgpu_ring_write.exit130.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit117.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit130.i.i.i

if.then.i120.i.i.i:                               ; preds = %amdgpu_ring_write.exit117.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit130.i.i.i

amdgpu_ring_write.exit130.i.i.i:                  ; preds = %if.then.i120.i.i.i, %amdgpu_ring_write.exit117.i.i.i.amdgpu_ring_write.exit130.i.i.i_crit_edge
  %1351 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1351)
  %1352 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1353 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1353)
  %1354 = load i64, ptr %wptr.i.i, align 8
  %inc.i123.i.i.i = add i64 %1354, 1
  store i64 %inc.i123.i.i.i, ptr %wptr.i.i, align 8
  %1355 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1355)
  %1356 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1357 = trunc i64 %1354 to i32
  %idxprom.i125.i.i.i = and i32 %1356, %1357
  %arrayidx.i126.i.i.i = getelementptr i32, ptr %1352, i32 %idxprom.i125.i.i.i
  %1358 = ptrtoint ptr %arrayidx.i126.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1358)
  store volatile i32 -1073737216, ptr %arrayidx.i126.i.i.i, align 4
  %1359 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1359)
  %1360 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1361 = load i64, ptr %wptr.i.i, align 8
  %and3.i128.i.i.i = and i64 %1361, %1360
  store i64 %and3.i128.i.i.i, ptr %wptr.i.i, align 8
  %1362 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1362)
  %1363 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i129.i.i.i = add i32 %1363, -1
  store i32 %dec.i129.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i129.i.i.i)
  %cmp.i132.i.i.i = icmp slt i32 %dec.i129.i.i.i, 1
  br i1 %cmp.i132.i.i.i, label %if.then.i133.i.i.i, label %amdgpu_ring_write.exit130.i.i.i.amdgpu_ring_write.exit143.i.i.i_crit_edge

amdgpu_ring_write.exit130.i.i.i.amdgpu_ring_write.exit143.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit130.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit143.i.i.i

if.then.i133.i.i.i:                               ; preds = %amdgpu_ring_write.exit130.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit143.i.i.i

amdgpu_ring_write.exit143.i.i.i:                  ; preds = %if.then.i133.i.i.i, %amdgpu_ring_write.exit130.i.i.i.amdgpu_ring_write.exit143.i.i.i_crit_edge
  %1364 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1364)
  %1365 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1366 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1366)
  %1367 = load i64, ptr %wptr.i.i, align 8
  %inc.i136.i.i.i = add i64 %1367, 1
  store i64 %inc.i136.i.i.i, ptr %wptr.i.i, align 8
  %1368 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1368)
  %1369 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1370 = trunc i64 %1367 to i32
  %idxprom.i138.i.i.i = and i32 %1369, %1370
  %arrayidx.i139.i.i.i = getelementptr i32, ptr %1365, i32 %idxprom.i138.i.i.i
  %1371 = ptrtoint ptr %arrayidx.i139.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1371)
  store volatile i32 0, ptr %arrayidx.i139.i.i.i, align 4
  %1372 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1372)
  %1373 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1374 = load i64, ptr %wptr.i.i, align 8
  %and3.i141.i.i.i = and i64 %1374, %1373
  store i64 %and3.i141.i.i.i, ptr %wptr.i.i, align 8
  %1375 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1375)
  %1376 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i142.i.i.i = add i32 %1376, -1
  store i32 %dec.i142.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i142.i.i.i)
  %cmp.i145.i.i.i = icmp slt i32 %dec.i142.i.i.i, 1
  br i1 %cmp.i145.i.i.i, label %if.then.i146.i.i.i, label %amdgpu_ring_write.exit143.i.i.i.amdgpu_ring_write.exit156.i.i.i_crit_edge

amdgpu_ring_write.exit143.i.i.i.amdgpu_ring_write.exit156.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit143.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit156.i.i.i

if.then.i146.i.i.i:                               ; preds = %amdgpu_ring_write.exit143.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit156.i.i.i

amdgpu_ring_write.exit156.i.i.i:                  ; preds = %if.then.i146.i.i.i, %amdgpu_ring_write.exit143.i.i.i.amdgpu_ring_write.exit156.i.i.i_crit_edge
  %1377 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1377)
  %1378 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1379 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1379)
  %1380 = load i64, ptr %wptr.i.i, align 8
  %inc.i149.i.i.i = add i64 %1380, 1
  store i64 %inc.i149.i.i.i, ptr %wptr.i.i, align 8
  %1381 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1381)
  %1382 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1383 = trunc i64 %1380 to i32
  %idxprom.i151.i.i.i = and i32 %1382, %1383
  %arrayidx.i152.i.i.i = getelementptr i32, ptr %1378, i32 %idxprom.i151.i.i.i
  %1384 = ptrtoint ptr %arrayidx.i152.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1384)
  store volatile i32 -1073606400, ptr %arrayidx.i152.i.i.i, align 4
  %1385 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1385)
  %1386 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1387 = load i64, ptr %wptr.i.i, align 8
  %and3.i154.i.i.i = and i64 %1387, %1386
  store i64 %and3.i154.i.i.i, ptr %wptr.i.i, align 8
  %1388 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1388)
  %1389 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i155.i.i.i = add i32 %1389, -1
  store i32 %dec.i155.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i155.i.i.i)
  %cmp.i158.i.i.i = icmp slt i32 %dec.i155.i.i.i, 1
  br i1 %cmp.i158.i.i.i, label %if.then.i159.i.i.i, label %amdgpu_ring_write.exit156.i.i.i.amdgpu_ring_write.exit169.i.i.i_crit_edge

amdgpu_ring_write.exit156.i.i.i.amdgpu_ring_write.exit169.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit156.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit169.i.i.i

if.then.i159.i.i.i:                               ; preds = %amdgpu_ring_write.exit156.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit169.i.i.i

amdgpu_ring_write.exit169.i.i.i:                  ; preds = %if.then.i159.i.i.i, %amdgpu_ring_write.exit156.i.i.i.amdgpu_ring_write.exit169.i.i.i_crit_edge
  %1390 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1390)
  %1391 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1392 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1392)
  %1393 = load i64, ptr %wptr.i.i, align 8
  %inc.i162.i.i.i = add i64 %1393, 1
  store i64 %inc.i162.i.i.i, ptr %wptr.i.i, align 8
  %1394 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1394)
  %1395 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1396 = trunc i64 %1393 to i32
  %idxprom.i164.i.i.i = and i32 %1395, %1396
  %arrayidx.i165.i.i.i = getelementptr i32, ptr %1391, i32 %idxprom.i164.i.i.i
  %1397 = ptrtoint ptr %arrayidx.i165.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1397)
  store volatile i32 3, ptr %arrayidx.i165.i.i.i, align 4
  %1398 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1398)
  %1399 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1400 = load i64, ptr %wptr.i.i, align 8
  %and3.i167.i.i.i = and i64 %1400, %1399
  store i64 %and3.i167.i.i.i, ptr %wptr.i.i, align 8
  %1401 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1401)
  %1402 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i168.i.i.i = add i32 %1402, -1
  store i32 %dec.i168.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i168.i.i.i)
  %cmp.i171.i.i.i = icmp slt i32 %dec.i168.i.i.i, 1
  br i1 %cmp.i171.i.i.i, label %if.then.i172.i.i.i, label %amdgpu_ring_write.exit169.i.i.i.amdgpu_ring_write.exit182.i.i.i_crit_edge

amdgpu_ring_write.exit169.i.i.i.amdgpu_ring_write.exit182.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit169.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit182.i.i.i

if.then.i172.i.i.i:                               ; preds = %amdgpu_ring_write.exit169.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit182.i.i.i

amdgpu_ring_write.exit182.i.i.i:                  ; preds = %if.then.i172.i.i.i, %amdgpu_ring_write.exit169.i.i.i.amdgpu_ring_write.exit182.i.i.i_crit_edge
  %1403 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1403)
  %1404 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1405 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1405)
  %1406 = load i64, ptr %wptr.i.i, align 8
  %inc.i175.i.i.i = add i64 %1406, 1
  store i64 %inc.i175.i.i.i, ptr %wptr.i.i, align 8
  %1407 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1407)
  %1408 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1409 = trunc i64 %1406 to i32
  %idxprom.i177.i.i.i = and i32 %1408, %1409
  %arrayidx.i178.i.i.i = getelementptr i32, ptr %1404, i32 %idxprom.i177.i.i.i
  %1410 = ptrtoint ptr %arrayidx.i178.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1410)
  store volatile i32 32768, ptr %arrayidx.i178.i.i.i, align 4
  %1411 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1411)
  %1412 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1413 = load i64, ptr %wptr.i.i, align 8
  %and3.i180.i.i.i = and i64 %1413, %1412
  store i64 %and3.i180.i.i.i, ptr %wptr.i.i, align 8
  %1414 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1414)
  %1415 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i181.i.i.i = add i32 %1415, -1
  store i32 %dec.i181.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i181.i.i.i)
  %cmp.i184.i.i.i = icmp slt i32 %dec.i181.i.i.i, 1
  br i1 %cmp.i184.i.i.i, label %if.then.i185.i.i.i, label %amdgpu_ring_write.exit182.i.i.i.amdgpu_ring_write.exit195.i.i.i_crit_edge

amdgpu_ring_write.exit182.i.i.i.amdgpu_ring_write.exit195.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit182.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit195.i.i.i

if.then.i185.i.i.i:                               ; preds = %amdgpu_ring_write.exit182.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit195.i.i.i

amdgpu_ring_write.exit195.i.i.i:                  ; preds = %if.then.i185.i.i.i, %amdgpu_ring_write.exit182.i.i.i.amdgpu_ring_write.exit195.i.i.i_crit_edge
  %1416 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1416)
  %1417 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1418 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1418)
  %1419 = load i64, ptr %wptr.i.i, align 8
  %inc.i188.i.i.i = add i64 %1419, 1
  store i64 %inc.i188.i.i.i, ptr %wptr.i.i, align 8
  %1420 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1420)
  %1421 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1422 = trunc i64 %1419 to i32
  %idxprom.i190.i.i.i = and i32 %1421, %1422
  %arrayidx.i191.i.i.i = getelementptr i32, ptr %1417, i32 %idxprom.i190.i.i.i
  %1423 = ptrtoint ptr %arrayidx.i191.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1423)
  store volatile i32 32768, ptr %arrayidx.i191.i.i.i, align 4
  %1424 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1424)
  %1425 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1426 = load i64, ptr %wptr.i.i, align 8
  %and3.i193.i.i.i = and i64 %1426, %1425
  store i64 %and3.i193.i.i.i, ptr %wptr.i.i, align 8
  %1427 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1427)
  %1428 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i194.i.i.i = add i32 %1428, -1
  store i32 %dec.i194.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i194.i.i.i)
  %cmp.i197.i.i.i = icmp slt i32 %dec.i194.i.i.i, 1
  br i1 %cmp.i197.i.i.i, label %if.then.i198.i.i.i, label %amdgpu_ring_write.exit195.i.i.i.amdgpu_ring_write.exit208.i.i.i_crit_edge

amdgpu_ring_write.exit195.i.i.i.amdgpu_ring_write.exit208.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit195.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit208.i.i.i

if.then.i198.i.i.i:                               ; preds = %amdgpu_ring_write.exit195.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit208.i.i.i

amdgpu_ring_write.exit208.i.i.i:                  ; preds = %if.then.i198.i.i.i, %amdgpu_ring_write.exit195.i.i.i.amdgpu_ring_write.exit208.i.i.i_crit_edge
  %1429 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1429)
  %1430 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1431 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1431)
  %1432 = load i64, ptr %wptr.i.i, align 8
  %inc.i201.i.i.i = add i64 %1432, 1
  store i64 %inc.i201.i.i.i, ptr %wptr.i.i, align 8
  %1433 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1433)
  %1434 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1435 = trunc i64 %1432 to i32
  %idxprom.i203.i.i.i = and i32 %1434, %1435
  %arrayidx.i204.i.i.i = getelementptr i32, ptr %1430, i32 %idxprom.i203.i.i.i
  %1436 = ptrtoint ptr %arrayidx.i204.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1436)
  store volatile i32 -1073645312, ptr %arrayidx.i204.i.i.i, align 4
  %1437 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1437)
  %1438 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1439 = load i64, ptr %wptr.i.i, align 8
  %and3.i206.i.i.i = and i64 %1439, %1438
  store i64 %and3.i206.i.i.i, ptr %wptr.i.i, align 8
  %1440 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1440)
  %1441 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i207.i.i.i = add i32 %1441, -1
  store i32 %dec.i207.i.i.i, ptr %count_dw.i.i.i.i, align 8
  %1442 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1442)
  %1443 = load ptr, ptr %arrayidx.i456.i, align 8
  %arrayidx84.i.i.i = getelementptr i32, ptr %1443, i32 1
  %1444 = ptrtoint ptr %arrayidx84.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1444)
  %1445 = load i32, ptr %arrayidx84.i.i.i, align 4
  %sub86.i.i.i = add i32 %1445, -40381
  %or87.i.i.i = or i32 %sub86.i.i.i, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i207.i.i.i)
  %cmp.i210.i.i.i = icmp slt i32 %dec.i207.i.i.i, 1
  br i1 %cmp.i210.i.i.i, label %if.then.i211.i.i.i, label %amdgpu_ring_write.exit208.i.i.i.amdgpu_ring_write.exit221.i.i.i_crit_edge

amdgpu_ring_write.exit208.i.i.i.amdgpu_ring_write.exit221.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit208.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit221.i.i.i

if.then.i211.i.i.i:                               ; preds = %amdgpu_ring_write.exit208.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit221.i.i.i

amdgpu_ring_write.exit221.i.i.i:                  ; preds = %if.then.i211.i.i.i, %amdgpu_ring_write.exit208.i.i.i.amdgpu_ring_write.exit221.i.i.i_crit_edge
  %1446 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1446)
  %1447 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1448 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1448)
  %1449 = load i64, ptr %wptr.i.i, align 8
  %inc.i214.i.i.i = add i64 %1449, 1
  store i64 %inc.i214.i.i.i, ptr %wptr.i.i, align 8
  %1450 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1450)
  %1451 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1452 = trunc i64 %1449 to i32
  %idxprom.i216.i.i.i = and i32 %1451, %1452
  %arrayidx.i217.i.i.i = getelementptr i32, ptr %1447, i32 %idxprom.i216.i.i.i
  %1453 = ptrtoint ptr %arrayidx.i217.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1453)
  store volatile i32 %or87.i.i.i, ptr %arrayidx.i217.i.i.i, align 4
  %1454 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1454)
  %1455 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1456 = load i64, ptr %wptr.i.i, align 8
  %and3.i219.i.i.i = and i64 %1456, %1455
  store i64 %and3.i219.i.i.i, ptr %wptr.i.i, align 8
  %1457 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1457)
  %1458 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i220.i.i.i = add i32 %1458, -1
  store i32 %dec.i220.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i220.i.i.i)
  %cmp.i223.i.i.i = icmp slt i32 %dec.i220.i.i.i, 1
  br i1 %cmp.i223.i.i.i, label %if.then.i224.i.i.i, label %amdgpu_ring_write.exit221.i.i.i.amdgpu_ring_write.exit234.i.i.i_crit_edge

amdgpu_ring_write.exit221.i.i.i.amdgpu_ring_write.exit234.i.i.i_crit_edge: ; preds = %amdgpu_ring_write.exit221.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit234.i.i.i

if.then.i224.i.i.i:                               ; preds = %amdgpu_ring_write.exit221.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit234.i.i.i

amdgpu_ring_write.exit234.i.i.i:                  ; preds = %if.then.i224.i.i.i, %amdgpu_ring_write.exit221.i.i.i.amdgpu_ring_write.exit234.i.i.i_crit_edge
  %1459 = ptrtoint ptr %ring1.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %1459)
  %1460 = load ptr, ptr %ring1.i.i.i125.i, align 4
  %1461 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %1461)
  %1462 = load i64, ptr %wptr.i.i, align 8
  %inc.i227.i.i.i = add i64 %1462, 1
  store i64 %inc.i227.i.i.i, ptr %wptr.i.i, align 8
  %1463 = ptrtoint ptr %buf_mask.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %1463)
  %1464 = load i32, ptr %buf_mask.i.i.i127.i, align 8
  %1465 = trunc i64 %1462 to i32
  %idxprom.i229.i.i.i = and i32 %1464, %1465
  %arrayidx.i230.i.i.i = getelementptr i32, ptr %1460, i32 %idxprom.i229.i.i.i
  %1466 = ptrtoint ptr %arrayidx.i230.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1466)
  store volatile i32 0, ptr %arrayidx.i230.i.i.i, align 4
  %1467 = ptrtoint ptr %ptr_mask.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %1467)
  %1468 = load i64, ptr %ptr_mask.i.i.i.i, align 8
  %1469 = load i64, ptr %wptr.i.i, align 8
  %and3.i232.i.i.i = and i64 %1469, %1468
  store i64 %and3.i232.i.i.i, ptr %wptr.i.i, align 8
  %1470 = ptrtoint ptr %count_dw.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1470)
  %1471 = load i32, ptr %count_dw.i.i.i.i, align 8
  %dec.i233.i.i.i = add i32 %1471, -1
  store i32 %dec.i233.i.i.i, ptr %count_dw.i.i.i.i, align 8
  call void @amdgpu_ring_commit(ptr noundef %gfx_ring.i.i.i) #15
  br label %gfx_v9_0_cp_gfx_resume.exit.i

gfx_v9_0_cp_gfx_resume.exit.i:                    ; preds = %amdgpu_ring_write.exit234.i.i.i, %if.then.i.i122.i
  %ready.i129.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36, i32 0, i32 3, i32 17
  %1472 = ptrtoint ptr %ready.i129.i to i32
  call void @__asan_store1_noabort(i32 %1472)
  store i8 1, ptr %ready.i129.i, align 4
  br label %if.end25.i

if.end25.i:                                       ; preds = %gfx_v9_0_cp_gfx_resume.exit.i, %gfx_v9_0_kiq_resume.exit.thread189.i.if.end25.i_crit_edge
  %1473 = ptrtoint ptr %arrayidx.i456.i to i32
  call void @__asan_load4_noabort(i32 %1473)
  %1474 = load ptr, ptr %arrayidx.i456.i, align 8
  %1475 = ptrtoint ptr %1474 to i32
  call void @__asan_load4_noabort(i32 %1475)
  %1476 = load i32, ptr %1474, align 4
  %add.i.i131.i = add i32 %1476, 141
  %1477 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1477)
  %1478 = load i32, ptr %virt, align 8
  %and.i.i133.i = and i32 %1478, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i133.i)
  %tobool3.not.i.i134.i = icmp eq i32 %and.i.i133.i, 0
  br i1 %tobool3.not.i.i134.i, label %if.end25.i.cond.false.i.i139.i_crit_edge, label %land.lhs.true.i.i136.i

if.end25.i.cond.false.i.i139.i_crit_edge:         ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i139.i

land.lhs.true.i.i136.i:                           ; preds = %if.end25.i
  %1479 = ptrtoint ptr %funcs.i455.i to i32
  call void @__asan_load4_noabort(i32 %1479)
  %1480 = load ptr, ptr %funcs.i455.i, align 4
  %tobool4.not.i.i.i = icmp eq ptr %1480, null
  br i1 %tobool4.not.i.i.i, label %land.lhs.true.i.i136.i.cond.false.i.i139.i_crit_edge, label %land.lhs.true5.i.i.i

land.lhs.true.i.i136.i.cond.false.i.i139.i_crit_edge: ; preds = %land.lhs.true.i.i136.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i139.i

land.lhs.true5.i.i.i:                             ; preds = %land.lhs.true.i.i136.i
  %sriov_wreg.i.i137.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1480, i32 0, i32 12
  %1481 = ptrtoint ptr %sriov_wreg.i.i137.i to i32
  call void @__asan_load4_noabort(i32 %1481)
  %1482 = load ptr, ptr %sriov_wreg.i.i137.i, align 4
  %tobool9.not.i.i.i = icmp eq ptr %1482, null
  br i1 %tobool9.not.i.i.i, label %land.lhs.true5.i.i.i.cond.false.i.i139.i_crit_edge, label %cond.true.i.i138.i

land.lhs.true5.i.i.i.cond.false.i.i139.i_crit_edge: ; preds = %land.lhs.true5.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i139.i

cond.true.i.i138.i:                               ; preds = %land.lhs.true5.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void %1482(ptr noundef %handle, i32 noundef %add.i.i131.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_cp_compute_enable.exit.i140.i

cond.false.i.i139.i:                              ; preds = %land.lhs.true5.i.i.i.cond.false.i.i139.i_crit_edge, %land.lhs.true.i.i136.i.cond.false.i.i139.i_crit_edge, %if.end25.i.cond.false.i.i139.i_crit_edge
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add.i.i131.i, i32 noundef 0, i32 noundef 0) #15
  br label %gfx_v9_0_cp_compute_enable.exit.i140.i

gfx_v9_0_cp_compute_enable.exit.i140.i:           ; preds = %cond.false.i.i139.i, %cond.true.i.i138.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %1483 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %1483(i32 noundef 10737400) #15
  %num_compute_rings.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 39
  %1484 = ptrtoint ptr %num_compute_rings.i.i to i32
  call void @__asan_load4_noabort(i32 %1484)
  %1485 = load i32, ptr %num_compute_rings.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1485)
  %cmp39.not.i.i = icmp eq i32 %1485, 0
  br i1 %cmp39.not.i.i, label %gfx_v9_0_cp_compute_enable.exit.i140.i.for.end.i182.i_crit_edge, label %gfx_v9_0_cp_compute_enable.exit.i140.i.for.body.i150.i_crit_edge

gfx_v9_0_cp_compute_enable.exit.i140.i.for.body.i150.i_crit_edge: ; preds = %gfx_v9_0_cp_compute_enable.exit.i140.i
  br label %for.body.i150.i

gfx_v9_0_cp_compute_enable.exit.i140.i.for.end.i182.i_crit_edge: ; preds = %gfx_v9_0_cp_compute_enable.exit.i140.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i182.i

for.cond.i.i:                                     ; preds = %if.end11.i.i
  %inc.i141.i = add nuw i32 %i.040.i.i, 1
  %1486 = ptrtoint ptr %num_compute_rings.i.i to i32
  call void @__asan_load4_noabort(i32 %1486)
  %1487 = load i32, ptr %num_compute_rings.i.i, align 8
  %cmp.i142.i = icmp ult i32 %inc.i141.i, %1487
  br i1 %cmp.i142.i, label %for.cond.i.i.for.body.i150.i_crit_edge, label %for.cond.i.i.for.end.i182.i_crit_edge

for.cond.i.i.for.end.i182.i_crit_edge:            ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i182.i

for.cond.i.i.for.body.i150.i_crit_edge:           ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i150.i

for.body.i150.i:                                  ; preds = %for.cond.i.i.for.body.i150.i_crit_edge, %gfx_v9_0_cp_compute_enable.exit.i140.i.for.body.i150.i_crit_edge
  %i.040.i.i = phi i32 [ %inc.i141.i, %for.cond.i.i.for.body.i150.i_crit_edge ], [ 0, %gfx_v9_0_cp_compute_enable.exit.i140.i.for.body.i150.i_crit_edge ]
  %arrayidx.i143.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i
  %mqd_obj.i144.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 19
  %1488 = ptrtoint ptr %mqd_obj.i144.i to i32
  call void @__asan_load4_noabort(i32 %1488)
  %1489 = load ptr, ptr %mqd_obj.i144.i, align 4
  %bdev.i.i145.i = getelementptr inbounds %struct.amdgpu_bo, ptr %1489, i32 0, i32 4, i32 1
  %1490 = ptrtoint ptr %bdev.i.i145.i to i32
  call void @__asan_load4_noabort(i32 %1490)
  %1491 = load ptr, ptr %bdev.i.i145.i, align 8
  %resv32.i.i.i146.i = getelementptr inbounds %struct.amdgpu_bo, ptr %1489, i32 0, i32 4, i32 0, i32 9
  %1492 = ptrtoint ptr %resv32.i.i.i146.i to i32
  call void @__asan_load4_noabort(i32 %1492)
  %1493 = load ptr, ptr %resv32.i.i.i146.i, align 8
  %call.i.i.i.i147.i = call i32 @ww_mutex_lock_interruptible(ptr noundef %1493, ptr noundef null) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %call.i.i.i.i147.i)
  %cmp.i.i.i148.i = icmp eq i32 %call.i.i.i.i147.i, -4
  %retval.1.i.i.i149.i = select i1 %cmp.i.i.i148.i, i32 -512, i32 %call.i.i.i.i147.i
  %1494 = zext i32 %retval.1.i.i.i149.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %1494, ptr @__sancov_gen_cov_switch_values.398)
  switch i32 %retval.1.i.i.i149.i, label %do.end.i.i152.i [
    i32 0, label %if.end.i155.i
    i32 -512, label %for.body.i150.i.cleanup_crit_edge
  ], !prof !1013

for.body.i150.i.cleanup_crit_edge:                ; preds = %for.body.i150.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end.i.i152.i:                                  ; preds = %for.body.i150.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr.i.i.i151.i = getelementptr i8, ptr %1491, i32 -17736
  %1495 = ptrtoint ptr %add.ptr.i.i.i151.i to i32
  call void @__asan_load4_noabort(i32 %1495)
  %1496 = load ptr, ptr %add.ptr.i.i.i151.i, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %1496, ptr noundef nonnull @.str.382, ptr noundef %1489) #18
  br label %gfx_v9_0_kcq_resume.exit.i

if.end.i155.i:                                    ; preds = %for.body.i150.i
  %1497 = ptrtoint ptr %mqd_obj.i144.i to i32
  call void @__asan_load4_noabort(i32 %1497)
  %1498 = load ptr, ptr %mqd_obj.i144.i, align 4
  %mqd_ptr.i153.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 21
  %call5.i.i = call i32 @amdgpu_bo_kmap(ptr noundef %1498, ptr noundef %mqd_ptr.i153.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i154.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i154.i, label %if.then7.i.i, label %if.end.i155.i.if.end11.i.i_crit_edge

if.end.i155.i.if.end11.i.i_crit_edge:             ; preds = %if.end.i155.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11.i.i

if.then7.i.i:                                     ; preds = %if.end.i155.i
  %1499 = ptrtoint ptr %arrayidx.i143.i to i32
  call void @__asan_load4_noabort(i32 %1499)
  %1500 = load ptr, ptr %arrayidx.i143.i, align 8
  %1501 = ptrtoint ptr %mqd_ptr.i153.i to i32
  call void @__asan_load4_noabort(i32 %1501)
  %1502 = load ptr, ptr %mqd_ptr.i153.i, align 8
  %compute_ring.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1500, i32 0, i32 106, i32 38
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %arrayidx.i143.i to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %compute_ring.i.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i, 904
  %arrayidx3.i.i.i = getelementptr %struct.amdgpu_device, ptr %1500, i32 0, i32 106, i32 6, i32 7, i32 %sub.ptr.div.i.i.i
  %1503 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1503)
  %1504 = load ptr, ptr %arrayidx3.i.i.i, align 4
  %cp_hqd_pq_control.i.i156.i = getelementptr inbounds %struct.v9_mqd, ptr %1504, i32 0, i32 145
  %1505 = ptrtoint ptr %cp_hqd_pq_control.i.i156.i to i32
  call void @__asan_load4_noabort(i32 %1505)
  %1506 = load i32, ptr %cp_hqd_pq_control.i.i156.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1506)
  %tobool.not.i.i157.i = icmp eq i32 %1506, 0
  br i1 %tobool.not.i.i157.i, label %if.then7.i.i.if.then.i.i163.i_crit_edge, label %lor.lhs.false.i.i.i

if.then7.i.i.if.then.i.i163.i_crit_edge:          ; preds = %if.then7.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i163.i

lor.lhs.false.i.i.i:                              ; preds = %if.then7.i.i
  %in_gpu_reset.i.i.i158.i = getelementptr inbounds %struct.amdgpu_device, ptr %1500, i32 0, i32 141
  %call.i.i.i.i.i159.i = call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i158.i, i32 noundef 4) #15
  %1507 = ptrtoint ptr %in_gpu_reset.i.i.i158.i to i32
  call void @__asan_load4_noabort(i32 %1507)
  %1508 = load volatile i32, ptr %in_gpu_reset.i.i.i158.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1508)
  %tobool4.not.i31.i.i = icmp eq i32 %1508, 0
  br i1 %tobool4.not.i31.i.i, label %land.lhs.true.i32.i.i, label %lor.lhs.false.i.i.i.if.else.i.i164.i_crit_edge

lor.lhs.false.i.i.i.if.else.i.i164.i_crit_edge:   ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i.i164.i

land.lhs.true.i32.i.i:                            ; preds = %lor.lhs.false.i.i.i
  %in_suspend.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1500, i32 0, i32 137
  %1509 = ptrtoint ptr %in_suspend.i.i.i to i32
  call void @__asan_load1_noabort(i32 %1509)
  %1510 = load i8, ptr %in_suspend.i.i.i, align 1, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1510)
  %tobool5.not.i.i.i = icmp eq i8 %1510, 0
  br i1 %tobool5.not.i.i.i, label %land.lhs.true.i32.i.i.if.then.i.i163.i_crit_edge, label %land.lhs.true.i32.i.i.if.else.i.i164.i_crit_edge

land.lhs.true.i32.i.i.if.else.i.i164.i_crit_edge: ; preds = %land.lhs.true.i32.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i.i164.i

land.lhs.true.i32.i.i.if.then.i.i163.i_crit_edge: ; preds = %land.lhs.true.i32.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i163.i

if.then.i.i163.i:                                 ; preds = %land.lhs.true.i32.i.i.if.then.i.i163.i_crit_edge, %if.then7.i.i.if.then.i.i163.i_crit_edge
  %1511 = call ptr @memset(ptr %1502, i32 0, i32 2056)
  %dynamic_cu_mask.i.i160.i = getelementptr inbounds %struct.v9_mqd_allocation, ptr %1502, i32 0, i32 3
  %1512 = ptrtoint ptr %dynamic_cu_mask.i.i160.i to i32
  call void @__asan_store4_noabort(i32 %1512)
  store i32 -1, ptr %dynamic_cu_mask.i.i160.i, align 4
  %dynamic_rb_mask.i.i161.i = getelementptr inbounds %struct.v9_mqd_allocation, ptr %1502, i32 0, i32 4
  %1513 = ptrtoint ptr %dynamic_rb_mask.i.i161.i to i32
  call void @__asan_store4_noabort(i32 %1513)
  store i32 -1, ptr %dynamic_rb_mask.i.i161.i, align 4
  %srbm_mutex.i.i162.i = getelementptr inbounds %struct.amdgpu_device, ptr %1500, i32 0, i32 20
  call void @mutex_lock_nested(ptr noundef %srbm_mutex.i.i162.i, i32 noundef 0) #15
  %me.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 16
  %1514 = ptrtoint ptr %me.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1514)
  %1515 = load i32, ptr %me.i.i.i, align 8
  %pipe.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 17
  %1516 = ptrtoint ptr %pipe.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1516)
  %1517 = load i32, ptr %pipe.i.i.i, align 4
  %queue.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 18
  %1518 = ptrtoint ptr %queue.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1518)
  %1519 = load i32, ptr %queue.i.i.i, align 8
  call void @soc15_grbm_select(ptr noundef %1500, i32 noundef %1515, i32 noundef %1517, i32 noundef %1519, i32 noundef 0) #15
  call fastcc void @gfx_v9_0_mqd_init(ptr noundef %arrayidx.i143.i) #15
  call void @soc15_grbm_select(ptr noundef %1500, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #15
  call void @mutex_unlock(ptr noundef %srbm_mutex.i.i162.i) #15
  %1520 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1520)
  %1521 = load ptr, ptr %arrayidx3.i.i.i, align 4
  %tobool12.not.i.i.i = icmp eq ptr %1521, null
  br i1 %tobool12.not.i.i.i, label %if.then.i.i163.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge, label %if.then13.i.i.i

if.then.i.i163.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge: ; preds = %if.then.i.i163.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_kcq_init_queue.exit.i.i

if.then13.i.i.i:                                  ; preds = %if.then.i.i163.i
  call void @__sanitizer_cov_trace_pc() #17
  %1522 = call ptr @memcpy(ptr %1521, ptr %1502, i32 2064)
  br label %gfx_v9_0_kcq_init_queue.exit.i.i

if.else.i.i164.i:                                 ; preds = %land.lhs.true.i32.i.i.if.else.i.i164.i_crit_edge, %lor.lhs.false.i.i.i.if.else.i.i164.i_crit_edge
  %call.i.i.i2.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i.i158.i, i32 noundef 4) #15
  %1523 = ptrtoint ptr %in_gpu_reset.i.i.i158.i to i32
  call void @__asan_load4_noabort(i32 %1523)
  %1524 = load volatile i32, ptr %in_gpu_reset.i.i.i158.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1524)
  %tobool19.not.i.i.i = icmp eq i32 %1524, 0
  br i1 %tobool19.not.i.i.i, label %if.else34.i.i.i, label %if.then20.i.i.i

if.then20.i.i.i:                                  ; preds = %if.else.i.i164.i
  %1525 = ptrtoint ptr %arrayidx3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1525)
  %1526 = load ptr, ptr %arrayidx3.i.i.i, align 4
  %tobool25.not.i.i.i = icmp eq ptr %1526, null
  br i1 %tobool25.not.i.i.i, label %if.then20.i.i.i.if.end31.i.i.i_crit_edge, label %if.then26.i.i.i

if.then20.i.i.i.if.end31.i.i.i_crit_edge:         ; preds = %if.then20.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end31.i.i.i

if.then26.i.i.i:                                  ; preds = %if.then20.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %1527 = call ptr @memcpy(ptr %1502, ptr %1526, i32 2064)
  br label %if.end31.i.i.i

if.end31.i.i.i:                                   ; preds = %if.then26.i.i.i, %if.then20.i.i.i.if.end31.i.i.i_crit_edge
  %wptr.i.i165.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 7
  %1528 = ptrtoint ptr %wptr.i.i165.i to i32
  call void @__asan_store8_noabort(i32 %1528)
  store i64 0, ptr %wptr.i.i165.i, align 8
  %wb32.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %1500, i32 0, i32 70, i32 1
  %1529 = ptrtoint ptr %wb32.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1529)
  %1530 = load ptr, ptr %wb32.i.i.i, align 4
  %wptr_offs.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 26
  %1531 = ptrtoint ptr %wptr_offs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1531)
  %1532 = load i32, ptr %wptr_offs.i.i.i, align 8
  %arrayidx33.i.i.i112 = getelementptr i32, ptr %1530, i32 %1532
  %call.i.i.i33.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx33.i.i.i112, i32 noundef 8) #15
  call void @generic_atomic64_set(ptr noundef %arrayidx33.i.i.i112, i64 noundef 0) #15
  %buf_mask.i.i.i166.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 14
  %funcs.i.i.i167.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 1
  %ring1.i.i.i168.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 5
  br label %while.body.i.i.i174.i

while.body.i.i.i174.i:                            ; preds = %while.body.i.i.i174.i.while.body.i.i.i174.i_crit_edge, %if.end31.i.i.i
  %i.05.i.i.i169.i = phi i32 [ 0, %if.end31.i.i.i ], [ %inc.i.i.i171.i, %while.body.i.i.i174.i.while.body.i.i.i174.i_crit_edge ]
  %1533 = ptrtoint ptr %funcs.i.i.i167.i to i32
  call void @__asan_load4_noabort(i32 %1533)
  %1534 = load ptr, ptr %funcs.i.i.i167.i, align 4
  %nop.i.i.i170.i = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %1534, i32 0, i32 2
  %1535 = ptrtoint ptr %nop.i.i.i170.i to i32
  call void @__asan_load4_noabort(i32 %1535)
  %1536 = load i32, ptr %nop.i.i.i170.i, align 4
  %1537 = ptrtoint ptr %ring1.i.i.i168.i to i32
  call void @__asan_load4_noabort(i32 %1537)
  %1538 = load ptr, ptr %ring1.i.i.i168.i, align 4
  %inc.i.i.i171.i = add i32 %i.05.i.i.i169.i, 1
  %arrayidx.i.i.i172.i = getelementptr i32, ptr %1538, i32 %i.05.i.i.i169.i
  %1539 = ptrtoint ptr %arrayidx.i.i.i172.i to i32
  call void @__asan_store4_noabort(i32 %1539)
  store volatile i32 %1536, ptr %arrayidx.i.i.i172.i, align 4
  %1540 = ptrtoint ptr %buf_mask.i.i.i166.i to i32
  call void @__asan_load4_noabort(i32 %1540)
  %1541 = load i32, ptr %buf_mask.i.i.i166.i, align 8
  %cmp.not.i.i.i173.i = icmp ugt i32 %inc.i.i.i171.i, %1541
  br i1 %cmp.not.i.i.i173.i, label %while.body.i.i.i174.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge, label %while.body.i.i.i174.i.while.body.i.i.i174.i_crit_edge

while.body.i.i.i174.i.while.body.i.i.i174.i_crit_edge: ; preds = %while.body.i.i.i174.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i.i.i174.i

while.body.i.i.i174.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge: ; preds = %while.body.i.i.i174.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_kcq_init_queue.exit.i.i

if.else34.i.i.i:                                  ; preds = %if.else.i.i164.i
  %buf_mask.i3.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 14
  %funcs.i4.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 1
  %ring1.i5.i.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.040.i.i, i32 5
  br label %while.body.i11.i.i.i

while.body.i11.i.i.i:                             ; preds = %while.body.i11.i.i.i.while.body.i11.i.i.i_crit_edge, %if.else34.i.i.i
  %i.05.i6.i.i.i = phi i32 [ 0, %if.else34.i.i.i ], [ %inc.i8.i.i.i, %while.body.i11.i.i.i.while.body.i11.i.i.i_crit_edge ]
  %1542 = ptrtoint ptr %funcs.i4.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1542)
  %1543 = load ptr, ptr %funcs.i4.i.i.i, align 4
  %nop.i7.i.i.i = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %1543, i32 0, i32 2
  %1544 = ptrtoint ptr %nop.i7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1544)
  %1545 = load i32, ptr %nop.i7.i.i.i, align 4
  %1546 = ptrtoint ptr %ring1.i5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1546)
  %1547 = load ptr, ptr %ring1.i5.i.i.i, align 4
  %inc.i8.i.i.i = add i32 %i.05.i6.i.i.i, 1
  %arrayidx.i9.i.i175.i = getelementptr i32, ptr %1547, i32 %i.05.i6.i.i.i
  %1548 = ptrtoint ptr %arrayidx.i9.i.i175.i to i32
  call void @__asan_store4_noabort(i32 %1548)
  store volatile i32 %1545, ptr %arrayidx.i9.i.i175.i, align 4
  %1549 = ptrtoint ptr %buf_mask.i3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1549)
  %1550 = load i32, ptr %buf_mask.i3.i.i.i, align 8
  %cmp.not.i10.i.i.i = icmp ugt i32 %inc.i8.i.i.i, %1550
  br i1 %cmp.not.i10.i.i.i, label %while.body.i11.i.i.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge, label %while.body.i11.i.i.i.while.body.i11.i.i.i_crit_edge

while.body.i11.i.i.i.while.body.i11.i.i.i_crit_edge: ; preds = %while.body.i11.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i11.i.i.i

while.body.i11.i.i.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge: ; preds = %while.body.i11.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_kcq_init_queue.exit.i.i

gfx_v9_0_kcq_init_queue.exit.i.i:                 ; preds = %while.body.i11.i.i.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge, %while.body.i.i.i174.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge, %if.then13.i.i.i, %if.then.i.i163.i.gfx_v9_0_kcq_init_queue.exit.i.i_crit_edge
  %1551 = ptrtoint ptr %mqd_obj.i144.i to i32
  call void @__asan_load4_noabort(i32 %1551)
  %1552 = load ptr, ptr %mqd_obj.i144.i, align 4
  call void @amdgpu_bo_kunmap(ptr noundef %1552) #15
  %1553 = ptrtoint ptr %mqd_ptr.i153.i to i32
  call void @__asan_store4_noabort(i32 %1553)
  store ptr null, ptr %mqd_ptr.i153.i, align 8
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %gfx_v9_0_kcq_init_queue.exit.i.i, %if.end.i155.i.if.end11.i.i_crit_edge
  %r.0.i.i = phi i32 [ %call5.i.i, %if.end.i155.i.if.end11.i.i_crit_edge ], [ 0, %gfx_v9_0_kcq_init_queue.exit.i.i ]
  %1554 = ptrtoint ptr %mqd_obj.i144.i to i32
  call void @__asan_load4_noabort(i32 %1554)
  %1555 = load ptr, ptr %mqd_obj.i144.i, align 4
  %tbo.i.i176.i = getelementptr inbounds %struct.amdgpu_bo, ptr %1555, i32 0, i32 4
  %bdev.i.i.i.i177.i = getelementptr inbounds %struct.amdgpu_bo, ptr %1555, i32 0, i32 4, i32 1
  %1556 = ptrtoint ptr %bdev.i.i.i.i177.i to i32
  call void @__asan_load4_noabort(i32 %1556)
  %1557 = load ptr, ptr %bdev.i.i.i.i177.i, align 8
  %lru_lock.i.i.i.i178.i = getelementptr inbounds %struct.ttm_device, ptr %1557, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i.i178.i) #15
  %resource.i.i.i.i179.i = getelementptr inbounds %struct.amdgpu_bo, ptr %1555, i32 0, i32 4, i32 6
  %1558 = ptrtoint ptr %resource.i.i.i.i179.i to i32
  call void @__asan_load4_noabort(i32 %1558)
  %1559 = load ptr, ptr %resource.i.i.i.i179.i, align 4
  call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i.i176.i, ptr noundef %1559, ptr noundef null) #15
  %1560 = ptrtoint ptr %bdev.i.i.i.i177.i to i32
  call void @__asan_load4_noabort(i32 %1560)
  %1561 = load ptr, ptr %bdev.i.i.i.i177.i, align 8
  %lru_lock2.i.i.i.i180.i = getelementptr inbounds %struct.ttm_device, ptr %1561, i32 0, i32 6
  call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i.i180.i) #15
  %resv.i.i.i181.i = getelementptr inbounds %struct.amdgpu_bo, ptr %1555, i32 0, i32 4, i32 0, i32 9
  %1562 = ptrtoint ptr %resv.i.i.i181.i to i32
  call void @__asan_load4_noabort(i32 %1562)
  %1563 = load ptr, ptr %resv.i.i.i181.i, align 8
  call void @dma_resv_reset_shared_max(ptr noundef %1563) #15
  call void @ww_mutex_unlock(ptr noundef %1563) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.0.i.i)
  %tobool13.not.i.i = icmp eq i32 %r.0.i.i, 0
  br i1 %tobool13.not.i.i, label %for.cond.i.i, label %if.end11.i.i.cleanup_crit_edge

if.end11.i.i.cleanup_crit_edge:                   ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.end.i182.i:                                   ; preds = %for.cond.i.i.for.end.i182.i_crit_edge, %gfx_v9_0_cp_compute_enable.exit.i140.i.for.end.i182.i_crit_edge
  %call16.i.i = call i32 @amdgpu_gfx_enable_kcq(ptr noundef %handle) #15
  br label %gfx_v9_0_kcq_resume.exit.i

gfx_v9_0_kcq_resume.exit.i:                       ; preds = %for.end.i182.i, %do.end.i.i152.i
  %r.1.i.i = phi i32 [ %retval.1.i.i.i149.i, %do.end.i.i152.i ], [ %call16.i.i, %for.end.i182.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.1.i.i)
  %tobool27.not.i = icmp eq i32 %r.1.i.i, 0
  br i1 %tobool27.not.i, label %if.end29.i, label %gfx_v9_0_kcq_resume.exit.i.cleanup_crit_edge

gfx_v9_0_kcq_resume.exit.i.cleanup_crit_edge:     ; preds = %gfx_v9_0_kcq_resume.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end29.i:                                       ; preds = %gfx_v9_0_kcq_resume.exit.i
  %1564 = ptrtoint ptr %num_gfx_rings18.i to i32
  call void @__asan_load4_noabort(i32 %1564)
  %1565 = load i32, ptr %num_gfx_rings18.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1565)
  %tobool32.not.i = icmp eq i32 %1565, 0
  br i1 %tobool32.not.i, label %if.end29.i.if.end39.i_crit_edge, label %if.then33.i

if.end29.i.if.end39.i_crit_edge:                  ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end39.i

if.then33.i:                                      ; preds = %if.end29.i
  %gfx_ring.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 36
  %call35.i = call i32 @amdgpu_ring_test_helper(ptr noundef %gfx_ring.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35.i)
  %tobool36.not.i = icmp eq i32 %call35.i, 0
  br i1 %tobool36.not.i, label %if.then33.i.if.end39.i_crit_edge, label %if.then33.i.cleanup_crit_edge

if.then33.i.cleanup_crit_edge:                    ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then33.i.if.end39.i_crit_edge:                 ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then33.i.if.end39.i_crit_edge, %if.end29.i.if.end39.i_crit_edge
  %1566 = ptrtoint ptr %num_compute_rings.i.i to i32
  call void @__asan_load4_noabort(i32 %1566)
  %1567 = load i32, ptr %num_compute_rings.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1567)
  %cmp41203.not.i = icmp eq i32 %1567, 0
  br i1 %cmp41203.not.i, label %if.end39.i.gfx_v9_0_cp_resume.exit.thread118_crit_edge, label %if.end39.i.for.body.i114_crit_edge

if.end39.i.for.body.i114_crit_edge:               ; preds = %if.end39.i
  br label %for.body.i114

if.end39.i.gfx_v9_0_cp_resume.exit.thread118_crit_edge: ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_cp_resume.exit.thread118

for.body.i114:                                    ; preds = %for.body.i114.for.body.i114_crit_edge, %if.end39.i.for.body.i114_crit_edge
  %i.0204.i = phi i32 [ %inc.i113, %for.body.i114.for.body.i114_crit_edge ], [ 0, %if.end39.i.for.body.i114_crit_edge ]
  %arrayidx43.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 38, i32 %i.0204.i
  %call44.i = call i32 @amdgpu_ring_test_helper(ptr noundef %arrayidx43.i) #15
  %inc.i113 = add nuw i32 %i.0204.i, 1
  %1568 = ptrtoint ptr %num_compute_rings.i.i to i32
  call void @__asan_load4_noabort(i32 %1568)
  %1569 = load i32, ptr %num_compute_rings.i.i, align 8
  %cmp41.i = icmp ult i32 %inc.i113, %1569
  br i1 %cmp41.i, label %for.body.i114.for.body.i114_crit_edge, label %for.body.i114.gfx_v9_0_cp_resume.exit.thread118_crit_edge

for.body.i114.gfx_v9_0_cp_resume.exit.thread118_crit_edge: ; preds = %for.body.i114
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_cp_resume.exit.thread118

for.body.i114.for.body.i114_crit_edge:            ; preds = %for.body.i114
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i114

gfx_v9_0_cp_resume.exit.thread118:                ; preds = %for.body.i114.gfx_v9_0_cp_resume.exit.thread118_crit_edge, %if.end39.i.gfx_v9_0_cp_resume.exit.thread118_crit_edge
  call fastcc void @gfx_v9_0_enable_gui_idle_interrupt(ptr noundef %handle, i1 noundef zeroext true) #15
  %1570 = ptrtoint ptr %arrayidx.i477.i to i32
  call void @__asan_load4_noabort(i32 %1570)
  %1571 = load i32, ptr %arrayidx.i477.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590850, i32 %1571)
  %cmp = icmp eq i32 %1571, 590850
  br i1 %cmp, label %if.then9, label %gfx_v9_0_cp_resume.exit.thread118.cleanup_crit_edge

gfx_v9_0_cp_resume.exit.thread118.cleanup_crit_edge: ; preds = %gfx_v9_0_cp_resume.exit.thread118
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

gfx_v9_0_cp_resume.exit:                          ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr.i.i.i.i = getelementptr i8, ptr %818, i32 -17736
  %1572 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1572)
  %1573 = load ptr, ptr %add.ptr.i.i.i.i, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %1573, ptr noundef nonnull @.str.382, ptr noundef %816) #18
  br label %cleanup

if.then9:                                         ; preds = %gfx_v9_0_cp_resume.exit.thread118
  call void @__sanitizer_cov_trace_pc() #17
  call void @gfx_v9_4_2_set_power_brake_sequence(ptr noundef %handle) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %gfx_v9_0_cp_resume.exit, %gfx_v9_0_cp_resume.exit.thread118.cleanup_crit_edge, %if.then33.i.cleanup_crit_edge, %gfx_v9_0_kcq_resume.exit.i.cleanup_crit_edge, %if.end11.i.i.cleanup_crit_edge, %for.body.i150.i.cleanup_crit_edge, %if.end.i95.i.cleanup_crit_edge, %if.end12.i.cleanup_crit_edge, %if.end7.i.cleanup_crit_edge, %lor.lhs.false3.i.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %if.then3.i.cleanup_crit_edge, %gfx_v9_0_init_tcp_config.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %gfx_v9_0_init_tcp_config.exit.cleanup_crit_edge ], [ %retval.1.i.i.i.i, %gfx_v9_0_cp_resume.exit ], [ 0, %if.then9 ], [ 0, %gfx_v9_0_cp_resume.exit.thread118.cleanup_crit_edge ], [ %call4.i.i, %if.end.i95.i.cleanup_crit_edge ], [ %retval.1.i.i.i.i, %if.end12.i.cleanup_crit_edge ], [ -22, %if.then3.i.cleanup_crit_edge ], [ -22, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -22, %lor.lhs.false3.i.i.cleanup_crit_edge ], [ -22, %if.end7.i.cleanup_crit_edge ], [ %call35.i, %if.then33.i.cleanup_crit_edge ], [ %r.1.i.i, %gfx_v9_0_kcq_resume.exit.i.cleanup_crit_edge ], [ %retval.1.i.i.i149.i, %for.body.i150.i.cleanup_crit_edge ], [ %r.0.i.i, %if.end11.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_hw_fini(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cp_ecc_error_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 43
  %call = tail call i32 @amdgpu_irq_put(ptr noundef %handle, ptr noundef %cp_ecc_error_irq, i32 noundef 0) #15
  %priv_reg_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 41
  %call2 = tail call i32 @amdgpu_irq_put(ptr noundef %handle, ptr noundef %priv_reg_irq, i32 noundef 0) #15
  %priv_inst_irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 42
  %call4 = tail call i32 @amdgpu_irq_put(ptr noundef %handle, ptr noundef %priv_inst_irq, i32 noundef 0) #15
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @amdgpu_ras_in_intr, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_ras_in_intr to i32))
  %0 = load volatile i32, ptr @amdgpu_ras_in_intr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.i.not = icmp eq i32 %0, 0
  br i1 %tobool.i.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call6 = tail call i32 @amdgpu_gfx_disable_kcq(ptr noundef %handle) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %1 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %virt, align 8
  %and = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end101, label %if.then7

if.then7:                                         ; preds = %if.end
  tail call fastcc void @gfx_v9_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext false)
  %3 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %virt, align 8
  %and10 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.then7.cond.false89.sink.split_crit_edge, label %land.lhs.true

if.then7.cond.false89.sink.split_crit_edge:       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false89.sink.split

land.lhs.true:                                    ; preds = %if.then7
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %5 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %funcs, align 4
  %tobool13.not = icmp eq ptr %6, null
  br i1 %tobool13.not, label %land.lhs.true.cond.false89.sink.split_crit_edge, label %land.lhs.true14

land.lhs.true.cond.false89.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false89.sink.split

land.lhs.true14:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %6, i32 0, i32 12
  %7 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sriov_wreg, align 4
  %tobool18.not = icmp eq ptr %8, null
  br i1 %tobool18.not, label %land.lhs.true67, label %cond.true

cond.true:                                        ; preds = %land.lhs.true14
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %add = add i32 %12, 4227
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %6, i32 0, i32 13
  %13 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sriov_rreg, align 4
  %tobool38.not = icmp eq ptr %14, null
  br i1 %tobool38.not, label %cond.false, label %cond.true39

cond.true39:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call49 = tail call i32 %14(ptr noundef %handle, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call55 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true39
  %cond = phi i32 [ %call49, %cond.true39 ], [ %call55, %cond.false ]
  %and56 = and i32 %cond, 2147483647
  tail call void %8(ptr noundef %handle, i32 noundef %add, i32 noundef %and56, i32 noundef 0, i32 noundef 1) #15
  br label %cleanup

land.lhs.true67:                                  ; preds = %land.lhs.true14
  %15 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx59195 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %16 = ptrtoint ptr %arrayidx59195 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx59195, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add62196 = add i32 %19, 4227
  %tobool71.not = icmp eq ptr %.pr, null
  br i1 %tobool71.not, label %land.lhs.true67.cond.false89_crit_edge, label %land.lhs.true72

land.lhs.true67.cond.false89_crit_edge:           ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false89

land.lhs.true72:                                  ; preds = %land.lhs.true67
  %sriov_rreg76 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %20 = ptrtoint ptr %sriov_rreg76 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_rreg76, align 4
  %tobool77.not = icmp eq ptr %21, null
  br i1 %tobool77.not, label %land.lhs.true72.cond.false89_crit_edge, label %cond.true78

land.lhs.true72.cond.false89_crit_edge:           ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false89

cond.true78:                                      ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #17
  %call88 = tail call i32 %21(ptr noundef %handle, i32 noundef %add62196, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end96

cond.false89.sink.split:                          ; preds = %land.lhs.true.cond.false89.sink.split_crit_edge, %if.then7.cond.false89.sink.split_crit_edge
  %arrayidx59195201 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %22 = ptrtoint ptr %arrayidx59195201 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx59195201, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %add62196202 = add i32 %25, 4227
  br label %cond.false89

cond.false89:                                     ; preds = %cond.false89.sink.split, %land.lhs.true72.cond.false89_crit_edge, %land.lhs.true67.cond.false89_crit_edge
  %add62199 = phi i32 [ %add62196, %land.lhs.true72.cond.false89_crit_edge ], [ %add62196, %land.lhs.true67.cond.false89_crit_edge ], [ %add62196202, %cond.false89.sink.split ]
  %call95 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add62199, i32 noundef 0) #15
  br label %cond.end96

cond.end96:                                       ; preds = %cond.false89, %cond.true78
  %add62197 = phi i32 [ %add62196, %cond.true78 ], [ %add62199, %cond.false89 ]
  %cond97 = phi i32 [ %call88, %cond.true78 ], [ %call95, %cond.false89 ]
  %and98 = and i32 %cond97, 2147483647
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add62197, i32 noundef %and98, i32 noundef 0) #15
  br label %cleanup

if.end101:                                        ; preds = %if.end
  %in_gpu_reset.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 141
  %call.i.i.i190 = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i, i32 noundef 4) #15
  %26 = ptrtoint ptr %in_gpu_reset.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %in_gpu_reset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool103.not = icmp eq i32 %27, 0
  br i1 %tobool103.not, label %land.lhs.true104, label %if.end101.if.end119_crit_edge

if.end101.if.end119_crit_edge:                    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end119

land.lhs.true104:                                 ; preds = %if.end101
  %in_suspend = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 137
  %28 = ptrtoint ptr %in_suspend to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %in_suspend, align 1, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool105.not = icmp eq i8 %29, 0
  br i1 %tobool105.not, label %if.then106, label %land.lhs.true104.if.end119_crit_edge

land.lhs.true104.if.end119_crit_edge:             ; preds = %land.lhs.true104
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end119

if.then106:                                       ; preds = %land.lhs.true104
  %srbm_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 20
  tail call void @mutex_lock_nested(ptr noundef %srbm_mutex, i32 noundef 0) #15
  %ring = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3
  %me = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 16
  %30 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %me, align 8
  %pipe = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 17
  %32 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %pipe, align 4
  %queue = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 18
  %34 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %queue, align 8
  tail call void @soc15_grbm_select(ptr noundef %handle, i32 noundef %31, i32 noundef %33, i32 noundef %35, i32 noundef 0) #15
  %36 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ring, align 8
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 132
  %38 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %39, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then106.cond.false.i_crit_edge, label %land.lhs.true.i

if.then106.cond.false.i_crit_edge:                ; preds = %if.then106
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %if.then106
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %40 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %funcs.i, align 4
  %tobool2.not.i = icmp eq ptr %41, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true3.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %41, i32 0, i32 13
  %42 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool7.not.i = icmp eq ptr %43, null
  br i1 %tobool7.not.i, label %land.lhs.true3.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true3.i.cond.false.i_crit_edge:          ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %37, i32 0, i32 130, i32 1
  %44 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx.i, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add.i = add i32 %47, 4679
  %call.i = tail call i32 %43(ptr noundef %37, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i

cond.false.i:                                     ; preds = %land.lhs.true3.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %if.then106.cond.false.i_crit_edge
  %arrayidx15.i = getelementptr %struct.amdgpu_device, ptr %37, i32 0, i32 130, i32 1
  %48 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx15.i, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add18.i = add i32 %51, 4679
  %call19.i = tail call i32 @amdgpu_device_rreg(ptr noundef %37, i32 noundef %add18.i, i32 noundef 0) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call19.i, %cond.false.i ]
  %and20.i = and i32 %cond.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br i1 %tobool21.not.i, label %cond.end.i.do.body152.i_crit_edge, label %do.body.i

cond.end.i.do.body152.i_crit_edge:                ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body152.i

do.body.i:                                        ; preds = %cond.end.i
  %arrayidx23.i = getelementptr %struct.amdgpu_device, ptr %37, i32 0, i32 130, i32 1
  %52 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx23.i, align 8
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  %add26.i = add i32 %55, 4701
  %56 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %virt.i, align 8
  %and29.i = and i32 %57, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i)
  %tobool30.not.i = icmp eq i32 %and29.i, 0
  br i1 %tobool30.not.i, label %do.body.i.cond.false46.i_crit_edge, label %land.lhs.true31.i

do.body.i.cond.false46.i_crit_edge:               ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false46.i

land.lhs.true31.i:                                ; preds = %do.body.i
  %funcs34.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %58 = ptrtoint ptr %funcs34.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %funcs34.i, align 4
  %tobool35.not.i = icmp eq ptr %59, null
  br i1 %tobool35.not.i, label %land.lhs.true31.i.cond.false46.i_crit_edge, label %land.lhs.true36.i

land.lhs.true31.i.cond.false46.i_crit_edge:       ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false46.i

land.lhs.true36.i:                                ; preds = %land.lhs.true31.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %59, i32 0, i32 12
  %60 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool40.not.i = icmp eq ptr %61, null
  br i1 %tobool40.not.i, label %land.lhs.true36.i.cond.false46.i_crit_edge, label %cond.true41.i

land.lhs.true36.i.cond.false46.i_crit_edge:       ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false46.i

cond.true41.i:                                    ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %61(ptr noundef %37, i32 noundef %add26.i, i32 noundef 1, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end47.i

cond.false46.i:                                   ; preds = %land.lhs.true36.i.cond.false46.i_crit_edge, %land.lhs.true31.i.cond.false46.i_crit_edge, %do.body.i.cond.false46.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add26.i, i32 noundef 1, i32 noundef 0) #15
  br label %cond.end47.i

cond.end47.i:                                     ; preds = %cond.false46.i, %cond.true41.i
  %usec_timeout.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 11
  %62 = ptrtoint ptr %usec_timeout.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %usec_timeout.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %cmp1.i = icmp sgt i32 %63, 0
  br i1 %cmp1.i, label %for.body.lr.ph.i, label %cond.end47.i.do.body120.i_crit_edge

cond.end47.i.do.body120.i_crit_edge:              ; preds = %cond.end47.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body120.i

for.body.lr.ph.i:                                 ; preds = %cond.end47.i
  %funcs55.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %j.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %if.end.i.for.body.i_crit_edge ]
  %64 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %virt.i, align 8
  %and50.i = and i32 %65, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50.i)
  %tobool51.not.i = icmp eq i32 %and50.i, 0
  br i1 %tobool51.not.i, label %for.body.i.cond.false74.i_crit_edge, label %land.lhs.true52.i

for.body.i.cond.false74.i_crit_edge:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false74.i

land.lhs.true52.i:                                ; preds = %for.body.i
  %66 = ptrtoint ptr %funcs55.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %funcs55.i, align 4
  %tobool56.not.i = icmp eq ptr %67, null
  br i1 %tobool56.not.i, label %land.lhs.true52.i.cond.false74.i_crit_edge, label %land.lhs.true57.i

land.lhs.true52.i.cond.false74.i_crit_edge:       ; preds = %land.lhs.true52.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false74.i

land.lhs.true57.i:                                ; preds = %land.lhs.true52.i
  %sriov_rreg61.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %67, i32 0, i32 13
  %68 = ptrtoint ptr %sriov_rreg61.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %sriov_rreg61.i, align 4
  %tobool62.not.i = icmp eq ptr %69, null
  br i1 %tobool62.not.i, label %land.lhs.true57.i.cond.false74.i_crit_edge, label %cond.true63.i

land.lhs.true57.i.cond.false74.i_crit_edge:       ; preds = %land.lhs.true57.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false74.i

cond.true63.i:                                    ; preds = %land.lhs.true57.i
  call void @__sanitizer_cov_trace_pc() #17
  %70 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx23.i, align 8
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 4
  %add72.i = add i32 %73, 4679
  %call73.i = tail call i32 %69(ptr noundef %37, i32 noundef %add72.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end81.i

cond.false74.i:                                   ; preds = %land.lhs.true57.i.cond.false74.i_crit_edge, %land.lhs.true52.i.cond.false74.i_crit_edge, %for.body.i.cond.false74.i_crit_edge
  %74 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %arrayidx23.i, align 8
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  %add79.i = add i32 %77, 4679
  %call80.i = tail call i32 @amdgpu_device_rreg(ptr noundef %37, i32 noundef %add79.i, i32 noundef 0) #15
  br label %cond.end81.i

cond.end81.i:                                     ; preds = %cond.false74.i, %cond.true63.i
  %cond82.i = phi i32 [ %call73.i, %cond.true63.i ], [ %call80.i, %cond.false74.i ]
  %and83.i = and i32 %cond82.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83.i)
  %tobool84.not.i = icmp eq i32 %and83.i, 0
  br i1 %tobool84.not.i, label %cond.end81.i.for.end.i_crit_edge, label %if.end.i

cond.end81.i.for.end.i_crit_edge:                 ; preds = %cond.end81.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

if.end.i:                                         ; preds = %cond.end81.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %78 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %78(i32 noundef 214748) #15
  %inc.i = add nuw nsw i32 %j.02.i, 1
  %79 = ptrtoint ptr %usec_timeout.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %usec_timeout.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %80
  br i1 %cmp.i, label %if.end.i.for.body.i_crit_edge, label %if.end.i.for.end.i_crit_edge

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.end.i:                                        ; preds = %if.end.i.for.end.i_crit_edge, %cond.end81.i.for.end.i_crit_edge
  %j.0.lcssa.i = phi i32 [ %inc.i, %if.end.i.for.end.i_crit_edge ], [ %j.02.i, %cond.end81.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 100000, i32 %j.0.lcssa.i)
  %cmp86.i = icmp eq i32 %j.0.lcssa.i, 100000
  br i1 %cmp86.i, label %if.then87.i, label %for.end.i.do.body120.i_crit_edge

for.end.i.do.body120.i_crit_edge:                 ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body120.i

if.then87.i:                                      ; preds = %for.end.i
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.390) #15
  %81 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx23.i, align 8
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %82, align 4
  %add94.i = add i32 %84, 4679
  %85 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %virt.i, align 8
  %and97.i = and i32 %86, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and97.i)
  %tobool98.not.i = icmp eq i32 %and97.i, 0
  br i1 %tobool98.not.i, label %if.then87.i.cond.false115.i_crit_edge, label %land.lhs.true99.i

if.then87.i.cond.false115.i_crit_edge:            ; preds = %if.then87.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false115.i

land.lhs.true99.i:                                ; preds = %if.then87.i
  %87 = ptrtoint ptr %funcs55.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %funcs55.i, align 4
  %tobool103.not.i = icmp eq ptr %88, null
  br i1 %tobool103.not.i, label %land.lhs.true99.i.cond.false115.i_crit_edge, label %land.lhs.true104.i

land.lhs.true99.i.cond.false115.i_crit_edge:      ; preds = %land.lhs.true99.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false115.i

land.lhs.true104.i:                               ; preds = %land.lhs.true99.i
  %sriov_wreg108.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %88, i32 0, i32 12
  %89 = ptrtoint ptr %sriov_wreg108.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %sriov_wreg108.i, align 4
  %tobool109.not.i = icmp eq ptr %90, null
  br i1 %tobool109.not.i, label %land.lhs.true104.i.cond.false115.i_crit_edge, label %cond.true110.i

land.lhs.true104.i.cond.false115.i_crit_edge:     ; preds = %land.lhs.true104.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false115.i

cond.true110.i:                                   ; preds = %land.lhs.true104.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %90(ptr noundef %37, i32 noundef %add94.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %do.body120.i

cond.false115.i:                                  ; preds = %land.lhs.true104.i.cond.false115.i_crit_edge, %land.lhs.true99.i.cond.false115.i_crit_edge, %if.then87.i.cond.false115.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add94.i, i32 noundef 0, i32 noundef 0) #15
  br label %do.body120.i

do.body120.i:                                     ; preds = %cond.false115.i, %cond.true110.i, %for.end.i.do.body120.i_crit_edge, %cond.end47.i.do.body120.i_crit_edge
  %91 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx23.i, align 8
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %92, align 4
  %add126.i = add i32 %94, 4701
  %95 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %virt.i, align 8
  %and129.i = and i32 %96, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and129.i)
  %tobool130.not.i = icmp eq i32 %and129.i, 0
  br i1 %tobool130.not.i, label %do.body120.i.cond.false147.i_crit_edge, label %land.lhs.true131.i

do.body120.i.cond.false147.i_crit_edge:           ; preds = %do.body120.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false147.i

land.lhs.true131.i:                               ; preds = %do.body120.i
  %funcs134.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %97 = ptrtoint ptr %funcs134.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %funcs134.i, align 4
  %tobool135.not.i = icmp eq ptr %98, null
  br i1 %tobool135.not.i, label %land.lhs.true131.i.cond.false147.i_crit_edge, label %land.lhs.true136.i

land.lhs.true131.i.cond.false147.i_crit_edge:     ; preds = %land.lhs.true131.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false147.i

land.lhs.true136.i:                               ; preds = %land.lhs.true131.i
  %sriov_wreg140.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %98, i32 0, i32 12
  %99 = ptrtoint ptr %sriov_wreg140.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %sriov_wreg140.i, align 4
  %tobool141.not.i = icmp eq ptr %100, null
  br i1 %tobool141.not.i, label %land.lhs.true136.i.cond.false147.i_crit_edge, label %cond.true142.i

land.lhs.true136.i.cond.false147.i_crit_edge:     ; preds = %land.lhs.true136.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false147.i

cond.true142.i:                                   ; preds = %land.lhs.true136.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %100(ptr noundef %37, i32 noundef %add126.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %do.body152.i

cond.false147.i:                                  ; preds = %land.lhs.true136.i.cond.false147.i_crit_edge, %land.lhs.true131.i.cond.false147.i_crit_edge, %do.body120.i.cond.false147.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add126.i, i32 noundef 0, i32 noundef 0) #15
  br label %do.body152.i

do.body152.i:                                     ; preds = %cond.false147.i, %cond.true142.i, %cond.end.i.do.body152.i_crit_edge
  %arrayidx155.i = getelementptr %struct.amdgpu_device, ptr %37, i32 0, i32 130, i32 1
  %101 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx155.i, align 8
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %102, align 4
  %add158.i = add i32 %104, 4699
  %105 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %virt.i, align 8
  %and161.i = and i32 %106, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and161.i)
  %tobool162.not.i = icmp eq i32 %and161.i, 0
  br i1 %tobool162.not.i, label %do.body152.i.cond.false179.i_crit_edge, label %land.lhs.true163.i

do.body152.i.cond.false179.i_crit_edge:           ; preds = %do.body152.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false179.i

land.lhs.true163.i:                               ; preds = %do.body152.i
  %funcs166.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %107 = ptrtoint ptr %funcs166.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %funcs166.i, align 4
  %tobool167.not.i = icmp eq ptr %108, null
  br i1 %tobool167.not.i, label %land.lhs.true163.i.cond.false179.i_crit_edge, label %land.lhs.true168.i

land.lhs.true163.i.cond.false179.i_crit_edge:     ; preds = %land.lhs.true163.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false179.i

land.lhs.true168.i:                               ; preds = %land.lhs.true163.i
  %sriov_wreg172.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %108, i32 0, i32 12
  %109 = ptrtoint ptr %sriov_wreg172.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %sriov_wreg172.i, align 4
  %tobool173.not.i = icmp eq ptr %110, null
  br i1 %tobool173.not.i, label %land.lhs.true168.i.cond.false179.i_crit_edge, label %cond.true174.i

land.lhs.true168.i.cond.false179.i_crit_edge:     ; preds = %land.lhs.true168.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false179.i

cond.true174.i:                                   ; preds = %land.lhs.true168.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %110(ptr noundef %37, i32 noundef %add158.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end180.i

cond.false179.i:                                  ; preds = %land.lhs.true168.i.cond.false179.i_crit_edge, %land.lhs.true163.i.cond.false179.i_crit_edge, %do.body152.i.cond.false179.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add158.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end180.i

cond.end180.i:                                    ; preds = %cond.false179.i, %cond.true174.i
  %111 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %arrayidx155.i, align 8
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %112, align 4
  %add189.i = add i32 %114, 4698
  %115 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %virt.i, align 8
  %and192.i = and i32 %116, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and192.i)
  %tobool193.not.i = icmp eq i32 %and192.i, 0
  br i1 %tobool193.not.i, label %cond.end180.i.cond.false210.i_crit_edge, label %land.lhs.true194.i

cond.end180.i.cond.false210.i_crit_edge:          ; preds = %cond.end180.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210.i

land.lhs.true194.i:                               ; preds = %cond.end180.i
  %funcs197.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %117 = ptrtoint ptr %funcs197.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %funcs197.i, align 4
  %tobool198.not.i = icmp eq ptr %118, null
  br i1 %tobool198.not.i, label %land.lhs.true194.i.cond.false210.i_crit_edge, label %land.lhs.true199.i

land.lhs.true194.i.cond.false210.i_crit_edge:     ; preds = %land.lhs.true194.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210.i

land.lhs.true199.i:                               ; preds = %land.lhs.true194.i
  %sriov_wreg203.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %118, i32 0, i32 12
  %119 = ptrtoint ptr %sriov_wreg203.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %sriov_wreg203.i, align 4
  %tobool204.not.i = icmp eq ptr %120, null
  br i1 %tobool204.not.i, label %land.lhs.true199.i.cond.false210.i_crit_edge, label %cond.true205.i

land.lhs.true199.i.cond.false210.i_crit_edge:     ; preds = %land.lhs.true199.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210.i

cond.true205.i:                                   ; preds = %land.lhs.true199.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %120(ptr noundef %37, i32 noundef %add189.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end211.i

cond.false210.i:                                  ; preds = %land.lhs.true199.i.cond.false210.i_crit_edge, %land.lhs.true194.i.cond.false210.i_crit_edge, %cond.end180.i.cond.false210.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add189.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end211.i

cond.end211.i:                                    ; preds = %cond.false210.i, %cond.true205.i
  %121 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %arrayidx155.i, align 8
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %122, align 4
  %add220.i = add i32 %124, 4681
  %125 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %virt.i, align 8
  %and223.i = and i32 %126, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and223.i)
  %tobool224.not.i = icmp eq i32 %and223.i, 0
  br i1 %tobool224.not.i, label %cond.end211.i.cond.false241.i_crit_edge, label %land.lhs.true225.i

cond.end211.i.cond.false241.i_crit_edge:          ; preds = %cond.end211.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241.i

land.lhs.true225.i:                               ; preds = %cond.end211.i
  %funcs228.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %127 = ptrtoint ptr %funcs228.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %funcs228.i, align 4
  %tobool229.not.i = icmp eq ptr %128, null
  br i1 %tobool229.not.i, label %land.lhs.true225.i.cond.false241.i_crit_edge, label %land.lhs.true230.i

land.lhs.true225.i.cond.false241.i_crit_edge:     ; preds = %land.lhs.true225.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241.i

land.lhs.true230.i:                               ; preds = %land.lhs.true225.i
  %sriov_wreg234.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %128, i32 0, i32 12
  %129 = ptrtoint ptr %sriov_wreg234.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %sriov_wreg234.i, align 4
  %tobool235.not.i = icmp eq ptr %130, null
  br i1 %tobool235.not.i, label %land.lhs.true230.i.cond.false241.i_crit_edge, label %cond.true236.i

land.lhs.true230.i.cond.false241.i_crit_edge:     ; preds = %land.lhs.true230.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241.i

cond.true236.i:                                   ; preds = %land.lhs.true230.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %130(ptr noundef %37, i32 noundef %add220.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end242.i

cond.false241.i:                                  ; preds = %land.lhs.true230.i.cond.false241.i_crit_edge, %land.lhs.true225.i.cond.false241.i_crit_edge, %cond.end211.i.cond.false241.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add220.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end242.i

cond.end242.i:                                    ; preds = %cond.false241.i, %cond.true236.i
  %131 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %arrayidx155.i, align 8
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %132, align 4
  %add251.i = add i32 %134, 4692
  %135 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %virt.i, align 8
  %and254.i = and i32 %136, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and254.i)
  %tobool255.not.i = icmp eq i32 %and254.i, 0
  br i1 %tobool255.not.i, label %cond.end242.i.cond.false272.i_crit_edge, label %land.lhs.true256.i

cond.end242.i.cond.false272.i_crit_edge:          ; preds = %cond.end242.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272.i

land.lhs.true256.i:                               ; preds = %cond.end242.i
  %funcs259.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %137 = ptrtoint ptr %funcs259.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %funcs259.i, align 4
  %tobool260.not.i = icmp eq ptr %138, null
  br i1 %tobool260.not.i, label %land.lhs.true256.i.cond.false272.i_crit_edge, label %land.lhs.true261.i

land.lhs.true256.i.cond.false272.i_crit_edge:     ; preds = %land.lhs.true256.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272.i

land.lhs.true261.i:                               ; preds = %land.lhs.true256.i
  %sriov_wreg265.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %138, i32 0, i32 12
  %139 = ptrtoint ptr %sriov_wreg265.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %sriov_wreg265.i, align 4
  %tobool266.not.i = icmp eq ptr %140, null
  br i1 %tobool266.not.i, label %land.lhs.true261.i.cond.false272.i_crit_edge, label %cond.true267.i

land.lhs.true261.i.cond.false272.i_crit_edge:     ; preds = %land.lhs.true261.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272.i

cond.true267.i:                                   ; preds = %land.lhs.true261.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %140(ptr noundef %37, i32 noundef %add251.i, i32 noundef 1073741824, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end273.i

cond.false272.i:                                  ; preds = %land.lhs.true261.i.cond.false272.i_crit_edge, %land.lhs.true256.i.cond.false272.i_crit_edge, %cond.end242.i.cond.false272.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add251.i, i32 noundef 1073741824, i32 noundef 0) #15
  br label %cond.end273.i

cond.end273.i:                                    ; preds = %cond.false272.i, %cond.true267.i
  %141 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %arrayidx155.i, align 8
  %143 = ptrtoint ptr %142 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %142, align 4
  %add282.i = add i32 %144, 4692
  %145 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %virt.i, align 8
  %and285.i = and i32 %146, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and285.i)
  %tobool286.not.i = icmp eq i32 %and285.i, 0
  br i1 %tobool286.not.i, label %cond.end273.i.cond.false303.i_crit_edge, label %land.lhs.true287.i

cond.end273.i.cond.false303.i_crit_edge:          ; preds = %cond.end273.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false303.i

land.lhs.true287.i:                               ; preds = %cond.end273.i
  %funcs290.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %147 = ptrtoint ptr %funcs290.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %funcs290.i, align 4
  %tobool291.not.i = icmp eq ptr %148, null
  br i1 %tobool291.not.i, label %land.lhs.true287.i.cond.false303.i_crit_edge, label %land.lhs.true292.i

land.lhs.true287.i.cond.false303.i_crit_edge:     ; preds = %land.lhs.true287.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false303.i

land.lhs.true292.i:                               ; preds = %land.lhs.true287.i
  %sriov_wreg296.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %148, i32 0, i32 12
  %149 = ptrtoint ptr %sriov_wreg296.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %sriov_wreg296.i, align 4
  %tobool297.not.i = icmp eq ptr %150, null
  br i1 %tobool297.not.i, label %land.lhs.true292.i.cond.false303.i_crit_edge, label %cond.true298.i

land.lhs.true292.i.cond.false303.i_crit_edge:     ; preds = %land.lhs.true292.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false303.i

cond.true298.i:                                   ; preds = %land.lhs.true292.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %150(ptr noundef %37, i32 noundef %add282.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end304.i

cond.false303.i:                                  ; preds = %land.lhs.true292.i.cond.false303.i_crit_edge, %land.lhs.true287.i.cond.false303.i_crit_edge, %cond.end273.i.cond.false303.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add282.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end304.i

cond.end304.i:                                    ; preds = %cond.false303.i, %cond.true298.i
  %151 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %arrayidx155.i, align 8
  %153 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %152, align 4
  %add313.i = add i32 %154, 4687
  %155 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %virt.i, align 8
  %and316.i = and i32 %156, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and316.i)
  %tobool317.not.i = icmp eq i32 %and316.i, 0
  br i1 %tobool317.not.i, label %cond.end304.i.cond.false334.i_crit_edge, label %land.lhs.true318.i

cond.end304.i.cond.false334.i_crit_edge:          ; preds = %cond.end304.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false334.i

land.lhs.true318.i:                               ; preds = %cond.end304.i
  %funcs321.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %157 = ptrtoint ptr %funcs321.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %funcs321.i, align 4
  %tobool322.not.i = icmp eq ptr %158, null
  br i1 %tobool322.not.i, label %land.lhs.true318.i.cond.false334.i_crit_edge, label %land.lhs.true323.i

land.lhs.true318.i.cond.false334.i_crit_edge:     ; preds = %land.lhs.true318.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false334.i

land.lhs.true323.i:                               ; preds = %land.lhs.true318.i
  %sriov_wreg327.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %158, i32 0, i32 12
  %159 = ptrtoint ptr %sriov_wreg327.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %sriov_wreg327.i, align 4
  %tobool328.not.i = icmp eq ptr %160, null
  br i1 %tobool328.not.i, label %land.lhs.true323.i.cond.false334.i_crit_edge, label %cond.true329.i

land.lhs.true323.i.cond.false334.i_crit_edge:     ; preds = %land.lhs.true323.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false334.i

cond.true329.i:                                   ; preds = %land.lhs.true323.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %160(ptr noundef %37, i32 noundef %add313.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end335.i

cond.false334.i:                                  ; preds = %land.lhs.true323.i.cond.false334.i_crit_edge, %land.lhs.true318.i.cond.false334.i_crit_edge, %cond.end304.i.cond.false334.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add313.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end335.i

cond.end335.i:                                    ; preds = %cond.false334.i, %cond.true329.i
  %161 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %arrayidx155.i, align 8
  %163 = ptrtoint ptr %162 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %162, align 4
  %add344.i = add i32 %164, 4732
  %165 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %virt.i, align 8
  %and347.i = and i32 %166, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and347.i)
  %tobool348.not.i = icmp eq i32 %and347.i, 0
  br i1 %tobool348.not.i, label %cond.end335.i.cond.false365.i_crit_edge, label %land.lhs.true349.i

cond.end335.i.cond.false365.i_crit_edge:          ; preds = %cond.end335.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false365.i

land.lhs.true349.i:                               ; preds = %cond.end335.i
  %funcs352.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %167 = ptrtoint ptr %funcs352.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %funcs352.i, align 4
  %tobool353.not.i = icmp eq ptr %168, null
  br i1 %tobool353.not.i, label %land.lhs.true349.i.cond.false365.i_crit_edge, label %land.lhs.true354.i

land.lhs.true349.i.cond.false365.i_crit_edge:     ; preds = %land.lhs.true349.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false365.i

land.lhs.true354.i:                               ; preds = %land.lhs.true349.i
  %sriov_wreg358.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %168, i32 0, i32 12
  %169 = ptrtoint ptr %sriov_wreg358.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %sriov_wreg358.i, align 4
  %tobool359.not.i = icmp eq ptr %170, null
  br i1 %tobool359.not.i, label %land.lhs.true354.i.cond.false365.i_crit_edge, label %cond.true360.i

land.lhs.true354.i.cond.false365.i_crit_edge:     ; preds = %land.lhs.true354.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false365.i

cond.true360.i:                                   ; preds = %land.lhs.true354.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %170(ptr noundef %37, i32 noundef %add344.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end366.i

cond.false365.i:                                  ; preds = %land.lhs.true354.i.cond.false365.i_crit_edge, %land.lhs.true349.i.cond.false365.i_crit_edge, %cond.end335.i.cond.false365.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add344.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end366.i

cond.end366.i:                                    ; preds = %cond.false365.i, %cond.true360.i
  %171 = ptrtoint ptr %arrayidx155.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %arrayidx155.i, align 8
  %173 = ptrtoint ptr %172 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %172, align 4
  %add375.i = add i32 %174, 4731
  %175 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %virt.i, align 8
  %and378.i = and i32 %176, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and378.i)
  %tobool379.not.i = icmp eq i32 %and378.i, 0
  br i1 %tobool379.not.i, label %cond.end366.i.cond.false396.i_crit_edge, label %land.lhs.true380.i

cond.end366.i.cond.false396.i_crit_edge:          ; preds = %cond.end366.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false396.i

land.lhs.true380.i:                               ; preds = %cond.end366.i
  %funcs383.i = getelementptr inbounds %struct.amdgpu_device, ptr %37, i32 0, i32 106, i32 2, i32 15
  %177 = ptrtoint ptr %funcs383.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %funcs383.i, align 4
  %tobool384.not.i = icmp eq ptr %178, null
  br i1 %tobool384.not.i, label %land.lhs.true380.i.cond.false396.i_crit_edge, label %land.lhs.true385.i

land.lhs.true380.i.cond.false396.i_crit_edge:     ; preds = %land.lhs.true380.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false396.i

land.lhs.true385.i:                               ; preds = %land.lhs.true380.i
  %sriov_wreg389.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %178, i32 0, i32 12
  %179 = ptrtoint ptr %sriov_wreg389.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %sriov_wreg389.i, align 4
  %tobool390.not.i = icmp eq ptr %180, null
  br i1 %tobool390.not.i, label %land.lhs.true385.i.cond.false396.i_crit_edge, label %cond.true391.i

land.lhs.true385.i.cond.false396.i_crit_edge:     ; preds = %land.lhs.true385.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false396.i

cond.true391.i:                                   ; preds = %land.lhs.true385.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %180(ptr noundef %37, i32 noundef %add375.i, i32 noundef 0, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_kiq_fini_register.exit

cond.false396.i:                                  ; preds = %land.lhs.true385.i.cond.false396.i_crit_edge, %land.lhs.true380.i.cond.false396.i_crit_edge, %cond.end366.i.cond.false396.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %37, i32 noundef %add375.i, i32 noundef 0, i32 noundef 0) #15
  br label %gfx_v9_0_kiq_fini_register.exit

gfx_v9_0_kiq_fini_register.exit:                  ; preds = %cond.false396.i, %cond.true391.i
  tail call void @soc15_grbm_select(ptr noundef %handle, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0) #15
  tail call void @mutex_unlock(ptr noundef %srbm_mutex) #15
  br label %if.end119

if.end119:                                        ; preds = %gfx_v9_0_kiq_fini_register.exit, %land.lhs.true104.if.end119_crit_edge, %if.end101.if.end119_crit_edge
  %num_gfx_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %181 = ptrtoint ptr %num_gfx_rings.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %num_gfx_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %182)
  %tobool.not.i191 = icmp eq i32 %182, 0
  br i1 %tobool.not.i191, label %if.end119.if.end.i192_crit_edge, label %if.then.i

if.end119.if.end.i192_crit_edge:                  ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i192

if.then.i:                                        ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext false) #15
  br label %if.end.i192

if.end.i192:                                      ; preds = %if.then.i, %if.end119.if.end.i192_crit_edge
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %183 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %arrayidx.i.i, align 8
  %185 = ptrtoint ptr %184 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %184, align 4
  %add.i.i = add i32 %186, 141
  %187 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %virt, align 8
  %and.i.i = and i32 %188, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool3.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool3.not.i.i, label %if.end.i192.cond.false41.i.i_crit_edge, label %land.lhs.true25.i.i

if.end.i192.cond.false41.i.i_crit_edge:           ; preds = %if.end.i192
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i.i

land.lhs.true25.i.i:                              ; preds = %if.end.i192
  %funcs28.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %189 = ptrtoint ptr %funcs28.i.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %funcs28.i.i, align 4
  %tobool29.not.i.i = icmp eq ptr %190, null
  br i1 %tobool29.not.i.i, label %land.lhs.true25.i.i.cond.false41.i.i_crit_edge, label %land.lhs.true30.i.i

land.lhs.true25.i.i.cond.false41.i.i_crit_edge:   ; preds = %land.lhs.true25.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i.i

land.lhs.true30.i.i:                              ; preds = %land.lhs.true25.i.i
  %sriov_wreg34.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %190, i32 0, i32 12
  %191 = ptrtoint ptr %sriov_wreg34.i.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %sriov_wreg34.i.i, align 4
  %tobool35.not.i.i = icmp eq ptr %192, null
  br i1 %tobool35.not.i.i, label %land.lhs.true30.i.i.cond.false41.i.i_crit_edge, label %cond.true36.i.i

land.lhs.true30.i.i.cond.false41.i.i_crit_edge:   ; preds = %land.lhs.true30.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i.i

cond.true36.i.i:                                  ; preds = %land.lhs.true30.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %192(ptr noundef %handle, i32 noundef %add.i.i, i32 noundef 1342177280, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_cp_enable.exit

cond.false41.i.i:                                 ; preds = %land.lhs.true30.i.i.cond.false41.i.i_crit_edge, %land.lhs.true25.i.i.cond.false41.i.i_crit_edge, %if.end.i192.cond.false41.i.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add.i.i, i32 noundef 1342177280, i32 noundef 0) #15
  br label %gfx_v9_0_cp_enable.exit

gfx_v9_0_cp_enable.exit:                          ; preds = %cond.false41.i.i, %cond.true36.i.i
  %ready.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 3, i32 17
  %193 = ptrtoint ptr %ready.i.i to i32
  call void @__asan_store1_noabort(i32 %193)
  store i8 0, ptr %ready.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %194 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %194(i32 noundef 10737400) #15
  %connected_to_cpu = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 39, i32 8
  %195 = ptrtoint ptr %connected_to_cpu to i32
  call void @__asan_load1_noabort(i32 %195)
  %196 = load i8, ptr %connected_to_cpu, align 8, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %196)
  %tobool120.not = icmp eq i8 %196, 0
  br i1 %tobool120.not, label %gfx_v9_0_cp_enable.exit.lor.lhs.false_crit_edge, label %land.lhs.true121

gfx_v9_0_cp_enable.exit.lor.lhs.false_crit_edge:  ; preds = %gfx_v9_0_cp_enable.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.lhs.false

land.lhs.true121:                                 ; preds = %gfx_v9_0_cp_enable.exit
  %call.i.i.i194 = tail call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i, i32 noundef 4) #15
  %197 = ptrtoint ptr %in_gpu_reset.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load volatile i32, ptr %in_gpu_reset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %198)
  %tobool123.not = icmp eq i32 %198, 0
  br i1 %tobool123.not, label %land.lhs.true121.lor.lhs.false_crit_edge, label %land.lhs.true121.do.body_crit_edge

land.lhs.true121.do.body_crit_edge:               ; preds = %land.lhs.true121
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body

land.lhs.true121.lor.lhs.false_crit_edge:         ; preds = %land.lhs.true121
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true121.lor.lhs.false_crit_edge, %gfx_v9_0_cp_enable.exit.lor.lhs.false_crit_edge
  %arrayidx124 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %199 = ptrtoint ptr %arrayidx124 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %arrayidx124, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590849, i32 %200)
  %cmp = icmp ugt i32 %200, 590849
  br i1 %cmp, label %lor.lhs.false.do.body_crit_edge, label %if.end133

lor.lhs.false.do.body_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body

do.body:                                          ; preds = %lor.lhs.false.do.body_crit_edge, %land.lhs.true121.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gfx_v9_0_hw_fini.__UNIQUE_ID_ddebug397, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gfx_v9_0_hw_fini, %if.then131)) #15
          to label %cleanup [label %if.then131], !srcloc !1015

if.then131:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  %201 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %handle, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @gfx_v9_0_hw_fini.__UNIQUE_ID_ddebug397, ptr noundef %202, ptr noundef nonnull @.str.389) #15
  br label %cleanup

if.end133:                                        ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  %funcs136 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %203 = ptrtoint ptr %funcs136 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %funcs136, align 4
  %stop = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %204, i32 0, i32 8
  %205 = ptrtoint ptr %stop to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %stop, align 4
  tail call void %206(ptr noundef %handle) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end133, %if.then131, %do.body, %cond.end96, %cond.end
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_suspend(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @gfx_v9_0_hw_fini(ptr noundef %handle)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_resume(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @gfx_v9_0_hw_init(ptr noundef %handle)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @gfx_v9_0_is_idle(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4
  %call = tail call i32 %5(ptr noundef %handle, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 4
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %cond)
  %tobool20.not = icmp sgt i32 %cond, -1
  ret i1 %tobool20.not
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_wait_for_idle(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 11
  %0 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp4.not = icmp eq i32 %1, 0
  br i1 %cmp4.not, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %i.05 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.for.body_crit_edge ]
  %2 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.body.cond.false.i_crit_edge, label %land.lhs.true.i

for.body.cond.false.i_crit_edge:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %for.body
  %4 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %5, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool6.not.i = icmp eq ptr %7, null
  br i1 %tobool6.not.i, label %land.lhs.true2.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true2.i.cond.false.i_crit_edge:          ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add.i = add i32 %11, 4
  %call.i = tail call i32 %7(ptr noundef %handle, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #15
  br label %gfx_v9_0_is_idle.exit

cond.false.i:                                     ; preds = %land.lhs.true2.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %for.body.cond.false.i_crit_edge
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add17.i = add i32 %15, 4
  %call18.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17.i, i32 noundef 0) #15
  br label %gfx_v9_0_is_idle.exit

gfx_v9_0_is_idle.exit:                            ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call18.i, %cond.false.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %cond.i)
  %tobool20.not.i = icmp sgt i32 %cond.i, -1
  br i1 %tobool20.not.i, label %gfx_v9_0_is_idle.exit.cleanup_crit_edge, label %if.end

gfx_v9_0_is_idle.exit.cleanup_crit_edge:          ; preds = %gfx_v9_0_is_idle.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %gfx_v9_0_is_idle.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %16 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %16(i32 noundef 214748) #15
  %inc = add nuw i32 %i.05, 1
  %17 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp ult i32 %inc, %18
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

cleanup:                                          ; preds = %if.end.cleanup_crit_edge, %gfx_v9_0_is_idle.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -110, %entry.cleanup_crit_edge ], [ -110, %if.end.cleanup_crit_edge ], [ 0, %gfx_v9_0_is_idle.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_soft_reset(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4
  %call = tail call i32 %5(ptr noundef %handle, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 4
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add17, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, 1205780480
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  %spec.select = select i1 %tobool20.not, i32 0, i32 65537
  %and24 = and i32 %cond, 805306368
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp ne i32 %and24, 0
  %or28 = zext i1 %tobool25.not to i32
  %grbm_soft_reset.1 = or i32 %spec.select, %or28
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and32 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %cond.end.cond.false56_crit_edge, label %land.lhs.true34

cond.end.cond.false56_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56

land.lhs.true34:                                  ; preds = %cond.end
  %funcs37 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs37 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs37, align 4
  %tobool38.not = icmp eq ptr %17, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false56_crit_edge, label %land.lhs.true39

land.lhs.true34.cond.false56_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %sriov_rreg43 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %sriov_rreg43 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_rreg43, align 4
  %tobool44.not = icmp eq ptr %19, null
  br i1 %tobool44.not, label %land.lhs.true39.cond.false56_crit_edge, label %cond.true45

land.lhs.true39.cond.false56_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56

cond.true45:                                      ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx51 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx51, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add54 = add i32 %23, 2
  %call55 = tail call i32 %19(ptr noundef %handle, i32 noundef %add54, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end63

cond.false56:                                     ; preds = %land.lhs.true39.cond.false56_crit_edge, %land.lhs.true34.cond.false56_crit_edge, %cond.end.cond.false56_crit_edge
  %arrayidx58 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx58, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %add61 = add i32 %27, 2
  %call62 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add61, i32 noundef 0) #15
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false56, %cond.true45
  %cond64 = phi i32 [ %call55, %cond.true45 ], [ %call62, %cond.false56 ]
  %28 = lshr i32 %cond64, 22
  %29 = and i32 %28, 4
  %30 = or i32 %grbm_soft_reset.1, %29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool71.not = icmp eq i32 %30, 0
  br i1 %tobool71.not, label %cond.end63.if.end253_crit_edge, label %if.then72

cond.end63.if.end253_crit_edge:                   ; preds = %cond.end63
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end253

if.then72:                                        ; preds = %cond.end63
  %funcs75 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 2, i32 15
  %31 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %funcs75, align 4
  %stop = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %32, i32 0, i32 8
  %33 = ptrtoint ptr %stop to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %stop, align 4
  tail call void %34(ptr noundef %handle) #15
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 37
  %35 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool77.not = icmp eq i32 %36, 0
  br i1 %tobool77.not, label %if.then72.if.end79_crit_edge, label %if.then78

if.then72.if.end79_crit_edge:                     ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end79

if.then78:                                        ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_cp_gfx_enable(ptr noundef %handle, i1 noundef zeroext false)
  br label %if.end79

if.end79:                                         ; preds = %if.then78, %if.then72.if.end79_crit_edge
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %37 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx.i, align 8
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 4
  %add.i = add i32 %40, 141
  %41 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %virt, align 8
  %and.i = and i32 %42, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i, label %if.end79.cond.false41.i_crit_edge, label %land.lhs.true25.i

if.end79.cond.false41.i_crit_edge:                ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i

land.lhs.true25.i:                                ; preds = %if.end79
  %43 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %funcs75, align 4
  %tobool29.not.i = icmp eq ptr %44, null
  br i1 %tobool29.not.i, label %land.lhs.true25.i.cond.false41.i_crit_edge, label %land.lhs.true30.i

land.lhs.true25.i.cond.false41.i_crit_edge:       ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i

land.lhs.true30.i:                                ; preds = %land.lhs.true25.i
  %sriov_wreg34.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %44, i32 0, i32 12
  %45 = ptrtoint ptr %sriov_wreg34.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %sriov_wreg34.i, align 4
  %tobool35.not.i = icmp eq ptr %46, null
  br i1 %tobool35.not.i, label %land.lhs.true30.i.cond.false41.i_crit_edge, label %cond.true36.i

land.lhs.true30.i.cond.false41.i_crit_edge:       ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false41.i

cond.true36.i:                                    ; preds = %land.lhs.true30.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %46(ptr noundef %handle, i32 noundef %add.i, i32 noundef 1342177280, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_cp_compute_enable.exit

cond.false41.i:                                   ; preds = %land.lhs.true30.i.cond.false41.i_crit_edge, %land.lhs.true25.i.cond.false41.i_crit_edge, %if.end79.cond.false41.i_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add.i, i32 noundef 1342177280, i32 noundef 0) #15
  br label %gfx_v9_0_cp_compute_enable.exit

gfx_v9_0_cp_compute_enable.exit:                  ; preds = %cond.false41.i, %cond.true36.i
  %ready.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 106, i32 7, i32 3, i32 3, i32 17
  %47 = ptrtoint ptr %ready.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 0, ptr %ready.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %48 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %48(i32 noundef 10737400) #15
  %49 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %virt, align 8
  %and84 = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %gfx_v9_0_cp_compute_enable.exit.cond.false108_crit_edge, label %land.lhs.true86

gfx_v9_0_cp_compute_enable.exit.cond.false108_crit_edge: ; preds = %gfx_v9_0_cp_compute_enable.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false108

land.lhs.true86:                                  ; preds = %gfx_v9_0_cp_compute_enable.exit
  %51 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %funcs75, align 4
  %tobool90.not = icmp eq ptr %52, null
  br i1 %tobool90.not, label %land.lhs.true86.cond.false108_crit_edge, label %land.lhs.true91

land.lhs.true86.cond.false108_crit_edge:          ; preds = %land.lhs.true86
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false108

land.lhs.true91:                                  ; preds = %land.lhs.true86
  %sriov_rreg95 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %52, i32 0, i32 13
  %53 = ptrtoint ptr %sriov_rreg95 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %sriov_rreg95, align 4
  %tobool96.not = icmp eq ptr %54, null
  br i1 %tobool96.not, label %land.lhs.true91.cond.false108_crit_edge, label %cond.true97

land.lhs.true91.cond.false108_crit_edge:          ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false108

cond.true97:                                      ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #17
  %55 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx.i, align 8
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 4
  %add106 = add i32 %58, 8
  %call107 = tail call i32 %54(ptr noundef %handle, i32 noundef %add106, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end115

cond.false108:                                    ; preds = %land.lhs.true91.cond.false108_crit_edge, %land.lhs.true86.cond.false108_crit_edge, %gfx_v9_0_cp_compute_enable.exit.cond.false108_crit_edge
  %59 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx.i, align 8
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %60, align 4
  %add113 = add i32 %62, 8
  %call114 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add113, i32 noundef 0) #15
  br label %cond.end115

cond.end115:                                      ; preds = %cond.false108, %cond.true97
  %cond116 = phi i32 [ %call107, %cond.true97 ], [ %call114, %cond.false108 ]
  %or117 = or i32 %cond116, %30
  %63 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %handle, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %64, ptr noundef nonnull @.str.391, i32 noundef %or117) #18
  %65 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %virt, align 8
  %and120 = and i32 %66, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and120)
  %tobool121.not = icmp eq i32 %and120, 0
  br i1 %tobool121.not, label %cond.end115.cond.false142_crit_edge, label %land.lhs.true122

cond.end115.cond.false142_crit_edge:              ; preds = %cond.end115
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false142

land.lhs.true122:                                 ; preds = %cond.end115
  %67 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %funcs75, align 4
  %tobool126.not = icmp eq ptr %68, null
  br i1 %tobool126.not, label %land.lhs.true122.cond.false142_crit_edge, label %land.lhs.true127

land.lhs.true122.cond.false142_crit_edge:         ; preds = %land.lhs.true122
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false142

land.lhs.true127:                                 ; preds = %land.lhs.true122
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %68, i32 0, i32 12
  %69 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %sriov_wreg, align 4
  %tobool131.not = icmp eq ptr %70, null
  br i1 %tobool131.not, label %land.lhs.true127.cond.false142_crit_edge, label %cond.true132

land.lhs.true127.cond.false142_crit_edge:         ; preds = %land.lhs.true127
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false142

cond.true132:                                     ; preds = %land.lhs.true127
  call void @__sanitizer_cov_trace_pc() #17
  %71 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx.i, align 8
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %72, align 4
  %add141 = add i32 %74, 8
  tail call void %70(ptr noundef %handle, i32 noundef %add141, i32 noundef %or117, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end148

cond.false142:                                    ; preds = %land.lhs.true127.cond.false142_crit_edge, %land.lhs.true122.cond.false142_crit_edge, %cond.end115.cond.false142_crit_edge
  %75 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %arrayidx.i, align 8
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %76, align 4
  %add147 = add i32 %78, 8
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add147, i32 noundef %or117, i32 noundef 0) #15
  br label %cond.end148

cond.end148:                                      ; preds = %cond.false142, %cond.true132
  %79 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %virt, align 8
  %and151 = and i32 %80, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and151)
  %tobool152.not = icmp eq i32 %and151, 0
  br i1 %tobool152.not, label %cond.end148.cond.false175_crit_edge, label %land.lhs.true153

cond.end148.cond.false175_crit_edge:              ; preds = %cond.end148
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false175

land.lhs.true153:                                 ; preds = %cond.end148
  %81 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %funcs75, align 4
  %tobool157.not = icmp eq ptr %82, null
  br i1 %tobool157.not, label %land.lhs.true153.cond.false175_crit_edge, label %land.lhs.true158

land.lhs.true153.cond.false175_crit_edge:         ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false175

land.lhs.true158:                                 ; preds = %land.lhs.true153
  %sriov_rreg162 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %82, i32 0, i32 13
  %83 = ptrtoint ptr %sriov_rreg162 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %sriov_rreg162, align 4
  %tobool163.not = icmp eq ptr %84, null
  br i1 %tobool163.not, label %land.lhs.true158.cond.false175_crit_edge, label %cond.true164

land.lhs.true158.cond.false175_crit_edge:         ; preds = %land.lhs.true158
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false175

cond.true164:                                     ; preds = %land.lhs.true158
  call void @__sanitizer_cov_trace_pc() #17
  %85 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx.i, align 8
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %86, align 4
  %add173 = add i32 %88, 8
  %call174 = tail call i32 %84(ptr noundef %handle, i32 noundef %add173, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end182

cond.false175:                                    ; preds = %land.lhs.true158.cond.false175_crit_edge, %land.lhs.true153.cond.false175_crit_edge, %cond.end148.cond.false175_crit_edge
  %89 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx.i, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add180 = add i32 %92, 8
  %call181 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add180, i32 noundef 0) #15
  br label %cond.end182

cond.end182:                                      ; preds = %cond.false175, %cond.true164
  %cond183 = phi i32 [ %call174, %cond.true164 ], [ %call181, %cond.false175 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %93 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %93(i32 noundef 10737400) #15
  %neg = xor i32 %30, -1
  %and184 = and i32 %cond183, %neg
  %94 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %virt, align 8
  %and187 = and i32 %95, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and187)
  %tobool188.not = icmp eq i32 %and187, 0
  br i1 %tobool188.not, label %cond.end182.cond.false210_crit_edge, label %land.lhs.true189

cond.end182.cond.false210_crit_edge:              ; preds = %cond.end182
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210

land.lhs.true189:                                 ; preds = %cond.end182
  %96 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %funcs75, align 4
  %tobool193.not = icmp eq ptr %97, null
  br i1 %tobool193.not, label %land.lhs.true189.cond.false210_crit_edge, label %land.lhs.true194

land.lhs.true189.cond.false210_crit_edge:         ; preds = %land.lhs.true189
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210

land.lhs.true194:                                 ; preds = %land.lhs.true189
  %sriov_wreg198 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %97, i32 0, i32 12
  %98 = ptrtoint ptr %sriov_wreg198 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %sriov_wreg198, align 4
  %tobool199.not = icmp eq ptr %99, null
  br i1 %tobool199.not, label %land.lhs.true194.cond.false210_crit_edge, label %cond.true200

land.lhs.true194.cond.false210_crit_edge:         ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false210

cond.true200:                                     ; preds = %land.lhs.true194
  call void @__sanitizer_cov_trace_pc() #17
  %100 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %arrayidx.i, align 8
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %101, align 4
  %add209 = add i32 %103, 8
  tail call void %99(ptr noundef %handle, i32 noundef %add209, i32 noundef %and184, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end216

cond.false210:                                    ; preds = %land.lhs.true194.cond.false210_crit_edge, %land.lhs.true189.cond.false210_crit_edge, %cond.end182.cond.false210_crit_edge
  %104 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %arrayidx.i, align 8
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %105, align 4
  %add215 = add i32 %107, 8
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add215, i32 noundef %and184, i32 noundef 0) #15
  br label %cond.end216

cond.end216:                                      ; preds = %cond.false210, %cond.true200
  %108 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %virt, align 8
  %and219 = and i32 %109, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and219)
  %tobool220.not = icmp eq i32 %and219, 0
  br i1 %tobool220.not, label %cond.end216.cond.false243_crit_edge, label %land.lhs.true221

cond.end216.cond.false243_crit_edge:              ; preds = %cond.end216
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false243

land.lhs.true221:                                 ; preds = %cond.end216
  %110 = ptrtoint ptr %funcs75 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %funcs75, align 4
  %tobool225.not = icmp eq ptr %111, null
  br i1 %tobool225.not, label %land.lhs.true221.cond.false243_crit_edge, label %land.lhs.true226

land.lhs.true221.cond.false243_crit_edge:         ; preds = %land.lhs.true221
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false243

land.lhs.true226:                                 ; preds = %land.lhs.true221
  %sriov_rreg230 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %111, i32 0, i32 13
  %112 = ptrtoint ptr %sriov_rreg230 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %sriov_rreg230, align 4
  %tobool231.not = icmp eq ptr %113, null
  br i1 %tobool231.not, label %land.lhs.true226.cond.false243_crit_edge, label %cond.true232

land.lhs.true226.cond.false243_crit_edge:         ; preds = %land.lhs.true226
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false243

cond.true232:                                     ; preds = %land.lhs.true226
  call void @__sanitizer_cov_trace_pc() #17
  %114 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %arrayidx.i, align 8
  %116 = ptrtoint ptr %115 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %115, align 4
  %add241 = add i32 %117, 8
  %call242 = tail call i32 %113(ptr noundef %handle, i32 noundef %add241, i32 noundef 0, i32 noundef 1) #15
  br label %if.end252

cond.false243:                                    ; preds = %land.lhs.true226.cond.false243_crit_edge, %land.lhs.true221.cond.false243_crit_edge, %cond.end216.cond.false243_crit_edge
  %118 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %arrayidx.i, align 8
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %119, align 4
  %add248 = add i32 %121, 8
  %call249 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add248, i32 noundef 0) #15
  br label %if.end252

if.end252:                                        ; preds = %cond.false243, %cond.true232
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %122 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %122(i32 noundef 10737400) #15
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %cond.end63.if.end253_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_set_clockgating_state(ptr noundef %handle, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.399)
  switch i32 %3, label %if.end.cleanup_crit_edge [
    i32 589825, label %if.end.sw.bb_crit_edge
    i32 590337, label %if.end.sw.bb_crit_edge4
    i32 590848, label %if.end.sw.bb_crit_edge5
    i32 590338, label %if.end.sw.bb_crit_edge6
    i32 590080, label %if.end.sw.bb_crit_edge7
    i32 590849, label %if.end.sw.bb_crit_edge8
    i32 590592, label %if.end.sw.bb_crit_edge9
    i32 590850, label %if.end.sw.bb_crit_edge10
  ]

if.end.sw.bb_crit_edge10:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.sw.bb_crit_edge9:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.sw.bb_crit_edge8:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.sw.bb_crit_edge7:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.sw.bb_crit_edge6:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.sw.bb_crit_edge5:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.sw.bb_crit_edge4:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge4, %if.end.sw.bb_crit_edge5, %if.end.sw.bb_crit_edge6, %if.end.sw.bb_crit_edge7, %if.end.sw.bb_crit_edge8, %if.end.sw.bb_crit_edge9, %if.end.sw.bb_crit_edge10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp = icmp eq i32 %state, 0
  br i1 %cmp, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_update_medium_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext true) #15
  tail call fastcc void @gfx_v9_0_update_3d_clock_gating(ptr noundef %handle, i1 noundef zeroext true) #15
  tail call fastcc void @gfx_v9_0_update_coarse_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext true) #15
  br label %cleanup

if.else.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_update_coarse_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext false) #15
  tail call fastcc void @gfx_v9_0_update_3d_clock_gating(ptr noundef %handle, i1 noundef zeroext false) #15
  tail call fastcc void @gfx_v9_0_update_medium_grain_clock_gating(ptr noundef %handle, i1 noundef zeroext false) #15
  br label %cleanup

cleanup:                                          ; preds = %if.else.i, %if.then.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_set_powergating_state(ptr noundef %handle, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp = icmp eq i32 %state, 0
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.400)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 590338, label %entry.sw.bb_crit_edge
    i32 590080, label %entry.sw.bb_crit_edge100
    i32 590592, label %entry.sw.bb_crit_edge101
    i32 590337, label %entry.sw.epilog.sink.split_crit_edge
  ]

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split

entry.sw.bb_crit_edge101:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

entry.sw.bb_crit_edge100:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge100, %entry.sw.bb_crit_edge101
  br i1 %cmp, label %sw.bb.if.end_crit_edge, label %if.then

sw.bb.if.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %handle, i1 noundef zeroext false) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb.if.end_crit_edge
  %pg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 100
  %3 = ptrtoint ptr %pg_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %pg_flags, align 4
  %and = and i32 %4, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  %arrayidx.i45 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %5 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i45, align 8
  %arrayidx2.i46 = getelementptr i32, ptr %6, i32 1
  %7 = ptrtoint ptr %arrayidx2.i46 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx2.i46, align 4
  %add.i47 = add i32 %8, 19523
  %call.i48 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i47, i32 noundef 0) #15
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  %or.i = or i32 %call.i48, 131072
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i48, i32 %or.i)
  %cmp.not.i = icmp eq i32 %call.i48, %or.i
  br i1 %cmp.not.i, label %if.then3.gfx_v9_0_enable_sck_slow_down_on_power_up.exit_crit_edge, label %if.then.i

if.then3.gfx_v9_0_enable_sck_slow_down_on_power_up.exit_crit_edge: ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit

if.then.i:                                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  %9 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i45, align 8
  %arrayidx7.i = getelementptr i32, ptr %10, i32 1
  %11 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx7.i, align 4
  %add8.i = add i32 %12, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i, i32 noundef %or.i, i32 noundef 0) #15
  br label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit

gfx_v9_0_enable_sck_slow_down_on_power_up.exit:   ; preds = %if.then.i, %if.then3.gfx_v9_0_enable_sck_slow_down_on_power_up.exit_crit_edge
  %13 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.i45, align 8
  %arrayidx2.i36 = getelementptr i32, ptr %14, i32 1
  %15 = ptrtoint ptr %arrayidx2.i36 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx2.i36, align 4
  %add.i37 = add i32 %16, 19523
  %call.i38 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i37, i32 noundef 0) #15
  %or.i40 = or i32 %call.i38, 262144
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i38, i32 %or.i40)
  %cmp.not.i41 = icmp eq i32 %call.i38, %or.i40
  br i1 %cmp.not.i41, label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit.if.end4_crit_edge, label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit.if.end4.sink.split_crit_edge

gfx_v9_0_enable_sck_slow_down_on_power_up.exit.if.end4.sink.split_crit_edge: ; preds = %gfx_v9_0_enable_sck_slow_down_on_power_up.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.sink.split

gfx_v9_0_enable_sck_slow_down_on_power_up.exit.if.end4_crit_edge: ; preds = %gfx_v9_0_enable_sck_slow_down_on_power_up.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4

if.else:                                          ; preds = %if.end
  %and.i49 = and i32 %call.i48, -131073
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i48, i32 %and.i49)
  %cmp.not.i50 = icmp eq i32 %call.i48, %and.i49
  br i1 %cmp.not.i50, label %if.else.gfx_v9_0_enable_sck_slow_down_on_power_up.exit54_crit_edge, label %if.then.i53

if.else.gfx_v9_0_enable_sck_slow_down_on_power_up.exit54_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54

if.then.i53:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %17 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i45, align 8
  %arrayidx7.i51 = getelementptr i32, ptr %18, i32 1
  %19 = ptrtoint ptr %arrayidx7.i51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx7.i51, align 4
  %add8.i52 = add i32 %20, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i52, i32 noundef %and.i49, i32 noundef 0) #15
  br label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54

gfx_v9_0_enable_sck_slow_down_on_power_up.exit54: ; preds = %if.then.i53, %if.else.gfx_v9_0_enable_sck_slow_down_on_power_up.exit54_crit_edge
  %21 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.i45, align 8
  %arrayidx2.i56 = getelementptr i32, ptr %22, i32 1
  %23 = ptrtoint ptr %arrayidx2.i56 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx2.i56, align 4
  %add.i57 = add i32 %24, 19523
  %call.i58 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i57, i32 noundef 0) #15
  %and.i59 = and i32 %call.i58, -262145
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i58, i32 %and.i59)
  %cmp.not.i60 = icmp eq i32 %call.i58, %and.i59
  br i1 %cmp.not.i60, label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54.if.end4_crit_edge, label %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54.if.end4.sink.split_crit_edge

gfx_v9_0_enable_sck_slow_down_on_power_up.exit54.if.end4.sink.split_crit_edge: ; preds = %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.sink.split

gfx_v9_0_enable_sck_slow_down_on_power_up.exit54.if.end4_crit_edge: ; preds = %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4

if.end4.sink.split:                               ; preds = %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54.if.end4.sink.split_crit_edge, %gfx_v9_0_enable_sck_slow_down_on_power_up.exit.if.end4.sink.split_crit_edge
  %and.i59.sink = phi i32 [ %or.i40, %gfx_v9_0_enable_sck_slow_down_on_power_up.exit.if.end4.sink.split_crit_edge ], [ %and.i59, %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54.if.end4.sink.split_crit_edge ]
  %25 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx.i45, align 8
  %arrayidx7.i61 = getelementptr i32, ptr %26, i32 1
  %27 = ptrtoint ptr %arrayidx7.i61 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx7.i61, align 4
  %add8.i62 = add i32 %28, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i62, i32 noundef %and.i59.sink, i32 noundef 0) #15
  br label %if.end4

if.end4:                                          ; preds = %if.end4.sink.split, %gfx_v9_0_enable_sck_slow_down_on_power_up.exit54.if.end4_crit_edge, %gfx_v9_0_enable_sck_slow_down_on_power_up.exit.if.end4_crit_edge
  %29 = ptrtoint ptr %pg_flags to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %pg_flags, align 4
  %and6 = and i32 %30, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %arrayidx.i74 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %31 = ptrtoint ptr %arrayidx.i74 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx.i74, align 8
  %arrayidx2.i75 = getelementptr i32, ptr %32, i32 1
  %33 = ptrtoint ptr %arrayidx2.i75 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx2.i75, align 4
  %add.i76 = add i32 %34, 19523
  %call.i77 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i76, i32 noundef 0) #15
  br i1 %tobool7.not, label %if.else9, label %if.then8

if.then8:                                         ; preds = %if.end4
  %and.i69 = and i32 %call.i77, -32769
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i77, i32 %and.i69)
  %cmp.not.i70 = icmp eq i32 %call.i77, %and.i69
  br i1 %cmp.not.i70, label %if.then8.if.end10_crit_edge, label %if.then8.if.end10.sink.split_crit_edge

if.then8.if.end10.sink.split_crit_edge:           ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10.sink.split

if.then8.if.end10_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

if.else9:                                         ; preds = %if.end4
  %or.i79 = or i32 %call.i77, 32768
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i77, i32 %or.i79)
  %cmp.not.i80 = icmp eq i32 %call.i77, %or.i79
  br i1 %cmp.not.i80, label %if.else9.if.end10_crit_edge, label %if.else9.if.end10.sink.split_crit_edge

if.else9.if.end10.sink.split_crit_edge:           ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10.sink.split

if.else9.if.end10_crit_edge:                      ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

if.end10.sink.split:                              ; preds = %if.else9.if.end10.sink.split_crit_edge, %if.then8.if.end10.sink.split_crit_edge
  %or.i79.sink = phi i32 [ %and.i69, %if.then8.if.end10.sink.split_crit_edge ], [ %or.i79, %if.else9.if.end10.sink.split_crit_edge ]
  %35 = ptrtoint ptr %arrayidx.i74 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i74, align 8
  %arrayidx7.i81 = getelementptr i32, ptr %36, i32 1
  %37 = ptrtoint ptr %arrayidx7.i81 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx7.i81, align 4
  %add8.i82 = add i32 %38, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i82, i32 noundef %or.i79.sink, i32 noundef 0) #15
  br label %if.end10

if.end10:                                         ; preds = %if.end10.sink.split, %if.else9.if.end10_crit_edge, %if.then8.if.end10_crit_edge
  tail call void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef %handle) #15
  %39 = ptrtoint ptr %pg_flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %pg_flags, align 4
  %and.i85 = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i85)
  %tobool.not.i = icmp ne i32 %and.i85, 0
  %41 = and i1 %cmp, %tobool.not.i
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %42 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx2.i.i = getelementptr i32, ptr %43, i32 1
  %44 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx2.i.i, align 4
  %add.i.i = add i32 %45, 19523
  %call.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i.i, i32 noundef 0) #15
  br i1 %41, label %if.then.i86, label %if.else.i

if.then.i86:                                      ; preds = %if.end10
  %or.i.i = or i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %or.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i, %or.i.i
  br i1 %cmp.not.i.i, label %if.then.i86.gfx_v9_0_enable_gfx_cg_power_gating.exit.i_crit_edge, label %if.then.i.i

if.then.i86.gfx_v9_0_enable_gfx_cg_power_gating.exit.i_crit_edge: ; preds = %if.then.i86
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_enable_gfx_cg_power_gating.exit.i

if.then.i.i:                                      ; preds = %if.then.i86
  call void @__sanitizer_cov_trace_pc() #17
  %46 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx7.i.i = getelementptr i32, ptr %47, i32 1
  %48 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx7.i.i, align 4
  %add8.i.i = add i32 %49, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i.i, i32 noundef %or.i.i, i32 noundef 0) #15
  br label %gfx_v9_0_enable_gfx_cg_power_gating.exit.i

gfx_v9_0_enable_gfx_cg_power_gating.exit.i:       ; preds = %if.then.i.i, %if.then.i86.gfx_v9_0_enable_gfx_cg_power_gating.exit.i_crit_edge
  %50 = ptrtoint ptr %pg_flags to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %pg_flags, align 4
  %and3.i = and i32 %51, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.not.i, label %gfx_v9_0_enable_gfx_cg_power_gating.exit.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge, label %if.then5.i

gfx_v9_0_enable_gfx_cg_power_gating.exit.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge: ; preds = %gfx_v9_0_enable_gfx_cg_power_gating.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_update_gfx_cg_power_gating.exit

if.then5.i:                                       ; preds = %gfx_v9_0_enable_gfx_cg_power_gating.exit.i
  %52 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx2.i21.i = getelementptr i32, ptr %53, i32 1
  %54 = ptrtoint ptr %arrayidx2.i21.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx2.i21.i, align 4
  %add.i22.i = add i32 %55, 19523
  %call.i23.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i22.i, i32 noundef 0) #15
  %or.i25.i = or i32 %call.i23.i, 16
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i23.i, i32 %or.i25.i)
  %cmp.not.i26.i = icmp eq i32 %call.i23.i, %or.i25.i
  br i1 %cmp.not.i26.i, label %if.then5.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge, label %if.then.i29.i

if.then5.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge: ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_update_gfx_cg_power_gating.exit

if.then.i29.i:                                    ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #17
  %56 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx7.i27.i = getelementptr i32, ptr %57, i32 1
  %58 = ptrtoint ptr %arrayidx7.i27.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %arrayidx7.i27.i, align 4
  %add8.i28.i = add i32 %59, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i28.i, i32 noundef %or.i25.i, i32 noundef 0) #15
  br label %gfx_v9_0_update_gfx_cg_power_gating.exit

if.else.i:                                        ; preds = %if.end10
  %and.i34.i = and i32 %call.i.i, -2
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %and.i34.i)
  %cmp.not.i35.i = icmp eq i32 %call.i.i, %and.i34.i
  br i1 %cmp.not.i35.i, label %if.else.i.gfx_v9_0_enable_gfx_cg_power_gating.exit39.i_crit_edge, label %if.then.i38.i

if.else.i.gfx_v9_0_enable_gfx_cg_power_gating.exit39.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_enable_gfx_cg_power_gating.exit39.i

if.then.i38.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %60 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx7.i36.i = getelementptr i32, ptr %61, i32 1
  %62 = ptrtoint ptr %arrayidx7.i36.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx7.i36.i, align 4
  %add8.i37.i = add i32 %63, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i37.i, i32 noundef %and.i34.i, i32 noundef 0) #15
  br label %gfx_v9_0_enable_gfx_cg_power_gating.exit39.i

gfx_v9_0_enable_gfx_cg_power_gating.exit39.i:     ; preds = %if.then.i38.i, %if.else.i.gfx_v9_0_enable_gfx_cg_power_gating.exit39.i_crit_edge
  %64 = ptrtoint ptr %pg_flags to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %pg_flags, align 4
  %and7.i = and i32 %65, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %gfx_v9_0_enable_gfx_cg_power_gating.exit39.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge, label %if.then9.i

gfx_v9_0_enable_gfx_cg_power_gating.exit39.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge: ; preds = %gfx_v9_0_enable_gfx_cg_power_gating.exit39.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_update_gfx_cg_power_gating.exit

if.then9.i:                                       ; preds = %gfx_v9_0_enable_gfx_cg_power_gating.exit39.i
  %66 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx2.i41.i = getelementptr i32, ptr %67, i32 1
  %68 = ptrtoint ptr %arrayidx2.i41.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx2.i41.i, align 4
  %add.i42.i = add i32 %69, 19523
  %call.i43.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i42.i, i32 noundef 0) #15
  %and.i44.i = and i32 %call.i43.i, -17
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i43.i, i32 %and.i44.i)
  %cmp.not.i45.i = icmp eq i32 %call.i43.i, %and.i44.i
  br i1 %cmp.not.i45.i, label %if.then9.i.gfx_v9_0_enable_gfx_pipeline_powergating.exit49.i_crit_edge, label %if.then.i48.i

if.then9.i.gfx_v9_0_enable_gfx_pipeline_powergating.exit49.i_crit_edge: ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_enable_gfx_pipeline_powergating.exit49.i

if.then.i48.i:                                    ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #17
  %70 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx7.i46.i = getelementptr i32, ptr %71, i32 1
  %72 = ptrtoint ptr %arrayidx7.i46.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx7.i46.i, align 4
  %add8.i47.i = add i32 %73, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i47.i, i32 noundef %and.i44.i, i32 noundef 0) #15
  br label %gfx_v9_0_enable_gfx_pipeline_powergating.exit49.i

gfx_v9_0_enable_gfx_pipeline_powergating.exit49.i: ; preds = %if.then.i48.i, %if.then9.i.gfx_v9_0_enable_gfx_pipeline_powergating.exit49.i_crit_edge
  %74 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx14.i.i = getelementptr i32, ptr %75, i32 1
  %76 = ptrtoint ptr %arrayidx14.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %arrayidx14.i.i, align 4
  %call16.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %77, i32 noundef 0) #15
  br label %gfx_v9_0_update_gfx_cg_power_gating.exit

gfx_v9_0_update_gfx_cg_power_gating.exit:         ; preds = %gfx_v9_0_enable_gfx_pipeline_powergating.exit49.i, %gfx_v9_0_enable_gfx_cg_power_gating.exit39.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge, %if.then.i29.i, %if.then5.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge, %gfx_v9_0_enable_gfx_cg_power_gating.exit.i.gfx_v9_0_update_gfx_cg_power_gating.exit_crit_edge
  tail call void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef %handle) #15
  %78 = ptrtoint ptr %pg_flags to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %pg_flags, align 4
  %and.i88 = and i32 %79, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i88)
  %tobool.not.i89 = icmp ne i32 %and.i88, 0
  %80 = and i1 %cmp, %tobool.not.i89
  %81 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx2.i.i91 = getelementptr i32, ptr %82, i32 1
  %83 = ptrtoint ptr %arrayidx2.i.i91 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %arrayidx2.i.i91, align 4
  %add.i.i92 = add i32 %84, 19523
  %call.i.i93 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i.i92, i32 noundef 0) #15
  br i1 %80, label %if.then.i96, label %if.else.i97

if.then.i96:                                      ; preds = %gfx_v9_0_update_gfx_cg_power_gating.exit
  %or.i.i94 = or i32 %call.i.i93, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i93, i32 %or.i.i94)
  %cmp.not.i.i95 = icmp eq i32 %call.i.i93, %or.i.i94
  br i1 %cmp.not.i.i95, label %if.then.i96.if.end.i_crit_edge, label %if.then.i96.if.end.sink.split.i_crit_edge

if.then.i96.if.end.sink.split.i_crit_edge:        ; preds = %if.then.i96
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.sink.split.i

if.then.i96.if.end.i_crit_edge:                   ; preds = %if.then.i96
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.else.i97:                                      ; preds = %gfx_v9_0_update_gfx_cg_power_gating.exit
  %and.i22.i = and i32 %call.i.i93, -9
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i93, i32 %and.i22.i)
  %cmp.not.i23.i = icmp eq i32 %call.i.i93, %and.i22.i
  br i1 %cmp.not.i23.i, label %if.else.i97.if.end.i_crit_edge, label %if.else.i97.if.end.sink.split.i_crit_edge

if.else.i97.if.end.sink.split.i_crit_edge:        ; preds = %if.else.i97
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.sink.split.i

if.else.i97.if.end.i_crit_edge:                   ; preds = %if.else.i97
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end.sink.split.i:                              ; preds = %if.else.i97.if.end.sink.split.i_crit_edge, %if.then.i96.if.end.sink.split.i_crit_edge
  %and.i22.sink.i = phi i32 [ %or.i.i94, %if.then.i96.if.end.sink.split.i_crit_edge ], [ %and.i22.i, %if.else.i97.if.end.sink.split.i_crit_edge ]
  %85 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx7.i24.i = getelementptr i32, ptr %86, i32 1
  %87 = ptrtoint ptr %arrayidx7.i24.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx7.i24.i, align 4
  %add8.i25.i = add i32 %88, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i25.i, i32 noundef %and.i22.sink.i, i32 noundef 0) #15
  br label %if.end.i

if.end.i:                                         ; preds = %if.end.sink.split.i, %if.else.i97.if.end.i_crit_edge, %if.then.i96.if.end.i_crit_edge
  %89 = ptrtoint ptr %pg_flags to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %pg_flags, align 4
  %and3.i98 = and i32 %90, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i98)
  %tobool4.not.i99 = icmp ne i32 %and3.i98, 0
  %91 = and i1 %cmp, %tobool4.not.i99
  %92 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx2.i29.i = getelementptr i32, ptr %93, i32 1
  %94 = ptrtoint ptr %arrayidx2.i29.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %arrayidx2.i29.i, align 4
  %add.i30.i = add i32 %95, 19523
  %call.i31.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef %add.i30.i, i32 noundef 0) #15
  br i1 %91, label %if.then7.i, label %if.else8.i

if.then7.i:                                       ; preds = %if.end.i
  %or.i33.i = or i32 %call.i31.i, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i31.i, i32 %or.i33.i)
  %cmp.not.i34.i = icmp eq i32 %call.i31.i, %or.i33.i
  br i1 %cmp.not.i34.i, label %if.then7.i.gfx_v9_0_update_gfx_mg_power_gating.exit_crit_edge, label %if.then7.i.if.end9.sink.split.i_crit_edge

if.then7.i.if.end9.sink.split.i_crit_edge:        ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.sink.split.i

if.then7.i.gfx_v9_0_update_gfx_mg_power_gating.exit_crit_edge: ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_update_gfx_mg_power_gating.exit

if.else8.i:                                       ; preds = %if.end.i
  %and.i42.i = and i32 %call.i31.i, -5
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i31.i, i32 %and.i42.i)
  %cmp.not.i43.i = icmp eq i32 %call.i31.i, %and.i42.i
  br i1 %cmp.not.i43.i, label %if.else8.i.gfx_v9_0_update_gfx_mg_power_gating.exit_crit_edge, label %if.else8.i.if.end9.sink.split.i_crit_edge

if.else8.i.if.end9.sink.split.i_crit_edge:        ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.sink.split.i

if.else8.i.gfx_v9_0_update_gfx_mg_power_gating.exit_crit_edge: ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_update_gfx_mg_power_gating.exit

if.end9.sink.split.i:                             ; preds = %if.else8.i.if.end9.sink.split.i_crit_edge, %if.then7.i.if.end9.sink.split.i_crit_edge
  %and.i42.sink.i = phi i32 [ %or.i33.i, %if.then7.i.if.end9.sink.split.i_crit_edge ], [ %and.i42.i, %if.else8.i.if.end9.sink.split.i_crit_edge ]
  %96 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx7.i44.i = getelementptr i32, ptr %97, i32 1
  %98 = ptrtoint ptr %arrayidx7.i44.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx7.i44.i, align 4
  %add8.i45.i = add i32 %99, 19523
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef %add8.i45.i, i32 noundef %and.i42.sink.i, i32 noundef 0) #15
  br label %gfx_v9_0_update_gfx_mg_power_gating.exit

gfx_v9_0_update_gfx_mg_power_gating.exit:         ; preds = %if.end9.sink.split.i, %if.else8.i.gfx_v9_0_update_gfx_mg_power_gating.exit_crit_edge, %if.then7.i.gfx_v9_0_update_gfx_mg_power_gating.exit_crit_edge
  br i1 %cmp, label %gfx_v9_0_update_gfx_mg_power_gating.exit.sw.epilog.sink.split_crit_edge, label %gfx_v9_0_update_gfx_mg_power_gating.exit.sw.epilog_crit_edge

gfx_v9_0_update_gfx_mg_power_gating.exit.sw.epilog_crit_edge: ; preds = %gfx_v9_0_update_gfx_mg_power_gating.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

gfx_v9_0_update_gfx_mg_power_gating.exit.sw.epilog.sink.split_crit_edge: ; preds = %gfx_v9_0_update_gfx_mg_power_gating.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %gfx_v9_0_update_gfx_mg_power_gating.exit.sw.epilog.sink.split_crit_edge, %entry.sw.epilog.sink.split_crit_edge
  %.sink = phi i1 [ true, %gfx_v9_0_update_gfx_mg_power_gating.exit.sw.epilog.sink.split_crit_edge ], [ %cmp, %entry.sw.epilog.sink.split_crit_edge ]
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %handle, i1 noundef zeroext %.sink) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %gfx_v9_0_update_gfx_mg_power_gating.exit.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_get_clockgating_state(ptr noundef %handle, ptr nocapture noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 130, i32 1
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 8
  %arrayidx2 = getelementptr i32, ptr %4, i32 1
  %5 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx2, align 4
  %add = add i32 %6, 19528
  %call = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add) #15
  %and3 = and i32 %call, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.then5, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 4
  %or = or i32 %8, 1
  store i32 %or, ptr %flags, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 8
  %arrayidx10 = getelementptr i32, ptr %10, i32 1
  %11 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx10, align 4
  %add11 = add i32 %12, 19529
  %call12 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add11) #15
  %and13 = and i32 %call12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  br i1 %tobool14.not, label %if.end6.if.end17_crit_edge, label %if.then15

if.end6.if.end17_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17

if.then15:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #17
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags, align 4
  %or16 = or i32 %14, 4
  store i32 %or16, ptr %flags, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end6.if.end17_crit_edge
  %and18 = and i32 %call12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  br i1 %tobool19.not, label %if.end17.if.end22_crit_edge, label %if.then20

if.end17.if.end22_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22

if.then20:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags, align 4
  %or21 = or i32 %16, 8
  store i32 %or21, ptr %flags, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end17.if.end22_crit_edge
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx, align 8
  %arrayidx26 = getelementptr i32, ptr %18, i32 1
  %19 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx26, align 4
  %add27 = add i32 %20, 19462
  %call28 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add27) #15
  %and29 = and i32 %call28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %if.end22.if.end33_crit_edge, label %if.then31

if.end22.if.end33_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

if.then31:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #17
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags, align 4
  %or32 = or i32 %22, 130
  store i32 %or32, ptr %flags, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end22.if.end33_crit_edge
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  %add38 = add i32 %26, 4217
  %call39 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add38) #15
  %and40 = and i32 %call39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.end33.if.end44_crit_edge, label %if.then42

if.end33.if.end44_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end44

if.then42:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  %27 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %flags, align 4
  %or43 = or i32 %28, 66
  store i32 %or43, ptr %flags, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %if.end33.if.end44_crit_edge
  %arrayidx45 = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 172, i32 1
  %29 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx45, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590849, i32 %30)
  %cmp.not = icmp eq i32 %30, 590849
  br i1 %cmp.not, label %if.end44.if.end64_crit_edge, label %if.then47

if.end44.if.end64_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.then47:                                        ; preds = %if.end44
  %31 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx, align 8
  %arrayidx51 = getelementptr i32, ptr %32, i32 1
  %33 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx51, align 4
  %add52 = add i32 %34, 19653
  %call53 = tail call i32 @amdgpu_kiq_rreg(ptr noundef %handle, i32 noundef %add52) #15
  %and54 = and i32 %call53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and54)
  %tobool55.not = icmp eq i32 %and54, 0
  br i1 %tobool55.not, label %if.then47.if.end58_crit_edge, label %if.then56

if.then47.if.end58_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end58

if.then56:                                        ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #17
  %35 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %flags, align 4
  %or57 = or i32 %36, 1048576
  store i32 %or57, ptr %flags, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then56, %if.then47.if.end58_crit_edge
  %and59 = and i32 %call53, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %if.end58.if.end64_crit_edge, label %if.then61

if.end58.if.end64_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.then61:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #17
  %37 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %flags, align 4
  %or62 = or i32 %38, 2097152
  store i32 %or62, ptr %flags, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.then61, %if.end58.if.end64_crit_edge, %if.end44.if.end64_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_get_num_kcq(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_kiq_set_resources(ptr noundef %kiq_ring, i64 noundef %queue_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073307648, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i12 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i12, label %if.then.i13, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit23_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit23_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit23

if.then.i13:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit23

amdgpu_ring_write.exit23:                         ; preds = %if.then.i13, %amdgpu_ring_write.exit.amdgpu_ring_write.exit23_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i16 = add i64 %18, 1
  store i64 %inc.i16, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i18 = and i32 %20, %21
  %arrayidx.i19 = getelementptr i32, ptr %16, i32 %idxprom.i18
  %22 = ptrtoint ptr %arrayidx.i19 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %arrayidx.i19, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i21 = and i64 %25, %24
  store i64 %and3.i21, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i22 = add i32 %27, -1
  store i32 %dec.i22, ptr %count_dw.i, align 8
  %conv = trunc i64 %queue_mask to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i22)
  %cmp.i25 = icmp slt i32 %dec.i22, 1
  br i1 %cmp.i25, label %if.then.i26, label %amdgpu_ring_write.exit23.amdgpu_ring_write.exit36_crit_edge

amdgpu_ring_write.exit23.amdgpu_ring_write.exit36_crit_edge: ; preds = %amdgpu_ring_write.exit23
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit36

if.then.i26:                                      ; preds = %amdgpu_ring_write.exit23
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit36

amdgpu_ring_write.exit36:                         ; preds = %if.then.i26, %amdgpu_ring_write.exit23.amdgpu_ring_write.exit36_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i29 = add i64 %31, 1
  store i64 %inc.i29, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i31 = and i32 %33, %34
  %arrayidx.i32 = getelementptr i32, ptr %29, i32 %idxprom.i31
  %35 = ptrtoint ptr %arrayidx.i32 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %conv, ptr %arrayidx.i32, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i34 = and i64 %38, %37
  store i64 %and3.i34, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i35 = add i32 %40, -1
  store i32 %dec.i35, ptr %count_dw.i, align 8
  %shr = lshr i64 %queue_mask, 32
  %conv2 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i35)
  %cmp.i38 = icmp slt i32 %dec.i35, 1
  br i1 %cmp.i38, label %if.then.i39, label %amdgpu_ring_write.exit36.amdgpu_ring_write.exit49_crit_edge

amdgpu_ring_write.exit36.amdgpu_ring_write.exit49_crit_edge: ; preds = %amdgpu_ring_write.exit36
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit49

if.then.i39:                                      ; preds = %amdgpu_ring_write.exit36
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit49

amdgpu_ring_write.exit49:                         ; preds = %if.then.i39, %amdgpu_ring_write.exit36.amdgpu_ring_write.exit49_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i42 = add i64 %44, 1
  store i64 %inc.i42, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i44 = and i32 %46, %47
  %arrayidx.i45 = getelementptr i32, ptr %42, i32 %idxprom.i44
  %48 = ptrtoint ptr %arrayidx.i45 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %conv2, ptr %arrayidx.i45, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i47 = and i64 %51, %50
  store i64 %and3.i47, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i48 = add i32 %53, -1
  store i32 %dec.i48, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i48)
  %cmp.i51 = icmp slt i32 %dec.i48, 1
  br i1 %cmp.i51, label %if.then.i52, label %amdgpu_ring_write.exit49.amdgpu_ring_write.exit62_crit_edge

amdgpu_ring_write.exit49.amdgpu_ring_write.exit62_crit_edge: ; preds = %amdgpu_ring_write.exit49
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit62

if.then.i52:                                      ; preds = %amdgpu_ring_write.exit49
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit62

amdgpu_ring_write.exit62:                         ; preds = %if.then.i52, %amdgpu_ring_write.exit49.amdgpu_ring_write.exit62_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i55 = add i64 %57, 1
  store i64 %inc.i55, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i57 = and i32 %59, %60
  %arrayidx.i58 = getelementptr i32, ptr %55, i32 %idxprom.i57
  %61 = ptrtoint ptr %arrayidx.i58 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 0, ptr %arrayidx.i58, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i60 = and i64 %64, %63
  store i64 %and3.i60, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i61 = add i32 %66, -1
  store i32 %dec.i61, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i61)
  %cmp.i64 = icmp slt i32 %dec.i61, 1
  br i1 %cmp.i64, label %if.then.i65, label %amdgpu_ring_write.exit62.amdgpu_ring_write.exit75_crit_edge

amdgpu_ring_write.exit62.amdgpu_ring_write.exit75_crit_edge: ; preds = %amdgpu_ring_write.exit62
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit75

if.then.i65:                                      ; preds = %amdgpu_ring_write.exit62
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit75

amdgpu_ring_write.exit75:                         ; preds = %if.then.i65, %amdgpu_ring_write.exit62.amdgpu_ring_write.exit75_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i68 = add i64 %70, 1
  store i64 %inc.i68, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i70 = and i32 %72, %73
  %arrayidx.i71 = getelementptr i32, ptr %68, i32 %idxprom.i70
  %74 = ptrtoint ptr %arrayidx.i71 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 0, ptr %arrayidx.i71, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i73 = and i64 %77, %76
  store i64 %and3.i73, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i74 = add i32 %79, -1
  store i32 %dec.i74, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i74)
  %cmp.i77 = icmp slt i32 %dec.i74, 1
  br i1 %cmp.i77, label %if.then.i78, label %amdgpu_ring_write.exit75.amdgpu_ring_write.exit88_crit_edge

amdgpu_ring_write.exit75.amdgpu_ring_write.exit88_crit_edge: ; preds = %amdgpu_ring_write.exit75
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit88

if.then.i78:                                      ; preds = %amdgpu_ring_write.exit75
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit88

amdgpu_ring_write.exit88:                         ; preds = %if.then.i78, %amdgpu_ring_write.exit75.amdgpu_ring_write.exit88_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i81 = add i64 %83, 1
  store i64 %inc.i81, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i83 = and i32 %85, %86
  %arrayidx.i84 = getelementptr i32, ptr %81, i32 %idxprom.i83
  %87 = ptrtoint ptr %arrayidx.i84 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 0, ptr %arrayidx.i84, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i86 = and i64 %90, %89
  store i64 %and3.i86, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i87 = add i32 %92, -1
  store i32 %dec.i87, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i87)
  %cmp.i90 = icmp slt i32 %dec.i87, 1
  br i1 %cmp.i90, label %if.then.i91, label %amdgpu_ring_write.exit88.amdgpu_ring_write.exit101_crit_edge

amdgpu_ring_write.exit88.amdgpu_ring_write.exit101_crit_edge: ; preds = %amdgpu_ring_write.exit88
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit101

if.then.i91:                                      ; preds = %amdgpu_ring_write.exit88
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit101

amdgpu_ring_write.exit101:                        ; preds = %if.then.i91, %amdgpu_ring_write.exit88.amdgpu_ring_write.exit101_crit_edge
  %93 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %ring1.i, align 4
  %95 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %wptr.i, align 8
  %inc.i94 = add i64 %96, 1
  store i64 %inc.i94, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %buf_mask.i, align 8
  %99 = trunc i64 %96 to i32
  %idxprom.i96 = and i32 %98, %99
  %arrayidx.i97 = getelementptr i32, ptr %94, i32 %idxprom.i96
  %100 = ptrtoint ptr %arrayidx.i97 to i32
  call void @__asan_store4_noabort(i32 %100)
  store volatile i32 0, ptr %arrayidx.i97, align 4
  %101 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %ptr_mask.i, align 8
  %103 = load i64, ptr %wptr.i, align 8
  %and3.i99 = and i64 %103, %102
  store i64 %and3.i99, ptr %wptr.i, align 8
  %104 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %count_dw.i, align 8
  %dec.i100 = add i32 %105, -1
  store i32 %dec.i100, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_kiq_map_queues(ptr noundef %kiq_ring, ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %kiq_ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kiq_ring, align 8
  %mqd_obj = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 19
  %2 = ptrtoint ptr %mqd_obj to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mqd_obj, align 4
  %call = tail call i64 @amdgpu_bo_gpu_offset(ptr noundef %3) #15
  %gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %4 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %gpu_addr, align 8
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %mul = shl i32 %7, 2
  %conv = zext i32 %mul to i64
  %add = add i64 %5, %conv
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp = icmp eq i32 %11, 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %12 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp.i = icmp slt i32 %13, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %14 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %16 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %17, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %18 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %buf_mask.i, align 8
  %20 = trunc i64 %17 to i32
  %idxprom.i = and i32 %19, %20
  %arrayidx.i = getelementptr i32, ptr %15, i32 %idxprom.i
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile i32 -1073372672, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %22 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %ptr_mask.i, align 8
  %24 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %24, %23
  store i64 %and3.i, ptr %wptr.i, align 8
  %25 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %26, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %queue = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 18
  %27 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %queue, align 8
  %shl = shl i32 %28, 13
  %pipe = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 17
  %29 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %pipe, align 4
  %shl3 = shl i32 %30, 16
  %me = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 16
  %31 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %me, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %32)
  %cmp5.not = icmp eq i32 %32, 1
  %shl8 = select i1 %cmp5.not, i32 0, i32 262144
  %or4 = select i1 %cmp, i32 805306368, i32 536870912
  %or9 = or i32 %or4, %shl
  %or13 = or i32 %or9, %shl3
  %or14 = or i32 %or13, %shl8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i40 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i40, label %if.then.i41, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit51_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit51_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit51

if.then.i41:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit51

amdgpu_ring_write.exit51:                         ; preds = %if.then.i41, %amdgpu_ring_write.exit.amdgpu_ring_write.exit51_crit_edge
  %33 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ring1.i, align 4
  %35 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %wptr.i, align 8
  %inc.i44 = add i64 %36, 1
  store i64 %inc.i44, ptr %wptr.i, align 8
  %37 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %buf_mask.i, align 8
  %39 = trunc i64 %36 to i32
  %idxprom.i46 = and i32 %38, %39
  %arrayidx.i47 = getelementptr i32, ptr %34, i32 %idxprom.i46
  %40 = ptrtoint ptr %arrayidx.i47 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile i32 %or14, ptr %arrayidx.i47, align 4
  %41 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %ptr_mask.i, align 8
  %43 = load i64, ptr %wptr.i, align 8
  %and3.i49 = and i64 %43, %42
  store i64 %and3.i49, ptr %wptr.i, align 8
  %44 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %count_dw.i, align 8
  %dec.i50 = add i32 %45, -1
  store i32 %dec.i50, ptr %count_dw.i, align 8
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %46 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %doorbell_index, align 8
  %shl15 = shl i32 %47, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i50)
  %cmp.i53 = icmp slt i32 %dec.i50, 1
  br i1 %cmp.i53, label %if.then.i54, label %amdgpu_ring_write.exit51.amdgpu_ring_write.exit64_crit_edge

amdgpu_ring_write.exit51.amdgpu_ring_write.exit64_crit_edge: ; preds = %amdgpu_ring_write.exit51
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit64

if.then.i54:                                      ; preds = %amdgpu_ring_write.exit51
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit64

amdgpu_ring_write.exit64:                         ; preds = %if.then.i54, %amdgpu_ring_write.exit51.amdgpu_ring_write.exit64_crit_edge
  %48 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ring1.i, align 4
  %50 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %wptr.i, align 8
  %inc.i57 = add i64 %51, 1
  store i64 %inc.i57, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %buf_mask.i, align 8
  %54 = trunc i64 %51 to i32
  %idxprom.i59 = and i32 %53, %54
  %arrayidx.i60 = getelementptr i32, ptr %49, i32 %idxprom.i59
  %55 = ptrtoint ptr %arrayidx.i60 to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile i32 %shl15, ptr %arrayidx.i60, align 4
  %56 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %ptr_mask.i, align 8
  %58 = load i64, ptr %wptr.i, align 8
  %and3.i62 = and i64 %58, %57
  store i64 %and3.i62, ptr %wptr.i, align 8
  %59 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %count_dw.i, align 8
  %dec.i63 = add i32 %60, -1
  store i32 %dec.i63, ptr %count_dw.i, align 8
  %conv16 = trunc i64 %call to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i63)
  %cmp.i66 = icmp slt i32 %dec.i63, 1
  br i1 %cmp.i66, label %if.then.i67, label %amdgpu_ring_write.exit64.amdgpu_ring_write.exit77_crit_edge

amdgpu_ring_write.exit64.amdgpu_ring_write.exit77_crit_edge: ; preds = %amdgpu_ring_write.exit64
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit77

if.then.i67:                                      ; preds = %amdgpu_ring_write.exit64
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit77

amdgpu_ring_write.exit77:                         ; preds = %if.then.i67, %amdgpu_ring_write.exit64.amdgpu_ring_write.exit77_crit_edge
  %61 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ring1.i, align 4
  %63 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %wptr.i, align 8
  %inc.i70 = add i64 %64, 1
  store i64 %inc.i70, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %buf_mask.i, align 8
  %67 = trunc i64 %64 to i32
  %idxprom.i72 = and i32 %66, %67
  %arrayidx.i73 = getelementptr i32, ptr %62, i32 %idxprom.i72
  %68 = ptrtoint ptr %arrayidx.i73 to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile i32 %conv16, ptr %arrayidx.i73, align 4
  %69 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %ptr_mask.i, align 8
  %71 = load i64, ptr %wptr.i, align 8
  %and3.i75 = and i64 %71, %70
  store i64 %and3.i75, ptr %wptr.i, align 8
  %72 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %count_dw.i, align 8
  %dec.i76 = add i32 %73, -1
  store i32 %dec.i76, ptr %count_dw.i, align 8
  %shr = lshr i64 %call, 32
  %conv18 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i76)
  %cmp.i79 = icmp slt i32 %dec.i76, 1
  br i1 %cmp.i79, label %if.then.i80, label %amdgpu_ring_write.exit77.amdgpu_ring_write.exit90_crit_edge

amdgpu_ring_write.exit77.amdgpu_ring_write.exit90_crit_edge: ; preds = %amdgpu_ring_write.exit77
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit90

if.then.i80:                                      ; preds = %amdgpu_ring_write.exit77
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit90

amdgpu_ring_write.exit90:                         ; preds = %if.then.i80, %amdgpu_ring_write.exit77.amdgpu_ring_write.exit90_crit_edge
  %74 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %ring1.i, align 4
  %76 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %wptr.i, align 8
  %inc.i83 = add i64 %77, 1
  store i64 %inc.i83, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %buf_mask.i, align 8
  %80 = trunc i64 %77 to i32
  %idxprom.i85 = and i32 %79, %80
  %arrayidx.i86 = getelementptr i32, ptr %75, i32 %idxprom.i85
  %81 = ptrtoint ptr %arrayidx.i86 to i32
  call void @__asan_store4_noabort(i32 %81)
  store volatile i32 %conv18, ptr %arrayidx.i86, align 4
  %82 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %ptr_mask.i, align 8
  %84 = load i64, ptr %wptr.i, align 8
  %and3.i88 = and i64 %84, %83
  store i64 %and3.i88, ptr %wptr.i, align 8
  %85 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %count_dw.i, align 8
  %dec.i89 = add i32 %86, -1
  store i32 %dec.i89, ptr %count_dw.i, align 8
  %conv20 = trunc i64 %add to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i89)
  %cmp.i92 = icmp slt i32 %dec.i89, 1
  br i1 %cmp.i92, label %if.then.i93, label %amdgpu_ring_write.exit90.amdgpu_ring_write.exit103_crit_edge

amdgpu_ring_write.exit90.amdgpu_ring_write.exit103_crit_edge: ; preds = %amdgpu_ring_write.exit90
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit103

if.then.i93:                                      ; preds = %amdgpu_ring_write.exit90
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit103

amdgpu_ring_write.exit103:                        ; preds = %if.then.i93, %amdgpu_ring_write.exit90.amdgpu_ring_write.exit103_crit_edge
  %87 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ring1.i, align 4
  %89 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %wptr.i, align 8
  %inc.i96 = add i64 %90, 1
  store i64 %inc.i96, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %buf_mask.i, align 8
  %93 = trunc i64 %90 to i32
  %idxprom.i98 = and i32 %92, %93
  %arrayidx.i99 = getelementptr i32, ptr %88, i32 %idxprom.i98
  %94 = ptrtoint ptr %arrayidx.i99 to i32
  call void @__asan_store4_noabort(i32 %94)
  store volatile i32 %conv20, ptr %arrayidx.i99, align 4
  %95 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %ptr_mask.i, align 8
  %97 = load i64, ptr %wptr.i, align 8
  %and3.i101 = and i64 %97, %96
  store i64 %and3.i101, ptr %wptr.i, align 8
  %98 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %count_dw.i, align 8
  %dec.i102 = add i32 %99, -1
  store i32 %dec.i102, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i102)
  %cmp.i105 = icmp slt i32 %dec.i102, 1
  br i1 %cmp.i105, label %if.then.i106, label %amdgpu_ring_write.exit103.amdgpu_ring_write.exit116_crit_edge

amdgpu_ring_write.exit103.amdgpu_ring_write.exit116_crit_edge: ; preds = %amdgpu_ring_write.exit103
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit116

if.then.i106:                                     ; preds = %amdgpu_ring_write.exit103
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit116

amdgpu_ring_write.exit116:                        ; preds = %if.then.i106, %amdgpu_ring_write.exit103.amdgpu_ring_write.exit116_crit_edge
  %shr21 = lshr i64 %add, 32
  %conv23 = trunc i64 %shr21 to i32
  %100 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %ring1.i, align 4
  %102 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %wptr.i, align 8
  %inc.i109 = add i64 %103, 1
  store i64 %inc.i109, ptr %wptr.i, align 8
  %104 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %buf_mask.i, align 8
  %106 = trunc i64 %103 to i32
  %idxprom.i111 = and i32 %105, %106
  %arrayidx.i112 = getelementptr i32, ptr %101, i32 %idxprom.i111
  %107 = ptrtoint ptr %arrayidx.i112 to i32
  call void @__asan_store4_noabort(i32 %107)
  store volatile i32 %conv23, ptr %arrayidx.i112, align 4
  %108 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %108)
  %109 = load i64, ptr %ptr_mask.i, align 8
  %110 = load i64, ptr %wptr.i, align 8
  %and3.i114 = and i64 %110, %109
  store i64 %and3.i114, ptr %wptr.i, align 8
  %111 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %count_dw.i, align 8
  %dec.i115 = add i32 %112, -1
  store i32 %dec.i115, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_kiq_unmap_queues(ptr noundef %kiq_ring, ptr nocapture noundef readonly %ring, i32 noundef %action, i64 noundef %gpu_addr, i64 noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %cond = select i1 %cmp, i32 268435456, i32 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %4 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp slt i32 %5, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %6 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %9, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %10 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buf_mask.i, align 8
  %12 = trunc i64 %9 to i32
  %idxprom.i = and i32 %11, %12
  %arrayidx.i = getelementptr i32, ptr %7, i32 %idxprom.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 -1073437952, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %14 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %ptr_mask.i, align 8
  %16 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %16, %15
  store i64 %and3.i, ptr %wptr.i, align 8
  %17 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %or2 = or i32 %cond, %action
  %or3 = or i32 %or2, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i21 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i21, label %if.then.i22, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit32_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit32_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit32

if.then.i22:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit32

amdgpu_ring_write.exit32:                         ; preds = %if.then.i22, %amdgpu_ring_write.exit.amdgpu_ring_write.exit32_crit_edge
  %19 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ring1.i, align 4
  %21 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %wptr.i, align 8
  %inc.i25 = add i64 %22, 1
  store i64 %inc.i25, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %buf_mask.i, align 8
  %25 = trunc i64 %22 to i32
  %idxprom.i27 = and i32 %24, %25
  %arrayidx.i28 = getelementptr i32, ptr %20, i32 %idxprom.i27
  %26 = ptrtoint ptr %arrayidx.i28 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 %or3, ptr %arrayidx.i28, align 4
  %27 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ptr_mask.i, align 8
  %29 = load i64, ptr %wptr.i, align 8
  %and3.i30 = and i64 %29, %28
  store i64 %and3.i30, ptr %wptr.i, align 8
  %30 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %count_dw.i, align 8
  %dec.i31 = add i32 %31, -1
  store i32 %dec.i31, ptr %count_dw.i, align 8
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %32 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %doorbell_index, align 8
  %shl4 = shl i32 %33, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i31)
  %cmp.i34 = icmp slt i32 %dec.i31, 1
  br i1 %cmp.i34, label %if.then.i35, label %amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge

amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge: ; preds = %amdgpu_ring_write.exit32
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit45

if.then.i35:                                      ; preds = %amdgpu_ring_write.exit32
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit45

amdgpu_ring_write.exit45:                         ; preds = %if.then.i35, %amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge
  %34 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ring1.i, align 4
  %36 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %wptr.i, align 8
  %inc.i38 = add i64 %37, 1
  store i64 %inc.i38, ptr %wptr.i, align 8
  %38 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %buf_mask.i, align 8
  %40 = trunc i64 %37 to i32
  %idxprom.i40 = and i32 %39, %40
  %arrayidx.i41 = getelementptr i32, ptr %35, i32 %idxprom.i40
  %41 = ptrtoint ptr %arrayidx.i41 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 %shl4, ptr %arrayidx.i41, align 4
  %42 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %ptr_mask.i, align 8
  %44 = load i64, ptr %wptr.i, align 8
  %and3.i43 = and i64 %44, %43
  store i64 %and3.i43, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %count_dw.i, align 8
  %dec.i44 = add i32 %46, -1
  store i32 %dec.i44, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %action)
  %cmp5 = icmp eq i32 %action, 3
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %amdgpu_ring_write.exit45
  %conv = trunc i64 %gpu_addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i47 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i47, label %if.then.i48, label %if.then.amdgpu_ring_write.exit58_crit_edge

if.then.amdgpu_ring_write.exit58_crit_edge:       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit58

if.then.i48:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit58

amdgpu_ring_write.exit58:                         ; preds = %if.then.i48, %if.then.amdgpu_ring_write.exit58_crit_edge
  %47 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ring1.i, align 4
  %49 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %wptr.i, align 8
  %inc.i51 = add i64 %50, 1
  store i64 %inc.i51, ptr %wptr.i, align 8
  %51 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %buf_mask.i, align 8
  %53 = trunc i64 %50 to i32
  %idxprom.i53 = and i32 %52, %53
  %arrayidx.i54 = getelementptr i32, ptr %48, i32 %idxprom.i53
  %54 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile i32 %conv, ptr %arrayidx.i54, align 4
  %55 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %ptr_mask.i, align 8
  %57 = load i64, ptr %wptr.i, align 8
  %and3.i56 = and i64 %57, %56
  store i64 %and3.i56, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %count_dw.i, align 8
  %dec.i57 = add i32 %59, -1
  store i32 %dec.i57, ptr %count_dw.i, align 8
  %shr = lshr i64 %gpu_addr, 32
  %conv7 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i57)
  %cmp.i60 = icmp slt i32 %dec.i57, 1
  br i1 %cmp.i60, label %if.then.i61, label %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge

amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge: ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit71

if.then.i61:                                      ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit71

amdgpu_ring_write.exit71:                         ; preds = %if.then.i61, %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge
  %60 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ring1.i, align 4
  %62 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %wptr.i, align 8
  %inc.i64 = add i64 %63, 1
  store i64 %inc.i64, ptr %wptr.i, align 8
  %64 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_mask.i, align 8
  %66 = trunc i64 %63 to i32
  %idxprom.i66 = and i32 %65, %66
  %arrayidx.i67 = getelementptr i32, ptr %61, i32 %idxprom.i66
  %67 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile i32 %conv7, ptr %arrayidx.i67, align 4
  %68 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %ptr_mask.i, align 8
  %70 = load i64, ptr %wptr.i, align 8
  %and3.i69 = and i64 %70, %69
  store i64 %and3.i69, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %count_dw.i, align 8
  %dec.i70 = add i32 %72, -1
  store i32 %dec.i70, ptr %count_dw.i, align 8
  %conv8 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i70)
  %cmp.i73 = icmp slt i32 %dec.i70, 1
  br i1 %cmp.i73, label %amdgpu_ring_write.exit71.if.end.sink.split_crit_edge, label %amdgpu_ring_write.exit71.if.end_crit_edge

amdgpu_ring_write.exit71.if.end_crit_edge:        ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

amdgpu_ring_write.exit71.if.end.sink.split_crit_edge: ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.sink.split

if.else:                                          ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i86 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i86, label %if.then.i87, label %if.else.amdgpu_ring_write.exit97_crit_edge

if.else.amdgpu_ring_write.exit97_crit_edge:       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit97

if.then.i87:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit97

amdgpu_ring_write.exit97:                         ; preds = %if.then.i87, %if.else.amdgpu_ring_write.exit97_crit_edge
  %73 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ring1.i, align 4
  %75 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %wptr.i, align 8
  %inc.i90 = add i64 %76, 1
  store i64 %inc.i90, ptr %wptr.i, align 8
  %77 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %buf_mask.i, align 8
  %79 = trunc i64 %76 to i32
  %idxprom.i92 = and i32 %78, %79
  %arrayidx.i93 = getelementptr i32, ptr %74, i32 %idxprom.i92
  %80 = ptrtoint ptr %arrayidx.i93 to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile i32 0, ptr %arrayidx.i93, align 4
  %81 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %ptr_mask.i, align 8
  %83 = load i64, ptr %wptr.i, align 8
  %and3.i95 = and i64 %83, %82
  store i64 %and3.i95, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %count_dw.i, align 8
  %dec.i96 = add i32 %85, -1
  store i32 %dec.i96, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i96)
  %cmp.i99 = icmp slt i32 %dec.i96, 1
  br i1 %cmp.i99, label %if.then.i100, label %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge

amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge: ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit110

if.then.i100:                                     ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit110

amdgpu_ring_write.exit110:                        ; preds = %if.then.i100, %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge
  %86 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %ring1.i, align 4
  %88 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %wptr.i, align 8
  %inc.i103 = add i64 %89, 1
  store i64 %inc.i103, ptr %wptr.i, align 8
  %90 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %buf_mask.i, align 8
  %92 = trunc i64 %89 to i32
  %idxprom.i105 = and i32 %91, %92
  %arrayidx.i106 = getelementptr i32, ptr %87, i32 %idxprom.i105
  %93 = ptrtoint ptr %arrayidx.i106 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile i32 0, ptr %arrayidx.i106, align 4
  %94 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %ptr_mask.i, align 8
  %96 = load i64, ptr %wptr.i, align 8
  %and3.i108 = and i64 %96, %95
  store i64 %and3.i108, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %count_dw.i, align 8
  %dec.i109 = add i32 %98, -1
  store i32 %dec.i109, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i109)
  %cmp.i112 = icmp slt i32 %dec.i109, 1
  br i1 %cmp.i112, label %amdgpu_ring_write.exit110.if.end.sink.split_crit_edge, label %amdgpu_ring_write.exit110.if.end_crit_edge

amdgpu_ring_write.exit110.if.end_crit_edge:       ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

amdgpu_ring_write.exit110.if.end.sink.split_crit_edge: ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.sink.split

if.end.sink.split:                                ; preds = %amdgpu_ring_write.exit110.if.end.sink.split_crit_edge, %amdgpu_ring_write.exit71.if.end.sink.split_crit_edge
  %.sink.ph = phi i32 [ %conv8, %amdgpu_ring_write.exit71.if.end.sink.split_crit_edge ], [ 0, %amdgpu_ring_write.exit110.if.end.sink.split_crit_edge ]
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %amdgpu_ring_write.exit110.if.end_crit_edge, %amdgpu_ring_write.exit71.if.end_crit_edge
  %.sink = phi i32 [ %conv8, %amdgpu_ring_write.exit71.if.end_crit_edge ], [ 0, %amdgpu_ring_write.exit110.if.end_crit_edge ], [ %.sink.ph, %if.end.sink.split ]
  %99 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %ring1.i, align 4
  %101 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %wptr.i, align 8
  %inc.i116 = add i64 %102, 1
  store i64 %inc.i116, ptr %wptr.i, align 8
  %103 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %buf_mask.i, align 8
  %105 = trunc i64 %102 to i32
  %idxprom.i118 = and i32 %104, %105
  %arrayidx.i119 = getelementptr i32, ptr %100, i32 %idxprom.i118
  %106 = ptrtoint ptr %arrayidx.i119 to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile i32 %.sink, ptr %arrayidx.i119, align 4
  %107 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %ptr_mask.i, align 8
  %109 = load i64, ptr %wptr.i, align 8
  %and3.i121 = and i64 %109, %108
  store i64 %and3.i121, ptr %wptr.i, align 8
  %110 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %storemerge.in = load i32, ptr %count_dw.i, align 8
  %storemerge = add i32 %storemerge.in, -1
  store i32 %storemerge, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_kiq_query_status(ptr noundef %kiq_ring, ptr nocapture noundef readonly %ring, i64 noundef %addr, i64 noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %cond = select i1 %cmp, i32 134217728, i32 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %4 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp slt i32 %5, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %6 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %9, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %10 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buf_mask.i, align 8
  %12 = trunc i64 %9 to i32
  %idxprom.i = and i32 %11, %12
  %arrayidx.i = getelementptr i32, ptr %7, i32 %idxprom.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 -1073372160, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %14 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %ptr_mask.i, align 8
  %16 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %16, %15
  store i64 %and3.i, ptr %wptr.i, align 8
  %17 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i19 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i19, label %if.then.i20, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit30

if.then.i20:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit30

amdgpu_ring_write.exit30:                         ; preds = %if.then.i20, %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge
  %19 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ring1.i, align 4
  %21 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %wptr.i, align 8
  %inc.i23 = add i64 %22, 1
  store i64 %inc.i23, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %buf_mask.i, align 8
  %25 = trunc i64 %22 to i32
  %idxprom.i25 = and i32 %24, %25
  %arrayidx.i26 = getelementptr i32, ptr %20, i32 %idxprom.i25
  %26 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 -2147483648, ptr %arrayidx.i26, align 4
  %27 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ptr_mask.i, align 8
  %29 = load i64, ptr %wptr.i, align 8
  %and3.i28 = and i64 %29, %28
  store i64 %and3.i28, ptr %wptr.i, align 8
  %30 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %count_dw.i, align 8
  %dec.i29 = add i32 %31, -1
  store i32 %dec.i29, ptr %count_dw.i, align 8
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %32 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %doorbell_index, align 8
  %shl = shl i32 %33, 2
  %or = or i32 %shl, %cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i29)
  %cmp.i32 = icmp slt i32 %dec.i29, 1
  br i1 %cmp.i32, label %if.then.i33, label %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge

amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge: ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit43

if.then.i33:                                      ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit43

amdgpu_ring_write.exit43:                         ; preds = %if.then.i33, %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge
  %34 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ring1.i, align 4
  %36 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %wptr.i, align 8
  %inc.i36 = add i64 %37, 1
  store i64 %inc.i36, ptr %wptr.i, align 8
  %38 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %buf_mask.i, align 8
  %40 = trunc i64 %37 to i32
  %idxprom.i38 = and i32 %39, %40
  %arrayidx.i39 = getelementptr i32, ptr %35, i32 %idxprom.i38
  %41 = ptrtoint ptr %arrayidx.i39 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 %or, ptr %arrayidx.i39, align 4
  %42 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %ptr_mask.i, align 8
  %44 = load i64, ptr %wptr.i, align 8
  %and3.i41 = and i64 %44, %43
  store i64 %and3.i41, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %count_dw.i, align 8
  %dec.i42 = add i32 %46, -1
  store i32 %dec.i42, ptr %count_dw.i, align 8
  %conv = trunc i64 %addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i42)
  %cmp.i45 = icmp slt i32 %dec.i42, 1
  br i1 %cmp.i45, label %if.then.i46, label %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge

amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge: ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit56

if.then.i46:                                      ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit56

amdgpu_ring_write.exit56:                         ; preds = %if.then.i46, %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge
  %47 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ring1.i, align 4
  %49 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %wptr.i, align 8
  %inc.i49 = add i64 %50, 1
  store i64 %inc.i49, ptr %wptr.i, align 8
  %51 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %buf_mask.i, align 8
  %53 = trunc i64 %50 to i32
  %idxprom.i51 = and i32 %52, %53
  %arrayidx.i52 = getelementptr i32, ptr %48, i32 %idxprom.i51
  %54 = ptrtoint ptr %arrayidx.i52 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile i32 %conv, ptr %arrayidx.i52, align 4
  %55 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %ptr_mask.i, align 8
  %57 = load i64, ptr %wptr.i, align 8
  %and3.i54 = and i64 %57, %56
  store i64 %and3.i54, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %count_dw.i, align 8
  %dec.i55 = add i32 %59, -1
  store i32 %dec.i55, ptr %count_dw.i, align 8
  %shr = lshr i64 %addr, 32
  %conv3 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i55)
  %cmp.i58 = icmp slt i32 %dec.i55, 1
  br i1 %cmp.i58, label %if.then.i59, label %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge

amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge: ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit69

if.then.i59:                                      ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit69

amdgpu_ring_write.exit69:                         ; preds = %if.then.i59, %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge
  %60 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ring1.i, align 4
  %62 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %wptr.i, align 8
  %inc.i62 = add i64 %63, 1
  store i64 %inc.i62, ptr %wptr.i, align 8
  %64 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_mask.i, align 8
  %66 = trunc i64 %63 to i32
  %idxprom.i64 = and i32 %65, %66
  %arrayidx.i65 = getelementptr i32, ptr %61, i32 %idxprom.i64
  %67 = ptrtoint ptr %arrayidx.i65 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile i32 %conv3, ptr %arrayidx.i65, align 4
  %68 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %ptr_mask.i, align 8
  %70 = load i64, ptr %wptr.i, align 8
  %and3.i67 = and i64 %70, %69
  store i64 %and3.i67, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %count_dw.i, align 8
  %dec.i68 = add i32 %72, -1
  store i32 %dec.i68, ptr %count_dw.i, align 8
  %conv5 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i68)
  %cmp.i71 = icmp slt i32 %dec.i68, 1
  br i1 %cmp.i71, label %if.then.i72, label %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge

amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge: ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit82

if.then.i72:                                      ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit82

amdgpu_ring_write.exit82:                         ; preds = %if.then.i72, %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge
  %73 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ring1.i, align 4
  %75 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %wptr.i, align 8
  %inc.i75 = add i64 %76, 1
  store i64 %inc.i75, ptr %wptr.i, align 8
  %77 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %buf_mask.i, align 8
  %79 = trunc i64 %76 to i32
  %idxprom.i77 = and i32 %78, %79
  %arrayidx.i78 = getelementptr i32, ptr %74, i32 %idxprom.i77
  %80 = ptrtoint ptr %arrayidx.i78 to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile i32 %conv5, ptr %arrayidx.i78, align 4
  %81 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %ptr_mask.i, align 8
  %83 = load i64, ptr %wptr.i, align 8
  %and3.i80 = and i64 %83, %82
  store i64 %and3.i80, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %count_dw.i, align 8
  %dec.i81 = add i32 %85, -1
  store i32 %dec.i81, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i81)
  %cmp.i84 = icmp slt i32 %dec.i81, 1
  br i1 %cmp.i84, label %if.then.i85, label %amdgpu_ring_write.exit82.amdgpu_ring_write.exit95_crit_edge

amdgpu_ring_write.exit82.amdgpu_ring_write.exit95_crit_edge: ; preds = %amdgpu_ring_write.exit82
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit95

if.then.i85:                                      ; preds = %amdgpu_ring_write.exit82
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit95

amdgpu_ring_write.exit95:                         ; preds = %if.then.i85, %amdgpu_ring_write.exit82.amdgpu_ring_write.exit95_crit_edge
  %shr6 = lshr i64 %seq, 32
  %conv8 = trunc i64 %shr6 to i32
  %86 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %ring1.i, align 4
  %88 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %wptr.i, align 8
  %inc.i88 = add i64 %89, 1
  store i64 %inc.i88, ptr %wptr.i, align 8
  %90 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %buf_mask.i, align 8
  %92 = trunc i64 %89 to i32
  %idxprom.i90 = and i32 %91, %92
  %arrayidx.i91 = getelementptr i32, ptr %87, i32 %idxprom.i90
  %93 = ptrtoint ptr %arrayidx.i91 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile i32 %conv8, ptr %arrayidx.i91, align 4
  %94 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %ptr_mask.i, align 8
  %96 = load i64, ptr %wptr.i, align 8
  %and3.i93 = and i64 %96, %95
  store i64 %and3.i93, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %count_dw.i, align 8
  %dec.i94 = add i32 %98, -1
  store i32 %dec.i94, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_kiq_invalidate_tlbs(ptr nocapture noundef %kiq_ring, i16 noundef zeroext %pasid, i32 noundef %flush_type, i1 noundef zeroext %all_hub) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073702912, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %kiq_ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i8 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i8, label %if.then.i9, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit19

if.then.i9:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit19

amdgpu_ring_write.exit19:                         ; preds = %if.then.i9, %amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge
  %or = select i1 %all_hub, i32 17, i32 1
  %conv1 = zext i16 %pasid to i32
  %shl2 = shl nuw nsw i32 %conv1, 5
  %or3 = or i32 %or, %shl2
  %shl4 = shl i32 %flush_type, 29
  %or5 = or i32 %or3, %shl4
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i12 = add i64 %18, 1
  store i64 %inc.i12, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i14 = and i32 %20, %21
  %arrayidx.i15 = getelementptr i32, ptr %16, i32 %idxprom.i14
  %22 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 %or5, ptr %arrayidx.i15, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i17 = and i64 %25, %24
  store i64 %and3.i17, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i18 = add i32 %27, -1
  store i32 %dec.i18, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_err(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @amdgpu_bo_gpu_offset(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @gfx_v9_0_ring_get_rptr_compute(ptr nocapture noundef readonly %ring) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %wb1 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %2 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wb1, align 4
  %rptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 6
  %4 = ptrtoint ptr %rptr_offs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %3, i32 %5
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx, align 4
  %conv = zext i32 %7 to i64
  ret i64 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @gfx_v9_0_ring_get_wptr_compute(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %0 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring, align 8
  %wb1 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb1, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx, i32 noundef 8) #15
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %arrayidx) #15
  ret i64 %call.i

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5576, 0\0A.popsection", ""() #15, !srcloc !1016
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_set_wptr_compute(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %0 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring, align 8
  %wb2 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb2, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr, align 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 8) #15
  tail call void @generic_atomic64_set(ptr noundef %arrayidx, i64 noundef %9) #15
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %10 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %doorbell_index, align 8
  %12 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %wptr, align 8
  tail call void @amdgpu_mm_wdoorbell64(ptr noundef %3, i32 noundef %11, i64 noundef %13) #15
  ret void

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5589, 0\0A.popsection", ""() #15, !srcloc !1017
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_fence_kiq(ptr noundef %ring, i64 noundef %addr, i64 noundef %seq, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end9, label %do.body4, !prof !1011

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5599, 0\0A.popsection", ""() #15, !srcloc !1018
  unreachable

do.end9:                                          ; preds = %entry
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %2 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp slt i32 %3, 1
  br i1 %cmp.i, label %if.then.i, label %do.end9.amdgpu_ring_write.exit_crit_edge

do.end9.amdgpu_ring_write.exit_crit_edge:         ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %do.end9.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %4 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %6 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %7, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %8 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %buf_mask.i, align 8
  %10 = trunc i64 %7 to i32
  %idxprom.i = and i32 %9, %10
  %arrayidx.i = getelementptr i32, ptr %5, i32 %idxprom.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 -1073531136, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %12 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %ptr_mask.i, align 8
  %14 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %14, %13
  store i64 %and3.i, ptr %wptr.i, align 8
  %15 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %16, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i34 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i34, label %if.then.i35, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit45

if.then.i35:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit45

amdgpu_ring_write.exit45:                         ; preds = %if.then.i35, %amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge
  %17 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ring1.i, align 4
  %19 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %wptr.i, align 8
  %inc.i38 = add i64 %20, 1
  store i64 %inc.i38, ptr %wptr.i, align 8
  %21 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %buf_mask.i, align 8
  %23 = trunc i64 %20 to i32
  %idxprom.i40 = and i32 %22, %23
  %arrayidx.i41 = getelementptr i32, ptr %18, i32 %idxprom.i40
  %24 = ptrtoint ptr %arrayidx.i41 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 1049856, ptr %arrayidx.i41, align 4
  %25 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %ptr_mask.i, align 8
  %27 = load i64, ptr %wptr.i, align 8
  %and3.i43 = and i64 %27, %26
  store i64 %and3.i43, ptr %wptr.i, align 8
  %28 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %count_dw.i, align 8
  %dec.i44 = add i32 %29, -1
  store i32 %dec.i44, ptr %count_dw.i, align 8
  %conv = trunc i64 %addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i47 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i47, label %if.then.i48, label %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge

amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge: ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit58

if.then.i48:                                      ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit58

amdgpu_ring_write.exit58:                         ; preds = %if.then.i48, %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge
  %30 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ring1.i, align 4
  %32 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %wptr.i, align 8
  %inc.i51 = add i64 %33, 1
  store i64 %inc.i51, ptr %wptr.i, align 8
  %34 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %buf_mask.i, align 8
  %36 = trunc i64 %33 to i32
  %idxprom.i53 = and i32 %35, %36
  %arrayidx.i54 = getelementptr i32, ptr %31, i32 %idxprom.i53
  %37 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile i32 %conv, ptr %arrayidx.i54, align 4
  %38 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %ptr_mask.i, align 8
  %40 = load i64, ptr %wptr.i, align 8
  %and3.i56 = and i64 %40, %39
  store i64 %and3.i56, ptr %wptr.i, align 8
  %41 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %count_dw.i, align 8
  %dec.i57 = add i32 %42, -1
  store i32 %dec.i57, ptr %count_dw.i, align 8
  %shr = lshr i64 %addr, 32
  %conv12 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i57)
  %cmp.i60 = icmp slt i32 %dec.i57, 1
  br i1 %cmp.i60, label %if.then.i61, label %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge

amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge: ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit71

if.then.i61:                                      ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit71

amdgpu_ring_write.exit71:                         ; preds = %if.then.i61, %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge
  %43 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ring1.i, align 4
  %45 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %wptr.i, align 8
  %inc.i64 = add i64 %46, 1
  store i64 %inc.i64, ptr %wptr.i, align 8
  %47 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %buf_mask.i, align 8
  %49 = trunc i64 %46 to i32
  %idxprom.i66 = and i32 %48, %49
  %arrayidx.i67 = getelementptr i32, ptr %44, i32 %idxprom.i66
  %50 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile i32 %conv12, ptr %arrayidx.i67, align 4
  %51 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %ptr_mask.i, align 8
  %53 = load i64, ptr %wptr.i, align 8
  %and3.i69 = and i64 %53, %52
  store i64 %and3.i69, ptr %wptr.i, align 8
  %54 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %count_dw.i, align 8
  %dec.i70 = add i32 %55, -1
  store i32 %dec.i70, ptr %count_dw.i, align 8
  %conv14 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i70)
  %cmp.i73 = icmp slt i32 %dec.i70, 1
  br i1 %cmp.i73, label %if.then.i74, label %amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge

amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge: ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit84

if.then.i74:                                      ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit84

amdgpu_ring_write.exit84:                         ; preds = %if.then.i74, %amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge
  %56 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ring1.i, align 4
  %58 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %wptr.i, align 8
  %inc.i77 = add i64 %59, 1
  store i64 %inc.i77, ptr %wptr.i, align 8
  %60 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %buf_mask.i, align 8
  %62 = trunc i64 %59 to i32
  %idxprom.i79 = and i32 %61, %62
  %arrayidx.i80 = getelementptr i32, ptr %57, i32 %idxprom.i79
  %63 = ptrtoint ptr %arrayidx.i80 to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile i32 %conv14, ptr %arrayidx.i80, align 4
  %64 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %ptr_mask.i, align 8
  %66 = load i64, ptr %wptr.i, align 8
  %and3.i82 = and i64 %66, %65
  store i64 %and3.i82, ptr %wptr.i, align 8
  %67 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %count_dw.i, align 8
  %dec.i83 = add i32 %68, -1
  store i32 %dec.i83, ptr %count_dw.i, align 8
  %and15 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %amdgpu_ring_write.exit84.if.end20_crit_edge, label %if.then17

amdgpu_ring_write.exit84.if.end20_crit_edge:      ; preds = %amdgpu_ring_write.exit84
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end20

if.then17:                                        ; preds = %amdgpu_ring_write.exit84
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i83)
  %cmp.i86 = icmp slt i32 %dec.i83, 1
  br i1 %cmp.i86, label %if.then.i87, label %if.then17.amdgpu_ring_write.exit97_crit_edge

if.then17.amdgpu_ring_write.exit97_crit_edge:     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit97

if.then.i87:                                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit97

amdgpu_ring_write.exit97:                         ; preds = %if.then.i87, %if.then17.amdgpu_ring_write.exit97_crit_edge
  %69 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ring1.i, align 4
  %71 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %wptr.i, align 8
  %inc.i90 = add i64 %72, 1
  store i64 %inc.i90, ptr %wptr.i, align 8
  %73 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %buf_mask.i, align 8
  %75 = trunc i64 %72 to i32
  %idxprom.i92 = and i32 %74, %75
  %arrayidx.i93 = getelementptr i32, ptr %70, i32 %idxprom.i92
  %76 = ptrtoint ptr %arrayidx.i93 to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile i32 -1073531136, ptr %arrayidx.i93, align 4
  %77 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %ptr_mask.i, align 8
  %79 = load i64, ptr %wptr.i, align 8
  %and3.i95 = and i64 %79, %78
  store i64 %and3.i95, ptr %wptr.i, align 8
  %80 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %count_dw.i, align 8
  %dec.i96 = add i32 %81, -1
  store i32 %dec.i96, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i96)
  %cmp.i99 = icmp slt i32 %dec.i96, 1
  br i1 %cmp.i99, label %if.then.i100, label %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge

amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge: ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit110

if.then.i100:                                     ; preds = %amdgpu_ring_write.exit97
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit110

amdgpu_ring_write.exit110:                        ; preds = %if.then.i100, %amdgpu_ring_write.exit97.amdgpu_ring_write.exit110_crit_edge
  %82 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ring1.i, align 4
  %84 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %wptr.i, align 8
  %inc.i103 = add i64 %85, 1
  store i64 %inc.i103, ptr %wptr.i, align 8
  %86 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %buf_mask.i, align 8
  %88 = trunc i64 %85 to i32
  %idxprom.i105 = and i32 %87, %88
  %arrayidx.i106 = getelementptr i32, ptr %83, i32 %idxprom.i105
  %89 = ptrtoint ptr %arrayidx.i106 to i32
  call void @__asan_store4_noabort(i32 %89)
  store volatile i32 1048576, ptr %arrayidx.i106, align 4
  %90 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %ptr_mask.i, align 8
  %92 = load i64, ptr %wptr.i, align 8
  %and3.i108 = and i64 %92, %91
  store i64 %and3.i108, ptr %wptr.i, align 8
  %93 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %count_dw.i, align 8
  %dec.i109 = add i32 %94, -1
  store i32 %dec.i109, ptr %count_dw.i, align 8
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %95 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %arrayidx, align 8
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %96, align 4
  %add = add i32 %98, 4277
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i109)
  %cmp.i112 = icmp slt i32 %dec.i109, 1
  br i1 %cmp.i112, label %if.then.i113, label %amdgpu_ring_write.exit110.amdgpu_ring_write.exit123_crit_edge

amdgpu_ring_write.exit110.amdgpu_ring_write.exit123_crit_edge: ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit123

if.then.i113:                                     ; preds = %amdgpu_ring_write.exit110
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit123

amdgpu_ring_write.exit123:                        ; preds = %if.then.i113, %amdgpu_ring_write.exit110.amdgpu_ring_write.exit123_crit_edge
  %99 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %ring1.i, align 4
  %101 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %wptr.i, align 8
  %inc.i116 = add i64 %102, 1
  store i64 %inc.i116, ptr %wptr.i, align 8
  %103 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %buf_mask.i, align 8
  %105 = trunc i64 %102 to i32
  %idxprom.i118 = and i32 %104, %105
  %arrayidx.i119 = getelementptr i32, ptr %100, i32 %idxprom.i118
  %106 = ptrtoint ptr %arrayidx.i119 to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile i32 %add, ptr %arrayidx.i119, align 4
  %107 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %ptr_mask.i, align 8
  %109 = load i64, ptr %wptr.i, align 8
  %and3.i121 = and i64 %109, %108
  store i64 %and3.i121, ptr %wptr.i, align 8
  %110 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %count_dw.i, align 8
  %dec.i122 = add i32 %111, -1
  store i32 %dec.i122, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i122)
  %cmp.i125 = icmp slt i32 %dec.i122, 1
  br i1 %cmp.i125, label %if.then.i126, label %amdgpu_ring_write.exit123.amdgpu_ring_write.exit136_crit_edge

amdgpu_ring_write.exit123.amdgpu_ring_write.exit136_crit_edge: ; preds = %amdgpu_ring_write.exit123
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit136

if.then.i126:                                     ; preds = %amdgpu_ring_write.exit123
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit136

amdgpu_ring_write.exit136:                        ; preds = %if.then.i126, %amdgpu_ring_write.exit123.amdgpu_ring_write.exit136_crit_edge
  %112 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %ring1.i, align 4
  %114 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %wptr.i, align 8
  %inc.i129 = add i64 %115, 1
  store i64 %inc.i129, ptr %wptr.i, align 8
  %116 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %buf_mask.i, align 8
  %118 = trunc i64 %115 to i32
  %idxprom.i131 = and i32 %117, %118
  %arrayidx.i132 = getelementptr i32, ptr %113, i32 %idxprom.i131
  %119 = ptrtoint ptr %arrayidx.i132 to i32
  call void @__asan_store4_noabort(i32 %119)
  store volatile i32 0, ptr %arrayidx.i132, align 4
  %120 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %ptr_mask.i, align 8
  %122 = load i64, ptr %wptr.i, align 8
  %and3.i134 = and i64 %122, %121
  store i64 %and3.i134, ptr %wptr.i, align 8
  %123 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %count_dw.i, align 8
  %dec.i135 = add i32 %124, -1
  store i32 %dec.i135, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i135)
  %cmp.i138 = icmp slt i32 %dec.i135, 1
  br i1 %cmp.i138, label %if.then.i139, label %amdgpu_ring_write.exit136.amdgpu_ring_write.exit149_crit_edge

amdgpu_ring_write.exit136.amdgpu_ring_write.exit149_crit_edge: ; preds = %amdgpu_ring_write.exit136
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit149

if.then.i139:                                     ; preds = %amdgpu_ring_write.exit136
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit149

amdgpu_ring_write.exit149:                        ; preds = %if.then.i139, %amdgpu_ring_write.exit136.amdgpu_ring_write.exit149_crit_edge
  %125 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %ring1.i, align 4
  %127 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %wptr.i, align 8
  %inc.i142 = add i64 %128, 1
  store i64 %inc.i142, ptr %wptr.i, align 8
  %129 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %buf_mask.i, align 8
  %131 = trunc i64 %128 to i32
  %idxprom.i144 = and i32 %130, %131
  %arrayidx.i145 = getelementptr i32, ptr %126, i32 %idxprom.i144
  %132 = ptrtoint ptr %arrayidx.i145 to i32
  call void @__asan_store4_noabort(i32 %132)
  store volatile i32 536870912, ptr %arrayidx.i145, align 4
  %133 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %133)
  %134 = load i64, ptr %ptr_mask.i, align 8
  %135 = load i64, ptr %wptr.i, align 8
  %and3.i147 = and i64 %135, %134
  store i64 %and3.i147, ptr %wptr.i, align 8
  %136 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %count_dw.i, align 8
  %dec.i148 = add i32 %137, -1
  store i32 %dec.i148, ptr %count_dw.i, align 8
  br label %if.end20

if.end20:                                         ; preds = %amdgpu_ring_write.exit149, %amdgpu_ring_write.exit84.if.end20_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_ring_test_ring(ptr noundef %ring) #0 align 64 {
entry:
  %scratch = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %scratch) #15
  %2 = ptrtoint ptr %scratch to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %scratch, align 4, !annotation !1019
  %call = call i32 @amdgpu_gfx_scratch_get(ptr noundef %1, ptr noundef nonnull %scratch) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %scratch, align 4
  call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %4, i32 noundef -889266515, i32 noundef 0) #15
  %call2 = call i32 @amdgpu_ring_alloc(ptr noundef %ring, i32 noundef 3) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end5, label %if.end.error_free_scratch_crit_edge

if.end.error_free_scratch_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %error_free_scratch

if.end5:                                          ; preds = %if.end
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %5 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp.i = icmp slt i32 %6, 1
  br i1 %cmp.i, label %if.then.i, label %if.end5.amdgpu_ring_write.exit_crit_edge

if.end5.amdgpu_ring_write.exit_crit_edge:         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.end5.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %7 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %9 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %10, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %11 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %buf_mask.i, align 8
  %13 = trunc i64 %10 to i32
  %idxprom.i = and i32 %12, %13
  %arrayidx.i = getelementptr i32, ptr %8, i32 %idxprom.i
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile i32 -1073645312, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %15 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %ptr_mask.i, align 8
  %17 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %17, %16
  store i64 %and3.i, ptr %wptr.i, align 8
  %18 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %19, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %20 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %scratch, align 4
  %sub = add i32 %21, -49152
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i34 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i34, label %if.then.i35, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit45

if.then.i35:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit45

amdgpu_ring_write.exit45:                         ; preds = %if.then.i35, %amdgpu_ring_write.exit.amdgpu_ring_write.exit45_crit_edge
  %22 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ring1.i, align 4
  %24 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %wptr.i, align 8
  %inc.i38 = add i64 %25, 1
  store i64 %inc.i38, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %buf_mask.i, align 8
  %28 = trunc i64 %25 to i32
  %idxprom.i40 = and i32 %27, %28
  %arrayidx.i41 = getelementptr i32, ptr %23, i32 %idxprom.i40
  %29 = ptrtoint ptr %arrayidx.i41 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile i32 %sub, ptr %arrayidx.i41, align 4
  %30 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %ptr_mask.i, align 8
  %32 = load i64, ptr %wptr.i, align 8
  %and3.i43 = and i64 %32, %31
  store i64 %and3.i43, ptr %wptr.i, align 8
  %33 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %count_dw.i, align 8
  %dec.i44 = add i32 %34, -1
  store i32 %dec.i44, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i47 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i47, label %if.then.i48, label %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge

amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge: ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit58

if.then.i48:                                      ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit58

amdgpu_ring_write.exit58:                         ; preds = %if.then.i48, %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge
  %35 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ring1.i, align 4
  %37 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %wptr.i, align 8
  %inc.i51 = add i64 %38, 1
  store i64 %inc.i51, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %buf_mask.i, align 8
  %41 = trunc i64 %38 to i32
  %idxprom.i53 = and i32 %40, %41
  %arrayidx.i54 = getelementptr i32, ptr %36, i32 %idxprom.i53
  %42 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile i32 -559038737, ptr %arrayidx.i54, align 4
  %43 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %ptr_mask.i, align 8
  %45 = load i64, ptr %wptr.i, align 8
  %and3.i56 = and i64 %45, %44
  store i64 %and3.i56, ptr %wptr.i, align 8
  %46 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %count_dw.i, align 8
  %dec.i57 = add i32 %47, -1
  store i32 %dec.i57, ptr %count_dw.i, align 8
  call void @amdgpu_ring_commit(ptr noundef %ring) #15
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 11
  %48 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp59.not = icmp eq i32 %49, 0
  br i1 %cmp59.not, label %amdgpu_ring_write.exit58.for.end_crit_edge, label %amdgpu_ring_write.exit58.for.body_crit_edge

amdgpu_ring_write.exit58.for.body_crit_edge:      ; preds = %amdgpu_ring_write.exit58
  br label %for.body

amdgpu_ring_write.exit58.for.end_crit_edge:       ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %if.end9.for.body_crit_edge, %amdgpu_ring_write.exit58.for.body_crit_edge
  %i.060 = phi i32 [ %inc, %if.end9.for.body_crit_edge ], [ 0, %amdgpu_ring_write.exit58.for.body_crit_edge ]
  %50 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %scratch, align 4
  %call6 = call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %51, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -559038737, i32 %call6)
  %cmp7 = icmp eq i32 %call6, -559038737
  br i1 %cmp7, label %for.body.for.end_crit_edge, label %if.end9

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.end9:                                          ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %52 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %52(i32 noundef 214748) #15
  %inc = add nuw i32 %i.060, 1
  %53 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp ult i32 %inc, %54
  br i1 %cmp, label %if.end9.for.body_crit_edge, label %if.end9.for.end_crit_edge

if.end9.for.end_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.end9.for.body_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %if.end9.for.end_crit_edge, %for.body.for.end_crit_edge, %amdgpu_ring_write.exit58.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %amdgpu_ring_write.exit58.for.end_crit_edge ], [ %i.060, %for.body.for.end_crit_edge ], [ %inc, %if.end9.for.end_crit_edge ]
  %55 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa, i32 %56)
  %cmp11.not = icmp ult i32 %i.0.lcssa, %56
  %spec.select = select i1 %cmp11.not, i32 0, i32 -110
  br label %error_free_scratch

error_free_scratch:                               ; preds = %for.end, %if.end.error_free_scratch_crit_edge
  %r.0 = phi i32 [ %call2, %if.end.error_free_scratch_crit_edge ], [ %spec.select, %for.end ]
  %57 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %scratch, align 4
  call void @amdgpu_gfx_scratch_free(ptr noundef %1, i32 noundef %58) #15
  br label %cleanup

cleanup:                                          ; preds = %error_free_scratch, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %r.0, %error_free_scratch ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %scratch) #15
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_insert_nop(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_generic_pad_ib(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_rreg(ptr noundef %ring, i32 noundef %reg, i32 noundef %reg_val_offs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %2 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp slt i32 %3, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %4 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %6 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %7, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %8 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %buf_mask.i, align 8
  %10 = trunc i64 %7 to i32
  %idxprom.i = and i32 %9, %10
  %arrayidx.i = getelementptr i32, ptr %5, i32 %idxprom.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 -1073463296, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %12 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %ptr_mask.i, align 8
  %14 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %14, %13
  store i64 %and3.i, ptr %wptr.i, align 8
  %15 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %16, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i19 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i19, label %if.then.i20, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit30

if.then.i20:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit30

amdgpu_ring_write.exit30:                         ; preds = %if.then.i20, %amdgpu_ring_write.exit.amdgpu_ring_write.exit30_crit_edge
  %17 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ring1.i, align 4
  %19 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %wptr.i, align 8
  %inc.i23 = add i64 %20, 1
  store i64 %inc.i23, ptr %wptr.i, align 8
  %21 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %buf_mask.i, align 8
  %23 = trunc i64 %20 to i32
  %idxprom.i25 = and i32 %22, %23
  %arrayidx.i26 = getelementptr i32, ptr %18, i32 %idxprom.i25
  %24 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 1049856, ptr %arrayidx.i26, align 4
  %25 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %ptr_mask.i, align 8
  %27 = load i64, ptr %wptr.i, align 8
  %and3.i28 = and i64 %27, %26
  store i64 %and3.i28, ptr %wptr.i, align 8
  %28 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %count_dw.i, align 8
  %dec.i29 = add i32 %29, -1
  store i32 %dec.i29, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i29)
  %cmp.i32 = icmp slt i32 %dec.i29, 1
  br i1 %cmp.i32, label %if.then.i33, label %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge

amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge: ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit43

if.then.i33:                                      ; preds = %amdgpu_ring_write.exit30
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit43

amdgpu_ring_write.exit43:                         ; preds = %if.then.i33, %amdgpu_ring_write.exit30.amdgpu_ring_write.exit43_crit_edge
  %30 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ring1.i, align 4
  %32 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %wptr.i, align 8
  %inc.i36 = add i64 %33, 1
  store i64 %inc.i36, ptr %wptr.i, align 8
  %34 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %buf_mask.i, align 8
  %36 = trunc i64 %33 to i32
  %idxprom.i38 = and i32 %35, %36
  %arrayidx.i39 = getelementptr i32, ptr %31, i32 %idxprom.i38
  %37 = ptrtoint ptr %arrayidx.i39 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile i32 %reg, ptr %arrayidx.i39, align 4
  %38 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %ptr_mask.i, align 8
  %40 = load i64, ptr %wptr.i, align 8
  %and3.i41 = and i64 %40, %39
  store i64 %and3.i41, ptr %wptr.i, align 8
  %41 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %count_dw.i, align 8
  %dec.i42 = add i32 %42, -1
  store i32 %dec.i42, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i42)
  %cmp.i45 = icmp slt i32 %dec.i42, 1
  br i1 %cmp.i45, label %if.then.i46, label %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge

amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge: ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit56

if.then.i46:                                      ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit56

amdgpu_ring_write.exit56:                         ; preds = %if.then.i46, %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge
  %43 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ring1.i, align 4
  %45 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %wptr.i, align 8
  %inc.i49 = add i64 %46, 1
  store i64 %inc.i49, ptr %wptr.i, align 8
  %47 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %buf_mask.i, align 8
  %49 = trunc i64 %46 to i32
  %idxprom.i51 = and i32 %48, %49
  %arrayidx.i52 = getelementptr i32, ptr %44, i32 %idxprom.i51
  %50 = ptrtoint ptr %arrayidx.i52 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile i32 0, ptr %arrayidx.i52, align 4
  %51 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %ptr_mask.i, align 8
  %53 = load i64, ptr %wptr.i, align 8
  %and3.i54 = and i64 %53, %52
  store i64 %and3.i54, ptr %wptr.i, align 8
  %54 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %count_dw.i, align 8
  %dec.i55 = add i32 %55, -1
  store i32 %dec.i55, ptr %count_dw.i, align 8
  %gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %56 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %gpu_addr, align 8
  %mul = shl i32 %reg_val_offs, 2
  %58 = trunc i64 %57 to i32
  %conv2 = add i32 %mul, %58
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i55)
  %cmp.i58 = icmp slt i32 %dec.i55, 1
  br i1 %cmp.i58, label %if.then.i59, label %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge

amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge: ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit69

if.then.i59:                                      ; preds = %amdgpu_ring_write.exit56
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit69

amdgpu_ring_write.exit69:                         ; preds = %if.then.i59, %amdgpu_ring_write.exit56.amdgpu_ring_write.exit69_crit_edge
  %59 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %ring1.i, align 4
  %61 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %wptr.i, align 8
  %inc.i62 = add i64 %62, 1
  store i64 %inc.i62, ptr %wptr.i, align 8
  %63 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %buf_mask.i, align 8
  %65 = trunc i64 %62 to i32
  %idxprom.i64 = and i32 %64, %65
  %arrayidx.i65 = getelementptr i32, ptr %60, i32 %idxprom.i64
  %66 = ptrtoint ptr %arrayidx.i65 to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile i32 %conv2, ptr %arrayidx.i65, align 4
  %67 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %ptr_mask.i, align 8
  %69 = load i64, ptr %wptr.i, align 8
  %and3.i67 = and i64 %69, %68
  store i64 %and3.i67, ptr %wptr.i, align 8
  %70 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %count_dw.i, align 8
  %dec.i68 = add i32 %71, -1
  store i32 %dec.i68, ptr %count_dw.i, align 8
  %72 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %gpu_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i68)
  %cmp.i71 = icmp slt i32 %dec.i68, 1
  br i1 %cmp.i71, label %if.then.i72, label %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge

amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge: ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit82

if.then.i72:                                      ; preds = %amdgpu_ring_write.exit69
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit82

amdgpu_ring_write.exit82:                         ; preds = %if.then.i72, %amdgpu_ring_write.exit69.amdgpu_ring_write.exit82_crit_edge
  %conv = zext i32 %mul to i64
  %add7 = add i64 %73, %conv
  %shr = lshr i64 %add7, 32
  %conv9 = trunc i64 %shr to i32
  %74 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %ring1.i, align 4
  %76 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %wptr.i, align 8
  %inc.i75 = add i64 %77, 1
  store i64 %inc.i75, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %buf_mask.i, align 8
  %80 = trunc i64 %77 to i32
  %idxprom.i77 = and i32 %79, %80
  %arrayidx.i78 = getelementptr i32, ptr %75, i32 %idxprom.i77
  %81 = ptrtoint ptr %arrayidx.i78 to i32
  call void @__asan_store4_noabort(i32 %81)
  store volatile i32 %conv9, ptr %arrayidx.i78, align 4
  %82 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %ptr_mask.i, align 8
  %84 = load i64, ptr %wptr.i, align 8
  %and3.i80 = and i64 %84, %83
  store i64 %and3.i80, ptr %wptr.i, align 8
  %85 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %count_dw.i, align 8
  %dec.i81 = add i32 %86, -1
  store i32 %dec.i81, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_wreg(ptr noundef %ring, i32 noundef %reg, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %3)
  %switch.selectcmp = icmp eq i32 %3, 9
  %switch.select = select i1 %switch.selectcmp, i32 65536, i32 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %switch.selectcmp7 = icmp eq i32 %3, 0
  %switch.select8 = select i1 %switch.selectcmp7, i32 1074790400, i32 %switch.select
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %4 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp slt i32 %5, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %6 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %9, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %10 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %buf_mask.i, align 8
  %12 = trunc i64 %9 to i32
  %idxprom.i = and i32 %11, %12
  %arrayidx.i = getelementptr i32, ptr %7, i32 %idxprom.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 -1073531136, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %14 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %ptr_mask.i, align 8
  %16 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %16, %15
  store i64 %and3.i, ptr %wptr.i, align 8
  %17 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %18, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i10 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i10, label %if.then.i11, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit21_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit21_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit21

if.then.i11:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit21

amdgpu_ring_write.exit21:                         ; preds = %if.then.i11, %amdgpu_ring_write.exit.amdgpu_ring_write.exit21_crit_edge
  %19 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ring1.i, align 4
  %21 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %wptr.i, align 8
  %inc.i14 = add i64 %22, 1
  store i64 %inc.i14, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %buf_mask.i, align 8
  %25 = trunc i64 %22 to i32
  %idxprom.i16 = and i32 %24, %25
  %arrayidx.i17 = getelementptr i32, ptr %20, i32 %idxprom.i16
  %26 = ptrtoint ptr %arrayidx.i17 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 %switch.select8, ptr %arrayidx.i17, align 4
  %27 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %ptr_mask.i, align 8
  %29 = load i64, ptr %wptr.i, align 8
  %and3.i19 = and i64 %29, %28
  store i64 %and3.i19, ptr %wptr.i, align 8
  %30 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %count_dw.i, align 8
  %dec.i20 = add i32 %31, -1
  store i32 %dec.i20, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i20)
  %cmp.i23 = icmp slt i32 %dec.i20, 1
  br i1 %cmp.i23, label %if.then.i24, label %amdgpu_ring_write.exit21.amdgpu_ring_write.exit34_crit_edge

amdgpu_ring_write.exit21.amdgpu_ring_write.exit34_crit_edge: ; preds = %amdgpu_ring_write.exit21
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit34

if.then.i24:                                      ; preds = %amdgpu_ring_write.exit21
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit34

amdgpu_ring_write.exit34:                         ; preds = %if.then.i24, %amdgpu_ring_write.exit21.amdgpu_ring_write.exit34_crit_edge
  %32 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ring1.i, align 4
  %34 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %wptr.i, align 8
  %inc.i27 = add i64 %35, 1
  store i64 %inc.i27, ptr %wptr.i, align 8
  %36 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %buf_mask.i, align 8
  %38 = trunc i64 %35 to i32
  %idxprom.i29 = and i32 %37, %38
  %arrayidx.i30 = getelementptr i32, ptr %33, i32 %idxprom.i29
  %39 = ptrtoint ptr %arrayidx.i30 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 %reg, ptr %arrayidx.i30, align 4
  %40 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %ptr_mask.i, align 8
  %42 = load i64, ptr %wptr.i, align 8
  %and3.i32 = and i64 %42, %41
  store i64 %and3.i32, ptr %wptr.i, align 8
  %43 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %count_dw.i, align 8
  %dec.i33 = add i32 %44, -1
  store i32 %dec.i33, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i33)
  %cmp.i36 = icmp slt i32 %dec.i33, 1
  br i1 %cmp.i36, label %if.then.i37, label %amdgpu_ring_write.exit34.amdgpu_ring_write.exit47_crit_edge

amdgpu_ring_write.exit34.amdgpu_ring_write.exit47_crit_edge: ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit47

if.then.i37:                                      ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit47

amdgpu_ring_write.exit47:                         ; preds = %if.then.i37, %amdgpu_ring_write.exit34.amdgpu_ring_write.exit47_crit_edge
  %45 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ring1.i, align 4
  %47 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %wptr.i, align 8
  %inc.i40 = add i64 %48, 1
  store i64 %inc.i40, ptr %wptr.i, align 8
  %49 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %buf_mask.i, align 8
  %51 = trunc i64 %48 to i32
  %idxprom.i42 = and i32 %50, %51
  %arrayidx.i43 = getelementptr i32, ptr %46, i32 %idxprom.i42
  %52 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 0, ptr %arrayidx.i43, align 4
  %53 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %ptr_mask.i, align 8
  %55 = load i64, ptr %wptr.i, align 8
  %and3.i45 = and i64 %55, %54
  store i64 %and3.i45, ptr %wptr.i, align 8
  %56 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %count_dw.i, align 8
  %dec.i46 = add i32 %57, -1
  store i32 %dec.i46, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i46)
  %cmp.i49 = icmp slt i32 %dec.i46, 1
  br i1 %cmp.i49, label %if.then.i50, label %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge

amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge: ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit60

if.then.i50:                                      ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit60

amdgpu_ring_write.exit60:                         ; preds = %if.then.i50, %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge
  %58 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %ring1.i, align 4
  %60 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %wptr.i, align 8
  %inc.i53 = add i64 %61, 1
  store i64 %inc.i53, ptr %wptr.i, align 8
  %62 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %buf_mask.i, align 8
  %64 = trunc i64 %61 to i32
  %idxprom.i55 = and i32 %63, %64
  %arrayidx.i56 = getelementptr i32, ptr %59, i32 %idxprom.i55
  %65 = ptrtoint ptr %arrayidx.i56 to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile i32 %val, ptr %arrayidx.i56, align 4
  %66 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %ptr_mask.i, align 8
  %68 = load i64, ptr %wptr.i, align 8
  %and3.i58 = and i64 %68, %67
  store i64 %and3.i58, ptr %wptr.i, align 8
  %69 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %count_dw.i, align 8
  %dec.i59 = add i32 %70, -1
  store i32 %dec.i59, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_reg_wait(ptr noundef %ring, i32 noundef %reg, i32 noundef %val, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @gfx_v9_0_wait_reg_mem(ptr noundef %ring, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef %reg, i32 noundef 0, i32 noundef %val, i32 noundef %mask, i32 noundef 32)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_reg_write_reg_wait(ptr noundef %ring, i32 noundef %reg0, i32 noundef %reg1, i32 noundef %ref, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %4 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ring, align 8
  %me_fw_write_wait = getelementptr inbounds %struct.amdgpu_device, ptr %5, i32 0, i32 106, i32 34
  %mec_fw_write_wait = getelementptr inbounds %struct.amdgpu_device, ptr %5, i32 0, i32 106, i32 33
  %cond.in.in = select i1 %cmp, ptr %me_fw_write_wait, ptr %mec_fw_write_wait
  %6 = ptrtoint ptr %cond.in.in to i32
  call void @__asan_load1_noabort(i32 %6)
  %cond.in = load i8, ptr %cond.in.in, align 1, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %cond.in)
  %tobool10.not = icmp eq i8 %cond.in, 0
  br i1 %tobool10.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i1 %cmp to i32
  tail call fastcc void @gfx_v9_0_wait_reg_mem(ptr noundef %ring, i32 noundef %conv, i32 noundef 0, i32 noundef 1, i32 noundef %reg0, i32 noundef %reg1, i32 noundef %ref, i32 noundef %mask, i32 noundef 32)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @amdgpu_ring_emit_reg_write_reg_wait_helper(ptr noundef %ring, i32 noundef %reg0, i32 noundef %reg1, i32 noundef %ref, i32 noundef %mask) #15
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_mm_wdoorbell64(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_set(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_scratch_get(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ring_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_device_rreg(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_scratch_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_wait_reg_mem(ptr noundef %ring, i32 noundef %eng_sel, i32 noundef %mem_space, i32 noundef %opt, i32 noundef %addr0, i32 noundef %addr1, i32 noundef %ref, i32 noundef %mask, i32 noundef %inv) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073398784, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %shl = shl i32 %mem_space, 4
  %shl1 = shl i32 %opt, 6
  %shl3 = shl i32 %eng_sel, 8
  %or = or i32 %shl3, %shl
  %or2 = or i32 %or, %shl1
  %or4 = or i32 %or2, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i23 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i23, label %if.then.i24, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit34_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit34_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit34

if.then.i24:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit34

amdgpu_ring_write.exit34:                         ; preds = %if.then.i24, %amdgpu_ring_write.exit.amdgpu_ring_write.exit34_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i27 = add i64 %18, 1
  store i64 %inc.i27, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i29 = and i32 %20, %21
  %arrayidx.i30 = getelementptr i32, ptr %16, i32 %idxprom.i29
  %22 = ptrtoint ptr %arrayidx.i30 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 %or4, ptr %arrayidx.i30, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i32 = and i64 %25, %24
  store i64 %and3.i32, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i33 = add i32 %27, -1
  store i32 %dec.i33, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mem_space)
  %tobool.not = icmp eq i32 %mem_space, 0
  %and = and i32 %addr0, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  %or.cond = or i1 %tobool.not, %tobool5.not
  br i1 %or.cond, label %if.end13, label %do.body9, !prof !1020

do.body9:                                         ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1116, 0\0A.popsection", ""() #15, !srcloc !1021
  unreachable

if.end13:                                         ; preds = %amdgpu_ring_write.exit34
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i33)
  %cmp.i36 = icmp slt i32 %dec.i33, 1
  br i1 %cmp.i36, label %if.then.i37, label %if.end13.amdgpu_ring_write.exit47_crit_edge

if.end13.amdgpu_ring_write.exit47_crit_edge:      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit47

if.then.i37:                                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit47

amdgpu_ring_write.exit47:                         ; preds = %if.then.i37, %if.end13.amdgpu_ring_write.exit47_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i40 = add i64 %31, 1
  store i64 %inc.i40, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i42 = and i32 %33, %34
  %arrayidx.i43 = getelementptr i32, ptr %29, i32 %idxprom.i42
  %35 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %addr0, ptr %arrayidx.i43, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i45 = and i64 %38, %37
  store i64 %and3.i45, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i46 = add i32 %40, -1
  store i32 %dec.i46, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i46)
  %cmp.i49 = icmp slt i32 %dec.i46, 1
  br i1 %cmp.i49, label %if.then.i50, label %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge

amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge: ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit60

if.then.i50:                                      ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit60

amdgpu_ring_write.exit60:                         ; preds = %if.then.i50, %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i53 = add i64 %44, 1
  store i64 %inc.i53, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i55 = and i32 %46, %47
  %arrayidx.i56 = getelementptr i32, ptr %42, i32 %idxprom.i55
  %48 = ptrtoint ptr %arrayidx.i56 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %addr1, ptr %arrayidx.i56, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i58 = and i64 %51, %50
  store i64 %and3.i58, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i59 = add i32 %53, -1
  store i32 %dec.i59, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i59)
  %cmp.i62 = icmp slt i32 %dec.i59, 1
  br i1 %cmp.i62, label %if.then.i63, label %amdgpu_ring_write.exit60.amdgpu_ring_write.exit73_crit_edge

amdgpu_ring_write.exit60.amdgpu_ring_write.exit73_crit_edge: ; preds = %amdgpu_ring_write.exit60
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit73

if.then.i63:                                      ; preds = %amdgpu_ring_write.exit60
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit73

amdgpu_ring_write.exit73:                         ; preds = %if.then.i63, %amdgpu_ring_write.exit60.amdgpu_ring_write.exit73_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i66 = add i64 %57, 1
  store i64 %inc.i66, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i68 = and i32 %59, %60
  %arrayidx.i69 = getelementptr i32, ptr %55, i32 %idxprom.i68
  %61 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 %ref, ptr %arrayidx.i69, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i71 = and i64 %64, %63
  store i64 %and3.i71, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i72 = add i32 %66, -1
  store i32 %dec.i72, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i72)
  %cmp.i75 = icmp slt i32 %dec.i72, 1
  br i1 %cmp.i75, label %if.then.i76, label %amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge

amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge: ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit86

if.then.i76:                                      ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit86

amdgpu_ring_write.exit86:                         ; preds = %if.then.i76, %amdgpu_ring_write.exit73.amdgpu_ring_write.exit86_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i79 = add i64 %70, 1
  store i64 %inc.i79, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i81 = and i32 %72, %73
  %arrayidx.i82 = getelementptr i32, ptr %68, i32 %idxprom.i81
  %74 = ptrtoint ptr %arrayidx.i82 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 %mask, ptr %arrayidx.i82, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i84 = and i64 %77, %76
  store i64 %and3.i84, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i85 = add i32 %79, -1
  store i32 %dec.i85, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i85)
  %cmp.i88 = icmp slt i32 %dec.i85, 1
  br i1 %cmp.i88, label %if.then.i89, label %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge

amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge: ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit99

if.then.i89:                                      ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit99

amdgpu_ring_write.exit99:                         ; preds = %if.then.i89, %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i92 = add i64 %83, 1
  store i64 %inc.i92, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i94 = and i32 %85, %86
  %arrayidx.i95 = getelementptr i32, ptr %81, i32 %idxprom.i94
  %87 = ptrtoint ptr %arrayidx.i95 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 %inv, ptr %arrayidx.i95, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i97 = and i64 %90, %89
  store i64 %and3.i97, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i98 = add i32 %92, -1
  store i32 %dec.i98, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_emit_reg_write_reg_wait_helper(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @gfx_v9_0_ring_get_rptr_gfx(ptr nocapture noundef readonly %ring) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %wb1 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %2 = ptrtoint ptr %wb1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wb1, align 4
  %rptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 6
  %4 = ptrtoint ptr %rptr_offs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %3, i32 %5
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx, align 4
  %conv = zext i32 %7 to i64
  ret i64 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @gfx_v9_0_ring_get_wptr_gfx(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %2 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %wb2 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb2, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %arrayidx, i32 noundef 8) #15
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %arrayidx) #15
  br label %if.end

if.else:                                          ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %8 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %virt, align 8
  %and = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.else.cond.false_crit_edge, label %land.lhs.true

if.else.cond.false_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %if.else
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %10 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %funcs, align 4
  %tobool4.not = icmp eq ptr %11, null
  br i1 %tobool4.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true5

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true5:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %11, i32 0, i32 13
  %12 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sriov_rreg, align 4
  %tobool9.not = icmp eq ptr %13, null
  br i1 %tobool9.not, label %land.lhs.true5.cond.false_crit_edge, label %cond.true

land.lhs.true5.cond.false_crit_edge:              ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %14 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx14, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add = add i32 %17, 4180
  %call17 = tail call i32 %13(ptr noundef %1, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true5.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.else.cond.false_crit_edge
  %arrayidx19 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %18 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx19, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add22 = add i32 %21, 4180
  %call23 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add22, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call17, %cond.true ], [ %call23, %cond.false ]
  %conv = zext i32 %cond to i64
  %22 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %virt, align 8
  %and26 = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %cond.end.cond.false50_crit_edge, label %land.lhs.true28

cond.end.cond.false50_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50

land.lhs.true28:                                  ; preds = %cond.end
  %funcs31 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %24 = ptrtoint ptr %funcs31 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %funcs31, align 4
  %tobool32.not = icmp eq ptr %25, null
  br i1 %tobool32.not, label %land.lhs.true28.cond.false50_crit_edge, label %land.lhs.true33

land.lhs.true28.cond.false50_crit_edge:           ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %sriov_rreg37 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %25, i32 0, i32 13
  %26 = ptrtoint ptr %sriov_rreg37 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sriov_rreg37, align 4
  %tobool38.not = icmp eq ptr %27, null
  br i1 %tobool38.not, label %land.lhs.true33.cond.false50_crit_edge, label %cond.true39

land.lhs.true33.cond.false50_crit_edge:           ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false50

cond.true39:                                      ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx45 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx45, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add48 = add i32 %31, 4181
  %call49 = tail call i32 %27(ptr noundef %1, i32 noundef %add48, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end57

cond.false50:                                     ; preds = %land.lhs.true33.cond.false50_crit_edge, %land.lhs.true28.cond.false50_crit_edge, %cond.end.cond.false50_crit_edge
  %arrayidx52 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %32 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx52, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %add55 = add i32 %35, 4181
  %call56 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add55, i32 noundef 0) #15
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false50, %cond.true39
  %cond58 = phi i32 [ %call49, %cond.true39 ], [ %call56, %cond.false50 ]
  %conv59 = zext i32 %cond58 to i64
  %shl = shl nuw i64 %conv59, 32
  %add60 = or i64 %shl, %conv
  br label %if.end

if.end:                                           ; preds = %cond.end57, %if.then
  %wptr.0 = phi i64 [ %call.i, %if.then ], [ %add60, %cond.end57 ]
  ret i64 %wptr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_set_wptr_gfx(ptr nocapture noundef readonly %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %2 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %wb2 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %4 = ptrtoint ptr %wb2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wb2, align 4
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %6 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wptr_offs, align 8
  %arrayidx = getelementptr i32, ptr %5, i32 %7
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %8 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %wptr, align 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %arrayidx, i32 noundef 8) #15
  tail call void @generic_atomic64_set(ptr noundef %arrayidx, i64 noundef %9) #15
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %10 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %doorbell_index, align 8
  %12 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %wptr, align 8
  tail call void @amdgpu_mm_wdoorbell64(ptr noundef %1, i32 noundef %11, i64 noundef %13) #15
  br label %if.end

if.else:                                          ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.else.cond.false_crit_edge, label %land.lhs.true

if.else.cond.false_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %if.else
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %17, null
  br i1 %tobool5.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg, align 4
  %tobool10.not = icmp eq ptr %19, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx15 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx15, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add = add i32 %23, 4180
  %wptr18 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %24 = ptrtoint ptr %wptr18 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %wptr18, align 8
  %conv = trunc i64 %25 to i32
  tail call void %19(ptr noundef %1, i32 noundef %add, i32 noundef %conv, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.else.cond.false_crit_edge
  %arrayidx21 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx21, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %add24 = add i32 %29, 4180
  %wptr25 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %30 = ptrtoint ptr %wptr25 to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr25, align 8
  %conv27 = trunc i64 %31 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add24, i32 noundef %conv27, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %32 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %virt, align 8
  %and30 = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %cond.end.cond.false56_crit_edge, label %land.lhs.true32

cond.end.cond.false56_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56

land.lhs.true32:                                  ; preds = %cond.end
  %funcs35 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %34 = ptrtoint ptr %funcs35 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %funcs35, align 4
  %tobool36.not = icmp eq ptr %35, null
  br i1 %tobool36.not, label %land.lhs.true32.cond.false56_crit_edge, label %land.lhs.true37

land.lhs.true32.cond.false56_crit_edge:           ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56

land.lhs.true37:                                  ; preds = %land.lhs.true32
  %sriov_wreg41 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %35, i32 0, i32 12
  %36 = ptrtoint ptr %sriov_wreg41 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sriov_wreg41, align 4
  %tobool42.not = icmp eq ptr %37, null
  br i1 %tobool42.not, label %land.lhs.true37.cond.false56_crit_edge, label %cond.true43

land.lhs.true37.cond.false56_crit_edge:           ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false56

cond.true43:                                      ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx49 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %38 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx49, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %add52 = add i32 %41, 4181
  %wptr53 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %42 = ptrtoint ptr %wptr53 to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %wptr53, align 8
  %shr = lshr i64 %43, 32
  %conv55 = trunc i64 %shr to i32
  tail call void %37(ptr noundef %1, i32 noundef %add52, i32 noundef %conv55, i32 noundef 0, i32 noundef 1) #15
  br label %if.end

cond.false56:                                     ; preds = %land.lhs.true37.cond.false56_crit_edge, %land.lhs.true32.cond.false56_crit_edge, %cond.end.cond.false56_crit_edge
  %arrayidx58 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %44 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx58, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add61 = add i32 %47, 4181
  %wptr62 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %48 = ptrtoint ptr %wptr62 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %wptr62, align 8
  %shr63 = lshr i64 %49, 32
  %conv65 = trunc i64 %shr63 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add61, i32 noundef %conv65, i32 noundef 0) #15
  br label %if.end

if.end:                                           ; preds = %cond.false56, %cond.true43, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_ib_gfx(ptr noundef %ring, ptr noundef readonly %job, ptr nocapture noundef readonly %ib, i32 noundef %flags) #0 align 64 {
entry:
  %de_payload.i = alloca %struct.v9_de_ib_state, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %job, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %vmid1 = getelementptr inbounds %struct.amdgpu_job, ptr %job, i32 0, i32 12
  %0 = ptrtoint ptr %vmid1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vmid1, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %1, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %flags2 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 4
  %2 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags2, align 4
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  %. = select i1 %tobool3.not, i32 -1073594624, i32 -1073597696
  %length_dw = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 1
  %4 = ptrtoint ptr %length_dw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %length_dw, align 4
  %shl = shl i32 %cond, 24
  %or = or i32 %5, %shl
  %6 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ring, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %7, i32 0, i32 132
  %8 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %virt, align 8
  %and5 = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  %and8 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  %or.cond92 = select i1 %tobool6.not, i1 true, i1 %tobool9.not
  br i1 %or.cond92, label %cond.end.if.end19_crit_edge, label %if.then10

cond.end.if.end19_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

if.then10:                                        ; preds = %cond.end
  %or11 = or i32 %or, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp ne i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %tobool16.not = icmp eq i32 %cond, 0
  %or.cond = select i1 %tobool14.not, i1 true, i1 %tobool16.not
  br i1 %or.cond, label %if.then10.if.end19_crit_edge, label %if.then17

if.then10.if.end19_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

if.then17:                                        ; preds = %if.then10
  call void @llvm.lifetime.start.p0(i64 108, ptr nonnull %de_payload.i) #15
  %10 = call ptr @memset(ptr %de_payload.i, i32 0, i32 108)
  %call.i = tail call i64 @amdgpu_csa_vaddr(ptr noundef %7) #15
  %add.i = add i64 %call.i, 4096
  %conv.i = trunc i64 %add.i to i32
  %gds_backup_addrlo.i = getelementptr inbounds %struct.v9_de_ib_state, ptr %de_payload.i, i32 0, i32 22
  %11 = ptrtoint ptr %gds_backup_addrlo.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv.i, ptr %gds_backup_addrlo.i, align 4
  %shr.i = lshr i64 %add.i, 32
  %conv2.i = trunc i64 %shr.i to i32
  %gds_backup_addrhi.i = getelementptr inbounds %struct.v9_de_ib_state, ptr %de_payload.i, i32 0, i32 23
  %12 = ptrtoint ptr %gds_backup_addrhi.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %conv2.i, ptr %gds_backup_addrhi.i, align 4
  %count_dw.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %13 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp.i.i = icmp slt i32 %14, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then17.amdgpu_ring_write.exit.i_crit_edge

if.then17.amdgpu_ring_write.exit.i_crit_edge:     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit.i

if.then.i.i:                                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit.i

amdgpu_ring_write.exit.i:                         ; preds = %if.then.i.i, %if.then17.amdgpu_ring_write.exit.i_crit_edge
  %ring1.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %15 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i.i, align 4
  %wptr.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %17 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i.i, align 8
  %inc.i.i = add i64 %18, 1
  store i64 %inc.i.i, ptr %wptr.i.i, align 8
  %buf_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %19 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i.i = and i32 %20, %21
  %arrayidx.i.i = getelementptr i32, ptr %16, i32 %idxprom.i.i
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 -1071827200, ptr %arrayidx.i.i, align 4
  %ptr_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %23 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i.i, align 8
  %25 = load i64, ptr %wptr.i.i, align 8
  %and3.i.i = and i64 %25, %24
  store i64 %and3.i.i, ptr %wptr.i.i, align 8
  %26 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i.i, align 8
  %dec.i.i = add i32 %27, -1
  store i32 %dec.i.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i.i)
  %cmp.i20.i = icmp slt i32 %dec.i.i, 1
  br i1 %cmp.i20.i, label %if.then.i21.i, label %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit31.i_crit_edge

amdgpu_ring_write.exit.i.amdgpu_ring_write.exit31.i_crit_edge: ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit31.i

if.then.i21.i:                                    ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit31.i

amdgpu_ring_write.exit31.i:                       ; preds = %if.then.i21.i, %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit31.i_crit_edge
  %28 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i.i, align 4
  %30 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i.i, align 8
  %inc.i24.i = add i64 %31, 1
  store i64 %inc.i24.i, ptr %wptr.i.i, align 8
  %32 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i26.i = and i32 %33, %34
  %arrayidx.i27.i = getelementptr i32, ptr %29, i32 %idxprom.i26.i
  %35 = ptrtoint ptr %arrayidx.i27.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 1074792448, ptr %arrayidx.i27.i, align 4
  %36 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i.i, align 8
  %38 = load i64, ptr %wptr.i.i, align 8
  %and3.i29.i = and i64 %38, %37
  store i64 %and3.i29.i, ptr %wptr.i.i, align 8
  %39 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i.i, align 8
  %dec.i30.i = add i32 %40, -1
  store i32 %dec.i30.i, ptr %count_dw.i.i, align 8
  %add4.i = add i64 %call.i, 256
  %conv6.i = trunc i64 %add4.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i30.i)
  %cmp.i33.i = icmp slt i32 %dec.i30.i, 1
  br i1 %cmp.i33.i, label %if.then.i34.i, label %amdgpu_ring_write.exit31.i.amdgpu_ring_write.exit44.i_crit_edge

amdgpu_ring_write.exit31.i.amdgpu_ring_write.exit44.i_crit_edge: ; preds = %amdgpu_ring_write.exit31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit44.i

if.then.i34.i:                                    ; preds = %amdgpu_ring_write.exit31.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit44.i

amdgpu_ring_write.exit44.i:                       ; preds = %if.then.i34.i, %amdgpu_ring_write.exit31.i.amdgpu_ring_write.exit44.i_crit_edge
  %41 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i.i, align 4
  %43 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i.i, align 8
  %inc.i37.i = add i64 %44, 1
  store i64 %inc.i37.i, ptr %wptr.i.i, align 8
  %45 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i39.i = and i32 %46, %47
  %arrayidx.i40.i = getelementptr i32, ptr %42, i32 %idxprom.i39.i
  %48 = ptrtoint ptr %arrayidx.i40.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %conv6.i, ptr %arrayidx.i40.i, align 4
  %49 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i.i, align 8
  %51 = load i64, ptr %wptr.i.i, align 8
  %and3.i42.i = and i64 %51, %50
  store i64 %and3.i42.i, ptr %wptr.i.i, align 8
  %52 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i.i, align 8
  %dec.i43.i = add i32 %53, -1
  store i32 %dec.i43.i, ptr %count_dw.i.i, align 8
  %shr8.i = lshr i64 %add4.i, 32
  %conv10.i = trunc i64 %shr8.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i43.i)
  %cmp.i46.i = icmp slt i32 %dec.i43.i, 1
  br i1 %cmp.i46.i, label %if.then.i47.i, label %amdgpu_ring_write.exit44.i.amdgpu_ring_write.exit57.i_crit_edge

amdgpu_ring_write.exit44.i.amdgpu_ring_write.exit57.i_crit_edge: ; preds = %amdgpu_ring_write.exit44.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit57.i

if.then.i47.i:                                    ; preds = %amdgpu_ring_write.exit44.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit57.i

amdgpu_ring_write.exit57.i:                       ; preds = %if.then.i47.i, %amdgpu_ring_write.exit44.i.amdgpu_ring_write.exit57.i_crit_edge
  %54 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i.i, align 4
  %56 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i.i, align 8
  %inc.i50.i = add i64 %57, 1
  store i64 %inc.i50.i, ptr %wptr.i.i, align 8
  %58 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i52.i = and i32 %59, %60
  %arrayidx.i53.i = getelementptr i32, ptr %55, i32 %idxprom.i52.i
  %61 = ptrtoint ptr %arrayidx.i53.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 %conv10.i, ptr %arrayidx.i53.i, align 4
  %62 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i.i, align 8
  %64 = load i64, ptr %wptr.i.i, align 8
  %and3.i55.i = and i64 %64, %63
  store i64 %and3.i55.i, ptr %wptr.i.i, align 8
  %65 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i.i, align 8
  %dec.i56.i = add i32 %66, -1
  store i32 %dec.i56.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %dec.i56.i)
  %cmp.i58.i = icmp slt i32 %dec.i56.i, 27
  br i1 %cmp.i58.i, label %if.then.i59.i, label %amdgpu_ring_write.exit57.i.if.end.i.i_crit_edge, !prof !1022

amdgpu_ring_write.exit57.i.if.end.i.i_crit_edge:  ; preds = %amdgpu_ring_write.exit57.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.then.i59.i:                                    ; preds = %amdgpu_ring_write.exit57.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i59.i, %amdgpu_ring_write.exit57.i.if.end.i.i_crit_edge
  %67 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %wptr.i.i, align 8
  %69 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %buf_mask.i.i, align 8
  %71 = trunc i64 %68 to i32
  %conv3.i.i = and i32 %70, %71
  %add.i.i = add i32 %70, 1
  %sub.i.i = sub i32 %add.i.i, %conv3.i.i
  %72 = tail call i32 @llvm.umin.i32(i32 %sub.i.i, i32 27) #15
  %shl.i.i = shl nuw nsw i32 %72, 2
  %.neg.i = mul nsw i32 %72, -4
  %shl9.i.i = add nsw i32 %.neg.i, 108
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool10.not.i.i = icmp eq i32 %72, 0
  br i1 %tobool10.not.i.i, label %if.end.i.i.if.end12.i.i_crit_edge, label %if.then11.i.i

if.end.i.i.if.end12.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %73 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ring1.i.i, align 4
  %arrayidx.i62.i = getelementptr i32, ptr %74, i32 %conv3.i.i
  %75 = call ptr @memcpy(ptr %arrayidx.i62.i, ptr %de_payload.i, i32 %shl.i.i)
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.then11.i.i, %if.end.i.i.if.end12.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl9.i.i)
  %tobool13.not.i.i = icmp eq i32 %shl9.i.i, 0
  br i1 %tobool13.not.i.i, label %if.end12.i.i.gfx_v9_0_ring_emit_de_meta.exit_crit_edge, label %if.then14.i.i

if.end12.i.i.gfx_v9_0_ring_emit_de_meta.exit_crit_edge: ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_ring_emit_de_meta.exit

if.then14.i.i:                                    ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr.i.i = getelementptr i8, ptr %de_payload.i, i32 %shl.i.i
  %76 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %ring1.i.i, align 4
  %78 = call ptr @memcpy(ptr %77, ptr %add.ptr.i.i, i32 %shl9.i.i)
  br label %gfx_v9_0_ring_emit_de_meta.exit

gfx_v9_0_ring_emit_de_meta.exit:                  ; preds = %if.then14.i.i, %if.end12.i.i.gfx_v9_0_ring_emit_de_meta.exit_crit_edge
  %79 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %wptr.i.i, align 8
  %add19.i.i = add i64 %80, 27
  %81 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %ptr_mask.i.i, align 8
  %and21.i.i = and i64 %82, %add19.i.i
  store i64 %and21.i.i, ptr %wptr.i.i, align 8
  %83 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %count_dw.i.i, align 8
  %sub23.i.i = add i32 %84, -27
  store i32 %sub23.i.i, ptr %count_dw.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 108, ptr nonnull %de_payload.i) #15
  br label %if.end19

if.end19:                                         ; preds = %gfx_v9_0_ring_emit_de_meta.exit, %if.then10.if.end19_crit_edge, %cond.end.if.end19_crit_edge
  %control.0 = phi i32 [ %or11, %if.then10.if.end19_crit_edge ], [ %or11, %gfx_v9_0_ring_emit_de_meta.exit ], [ %or, %cond.end.if.end19_crit_edge ]
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %85 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %86)
  %cmp.i = icmp slt i32 %86, 1
  br i1 %cmp.i, label %if.then.i, label %if.end19.amdgpu_ring_write.exit_crit_edge

if.end19.amdgpu_ring_write.exit_crit_edge:        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.end19.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %87 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %89 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %90, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %91 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %buf_mask.i, align 8
  %93 = trunc i64 %90 to i32
  %idxprom.i = and i32 %92, %93
  %arrayidx.i = getelementptr i32, ptr %88, i32 %idxprom.i
  %94 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store volatile i32 %., ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %95 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %ptr_mask.i, align 8
  %97 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %97, %96
  store i64 %and3.i, ptr %wptr.i, align 8
  %98 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %99, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %gpu_addr = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 2
  %100 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %gpu_addr, align 8
  %and20 = and i64 %101, 3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and20)
  %tobool21.not = icmp eq i64 %and20, 0
  br i1 %tobool21.not, label %do.end31, label %do.body25, !prof !1011

do.body25:                                        ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5460, 0\0A.popsection", ""() #15, !srcloc !1023
  unreachable

do.end31:                                         ; preds = %amdgpu_ring_write.exit
  %conv = trunc i64 %101 to i32
  %or34 = or i32 %conv, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i54 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i54, label %if.then.i55, label %do.end31.amdgpu_ring_write.exit65_crit_edge

do.end31.amdgpu_ring_write.exit65_crit_edge:      ; preds = %do.end31
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit65

if.then.i55:                                      ; preds = %do.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit65

amdgpu_ring_write.exit65:                         ; preds = %if.then.i55, %do.end31.amdgpu_ring_write.exit65_crit_edge
  %102 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %ring1.i, align 4
  %104 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %wptr.i, align 8
  %inc.i58 = add i64 %105, 1
  store i64 %inc.i58, ptr %wptr.i, align 8
  %106 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %buf_mask.i, align 8
  %108 = trunc i64 %105 to i32
  %idxprom.i60 = and i32 %107, %108
  %arrayidx.i61 = getelementptr i32, ptr %103, i32 %idxprom.i60
  %109 = ptrtoint ptr %arrayidx.i61 to i32
  call void @__asan_store4_noabort(i32 %109)
  store volatile i32 %or34, ptr %arrayidx.i61, align 4
  %110 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %110)
  %111 = load i64, ptr %ptr_mask.i, align 8
  %112 = load i64, ptr %wptr.i, align 8
  %and3.i63 = and i64 %112, %111
  store i64 %and3.i63, ptr %wptr.i, align 8
  %113 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %count_dw.i, align 8
  %dec.i64 = add i32 %114, -1
  store i32 %dec.i64, ptr %count_dw.i, align 8
  %115 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %115)
  %116 = load i64, ptr %gpu_addr, align 8
  %shr = lshr i64 %116, 32
  %conv37 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i64)
  %cmp.i67 = icmp slt i32 %dec.i64, 1
  br i1 %cmp.i67, label %if.then.i68, label %amdgpu_ring_write.exit65.amdgpu_ring_write.exit78_crit_edge

amdgpu_ring_write.exit65.amdgpu_ring_write.exit78_crit_edge: ; preds = %amdgpu_ring_write.exit65
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit78

if.then.i68:                                      ; preds = %amdgpu_ring_write.exit65
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit78

amdgpu_ring_write.exit78:                         ; preds = %if.then.i68, %amdgpu_ring_write.exit65.amdgpu_ring_write.exit78_crit_edge
  %117 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %ring1.i, align 4
  %119 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %wptr.i, align 8
  %inc.i71 = add i64 %120, 1
  store i64 %inc.i71, ptr %wptr.i, align 8
  %121 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %buf_mask.i, align 8
  %123 = trunc i64 %120 to i32
  %idxprom.i73 = and i32 %122, %123
  %arrayidx.i74 = getelementptr i32, ptr %118, i32 %idxprom.i73
  %124 = ptrtoint ptr %arrayidx.i74 to i32
  call void @__asan_store4_noabort(i32 %124)
  store volatile i32 %conv37, ptr %arrayidx.i74, align 4
  %125 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %ptr_mask.i, align 8
  %127 = load i64, ptr %wptr.i, align 8
  %and3.i76 = and i64 %127, %126
  store i64 %and3.i76, ptr %wptr.i, align 8
  %128 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %count_dw.i, align 8
  %dec.i77 = add i32 %129, -1
  store i32 %dec.i77, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i77)
  %cmp.i80 = icmp slt i32 %dec.i77, 1
  br i1 %cmp.i80, label %if.then.i81, label %amdgpu_ring_write.exit78.amdgpu_ring_write.exit91_crit_edge

amdgpu_ring_write.exit78.amdgpu_ring_write.exit91_crit_edge: ; preds = %amdgpu_ring_write.exit78
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit91

if.then.i81:                                      ; preds = %amdgpu_ring_write.exit78
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit91

amdgpu_ring_write.exit91:                         ; preds = %if.then.i81, %amdgpu_ring_write.exit78.amdgpu_ring_write.exit91_crit_edge
  %130 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %ring1.i, align 4
  %132 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %132)
  %133 = load i64, ptr %wptr.i, align 8
  %inc.i84 = add i64 %133, 1
  store i64 %inc.i84, ptr %wptr.i, align 8
  %134 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %buf_mask.i, align 8
  %136 = trunc i64 %133 to i32
  %idxprom.i86 = and i32 %135, %136
  %arrayidx.i87 = getelementptr i32, ptr %131, i32 %idxprom.i86
  %137 = ptrtoint ptr %arrayidx.i87 to i32
  call void @__asan_store4_noabort(i32 %137)
  store volatile i32 %control.0, ptr %arrayidx.i87, align 4
  %138 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %138)
  %139 = load i64, ptr %ptr_mask.i, align 8
  %140 = load i64, ptr %wptr.i, align 8
  %and3.i89 = and i64 %140, %139
  store i64 %and3.i89, ptr %wptr.i, align 8
  %141 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %count_dw.i, align 8
  %dec.i90 = add i32 %142, -1
  store i32 %dec.i90, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_fence(ptr noundef %ring, i64 noundef %addr, i64 noundef %seq, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %and4 = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073329920, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %or8 = select i1 %tobool5.not, i32 2327828, i32 558356
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i70 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i70, label %if.then.i71, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit81_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit81_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit81

if.then.i71:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit81

amdgpu_ring_write.exit81:                         ; preds = %if.then.i71, %amdgpu_ring_write.exit.amdgpu_ring_write.exit81_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i74 = add i64 %18, 1
  store i64 %inc.i74, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i76 = and i32 %20, %21
  %arrayidx.i77 = getelementptr i32, ptr %16, i32 %idxprom.i76
  %22 = ptrtoint ptr %arrayidx.i77 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 %or8, ptr %arrayidx.i77, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i79 = and i64 %25, %24
  store i64 %and3.i79, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i80 = add i32 %27, -1
  store i32 %dec.i80, ptr %count_dw.i, align 8
  %cond10 = select i1 %tobool.not, i32 536870912, i32 1073741824
  %and1 = shl i32 %flags, 24
  %shl13 = and i32 %and1, 33554432
  %or14 = or i32 %cond10, %shl13
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i80)
  %cmp.i83 = icmp slt i32 %dec.i80, 1
  br i1 %cmp.i83, label %if.then.i84, label %amdgpu_ring_write.exit81.amdgpu_ring_write.exit94_crit_edge

amdgpu_ring_write.exit81.amdgpu_ring_write.exit94_crit_edge: ; preds = %amdgpu_ring_write.exit81
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit94

if.then.i84:                                      ; preds = %amdgpu_ring_write.exit81
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit94

amdgpu_ring_write.exit94:                         ; preds = %if.then.i84, %amdgpu_ring_write.exit81.amdgpu_ring_write.exit94_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i87 = add i64 %31, 1
  store i64 %inc.i87, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i89 = and i32 %33, %34
  %arrayidx.i90 = getelementptr i32, ptr %29, i32 %idxprom.i89
  %35 = ptrtoint ptr %arrayidx.i90 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %or14, ptr %arrayidx.i90, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i92 = and i64 %38, %37
  store i64 %and3.i92, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i93 = add i32 %40, -1
  store i32 %dec.i93, ptr %count_dw.i, align 8
  br i1 %tobool.not, label %do.body27, label %do.body

do.body:                                          ; preds = %amdgpu_ring_write.exit94
  %and16 = and i64 %addr, 7
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and16)
  %tobool17.not = icmp eq i64 %and16, 0
  br i1 %tobool17.not, label %do.body.if.end46_crit_edge, label %do.body21, !prof !1011

do.body.if.end46_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end46

do.body21:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5529, 0\0A.popsection", ""() #15, !srcloc !1024
  unreachable

do.body27:                                        ; preds = %amdgpu_ring_write.exit94
  %and28 = and i64 %addr, 3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and28)
  %tobool29.not = icmp eq i64 %and28, 0
  br i1 %tobool29.not, label %do.body27.if.end46_crit_edge, label %do.body37, !prof !1011

do.body27.if.end46_crit_edge:                     ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end46

do.body37:                                        ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5531, 0\0A.popsection", ""() #15, !srcloc !1025
  unreachable

if.end46:                                         ; preds = %do.body27.if.end46_crit_edge, %do.body.if.end46_crit_edge
  %conv = trunc i64 %addr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i93)
  %cmp.i96 = icmp slt i32 %dec.i93, 1
  br i1 %cmp.i96, label %if.then.i97, label %if.end46.amdgpu_ring_write.exit107_crit_edge

if.end46.amdgpu_ring_write.exit107_crit_edge:     ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit107

if.then.i97:                                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit107

amdgpu_ring_write.exit107:                        ; preds = %if.then.i97, %if.end46.amdgpu_ring_write.exit107_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i100 = add i64 %44, 1
  store i64 %inc.i100, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i102 = and i32 %46, %47
  %arrayidx.i103 = getelementptr i32, ptr %42, i32 %idxprom.i102
  %48 = ptrtoint ptr %arrayidx.i103 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 %conv, ptr %arrayidx.i103, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i105 = and i64 %51, %50
  store i64 %and3.i105, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i106 = add i32 %53, -1
  store i32 %dec.i106, ptr %count_dw.i, align 8
  %shr = lshr i64 %addr, 32
  %conv49 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i106)
  %cmp.i109 = icmp slt i32 %dec.i106, 1
  br i1 %cmp.i109, label %if.then.i110, label %amdgpu_ring_write.exit107.amdgpu_ring_write.exit120_crit_edge

amdgpu_ring_write.exit107.amdgpu_ring_write.exit120_crit_edge: ; preds = %amdgpu_ring_write.exit107
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit120

if.then.i110:                                     ; preds = %amdgpu_ring_write.exit107
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit120

amdgpu_ring_write.exit120:                        ; preds = %if.then.i110, %amdgpu_ring_write.exit107.amdgpu_ring_write.exit120_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i113 = add i64 %57, 1
  store i64 %inc.i113, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i115 = and i32 %59, %60
  %arrayidx.i116 = getelementptr i32, ptr %55, i32 %idxprom.i115
  %61 = ptrtoint ptr %arrayidx.i116 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 %conv49, ptr %arrayidx.i116, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i118 = and i64 %64, %63
  store i64 %and3.i118, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i119 = add i32 %66, -1
  store i32 %dec.i119, ptr %count_dw.i, align 8
  %conv51 = trunc i64 %seq to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i119)
  %cmp.i122 = icmp slt i32 %dec.i119, 1
  br i1 %cmp.i122, label %if.then.i123, label %amdgpu_ring_write.exit120.amdgpu_ring_write.exit133_crit_edge

amdgpu_ring_write.exit120.amdgpu_ring_write.exit133_crit_edge: ; preds = %amdgpu_ring_write.exit120
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit133

if.then.i123:                                     ; preds = %amdgpu_ring_write.exit120
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit133

amdgpu_ring_write.exit133:                        ; preds = %if.then.i123, %amdgpu_ring_write.exit120.amdgpu_ring_write.exit133_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i126 = add i64 %70, 1
  store i64 %inc.i126, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i128 = and i32 %72, %73
  %arrayidx.i129 = getelementptr i32, ptr %68, i32 %idxprom.i128
  %74 = ptrtoint ptr %arrayidx.i129 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 %conv51, ptr %arrayidx.i129, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i131 = and i64 %77, %76
  store i64 %and3.i131, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i132 = add i32 %79, -1
  store i32 %dec.i132, ptr %count_dw.i, align 8
  %shr52 = lshr i64 %seq, 32
  %conv54 = trunc i64 %shr52 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i132)
  %cmp.i135 = icmp slt i32 %dec.i132, 1
  br i1 %cmp.i135, label %if.then.i136, label %amdgpu_ring_write.exit133.amdgpu_ring_write.exit146_crit_edge

amdgpu_ring_write.exit133.amdgpu_ring_write.exit146_crit_edge: ; preds = %amdgpu_ring_write.exit133
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit146

if.then.i136:                                     ; preds = %amdgpu_ring_write.exit133
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit146

amdgpu_ring_write.exit146:                        ; preds = %if.then.i136, %amdgpu_ring_write.exit133.amdgpu_ring_write.exit146_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i139 = add i64 %83, 1
  store i64 %inc.i139, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i141 = and i32 %85, %86
  %arrayidx.i142 = getelementptr i32, ptr %81, i32 %idxprom.i141
  %87 = ptrtoint ptr %arrayidx.i142 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 %conv54, ptr %arrayidx.i142, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i144 = and i64 %90, %89
  store i64 %and3.i144, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i145 = add i32 %92, -1
  store i32 %dec.i145, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i145)
  %cmp.i148 = icmp slt i32 %dec.i145, 1
  br i1 %cmp.i148, label %if.then.i149, label %amdgpu_ring_write.exit146.amdgpu_ring_write.exit159_crit_edge

amdgpu_ring_write.exit146.amdgpu_ring_write.exit159_crit_edge: ; preds = %amdgpu_ring_write.exit146
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit159

if.then.i149:                                     ; preds = %amdgpu_ring_write.exit146
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit159

amdgpu_ring_write.exit159:                        ; preds = %if.then.i149, %amdgpu_ring_write.exit146.amdgpu_ring_write.exit159_crit_edge
  %93 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %ring1.i, align 4
  %95 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %wptr.i, align 8
  %inc.i152 = add i64 %96, 1
  store i64 %inc.i152, ptr %wptr.i, align 8
  %97 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %buf_mask.i, align 8
  %99 = trunc i64 %96 to i32
  %idxprom.i154 = and i32 %98, %99
  %arrayidx.i155 = getelementptr i32, ptr %94, i32 %idxprom.i154
  %100 = ptrtoint ptr %arrayidx.i155 to i32
  call void @__asan_store4_noabort(i32 %100)
  store volatile i32 0, ptr %arrayidx.i155, align 4
  %101 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %ptr_mask.i, align 8
  %103 = load i64, ptr %wptr.i, align 8
  %and3.i157 = and i64 %103, %102
  store i64 %and3.i157, ptr %wptr.i, align 8
  %104 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %count_dw.i, align 8
  %dec.i158 = add i32 %105, -1
  store i32 %dec.i158, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_pipeline_sync(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %conv = zext i1 %cmp to i32
  %fence_drv = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 2
  %sync_seq = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %sync_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sync_seq, align 4
  %6 = ptrtoint ptr %fence_drv to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %fence_drv, align 8
  %conv2 = trunc i64 %7 to i32
  %shr = lshr i64 %7, 32
  %conv4 = trunc i64 %shr to i32
  tail call fastcc void @gfx_v9_0_wait_reg_mem(ptr noundef %ring, i32 noundef %conv, i32 noundef 1, i32 noundef 0, i32 noundef %conv2, i32 noundef %conv4, i32 noundef %5, i32 noundef -1, i32 noundef 4)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_vm_flush(ptr noundef %ring, i32 noundef %vmid, i64 noundef %pd_addr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %gmc_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 62, i32 38
  %2 = ptrtoint ptr %gmc_funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %gmc_funcs, align 4
  %emit_flush_gpu_tlb = getelementptr inbounds %struct.amdgpu_gmc_funcs, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %emit_flush_gpu_tlb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %emit_flush_gpu_tlb, align 4
  %call = tail call i64 %5(ptr noundef %ring, i32 noundef %vmid, i64 noundef %pd_addr) #15
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %10 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp.i = icmp slt i32 %11, 1
  br i1 %cmp.i, label %if.then.i, label %if.then.amdgpu_ring_write.exit_crit_edge

if.then.amdgpu_ring_write.exit_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.then.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %12 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %14 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %15, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %16 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %buf_mask.i, align 8
  %18 = trunc i64 %15 to i32
  %idxprom.i = and i32 %17, %18
  %arrayidx.i = getelementptr i32, ptr %13, i32 %idxprom.i
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 -1073724928, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %20 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %ptr_mask.i, align 8
  %22 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %22, %21
  store i64 %and3.i, ptr %wptr.i, align 8
  %23 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %24, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i6 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i6, label %if.then.i7, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit17

if.then.i7:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit17

amdgpu_ring_write.exit17:                         ; preds = %if.then.i7, %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge
  %25 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ring1.i, align 4
  %27 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %wptr.i, align 8
  %inc.i10 = add i64 %28, 1
  store i64 %inc.i10, ptr %wptr.i, align 8
  %29 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %buf_mask.i, align 8
  %31 = trunc i64 %28 to i32
  %idxprom.i12 = and i32 %30, %31
  %arrayidx.i13 = getelementptr i32, ptr %26, i32 %idxprom.i12
  %32 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile i32 0, ptr %arrayidx.i13, align 4
  %33 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %ptr_mask.i, align 8
  %35 = load i64, ptr %wptr.i, align 8
  %and3.i15 = and i64 %35, %34
  store i64 %and3.i15, ptr %wptr.i, align 8
  %36 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %count_dw.i, align 8
  %dec.i16 = add i32 %37, -1
  store i32 %dec.i16, ptr %count_dw.i, align 8
  br label %if.end

if.end:                                           ; preds = %amdgpu_ring_write.exit17, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_hdp_flush(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %nbio = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 101
  %2 = ptrtoint ptr %nbio to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nbio, align 8
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp = icmp eq i32 %7, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %me = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 16
  %8 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %me, align 8
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.401)
  switch i32 %9, label %if.then.cleanup_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ]

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %ref_and_mask_cp2 = getelementptr inbounds %struct.nbio_hdp_flush_reg, ptr %3, i32 0, i32 2
  %11 = ptrtoint ptr %ref_and_mask_cp2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ref_and_mask_cp2, align 4
  %pipe = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 17
  %13 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pipe, align 4
  %shl = shl i32 %12, %14
  br label %if.end

sw.bb2:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %ref_and_mask_cp6 = getelementptr inbounds %struct.nbio_hdp_flush_reg, ptr %3, i32 0, i32 6
  %15 = ptrtoint ptr %ref_and_mask_cp6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ref_and_mask_cp6, align 4
  %pipe3 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 17
  %17 = ptrtoint ptr %pipe3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %pipe3, align 4
  %shl4 = shl i32 %16, %18
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %19 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %sw.bb2, %sw.bb
  %ref_and_mask.1 = phi i32 [ %20, %if.else ], [ %shl4, %sw.bb2 ], [ %shl, %sw.bb ]
  %reg_mem_engine.0 = phi i32 [ 1, %if.else ], [ 0, %sw.bb2 ], [ 0, %sw.bb ]
  %funcs6 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 101, i32 4
  %21 = ptrtoint ptr %funcs6 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %funcs6, align 8
  %get_hdp_flush_req_offset = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %get_hdp_flush_req_offset to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %get_hdp_flush_req_offset, align 4
  %call = tail call i32 %24(ptr noundef %1) #15
  %25 = ptrtoint ptr %funcs6 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %funcs6, align 8
  %get_hdp_flush_done_offset = getelementptr inbounds %struct.amdgpu_nbio_funcs, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %get_hdp_flush_done_offset to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %get_hdp_flush_done_offset, align 4
  %call9 = tail call i32 %28(ptr noundef %1) #15
  tail call fastcc void @gfx_v9_0_wait_reg_mem(ptr noundef %ring, i32 noundef %reg_mem_engine.0, i32 noundef 0, i32 noundef 1, i32 noundef %call, i32 noundef %call9, i32 noundef %ref_and_mask.1, i32 noundef %ref_and_mask.1, i32 noundef 32)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_gds_switch(ptr noundef %ring, i32 noundef %vmid, i32 noundef %gds_base, i32 noundef %gds_size, i32 noundef %gws_base, i32 noundef %gws_size, i32 noundef %oa_base, i32 noundef %oa_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %mul = shl i32 %vmid, 1
  %add = add i32 %mul, 4864
  %add4 = add i32 %add, %5
  tail call fastcc void @gfx_v9_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add4, i32 noundef %gds_base)
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add9 = add i32 %mul, 4865
  %add11 = add i32 %add9, %9
  tail call fastcc void @gfx_v9_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add11, i32 noundef %gds_size)
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add16 = add i32 %vmid, 4896
  %add17 = add i32 %add16, %13
  %shl = shl i32 %gws_size, 16
  %or = or i32 %shl, %gws_base
  tail call fastcc void @gfx_v9_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add17, i32 noundef %or)
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add22 = add i32 %vmid, 4912
  %add23 = add i32 %add22, %17
  %add24 = add i32 %oa_size, %oa_base
  %shl25 = shl nuw i32 1, %add24
  %shl26.neg = shl nsw i32 -1, %oa_base
  %sub = add i32 %shl25, %shl26.neg
  tail call fastcc void @gfx_v9_0_write_data_to_reg(ptr noundef %ring, i32 noundef %add23, i32 noundef %sub)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_ring_test_ib(ptr noundef %ring, i32 noundef %timeout) #0 align 64 {
entry:
  %ib = alloca %struct.amdgpu_ib, align 8
  %f = alloca ptr, align 4
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ib) #15
  %2 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 1
  %3 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %f) #15
  %4 = ptrtoint ptr %f to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %f, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #15
  %5 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %index, align 4, !annotation !1019
  %call = call i32 @amdgpu_device_wb_get(ptr noundef %1, ptr noundef nonnull %index) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %gpu_addr2 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %6 = ptrtoint ptr %gpu_addr2 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %gpu_addr2, align 8
  %8 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index, align 4
  %wb4 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 1
  %10 = ptrtoint ptr %wb4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wb4, align 4
  %arrayidx = getelementptr i32, ptr %11, i32 %9
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 -1377894710, ptr %arrayidx, align 4
  %13 = call ptr @memset(ptr %ib, i32 0, i32 24)
  %call5 = call i32 @amdgpu_ib_get(ptr noundef %1, ptr noundef null, i32 noundef 16, i32 noundef 2, ptr noundef nonnull %ib) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.err1_crit_edge

if.end.err1_crit_edge:                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %err1

if.end8:                                          ; preds = %if.end
  %mul = shl i32 %9, 2
  %conv = zext i32 %mul to i64
  %add = add i64 %7, %conv
  %14 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %3, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1073531136, ptr %15, align 4
  %17 = load ptr, ptr %3, align 8
  %arrayidx11 = getelementptr i32, ptr %17, i32 1
  %18 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1049856, ptr %arrayidx11, align 4
  %conv12 = trunc i64 %add to i32
  %19 = load ptr, ptr %3, align 8
  %arrayidx14 = getelementptr i32, ptr %19, i32 2
  %20 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %conv12, ptr %arrayidx14, align 4
  %shr = lshr i64 %add, 32
  %conv16 = trunc i64 %shr to i32
  %21 = load ptr, ptr %3, align 8
  %arrayidx18 = getelementptr i32, ptr %21, i32 3
  %22 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %conv16, ptr %arrayidx18, align 4
  %23 = load ptr, ptr %3, align 8
  %arrayidx20 = getelementptr i32, ptr %23, i32 4
  %24 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -559038737, ptr %arrayidx20, align 4
  %25 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 5, ptr %2, align 4
  %call21 = call i32 @amdgpu_ib_schedule(ptr noundef %ring, i32 noundef 1, ptr noundef nonnull %ib, ptr noundef null, ptr noundef nonnull %f) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end8.err2_crit_edge

if.end8.err2_crit_edge:                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %err2

if.end24:                                         ; preds = %if.end8
  %26 = ptrtoint ptr %f to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %f, align 4
  %call25 = call i32 @dma_fence_wait_timeout(ptr noundef %27, i1 noundef zeroext false, i32 noundef %timeout) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp = icmp eq i32 %call25, 0
  br i1 %cmp, label %if.end24.err2_crit_edge, label %if.else

if.end24.err2_crit_edge:                          ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #17
  br label %err2

if.else:                                          ; preds = %if.end24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp28 = icmp slt i32 %call25, 0
  br i1 %cmp28, label %if.else.err2_crit_edge, label %if.end32

if.else.err2_crit_edge:                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %err2

if.end32:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %28 = ptrtoint ptr %wb4 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %wb4, align 4
  %30 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %index, align 4
  %arrayidx35 = getelementptr i32, ptr %29, i32 %31
  %32 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %arrayidx35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -559038737, i32 %33)
  %cmp36 = icmp eq i32 %33, -559038737
  %. = select i1 %cmp36, i32 0, i32 -22
  br label %err2

err2:                                             ; preds = %if.end32, %if.else.err2_crit_edge, %if.end24.err2_crit_edge, %if.end8.err2_crit_edge
  %r.0 = phi i32 [ %call21, %if.end8.err2_crit_edge ], [ %call25, %if.else.err2_crit_edge ], [ -110, %if.end24.err2_crit_edge ], [ %., %if.end32 ]
  call void @amdgpu_ib_free(ptr noundef %1, ptr noundef nonnull %ib, ptr noundef null) #15
  %34 = ptrtoint ptr %f to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %f, align 4
  %tobool.not.i = icmp eq ptr %35, null
  br i1 %tobool.not.i, label %err2.err1_crit_edge, label %if.then.i

err2.err1_crit_edge:                              ; preds = %err2
  call void @__sanitizer_cov_trace_pc() #17
  br label %err1

if.then.i:                                        ; preds = %err2
  %refcount.i = getelementptr inbounds %struct.dma_fence, ptr %35, i32 0, i32 6
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1009
  call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #15
  %36 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #15, !srcloc !1010
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %36, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.err1_crit_edge, label %if.then10.i.i.i.i.i, !prof !1011

if.end5.i.i.i.i.i.err1_crit_edge:                 ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %err1

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #15
  br label %err1

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !1012
  call void @dma_fence_release(ptr noundef %refcount.i) #15
  br label %err1

err1:                                             ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.err1_crit_edge, %err2.err1_crit_edge, %if.end.err1_crit_edge
  %r.1 = phi i32 [ %call5, %if.end.err1_crit_edge ], [ %r.0, %err2.err1_crit_edge ], [ %r.0, %if.end5.i.i.i.i.i.err1_crit_edge ], [ %r.0, %if.then10.i.i.i.i.i ], [ %r.0, %if.then.i.i ]
  %37 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %index, align 4
  call void @amdgpu_device_wb_free(ptr noundef %1, i32 noundef %38) #15
  br label %cleanup

cleanup:                                          ; preds = %err1, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %r.1, %err1 ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %f) #15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ib) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_ring_emit_init_cond_exec(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073536512, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  %cond_exe_gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 35
  %15 = ptrtoint ptr %cond_exe_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %cond_exe_gpu_addr, align 8
  %conv = trunc i64 %16 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i16 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i16, label %if.then.i17, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit27_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit27_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit27

if.then.i17:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit27

amdgpu_ring_write.exit27:                         ; preds = %if.then.i17, %amdgpu_ring_write.exit.amdgpu_ring_write.exit27_crit_edge
  %17 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ring1.i, align 4
  %19 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %wptr.i, align 8
  %inc.i20 = add i64 %20, 1
  store i64 %inc.i20, ptr %wptr.i, align 8
  %21 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %buf_mask.i, align 8
  %23 = trunc i64 %20 to i32
  %idxprom.i22 = and i32 %22, %23
  %arrayidx.i23 = getelementptr i32, ptr %18, i32 %idxprom.i22
  %24 = ptrtoint ptr %arrayidx.i23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 %conv, ptr %arrayidx.i23, align 4
  %25 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %ptr_mask.i, align 8
  %27 = load i64, ptr %wptr.i, align 8
  %and3.i25 = and i64 %27, %26
  store i64 %and3.i25, ptr %wptr.i, align 8
  %28 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %count_dw.i, align 8
  %dec.i26 = add i32 %29, -1
  store i32 %dec.i26, ptr %count_dw.i, align 8
  %30 = ptrtoint ptr %cond_exe_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %cond_exe_gpu_addr, align 8
  %shr = lshr i64 %31, 32
  %conv3 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i26)
  %cmp.i29 = icmp slt i32 %dec.i26, 1
  br i1 %cmp.i29, label %if.then.i30, label %amdgpu_ring_write.exit27.amdgpu_ring_write.exit40_crit_edge

amdgpu_ring_write.exit27.amdgpu_ring_write.exit40_crit_edge: ; preds = %amdgpu_ring_write.exit27
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit40

if.then.i30:                                      ; preds = %amdgpu_ring_write.exit27
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit40

amdgpu_ring_write.exit40:                         ; preds = %if.then.i30, %amdgpu_ring_write.exit27.amdgpu_ring_write.exit40_crit_edge
  %32 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ring1.i, align 4
  %34 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %wptr.i, align 8
  %inc.i33 = add i64 %35, 1
  store i64 %inc.i33, ptr %wptr.i, align 8
  %36 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %buf_mask.i, align 8
  %38 = trunc i64 %35 to i32
  %idxprom.i35 = and i32 %37, %38
  %arrayidx.i36 = getelementptr i32, ptr %33, i32 %idxprom.i35
  %39 = ptrtoint ptr %arrayidx.i36 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 %conv3, ptr %arrayidx.i36, align 4
  %40 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %ptr_mask.i, align 8
  %42 = load i64, ptr %wptr.i, align 8
  %and3.i38 = and i64 %42, %41
  store i64 %and3.i38, ptr %wptr.i, align 8
  %43 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %count_dw.i, align 8
  %dec.i39 = add i32 %44, -1
  store i32 %dec.i39, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i39)
  %cmp.i42 = icmp slt i32 %dec.i39, 1
  br i1 %cmp.i42, label %if.then.i43, label %amdgpu_ring_write.exit40.amdgpu_ring_write.exit53_crit_edge

amdgpu_ring_write.exit40.amdgpu_ring_write.exit53_crit_edge: ; preds = %amdgpu_ring_write.exit40
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit53

if.then.i43:                                      ; preds = %amdgpu_ring_write.exit40
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit53

amdgpu_ring_write.exit53:                         ; preds = %if.then.i43, %amdgpu_ring_write.exit40.amdgpu_ring_write.exit53_crit_edge
  %45 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ring1.i, align 4
  %47 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %wptr.i, align 8
  %inc.i46 = add i64 %48, 1
  store i64 %inc.i46, ptr %wptr.i, align 8
  %49 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %buf_mask.i, align 8
  %51 = trunc i64 %48 to i32
  %idxprom.i48 = and i32 %50, %51
  %arrayidx.i49 = getelementptr i32, ptr %46, i32 %idxprom.i48
  %52 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 0, ptr %arrayidx.i49, align 4
  %53 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %ptr_mask.i, align 8
  %55 = load i64, ptr %wptr.i, align 8
  %and3.i51 = and i64 %55, %54
  store i64 %and3.i51, ptr %wptr.i, align 8
  %56 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %count_dw.i, align 8
  %dec.i52 = add i32 %57, -1
  store i32 %dec.i52, ptr %count_dw.i, align 8
  %58 = load i32, ptr %buf_mask.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i52)
  %cmp.i55 = icmp slt i32 %dec.i52, 1
  br i1 %cmp.i55, label %if.then.i56, label %amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge

amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge: ; preds = %amdgpu_ring_write.exit53
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit66

if.then.i56:                                      ; preds = %amdgpu_ring_write.exit53
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit66

amdgpu_ring_write.exit66:                         ; preds = %if.then.i56, %amdgpu_ring_write.exit53.amdgpu_ring_write.exit66_crit_edge
  %59 = trunc i64 %and3.i51 to i32
  %conv6 = and i32 %58, %59
  %60 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ring1.i, align 4
  %62 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %wptr.i, align 8
  %inc.i59 = add i64 %63, 1
  store i64 %inc.i59, ptr %wptr.i, align 8
  %64 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_mask.i, align 8
  %66 = trunc i64 %63 to i32
  %idxprom.i61 = and i32 %65, %66
  %arrayidx.i62 = getelementptr i32, ptr %61, i32 %idxprom.i61
  %67 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile i32 1437226410, ptr %arrayidx.i62, align 4
  %68 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %ptr_mask.i, align 8
  %70 = load i64, ptr %wptr.i, align 8
  %and3.i64 = and i64 %70, %69
  store i64 %and3.i64, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %count_dw.i, align 8
  %dec.i65 = add i32 %72, -1
  store i32 %dec.i65, ptr %count_dw.i, align 8
  ret i32 %conv6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_patch_cond_exec(ptr nocapture noundef readonly %ring, i32 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %buf_mask = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %0 = ptrtoint ptr %buf_mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %buf_mask, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %offset)
  %cmp = icmp ult i32 %1, %offset
  br i1 %cmp, label %do.body2, label %do.body8, !prof !1022

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5723, 0\0A.popsection", ""() #15, !srcloc !1026
  unreachable

do.body8:                                         ; preds = %entry
  %ring9 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring9 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring9, align 4
  %arrayidx = getelementptr i32, ptr %3, i32 %offset
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1437226410, i32 %5)
  %cmp10.not = icmp eq i32 %5, 1437226410
  br i1 %cmp10.not, label %do.end26, label %do.body18, !prof !1011

do.body18:                                        ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5724, 0\0A.popsection", ""() #15, !srcloc !1027
  unreachable

do.end26:                                         ; preds = %do.body8
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %6 = ptrtoint ptr %wptr to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %wptr, align 8
  %8 = trunc i64 %7 to i32
  %9 = and i32 %1, %8
  %conv28 = add i32 %9, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %conv28, i32 %offset)
  %cmp29 = icmp ugt i32 %conv28, %offset
  br i1 %cmp29, label %if.then37, label %if.else, !prof !1011

if.then37:                                        ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #17
  %sub38 = sub i32 %conv28, %offset
  br label %if.end44

if.else:                                          ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #17
  %ring_size = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 9
  %10 = ptrtoint ptr %ring_size to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ring_size, align 8
  %shr = lshr i32 %11, 2
  %sub41 = sub i32 %conv28, %offset
  %add = add i32 %sub41, %shr
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then37
  %add.sink = phi i32 [ %add, %if.else ], [ %sub38, %if.then37 ]
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 %add.sink, ptr %arrayidx, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_ring_emit_sb(ptr nocapture noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073706240, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i3 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i3, label %if.then.i4, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit14_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit14_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit14

if.then.i4:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit14

amdgpu_ring_write.exit14:                         ; preds = %if.then.i4, %amdgpu_ring_write.exit.amdgpu_ring_write.exit14_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i7 = add i64 %18, 1
  store i64 %inc.i7, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i9 = and i32 %20, %21
  %arrayidx.i10 = getelementptr i32, ptr %16, i32 %idxprom.i9
  %22 = ptrtoint ptr %arrayidx.i10 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %arrayidx.i10, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i12 = and i64 %25, %24
  store i64 %and3.i12, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i13 = add i32 %27, -1
  store i32 %dec.i13, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_ring_emit_cntxcntl(ptr noundef %ring, i32 noundef %flags) #0 align 64 {
entry:
  %ce_payload.i = alloca %struct.v9_ce_ib_state, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %ce_payload.i) #15
  %4 = call ptr @memset(ptr %ce_payload.i, i32 0, i32 40)
  %call.i = tail call i64 @amdgpu_csa_vaddr(ptr noundef %1) #15
  %count_dw.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %5 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp.i.i = icmp slt i32 %6, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then.amdgpu_ring_write.exit.i_crit_edge

if.then.amdgpu_ring_write.exit.i_crit_edge:       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit.i

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit.i

amdgpu_ring_write.exit.i:                         ; preds = %if.then.i.i, %if.then.amdgpu_ring_write.exit.i_crit_edge
  %ring1.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %7 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ring1.i.i, align 4
  %wptr.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %9 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %wptr.i.i, align 8
  %inc.i.i = add i64 %10, 1
  store i64 %inc.i.i, ptr %wptr.i.i, align 8
  %buf_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %11 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %buf_mask.i.i, align 8
  %13 = trunc i64 %10 to i32
  %idxprom.i.i = and i32 %12, %13
  %arrayidx.i.i = getelementptr i32, ptr %8, i32 %idxprom.i.i
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile i32 -1072941312, ptr %arrayidx.i.i, align 4
  %ptr_mask.i.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %15 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %ptr_mask.i.i, align 8
  %17 = load i64, ptr %wptr.i.i, align 8
  %and3.i.i = and i64 %17, %16
  store i64 %and3.i.i, ptr %wptr.i.i, align 8
  %18 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %count_dw.i.i, align 8
  %dec.i.i = add i32 %19, -1
  store i32 %dec.i.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i.i)
  %cmp.i12.i = icmp slt i32 %dec.i.i, 1
  br i1 %cmp.i12.i, label %if.then.i13.i, label %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit23.i_crit_edge

amdgpu_ring_write.exit.i.amdgpu_ring_write.exit23.i_crit_edge: ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit23.i

if.then.i13.i:                                    ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit23.i

amdgpu_ring_write.exit23.i:                       ; preds = %if.then.i13.i, %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit23.i_crit_edge
  %20 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ring1.i.i, align 4
  %22 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %wptr.i.i, align 8
  %inc.i16.i = add i64 %23, 1
  store i64 %inc.i16.i, ptr %wptr.i.i, align 8
  %24 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %buf_mask.i.i, align 8
  %26 = trunc i64 %23 to i32
  %idxprom.i18.i = and i32 %25, %26
  %arrayidx.i19.i = getelementptr i32, ptr %21, i32 %idxprom.i18.i
  %27 = ptrtoint ptr %arrayidx.i19.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile i32 -2146433024, ptr %arrayidx.i19.i, align 4
  %28 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %ptr_mask.i.i, align 8
  %30 = load i64, ptr %wptr.i.i, align 8
  %and3.i21.i = and i64 %30, %29
  store i64 %and3.i21.i, ptr %wptr.i.i, align 8
  %31 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %count_dw.i.i, align 8
  %dec.i22.i = add i32 %32, -1
  store i32 %dec.i22.i, ptr %count_dw.i.i, align 8
  %conv.i = trunc i64 %call.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i22.i)
  %cmp.i25.i = icmp slt i32 %dec.i22.i, 1
  br i1 %cmp.i25.i, label %if.then.i26.i, label %amdgpu_ring_write.exit23.i.amdgpu_ring_write.exit36.i_crit_edge

amdgpu_ring_write.exit23.i.amdgpu_ring_write.exit36.i_crit_edge: ; preds = %amdgpu_ring_write.exit23.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit36.i

if.then.i26.i:                                    ; preds = %amdgpu_ring_write.exit23.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit36.i

amdgpu_ring_write.exit36.i:                       ; preds = %if.then.i26.i, %amdgpu_ring_write.exit23.i.amdgpu_ring_write.exit36.i_crit_edge
  %33 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ring1.i.i, align 4
  %35 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %wptr.i.i, align 8
  %inc.i29.i = add i64 %36, 1
  store i64 %inc.i29.i, ptr %wptr.i.i, align 8
  %37 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %buf_mask.i.i, align 8
  %39 = trunc i64 %36 to i32
  %idxprom.i31.i = and i32 %38, %39
  %arrayidx.i32.i = getelementptr i32, ptr %34, i32 %idxprom.i31.i
  %40 = ptrtoint ptr %arrayidx.i32.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile i32 %conv.i, ptr %arrayidx.i32.i, align 4
  %41 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %ptr_mask.i.i, align 8
  %43 = load i64, ptr %wptr.i.i, align 8
  %and3.i34.i = and i64 %43, %42
  store i64 %and3.i34.i, ptr %wptr.i.i, align 8
  %44 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %count_dw.i.i, align 8
  %dec.i35.i = add i32 %45, -1
  store i32 %dec.i35.i, ptr %count_dw.i.i, align 8
  %shr.i = lshr i64 %call.i, 32
  %conv4.i = trunc i64 %shr.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i35.i)
  %cmp.i38.i = icmp slt i32 %dec.i35.i, 1
  br i1 %cmp.i38.i, label %if.then.i39.i, label %amdgpu_ring_write.exit36.i.amdgpu_ring_write.exit49.i_crit_edge

amdgpu_ring_write.exit36.i.amdgpu_ring_write.exit49.i_crit_edge: ; preds = %amdgpu_ring_write.exit36.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit49.i

if.then.i39.i:                                    ; preds = %amdgpu_ring_write.exit36.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit49.i

amdgpu_ring_write.exit49.i:                       ; preds = %if.then.i39.i, %amdgpu_ring_write.exit36.i.amdgpu_ring_write.exit49.i_crit_edge
  %46 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ring1.i.i, align 4
  %48 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %wptr.i.i, align 8
  %inc.i42.i = add i64 %49, 1
  store i64 %inc.i42.i, ptr %wptr.i.i, align 8
  %50 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %buf_mask.i.i, align 8
  %52 = trunc i64 %49 to i32
  %idxprom.i44.i = and i32 %51, %52
  %arrayidx.i45.i = getelementptr i32, ptr %47, i32 %idxprom.i44.i
  %53 = ptrtoint ptr %arrayidx.i45.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile i32 %conv4.i, ptr %arrayidx.i45.i, align 4
  %54 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %ptr_mask.i.i, align 8
  %56 = load i64, ptr %wptr.i.i, align 8
  %and3.i47.i = and i64 %56, %55
  store i64 %and3.i47.i, ptr %wptr.i.i, align 8
  %57 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %count_dw.i.i, align 8
  %dec.i48.i = add i32 %58, -1
  store i32 %dec.i48.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %dec.i48.i)
  %cmp.i50.i = icmp slt i32 %dec.i48.i, 10
  br i1 %cmp.i50.i, label %if.then.i51.i, label %amdgpu_ring_write.exit49.i.if.end.i.i_crit_edge, !prof !1022

amdgpu_ring_write.exit49.i.if.end.i.i_crit_edge:  ; preds = %amdgpu_ring_write.exit49.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.then.i51.i:                                    ; preds = %amdgpu_ring_write.exit49.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i51.i, %amdgpu_ring_write.exit49.i.if.end.i.i_crit_edge
  %59 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %wptr.i.i, align 8
  %61 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %buf_mask.i.i, align 8
  %63 = trunc i64 %60 to i32
  %conv3.i.i = and i32 %62, %63
  %add.i.i = add i32 %62, 1
  %sub.i.i = sub i32 %add.i.i, %conv3.i.i
  %64 = tail call i32 @llvm.umin.i32(i32 %sub.i.i, i32 10) #15
  %shl.i.i = shl nuw nsw i32 %64, 2
  %.neg.i = mul nsw i32 %64, -4
  %shl9.i.i = add nsw i32 %.neg.i, 40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool10.not.i.i = icmp eq i32 %64, 0
  br i1 %tobool10.not.i.i, label %if.end.i.i.if.end12.i.i_crit_edge, label %if.then11.i.i

if.end.i.i.if.end12.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %65 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %ring1.i.i, align 4
  %arrayidx.i54.i = getelementptr i32, ptr %66, i32 %conv3.i.i
  %67 = call ptr @memcpy(ptr %arrayidx.i54.i, ptr %ce_payload.i, i32 %shl.i.i)
  br label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.then11.i.i, %if.end.i.i.if.end12.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl9.i.i)
  %tobool13.not.i.i = icmp eq i32 %shl9.i.i, 0
  br i1 %tobool13.not.i.i, label %if.end12.i.i.gfx_v9_0_ring_emit_ce_meta.exit_crit_edge, label %if.then14.i.i

if.end12.i.i.gfx_v9_0_ring_emit_ce_meta.exit_crit_edge: ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_ring_emit_ce_meta.exit

if.then14.i.i:                                    ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr.i.i = getelementptr i8, ptr %ce_payload.i, i32 %shl.i.i
  %68 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %ring1.i.i, align 4
  %70 = call ptr @memcpy(ptr %69, ptr %add.ptr.i.i, i32 %shl9.i.i)
  br label %gfx_v9_0_ring_emit_ce_meta.exit

gfx_v9_0_ring_emit_ce_meta.exit:                  ; preds = %if.then14.i.i, %if.end12.i.i.gfx_v9_0_ring_emit_ce_meta.exit_crit_edge
  %71 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %wptr.i.i, align 8
  %add19.i.i = add i64 %72, 10
  %73 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %ptr_mask.i.i, align 8
  %and21.i.i = and i64 %74, %add19.i.i
  store i64 %and21.i.i, ptr %wptr.i.i, align 8
  %75 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %count_dw.i.i, align 8
  %sub23.i.i = add i32 %76, -10
  store i32 %sub23.i.i, ptr %count_dw.i.i, align 8
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %ce_payload.i) #15
  br label %if.end

if.end:                                           ; preds = %gfx_v9_0_ring_emit_ce_meta.exit, %entry.if.end_crit_edge
  %and1 = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %and7 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  %spec.select = select i1 %tobool8.not, i32 -2130608125, i32 -1862172669
  br label %if.end17

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %and12 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  %spec.select30 = select i1 %tobool13.not, i32 -2147483648, i32 -1879048192
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then3
  %dw2.0 = phi i32 [ %spec.select, %if.then3 ], [ %spec.select30, %if.else ]
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %77 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %78)
  %cmp.i = icmp slt i32 %78, 1
  br i1 %cmp.i, label %if.then.i, label %if.end17.amdgpu_ring_write.exit_crit_edge

if.end17.amdgpu_ring_write.exit_crit_edge:        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.end17.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %79 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %81 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %82, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %83 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %buf_mask.i, align 8
  %85 = trunc i64 %82 to i32
  %idxprom.i = and i32 %84, %85
  %arrayidx.i = getelementptr i32, ptr %80, i32 %idxprom.i
  %86 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store volatile i32 -1073666048, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %87 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %87)
  %88 = load i64, ptr %ptr_mask.i, align 8
  %89 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %89, %88
  store i64 %and3.i, ptr %wptr.i, align 8
  %90 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %91, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i32 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i32, label %if.then.i33, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit43_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit43_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit43

if.then.i33:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit43

amdgpu_ring_write.exit43:                         ; preds = %if.then.i33, %amdgpu_ring_write.exit.amdgpu_ring_write.exit43_crit_edge
  %92 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %ring1.i, align 4
  %94 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %wptr.i, align 8
  %inc.i36 = add i64 %95, 1
  store i64 %inc.i36, ptr %wptr.i, align 8
  %96 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %buf_mask.i, align 8
  %98 = trunc i64 %95 to i32
  %idxprom.i38 = and i32 %97, %98
  %arrayidx.i39 = getelementptr i32, ptr %93, i32 %idxprom.i38
  %99 = ptrtoint ptr %arrayidx.i39 to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile i32 %dw2.0, ptr %arrayidx.i39, align 4
  %100 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %ptr_mask.i, align 8
  %102 = load i64, ptr %wptr.i, align 8
  %and3.i41 = and i64 %102, %101
  store i64 %and3.i41, ptr %wptr.i, align 8
  %103 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %count_dw.i, align 8
  %dec.i42 = add i32 %104, -1
  store i32 %dec.i42, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i42)
  %cmp.i45 = icmp slt i32 %dec.i42, 1
  br i1 %cmp.i45, label %if.then.i46, label %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge

amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge: ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit56

if.then.i46:                                      ; preds = %amdgpu_ring_write.exit43
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit56

amdgpu_ring_write.exit56:                         ; preds = %if.then.i46, %amdgpu_ring_write.exit43.amdgpu_ring_write.exit56_crit_edge
  %105 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %ring1.i, align 4
  %107 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %wptr.i, align 8
  %inc.i49 = add i64 %108, 1
  store i64 %inc.i49, ptr %wptr.i, align 8
  %109 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %buf_mask.i, align 8
  %111 = trunc i64 %108 to i32
  %idxprom.i51 = and i32 %110, %111
  %arrayidx.i52 = getelementptr i32, ptr %106, i32 %idxprom.i51
  %112 = ptrtoint ptr %arrayidx.i52 to i32
  call void @__asan_store4_noabort(i32 %112)
  store volatile i32 0, ptr %arrayidx.i52, align 4
  %113 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %113)
  %114 = load i64, ptr %ptr_mask.i, align 8
  %115 = load i64, ptr %wptr.i, align 8
  %and3.i54 = and i64 %115, %114
  store i64 %and3.i54, ptr %wptr.i, align 8
  %116 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %count_dw.i, align 8
  %dec.i55 = add i32 %117, -1
  store i32 %dec.i55, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_frame_cntl(ptr nocapture noundef %ring, i1 noundef zeroext %start, i1 noundef zeroext %secure) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073704960, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i6 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i6, label %if.then.i7, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit17

if.then.i7:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit17

amdgpu_ring_write.exit17:                         ; preds = %if.then.i7, %amdgpu_ring_write.exit.amdgpu_ring_write.exit17_crit_edge
  %shl = select i1 %start, i32 0, i32 268435456
  %cond = zext i1 %secure to i32
  %or = or i32 %shl, %cond
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i10 = add i64 %18, 1
  store i64 %inc.i10, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i12 = and i32 %20, %21
  %arrayidx.i13 = getelementptr i32, ptr %16, i32 %idxprom.i12
  %22 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 %or, ptr %arrayidx.i13, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i15 = and i64 %25, %24
  store i64 %and3.i15, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i16 = add i32 %27, -1
  store i32 %dec.i16, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_soft_recovery(ptr nocapture noundef readonly %ring, i32 noundef %vmid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %shl = shl i32 %vmid, 28
  %or8 = or i32 %shl, 147
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and9 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool.not = icmp eq i32 %and9, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool10.not = icmp eq ptr %5, null
  br i1 %tobool10.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true11

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true11:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_wreg, align 4
  %tobool15.not = icmp eq ptr %7, null
  br i1 %tobool15.not, label %land.lhs.true11.cond.false_crit_edge, label %cond.true

land.lhs.true11.cond.false_crit_edge:             ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add = add i32 %11, 891
  tail call void %7(ptr noundef %1, i32 noundef %add, i32 noundef %or8, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true11.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx23 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx23, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add26 = add i32 %15, 891
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add26, i32 noundef %or8, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_emit_mem_sync(ptr noundef %ring) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073391616, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i8 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i8, label %if.then.i9, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit19

if.then.i9:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit19

amdgpu_ring_write.exit19:                         ; preds = %if.then.i9, %amdgpu_ring_write.exit.amdgpu_ring_write.exit19_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i12 = add i64 %18, 1
  store i64 %inc.i12, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i14 = and i32 %20, %21
  %arrayidx.i15 = getelementptr i32, ptr %16, i32 %idxprom.i14
  %22 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 683933696, ptr %arrayidx.i15, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i17 = and i64 %25, %24
  store i64 %and3.i17, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i18 = add i32 %27, -1
  store i32 %dec.i18, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i18)
  %cmp.i21 = icmp slt i32 %dec.i18, 1
  br i1 %cmp.i21, label %if.then.i22, label %amdgpu_ring_write.exit19.amdgpu_ring_write.exit32_crit_edge

amdgpu_ring_write.exit19.amdgpu_ring_write.exit32_crit_edge: ; preds = %amdgpu_ring_write.exit19
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit32

if.then.i22:                                      ; preds = %amdgpu_ring_write.exit19
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit32

amdgpu_ring_write.exit32:                         ; preds = %if.then.i22, %amdgpu_ring_write.exit19.amdgpu_ring_write.exit32_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i25 = add i64 %31, 1
  store i64 %inc.i25, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i27 = and i32 %33, %34
  %arrayidx.i28 = getelementptr i32, ptr %29, i32 %idxprom.i27
  %35 = ptrtoint ptr %arrayidx.i28 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 -1, ptr %arrayidx.i28, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i30 = and i64 %38, %37
  store i64 %and3.i30, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i31 = add i32 %40, -1
  store i32 %dec.i31, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i31)
  %cmp.i34 = icmp slt i32 %dec.i31, 1
  br i1 %cmp.i34, label %if.then.i35, label %amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge

amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge: ; preds = %amdgpu_ring_write.exit32
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit45

if.then.i35:                                      ; preds = %amdgpu_ring_write.exit32
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit45

amdgpu_ring_write.exit45:                         ; preds = %if.then.i35, %amdgpu_ring_write.exit32.amdgpu_ring_write.exit45_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i38 = add i64 %44, 1
  store i64 %inc.i38, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i40 = and i32 %46, %47
  %arrayidx.i41 = getelementptr i32, ptr %42, i32 %idxprom.i40
  %48 = ptrtoint ptr %arrayidx.i41 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 16777215, ptr %arrayidx.i41, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i43 = and i64 %51, %50
  store i64 %and3.i43, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i44 = add i32 %53, -1
  store i32 %dec.i44, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i44)
  %cmp.i47 = icmp slt i32 %dec.i44, 1
  br i1 %cmp.i47, label %if.then.i48, label %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge

amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge: ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit58

if.then.i48:                                      ; preds = %amdgpu_ring_write.exit45
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit58

amdgpu_ring_write.exit58:                         ; preds = %if.then.i48, %amdgpu_ring_write.exit45.amdgpu_ring_write.exit58_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i51 = add i64 %57, 1
  store i64 %inc.i51, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i53 = and i32 %59, %60
  %arrayidx.i54 = getelementptr i32, ptr %55, i32 %idxprom.i53
  %61 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 0, ptr %arrayidx.i54, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i56 = and i64 %64, %63
  store i64 %and3.i56, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i57 = add i32 %66, -1
  store i32 %dec.i57, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i57)
  %cmp.i60 = icmp slt i32 %dec.i57, 1
  br i1 %cmp.i60, label %if.then.i61, label %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge

amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge: ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit71

if.then.i61:                                      ; preds = %amdgpu_ring_write.exit58
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit71

amdgpu_ring_write.exit71:                         ; preds = %if.then.i61, %amdgpu_ring_write.exit58.amdgpu_ring_write.exit71_crit_edge
  %67 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ring1.i, align 4
  %69 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %wptr.i, align 8
  %inc.i64 = add i64 %70, 1
  store i64 %inc.i64, ptr %wptr.i, align 8
  %71 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %buf_mask.i, align 8
  %73 = trunc i64 %70 to i32
  %idxprom.i66 = and i32 %72, %73
  %arrayidx.i67 = getelementptr i32, ptr %68, i32 %idxprom.i66
  %74 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile i32 0, ptr %arrayidx.i67, align 4
  %75 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %ptr_mask.i, align 8
  %77 = load i64, ptr %wptr.i, align 8
  %and3.i69 = and i64 %77, %76
  store i64 %and3.i69, ptr %wptr.i, align 8
  %78 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %count_dw.i, align 8
  %dec.i70 = add i32 %79, -1
  store i32 %dec.i70, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i70)
  %cmp.i73 = icmp slt i32 %dec.i70, 1
  br i1 %cmp.i73, label %if.then.i74, label %amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge

amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge: ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit84

if.then.i74:                                      ; preds = %amdgpu_ring_write.exit71
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit84

amdgpu_ring_write.exit84:                         ; preds = %if.then.i74, %amdgpu_ring_write.exit71.amdgpu_ring_write.exit84_crit_edge
  %80 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ring1.i, align 4
  %82 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %wptr.i, align 8
  %inc.i77 = add i64 %83, 1
  store i64 %inc.i77, ptr %wptr.i, align 8
  %84 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %buf_mask.i, align 8
  %86 = trunc i64 %83 to i32
  %idxprom.i79 = and i32 %85, %86
  %arrayidx.i80 = getelementptr i32, ptr %81, i32 %idxprom.i79
  %87 = ptrtoint ptr %arrayidx.i80 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 10, ptr %arrayidx.i80, align 4
  %88 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %ptr_mask.i, align 8
  %90 = load i64, ptr %wptr.i, align 8
  %and3.i82 = and i64 %90, %89
  store i64 %and3.i82, ptr %wptr.i, align 8
  %91 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %count_dw.i, align 8
  %dec.i83 = add i32 %92, -1
  store i32 %dec.i83, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @amdgpu_csa_vaddr(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_write_data_to_reg(ptr noundef %ring, i32 noundef %reg, i32 noundef %val) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %0 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %entry.amdgpu_ring_write.exit_crit_edge

entry.amdgpu_ring_write.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %entry.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %2 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %4 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %5, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %6 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buf_mask.i, align 8
  %8 = trunc i64 %5 to i32
  %idxprom.i = and i32 %7, %8
  %arrayidx.i = getelementptr i32, ptr %3, i32 %idxprom.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1073531136, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %10 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ptr_mask.i, align 8
  %12 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %12, %11
  store i64 %and3.i, ptr %wptr.i, align 8
  %13 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %14, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i2 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i2, label %if.then.i3, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit13_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit13_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit13

if.then.i3:                                       ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit13

amdgpu_ring_write.exit13:                         ; preds = %if.then.i3, %amdgpu_ring_write.exit.amdgpu_ring_write.exit13_crit_edge
  %15 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ring1.i, align 4
  %17 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %wptr.i, align 8
  %inc.i6 = add i64 %18, 1
  store i64 %inc.i6, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %buf_mask.i, align 8
  %21 = trunc i64 %18 to i32
  %idxprom.i8 = and i32 %20, %21
  %arrayidx.i9 = getelementptr i32, ptr %16, i32 %idxprom.i8
  %22 = ptrtoint ptr %arrayidx.i9 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 0, ptr %arrayidx.i9, align 4
  %23 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %ptr_mask.i, align 8
  %25 = load i64, ptr %wptr.i, align 8
  %and3.i11 = and i64 %25, %24
  store i64 %and3.i11, ptr %wptr.i, align 8
  %26 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %count_dw.i, align 8
  %dec.i12 = add i32 %27, -1
  store i32 %dec.i12, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i12)
  %cmp.i15 = icmp slt i32 %dec.i12, 1
  br i1 %cmp.i15, label %if.then.i16, label %amdgpu_ring_write.exit13.amdgpu_ring_write.exit26_crit_edge

amdgpu_ring_write.exit13.amdgpu_ring_write.exit26_crit_edge: ; preds = %amdgpu_ring_write.exit13
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit26

if.then.i16:                                      ; preds = %amdgpu_ring_write.exit13
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit26

amdgpu_ring_write.exit26:                         ; preds = %if.then.i16, %amdgpu_ring_write.exit13.amdgpu_ring_write.exit26_crit_edge
  %28 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring1.i, align 4
  %30 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %wptr.i, align 8
  %inc.i19 = add i64 %31, 1
  store i64 %inc.i19, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %buf_mask.i, align 8
  %34 = trunc i64 %31 to i32
  %idxprom.i21 = and i32 %33, %34
  %arrayidx.i22 = getelementptr i32, ptr %29, i32 %idxprom.i21
  %35 = ptrtoint ptr %arrayidx.i22 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile i32 %reg, ptr %arrayidx.i22, align 4
  %36 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %ptr_mask.i, align 8
  %38 = load i64, ptr %wptr.i, align 8
  %and3.i24 = and i64 %38, %37
  store i64 %and3.i24, ptr %wptr.i, align 8
  %39 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %count_dw.i, align 8
  %dec.i25 = add i32 %40, -1
  store i32 %dec.i25, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i25)
  %cmp.i28 = icmp slt i32 %dec.i25, 1
  br i1 %cmp.i28, label %if.then.i29, label %amdgpu_ring_write.exit26.amdgpu_ring_write.exit39_crit_edge

amdgpu_ring_write.exit26.amdgpu_ring_write.exit39_crit_edge: ; preds = %amdgpu_ring_write.exit26
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit39

if.then.i29:                                      ; preds = %amdgpu_ring_write.exit26
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit39

amdgpu_ring_write.exit39:                         ; preds = %if.then.i29, %amdgpu_ring_write.exit26.amdgpu_ring_write.exit39_crit_edge
  %41 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ring1.i, align 4
  %43 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %wptr.i, align 8
  %inc.i32 = add i64 %44, 1
  store i64 %inc.i32, ptr %wptr.i, align 8
  %45 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_mask.i, align 8
  %47 = trunc i64 %44 to i32
  %idxprom.i34 = and i32 %46, %47
  %arrayidx.i35 = getelementptr i32, ptr %42, i32 %idxprom.i34
  %48 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile i32 0, ptr %arrayidx.i35, align 4
  %49 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ptr_mask.i, align 8
  %51 = load i64, ptr %wptr.i, align 8
  %and3.i37 = and i64 %51, %50
  store i64 %and3.i37, ptr %wptr.i, align 8
  %52 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %count_dw.i, align 8
  %dec.i38 = add i32 %53, -1
  store i32 %dec.i38, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i38)
  %cmp.i41 = icmp slt i32 %dec.i38, 1
  br i1 %cmp.i41, label %if.then.i42, label %amdgpu_ring_write.exit39.amdgpu_ring_write.exit52_crit_edge

amdgpu_ring_write.exit39.amdgpu_ring_write.exit52_crit_edge: ; preds = %amdgpu_ring_write.exit39
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit52

if.then.i42:                                      ; preds = %amdgpu_ring_write.exit39
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit52

amdgpu_ring_write.exit52:                         ; preds = %if.then.i42, %amdgpu_ring_write.exit39.amdgpu_ring_write.exit52_crit_edge
  %54 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ring1.i, align 4
  %56 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %wptr.i, align 8
  %inc.i45 = add i64 %57, 1
  store i64 %inc.i45, ptr %wptr.i, align 8
  %58 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %buf_mask.i, align 8
  %60 = trunc i64 %57 to i32
  %idxprom.i47 = and i32 %59, %60
  %arrayidx.i48 = getelementptr i32, ptr %55, i32 %idxprom.i47
  %61 = ptrtoint ptr %arrayidx.i48 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile i32 %val, ptr %arrayidx.i48, align 4
  %62 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %ptr_mask.i, align 8
  %64 = load i64, ptr %wptr.i, align 8
  %and3.i50 = and i64 %64, %63
  store i64 %and3.i50, ptr %wptr.i, align 8
  %65 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %count_dw.i, align 8
  %dec.i51 = add i32 %66, -1
  store i32 %dec.i51, ptr %count_dw.i, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_device_wb_get(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ib_get(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ib_schedule(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_fence_wait_timeout(ptr noundef, i1 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ib_free(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_device_wb_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_fence_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_ring_emit_ib_compute(ptr noundef %ring, ptr noundef readonly %job, ptr nocapture noundef readonly %ib, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %job, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %vmid1 = getelementptr inbounds %struct.amdgpu_job, ptr %job, i32 0, i32 12
  %0 = ptrtoint ptr %vmid1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vmid1, align 8
  %phi.bo = shl i32 %1, 24
  %phi.bo113 = or i32 %phi.bo, 8388608
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %phi.bo113, %cond.true ], [ 8388608, %entry.cond.end_crit_edge ]
  %length_dw = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 1
  %2 = ptrtoint ptr %length_dw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %length_dw, align 4
  %flags3 = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 4
  %4 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags3, align 4
  %and = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %cond.end.if.end_crit_edge, label %if.then

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %cond.end
  %count_dw.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %6 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp.i = icmp slt i32 %7, 1
  br i1 %cmp.i, label %if.then.i, label %if.then.amdgpu_ring_write.exit_crit_edge

if.then.amdgpu_ring_write.exit_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit

amdgpu_ring_write.exit:                           ; preds = %if.then.i, %if.then.amdgpu_ring_write.exit_crit_edge
  %ring1.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %8 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ring1.i, align 4
  %wptr.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %10 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %wptr.i, align 8
  %inc.i = add i64 %11, 1
  store i64 %inc.i, ptr %wptr.i, align 8
  %buf_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %12 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %buf_mask.i, align 8
  %14 = trunc i64 %11 to i32
  %idxprom.i = and i32 %13, %14
  %arrayidx.i = getelementptr i32, ptr %9, i32 %idxprom.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 -1073649664, ptr %arrayidx.i, align 4
  %ptr_mask.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %16 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %ptr_mask.i, align 8
  %18 = load i64, ptr %wptr.i, align 8
  %and3.i = and i64 %18, %17
  store i64 %and3.i, ptr %wptr.i, align 8
  %19 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %count_dw.i, align 8
  %dec.i = add i32 %20, -1
  store i32 %dec.i, ptr %count_dw.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i36 = icmp slt i32 %dec.i, 1
  br i1 %cmp.i36, label %if.then.i37, label %amdgpu_ring_write.exit.amdgpu_ring_write.exit47_crit_edge

amdgpu_ring_write.exit.amdgpu_ring_write.exit47_crit_edge: ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit47

if.then.i37:                                      ; preds = %amdgpu_ring_write.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit47

amdgpu_ring_write.exit47:                         ; preds = %if.then.i37, %amdgpu_ring_write.exit.amdgpu_ring_write.exit47_crit_edge
  %21 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ring1.i, align 4
  %23 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %wptr.i, align 8
  %inc.i40 = add i64 %24, 1
  store i64 %inc.i40, ptr %wptr.i, align 8
  %25 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %buf_mask.i, align 8
  %27 = trunc i64 %24 to i32
  %idxprom.i42 = and i32 %26, %27
  %arrayidx.i43 = getelementptr i32, ptr %22, i32 %idxprom.i42
  %28 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile i32 4936, ptr %arrayidx.i43, align 4
  %29 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %ptr_mask.i, align 8
  %31 = load i64, ptr %wptr.i, align 8
  %and3.i45 = and i64 %31, %30
  store i64 %and3.i45, ptr %wptr.i, align 8
  %32 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %count_dw.i, align 8
  %dec.i46 = add i32 %33, -1
  store i32 %dec.i46, ptr %count_dw.i, align 8
  %34 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ring, align 8
  %gds_compute_max_wave_id = getelementptr inbounds %struct.amdgpu_device, ptr %35, i32 0, i32 114, i32 3
  %36 = ptrtoint ptr %gds_compute_max_wave_id to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %gds_compute_max_wave_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i46)
  %cmp.i49 = icmp slt i32 %dec.i46, 1
  br i1 %cmp.i49, label %if.then.i50, label %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge

amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge: ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit60

if.then.i50:                                      ; preds = %amdgpu_ring_write.exit47
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit60

amdgpu_ring_write.exit60:                         ; preds = %if.then.i50, %amdgpu_ring_write.exit47.amdgpu_ring_write.exit60_crit_edge
  %38 = ptrtoint ptr %ring1.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ring1.i, align 4
  %40 = ptrtoint ptr %wptr.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %wptr.i, align 8
  %inc.i53 = add i64 %41, 1
  store i64 %inc.i53, ptr %wptr.i, align 8
  %42 = ptrtoint ptr %buf_mask.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %buf_mask.i, align 8
  %44 = trunc i64 %41 to i32
  %idxprom.i55 = and i32 %43, %44
  %arrayidx.i56 = getelementptr i32, ptr %39, i32 %idxprom.i55
  %45 = ptrtoint ptr %arrayidx.i56 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile i32 %37, ptr %arrayidx.i56, align 4
  %46 = ptrtoint ptr %ptr_mask.i to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %ptr_mask.i, align 8
  %48 = load i64, ptr %wptr.i, align 8
  %and3.i58 = and i64 %48, %47
  store i64 %and3.i58, ptr %wptr.i, align 8
  %49 = ptrtoint ptr %count_dw.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %count_dw.i, align 8
  %dec.i59 = add i32 %50, -1
  store i32 %dec.i59, ptr %count_dw.i, align 8
  br label %if.end

if.end:                                           ; preds = %amdgpu_ring_write.exit60, %cond.end.if.end_crit_edge
  %count_dw.i61 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 11
  %51 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %count_dw.i61, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp.i62 = icmp slt i32 %52, 1
  br i1 %cmp.i62, label %if.then.i63, label %if.end.amdgpu_ring_write.exit73_crit_edge

if.end.amdgpu_ring_write.exit73_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit73

if.then.i63:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit73

amdgpu_ring_write.exit73:                         ; preds = %if.then.i63, %if.end.amdgpu_ring_write.exit73_crit_edge
  %ring1.i64 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 5
  %53 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ring1.i64, align 4
  %wptr.i65 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %55 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %wptr.i65, align 8
  %inc.i66 = add i64 %56, 1
  store i64 %inc.i66, ptr %wptr.i65, align 8
  %buf_mask.i67 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 14
  %57 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %buf_mask.i67, align 8
  %59 = trunc i64 %56 to i32
  %idxprom.i68 = and i32 %58, %59
  %arrayidx.i69 = getelementptr i32, ptr %54, i32 %idxprom.i68
  %60 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile i32 -1073594624, ptr %arrayidx.i69, align 4
  %ptr_mask.i70 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 13
  %61 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %ptr_mask.i70, align 8
  %63 = load i64, ptr %wptr.i65, align 8
  %and3.i71 = and i64 %63, %62
  store i64 %and3.i71, ptr %wptr.i65, align 8
  %64 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %count_dw.i61, align 8
  %dec.i72 = add i32 %65, -1
  store i32 %dec.i72, ptr %count_dw.i61, align 8
  %gpu_addr = getelementptr inbounds %struct.amdgpu_ib, ptr %ib, i32 0, i32 2
  %66 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %gpu_addr, align 8
  %and5 = and i64 %67, 3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5)
  %tobool6.not = icmp eq i64 %and5, 0
  br i1 %tobool6.not, label %do.end16, label %do.body10, !prof !1011

do.body10:                                        ; preds = %amdgpu_ring_write.exit73
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5495, 0\0A.popsection", ""() #15, !srcloc !1028
  unreachable

do.end16:                                         ; preds = %amdgpu_ring_write.exit73
  %conv = trunc i64 %67 to i32
  %or19 = or i32 %conv, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i72)
  %cmp.i75 = icmp slt i32 %dec.i72, 1
  br i1 %cmp.i75, label %if.then.i76, label %do.end16.amdgpu_ring_write.exit86_crit_edge

do.end16.amdgpu_ring_write.exit86_crit_edge:      ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit86

if.then.i76:                                      ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit86

amdgpu_ring_write.exit86:                         ; preds = %if.then.i76, %do.end16.amdgpu_ring_write.exit86_crit_edge
  %68 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %ring1.i64, align 4
  %70 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %wptr.i65, align 8
  %inc.i79 = add i64 %71, 1
  store i64 %inc.i79, ptr %wptr.i65, align 8
  %72 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %buf_mask.i67, align 8
  %74 = trunc i64 %71 to i32
  %idxprom.i81 = and i32 %73, %74
  %arrayidx.i82 = getelementptr i32, ptr %69, i32 %idxprom.i81
  %75 = ptrtoint ptr %arrayidx.i82 to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile i32 %or19, ptr %arrayidx.i82, align 4
  %76 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %ptr_mask.i70, align 8
  %78 = load i64, ptr %wptr.i65, align 8
  %and3.i84 = and i64 %78, %77
  store i64 %and3.i84, ptr %wptr.i65, align 8
  %79 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %count_dw.i61, align 8
  %dec.i85 = add i32 %80, -1
  store i32 %dec.i85, ptr %count_dw.i61, align 8
  %81 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %gpu_addr, align 8
  %shr = lshr i64 %82, 32
  %conv22 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i85)
  %cmp.i88 = icmp slt i32 %dec.i85, 1
  br i1 %cmp.i88, label %if.then.i89, label %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge

amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge: ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit99

if.then.i89:                                      ; preds = %amdgpu_ring_write.exit86
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit99

amdgpu_ring_write.exit99:                         ; preds = %if.then.i89, %amdgpu_ring_write.exit86.amdgpu_ring_write.exit99_crit_edge
  %83 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %ring1.i64, align 4
  %85 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %wptr.i65, align 8
  %inc.i92 = add i64 %86, 1
  store i64 %inc.i92, ptr %wptr.i65, align 8
  %87 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %buf_mask.i67, align 8
  %89 = trunc i64 %86 to i32
  %idxprom.i94 = and i32 %88, %89
  %arrayidx.i95 = getelementptr i32, ptr %84, i32 %idxprom.i94
  %90 = ptrtoint ptr %arrayidx.i95 to i32
  call void @__asan_store4_noabort(i32 %90)
  store volatile i32 %conv22, ptr %arrayidx.i95, align 4
  %91 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %ptr_mask.i70, align 8
  %93 = load i64, ptr %wptr.i65, align 8
  %and3.i97 = and i64 %93, %92
  store i64 %and3.i97, ptr %wptr.i65, align 8
  %94 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %count_dw.i61, align 8
  %dec.i98 = add i32 %95, -1
  store i32 %dec.i98, ptr %count_dw.i61, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i98)
  %cmp.i101 = icmp slt i32 %dec.i98, 1
  br i1 %cmp.i101, label %if.then.i102, label %amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge

amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge: ; preds = %amdgpu_ring_write.exit99
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit112

if.then.i102:                                     ; preds = %amdgpu_ring_write.exit99
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit112

amdgpu_ring_write.exit112:                        ; preds = %if.then.i102, %amdgpu_ring_write.exit99.amdgpu_ring_write.exit112_crit_edge
  %or2 = or i32 %cond, %3
  %96 = ptrtoint ptr %ring1.i64 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %ring1.i64, align 4
  %98 = ptrtoint ptr %wptr.i65 to i32
  call void @__asan_load8_noabort(i32 %98)
  %99 = load i64, ptr %wptr.i65, align 8
  %inc.i105 = add i64 %99, 1
  store i64 %inc.i105, ptr %wptr.i65, align 8
  %100 = ptrtoint ptr %buf_mask.i67 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %buf_mask.i67, align 8
  %102 = trunc i64 %99 to i32
  %idxprom.i107 = and i32 %101, %102
  %arrayidx.i108 = getelementptr i32, ptr %97, i32 %idxprom.i107
  %103 = ptrtoint ptr %arrayidx.i108 to i32
  call void @__asan_store4_noabort(i32 %103)
  store volatile i32 %or2, ptr %arrayidx.i108, align 4
  %104 = ptrtoint ptr %ptr_mask.i70 to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %ptr_mask.i70, align 8
  %106 = load i64, ptr %wptr.i65, align 8
  %and3.i110 = and i64 %106, %105
  store i64 %and3.i110, ptr %wptr.i65, align 8
  %107 = ptrtoint ptr %count_dw.i61 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %count_dw.i61, align 8
  %dec.i111 = add i32 %108, -1
  store i32 %dec.i111, ptr %count_dw.i61, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_emit_wave_limit(ptr noundef %ring, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %cond = select i1 %enable, i32 31, i32 134217727
  %funcs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %emit_wreg = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %emit_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %emit_wreg, align 4
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4551
  tail call void %5(ptr noundef %ring, i32 noundef %add, i32 noundef %cond) #15
  %num_pipe_per_mec = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 6, i32 5
  %10 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_pipe_per_mec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp15.not = icmp eq i32 %11, 0
  br i1 %cmp15.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %pipe = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 17
  %cond.i = select i1 %enable, i32 1, i32 127
  %12 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp4.not.peel = icmp eq i32 %13, 0
  br i1 %cmp4.not.peel, label %for.body.lr.ph.for.inc.peel_crit_edge, label %switch.lookup.peel

for.body.lr.ph.for.inc.peel_crit_edge:            ; preds = %for.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.peel

switch.lookup.peel:                               ; preds = %for.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #17
  %14 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ring, align 8
  %arrayidx18.i.peel = getelementptr %struct.amdgpu_device, ptr %15, i32 0, i32 130, i32 1
  %16 = ptrtoint ptr %arrayidx18.i.peel to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx18.i.peel, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add21.i.peel = add i32 %19, 4553
  %20 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs, align 4
  %emit_wreg.i.peel = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %21, i32 0, i32 33
  %22 = ptrtoint ptr %emit_wreg.i.peel to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %emit_wreg.i.peel, align 4
  tail call void %23(ptr noundef %ring, i32 noundef %add21.i.peel, i32 noundef %cond.i) #15
  br label %for.inc.peel

for.inc.peel:                                     ; preds = %switch.lookup.peel, %for.body.lr.ph.for.inc.peel_crit_edge
  %24 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %num_pipe_per_mec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp.peel = icmp ugt i32 %25, 1
  br i1 %cmp.peel, label %for.body.peel19, label %for.inc.peel.for.end_crit_edge

for.inc.peel.for.end_crit_edge:                   ; preds = %for.inc.peel
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.peel19:                                  ; preds = %for.inc.peel
  %26 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %27)
  %cmp4.not.peel20 = icmp eq i32 %27, 1
  br i1 %cmp4.not.peel20, label %for.body.peel19.for.inc.peel28_crit_edge, label %switch.lookup.peel23

for.body.peel19.for.inc.peel28_crit_edge:         ; preds = %for.body.peel19
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.peel28

switch.lookup.peel23:                             ; preds = %for.body.peel19
  call void @__sanitizer_cov_trace_pc() #17
  %28 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ring, align 8
  %arrayidx18.i.peel25 = getelementptr %struct.amdgpu_device, ptr %29, i32 0, i32 130, i32 1
  %30 = ptrtoint ptr %arrayidx18.i.peel25 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx18.i.peel25, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %add21.i.peel26 = add i32 %33, 4554
  %34 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %funcs, align 4
  %emit_wreg.i.peel27 = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %35, i32 0, i32 33
  %36 = ptrtoint ptr %emit_wreg.i.peel27 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %emit_wreg.i.peel27, align 4
  tail call void %37(ptr noundef %ring, i32 noundef %add21.i.peel26, i32 noundef %cond.i) #15
  br label %for.inc.peel28

for.inc.peel28:                                   ; preds = %switch.lookup.peel23, %for.body.peel19.for.inc.peel28_crit_edge
  %38 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %num_pipe_per_mec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %39)
  %cmp.peel30 = icmp ugt i32 %39, 2
  br i1 %cmp.peel30, label %for.body.peel32, label %for.inc.peel28.for.end_crit_edge

for.inc.peel28.for.end_crit_edge:                 ; preds = %for.inc.peel28
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.peel32:                                  ; preds = %for.inc.peel28
  %40 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %41)
  %cmp4.not.peel33 = icmp eq i32 %41, 2
  br i1 %cmp4.not.peel33, label %for.body.peel32.for.inc.peel41_crit_edge, label %switch.lookup.peel36

for.body.peel32.for.inc.peel41_crit_edge:         ; preds = %for.body.peel32
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.peel41

switch.lookup.peel36:                             ; preds = %for.body.peel32
  call void @__sanitizer_cov_trace_pc() #17
  %42 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ring, align 8
  %arrayidx18.i.peel38 = getelementptr %struct.amdgpu_device, ptr %43, i32 0, i32 130, i32 1
  %44 = ptrtoint ptr %arrayidx18.i.peel38 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx18.i.peel38, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add21.i.peel39 = add i32 %47, 4555
  %48 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %funcs, align 4
  %emit_wreg.i.peel40 = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %49, i32 0, i32 33
  %50 = ptrtoint ptr %emit_wreg.i.peel40 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %emit_wreg.i.peel40, align 4
  tail call void %51(ptr noundef %ring, i32 noundef %add21.i.peel39, i32 noundef %cond.i) #15
  br label %for.inc.peel41

for.inc.peel41:                                   ; preds = %switch.lookup.peel36, %for.body.peel32.for.inc.peel41_crit_edge
  %52 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %num_pipe_per_mec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %53)
  %cmp.peel43 = icmp ugt i32 %53, 3
  br i1 %cmp.peel43, label %for.body.peel45, label %for.inc.peel41.for.end_crit_edge

for.inc.peel41.for.end_crit_edge:                 ; preds = %for.inc.peel41
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.peel45:                                  ; preds = %for.inc.peel41
  %54 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %55)
  %cmp4.not.peel46 = icmp eq i32 %55, 3
  br i1 %cmp4.not.peel46, label %for.body.peel45.for.inc.peel54_crit_edge, label %switch.lookup.peel49

for.body.peel45.for.inc.peel54_crit_edge:         ; preds = %for.body.peel45
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.peel54

switch.lookup.peel49:                             ; preds = %for.body.peel45
  call void @__sanitizer_cov_trace_pc() #17
  %56 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ring, align 8
  %arrayidx18.i.peel51 = getelementptr %struct.amdgpu_device, ptr %57, i32 0, i32 130, i32 1
  %58 = ptrtoint ptr %arrayidx18.i.peel51 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx18.i.peel51, align 8
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %59, align 4
  %add21.i.peel52 = add i32 %61, 4556
  %62 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %funcs, align 4
  %emit_wreg.i.peel53 = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %63, i32 0, i32 33
  %64 = ptrtoint ptr %emit_wreg.i.peel53 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %emit_wreg.i.peel53, align 4
  tail call void %65(ptr noundef %ring, i32 noundef %add21.i.peel52, i32 noundef %cond.i) #15
  br label %for.inc.peel54

for.inc.peel54:                                   ; preds = %switch.lookup.peel49, %for.body.peel45.for.inc.peel54_crit_edge
  %66 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %num_pipe_per_mec, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %67)
  %cmp.peel56 = icmp ugt i32 %67, 4
  br i1 %cmp.peel56, label %for.inc.peel54.for.body_crit_edge, label %for.inc.peel54.for.end_crit_edge

for.inc.peel54.for.end_crit_edge:                 ; preds = %for.inc.peel54
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.inc.peel54.for.body_crit_edge:                ; preds = %for.inc.peel54
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.inc.peel54.for.body_crit_edge
  %i.016 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 4, %for.inc.peel54.for.body_crit_edge ]
  %68 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.016, i32 %69)
  %cmp4.not = icmp eq i32 %i.016, %69
  br i1 %cmp4.not, label %for.body.for.inc_crit_edge, label %sw.default.i

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

sw.default.i:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.2, i32 noundef %i.016) #15
  br label %for.inc

for.inc:                                          ; preds = %sw.default.i, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.016, 1
  %70 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %num_pipe_per_mec, align 4
  %cmp = icmp ult i32 %inc, %71
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge, !llvm.loop !1029

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.inc.peel54.for.end_crit_edge, %for.inc.peel41.for.end_crit_edge, %for.inc.peel28.for.end_crit_edge, %for.inc.peel.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_dbg(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_set_eop_interrupt_state(ptr noundef %adev, ptr nocapture noundef readnone %src, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.402)
  switch i32 %type, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
    i32 6, label %sw.bb5
    i32 7, label %sw.bb6
    i32 8, label %sw.bb7
    i32 9, label %sw.bb8
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %switch.i = icmp ult i32 %state, 2
  br i1 %switch.i, label %sw.bb.i, label %sw.bb.sw.epilog_crit_edge

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb.i:                                          ; preds = %sw.bb
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %1 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sw.bb.i.cond.false77.sink.split.i_crit_edge, label %land.lhs.true.i

sw.bb.i.cond.false77.sink.split.i_crit_edge:      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %3 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %4, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.cond.false77.sink.split.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cond.false77.sink.split.i_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %4, i32 0, i32 12
  %5 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool6.not.i = icmp eq ptr %6, null
  %arrayidx47121.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %7 = ptrtoint ptr %arrayidx47121.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx47121.i, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %add50122.i = add i32 %10, 4202
  %sriov_rreg64.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %4, i32 0, i32 13
  %11 = ptrtoint ptr %sriov_rreg64.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sriov_rreg64.i, align 4
  %tobool65.not.i = icmp eq ptr %12, null
  br i1 %tobool6.not.i, label %land.lhs.true60.i, label %cond.true.i

cond.true.i:                                      ; preds = %land.lhs.true2.i
  br i1 %tobool65.not.i, label %cond.false.i, label %cond.true27.i

cond.true27.i:                                    ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i = tail call i32 %12(ptr noundef %adev, i32 noundef %add50122.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i

cond.false.i:                                     ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %call42.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50122.i, i32 noundef 0) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true27.i
  %cond.i = phi i32 [ %call.i, %cond.true27.i ], [ %call42.i, %cond.false.i ]
  %and43.i = and i32 %cond.i, -67108865
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp.i = icmp eq i32 %state, 1
  %shl.i = select i1 %cmp.i, i32 67108864, i32 0
  %or.i = or i32 %and43.i, %shl.i
  tail call void %6(ptr noundef %adev, i32 noundef %add50122.i, i32 noundef %or.i, i32 noundef 0, i32 noundef 1) #15
  br label %sw.epilog

land.lhs.true60.i:                                ; preds = %land.lhs.true2.i
  br i1 %tobool65.not.i, label %land.lhs.true60.i.cond.false77.i_crit_edge, label %cond.true66.i

land.lhs.true60.i.cond.false77.i_crit_edge:       ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.i

cond.true66.i:                                    ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #17
  %call76.i = tail call i32 %12(ptr noundef %adev, i32 noundef %add50122.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end84.i

cond.false77.sink.split.i:                        ; preds = %land.lhs.true.i.cond.false77.sink.split.i_crit_edge, %sw.bb.i.cond.false77.sink.split.i_crit_edge
  %arrayidx47121126.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx47121126.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx47121126.i, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add50122127.i = add i32 %16, 4202
  br label %cond.false77.i

cond.false77.i:                                   ; preds = %cond.false77.sink.split.i, %land.lhs.true60.i.cond.false77.i_crit_edge
  %add50125.i = phi i32 [ %add50122.i, %land.lhs.true60.i.cond.false77.i_crit_edge ], [ %add50122127.i, %cond.false77.sink.split.i ]
  %call83.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50125.i, i32 noundef 0) #15
  br label %cond.end84.i

cond.end84.i:                                     ; preds = %cond.false77.i, %cond.true66.i
  %add50123.i = phi i32 [ %add50122.i, %cond.true66.i ], [ %add50125.i, %cond.false77.i ]
  %cond85.i = phi i32 [ %call76.i, %cond.true66.i ], [ %call83.i, %cond.false77.i ]
  %and86.i = and i32 %cond85.i, -67108865
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp87.i = icmp eq i32 %state, 1
  %shl89.i = select i1 %cmp87.i, i32 67108864, i32 0
  %or90.i = or i32 %and86.i, %shl89.i
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50123.i, i32 noundef %or90.i, i32 noundef 0) #15
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 0, i32 noundef %state)
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 1, i32 noundef %state)
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 2, i32 noundef %state)
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef 1, i32 noundef 3, i32 noundef %state)
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.3, i32 noundef 2) #15
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.3, i32 noundef 2) #15
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.3, i32 noundef 2) #15
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.3, i32 noundef 2) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %cond.end84.i, %cond.end.i, %sw.bb.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_eop_irq(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr nocapture noundef readonly %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.4) #15
  %ring_id = getelementptr inbounds %struct.amdgpu_iv_entry, ptr %entry1, i32 0, i32 3
  %0 = ptrtoint ptr %ring_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ring_id, align 4
  %2 = lshr i32 %1, 2
  %conv = and i32 %2, 3
  %conv5 = and i32 %1, 3
  %3 = lshr i32 %1, 4
  %conv9 = and i32 %3, 7
  %4 = zext i32 %conv to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.403)
  switch i32 %conv, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %entry.sw.bb11_crit_edge
    i32 2, label %entry.sw.bb11_crit_edge40
  ]

entry.sw.bb11_crit_edge40:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb11

entry.sw.bb11_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb11

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %gfx_ring = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36
  %call = tail call zeroext i1 @amdgpu_fence_process(ptr noundef %gfx_ring) #15
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry.sw.bb11_crit_edge, %entry.sw.bb11_crit_edge40
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %5 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_compute_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp37.not = icmp eq i32 %6, 0
  br i1 %cmp37.not, label %sw.bb11.sw.epilog_crit_edge, label %sw.bb11.for.body_crit_edge

sw.bb11.for.body_crit_edge:                       ; preds = %sw.bb11
  br label %for.body

sw.bb11.sw.epilog_crit_edge:                      ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %sw.bb11.for.body_crit_edge
  %i.038 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %sw.bb11.for.body_crit_edge ]
  %arrayidx15 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038
  %me = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038, i32 16
  %7 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %me, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv)
  %cmp17 = icmp eq i32 %8, %conv
  br i1 %cmp17, label %land.lhs.true, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %pipe = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038, i32 17
  %9 = ptrtoint ptr %pipe to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pipe, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %conv5)
  %cmp20 = icmp eq i32 %10, %conv5
  br i1 %cmp20, label %land.lhs.true22, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

land.lhs.true22:                                  ; preds = %land.lhs.true
  %queue = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038, i32 18
  %11 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %queue, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %conv9)
  %cmp24 = icmp eq i32 %12, %conv9
  br i1 %cmp24, label %if.then, label %land.lhs.true22.for.inc_crit_edge

land.lhs.true22.for.inc_crit_edge:                ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.then:                                          ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #17
  %call26 = tail call zeroext i1 @amdgpu_fence_process(ptr noundef %arrayidx15) #15
  br label %for.inc

for.inc:                                          ; preds = %if.then, %land.lhs.true22.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.038, 1
  %13 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_compute_rings, align 8
  %cmp = icmp ult i32 %inc, %14
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.sw.epilog_crit_edge

for.inc.sw.epilog_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

sw.epilog:                                        ; preds = %for.inc.sw.epilog_crit_edge, %sw.bb11.sw.epilog_crit_edge, %sw.bb, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_set_compute_eop_interrupt_state(ptr noundef %adev, i32 noundef %me, i32 noundef %pipe, i32 noundef %state) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %me)
  %cmp = icmp eq i32 %me, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %pipe)
  %0 = icmp ult i32 %pipe, 4
  br i1 %0, label %switch.lookup, label %sw.default

sw.default:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.2, i32 noundef %pipe) #15
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.3, i32 noundef 2) #15
  br label %cleanup

switch.lookup:                                    ; preds = %if.then
  %switch.offset = add i32 %pipe, 4229
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 8
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %2, align 4
  %add = add i32 %4, %switch.offset
  %5 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.404)
  switch i32 %state, label %switch.lookup.cleanup_crit_edge [
    i32 0, label %sw.bb21
    i32 1, label %sw.bb55
  ]

switch.lookup.cleanup_crit_edge:                  ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb21:                                          ; preds = %switch.lookup
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb21.cond.false_crit_edge, label %land.lhs.true

sw.bb21.cond.false_crit_edge:                     ; preds = %sw.bb21
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb21
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool22.not = icmp eq ptr %9, null
  br i1 %tobool22.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true23

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true23:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool27.not = icmp eq ptr %11, null
  br i1 %tobool27.not, label %land.lhs.true23.cond.false_crit_edge, label %cond.true

land.lhs.true23.cond.false_crit_edge:             ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true23.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb21.cond.false_crit_edge
  %call32 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call32, %cond.false ]
  %and33 = and i32 %cond, -67108865
  %12 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %virt, align 8
  %and36 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  br i1 %tobool37.not, label %cond.end.cond.false53_crit_edge, label %land.lhs.true38

cond.end.cond.false53_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false53

land.lhs.true38:                                  ; preds = %cond.end
  %funcs41 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %14 = ptrtoint ptr %funcs41 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %funcs41, align 4
  %tobool42.not = icmp eq ptr %15, null
  br i1 %tobool42.not, label %land.lhs.true38.cond.false53_crit_edge, label %land.lhs.true43

land.lhs.true38.cond.false53_crit_edge:           ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false53

land.lhs.true43:                                  ; preds = %land.lhs.true38
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %15, i32 0, i32 12
  %16 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sriov_wreg, align 4
  %tobool47.not = icmp eq ptr %17, null
  br i1 %tobool47.not, label %land.lhs.true43.cond.false53_crit_edge, label %cond.true48

land.lhs.true43.cond.false53_crit_edge:           ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false53

cond.true48:                                      ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %17(ptr noundef %adev, i32 noundef %add, i32 noundef %and33, i32 noundef 0, i32 noundef 1) #15
  br label %cleanup

cond.false53:                                     ; preds = %land.lhs.true43.cond.false53_crit_edge, %land.lhs.true38.cond.false53_crit_edge, %cond.end.cond.false53_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %and33, i32 noundef 0) #15
  br label %cleanup

sw.bb55:                                          ; preds = %switch.lookup
  %virt56 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %18 = ptrtoint ptr %virt56 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt56, align 8
  %and58 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %sw.bb55.cond.false77_crit_edge, label %land.lhs.true60

sw.bb55.cond.false77_crit_edge:                   ; preds = %sw.bb55
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

land.lhs.true60:                                  ; preds = %sw.bb55
  %funcs63 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs63 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs63, align 4
  %tobool64.not = icmp eq ptr %21, null
  br i1 %tobool64.not, label %land.lhs.true60.cond.false77_crit_edge, label %land.lhs.true65

land.lhs.true60.cond.false77_crit_edge:           ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

land.lhs.true65:                                  ; preds = %land.lhs.true60
  %sriov_rreg69 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 13
  %22 = ptrtoint ptr %sriov_rreg69 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_rreg69, align 4
  %tobool70.not = icmp eq ptr %23, null
  br i1 %tobool70.not, label %land.lhs.true65.cond.false77_crit_edge, label %cond.true71

land.lhs.true65.cond.false77_crit_edge:           ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

cond.true71:                                      ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #17
  %call76 = tail call i32 %23(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end79

cond.false77:                                     ; preds = %land.lhs.true65.cond.false77_crit_edge, %land.lhs.true60.cond.false77_crit_edge, %sw.bb55.cond.false77_crit_edge
  %call78 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false77, %cond.true71
  %cond80 = phi i32 [ %call76, %cond.true71 ], [ %call78, %cond.false77 ]
  %or82 = or i32 %cond80, 67108864
  %24 = ptrtoint ptr %virt56 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt56, align 8
  %and85 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and85)
  %tobool86.not = icmp eq i32 %and85, 0
  br i1 %tobool86.not, label %cond.end79.cond.false103_crit_edge, label %land.lhs.true87

cond.end79.cond.false103_crit_edge:               ; preds = %cond.end79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false103

land.lhs.true87:                                  ; preds = %cond.end79
  %funcs90 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %26 = ptrtoint ptr %funcs90 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs90, align 4
  %tobool91.not = icmp eq ptr %27, null
  br i1 %tobool91.not, label %land.lhs.true87.cond.false103_crit_edge, label %land.lhs.true92

land.lhs.true87.cond.false103_crit_edge:          ; preds = %land.lhs.true87
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false103

land.lhs.true92:                                  ; preds = %land.lhs.true87
  %sriov_wreg96 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %sriov_wreg96 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_wreg96, align 4
  %tobool97.not = icmp eq ptr %29, null
  br i1 %tobool97.not, label %land.lhs.true92.cond.false103_crit_edge, label %cond.true98

land.lhs.true92.cond.false103_crit_edge:          ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false103

cond.true98:                                      ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %29(ptr noundef %adev, i32 noundef %add, i32 noundef %or82, i32 noundef 0, i32 noundef 1) #15
  br label %cleanup

cond.false103:                                    ; preds = %land.lhs.true92.cond.false103_crit_edge, %land.lhs.true87.cond.false103_crit_edge, %cond.end79.cond.false103_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %or82, i32 noundef 0) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.false103, %cond.true98, %cond.false53, %cond.true48, %switch.lookup.cleanup_crit_edge, %if.else, %sw.default
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_fence_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_set_priv_reg_fault_state(ptr noundef %adev, ptr nocapture noundef readnone %source, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %switch = icmp ult i32 %state, 2
  br i1 %switch, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb.cond.false77.sink.split_crit_edge, label %land.lhs.true

sw.bb.cond.false77.sink.split_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false77.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false77.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true55, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4202
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %and43 = and i32 %cond, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp = icmp eq i32 %state, 1
  %shl = select i1 %cmp, i32 8388608, i32 0
  %or = or i32 %and43, %shl
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #15
  br label %sw.epilog

land.lhs.true55:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx47121 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx47121 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx47121, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add50122 = add i32 %16, 4202
  %tobool59.not = icmp eq ptr %.pr, null
  br i1 %tobool59.not, label %land.lhs.true55.cond.false77_crit_edge, label %land.lhs.true60

land.lhs.true55.cond.false77_crit_edge:           ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %sriov_rreg64 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg64 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg64, align 4
  %tobool65.not = icmp eq ptr %18, null
  br i1 %tobool65.not, label %land.lhs.true60.cond.false77_crit_edge, label %cond.true66

land.lhs.true60.cond.false77_crit_edge:           ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

cond.true66:                                      ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #17
  %call76 = tail call i32 %18(ptr noundef %adev, i32 noundef %add50122, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end84

cond.false77.sink.split:                          ; preds = %land.lhs.true.cond.false77.sink.split_crit_edge, %sw.bb.cond.false77.sink.split_crit_edge
  %arrayidx47121126 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx47121126 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx47121126, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add50122127 = add i32 %22, 4202
  br label %cond.false77

cond.false77:                                     ; preds = %cond.false77.sink.split, %land.lhs.true60.cond.false77_crit_edge, %land.lhs.true55.cond.false77_crit_edge
  %add50125 = phi i32 [ %add50122, %land.lhs.true60.cond.false77_crit_edge ], [ %add50122, %land.lhs.true55.cond.false77_crit_edge ], [ %add50122127, %cond.false77.sink.split ]
  %call83 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50125, i32 noundef 0) #15
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false77, %cond.true66
  %add50123 = phi i32 [ %add50122, %cond.true66 ], [ %add50125, %cond.false77 ]
  %cond85 = phi i32 [ %call76, %cond.true66 ], [ %call83, %cond.false77 ]
  %and86 = and i32 %cond85, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp87 = icmp eq i32 %state, 1
  %shl89 = select i1 %cmp87, i32 8388608, i32 0
  %or90 = or i32 %and86, %shl89
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50123, i32 noundef %or90, i32 noundef 0) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end84, %cond.end, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_priv_reg_irq(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr nocapture noundef readonly %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.5) #15
  %ring_id.i = getelementptr inbounds %struct.amdgpu_iv_entry, ptr %entry1, i32 0, i32 3
  %0 = ptrtoint ptr %ring_id.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ring_id.i, align 4
  %2 = lshr i32 %1, 2
  %conv.i = and i32 %2, 3
  %conv5.i = and i32 %1, 3
  %3 = lshr i32 %1, 4
  %conv9.i = and i32 %3, 7
  %4 = zext i32 %conv.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.405)
  switch i32 %conv.i, label %entry.gfx_v9_0_fault.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %entry.sw.bb11.i_crit_edge
    i32 2, label %entry.sw.bb11.i_crit_edge2
  ]

entry.sw.bb11.i_crit_edge2:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb11.i

entry.sw.bb11.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb11.i

entry.gfx_v9_0_fault.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_fault.exit

sw.bb.i:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sched.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 3
  tail call void @drm_sched_fault(ptr noundef %sched.i) #15
  br label %gfx_v9_0_fault.exit

sw.bb11.i:                                        ; preds = %entry.sw.bb11.i_crit_edge, %entry.sw.bb11.i_crit_edge2
  %num_compute_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %5 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_compute_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp37.not.i = icmp eq i32 %6, 0
  br i1 %cmp37.not.i, label %sw.bb11.i.gfx_v9_0_fault.exit_crit_edge, label %sw.bb11.i.for.body.i_crit_edge

sw.bb11.i.for.body.i_crit_edge:                   ; preds = %sw.bb11.i
  br label %for.body.i

sw.bb11.i.gfx_v9_0_fault.exit_crit_edge:          ; preds = %sw.bb11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_fault.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %sw.bb11.i.for.body.i_crit_edge
  %i.038.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %sw.bb11.i.for.body.i_crit_edge ]
  %me.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 16
  %7 = ptrtoint ptr %me.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %me.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv.i)
  %cmp17.i = icmp eq i32 %8, %conv.i
  br i1 %cmp17.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %pipe.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 17
  %9 = ptrtoint ptr %pipe.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pipe.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %conv5.i)
  %cmp20.i = icmp eq i32 %10, %conv5.i
  br i1 %cmp20.i, label %land.lhs.true22.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

land.lhs.true22.i:                                ; preds = %land.lhs.true.i
  %queue.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 18
  %11 = ptrtoint ptr %queue.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %queue.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %conv9.i)
  %cmp24.i = icmp eq i32 %12, %conv9.i
  br i1 %cmp24.i, label %if.then.i, label %land.lhs.true22.i.for.inc.i_crit_edge

land.lhs.true22.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.then.i:                                        ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #17
  %sched26.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 3
  tail call void @drm_sched_fault(ptr noundef %sched26.i) #15
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %land.lhs.true22.i.for.inc.i_crit_edge, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.038.i, 1
  %13 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_compute_rings.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %14
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.gfx_v9_0_fault.exit_crit_edge

for.inc.i.gfx_v9_0_fault.exit_crit_edge:          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_fault.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

gfx_v9_0_fault.exit:                              ; preds = %for.inc.i.gfx_v9_0_fault.exit_crit_edge, %sw.bb11.i.gfx_v9_0_fault.exit_crit_edge, %sw.bb.i, %entry.gfx_v9_0_fault.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @drm_sched_fault(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_set_priv_inst_fault_state(ptr noundef %adev, ptr nocapture noundef readnone %source, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %state)
  %switch = icmp ult i32 %state, 2
  br i1 %switch, label %sw.bb, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb.cond.false77.sink.split_crit_edge, label %land.lhs.true

sw.bb.cond.false77.sink.split_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false77.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false77.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true55, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4202
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %and43 = and i32 %cond, -4194305
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp = icmp eq i32 %state, 1
  %shl = select i1 %cmp, i32 4194304, i32 0
  %or = or i32 %and43, %shl
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #15
  br label %sw.epilog

land.lhs.true55:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx47121 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx47121 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx47121, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add50122 = add i32 %16, 4202
  %tobool59.not = icmp eq ptr %.pr, null
  br i1 %tobool59.not, label %land.lhs.true55.cond.false77_crit_edge, label %land.lhs.true60

land.lhs.true55.cond.false77_crit_edge:           ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %sriov_rreg64 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg64 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg64, align 4
  %tobool65.not = icmp eq ptr %18, null
  br i1 %tobool65.not, label %land.lhs.true60.cond.false77_crit_edge, label %cond.true66

land.lhs.true60.cond.false77_crit_edge:           ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

cond.true66:                                      ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #17
  %call76 = tail call i32 %18(ptr noundef %adev, i32 noundef %add50122, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end84

cond.false77.sink.split:                          ; preds = %land.lhs.true.cond.false77.sink.split_crit_edge, %sw.bb.cond.false77.sink.split_crit_edge
  %arrayidx47121126 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx47121126 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx47121126, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add50122127 = add i32 %22, 4202
  br label %cond.false77

cond.false77:                                     ; preds = %cond.false77.sink.split, %land.lhs.true60.cond.false77_crit_edge, %land.lhs.true55.cond.false77_crit_edge
  %add50125 = phi i32 [ %add50122, %land.lhs.true60.cond.false77_crit_edge ], [ %add50122, %land.lhs.true55.cond.false77_crit_edge ], [ %add50122127, %cond.false77.sink.split ]
  %call83 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add50125, i32 noundef 0) #15
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false77, %cond.true66
  %add50123 = phi i32 [ %add50122, %cond.true66 ], [ %add50125, %cond.false77 ]
  %cond85 = phi i32 [ %call76, %cond.true66 ], [ %call83, %cond.false77 ]
  %and86 = and i32 %cond85, -4194305
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %state)
  %cmp87 = icmp eq i32 %state, 1
  %shl89 = select i1 %cmp87, i32 4194304, i32 0
  %or90 = or i32 %and86, %shl89
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add50123, i32 noundef %or90, i32 noundef 0) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end84, %cond.end, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_priv_inst_irq(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr nocapture noundef readonly %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.6) #15
  %ring_id.i = getelementptr inbounds %struct.amdgpu_iv_entry, ptr %entry1, i32 0, i32 3
  %0 = ptrtoint ptr %ring_id.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ring_id.i, align 4
  %2 = lshr i32 %1, 2
  %conv.i = and i32 %2, 3
  %conv5.i = and i32 %1, 3
  %3 = lshr i32 %1, 4
  %conv9.i = and i32 %3, 7
  %4 = zext i32 %conv.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.406)
  switch i32 %conv.i, label %entry.gfx_v9_0_fault.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %entry.sw.bb11.i_crit_edge
    i32 2, label %entry.sw.bb11.i_crit_edge2
  ]

entry.sw.bb11.i_crit_edge2:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb11.i

entry.sw.bb11.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb11.i

entry.gfx_v9_0_fault.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_fault.exit

sw.bb.i:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sched.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 36, i32 0, i32 3
  tail call void @drm_sched_fault(ptr noundef %sched.i) #15
  br label %gfx_v9_0_fault.exit

sw.bb11.i:                                        ; preds = %entry.sw.bb11.i_crit_edge, %entry.sw.bb11.i_crit_edge2
  %num_compute_rings.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %5 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_compute_rings.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp37.not.i = icmp eq i32 %6, 0
  br i1 %cmp37.not.i, label %sw.bb11.i.gfx_v9_0_fault.exit_crit_edge, label %sw.bb11.i.for.body.i_crit_edge

sw.bb11.i.for.body.i_crit_edge:                   ; preds = %sw.bb11.i
  br label %for.body.i

sw.bb11.i.gfx_v9_0_fault.exit_crit_edge:          ; preds = %sw.bb11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_fault.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %sw.bb11.i.for.body.i_crit_edge
  %i.038.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %sw.bb11.i.for.body.i_crit_edge ]
  %me.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 16
  %7 = ptrtoint ptr %me.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %me.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv.i)
  %cmp17.i = icmp eq i32 %8, %conv.i
  br i1 %cmp17.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %pipe.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 17
  %9 = ptrtoint ptr %pipe.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pipe.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %conv5.i)
  %cmp20.i = icmp eq i32 %10, %conv5.i
  br i1 %cmp20.i, label %land.lhs.true22.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

land.lhs.true22.i:                                ; preds = %land.lhs.true.i
  %queue.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 18
  %11 = ptrtoint ptr %queue.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %queue.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %conv9.i)
  %cmp24.i = icmp eq i32 %12, %conv9.i
  br i1 %cmp24.i, label %if.then.i, label %land.lhs.true22.i.for.inc.i_crit_edge

land.lhs.true22.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.then.i:                                        ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #17
  %sched26.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %i.038.i, i32 3
  tail call void @drm_sched_fault(ptr noundef %sched26.i) #15
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %land.lhs.true22.i.for.inc.i_crit_edge, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.038.i, 1
  %13 = ptrtoint ptr %num_compute_rings.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_compute_rings.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %14
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.gfx_v9_0_fault.exit_crit_edge

for.inc.i.gfx_v9_0_fault.exit_crit_edge:          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_fault.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

gfx_v9_0_fault.exit:                              ; preds = %for.inc.i.gfx_v9_0_fault.exit_crit_edge, %sw.bb11.i.gfx_v9_0_fault.exit_crit_edge, %sw.bb.i, %entry.gfx_v9_0_fault.exit_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_set_cp_ecc_error_state(ptr noundef %adev, ptr nocapture noundef readnone %source, i32 noundef %type, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.407)
  switch i32 %state, label %entry.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb512
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %1 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %virt, align 8
  %and = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb.cond.false76.sink.split_crit_edge, label %land.lhs.true

sw.bb.cond.false76.sink.split_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true:                                    ; preds = %sw.bb
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %3 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %4, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false76.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false76.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %4, i32 0, i32 12
  %5 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %6, null
  br i1 %tobool6.not, label %land.lhs.true54, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %add = add i32 %10, 4202
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %4, i32 0, i32 13
  %11 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %12, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %12(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %and43 = and i32 %cond, -16385
  tail call void %6(ptr noundef %adev, i32 noundef %add, i32 noundef %and43, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end87

land.lhs.true54:                                  ; preds = %land.lhs.true2
  %13 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx461331 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %14 = ptrtoint ptr %arrayidx461331 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx461331, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add491332 = add i32 %17, 4202
  %tobool58.not = icmp eq ptr %.pr, null
  br i1 %tobool58.not, label %land.lhs.true54.cond.false76_crit_edge, label %land.lhs.true59

land.lhs.true54.cond.false76_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %sriov_rreg63 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %18 = ptrtoint ptr %sriov_rreg63 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_rreg63, align 4
  %tobool64.not = icmp eq ptr %19, null
  br i1 %tobool64.not, label %land.lhs.true59.cond.false76_crit_edge, label %cond.true65

land.lhs.true59.cond.false76_crit_edge:           ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

cond.true65:                                      ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  %call75 = tail call i32 %19(ptr noundef %adev, i32 noundef %add491332, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end83

cond.false76.sink.split:                          ; preds = %land.lhs.true.cond.false76.sink.split_crit_edge, %sw.bb.cond.false76.sink.split_crit_edge
  %arrayidx4613311381 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %20 = ptrtoint ptr %arrayidx4613311381 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx4613311381, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add4913321382 = add i32 %23, 4202
  br label %cond.false76

cond.false76:                                     ; preds = %cond.false76.sink.split, %land.lhs.true59.cond.false76_crit_edge, %land.lhs.true54.cond.false76_crit_edge
  %add491335 = phi i32 [ %add491332, %land.lhs.true59.cond.false76_crit_edge ], [ %add491332, %land.lhs.true54.cond.false76_crit_edge ], [ %add4913321382, %cond.false76.sink.split ]
  %call82 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add491335, i32 noundef 0) #15
  br label %cond.end83

cond.end83:                                       ; preds = %cond.false76, %cond.true65
  %add491333 = phi i32 [ %add491332, %cond.true65 ], [ %add491335, %cond.false76 ]
  %cond84 = phi i32 [ %call75, %cond.true65 ], [ %call82, %cond.false76 ]
  %and85 = and i32 %cond84, -16385
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add491333, i32 noundef %and85, i32 noundef 0) #15
  br label %cond.end87

cond.end87:                                       ; preds = %cond.end83, %cond.end
  %24 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt, align 8
  %and90 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and90)
  %tobool91.not = icmp eq i32 %and90, 0
  br i1 %tobool91.not, label %cond.end87.cond.false182.sink.split_crit_edge, label %land.lhs.true92

cond.end87.cond.false182.sink.split_crit_edge:    ; preds = %cond.end87
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182.sink.split

land.lhs.true92:                                  ; preds = %cond.end87
  %funcs95 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %26 = ptrtoint ptr %funcs95 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs95, align 4
  %tobool96.not = icmp eq ptr %27, null
  br i1 %tobool96.not, label %land.lhs.true92.cond.false182.sink.split_crit_edge, label %land.lhs.true97

land.lhs.true92.cond.false182.sink.split_crit_edge: ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182.sink.split

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %sriov_wreg101 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %sriov_wreg101 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_wreg101, align 4
  %tobool102.not = icmp eq ptr %29, null
  br i1 %tobool102.not, label %land.lhs.true160, label %cond.true103

cond.true103:                                     ; preds = %land.lhs.true97
  %arrayidx109 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %30 = ptrtoint ptr %arrayidx109 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx109, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %add112 = add i32 %33, 4229
  %sriov_rreg126 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 13
  %34 = ptrtoint ptr %sriov_rreg126 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_rreg126, align 4
  %tobool127.not = icmp eq ptr %35, null
  br i1 %tobool127.not, label %cond.false139, label %cond.true128

cond.true128:                                     ; preds = %cond.true103
  call void @__sanitizer_cov_trace_pc() #17
  %call138 = tail call i32 %35(ptr noundef %adev, i32 noundef %add112, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end146

cond.false139:                                    ; preds = %cond.true103
  call void @__sanitizer_cov_trace_pc() #17
  %call145 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add112, i32 noundef 0) #15
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false139, %cond.true128
  %cond147 = phi i32 [ %call138, %cond.true128 ], [ %call145, %cond.false139 ]
  %and148 = and i32 %cond147, -16385
  tail call void %29(ptr noundef %adev, i32 noundef %add112, i32 noundef %and148, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end193

land.lhs.true160:                                 ; preds = %land.lhs.true97
  %36 = ptrtoint ptr %funcs95 to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pr1384 = load ptr, ptr %funcs95, align 4
  %arrayidx1521336 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %37 = ptrtoint ptr %arrayidx1521336 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx1521336, align 8
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 4
  %add1551337 = add i32 %40, 4229
  %tobool164.not = icmp eq ptr %.pr1384, null
  br i1 %tobool164.not, label %land.lhs.true160.cond.false182_crit_edge, label %land.lhs.true165

land.lhs.true160.cond.false182_crit_edge:         ; preds = %land.lhs.true160
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182

land.lhs.true165:                                 ; preds = %land.lhs.true160
  %sriov_rreg169 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1384, i32 0, i32 13
  %41 = ptrtoint ptr %sriov_rreg169 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sriov_rreg169, align 4
  %tobool170.not = icmp eq ptr %42, null
  br i1 %tobool170.not, label %land.lhs.true165.cond.false182_crit_edge, label %cond.true171

land.lhs.true165.cond.false182_crit_edge:         ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182

cond.true171:                                     ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #17
  %call181 = tail call i32 %42(ptr noundef %adev, i32 noundef %add1551337, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end189

cond.false182.sink.split:                         ; preds = %land.lhs.true92.cond.false182.sink.split_crit_edge, %cond.end87.cond.false182.sink.split_crit_edge
  %arrayidx15213361385 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %43 = ptrtoint ptr %arrayidx15213361385 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx15213361385, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add15513371386 = add i32 %46, 4229
  br label %cond.false182

cond.false182:                                    ; preds = %cond.false182.sink.split, %land.lhs.true165.cond.false182_crit_edge, %land.lhs.true160.cond.false182_crit_edge
  %add1551340 = phi i32 [ %add1551337, %land.lhs.true165.cond.false182_crit_edge ], [ %add1551337, %land.lhs.true160.cond.false182_crit_edge ], [ %add15513371386, %cond.false182.sink.split ]
  %call188 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add1551340, i32 noundef 0) #15
  br label %cond.end189

cond.end189:                                      ; preds = %cond.false182, %cond.true171
  %add1551338 = phi i32 [ %add1551337, %cond.true171 ], [ %add1551340, %cond.false182 ]
  %cond190 = phi i32 [ %call181, %cond.true171 ], [ %call188, %cond.false182 ]
  %and191 = and i32 %cond190, -16385
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add1551338, i32 noundef %and191, i32 noundef 0) #15
  br label %cond.end193

cond.end193:                                      ; preds = %cond.end189, %cond.end146
  %47 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %virt, align 8
  %and196 = and i32 %48, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and196)
  %tobool197.not = icmp eq i32 %and196, 0
  br i1 %tobool197.not, label %cond.end193.cond.false288.sink.split_crit_edge, label %land.lhs.true198

cond.end193.cond.false288.sink.split_crit_edge:   ; preds = %cond.end193
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false288.sink.split

land.lhs.true198:                                 ; preds = %cond.end193
  %funcs201 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %49 = ptrtoint ptr %funcs201 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %funcs201, align 4
  %tobool202.not = icmp eq ptr %50, null
  br i1 %tobool202.not, label %land.lhs.true198.cond.false288.sink.split_crit_edge, label %land.lhs.true203

land.lhs.true198.cond.false288.sink.split_crit_edge: ; preds = %land.lhs.true198
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false288.sink.split

land.lhs.true203:                                 ; preds = %land.lhs.true198
  %sriov_wreg207 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %50, i32 0, i32 12
  %51 = ptrtoint ptr %sriov_wreg207 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %sriov_wreg207, align 4
  %tobool208.not = icmp eq ptr %52, null
  br i1 %tobool208.not, label %land.lhs.true266, label %cond.true209

cond.true209:                                     ; preds = %land.lhs.true203
  %arrayidx215 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %53 = ptrtoint ptr %arrayidx215 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx215, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %add218 = add i32 %56, 4230
  %sriov_rreg232 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %50, i32 0, i32 13
  %57 = ptrtoint ptr %sriov_rreg232 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sriov_rreg232, align 4
  %tobool233.not = icmp eq ptr %58, null
  br i1 %tobool233.not, label %cond.false245, label %cond.true234

cond.true234:                                     ; preds = %cond.true209
  call void @__sanitizer_cov_trace_pc() #17
  %call244 = tail call i32 %58(ptr noundef %adev, i32 noundef %add218, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end252

cond.false245:                                    ; preds = %cond.true209
  call void @__sanitizer_cov_trace_pc() #17
  %call251 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add218, i32 noundef 0) #15
  br label %cond.end252

cond.end252:                                      ; preds = %cond.false245, %cond.true234
  %cond253 = phi i32 [ %call244, %cond.true234 ], [ %call251, %cond.false245 ]
  %and254 = and i32 %cond253, -16385
  tail call void %52(ptr noundef %adev, i32 noundef %add218, i32 noundef %and254, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end299

land.lhs.true266:                                 ; preds = %land.lhs.true203
  %59 = ptrtoint ptr %funcs201 to i32
  call void @__asan_load4_noabort(i32 %59)
  %.pr1388 = load ptr, ptr %funcs201, align 4
  %arrayidx2581341 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %60 = ptrtoint ptr %arrayidx2581341 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx2581341, align 8
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %61, align 4
  %add2611342 = add i32 %63, 4230
  %tobool270.not = icmp eq ptr %.pr1388, null
  br i1 %tobool270.not, label %land.lhs.true266.cond.false288_crit_edge, label %land.lhs.true271

land.lhs.true266.cond.false288_crit_edge:         ; preds = %land.lhs.true266
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false288

land.lhs.true271:                                 ; preds = %land.lhs.true266
  %sriov_rreg275 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1388, i32 0, i32 13
  %64 = ptrtoint ptr %sriov_rreg275 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %sriov_rreg275, align 4
  %tobool276.not = icmp eq ptr %65, null
  br i1 %tobool276.not, label %land.lhs.true271.cond.false288_crit_edge, label %cond.true277

land.lhs.true271.cond.false288_crit_edge:         ; preds = %land.lhs.true271
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false288

cond.true277:                                     ; preds = %land.lhs.true271
  call void @__sanitizer_cov_trace_pc() #17
  %call287 = tail call i32 %65(ptr noundef %adev, i32 noundef %add2611342, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end295

cond.false288.sink.split:                         ; preds = %land.lhs.true198.cond.false288.sink.split_crit_edge, %cond.end193.cond.false288.sink.split_crit_edge
  %arrayidx25813411389 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %66 = ptrtoint ptr %arrayidx25813411389 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx25813411389, align 8
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %67, align 4
  %add26113421390 = add i32 %69, 4230
  br label %cond.false288

cond.false288:                                    ; preds = %cond.false288.sink.split, %land.lhs.true271.cond.false288_crit_edge, %land.lhs.true266.cond.false288_crit_edge
  %add2611345 = phi i32 [ %add2611342, %land.lhs.true271.cond.false288_crit_edge ], [ %add2611342, %land.lhs.true266.cond.false288_crit_edge ], [ %add26113421390, %cond.false288.sink.split ]
  %call294 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add2611345, i32 noundef 0) #15
  br label %cond.end295

cond.end295:                                      ; preds = %cond.false288, %cond.true277
  %add2611343 = phi i32 [ %add2611342, %cond.true277 ], [ %add2611345, %cond.false288 ]
  %cond296 = phi i32 [ %call287, %cond.true277 ], [ %call294, %cond.false288 ]
  %and297 = and i32 %cond296, -16385
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add2611343, i32 noundef %and297, i32 noundef 0) #15
  br label %cond.end299

cond.end299:                                      ; preds = %cond.end295, %cond.end252
  %70 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %virt, align 8
  %and302 = and i32 %71, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and302)
  %tobool303.not = icmp eq i32 %and302, 0
  br i1 %tobool303.not, label %cond.end299.cond.false394.sink.split_crit_edge, label %land.lhs.true304

cond.end299.cond.false394.sink.split_crit_edge:   ; preds = %cond.end299
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false394.sink.split

land.lhs.true304:                                 ; preds = %cond.end299
  %funcs307 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %72 = ptrtoint ptr %funcs307 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %funcs307, align 4
  %tobool308.not = icmp eq ptr %73, null
  br i1 %tobool308.not, label %land.lhs.true304.cond.false394.sink.split_crit_edge, label %land.lhs.true309

land.lhs.true304.cond.false394.sink.split_crit_edge: ; preds = %land.lhs.true304
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false394.sink.split

land.lhs.true309:                                 ; preds = %land.lhs.true304
  %sriov_wreg313 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %73, i32 0, i32 12
  %74 = ptrtoint ptr %sriov_wreg313 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %sriov_wreg313, align 4
  %tobool314.not = icmp eq ptr %75, null
  br i1 %tobool314.not, label %land.lhs.true372, label %cond.true315

cond.true315:                                     ; preds = %land.lhs.true309
  %arrayidx321 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %76 = ptrtoint ptr %arrayidx321 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx321, align 8
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %77, align 4
  %add324 = add i32 %79, 4231
  %sriov_rreg338 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %73, i32 0, i32 13
  %80 = ptrtoint ptr %sriov_rreg338 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %sriov_rreg338, align 4
  %tobool339.not = icmp eq ptr %81, null
  br i1 %tobool339.not, label %cond.false351, label %cond.true340

cond.true340:                                     ; preds = %cond.true315
  call void @__sanitizer_cov_trace_pc() #17
  %call350 = tail call i32 %81(ptr noundef %adev, i32 noundef %add324, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end358

cond.false351:                                    ; preds = %cond.true315
  call void @__sanitizer_cov_trace_pc() #17
  %call357 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add324, i32 noundef 0) #15
  br label %cond.end358

cond.end358:                                      ; preds = %cond.false351, %cond.true340
  %cond359 = phi i32 [ %call350, %cond.true340 ], [ %call357, %cond.false351 ]
  %and360 = and i32 %cond359, -16385
  tail call void %75(ptr noundef %adev, i32 noundef %add324, i32 noundef %and360, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end405

land.lhs.true372:                                 ; preds = %land.lhs.true309
  %82 = ptrtoint ptr %funcs307 to i32
  call void @__asan_load4_noabort(i32 %82)
  %.pr1392 = load ptr, ptr %funcs307, align 4
  %arrayidx3641346 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %83 = ptrtoint ptr %arrayidx3641346 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %arrayidx3641346, align 8
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %84, align 4
  %add3671347 = add i32 %86, 4231
  %tobool376.not = icmp eq ptr %.pr1392, null
  br i1 %tobool376.not, label %land.lhs.true372.cond.false394_crit_edge, label %land.lhs.true377

land.lhs.true372.cond.false394_crit_edge:         ; preds = %land.lhs.true372
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false394

land.lhs.true377:                                 ; preds = %land.lhs.true372
  %sriov_rreg381 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1392, i32 0, i32 13
  %87 = ptrtoint ptr %sriov_rreg381 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %sriov_rreg381, align 4
  %tobool382.not = icmp eq ptr %88, null
  br i1 %tobool382.not, label %land.lhs.true377.cond.false394_crit_edge, label %cond.true383

land.lhs.true377.cond.false394_crit_edge:         ; preds = %land.lhs.true377
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false394

cond.true383:                                     ; preds = %land.lhs.true377
  call void @__sanitizer_cov_trace_pc() #17
  %call393 = tail call i32 %88(ptr noundef %adev, i32 noundef %add3671347, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end401

cond.false394.sink.split:                         ; preds = %land.lhs.true304.cond.false394.sink.split_crit_edge, %cond.end299.cond.false394.sink.split_crit_edge
  %arrayidx36413461393 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %89 = ptrtoint ptr %arrayidx36413461393 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx36413461393, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add36713471394 = add i32 %92, 4231
  br label %cond.false394

cond.false394:                                    ; preds = %cond.false394.sink.split, %land.lhs.true377.cond.false394_crit_edge, %land.lhs.true372.cond.false394_crit_edge
  %add3671350 = phi i32 [ %add3671347, %land.lhs.true377.cond.false394_crit_edge ], [ %add3671347, %land.lhs.true372.cond.false394_crit_edge ], [ %add36713471394, %cond.false394.sink.split ]
  %call400 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add3671350, i32 noundef 0) #15
  br label %cond.end401

cond.end401:                                      ; preds = %cond.false394, %cond.true383
  %add3671348 = phi i32 [ %add3671347, %cond.true383 ], [ %add3671350, %cond.false394 ]
  %cond402 = phi i32 [ %call393, %cond.true383 ], [ %call400, %cond.false394 ]
  %and403 = and i32 %cond402, -16385
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add3671348, i32 noundef %and403, i32 noundef 0) #15
  br label %cond.end405

cond.end405:                                      ; preds = %cond.end401, %cond.end358
  %93 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %virt, align 8
  %and408 = and i32 %94, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and408)
  %tobool409.not = icmp eq i32 %and408, 0
  br i1 %tobool409.not, label %cond.end405.cond.false500.sink.split_crit_edge, label %land.lhs.true410

cond.end405.cond.false500.sink.split_crit_edge:   ; preds = %cond.end405
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false500.sink.split

land.lhs.true410:                                 ; preds = %cond.end405
  %funcs413 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %95 = ptrtoint ptr %funcs413 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %funcs413, align 4
  %tobool414.not = icmp eq ptr %96, null
  br i1 %tobool414.not, label %land.lhs.true410.cond.false500.sink.split_crit_edge, label %land.lhs.true415

land.lhs.true410.cond.false500.sink.split_crit_edge: ; preds = %land.lhs.true410
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false500.sink.split

land.lhs.true415:                                 ; preds = %land.lhs.true410
  %sriov_wreg419 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %96, i32 0, i32 12
  %97 = ptrtoint ptr %sriov_wreg419 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %sriov_wreg419, align 4
  %tobool420.not = icmp eq ptr %98, null
  br i1 %tobool420.not, label %land.lhs.true478, label %cond.true421

cond.true421:                                     ; preds = %land.lhs.true415
  %arrayidx427 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %99 = ptrtoint ptr %arrayidx427 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %arrayidx427, align 8
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %100, align 4
  %add430 = add i32 %102, 4232
  %sriov_rreg444 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %96, i32 0, i32 13
  %103 = ptrtoint ptr %sriov_rreg444 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %sriov_rreg444, align 4
  %tobool445.not = icmp eq ptr %104, null
  br i1 %tobool445.not, label %cond.false457, label %cond.true446

cond.true446:                                     ; preds = %cond.true421
  call void @__sanitizer_cov_trace_pc() #17
  %call456 = tail call i32 %104(ptr noundef %adev, i32 noundef %add430, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end464

cond.false457:                                    ; preds = %cond.true421
  call void @__sanitizer_cov_trace_pc() #17
  %call463 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add430, i32 noundef 0) #15
  br label %cond.end464

cond.end464:                                      ; preds = %cond.false457, %cond.true446
  %cond465 = phi i32 [ %call456, %cond.true446 ], [ %call463, %cond.false457 ]
  %and466 = and i32 %cond465, -16385
  tail call void %98(ptr noundef %adev, i32 noundef %add430, i32 noundef %and466, i32 noundef 0, i32 noundef 1) #15
  br label %sw.epilog

land.lhs.true478:                                 ; preds = %land.lhs.true415
  %105 = ptrtoint ptr %funcs413 to i32
  call void @__asan_load4_noabort(i32 %105)
  %.pr1396 = load ptr, ptr %funcs413, align 4
  %arrayidx4701351 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %106 = ptrtoint ptr %arrayidx4701351 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %arrayidx4701351, align 8
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %107, align 4
  %add4731352 = add i32 %109, 4232
  %tobool482.not = icmp eq ptr %.pr1396, null
  br i1 %tobool482.not, label %land.lhs.true478.cond.false500_crit_edge, label %land.lhs.true483

land.lhs.true478.cond.false500_crit_edge:         ; preds = %land.lhs.true478
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false500

land.lhs.true483:                                 ; preds = %land.lhs.true478
  %sriov_rreg487 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1396, i32 0, i32 13
  %110 = ptrtoint ptr %sriov_rreg487 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %sriov_rreg487, align 4
  %tobool488.not = icmp eq ptr %111, null
  br i1 %tobool488.not, label %land.lhs.true483.cond.false500_crit_edge, label %cond.true489

land.lhs.true483.cond.false500_crit_edge:         ; preds = %land.lhs.true483
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false500

cond.true489:                                     ; preds = %land.lhs.true483
  call void @__sanitizer_cov_trace_pc() #17
  %call499 = tail call i32 %111(ptr noundef %adev, i32 noundef %add4731352, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end507

cond.false500.sink.split:                         ; preds = %land.lhs.true410.cond.false500.sink.split_crit_edge, %cond.end405.cond.false500.sink.split_crit_edge
  %arrayidx47013511397 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %112 = ptrtoint ptr %arrayidx47013511397 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %arrayidx47013511397, align 8
  %114 = ptrtoint ptr %113 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %113, align 4
  %add47313521398 = add i32 %115, 4232
  br label %cond.false500

cond.false500:                                    ; preds = %cond.false500.sink.split, %land.lhs.true483.cond.false500_crit_edge, %land.lhs.true478.cond.false500_crit_edge
  %add4731355 = phi i32 [ %add4731352, %land.lhs.true483.cond.false500_crit_edge ], [ %add4731352, %land.lhs.true478.cond.false500_crit_edge ], [ %add47313521398, %cond.false500.sink.split ]
  %call506 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add4731355, i32 noundef 0) #15
  br label %cond.end507

cond.end507:                                      ; preds = %cond.false500, %cond.true489
  %add4731353 = phi i32 [ %add4731352, %cond.true489 ], [ %add4731355, %cond.false500 ]
  %cond508 = phi i32 [ %call499, %cond.true489 ], [ %call506, %cond.false500 ]
  %and509 = and i32 %cond508, -16385
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add4731353, i32 noundef %and509, i32 noundef 0) #15
  br label %sw.epilog

sw.bb512:                                         ; preds = %entry
  %virt513 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %116 = ptrtoint ptr %virt513 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %virt513, align 8
  %and515 = and i32 %117, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and515)
  %tobool516.not = icmp eq i32 %and515, 0
  br i1 %tobool516.not, label %sw.bb512.cond.false607.sink.split_crit_edge, label %land.lhs.true517

sw.bb512.cond.false607.sink.split_crit_edge:      ; preds = %sw.bb512
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false607.sink.split

land.lhs.true517:                                 ; preds = %sw.bb512
  %funcs520 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %118 = ptrtoint ptr %funcs520 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %funcs520, align 4
  %tobool521.not = icmp eq ptr %119, null
  br i1 %tobool521.not, label %land.lhs.true517.cond.false607.sink.split_crit_edge, label %land.lhs.true522

land.lhs.true517.cond.false607.sink.split_crit_edge: ; preds = %land.lhs.true517
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false607.sink.split

land.lhs.true522:                                 ; preds = %land.lhs.true517
  %sriov_wreg526 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %119, i32 0, i32 12
  %120 = ptrtoint ptr %sriov_wreg526 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %sriov_wreg526, align 4
  %tobool527.not = icmp eq ptr %121, null
  br i1 %tobool527.not, label %land.lhs.true585, label %cond.true528

cond.true528:                                     ; preds = %land.lhs.true522
  %arrayidx534 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %122 = ptrtoint ptr %arrayidx534 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %arrayidx534, align 8
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %123, align 4
  %add537 = add i32 %125, 4202
  %sriov_rreg551 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %119, i32 0, i32 13
  %126 = ptrtoint ptr %sriov_rreg551 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %sriov_rreg551, align 4
  %tobool552.not = icmp eq ptr %127, null
  br i1 %tobool552.not, label %cond.false564, label %cond.true553

cond.true553:                                     ; preds = %cond.true528
  call void @__sanitizer_cov_trace_pc() #17
  %call563 = tail call i32 %127(ptr noundef %adev, i32 noundef %add537, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end571

cond.false564:                                    ; preds = %cond.true528
  call void @__sanitizer_cov_trace_pc() #17
  %call570 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add537, i32 noundef 0) #15
  br label %cond.end571

cond.end571:                                      ; preds = %cond.false564, %cond.true553
  %cond572 = phi i32 [ %call563, %cond.true553 ], [ %call570, %cond.false564 ]
  %or574 = or i32 %cond572, 16384
  tail call void %121(ptr noundef %adev, i32 noundef %add537, i32 noundef %or574, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end618

land.lhs.true585:                                 ; preds = %land.lhs.true522
  %128 = ptrtoint ptr %funcs520 to i32
  call void @__asan_load4_noabort(i32 %128)
  %.pr1400 = load ptr, ptr %funcs520, align 4
  %arrayidx5771356 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %129 = ptrtoint ptr %arrayidx5771356 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %arrayidx5771356, align 8
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %130, align 4
  %add5801357 = add i32 %132, 4202
  %tobool589.not = icmp eq ptr %.pr1400, null
  br i1 %tobool589.not, label %land.lhs.true585.cond.false607_crit_edge, label %land.lhs.true590

land.lhs.true585.cond.false607_crit_edge:         ; preds = %land.lhs.true585
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false607

land.lhs.true590:                                 ; preds = %land.lhs.true585
  %sriov_rreg594 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1400, i32 0, i32 13
  %133 = ptrtoint ptr %sriov_rreg594 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %sriov_rreg594, align 4
  %tobool595.not = icmp eq ptr %134, null
  br i1 %tobool595.not, label %land.lhs.true590.cond.false607_crit_edge, label %cond.true596

land.lhs.true590.cond.false607_crit_edge:         ; preds = %land.lhs.true590
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false607

cond.true596:                                     ; preds = %land.lhs.true590
  call void @__sanitizer_cov_trace_pc() #17
  %call606 = tail call i32 %134(ptr noundef %adev, i32 noundef %add5801357, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end614

cond.false607.sink.split:                         ; preds = %land.lhs.true517.cond.false607.sink.split_crit_edge, %sw.bb512.cond.false607.sink.split_crit_edge
  %arrayidx57713561401 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %135 = ptrtoint ptr %arrayidx57713561401 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %arrayidx57713561401, align 8
  %137 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %136, align 4
  %add58013571402 = add i32 %138, 4202
  br label %cond.false607

cond.false607:                                    ; preds = %cond.false607.sink.split, %land.lhs.true590.cond.false607_crit_edge, %land.lhs.true585.cond.false607_crit_edge
  %add5801360 = phi i32 [ %add5801357, %land.lhs.true590.cond.false607_crit_edge ], [ %add5801357, %land.lhs.true585.cond.false607_crit_edge ], [ %add58013571402, %cond.false607.sink.split ]
  %call613 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add5801360, i32 noundef 0) #15
  br label %cond.end614

cond.end614:                                      ; preds = %cond.false607, %cond.true596
  %add5801358 = phi i32 [ %add5801357, %cond.true596 ], [ %add5801360, %cond.false607 ]
  %cond615 = phi i32 [ %call606, %cond.true596 ], [ %call613, %cond.false607 ]
  %or617 = or i32 %cond615, 16384
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add5801358, i32 noundef %or617, i32 noundef 0) #15
  br label %cond.end618

cond.end618:                                      ; preds = %cond.end614, %cond.end571
  %139 = ptrtoint ptr %virt513 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %virt513, align 8
  %and621 = and i32 %140, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and621)
  %tobool622.not = icmp eq i32 %and621, 0
  br i1 %tobool622.not, label %cond.end618.cond.false713.sink.split_crit_edge, label %land.lhs.true623

cond.end618.cond.false713.sink.split_crit_edge:   ; preds = %cond.end618
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false713.sink.split

land.lhs.true623:                                 ; preds = %cond.end618
  %funcs626 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %141 = ptrtoint ptr %funcs626 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %funcs626, align 4
  %tobool627.not = icmp eq ptr %142, null
  br i1 %tobool627.not, label %land.lhs.true623.cond.false713.sink.split_crit_edge, label %land.lhs.true628

land.lhs.true623.cond.false713.sink.split_crit_edge: ; preds = %land.lhs.true623
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false713.sink.split

land.lhs.true628:                                 ; preds = %land.lhs.true623
  %sriov_wreg632 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %142, i32 0, i32 12
  %143 = ptrtoint ptr %sriov_wreg632 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %sriov_wreg632, align 4
  %tobool633.not = icmp eq ptr %144, null
  br i1 %tobool633.not, label %land.lhs.true691, label %cond.true634

cond.true634:                                     ; preds = %land.lhs.true628
  %arrayidx640 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %145 = ptrtoint ptr %arrayidx640 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %arrayidx640, align 8
  %147 = ptrtoint ptr %146 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %146, align 4
  %add643 = add i32 %148, 4229
  %sriov_rreg657 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %142, i32 0, i32 13
  %149 = ptrtoint ptr %sriov_rreg657 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %sriov_rreg657, align 4
  %tobool658.not = icmp eq ptr %150, null
  br i1 %tobool658.not, label %cond.false670, label %cond.true659

cond.true659:                                     ; preds = %cond.true634
  call void @__sanitizer_cov_trace_pc() #17
  %call669 = tail call i32 %150(ptr noundef %adev, i32 noundef %add643, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end677

cond.false670:                                    ; preds = %cond.true634
  call void @__sanitizer_cov_trace_pc() #17
  %call676 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add643, i32 noundef 0) #15
  br label %cond.end677

cond.end677:                                      ; preds = %cond.false670, %cond.true659
  %cond678 = phi i32 [ %call669, %cond.true659 ], [ %call676, %cond.false670 ]
  %or680 = or i32 %cond678, 16384
  tail call void %144(ptr noundef %adev, i32 noundef %add643, i32 noundef %or680, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end724

land.lhs.true691:                                 ; preds = %land.lhs.true628
  %151 = ptrtoint ptr %funcs626 to i32
  call void @__asan_load4_noabort(i32 %151)
  %.pr1404 = load ptr, ptr %funcs626, align 4
  %arrayidx6831361 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %152 = ptrtoint ptr %arrayidx6831361 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %arrayidx6831361, align 8
  %154 = ptrtoint ptr %153 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %153, align 4
  %add6861362 = add i32 %155, 4229
  %tobool695.not = icmp eq ptr %.pr1404, null
  br i1 %tobool695.not, label %land.lhs.true691.cond.false713_crit_edge, label %land.lhs.true696

land.lhs.true691.cond.false713_crit_edge:         ; preds = %land.lhs.true691
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false713

land.lhs.true696:                                 ; preds = %land.lhs.true691
  %sriov_rreg700 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1404, i32 0, i32 13
  %156 = ptrtoint ptr %sriov_rreg700 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %sriov_rreg700, align 4
  %tobool701.not = icmp eq ptr %157, null
  br i1 %tobool701.not, label %land.lhs.true696.cond.false713_crit_edge, label %cond.true702

land.lhs.true696.cond.false713_crit_edge:         ; preds = %land.lhs.true696
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false713

cond.true702:                                     ; preds = %land.lhs.true696
  call void @__sanitizer_cov_trace_pc() #17
  %call712 = tail call i32 %157(ptr noundef %adev, i32 noundef %add6861362, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end720

cond.false713.sink.split:                         ; preds = %land.lhs.true623.cond.false713.sink.split_crit_edge, %cond.end618.cond.false713.sink.split_crit_edge
  %arrayidx68313611405 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %158 = ptrtoint ptr %arrayidx68313611405 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %arrayidx68313611405, align 8
  %160 = ptrtoint ptr %159 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %159, align 4
  %add68613621406 = add i32 %161, 4229
  br label %cond.false713

cond.false713:                                    ; preds = %cond.false713.sink.split, %land.lhs.true696.cond.false713_crit_edge, %land.lhs.true691.cond.false713_crit_edge
  %add6861365 = phi i32 [ %add6861362, %land.lhs.true696.cond.false713_crit_edge ], [ %add6861362, %land.lhs.true691.cond.false713_crit_edge ], [ %add68613621406, %cond.false713.sink.split ]
  %call719 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add6861365, i32 noundef 0) #15
  br label %cond.end720

cond.end720:                                      ; preds = %cond.false713, %cond.true702
  %add6861363 = phi i32 [ %add6861362, %cond.true702 ], [ %add6861365, %cond.false713 ]
  %cond721 = phi i32 [ %call712, %cond.true702 ], [ %call719, %cond.false713 ]
  %or723 = or i32 %cond721, 16384
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add6861363, i32 noundef %or723, i32 noundef 0) #15
  br label %cond.end724

cond.end724:                                      ; preds = %cond.end720, %cond.end677
  %162 = ptrtoint ptr %virt513 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %virt513, align 8
  %and727 = and i32 %163, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and727)
  %tobool728.not = icmp eq i32 %and727, 0
  br i1 %tobool728.not, label %cond.end724.cond.false819.sink.split_crit_edge, label %land.lhs.true729

cond.end724.cond.false819.sink.split_crit_edge:   ; preds = %cond.end724
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false819.sink.split

land.lhs.true729:                                 ; preds = %cond.end724
  %funcs732 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %164 = ptrtoint ptr %funcs732 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %funcs732, align 4
  %tobool733.not = icmp eq ptr %165, null
  br i1 %tobool733.not, label %land.lhs.true729.cond.false819.sink.split_crit_edge, label %land.lhs.true734

land.lhs.true729.cond.false819.sink.split_crit_edge: ; preds = %land.lhs.true729
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false819.sink.split

land.lhs.true734:                                 ; preds = %land.lhs.true729
  %sriov_wreg738 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %165, i32 0, i32 12
  %166 = ptrtoint ptr %sriov_wreg738 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %sriov_wreg738, align 4
  %tobool739.not = icmp eq ptr %167, null
  br i1 %tobool739.not, label %land.lhs.true797, label %cond.true740

cond.true740:                                     ; preds = %land.lhs.true734
  %arrayidx746 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %168 = ptrtoint ptr %arrayidx746 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %arrayidx746, align 8
  %170 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %169, align 4
  %add749 = add i32 %171, 4230
  %sriov_rreg763 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %165, i32 0, i32 13
  %172 = ptrtoint ptr %sriov_rreg763 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %sriov_rreg763, align 4
  %tobool764.not = icmp eq ptr %173, null
  br i1 %tobool764.not, label %cond.false776, label %cond.true765

cond.true765:                                     ; preds = %cond.true740
  call void @__sanitizer_cov_trace_pc() #17
  %call775 = tail call i32 %173(ptr noundef %adev, i32 noundef %add749, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end783

cond.false776:                                    ; preds = %cond.true740
  call void @__sanitizer_cov_trace_pc() #17
  %call782 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add749, i32 noundef 0) #15
  br label %cond.end783

cond.end783:                                      ; preds = %cond.false776, %cond.true765
  %cond784 = phi i32 [ %call775, %cond.true765 ], [ %call782, %cond.false776 ]
  %or786 = or i32 %cond784, 16384
  tail call void %167(ptr noundef %adev, i32 noundef %add749, i32 noundef %or786, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end830

land.lhs.true797:                                 ; preds = %land.lhs.true734
  %174 = ptrtoint ptr %funcs732 to i32
  call void @__asan_load4_noabort(i32 %174)
  %.pr1408 = load ptr, ptr %funcs732, align 4
  %arrayidx7891366 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %175 = ptrtoint ptr %arrayidx7891366 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %arrayidx7891366, align 8
  %177 = ptrtoint ptr %176 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %176, align 4
  %add7921367 = add i32 %178, 4230
  %tobool801.not = icmp eq ptr %.pr1408, null
  br i1 %tobool801.not, label %land.lhs.true797.cond.false819_crit_edge, label %land.lhs.true802

land.lhs.true797.cond.false819_crit_edge:         ; preds = %land.lhs.true797
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false819

land.lhs.true802:                                 ; preds = %land.lhs.true797
  %sriov_rreg806 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1408, i32 0, i32 13
  %179 = ptrtoint ptr %sriov_rreg806 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %sriov_rreg806, align 4
  %tobool807.not = icmp eq ptr %180, null
  br i1 %tobool807.not, label %land.lhs.true802.cond.false819_crit_edge, label %cond.true808

land.lhs.true802.cond.false819_crit_edge:         ; preds = %land.lhs.true802
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false819

cond.true808:                                     ; preds = %land.lhs.true802
  call void @__sanitizer_cov_trace_pc() #17
  %call818 = tail call i32 %180(ptr noundef %adev, i32 noundef %add7921367, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end826

cond.false819.sink.split:                         ; preds = %land.lhs.true729.cond.false819.sink.split_crit_edge, %cond.end724.cond.false819.sink.split_crit_edge
  %arrayidx78913661409 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %181 = ptrtoint ptr %arrayidx78913661409 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %arrayidx78913661409, align 8
  %183 = ptrtoint ptr %182 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %182, align 4
  %add79213671410 = add i32 %184, 4230
  br label %cond.false819

cond.false819:                                    ; preds = %cond.false819.sink.split, %land.lhs.true802.cond.false819_crit_edge, %land.lhs.true797.cond.false819_crit_edge
  %add7921370 = phi i32 [ %add7921367, %land.lhs.true802.cond.false819_crit_edge ], [ %add7921367, %land.lhs.true797.cond.false819_crit_edge ], [ %add79213671410, %cond.false819.sink.split ]
  %call825 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add7921370, i32 noundef 0) #15
  br label %cond.end826

cond.end826:                                      ; preds = %cond.false819, %cond.true808
  %add7921368 = phi i32 [ %add7921367, %cond.true808 ], [ %add7921370, %cond.false819 ]
  %cond827 = phi i32 [ %call818, %cond.true808 ], [ %call825, %cond.false819 ]
  %or829 = or i32 %cond827, 16384
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add7921368, i32 noundef %or829, i32 noundef 0) #15
  br label %cond.end830

cond.end830:                                      ; preds = %cond.end826, %cond.end783
  %185 = ptrtoint ptr %virt513 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %virt513, align 8
  %and833 = and i32 %186, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and833)
  %tobool834.not = icmp eq i32 %and833, 0
  br i1 %tobool834.not, label %cond.end830.cond.false925.sink.split_crit_edge, label %land.lhs.true835

cond.end830.cond.false925.sink.split_crit_edge:   ; preds = %cond.end830
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false925.sink.split

land.lhs.true835:                                 ; preds = %cond.end830
  %funcs838 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %187 = ptrtoint ptr %funcs838 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %funcs838, align 4
  %tobool839.not = icmp eq ptr %188, null
  br i1 %tobool839.not, label %land.lhs.true835.cond.false925.sink.split_crit_edge, label %land.lhs.true840

land.lhs.true835.cond.false925.sink.split_crit_edge: ; preds = %land.lhs.true835
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false925.sink.split

land.lhs.true840:                                 ; preds = %land.lhs.true835
  %sriov_wreg844 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %188, i32 0, i32 12
  %189 = ptrtoint ptr %sriov_wreg844 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %sriov_wreg844, align 4
  %tobool845.not = icmp eq ptr %190, null
  br i1 %tobool845.not, label %land.lhs.true903, label %cond.true846

cond.true846:                                     ; preds = %land.lhs.true840
  %arrayidx852 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %191 = ptrtoint ptr %arrayidx852 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %arrayidx852, align 8
  %193 = ptrtoint ptr %192 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %192, align 4
  %add855 = add i32 %194, 4231
  %sriov_rreg869 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %188, i32 0, i32 13
  %195 = ptrtoint ptr %sriov_rreg869 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %sriov_rreg869, align 4
  %tobool870.not = icmp eq ptr %196, null
  br i1 %tobool870.not, label %cond.false882, label %cond.true871

cond.true871:                                     ; preds = %cond.true846
  call void @__sanitizer_cov_trace_pc() #17
  %call881 = tail call i32 %196(ptr noundef %adev, i32 noundef %add855, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end889

cond.false882:                                    ; preds = %cond.true846
  call void @__sanitizer_cov_trace_pc() #17
  %call888 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add855, i32 noundef 0) #15
  br label %cond.end889

cond.end889:                                      ; preds = %cond.false882, %cond.true871
  %cond890 = phi i32 [ %call881, %cond.true871 ], [ %call888, %cond.false882 ]
  %or892 = or i32 %cond890, 16384
  tail call void %190(ptr noundef %adev, i32 noundef %add855, i32 noundef %or892, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end936

land.lhs.true903:                                 ; preds = %land.lhs.true840
  %197 = ptrtoint ptr %funcs838 to i32
  call void @__asan_load4_noabort(i32 %197)
  %.pr1412 = load ptr, ptr %funcs838, align 4
  %arrayidx8951371 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %198 = ptrtoint ptr %arrayidx8951371 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %arrayidx8951371, align 8
  %200 = ptrtoint ptr %199 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %199, align 4
  %add8981372 = add i32 %201, 4231
  %tobool907.not = icmp eq ptr %.pr1412, null
  br i1 %tobool907.not, label %land.lhs.true903.cond.false925_crit_edge, label %land.lhs.true908

land.lhs.true903.cond.false925_crit_edge:         ; preds = %land.lhs.true903
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false925

land.lhs.true908:                                 ; preds = %land.lhs.true903
  %sriov_rreg912 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1412, i32 0, i32 13
  %202 = ptrtoint ptr %sriov_rreg912 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %sriov_rreg912, align 4
  %tobool913.not = icmp eq ptr %203, null
  br i1 %tobool913.not, label %land.lhs.true908.cond.false925_crit_edge, label %cond.true914

land.lhs.true908.cond.false925_crit_edge:         ; preds = %land.lhs.true908
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false925

cond.true914:                                     ; preds = %land.lhs.true908
  call void @__sanitizer_cov_trace_pc() #17
  %call924 = tail call i32 %203(ptr noundef %adev, i32 noundef %add8981372, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end932

cond.false925.sink.split:                         ; preds = %land.lhs.true835.cond.false925.sink.split_crit_edge, %cond.end830.cond.false925.sink.split_crit_edge
  %arrayidx89513711413 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %204 = ptrtoint ptr %arrayidx89513711413 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %arrayidx89513711413, align 8
  %206 = ptrtoint ptr %205 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %205, align 4
  %add89813721414 = add i32 %207, 4231
  br label %cond.false925

cond.false925:                                    ; preds = %cond.false925.sink.split, %land.lhs.true908.cond.false925_crit_edge, %land.lhs.true903.cond.false925_crit_edge
  %add8981375 = phi i32 [ %add8981372, %land.lhs.true908.cond.false925_crit_edge ], [ %add8981372, %land.lhs.true903.cond.false925_crit_edge ], [ %add89813721414, %cond.false925.sink.split ]
  %call931 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add8981375, i32 noundef 0) #15
  br label %cond.end932

cond.end932:                                      ; preds = %cond.false925, %cond.true914
  %add8981373 = phi i32 [ %add8981372, %cond.true914 ], [ %add8981375, %cond.false925 ]
  %cond933 = phi i32 [ %call924, %cond.true914 ], [ %call931, %cond.false925 ]
  %or935 = or i32 %cond933, 16384
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add8981373, i32 noundef %or935, i32 noundef 0) #15
  br label %cond.end936

cond.end936:                                      ; preds = %cond.end932, %cond.end889
  %208 = ptrtoint ptr %virt513 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %virt513, align 8
  %and939 = and i32 %209, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and939)
  %tobool940.not = icmp eq i32 %and939, 0
  br i1 %tobool940.not, label %cond.end936.cond.false1031.sink.split_crit_edge, label %land.lhs.true941

cond.end936.cond.false1031.sink.split_crit_edge:  ; preds = %cond.end936
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1031.sink.split

land.lhs.true941:                                 ; preds = %cond.end936
  %funcs944 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %210 = ptrtoint ptr %funcs944 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %funcs944, align 4
  %tobool945.not = icmp eq ptr %211, null
  br i1 %tobool945.not, label %land.lhs.true941.cond.false1031.sink.split_crit_edge, label %land.lhs.true946

land.lhs.true941.cond.false1031.sink.split_crit_edge: ; preds = %land.lhs.true941
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1031.sink.split

land.lhs.true946:                                 ; preds = %land.lhs.true941
  %sriov_wreg950 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %211, i32 0, i32 12
  %212 = ptrtoint ptr %sriov_wreg950 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %sriov_wreg950, align 4
  %tobool951.not = icmp eq ptr %213, null
  br i1 %tobool951.not, label %land.lhs.true1009, label %cond.true952

cond.true952:                                     ; preds = %land.lhs.true946
  %arrayidx958 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %214 = ptrtoint ptr %arrayidx958 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %arrayidx958, align 8
  %216 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %215, align 4
  %add961 = add i32 %217, 4232
  %sriov_rreg975 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %211, i32 0, i32 13
  %218 = ptrtoint ptr %sriov_rreg975 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %sriov_rreg975, align 4
  %tobool976.not = icmp eq ptr %219, null
  br i1 %tobool976.not, label %cond.false988, label %cond.true977

cond.true977:                                     ; preds = %cond.true952
  call void @__sanitizer_cov_trace_pc() #17
  %call987 = tail call i32 %219(ptr noundef %adev, i32 noundef %add961, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end995

cond.false988:                                    ; preds = %cond.true952
  call void @__sanitizer_cov_trace_pc() #17
  %call994 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add961, i32 noundef 0) #15
  br label %cond.end995

cond.end995:                                      ; preds = %cond.false988, %cond.true977
  %cond996 = phi i32 [ %call987, %cond.true977 ], [ %call994, %cond.false988 ]
  %or998 = or i32 %cond996, 16384
  tail call void %213(ptr noundef %adev, i32 noundef %add961, i32 noundef %or998, i32 noundef 0, i32 noundef 1) #15
  br label %sw.epilog

land.lhs.true1009:                                ; preds = %land.lhs.true946
  %220 = ptrtoint ptr %funcs944 to i32
  call void @__asan_load4_noabort(i32 %220)
  %.pr1416 = load ptr, ptr %funcs944, align 4
  %arrayidx10011376 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %221 = ptrtoint ptr %arrayidx10011376 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %arrayidx10011376, align 8
  %223 = ptrtoint ptr %222 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %222, align 4
  %add10041377 = add i32 %224, 4232
  %tobool1013.not = icmp eq ptr %.pr1416, null
  br i1 %tobool1013.not, label %land.lhs.true1009.cond.false1031_crit_edge, label %land.lhs.true1014

land.lhs.true1009.cond.false1031_crit_edge:       ; preds = %land.lhs.true1009
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1031

land.lhs.true1014:                                ; preds = %land.lhs.true1009
  %sriov_rreg1018 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr1416, i32 0, i32 13
  %225 = ptrtoint ptr %sriov_rreg1018 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %sriov_rreg1018, align 4
  %tobool1019.not = icmp eq ptr %226, null
  br i1 %tobool1019.not, label %land.lhs.true1014.cond.false1031_crit_edge, label %cond.true1020

land.lhs.true1014.cond.false1031_crit_edge:       ; preds = %land.lhs.true1014
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1031

cond.true1020:                                    ; preds = %land.lhs.true1014
  call void @__sanitizer_cov_trace_pc() #17
  %call1030 = tail call i32 %226(ptr noundef %adev, i32 noundef %add10041377, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end1038

cond.false1031.sink.split:                        ; preds = %land.lhs.true941.cond.false1031.sink.split_crit_edge, %cond.end936.cond.false1031.sink.split_crit_edge
  %arrayidx100113761417 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %227 = ptrtoint ptr %arrayidx100113761417 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %arrayidx100113761417, align 8
  %229 = ptrtoint ptr %228 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %228, align 4
  %add100413771418 = add i32 %230, 4232
  br label %cond.false1031

cond.false1031:                                   ; preds = %cond.false1031.sink.split, %land.lhs.true1014.cond.false1031_crit_edge, %land.lhs.true1009.cond.false1031_crit_edge
  %add10041380 = phi i32 [ %add10041377, %land.lhs.true1014.cond.false1031_crit_edge ], [ %add10041377, %land.lhs.true1009.cond.false1031_crit_edge ], [ %add100413771418, %cond.false1031.sink.split ]
  %call1037 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add10041380, i32 noundef 0) #15
  br label %cond.end1038

cond.end1038:                                     ; preds = %cond.false1031, %cond.true1020
  %add10041378 = phi i32 [ %add10041377, %cond.true1020 ], [ %add10041380, %cond.false1031 ]
  %cond1039 = phi i32 [ %call1030, %cond.true1020 ], [ %call1037, %cond.false1031 ]
  %or1041 = or i32 %cond1039, 16384
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add10041378, i32 noundef %or1041, i32 noundef 0) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end1038, %cond.end995, %cond.end507, %cond.end464, %entry.sw.epilog_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_cp_ecc_error_irq(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @gfx_v9_0_is_rlc_enabled(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19456
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %arrayidx16 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx16, align 4
  %add17 = add i32 %13, 19456
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp ne i32 %and19, 0
  ret i1 %tobool20.not
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_set_safe_mode(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19461
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef 3, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %arrayidx16 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx16, align 4
  %add17 = add i32 %13, 19461
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 3, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  %14 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp74.not = icmp eq i32 %15, 0
  br i1 %cmp74.not, label %cond.end.for.end_crit_edge, label %for.body.lr.ph

cond.end.for.end_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.lr.ph:                                   ; preds = %cond.end
  %funcs25 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx38 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %i.075 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.for.body_crit_edge ]
  %16 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %virt, align 8
  %and20 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %for.body.cond.false42_crit_edge, label %land.lhs.true22

for.body.cond.false42_crit_edge:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false42

land.lhs.true22:                                  ; preds = %for.body
  %18 = ptrtoint ptr %funcs25 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs25, align 4
  %tobool26.not = icmp eq ptr %19, null
  br i1 %tobool26.not, label %land.lhs.true22.cond.false42_crit_edge, label %land.lhs.true27

land.lhs.true22.cond.false42_crit_edge:           ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false42

land.lhs.true27:                                  ; preds = %land.lhs.true22
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %19, i32 0, i32 13
  %20 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_rreg, align 4
  %tobool31.not = icmp eq ptr %21, null
  br i1 %tobool31.not, label %land.lhs.true27.cond.false42_crit_edge, label %cond.true32

land.lhs.true27.cond.false42_crit_edge:           ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false42

cond.true32:                                      ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #17
  %22 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx38, align 8
  %arrayidx40 = getelementptr i32, ptr %23, i32 1
  %24 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx40, align 4
  %add41 = add i32 %25, 19461
  %call = tail call i32 %21(ptr noundef %adev, i32 noundef %add41, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end49

cond.false42:                                     ; preds = %land.lhs.true27.cond.false42_crit_edge, %land.lhs.true22.cond.false42_crit_edge, %for.body.cond.false42_crit_edge
  %26 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx38, align 8
  %arrayidx46 = getelementptr i32, ptr %27, i32 1
  %28 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx46, align 4
  %add47 = add i32 %29, 19461
  %call48 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add47, i32 noundef 0) #15
  br label %cond.end49

cond.end49:                                       ; preds = %cond.false42, %cond.true32
  %cond = phi i32 [ %call, %cond.true32 ], [ %call48, %cond.false42 ]
  %and50 = and i32 %cond, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50)
  %tobool51.not = icmp eq i32 %and50, 0
  br i1 %tobool51.not, label %cond.end49.for.end_crit_edge, label %if.end

cond.end49.for.end_crit_edge:                     ; preds = %cond.end49
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.end:                                           ; preds = %cond.end49
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %30 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %30(i32 noundef 214748) #15
  %inc = add nuw i32 %i.075, 1
  %31 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp ult i32 %inc, %32
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %if.end.for.end_crit_edge, %cond.end49.for.end_crit_edge, %cond.end.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_unset_safe_mode(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19461
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef 1, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %arrayidx16 = getelementptr i32, ptr %11, i32 1
  %12 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx16, align 4
  %add17 = add i32 %13, 19461
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 1, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_rlc_init(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cs_data1 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 8
  %0 = ptrtoint ptr %cs_data1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @gfx9_cs_data, ptr %cs_data1, align 4
  %call = tail call i32 @amdgpu_gfx_rlc_init_csb(ptr noundef %adev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %if.end7, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end7:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 9
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 8
  %and = and i32 %2, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %if.end7.if.end16_crit_edge, label %if.then9

if.end7.if.end16_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end16

if.then9:                                         ; preds = %if.end7
  %cp_table_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 13
  %3 = ptrtoint ptr %cp_table_size to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 67584, ptr %cp_table_size, align 4
  %call12 = tail call i32 @amdgpu_gfx_rlc_init_cpt(ptr noundef %adev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.then9.if.end16_crit_edge, label %if.then9.cleanup_crit_edge

if.then9.cleanup_crit_edge:                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then9.if.end16_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end16

if.end16:                                         ; preds = %if.then9.if.end16_crit_edge, %if.end7.if.end16_crit_edge
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.408)
  switch i32 %5, label %if.end16.sw.epilog_crit_edge [
    i32 590338, label %if.end16.sw.bb_crit_edge
    i32 590080, label %if.end16.sw.bb_crit_edge253
    i32 590848, label %sw.bb18
  ]

if.end16.sw.bb_crit_edge253:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end16.sw.bb_crit_edge:                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end16.sw.epilog_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end16.sw.bb_crit_edge, %if.end16.sw.bb_crit_edge253
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %7 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %virt.i, align 8
  %and.i = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sw.bb.cond.false.i_crit_edge, label %land.lhs.true.i

sw.bb.cond.false.i_crit_edge:                     ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %sw.bb
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %9 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %10, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %10, i32 0, i32 12
  %11 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool6.not.i = icmp eq ptr %12, null
  br i1 %tobool6.not.i, label %land.lhs.true2.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true2.i.cond.false.i_crit_edge:          ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx12.i = getelementptr i32, ptr %14, i32 1
  %15 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx12.i, align 4
  %add.i = add i32 %16, 19647
  tail call void %12(ptr noundef %adev, i32 noundef %add.i, i32 noundef 127, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i

cond.false.i:                                     ; preds = %land.lhs.true2.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %sw.bb.cond.false.i_crit_edge
  %arrayidx14.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %17 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx14.i, align 8
  %arrayidx16.i = getelementptr i32, ptr %18, i32 1
  %19 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx16.i, align 4
  %add17.i = add i32 %20, 19647
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17.i, i32 noundef 127, i32 noundef 0) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %21 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %virt.i, align 8
  %and20.i = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br i1 %tobool21.not.i, label %cond.end.i.cond.false43.i_crit_edge, label %land.lhs.true22.i

cond.end.i.cond.false43.i_crit_edge:              ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i

land.lhs.true22.i:                                ; preds = %cond.end.i
  %funcs25.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %23 = ptrtoint ptr %funcs25.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %funcs25.i, align 4
  %tobool26.not.i = icmp eq ptr %24, null
  br i1 %tobool26.not.i, label %land.lhs.true22.i.cond.false43.i_crit_edge, label %land.lhs.true27.i

land.lhs.true22.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i

land.lhs.true27.i:                                ; preds = %land.lhs.true22.i
  %sriov_wreg31.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %24, i32 0, i32 12
  %25 = ptrtoint ptr %sriov_wreg31.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sriov_wreg31.i, align 4
  %tobool32.not.i = icmp eq ptr %26, null
  br i1 %tobool32.not.i, label %land.lhs.true27.i.cond.false43.i_crit_edge, label %cond.true33.i

land.lhs.true27.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i

cond.true33.i:                                    ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx39.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %27 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx39.i, align 8
  %arrayidx41.i = getelementptr i32, ptr %28, i32 1
  %29 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx41.i, align 4
  %add42.i = add i32 %30, 19640
  tail call void %26(ptr noundef %adev, i32 noundef %add42.i, i32 noundef 53716391, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end49.i

cond.false43.i:                                   ; preds = %land.lhs.true27.i.cond.false43.i_crit_edge, %land.lhs.true22.i.cond.false43.i_crit_edge, %cond.end.i.cond.false43.i_crit_edge
  %arrayidx45.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %31 = ptrtoint ptr %arrayidx45.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx45.i, align 8
  %arrayidx47.i = getelementptr i32, ptr %32, i32 1
  %33 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx47.i, align 4
  %add48.i = add i32 %34, 19640
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add48.i, i32 noundef 53716391, i32 noundef 0) #15
  br label %cond.end49.i

cond.end49.i:                                     ; preds = %cond.false43.i, %cond.true33.i
  %35 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %virt.i, align 8
  %and52.i = and i32 %36, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52.i)
  %tobool53.not.i = icmp eq i32 %and52.i, 0
  br i1 %tobool53.not.i, label %cond.end49.i.cond.false75.i_crit_edge, label %land.lhs.true54.i

cond.end49.i.cond.false75.i_crit_edge:            ; preds = %cond.end49.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i

land.lhs.true54.i:                                ; preds = %cond.end49.i
  %funcs57.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %37 = ptrtoint ptr %funcs57.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %funcs57.i, align 4
  %tobool58.not.i = icmp eq ptr %38, null
  br i1 %tobool58.not.i, label %land.lhs.true54.i.cond.false75.i_crit_edge, label %land.lhs.true59.i

land.lhs.true54.i.cond.false75.i_crit_edge:       ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i

land.lhs.true59.i:                                ; preds = %land.lhs.true54.i
  %sriov_wreg63.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %38, i32 0, i32 12
  %39 = ptrtoint ptr %sriov_wreg63.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sriov_wreg63.i, align 4
  %tobool64.not.i = icmp eq ptr %40, null
  br i1 %tobool64.not.i, label %land.lhs.true59.i.cond.false75.i_crit_edge, label %cond.true65.i

land.lhs.true59.i.cond.false75.i_crit_edge:       ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i

cond.true65.i:                                    ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx71.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %41 = ptrtoint ptr %arrayidx71.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx71.i, align 8
  %arrayidx73.i = getelementptr i32, ptr %42, i32 1
  %43 = ptrtoint ptr %arrayidx73.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx73.i, align 4
  %add74.i = add i32 %44, 19641
  tail call void %40(ptr noundef %adev, i32 noundef %add74.i, i32 noundef 119, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end81.i

cond.false75.i:                                   ; preds = %land.lhs.true59.i.cond.false75.i_crit_edge, %land.lhs.true54.i.cond.false75.i_crit_edge, %cond.end49.i.cond.false75.i_crit_edge
  %arrayidx77.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %45 = ptrtoint ptr %arrayidx77.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx77.i, align 8
  %arrayidx79.i = getelementptr i32, ptr %46, i32 1
  %47 = ptrtoint ptr %arrayidx79.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx79.i, align 4
  %add80.i = add i32 %48, 19641
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add80.i, i32 noundef 119, i32 noundef 0) #15
  br label %cond.end81.i

cond.end81.i:                                     ; preds = %cond.false75.i, %cond.true65.i
  %49 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %virt.i, align 8
  %and84.i = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84.i)
  %tobool85.not.i = icmp eq i32 %and84.i, 0
  br i1 %tobool85.not.i, label %cond.end81.i.cond.false107.i_crit_edge, label %land.lhs.true86.i

cond.end81.i.cond.false107.i_crit_edge:           ; preds = %cond.end81.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i

land.lhs.true86.i:                                ; preds = %cond.end81.i
  %funcs89.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %51 = ptrtoint ptr %funcs89.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %funcs89.i, align 4
  %tobool90.not.i = icmp eq ptr %52, null
  br i1 %tobool90.not.i, label %land.lhs.true86.i.cond.false107.i_crit_edge, label %land.lhs.true91.i

land.lhs.true86.i.cond.false107.i_crit_edge:      ; preds = %land.lhs.true86.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i

land.lhs.true91.i:                                ; preds = %land.lhs.true86.i
  %sriov_wreg95.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %52, i32 0, i32 12
  %53 = ptrtoint ptr %sriov_wreg95.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %sriov_wreg95.i, align 4
  %tobool96.not.i = icmp eq ptr %54, null
  br i1 %tobool96.not.i, label %land.lhs.true91.i.cond.false107.i_crit_edge, label %cond.true97.i

land.lhs.true91.i.cond.false107.i_crit_edge:      ; preds = %land.lhs.true91.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i

cond.true97.i:                                    ; preds = %land.lhs.true91.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx103.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %55 = ptrtoint ptr %arrayidx103.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx103.i, align 8
  %arrayidx105.i = getelementptr i32, ptr %56, i32 1
  %57 = ptrtoint ptr %arrayidx105.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx105.i, align 4
  %add106.i = add i32 %58, 19642
  tail call void %54(ptr noundef %adev, i32 noundef %add106.i, i32 noundef 49954864, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end113.i

cond.false107.i:                                  ; preds = %land.lhs.true91.i.cond.false107.i_crit_edge, %land.lhs.true86.i.cond.false107.i_crit_edge, %cond.end81.i.cond.false107.i_crit_edge
  %arrayidx109.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %59 = ptrtoint ptr %arrayidx109.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx109.i, align 8
  %arrayidx111.i = getelementptr i32, ptr %60, i32 1
  %61 = ptrtoint ptr %arrayidx111.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx111.i, align 4
  %add112.i = add i32 %62, 19642
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add112.i, i32 noundef 49954864, i32 noundef 0) #15
  br label %cond.end113.i

cond.end113.i:                                    ; preds = %cond.false107.i, %cond.true97.i
  %63 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %virt.i, align 8
  %and116.i = and i32 %64, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116.i)
  %tobool117.not.i = icmp eq i32 %and116.i, 0
  br i1 %tobool117.not.i, label %cond.end113.i.cond.false139.i_crit_edge, label %land.lhs.true118.i

cond.end113.i.cond.false139.i_crit_edge:          ; preds = %cond.end113.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i

land.lhs.true118.i:                               ; preds = %cond.end113.i
  %funcs121.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %65 = ptrtoint ptr %funcs121.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %funcs121.i, align 4
  %tobool122.not.i = icmp eq ptr %66, null
  br i1 %tobool122.not.i, label %land.lhs.true118.i.cond.false139.i_crit_edge, label %land.lhs.true123.i

land.lhs.true118.i.cond.false139.i_crit_edge:     ; preds = %land.lhs.true118.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i

land.lhs.true123.i:                               ; preds = %land.lhs.true118.i
  %sriov_wreg127.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %66, i32 0, i32 12
  %67 = ptrtoint ptr %sriov_wreg127.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %sriov_wreg127.i, align 4
  %tobool128.not.i = icmp eq ptr %68, null
  br i1 %tobool128.not.i, label %land.lhs.true123.i.cond.false139.i_crit_edge, label %cond.true129.i

land.lhs.true123.i.cond.false139.i_crit_edge:     ; preds = %land.lhs.true123.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i

cond.true129.i:                                   ; preds = %land.lhs.true123.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx135.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %69 = ptrtoint ptr %arrayidx135.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %arrayidx135.i, align 8
  %arrayidx137.i = getelementptr i32, ptr %70, i32 1
  %71 = ptrtoint ptr %arrayidx137.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx137.i, align 4
  %add138.i = add i32 %72, 19483
  tail call void %68(ptr noundef %adev, i32 noundef %add138.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end145.i

cond.false139.i:                                  ; preds = %land.lhs.true123.i.cond.false139.i_crit_edge, %land.lhs.true118.i.cond.false139.i_crit_edge, %cond.end113.i.cond.false139.i_crit_edge
  %arrayidx141.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %73 = ptrtoint ptr %arrayidx141.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx141.i, align 8
  %arrayidx143.i = getelementptr i32, ptr %74, i32 1
  %75 = ptrtoint ptr %arrayidx143.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx143.i, align 4
  %add144.i = add i32 %76, 19483
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add144.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end145.i

cond.end145.i:                                    ; preds = %cond.false139.i, %cond.true129.i
  %77 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %virt.i, align 8
  %and148.i = and i32 %78, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148.i)
  %tobool149.not.i = icmp eq i32 %and148.i, 0
  br i1 %tobool149.not.i, label %cond.end145.i.cond.false171.i_crit_edge, label %land.lhs.true150.i

cond.end145.i.cond.false171.i_crit_edge:          ; preds = %cond.end145.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i

land.lhs.true150.i:                               ; preds = %cond.end145.i
  %funcs153.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %79 = ptrtoint ptr %funcs153.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %funcs153.i, align 4
  %tobool154.not.i = icmp eq ptr %80, null
  br i1 %tobool154.not.i, label %land.lhs.true150.i.cond.false171.i_crit_edge, label %land.lhs.true155.i

land.lhs.true150.i.cond.false171.i_crit_edge:     ; preds = %land.lhs.true150.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i

land.lhs.true155.i:                               ; preds = %land.lhs.true150.i
  %sriov_wreg159.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %80, i32 0, i32 12
  %81 = ptrtoint ptr %sriov_wreg159.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %sriov_wreg159.i, align 4
  %tobool160.not.i = icmp eq ptr %82, null
  br i1 %tobool160.not.i, label %land.lhs.true155.i.cond.false171.i_crit_edge, label %cond.true161.i

land.lhs.true155.i.cond.false171.i_crit_edge:     ; preds = %land.lhs.true155.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i

cond.true161.i:                                   ; preds = %land.lhs.true155.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx167.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %83 = ptrtoint ptr %arrayidx167.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %arrayidx167.i, align 8
  %arrayidx169.i = getelementptr i32, ptr %84, i32 1
  %85 = ptrtoint ptr %arrayidx169.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx169.i, align 4
  %add170.i = add i32 %86, 19474
  tail call void %82(ptr noundef %adev, i32 noundef %add170.i, i32 noundef 1280, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end177.i

cond.false171.i:                                  ; preds = %land.lhs.true155.i.cond.false171.i_crit_edge, %land.lhs.true150.i.cond.false171.i_crit_edge, %cond.end145.i.cond.false171.i_crit_edge
  %arrayidx173.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %87 = ptrtoint ptr %arrayidx173.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %arrayidx173.i, align 8
  %arrayidx175.i = getelementptr i32, ptr %88, i32 1
  %89 = ptrtoint ptr %arrayidx175.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %arrayidx175.i, align 4
  %add176.i = add i32 %90, 19474
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add176.i, i32 noundef 1280, i32 noundef 0) #15
  br label %cond.end177.i

cond.end177.i:                                    ; preds = %cond.false171.i, %cond.true161.i
  %grbm_idx_mutex.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i, i32 noundef 0) #15
  %91 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %virt.i, align 8
  %and21.i.i = and i32 %92, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i)
  %tobool.not.i.i = icmp eq i32 %and21.i.i, 0
  br i1 %tobool.not.i.i, label %cond.end177.i.cond.false.i.i_crit_edge, label %land.lhs.true.i.i

cond.end177.i.cond.false.i.i_crit_edge:           ; preds = %cond.end177.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true.i.i:                                ; preds = %cond.end177.i
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %93 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %funcs.i.i, align 4
  %tobool22.not.i.i = icmp eq ptr %94, null
  br i1 %tobool22.not.i.i, label %land.lhs.true.i.i.cond.false.i.i_crit_edge, label %land.lhs.true23.i.i

land.lhs.true.i.i.cond.false.i.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true23.i.i:                              ; preds = %land.lhs.true.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %94, i32 0, i32 12
  %95 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool27.not.i.i = icmp eq ptr %96, null
  br i1 %tobool27.not.i.i, label %land.lhs.true23.i.i.cond.false.i.i_crit_edge, label %cond.true.i.i

land.lhs.true23.i.i.cond.false.i.i_crit_edge:     ; preds = %land.lhs.true23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %97 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx33.i.i = getelementptr i32, ptr %98, i32 1
  %99 = ptrtoint ptr %arrayidx33.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %arrayidx33.i.i, align 4
  %add.i.i = add i32 %100, 8704
  tail call void %96(ptr noundef %adev, i32 noundef %add.i.i, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit.i

cond.false.i.i:                                   ; preds = %land.lhs.true23.i.i.cond.false.i.i_crit_edge, %land.lhs.true.i.i.cond.false.i.i_crit_edge, %cond.end177.i.cond.false.i.i_crit_edge
  %arrayidx35.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %101 = ptrtoint ptr %arrayidx35.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx35.i.i, align 8
  %arrayidx37.i.i = getelementptr i32, ptr %102, i32 1
  %103 = ptrtoint ptr %arrayidx37.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %arrayidx37.i.i, align 4
  %add38.i.i = add i32 %104, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i.i, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit.i

gfx_v9_0_select_se_sh.exit.i:                     ; preds = %cond.false.i.i, %cond.true.i.i
  %105 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %virt.i, align 8
  %and180.i = and i32 %106, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and180.i)
  %tobool181.not.i = icmp eq i32 %and180.i, 0
  br i1 %tobool181.not.i, label %gfx_v9_0_select_se_sh.exit.i.cond.false203.i_crit_edge, label %land.lhs.true182.i

gfx_v9_0_select_se_sh.exit.i.cond.false203.i_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i

land.lhs.true182.i:                               ; preds = %gfx_v9_0_select_se_sh.exit.i
  %funcs185.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %107 = ptrtoint ptr %funcs185.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %funcs185.i, align 4
  %tobool186.not.i = icmp eq ptr %108, null
  br i1 %tobool186.not.i, label %land.lhs.true182.i.cond.false203.i_crit_edge, label %land.lhs.true187.i

land.lhs.true182.i.cond.false203.i_crit_edge:     ; preds = %land.lhs.true182.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i

land.lhs.true187.i:                               ; preds = %land.lhs.true182.i
  %sriov_wreg191.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %108, i32 0, i32 12
  %109 = ptrtoint ptr %sriov_wreg191.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %sriov_wreg191.i, align 4
  %tobool192.not.i = icmp eq ptr %110, null
  br i1 %tobool192.not.i, label %land.lhs.true187.i.cond.false203.i_crit_edge, label %cond.true193.i

land.lhs.true187.i.cond.false203.i_crit_edge:     ; preds = %land.lhs.true187.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i

cond.true193.i:                                   ; preds = %land.lhs.true187.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx199.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %111 = ptrtoint ptr %arrayidx199.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %arrayidx199.i, align 8
  %arrayidx201.i = getelementptr i32, ptr %112, i32 1
  %113 = ptrtoint ptr %arrayidx201.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %arrayidx201.i, align 4
  %add202.i = add i32 %114, 19535
  tail call void %110(ptr noundef %adev, i32 noundef %add202.i, i32 noundef -1, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end209.i

cond.false203.i:                                  ; preds = %land.lhs.true187.i.cond.false203.i_crit_edge, %land.lhs.true182.i.cond.false203.i_crit_edge, %gfx_v9_0_select_se_sh.exit.i.cond.false203.i_crit_edge
  %arrayidx205.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %115 = ptrtoint ptr %arrayidx205.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %arrayidx205.i, align 8
  %arrayidx207.i = getelementptr i32, ptr %116, i32 1
  %117 = ptrtoint ptr %arrayidx207.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx207.i, align 4
  %add208.i = add i32 %118, 19535
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add208.i, i32 noundef -1, i32 noundef 0) #15
  br label %cond.end209.i

cond.end209.i:                                    ; preds = %cond.false203.i, %cond.true193.i
  %119 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %virt.i, align 8
  %and217.i = and i32 %120, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and217.i)
  %tobool218.not.i = icmp eq i32 %and217.i, 0
  br i1 %tobool218.not.i, label %cond.end209.i.cond.false240.i_crit_edge, label %land.lhs.true219.i

cond.end209.i.cond.false240.i_crit_edge:          ; preds = %cond.end209.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false240.i

land.lhs.true219.i:                               ; preds = %cond.end209.i
  %funcs222.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %121 = ptrtoint ptr %funcs222.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %funcs222.i, align 4
  %tobool223.not.i = icmp eq ptr %122, null
  br i1 %tobool223.not.i, label %land.lhs.true219.i.cond.false240.i_crit_edge, label %land.lhs.true224.i

land.lhs.true219.i.cond.false240.i_crit_edge:     ; preds = %land.lhs.true219.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false240.i

land.lhs.true224.i:                               ; preds = %land.lhs.true219.i
  %sriov_wreg228.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %122, i32 0, i32 12
  %123 = ptrtoint ptr %sriov_wreg228.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %sriov_wreg228.i, align 4
  %tobool229.not.i = icmp eq ptr %124, null
  br i1 %tobool229.not.i, label %land.lhs.true224.i.cond.false240.i_crit_edge, label %cond.true230.i

land.lhs.true224.i.cond.false240.i_crit_edge:     ; preds = %land.lhs.true224.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false240.i

cond.true230.i:                                   ; preds = %land.lhs.true224.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx236.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %125 = ptrtoint ptr %arrayidx236.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %arrayidx236.i, align 8
  %arrayidx238.i = getelementptr i32, ptr %126, i32 1
  %127 = ptrtoint ptr %arrayidx238.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %arrayidx238.i, align 4
  %add239.i = add i32 %128, 19537
  tail call void %124(ptr noundef %adev, i32 noundef %add239.i, i32 noundef 54464518, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end246.i

cond.false240.i:                                  ; preds = %land.lhs.true224.i.cond.false240.i_crit_edge, %land.lhs.true219.i.cond.false240.i_crit_edge, %cond.end209.i.cond.false240.i_crit_edge
  %arrayidx242.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %129 = ptrtoint ptr %arrayidx242.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %arrayidx242.i, align 8
  %arrayidx244.i = getelementptr i32, ptr %130, i32 1
  %131 = ptrtoint ptr %arrayidx244.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %arrayidx244.i, align 4
  %add245.i = add i32 %132, 19537
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add245.i, i32 noundef 54464518, i32 noundef 0) #15
  br label %cond.end246.i

cond.end246.i:                                    ; preds = %cond.false240.i, %cond.true230.i
  %133 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %virt.i, align 8
  %and249.i = and i32 %134, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and249.i)
  %tobool250.not.i = icmp eq i32 %and249.i, 0
  br i1 %tobool250.not.i, label %cond.end246.i.cond.false271.i_crit_edge, label %land.lhs.true251.i

cond.end246.i.cond.false271.i_crit_edge:          ; preds = %cond.end246.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false271.i

land.lhs.true251.i:                               ; preds = %cond.end246.i
  %funcs254.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %135 = ptrtoint ptr %funcs254.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %funcs254.i, align 4
  %tobool255.not.i = icmp eq ptr %136, null
  br i1 %tobool255.not.i, label %land.lhs.true251.i.cond.false271.i_crit_edge, label %land.lhs.true256.i

land.lhs.true251.i.cond.false271.i_crit_edge:     ; preds = %land.lhs.true251.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false271.i

land.lhs.true256.i:                               ; preds = %land.lhs.true251.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %136, i32 0, i32 13
  %137 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool260.not.i = icmp eq ptr %138, null
  br i1 %tobool260.not.i, label %land.lhs.true256.i.cond.false271.i_crit_edge, label %cond.true261.i

land.lhs.true256.i.cond.false271.i_crit_edge:     ; preds = %land.lhs.true256.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false271.i

cond.true261.i:                                   ; preds = %land.lhs.true256.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx267.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %139 = ptrtoint ptr %arrayidx267.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %arrayidx267.i, align 8
  %arrayidx269.i = getelementptr i32, ptr %140, i32 1
  %141 = ptrtoint ptr %arrayidx269.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %arrayidx269.i, align 4
  %add270.i = add i32 %142, 19562
  %call.i = tail call i32 %138(ptr noundef %adev, i32 noundef %add270.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end278.i

cond.false271.i:                                  ; preds = %land.lhs.true256.i.cond.false271.i_crit_edge, %land.lhs.true251.i.cond.false271.i_crit_edge, %cond.end246.i.cond.false271.i_crit_edge
  %arrayidx273.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %143 = ptrtoint ptr %arrayidx273.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %arrayidx273.i, align 8
  %arrayidx275.i = getelementptr i32, ptr %144, i32 1
  %145 = ptrtoint ptr %arrayidx275.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %arrayidx275.i, align 4
  %add276.i = add i32 %146, 19562
  %call277.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add276.i, i32 noundef 0) #15
  br label %cond.end278.i

cond.end278.i:                                    ; preds = %cond.false271.i, %cond.true261.i
  %cond.i = phi i32 [ %call.i, %cond.true261.i ], [ %call277.i, %cond.false271.i ]
  %and279.i = and i32 %cond.i, 65535
  %or280.i = or i32 %and279.i, 12582912
  %147 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %virt.i, align 8
  %and283.i = and i32 %148, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and283.i)
  %tobool284.not.i = icmp eq i32 %and283.i, 0
  br i1 %tobool284.not.i, label %cond.end278.i.cond.false306.i_crit_edge, label %land.lhs.true285.i

cond.end278.i.cond.false306.i_crit_edge:          ; preds = %cond.end278.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false306.i

land.lhs.true285.i:                               ; preds = %cond.end278.i
  %funcs288.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %149 = ptrtoint ptr %funcs288.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %funcs288.i, align 4
  %tobool289.not.i = icmp eq ptr %150, null
  br i1 %tobool289.not.i, label %land.lhs.true285.i.cond.false306.i_crit_edge, label %land.lhs.true290.i

land.lhs.true285.i.cond.false306.i_crit_edge:     ; preds = %land.lhs.true285.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false306.i

land.lhs.true290.i:                               ; preds = %land.lhs.true285.i
  %sriov_wreg294.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %150, i32 0, i32 12
  %151 = ptrtoint ptr %sriov_wreg294.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %sriov_wreg294.i, align 4
  %tobool295.not.i = icmp eq ptr %152, null
  br i1 %tobool295.not.i, label %land.lhs.true290.i.cond.false306.i_crit_edge, label %cond.true296.i

land.lhs.true290.i.cond.false306.i_crit_edge:     ; preds = %land.lhs.true290.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false306.i

cond.true296.i:                                   ; preds = %land.lhs.true290.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx302.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %153 = ptrtoint ptr %arrayidx302.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %arrayidx302.i, align 8
  %arrayidx304.i = getelementptr i32, ptr %154, i32 1
  %155 = ptrtoint ptr %arrayidx304.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %arrayidx304.i, align 4
  %add305.i = add i32 %156, 19562
  tail call void %152(ptr noundef %adev, i32 noundef %add305.i, i32 noundef %or280.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end312.i

cond.false306.i:                                  ; preds = %land.lhs.true290.i.cond.false306.i_crit_edge, %land.lhs.true285.i.cond.false306.i_crit_edge, %cond.end278.i.cond.false306.i_crit_edge
  %arrayidx308.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %157 = ptrtoint ptr %arrayidx308.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %arrayidx308.i, align 8
  %arrayidx310.i = getelementptr i32, ptr %158, i32 1
  %159 = ptrtoint ptr %arrayidx310.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %arrayidx310.i, align 4
  %add311.i = add i32 %160, 19562
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add311.i, i32 noundef %or280.i, i32 noundef 0) #15
  br label %cond.end312.i

cond.end312.i:                                    ; preds = %cond.false306.i, %cond.true296.i
  %161 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %virt.i, align 8
  %and321.i = and i32 %162, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and321.i)
  %tobool322.not.i = icmp eq i32 %and321.i, 0
  br i1 %tobool322.not.i, label %cond.end312.i.cond.false344.i_crit_edge, label %land.lhs.true323.i

cond.end312.i.cond.false344.i_crit_edge:          ; preds = %cond.end312.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false344.i

land.lhs.true323.i:                               ; preds = %cond.end312.i
  %funcs326.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %163 = ptrtoint ptr %funcs326.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %funcs326.i, align 4
  %tobool327.not.i = icmp eq ptr %164, null
  br i1 %tobool327.not.i, label %land.lhs.true323.i.cond.false344.i_crit_edge, label %land.lhs.true328.i

land.lhs.true323.i.cond.false344.i_crit_edge:     ; preds = %land.lhs.true323.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false344.i

land.lhs.true328.i:                               ; preds = %land.lhs.true323.i
  %sriov_wreg332.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %164, i32 0, i32 12
  %165 = ptrtoint ptr %sriov_wreg332.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %sriov_wreg332.i, align 4
  %tobool333.not.i = icmp eq ptr %166, null
  br i1 %tobool333.not.i, label %land.lhs.true328.i.cond.false344.i_crit_edge, label %cond.true334.i

land.lhs.true328.i.cond.false344.i_crit_edge:     ; preds = %land.lhs.true328.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false344.i

cond.true334.i:                                   ; preds = %land.lhs.true328.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx340.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %167 = ptrtoint ptr %arrayidx340.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %arrayidx340.i, align 8
  %arrayidx342.i = getelementptr i32, ptr %168, i32 1
  %169 = ptrtoint ptr %arrayidx342.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %arrayidx342.i, align 4
  %add343.i = add i32 %170, 19481
  tail call void %166(ptr noundef %adev, i32 noundef %add343.i, i32 noundef -2147483500, i32 noundef 0, i32 noundef 1) #15
  br label %sw.epilog.sink.split

cond.false344.i:                                  ; preds = %land.lhs.true328.i.cond.false344.i_crit_edge, %land.lhs.true323.i.cond.false344.i_crit_edge, %cond.end312.i.cond.false344.i_crit_edge
  %arrayidx346.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %171 = ptrtoint ptr %arrayidx346.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %arrayidx346.i, align 8
  %arrayidx348.i = getelementptr i32, ptr %172, i32 1
  %173 = ptrtoint ptr %arrayidx348.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %arrayidx348.i, align 4
  %add349.i = add i32 %174, 19481
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add349.i, i32 noundef -2147483500, i32 noundef 0) #15
  br label %sw.epilog.sink.split

sw.bb18:                                          ; preds = %if.end16
  %virt.i43 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %175 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %virt.i43, align 8
  %and.i44 = and i32 %176, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i44)
  %tobool.not.i45 = icmp eq i32 %and.i44, 0
  br i1 %tobool.not.i45, label %sw.bb18.cond.false.i59_crit_edge, label %land.lhs.true.i48

sw.bb18.cond.false.i59_crit_edge:                 ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i59

land.lhs.true.i48:                                ; preds = %sw.bb18
  %funcs.i46 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %177 = ptrtoint ptr %funcs.i46 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %funcs.i46, align 4
  %tobool1.not.i47 = icmp eq ptr %178, null
  br i1 %tobool1.not.i47, label %land.lhs.true.i48.cond.false.i59_crit_edge, label %land.lhs.true2.i51

land.lhs.true.i48.cond.false.i59_crit_edge:       ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i59

land.lhs.true2.i51:                               ; preds = %land.lhs.true.i48
  %sriov_wreg.i49 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %178, i32 0, i32 12
  %179 = ptrtoint ptr %sriov_wreg.i49 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %sriov_wreg.i49, align 4
  %tobool6.not.i50 = icmp eq ptr %180, null
  br i1 %tobool6.not.i50, label %land.lhs.true2.i51.cond.false.i59_crit_edge, label %cond.true.i55

land.lhs.true2.i51.cond.false.i59_crit_edge:      ; preds = %land.lhs.true2.i51
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i59

cond.true.i55:                                    ; preds = %land.lhs.true2.i51
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i52 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %181 = ptrtoint ptr %arrayidx.i52 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %arrayidx.i52, align 8
  %arrayidx12.i53 = getelementptr i32, ptr %182, i32 1
  %183 = ptrtoint ptr %arrayidx12.i53 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %arrayidx12.i53, align 4
  %add.i54 = add i32 %184, 19647
  tail call void %180(ptr noundef %adev, i32 noundef %add.i54, i32 noundef 127, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i62

cond.false.i59:                                   ; preds = %land.lhs.true2.i51.cond.false.i59_crit_edge, %land.lhs.true.i48.cond.false.i59_crit_edge, %sw.bb18.cond.false.i59_crit_edge
  %arrayidx14.i56 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %185 = ptrtoint ptr %arrayidx14.i56 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %arrayidx14.i56, align 8
  %arrayidx16.i57 = getelementptr i32, ptr %186, i32 1
  %187 = ptrtoint ptr %arrayidx16.i57 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %arrayidx16.i57, align 4
  %add17.i58 = add i32 %188, 19647
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17.i58, i32 noundef 127, i32 noundef 0) #15
  br label %cond.end.i62

cond.end.i62:                                     ; preds = %cond.false.i59, %cond.true.i55
  %189 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %virt.i43, align 8
  %and20.i60 = and i32 %190, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i60)
  %tobool21.not.i61 = icmp eq i32 %and20.i60, 0
  br i1 %tobool21.not.i61, label %cond.end.i62.cond.false43.i76_crit_edge, label %land.lhs.true22.i65

cond.end.i62.cond.false43.i76_crit_edge:          ; preds = %cond.end.i62
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i76

land.lhs.true22.i65:                              ; preds = %cond.end.i62
  %funcs25.i63 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %191 = ptrtoint ptr %funcs25.i63 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %funcs25.i63, align 4
  %tobool26.not.i64 = icmp eq ptr %192, null
  br i1 %tobool26.not.i64, label %land.lhs.true22.i65.cond.false43.i76_crit_edge, label %land.lhs.true27.i68

land.lhs.true22.i65.cond.false43.i76_crit_edge:   ; preds = %land.lhs.true22.i65
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i76

land.lhs.true27.i68:                              ; preds = %land.lhs.true22.i65
  %sriov_wreg31.i66 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %192, i32 0, i32 12
  %193 = ptrtoint ptr %sriov_wreg31.i66 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %sriov_wreg31.i66, align 4
  %tobool32.not.i67 = icmp eq ptr %194, null
  br i1 %tobool32.not.i67, label %land.lhs.true27.i68.cond.false43.i76_crit_edge, label %cond.true33.i72

land.lhs.true27.i68.cond.false43.i76_crit_edge:   ; preds = %land.lhs.true27.i68
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i76

cond.true33.i72:                                  ; preds = %land.lhs.true27.i68
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx39.i69 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %195 = ptrtoint ptr %arrayidx39.i69 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %arrayidx39.i69, align 8
  %arrayidx41.i70 = getelementptr i32, ptr %196, i32 1
  %197 = ptrtoint ptr %arrayidx41.i70 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %arrayidx41.i70, align 4
  %add42.i71 = add i32 %198, 19640
  tail call void %194(ptr noundef %adev, i32 noundef %add42.i71, i32 noundef 53709048, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end49.i79

cond.false43.i76:                                 ; preds = %land.lhs.true27.i68.cond.false43.i76_crit_edge, %land.lhs.true22.i65.cond.false43.i76_crit_edge, %cond.end.i62.cond.false43.i76_crit_edge
  %arrayidx45.i73 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %199 = ptrtoint ptr %arrayidx45.i73 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %arrayidx45.i73, align 8
  %arrayidx47.i74 = getelementptr i32, ptr %200, i32 1
  %201 = ptrtoint ptr %arrayidx47.i74 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %arrayidx47.i74, align 4
  %add48.i75 = add i32 %202, 19640
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add48.i75, i32 noundef 53709048, i32 noundef 0) #15
  br label %cond.end49.i79

cond.end49.i79:                                   ; preds = %cond.false43.i76, %cond.true33.i72
  %203 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %virt.i43, align 8
  %and52.i77 = and i32 %204, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52.i77)
  %tobool53.not.i78 = icmp eq i32 %and52.i77, 0
  br i1 %tobool53.not.i78, label %cond.end49.i79.cond.false75.i93_crit_edge, label %land.lhs.true54.i82

cond.end49.i79.cond.false75.i93_crit_edge:        ; preds = %cond.end49.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i93

land.lhs.true54.i82:                              ; preds = %cond.end49.i79
  %funcs57.i80 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %205 = ptrtoint ptr %funcs57.i80 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %funcs57.i80, align 4
  %tobool58.not.i81 = icmp eq ptr %206, null
  br i1 %tobool58.not.i81, label %land.lhs.true54.i82.cond.false75.i93_crit_edge, label %land.lhs.true59.i85

land.lhs.true54.i82.cond.false75.i93_crit_edge:   ; preds = %land.lhs.true54.i82
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i93

land.lhs.true59.i85:                              ; preds = %land.lhs.true54.i82
  %sriov_wreg63.i83 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %206, i32 0, i32 12
  %207 = ptrtoint ptr %sriov_wreg63.i83 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %sriov_wreg63.i83, align 4
  %tobool64.not.i84 = icmp eq ptr %208, null
  br i1 %tobool64.not.i84, label %land.lhs.true59.i85.cond.false75.i93_crit_edge, label %cond.true65.i89

land.lhs.true59.i85.cond.false75.i93_crit_edge:   ; preds = %land.lhs.true59.i85
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i93

cond.true65.i89:                                  ; preds = %land.lhs.true59.i85
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx71.i86 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %209 = ptrtoint ptr %arrayidx71.i86 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %arrayidx71.i86, align 8
  %arrayidx73.i87 = getelementptr i32, ptr %210, i32 1
  %211 = ptrtoint ptr %arrayidx73.i87 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %arrayidx73.i87, align 4
  %add74.i88 = add i32 %212, 19641
  tail call void %208(ptr noundef %adev, i32 noundef %add74.i88, i32 noundef 119, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end81.i96

cond.false75.i93:                                 ; preds = %land.lhs.true59.i85.cond.false75.i93_crit_edge, %land.lhs.true54.i82.cond.false75.i93_crit_edge, %cond.end49.i79.cond.false75.i93_crit_edge
  %arrayidx77.i90 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %213 = ptrtoint ptr %arrayidx77.i90 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %arrayidx77.i90, align 8
  %arrayidx79.i91 = getelementptr i32, ptr %214, i32 1
  %215 = ptrtoint ptr %arrayidx79.i91 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %arrayidx79.i91, align 4
  %add80.i92 = add i32 %216, 19641
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add80.i92, i32 noundef 119, i32 noundef 0) #15
  br label %cond.end81.i96

cond.end81.i96:                                   ; preds = %cond.false75.i93, %cond.true65.i89
  %217 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %virt.i43, align 8
  %and84.i94 = and i32 %218, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84.i94)
  %tobool85.not.i95 = icmp eq i32 %and84.i94, 0
  br i1 %tobool85.not.i95, label %cond.end81.i96.cond.false107.i110_crit_edge, label %land.lhs.true86.i99

cond.end81.i96.cond.false107.i110_crit_edge:      ; preds = %cond.end81.i96
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i110

land.lhs.true86.i99:                              ; preds = %cond.end81.i96
  %funcs89.i97 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %219 = ptrtoint ptr %funcs89.i97 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %funcs89.i97, align 4
  %tobool90.not.i98 = icmp eq ptr %220, null
  br i1 %tobool90.not.i98, label %land.lhs.true86.i99.cond.false107.i110_crit_edge, label %land.lhs.true91.i102

land.lhs.true86.i99.cond.false107.i110_crit_edge: ; preds = %land.lhs.true86.i99
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i110

land.lhs.true91.i102:                             ; preds = %land.lhs.true86.i99
  %sriov_wreg95.i100 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %220, i32 0, i32 12
  %221 = ptrtoint ptr %sriov_wreg95.i100 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %sriov_wreg95.i100, align 4
  %tobool96.not.i101 = icmp eq ptr %222, null
  br i1 %tobool96.not.i101, label %land.lhs.true91.i102.cond.false107.i110_crit_edge, label %cond.true97.i106

land.lhs.true91.i102.cond.false107.i110_crit_edge: ; preds = %land.lhs.true91.i102
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i110

cond.true97.i106:                                 ; preds = %land.lhs.true91.i102
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx103.i103 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %223 = ptrtoint ptr %arrayidx103.i103 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %arrayidx103.i103, align 8
  %arrayidx105.i104 = getelementptr i32, ptr %224, i32 1
  %225 = ptrtoint ptr %arrayidx105.i104 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %arrayidx105.i104, align 4
  %add106.i105 = add i32 %226, 19642
  tail call void %222(ptr noundef %adev, i32 noundef %add106.i105, i32 noundef 49948432, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end113.i113

cond.false107.i110:                               ; preds = %land.lhs.true91.i102.cond.false107.i110_crit_edge, %land.lhs.true86.i99.cond.false107.i110_crit_edge, %cond.end81.i96.cond.false107.i110_crit_edge
  %arrayidx109.i107 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %227 = ptrtoint ptr %arrayidx109.i107 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %arrayidx109.i107, align 8
  %arrayidx111.i108 = getelementptr i32, ptr %228, i32 1
  %229 = ptrtoint ptr %arrayidx111.i108 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %arrayidx111.i108, align 4
  %add112.i109 = add i32 %230, 19642
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add112.i109, i32 noundef 49948432, i32 noundef 0) #15
  br label %cond.end113.i113

cond.end113.i113:                                 ; preds = %cond.false107.i110, %cond.true97.i106
  %231 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %virt.i43, align 8
  %and116.i111 = and i32 %232, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116.i111)
  %tobool117.not.i112 = icmp eq i32 %and116.i111, 0
  br i1 %tobool117.not.i112, label %cond.end113.i113.cond.false139.i127_crit_edge, label %land.lhs.true118.i116

cond.end113.i113.cond.false139.i127_crit_edge:    ; preds = %cond.end113.i113
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i127

land.lhs.true118.i116:                            ; preds = %cond.end113.i113
  %funcs121.i114 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %233 = ptrtoint ptr %funcs121.i114 to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %funcs121.i114, align 4
  %tobool122.not.i115 = icmp eq ptr %234, null
  br i1 %tobool122.not.i115, label %land.lhs.true118.i116.cond.false139.i127_crit_edge, label %land.lhs.true123.i119

land.lhs.true118.i116.cond.false139.i127_crit_edge: ; preds = %land.lhs.true118.i116
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i127

land.lhs.true123.i119:                            ; preds = %land.lhs.true118.i116
  %sriov_wreg127.i117 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %234, i32 0, i32 12
  %235 = ptrtoint ptr %sriov_wreg127.i117 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %sriov_wreg127.i117, align 4
  %tobool128.not.i118 = icmp eq ptr %236, null
  br i1 %tobool128.not.i118, label %land.lhs.true123.i119.cond.false139.i127_crit_edge, label %cond.true129.i123

land.lhs.true123.i119.cond.false139.i127_crit_edge: ; preds = %land.lhs.true123.i119
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i127

cond.true129.i123:                                ; preds = %land.lhs.true123.i119
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx135.i120 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %237 = ptrtoint ptr %arrayidx135.i120 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %arrayidx135.i120, align 8
  %arrayidx137.i121 = getelementptr i32, ptr %238, i32 1
  %239 = ptrtoint ptr %arrayidx137.i121 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %arrayidx137.i121, align 4
  %add138.i122 = add i32 %240, 19483
  tail call void %236(ptr noundef %adev, i32 noundef %add138.i122, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end145.i130

cond.false139.i127:                               ; preds = %land.lhs.true123.i119.cond.false139.i127_crit_edge, %land.lhs.true118.i116.cond.false139.i127_crit_edge, %cond.end113.i113.cond.false139.i127_crit_edge
  %arrayidx141.i124 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %241 = ptrtoint ptr %arrayidx141.i124 to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %arrayidx141.i124, align 8
  %arrayidx143.i125 = getelementptr i32, ptr %242, i32 1
  %243 = ptrtoint ptr %arrayidx143.i125 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %arrayidx143.i125, align 4
  %add144.i126 = add i32 %244, 19483
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add144.i126, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end145.i130

cond.end145.i130:                                 ; preds = %cond.false139.i127, %cond.true129.i123
  %245 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %virt.i43, align 8
  %and148.i128 = and i32 %246, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148.i128)
  %tobool149.not.i129 = icmp eq i32 %and148.i128, 0
  br i1 %tobool149.not.i129, label %cond.end145.i130.cond.false171.i144_crit_edge, label %land.lhs.true150.i133

cond.end145.i130.cond.false171.i144_crit_edge:    ; preds = %cond.end145.i130
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i144

land.lhs.true150.i133:                            ; preds = %cond.end145.i130
  %funcs153.i131 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %247 = ptrtoint ptr %funcs153.i131 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %funcs153.i131, align 4
  %tobool154.not.i132 = icmp eq ptr %248, null
  br i1 %tobool154.not.i132, label %land.lhs.true150.i133.cond.false171.i144_crit_edge, label %land.lhs.true155.i136

land.lhs.true150.i133.cond.false171.i144_crit_edge: ; preds = %land.lhs.true150.i133
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i144

land.lhs.true155.i136:                            ; preds = %land.lhs.true150.i133
  %sriov_wreg159.i134 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %248, i32 0, i32 12
  %249 = ptrtoint ptr %sriov_wreg159.i134 to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %sriov_wreg159.i134, align 4
  %tobool160.not.i135 = icmp eq ptr %250, null
  br i1 %tobool160.not.i135, label %land.lhs.true155.i136.cond.false171.i144_crit_edge, label %cond.true161.i140

land.lhs.true155.i136.cond.false171.i144_crit_edge: ; preds = %land.lhs.true155.i136
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i144

cond.true161.i140:                                ; preds = %land.lhs.true155.i136
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx167.i137 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %251 = ptrtoint ptr %arrayidx167.i137 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %arrayidx167.i137, align 8
  %arrayidx169.i138 = getelementptr i32, ptr %252, i32 1
  %253 = ptrtoint ptr %arrayidx169.i138 to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %arrayidx169.i138, align 4
  %add170.i139 = add i32 %254, 19474
  tail call void %250(ptr noundef %adev, i32 noundef %add170.i139, i32 noundef 2048, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end177.i148

cond.false171.i144:                               ; preds = %land.lhs.true155.i136.cond.false171.i144_crit_edge, %land.lhs.true150.i133.cond.false171.i144_crit_edge, %cond.end145.i130.cond.false171.i144_crit_edge
  %arrayidx173.i141 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %255 = ptrtoint ptr %arrayidx173.i141 to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %arrayidx173.i141, align 8
  %arrayidx175.i142 = getelementptr i32, ptr %256, i32 1
  %257 = ptrtoint ptr %arrayidx175.i142 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %arrayidx175.i142, align 4
  %add176.i143 = add i32 %258, 19474
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add176.i143, i32 noundef 2048, i32 noundef 0) #15
  br label %cond.end177.i148

cond.end177.i148:                                 ; preds = %cond.false171.i144, %cond.true161.i140
  %grbm_idx_mutex.i145 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i145, i32 noundef 0) #15
  %259 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %virt.i43, align 8
  %and21.i.i146 = and i32 %260, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i146)
  %tobool.not.i.i147 = icmp eq i32 %and21.i.i146, 0
  br i1 %tobool.not.i.i147, label %cond.end177.i148.cond.false.i.i162_crit_edge, label %land.lhs.true.i.i151

cond.end177.i148.cond.false.i.i162_crit_edge:     ; preds = %cond.end177.i148
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i162

land.lhs.true.i.i151:                             ; preds = %cond.end177.i148
  %funcs.i.i149 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %261 = ptrtoint ptr %funcs.i.i149 to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %funcs.i.i149, align 4
  %tobool22.not.i.i150 = icmp eq ptr %262, null
  br i1 %tobool22.not.i.i150, label %land.lhs.true.i.i151.cond.false.i.i162_crit_edge, label %land.lhs.true23.i.i154

land.lhs.true.i.i151.cond.false.i.i162_crit_edge: ; preds = %land.lhs.true.i.i151
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i162

land.lhs.true23.i.i154:                           ; preds = %land.lhs.true.i.i151
  %sriov_wreg.i.i152 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %262, i32 0, i32 12
  %263 = ptrtoint ptr %sriov_wreg.i.i152 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %sriov_wreg.i.i152, align 4
  %tobool27.not.i.i153 = icmp eq ptr %264, null
  br i1 %tobool27.not.i.i153, label %land.lhs.true23.i.i154.cond.false.i.i162_crit_edge, label %cond.true.i.i158

land.lhs.true23.i.i154.cond.false.i.i162_crit_edge: ; preds = %land.lhs.true23.i.i154
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i162

cond.true.i.i158:                                 ; preds = %land.lhs.true23.i.i154
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i.i155 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %265 = ptrtoint ptr %arrayidx.i.i155 to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %arrayidx.i.i155, align 8
  %arrayidx33.i.i156 = getelementptr i32, ptr %266, i32 1
  %267 = ptrtoint ptr %arrayidx33.i.i156 to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %arrayidx33.i.i156, align 4
  %add.i.i157 = add i32 %268, 8704
  tail call void %264(ptr noundef %adev, i32 noundef %add.i.i157, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit.i165

cond.false.i.i162:                                ; preds = %land.lhs.true23.i.i154.cond.false.i.i162_crit_edge, %land.lhs.true.i.i151.cond.false.i.i162_crit_edge, %cond.end177.i148.cond.false.i.i162_crit_edge
  %arrayidx35.i.i159 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %269 = ptrtoint ptr %arrayidx35.i.i159 to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %arrayidx35.i.i159, align 8
  %arrayidx37.i.i160 = getelementptr i32, ptr %270, i32 1
  %271 = ptrtoint ptr %arrayidx37.i.i160 to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %arrayidx37.i.i160, align 4
  %add38.i.i161 = add i32 %272, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i.i161, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit.i165

gfx_v9_0_select_se_sh.exit.i165:                  ; preds = %cond.false.i.i162, %cond.true.i.i158
  %273 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %virt.i43, align 8
  %and180.i163 = and i32 %274, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and180.i163)
  %tobool181.not.i164 = icmp eq i32 %and180.i163, 0
  br i1 %tobool181.not.i164, label %gfx_v9_0_select_se_sh.exit.i165.cond.false203.i179_crit_edge, label %land.lhs.true182.i168

gfx_v9_0_select_se_sh.exit.i165.cond.false203.i179_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit.i165
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i179

land.lhs.true182.i168:                            ; preds = %gfx_v9_0_select_se_sh.exit.i165
  %funcs185.i166 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %275 = ptrtoint ptr %funcs185.i166 to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %funcs185.i166, align 4
  %tobool186.not.i167 = icmp eq ptr %276, null
  br i1 %tobool186.not.i167, label %land.lhs.true182.i168.cond.false203.i179_crit_edge, label %land.lhs.true187.i171

land.lhs.true182.i168.cond.false203.i179_crit_edge: ; preds = %land.lhs.true182.i168
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i179

land.lhs.true187.i171:                            ; preds = %land.lhs.true182.i168
  %sriov_wreg191.i169 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %276, i32 0, i32 12
  %277 = ptrtoint ptr %sriov_wreg191.i169 to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %sriov_wreg191.i169, align 4
  %tobool192.not.i170 = icmp eq ptr %278, null
  br i1 %tobool192.not.i170, label %land.lhs.true187.i171.cond.false203.i179_crit_edge, label %cond.true193.i175

land.lhs.true187.i171.cond.false203.i179_crit_edge: ; preds = %land.lhs.true187.i171
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i179

cond.true193.i175:                                ; preds = %land.lhs.true187.i171
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx199.i172 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %279 = ptrtoint ptr %arrayidx199.i172 to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load ptr, ptr %arrayidx199.i172, align 8
  %arrayidx201.i173 = getelementptr i32, ptr %280, i32 1
  %281 = ptrtoint ptr %arrayidx201.i173 to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load i32, ptr %arrayidx201.i173, align 4
  %add202.i174 = add i32 %282, 19535
  tail call void %278(ptr noundef %adev, i32 noundef %add202.i174, i32 noundef -1, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end209.i182

cond.false203.i179:                               ; preds = %land.lhs.true187.i171.cond.false203.i179_crit_edge, %land.lhs.true182.i168.cond.false203.i179_crit_edge, %gfx_v9_0_select_se_sh.exit.i165.cond.false203.i179_crit_edge
  %arrayidx205.i176 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %283 = ptrtoint ptr %arrayidx205.i176 to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %arrayidx205.i176, align 8
  %arrayidx207.i177 = getelementptr i32, ptr %284, i32 1
  %285 = ptrtoint ptr %arrayidx207.i177 to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load i32, ptr %arrayidx207.i177, align 4
  %add208.i178 = add i32 %286, 19535
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add208.i178, i32 noundef -1, i32 noundef 0) #15
  br label %cond.end209.i182

cond.end209.i182:                                 ; preds = %cond.false203.i179, %cond.true193.i175
  %287 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load i32, ptr %virt.i43, align 8
  %and217.i180 = and i32 %288, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and217.i180)
  %tobool218.not.i181 = icmp eq i32 %and217.i180, 0
  br i1 %tobool218.not.i181, label %cond.end209.i182.cond.false240.i196_crit_edge, label %land.lhs.true219.i185

cond.end209.i182.cond.false240.i196_crit_edge:    ; preds = %cond.end209.i182
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false240.i196

land.lhs.true219.i185:                            ; preds = %cond.end209.i182
  %funcs222.i183 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %289 = ptrtoint ptr %funcs222.i183 to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %funcs222.i183, align 4
  %tobool223.not.i184 = icmp eq ptr %290, null
  br i1 %tobool223.not.i184, label %land.lhs.true219.i185.cond.false240.i196_crit_edge, label %land.lhs.true224.i188

land.lhs.true219.i185.cond.false240.i196_crit_edge: ; preds = %land.lhs.true219.i185
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false240.i196

land.lhs.true224.i188:                            ; preds = %land.lhs.true219.i185
  %sriov_wreg228.i186 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %290, i32 0, i32 12
  %291 = ptrtoint ptr %sriov_wreg228.i186 to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %sriov_wreg228.i186, align 4
  %tobool229.not.i187 = icmp eq ptr %292, null
  br i1 %tobool229.not.i187, label %land.lhs.true224.i188.cond.false240.i196_crit_edge, label %cond.true230.i192

land.lhs.true224.i188.cond.false240.i196_crit_edge: ; preds = %land.lhs.true224.i188
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false240.i196

cond.true230.i192:                                ; preds = %land.lhs.true224.i188
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx236.i189 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %293 = ptrtoint ptr %arrayidx236.i189 to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load ptr, ptr %arrayidx236.i189, align 8
  %arrayidx238.i190 = getelementptr i32, ptr %294, i32 1
  %295 = ptrtoint ptr %arrayidx238.i190 to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load i32, ptr %arrayidx238.i190, align 4
  %add239.i191 = add i32 %296, 19537
  tail call void %292(ptr noundef %adev, i32 noundef %add239.i191, i32 noundef 54464518, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end246.i199

cond.false240.i196:                               ; preds = %land.lhs.true224.i188.cond.false240.i196_crit_edge, %land.lhs.true219.i185.cond.false240.i196_crit_edge, %cond.end209.i182.cond.false240.i196_crit_edge
  %arrayidx242.i193 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %297 = ptrtoint ptr %arrayidx242.i193 to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load ptr, ptr %arrayidx242.i193, align 8
  %arrayidx244.i194 = getelementptr i32, ptr %298, i32 1
  %299 = ptrtoint ptr %arrayidx244.i194 to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load i32, ptr %arrayidx244.i194, align 4
  %add245.i195 = add i32 %300, 19537
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add245.i195, i32 noundef 54464518, i32 noundef 0) #15
  br label %cond.end246.i199

cond.end246.i199:                                 ; preds = %cond.false240.i196, %cond.true230.i192
  %301 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %virt.i43, align 8
  %and249.i197 = and i32 %302, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and249.i197)
  %tobool250.not.i198 = icmp eq i32 %and249.i197, 0
  br i1 %tobool250.not.i198, label %cond.end246.i199.cond.false271.i215_crit_edge, label %land.lhs.true251.i202

cond.end246.i199.cond.false271.i215_crit_edge:    ; preds = %cond.end246.i199
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false271.i215

land.lhs.true251.i202:                            ; preds = %cond.end246.i199
  %funcs254.i200 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %303 = ptrtoint ptr %funcs254.i200 to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load ptr, ptr %funcs254.i200, align 4
  %tobool255.not.i201 = icmp eq ptr %304, null
  br i1 %tobool255.not.i201, label %land.lhs.true251.i202.cond.false271.i215_crit_edge, label %land.lhs.true256.i205

land.lhs.true251.i202.cond.false271.i215_crit_edge: ; preds = %land.lhs.true251.i202
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false271.i215

land.lhs.true256.i205:                            ; preds = %land.lhs.true251.i202
  %sriov_rreg.i203 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %304, i32 0, i32 13
  %305 = ptrtoint ptr %sriov_rreg.i203 to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %sriov_rreg.i203, align 4
  %tobool260.not.i204 = icmp eq ptr %306, null
  br i1 %tobool260.not.i204, label %land.lhs.true256.i205.cond.false271.i215_crit_edge, label %cond.true261.i210

land.lhs.true256.i205.cond.false271.i215_crit_edge: ; preds = %land.lhs.true256.i205
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false271.i215

cond.true261.i210:                                ; preds = %land.lhs.true256.i205
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx267.i206 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %307 = ptrtoint ptr %arrayidx267.i206 to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load ptr, ptr %arrayidx267.i206, align 8
  %arrayidx269.i207 = getelementptr i32, ptr %308, i32 1
  %309 = ptrtoint ptr %arrayidx269.i207 to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %arrayidx269.i207, align 4
  %add270.i208 = add i32 %310, 19562
  %call.i209 = tail call i32 %306(ptr noundef %adev, i32 noundef %add270.i208, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end278.i221

cond.false271.i215:                               ; preds = %land.lhs.true256.i205.cond.false271.i215_crit_edge, %land.lhs.true251.i202.cond.false271.i215_crit_edge, %cond.end246.i199.cond.false271.i215_crit_edge
  %arrayidx273.i211 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %311 = ptrtoint ptr %arrayidx273.i211 to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %arrayidx273.i211, align 8
  %arrayidx275.i212 = getelementptr i32, ptr %312, i32 1
  %313 = ptrtoint ptr %arrayidx275.i212 to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %arrayidx275.i212, align 4
  %add276.i213 = add i32 %314, 19562
  %call277.i214 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add276.i213, i32 noundef 0) #15
  br label %cond.end278.i221

cond.end278.i221:                                 ; preds = %cond.false271.i215, %cond.true261.i210
  %cond.i216 = phi i32 [ %call.i209, %cond.true261.i210 ], [ %call277.i214, %cond.false271.i215 ]
  %and279.i217 = and i32 %cond.i216, 65535
  %or280.i218 = or i32 %and279.i217, 12582912
  %315 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %virt.i43, align 8
  %and283.i219 = and i32 %316, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and283.i219)
  %tobool284.not.i220 = icmp eq i32 %and283.i219, 0
  br i1 %tobool284.not.i220, label %cond.end278.i221.cond.false306.i235_crit_edge, label %land.lhs.true285.i224

cond.end278.i221.cond.false306.i235_crit_edge:    ; preds = %cond.end278.i221
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false306.i235

land.lhs.true285.i224:                            ; preds = %cond.end278.i221
  %funcs288.i222 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %317 = ptrtoint ptr %funcs288.i222 to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load ptr, ptr %funcs288.i222, align 4
  %tobool289.not.i223 = icmp eq ptr %318, null
  br i1 %tobool289.not.i223, label %land.lhs.true285.i224.cond.false306.i235_crit_edge, label %land.lhs.true290.i227

land.lhs.true285.i224.cond.false306.i235_crit_edge: ; preds = %land.lhs.true285.i224
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false306.i235

land.lhs.true290.i227:                            ; preds = %land.lhs.true285.i224
  %sriov_wreg294.i225 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %318, i32 0, i32 12
  %319 = ptrtoint ptr %sriov_wreg294.i225 to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %sriov_wreg294.i225, align 4
  %tobool295.not.i226 = icmp eq ptr %320, null
  br i1 %tobool295.not.i226, label %land.lhs.true290.i227.cond.false306.i235_crit_edge, label %cond.true296.i231

land.lhs.true290.i227.cond.false306.i235_crit_edge: ; preds = %land.lhs.true290.i227
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false306.i235

cond.true296.i231:                                ; preds = %land.lhs.true290.i227
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx302.i228 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %321 = ptrtoint ptr %arrayidx302.i228 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load ptr, ptr %arrayidx302.i228, align 8
  %arrayidx304.i229 = getelementptr i32, ptr %322, i32 1
  %323 = ptrtoint ptr %arrayidx304.i229 to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %arrayidx304.i229, align 4
  %add305.i230 = add i32 %324, 19562
  tail call void %320(ptr noundef %adev, i32 noundef %add305.i230, i32 noundef %or280.i218, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end312.i238

cond.false306.i235:                               ; preds = %land.lhs.true290.i227.cond.false306.i235_crit_edge, %land.lhs.true285.i224.cond.false306.i235_crit_edge, %cond.end278.i221.cond.false306.i235_crit_edge
  %arrayidx308.i232 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %325 = ptrtoint ptr %arrayidx308.i232 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %arrayidx308.i232, align 8
  %arrayidx310.i233 = getelementptr i32, ptr %326, i32 1
  %327 = ptrtoint ptr %arrayidx310.i233 to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %arrayidx310.i233, align 4
  %add311.i234 = add i32 %328, 19562
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add311.i234, i32 noundef %or280.i218, i32 noundef 0) #15
  br label %cond.end312.i238

cond.end312.i238:                                 ; preds = %cond.false306.i235, %cond.true296.i231
  %329 = ptrtoint ptr %virt.i43 to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %virt.i43, align 8
  %and321.i236 = and i32 %330, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and321.i236)
  %tobool322.not.i237 = icmp eq i32 %and321.i236, 0
  br i1 %tobool322.not.i237, label %cond.end312.i238.cond.false344.i252_crit_edge, label %land.lhs.true323.i241

cond.end312.i238.cond.false344.i252_crit_edge:    ; preds = %cond.end312.i238
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false344.i252

land.lhs.true323.i241:                            ; preds = %cond.end312.i238
  %funcs326.i239 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %331 = ptrtoint ptr %funcs326.i239 to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load ptr, ptr %funcs326.i239, align 4
  %tobool327.not.i240 = icmp eq ptr %332, null
  br i1 %tobool327.not.i240, label %land.lhs.true323.i241.cond.false344.i252_crit_edge, label %land.lhs.true328.i244

land.lhs.true323.i241.cond.false344.i252_crit_edge: ; preds = %land.lhs.true323.i241
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false344.i252

land.lhs.true328.i244:                            ; preds = %land.lhs.true323.i241
  %sriov_wreg332.i242 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %332, i32 0, i32 12
  %333 = ptrtoint ptr %sriov_wreg332.i242 to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %sriov_wreg332.i242, align 4
  %tobool333.not.i243 = icmp eq ptr %334, null
  br i1 %tobool333.not.i243, label %land.lhs.true328.i244.cond.false344.i252_crit_edge, label %cond.true334.i248

land.lhs.true328.i244.cond.false344.i252_crit_edge: ; preds = %land.lhs.true328.i244
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false344.i252

cond.true334.i248:                                ; preds = %land.lhs.true328.i244
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx340.i245 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %335 = ptrtoint ptr %arrayidx340.i245 to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load ptr, ptr %arrayidx340.i245, align 8
  %arrayidx342.i246 = getelementptr i32, ptr %336, i32 1
  %337 = ptrtoint ptr %arrayidx342.i246 to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load i32, ptr %arrayidx342.i246, align 4
  %add343.i247 = add i32 %338, 19481
  tail call void %334(ptr noundef %adev, i32 noundef %add343.i247, i32 noundef -2147483500, i32 noundef 0, i32 noundef 1) #15
  br label %sw.epilog.sink.split

cond.false344.i252:                               ; preds = %land.lhs.true328.i244.cond.false344.i252_crit_edge, %land.lhs.true323.i241.cond.false344.i252_crit_edge, %cond.end312.i238.cond.false344.i252_crit_edge
  %arrayidx346.i249 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %339 = ptrtoint ptr %arrayidx346.i249 to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load ptr, ptr %arrayidx346.i249, align 8
  %arrayidx348.i250 = getelementptr i32, ptr %340, i32 1
  %341 = ptrtoint ptr %arrayidx348.i250 to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load i32, ptr %arrayidx348.i250, align 4
  %add349.i251 = add i32 %342, 19481
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add349.i251, i32 noundef -2147483500, i32 noundef 0) #15
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %cond.false344.i252, %cond.true334.i248, %cond.false344.i, %cond.true334.i
  %grbm_idx_mutex.i145.sink = phi ptr [ %grbm_idx_mutex.i, %cond.true334.i ], [ %grbm_idx_mutex.i, %cond.false344.i ], [ %grbm_idx_mutex.i145, %cond.true334.i248 ], [ %grbm_idx_mutex.i145, %cond.false344.i252 ]
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i145.sink) #15
  tail call fastcc void @gfx_v9_0_init_always_on_cu_mask(ptr noundef %adev) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %if.end16.sw.epilog_crit_edge
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %343 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load ptr, ptr %funcs, align 4
  %update_spm_vmid = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %344, i32 0, i32 11
  %345 = ptrtoint ptr %update_spm_vmid to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load ptr, ptr %update_spm_vmid, align 4
  %tobool21.not = icmp eq ptr %346, null
  br i1 %tobool21.not, label %sw.epilog.cleanup_crit_edge, label %if.then22

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then22:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %346(ptr noundef %adev, i32 noundef 15) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %sw.epilog.cleanup_crit_edge, %if.then9.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call12, %if.then9.cleanup_crit_edge ], [ 0, %if.then22 ], [ 0, %sw.epilog.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_get_csb_size(ptr nocapture noundef readnone %adev) #5 align 64 {
for.body5.preheader:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 904
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_get_csb_buffer(ptr nocapture noundef readonly %adev, ptr noundef %buffer) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cs_data = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 8
  %0 = ptrtoint ptr %cs_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cs_data, align 4
  %cmp = icmp eq ptr %1, null
  %cmp1 = icmp eq ptr %buffer, null
  %or.cond = or i1 %cmp1, %cmp
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end3

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end3:                                          ; preds = %entry
  %2 = ptrtoint ptr %buffer to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 4849856, ptr %buffer, align 4
  %arrayidx5 = getelementptr i32, ptr %buffer, i32 1
  %3 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 32, ptr %arrayidx5, align 4
  %arrayidx7 = getelementptr i32, ptr %buffer, i32 2
  %4 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 2621888, ptr %arrayidx7, align 4
  %arrayidx9 = getelementptr i32, ptr %buffer, i32 3
  %5 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 128, ptr %arrayidx9, align 4
  %arrayidx11 = getelementptr i32, ptr %buffer, i32 4
  %6 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 128, ptr %arrayidx11, align 4
  %7 = ptrtoint ptr %cs_data to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cs_data, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %cmp15.not96 = icmp eq ptr %10, null
  br i1 %cmp15.not96, label %if.end3.for.end40_crit_edge, label %if.end3.for.cond17.preheader_crit_edge

if.end3.for.cond17.preheader_crit_edge:           ; preds = %if.end3
  br label %for.cond17.preheader

if.end3.for.end40_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end40

for.cond17.preheader:                             ; preds = %for.inc38.for.cond17.preheader_crit_edge, %if.end3.for.cond17.preheader_crit_edge
  %11 = phi ptr [ %37, %for.inc38.for.cond17.preheader_crit_edge ], [ %10, %if.end3.for.cond17.preheader_crit_edge ]
  %sect.098 = phi ptr [ %incdec.ptr39, %for.inc38.for.cond17.preheader_crit_edge ], [ %8, %if.end3.for.cond17.preheader_crit_edge ]
  %count.097 = phi i32 [ %count.1.lcssa, %for.inc38.for.cond17.preheader_crit_edge ], [ 5, %if.end3.for.cond17.preheader_crit_edge ]
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %cmp18.not91 = icmp eq ptr %13, null
  br i1 %cmp18.not91, label %for.cond17.preheader.for.inc38_crit_edge, label %for.body19.lr.ph

for.cond17.preheader.for.inc38_crit_edge:         ; preds = %for.cond17.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc38

for.body19.lr.ph:                                 ; preds = %for.cond17.preheader
  %id = getelementptr inbounds %struct.cs_section_def, ptr %sect.098, i32 0, i32 1
  br label %for.body19

for.body19:                                       ; preds = %for.inc36.for.body19_crit_edge, %for.body19.lr.ph
  %ext.093 = phi ptr [ %11, %for.body19.lr.ph ], [ %incdec.ptr, %for.inc36.for.body19_crit_edge ]
  %count.192 = phi i32 [ %count.097, %for.body19.lr.ph ], [ %count.2.lcssa, %for.inc36.for.body19_crit_edge ]
  %14 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %cmp20 = icmp eq i32 %15, 1
  br i1 %cmp20, label %if.then21, label %for.body19.cleanup_crit_edge

for.body19.cleanup_crit_edge:                     ; preds = %for.body19
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then21:                                        ; preds = %for.body19
  %reg_count = getelementptr inbounds %struct.cs_extent_def, ptr %ext.093, i32 0, i32 2
  %16 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %reg_count, align 4
  %and = shl i32 %17, 16
  %or = or i32 %and, -1073714944
  %18 = tail call i32 @llvm.bswap.i32(i32 %or)
  %inc22 = add i32 %count.192, 1
  %arrayidx23 = getelementptr i32, ptr %buffer, i32 %count.192
  %19 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile i32 %18, ptr %arrayidx23, align 4
  %reg_index = getelementptr inbounds %struct.cs_extent_def, ptr %ext.093, i32 0, i32 1
  %20 = ptrtoint ptr %reg_index to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %reg_index, align 4
  %sub = add i32 %21, -40960
  %22 = tail call i32 @llvm.bswap.i32(i32 %sub)
  %inc24 = add i32 %count.192, 2
  %arrayidx25 = getelementptr i32, ptr %buffer, i32 %inc22
  %23 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile i32 %22, ptr %arrayidx25, align 4
  %24 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %reg_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp2888.not = icmp eq i32 %25, 0
  br i1 %cmp2888.not, label %if.then21.for.inc36_crit_edge, label %if.then21.for.body29_crit_edge

if.then21.for.body29_crit_edge:                   ; preds = %if.then21
  br label %for.body29

if.then21.for.inc36_crit_edge:                    ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc36

for.body29:                                       ; preds = %for.body29.for.body29_crit_edge, %if.then21.for.body29_crit_edge
  %i.090 = phi i32 [ %inc34, %for.body29.for.body29_crit_edge ], [ 0, %if.then21.for.body29_crit_edge ]
  %count.289 = phi i32 [ %inc32, %for.body29.for.body29_crit_edge ], [ %inc24, %if.then21.for.body29_crit_edge ]
  %26 = ptrtoint ptr %ext.093 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ext.093, align 4
  %arrayidx31 = getelementptr i32, ptr %27, i32 %i.090
  %28 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx31, align 4
  %30 = tail call i32 @llvm.bswap.i32(i32 %29)
  %inc32 = add i32 %count.289, 1
  %arrayidx33 = getelementptr i32, ptr %buffer, i32 %count.289
  %31 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 %30, ptr %arrayidx33, align 4
  %inc34 = add nuw i32 %i.090, 1
  %32 = ptrtoint ptr %reg_count to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %reg_count, align 4
  %cmp28 = icmp ult i32 %inc34, %33
  br i1 %cmp28, label %for.body29.for.body29_crit_edge, label %for.body29.for.inc36_crit_edge

for.body29.for.inc36_crit_edge:                   ; preds = %for.body29
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc36

for.body29.for.body29_crit_edge:                  ; preds = %for.body29
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body29

for.inc36:                                        ; preds = %for.body29.for.inc36_crit_edge, %if.then21.for.inc36_crit_edge
  %count.2.lcssa = phi i32 [ %inc24, %if.then21.for.inc36_crit_edge ], [ %inc32, %for.body29.for.inc36_crit_edge ]
  %incdec.ptr = getelementptr %struct.cs_extent_def, ptr %ext.093, i32 1
  %34 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %incdec.ptr, align 4
  %cmp18.not = icmp eq ptr %35, null
  br i1 %cmp18.not, label %for.inc36.for.inc38_crit_edge, label %for.inc36.for.body19_crit_edge

for.inc36.for.body19_crit_edge:                   ; preds = %for.inc36
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body19

for.inc36.for.inc38_crit_edge:                    ; preds = %for.inc36
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc38

for.inc38:                                        ; preds = %for.inc36.for.inc38_crit_edge, %for.cond17.preheader.for.inc38_crit_edge
  %count.1.lcssa = phi i32 [ %count.097, %for.cond17.preheader.for.inc38_crit_edge ], [ %count.2.lcssa, %for.inc36.for.inc38_crit_edge ]
  %incdec.ptr39 = getelementptr %struct.cs_section_def, ptr %sect.098, i32 1
  %36 = ptrtoint ptr %incdec.ptr39 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %incdec.ptr39, align 4
  %cmp15.not = icmp eq ptr %37, null
  br i1 %cmp15.not, label %for.inc38.for.end40_crit_edge, label %for.inc38.for.cond17.preheader_crit_edge

for.inc38.for.cond17.preheader_crit_edge:         ; preds = %for.inc38
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond17.preheader

for.inc38.for.end40_crit_edge:                    ; preds = %for.inc38
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end40

for.end40:                                        ; preds = %for.inc38.for.end40_crit_edge, %if.end3.for.end40_crit_edge
  %count.0.lcssa = phi i32 [ 5, %if.end3.for.end40_crit_edge ], [ %count.1.lcssa, %for.inc38.for.end40_crit_edge ]
  %inc41 = add i32 %count.0.lcssa, 1
  %arrayidx42 = getelementptr i32, ptr %buffer, i32 %count.0.lcssa
  %38 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile i32 4849856, ptr %arrayidx42, align 4
  %inc43 = add i32 %count.0.lcssa, 2
  %arrayidx44 = getelementptr i32, ptr %buffer, i32 %inc41
  %39 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 48, ptr %arrayidx44, align 4
  %inc45 = add i32 %count.0.lcssa, 3
  %arrayidx46 = getelementptr i32, ptr %buffer, i32 %inc43
  %40 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile i32 1179840, ptr %arrayidx46, align 4
  %arrayidx48 = getelementptr i32, ptr %buffer, i32 %inc45
  %41 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 0, ptr %arrayidx48, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end40, %for.body19.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @gfx_v9_0_cp_jump_table_num(ptr nocapture noundef readonly %adev) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.409)
  switch i32 %1, label %3 [
    i32 590850, label %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge
    i32 590849, label %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge2
    i32 590592, label %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge3
  ]

entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge3: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_load_mec2_fw_bin_support.exit

entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge2: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_load_mec2_fw_bin_support.exit

entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_load_mec2_fw_bin_support.exit

3:                                                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_load_mec2_fw_bin_support.exit

gfx_v9_0_load_mec2_fw_bin_support.exit:           ; preds = %3, %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge, %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge2, %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge3
  %4 = phi i32 [ 5, %3 ], [ 4, %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge ], [ 4, %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge2 ], [ 4, %entry.gfx_v9_0_load_mec2_fw_bin_support.exit_crit_edge3 ]
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_rlc_resume(ptr noundef %adev) #0 align 64 {
entry:
  %unique_indirect_regs.i.i = alloca [8 x i32], align 4
  %indirect_start_offsets.i.i = alloca [10 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_init_csb(ptr noundef %adev)
  br label %cleanup

if.end:                                           ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %stop = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %stop to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stop, align 4
  tail call void %5(ptr noundef %adev) #15
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and3 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end.cond.false_crit_edge, label %land.lhs.true

if.end.cond.false_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %if.end
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool8.not = icmp eq ptr %9, null
  br i1 %tobool8.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true9

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true9:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 12
  %10 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_wreg, align 4
  %tobool13.not = icmp eq ptr %11, null
  br i1 %tobool13.not, label %land.lhs.true9.cond.false_crit_edge, label %cond.true

land.lhs.true9.cond.false_crit_edge:              ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 8
  %arrayidx19 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx19, align 4
  %add = add i32 %15, 19529
  tail call void %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true9.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.end.cond.false_crit_edge
  %arrayidx21 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %16 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx21, align 8
  %arrayidx23 = getelementptr i32, ptr %17, i32 1
  %18 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx23, align 4
  %add24 = add i32 %19, 19529
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add24, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  tail call fastcc void @gfx_v9_0_init_csb(ptr noundef %adev) #15
  %is_rlc_v2_1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 38
  %20 = ptrtoint ptr %is_rlc_v2_1.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %is_rlc_v2_1.i, align 8, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.i = icmp eq i8 %21, 0
  br i1 %tobool.not.i, label %cond.end.if.end4.i_crit_edge, label %if.then.i

cond.end.if.end4.i_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.then.i:                                        ; preds = %cond.end
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590337, i32 %23)
  %cmp.i = icmp eq i32 %23, 590337
  br i1 %cmp.i, label %if.then.i.if.then3.i_crit_edge, label %lor.lhs.false.i

if.then.i.if.then3.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then3.i

lor.lhs.false.i:                                  ; preds = %if.then.i
  %apu_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %24 = ptrtoint ptr %apu_flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %apu_flags.i, align 4
  %and.i = and i32 %25, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end.i_crit_edge, label %lor.lhs.false.i.if.then3.i_crit_edge

lor.lhs.false.i.if.then3.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then3.i

lor.lhs.false.i.if.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.then3.i:                                       ; preds = %lor.lhs.false.i.if.then3.i_crit_edge, %if.then.i.if.then3.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %unique_indirect_regs.i.i) #15
  %26 = call ptr @memset(ptr %unique_indirect_regs.i.i, i32 0, i32 32)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %indirect_start_offsets.i.i) #15
  %27 = call ptr @memset(ptr %indirect_start_offsets.i.i, i32 0, i32 40)
  %register_list_format1.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 31
  %28 = ptrtoint ptr %register_list_format1.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %register_list_format1.i.i, align 4
  %reg_list_format_size_bytes.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 23
  %30 = ptrtoint ptr %reg_list_format_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %reg_list_format_size_bytes.i.i, align 4
  %call.i.i = tail call ptr @kmemdup(ptr noundef %29, i32 noundef %31, i32 noundef 3264) #15
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.then3.i.gfx_v9_1_init_rlc_save_restore_list.exit.i_crit_edge, label %if.end.i.i

if.then3.i.gfx_v9_1_init_rlc_save_restore_list.exit.i_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_1_init_rlc_save_restore_list.exit.i

if.end.i.i:                                       ; preds = %if.then3.i
  %reg_list_format_direct_reg_list_length.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 25
  %32 = ptrtoint ptr %reg_list_format_direct_reg_list_length.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %reg_list_format_direct_reg_list_length.i.i, align 4
  %34 = ptrtoint ptr %reg_list_format_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %reg_list_format_size_bytes.i.i, align 4
  %shr.i.i = lshr i32 %35, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %shr.i.i)
  %cmp8.i.i.i = icmp slt i32 %33, %shr.i.i
  br i1 %cmp8.i.i.i, label %for.body.preheader.i.i.i, label %if.end.i.i.gfx_v9_1_parse_ind_reg_list.exit.i.i_crit_edge

if.end.i.i.gfx_v9_1_parse_ind_reg_list.exit.i.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_1_parse_ind_reg_list.exit.i.i

for.body.preheader.i.i.i:                         ; preds = %if.end.i.i
  %arrayidx26.1.i.i.i = getelementptr inbounds i32, ptr %unique_indirect_regs.i.i, i32 1
  %arrayidx26.2.i.i.i = getelementptr inbounds i32, ptr %unique_indirect_regs.i.i, i32 2
  %arrayidx26.3.i.i.i = getelementptr inbounds i32, ptr %unique_indirect_regs.i.i, i32 3
  %arrayidx26.4.i.i.i = getelementptr inbounds i32, ptr %unique_indirect_regs.i.i, i32 4
  %arrayidx26.5.i.i.i = getelementptr inbounds i32, ptr %unique_indirect_regs.i.i, i32 5
  %arrayidx26.6.i.i.i = getelementptr inbounds i32, ptr %unique_indirect_regs.i.i, i32 6
  %arrayidx26.7.i.i.i = getelementptr inbounds i32, ptr %unique_indirect_regs.i.i, i32 7
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc58.i.i.i.for.body.i.i.i_crit_edge, %for.body.preheader.i.i.i
  %indirect_start_offsets_count.0.i.i = phi i32 [ 0, %for.body.preheader.i.i.i ], [ %add.i.i.i, %for.inc58.i.i.i.for.body.i.i.i_crit_edge ]
  %indirect_offset.addr.09.i.i.i = phi i32 [ %33, %for.body.preheader.i.i.i ], [ %inc59.i.i.i, %for.inc58.i.i.i.for.body.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %indirect_start_offsets_count.0.i.i)
  %cmp1.i.i.i = icmp sgt i32 %indirect_start_offsets_count.0.i.i, 9
  br i1 %cmp1.i.i.i, label %do.end.i.i.i, label %for.body.i.i.i.if.end.i.i.i_crit_edge, !prof !1022

for.body.i.i.i.if.end.i.i.i_crit_edge:            ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

do.end.i.i.i:                                     ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.9, i32 noundef 2813, i32 noundef 9, ptr noundef null) #15
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %do.end.i.i.i, %for.body.i.i.i.if.end.i.i.i_crit_edge
  %arrayidx.i.i.i = getelementptr i32, ptr %indirect_start_offsets.i.i, i32 %indirect_start_offsets_count.0.i.i
  %36 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %indirect_offset.addr.09.i.i.i, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %indirect_start_offsets_count.0.i.i, 1
  %arrayidx205.i.i.i = getelementptr i32, ptr %call.i.i, i32 %indirect_offset.addr.09.i.i.i
  %37 = ptrtoint ptr %arrayidx205.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx205.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %38)
  %cmp21.not6.i.i.i = icmp eq i32 %38, -1
  br i1 %cmp21.not6.i.i.i, label %if.end.i.i.i.for.inc58.i.i.i_crit_edge, label %if.end.i.i.i.while.body.i.i.i_crit_edge

if.end.i.i.i.while.body.i.i.i_crit_edge:          ; preds = %if.end.i.i.i
  br label %while.body.i.i.i

if.end.i.i.i.for.inc58.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc58.i.i.i

while.body.i.i.i:                                 ; preds = %do.end50.i.i.i.while.body.i.i.i_crit_edge, %if.end.i.i.i.while.body.i.i.i_crit_edge
  %indirect_offset.addr.17.i.i.i = phi i32 [ %inc57.i.i.i, %do.end50.i.i.i.while.body.i.i.i_crit_edge ], [ %indirect_offset.addr.09.i.i.i, %if.end.i.i.i.while.body.i.i.i_crit_edge ]
  %add22.i.i.i = add i32 %indirect_offset.addr.17.i.i.i, 2
  %arrayidx27.i.i.i = getelementptr i32, ptr %call.i.i, i32 %add22.i.i.i
  %39 = ptrtoint ptr %arrayidx27.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx27.i.i.i, align 4
  %41 = ptrtoint ptr %unique_indirect_regs.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %unique_indirect_regs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %40)
  %cmp28.i.i.i = icmp eq i32 %42, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool30.not.i.i.i = icmp eq i32 %42, 0
  %or.cond.i.i.i = or i1 %tobool30.not.i.i.i, %cmp28.i.i.i
  br i1 %or.cond.i.i.i, label %while.body.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.i.i.i

while.body.i.i.i.do.end50.i.i.i_crit_edge:        ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.i.i.i:                                    ; preds = %while.body.i.i.i
  %43 = ptrtoint ptr %arrayidx26.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx26.1.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %40)
  %cmp28.1.i.i.i = icmp eq i32 %44, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool30.not.1.i.i.i = icmp eq i32 %44, 0
  %or.cond.1.i.i.i = or i1 %tobool30.not.1.i.i.i, %cmp28.1.i.i.i
  br i1 %or.cond.1.i.i.i, label %for.inc.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.1.i.i.i

for.inc.i.i.i.do.end50.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.1.i.i.i:                                  ; preds = %for.inc.i.i.i
  %45 = ptrtoint ptr %arrayidx26.2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx26.2.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %46, i32 %40)
  %cmp28.2.i.i.i = icmp eq i32 %46, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool30.not.2.i.i.i = icmp eq i32 %46, 0
  %or.cond.2.i.i.i = or i1 %tobool30.not.2.i.i.i, %cmp28.2.i.i.i
  br i1 %or.cond.2.i.i.i, label %for.inc.1.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.2.i.i.i

for.inc.1.i.i.i.do.end50.i.i.i_crit_edge:         ; preds = %for.inc.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.2.i.i.i:                                  ; preds = %for.inc.1.i.i.i
  %47 = ptrtoint ptr %arrayidx26.3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx26.3.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %40)
  %cmp28.3.i.i.i = icmp eq i32 %48, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool30.not.3.i.i.i = icmp eq i32 %48, 0
  %or.cond.3.i.i.i = or i1 %tobool30.not.3.i.i.i, %cmp28.3.i.i.i
  br i1 %or.cond.3.i.i.i, label %for.inc.2.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.3.i.i.i

for.inc.2.i.i.i.do.end50.i.i.i_crit_edge:         ; preds = %for.inc.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.3.i.i.i:                                  ; preds = %for.inc.2.i.i.i
  %49 = ptrtoint ptr %arrayidx26.4.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx26.4.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %40)
  %cmp28.4.i.i.i = icmp eq i32 %50, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool30.not.4.i.i.i = icmp eq i32 %50, 0
  %or.cond.4.i.i.i = or i1 %tobool30.not.4.i.i.i, %cmp28.4.i.i.i
  br i1 %or.cond.4.i.i.i, label %for.inc.3.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.4.i.i.i

for.inc.3.i.i.i.do.end50.i.i.i_crit_edge:         ; preds = %for.inc.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.4.i.i.i:                                  ; preds = %for.inc.3.i.i.i
  %51 = ptrtoint ptr %arrayidx26.5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx26.5.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %40)
  %cmp28.5.i.i.i = icmp eq i32 %52, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool30.not.5.i.i.i = icmp eq i32 %52, 0
  %or.cond.5.i.i.i = or i1 %tobool30.not.5.i.i.i, %cmp28.5.i.i.i
  br i1 %or.cond.5.i.i.i, label %for.inc.4.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.5.i.i.i

for.inc.4.i.i.i.do.end50.i.i.i_crit_edge:         ; preds = %for.inc.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.5.i.i.i:                                  ; preds = %for.inc.4.i.i.i
  %53 = ptrtoint ptr %arrayidx26.6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx26.6.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %40)
  %cmp28.6.i.i.i = icmp eq i32 %54, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool30.not.6.i.i.i = icmp eq i32 %54, 0
  %or.cond.6.i.i.i = or i1 %tobool30.not.6.i.i.i, %cmp28.6.i.i.i
  br i1 %or.cond.6.i.i.i, label %for.inc.5.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.6.i.i.i

for.inc.5.i.i.i.do.end50.i.i.i_crit_edge:         ; preds = %for.inc.5.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.6.i.i.i:                                  ; preds = %for.inc.5.i.i.i
  %55 = ptrtoint ptr %arrayidx26.7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx26.7.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %40)
  %cmp28.7.i.i.i = icmp eq i32 %56, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool30.not.7.i.i.i = icmp eq i32 %56, 0
  %or.cond.7.i.i.i = or i1 %tobool30.not.7.i.i.i, %cmp28.7.i.i.i
  br i1 %or.cond.7.i.i.i, label %for.inc.6.i.i.i.do.end50.i.i.i_crit_edge, label %for.inc.7.i.i.i

for.inc.6.i.i.i.do.end50.i.i.i_crit_edge:         ; preds = %for.inc.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50.i.i.i

for.inc.7.i.i.i:                                  ; preds = %for.inc.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2828, 0\0A.popsection", ""() #15, !srcloc !1031
  unreachable

do.end50.i.i.i:                                   ; preds = %for.inc.6.i.i.i.do.end50.i.i.i_crit_edge, %for.inc.5.i.i.i.do.end50.i.i.i_crit_edge, %for.inc.4.i.i.i.do.end50.i.i.i_crit_edge, %for.inc.3.i.i.i.do.end50.i.i.i_crit_edge, %for.inc.2.i.i.i.do.end50.i.i.i_crit_edge, %for.inc.1.i.i.i.do.end50.i.i.i_crit_edge, %for.inc.i.i.i.do.end50.i.i.i_crit_edge, %while.body.i.i.i.do.end50.i.i.i_crit_edge
  %idx.04.lcssa.i.i.i = phi i32 [ 0, %while.body.i.i.i.do.end50.i.i.i_crit_edge ], [ 1, %for.inc.i.i.i.do.end50.i.i.i_crit_edge ], [ 2, %for.inc.1.i.i.i.do.end50.i.i.i_crit_edge ], [ 3, %for.inc.2.i.i.i.do.end50.i.i.i_crit_edge ], [ 4, %for.inc.3.i.i.i.do.end50.i.i.i_crit_edge ], [ 5, %for.inc.4.i.i.i.do.end50.i.i.i_crit_edge ], [ 6, %for.inc.5.i.i.i.do.end50.i.i.i_crit_edge ], [ 7, %for.inc.6.i.i.i.do.end50.i.i.i_crit_edge ]
  %arrayidx51.i.i.i = getelementptr i32, ptr %unique_indirect_regs.i.i, i32 %idx.04.lcssa.i.i.i
  %57 = ptrtoint ptr %arrayidx51.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx51.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool52.not.i.i.i = icmp eq i32 %58, 0
  %spec.store.select.i.i = select i1 %tobool52.not.i.i.i, i32 %40, i32 %58
  %59 = ptrtoint ptr %arrayidx51.i.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %spec.store.select.i.i, ptr %arrayidx51.i.i.i, align 4
  %inc57.i.i.i = add i32 %indirect_offset.addr.17.i.i.i, 3
  %arrayidx20.i.i.i = getelementptr i32, ptr %call.i.i, i32 %inc57.i.i.i
  %60 = ptrtoint ptr %arrayidx20.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx20.i.i.i, align 4
  %cmp21.not.i.i.i = icmp eq i32 %61, -1
  br i1 %cmp21.not.i.i.i, label %do.end50.i.i.i.for.inc58.i.i.i_crit_edge, label %do.end50.i.i.i.while.body.i.i.i_crit_edge

do.end50.i.i.i.while.body.i.i.i_crit_edge:        ; preds = %do.end50.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i.i.i

do.end50.i.i.i.for.inc58.i.i.i_crit_edge:         ; preds = %do.end50.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc58.i.i.i

for.inc58.i.i.i:                                  ; preds = %do.end50.i.i.i.for.inc58.i.i.i_crit_edge, %if.end.i.i.i.for.inc58.i.i.i_crit_edge
  %indirect_offset.addr.1.lcssa.i.i.i = phi i32 [ %indirect_offset.addr.09.i.i.i, %if.end.i.i.i.for.inc58.i.i.i_crit_edge ], [ %inc57.i.i.i, %do.end50.i.i.i.for.inc58.i.i.i_crit_edge ]
  %inc59.i.i.i = add i32 %indirect_offset.addr.1.lcssa.i.i.i, 1
  %cmp.i.i.i = icmp slt i32 %inc59.i.i.i, %shr.i.i
  br i1 %cmp.i.i.i, label %for.inc58.i.i.i.for.body.i.i.i_crit_edge, label %for.inc58.i.i.i.gfx_v9_1_parse_ind_reg_list.exit.i.i_crit_edge

for.inc58.i.i.i.gfx_v9_1_parse_ind_reg_list.exit.i.i_crit_edge: ; preds = %for.inc58.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_1_parse_ind_reg_list.exit.i.i

for.inc58.i.i.i.for.body.i.i.i_crit_edge:         ; preds = %for.inc58.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i.i

gfx_v9_1_parse_ind_reg_list.exit.i.i:             ; preds = %for.inc58.i.i.i.gfx_v9_1_parse_ind_reg_list.exit.i.i_crit_edge, %if.end.i.i.gfx_v9_1_parse_ind_reg_list.exit.i.i_crit_edge
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %62 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx11.i.i = getelementptr i32, ptr %63, i32 1
  %64 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx11.i.i, align 4
  %add.i.i = add i32 %65, 19584
  %call12.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add.i.i, i32 noundef 0) #15
  %or.i.i = or i32 %call12.i.i, 2
  %66 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx16.i.i = getelementptr i32, ptr %67, i32 1
  %68 = ptrtoint ptr %arrayidx16.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx16.i.i, align 4
  %add17.i.i = add i32 %69, 19584
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17.i.i, i32 noundef %or.i.i, i32 noundef 0) #15
  %70 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx21.i.i = getelementptr i32, ptr %71, i32 1
  %72 = ptrtoint ptr %arrayidx21.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx21.i.i, align 4
  %add22.i.i = add i32 %73, 19587
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add22.i.i, i32 noundef 0, i32 noundef 0) #15
  %reg_list_size_bytes.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 24
  %74 = ptrtoint ptr %reg_list_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %reg_list_size_bytes.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %75)
  %cmp7.not.i.i = icmp ult i32 %75, 4
  br i1 %cmp7.not.i.i, label %gfx_v9_1_parse_ind_reg_list.exit.i.i.for.end.i.i_crit_edge, label %for.body.lr.ph.i.i

gfx_v9_1_parse_ind_reg_list.exit.i.i.for.end.i.i_crit_edge: ; preds = %gfx_v9_1_parse_ind_reg_list.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.body.lr.ph.i.i:                               ; preds = %gfx_v9_1_parse_ind_reg_list.exit.i.i
  %register_restore.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 32
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.08.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ]
  %76 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx29.i.i = getelementptr i32, ptr %77, i32 1
  %78 = ptrtoint ptr %arrayidx29.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx29.i.i, align 4
  %add30.i.i = add i32 %79, 19588
  %80 = ptrtoint ptr %register_restore.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %register_restore.i.i, align 8
  %arrayidx33.i.i = getelementptr i32, ptr %81, i32 %i.08.i.i
  %82 = ptrtoint ptr %arrayidx33.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %arrayidx33.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add30.i.i, i32 noundef %83, i32 noundef 0) #15
  %inc.i.i = add nuw nsw i32 %i.08.i.i, 1
  %84 = ptrtoint ptr %reg_list_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %reg_list_size_bytes.i.i, align 8
  %shr25.i.i = lshr i32 %85, 2
  %cmp.i.i = icmp ult i32 %inc.i.i, %shr25.i.i
  br i1 %cmp.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %for.body.i.i.for.end.i.i_crit_edge

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

for.end.i.i:                                      ; preds = %for.body.i.i.for.end.i.i_crit_edge, %gfx_v9_1_parse_ind_reg_list.exit.i.i.for.end.i.i_crit_edge
  %86 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx37.i.i = getelementptr i32, ptr %87, i32 1
  %88 = ptrtoint ptr %arrayidx37.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %arrayidx37.i.i, align 4
  %add38.i.i = add i32 %89, 19564
  %reg_list_format_start.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 20
  %90 = ptrtoint ptr %reg_list_format_start.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %reg_list_format_start.i.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i.i, i32 noundef %91, i32 noundef 0) #15
  %92 = ptrtoint ptr %reg_list_format_direct_reg_list_length.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %reg_list_format_direct_reg_list_length.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %93)
  %cmp459.not.i.i = icmp eq i32 %93, 0
  br i1 %cmp459.not.i.i, label %for.end.i.i.while.cond.preheader.i.i_crit_edge, label %for.end.i.i.for.body46.i.i_crit_edge

for.end.i.i.for.body46.i.i_crit_edge:             ; preds = %for.end.i.i
  br label %for.body46.i.i

for.end.i.i.while.cond.preheader.i.i_crit_edge:   ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.preheader.i.i

while.cond.preheader.i.i:                         ; preds = %for.body46.i.i.while.cond.preheader.i.i_crit_edge, %for.end.i.i.while.cond.preheader.i.i_crit_edge
  %i.1.lcssa.i.i = phi i32 [ 0, %for.end.i.i.while.cond.preheader.i.i_crit_edge ], [ %inc54.i.i, %for.body46.i.i.while.cond.preheader.i.i_crit_edge ]
  %94 = ptrtoint ptr %reg_list_format_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %reg_list_format_size_bytes.i.i, align 4
  %shr5913.i.i = lshr i32 %95, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1.lcssa.i.i, i32 %shr5913.i.i)
  %cmp6014.i.i = icmp ult i32 %i.1.lcssa.i.i, %shr5913.i.i
  br i1 %cmp6014.i.i, label %while.body.lr.ph.i.i, label %while.cond.preheader.i.i.while.end.i.i_crit_edge

while.cond.preheader.i.i.while.end.i.i_crit_edge: ; preds = %while.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i.i

while.body.lr.ph.i.i:                             ; preds = %while.cond.preheader.i.i
  %arrayidx168.1.i.i = getelementptr inbounds [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 1
  %arrayidx168.2.i.i = getelementptr inbounds [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 2
  %arrayidx168.3.i.i = getelementptr inbounds [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 3
  %arrayidx168.4.i.i = getelementptr inbounds [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 4
  %arrayidx168.5.i.i = getelementptr inbounds [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 5
  %arrayidx168.6.i.i = getelementptr inbounds [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 6
  %arrayidx168.7.i.i = getelementptr inbounds [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 7
  br label %while.body.i.i

for.body46.i.i:                                   ; preds = %for.body46.i.i.for.body46.i.i_crit_edge, %for.end.i.i.for.body46.i.i_crit_edge
  %i.110.i.i = phi i32 [ %inc54.i.i, %for.body46.i.i.for.body46.i.i_crit_edge ], [ 0, %for.end.i.i.for.body46.i.i_crit_edge ]
  %96 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx50.i.i = getelementptr i32, ptr %97, i32 1
  %98 = ptrtoint ptr %arrayidx50.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx50.i.i, align 4
  %add51.i.i = add i32 %99, 19565
  %arrayidx52.i.i = getelementptr i32, ptr %call.i.i, i32 %i.110.i.i
  %100 = ptrtoint ptr %arrayidx52.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx52.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add51.i.i, i32 noundef %101, i32 noundef 0) #15
  %inc54.i.i = add nuw i32 %i.110.i.i, 1
  %102 = ptrtoint ptr %reg_list_format_direct_reg_list_length.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %reg_list_format_direct_reg_list_length.i.i, align 4
  %cmp45.i.i = icmp ult i32 %inc54.i.i, %103
  br i1 %cmp45.i.i, label %for.body46.i.i.for.body46.i.i_crit_edge, label %for.body46.i.i.while.cond.preheader.i.i_crit_edge

for.body46.i.i.while.cond.preheader.i.i_crit_edge: ; preds = %for.body46.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.preheader.i.i

for.body46.i.i.for.body46.i.i_crit_edge:          ; preds = %for.body46.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body46.i.i

while.body.i.i:                                   ; preds = %while.cond.backedge.i.i.while.body.i.i_crit_edge, %while.body.lr.ph.i.i
  %i.215.i.i = phi i32 [ %i.1.lcssa.i.i, %while.body.lr.ph.i.i ], [ %i.3.i.i, %while.cond.backedge.i.i.while.body.i.i_crit_edge ]
  %arrayidx61.i.i = getelementptr i32, ptr %call.i.i, i32 %i.215.i.i
  %104 = ptrtoint ptr %arrayidx61.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx61.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %105)
  %cmp62.i.i = icmp eq i32 %105, -1
  %106 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %virt, align 8
  %and.i.i = and i32 %107, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool64.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp62.i.i, label %if.then63.i.i, label %if.end91.i.i

if.then63.i.i:                                    ; preds = %while.body.i.i
  br i1 %tobool64.not.i.i, label %if.then63.i.i.cond.false.i.i_crit_edge, label %land.lhs.true.i.i

if.then63.i.i.cond.false.i.i_crit_edge:           ; preds = %if.then63.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true.i.i:                                ; preds = %if.then63.i.i
  %108 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %funcs, align 4
  %tobool67.not.i.i = icmp eq ptr %109, null
  br i1 %tobool67.not.i.i, label %land.lhs.true.i.i.cond.false.i.i_crit_edge, label %land.lhs.true68.i.i

land.lhs.true.i.i.cond.false.i.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true68.i.i:                              ; preds = %land.lhs.true.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %109, i32 0, i32 12
  %110 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool72.not.i.i = icmp eq ptr %111, null
  br i1 %tobool72.not.i.i, label %land.lhs.true68.i.i.cond.false.i.i_crit_edge, label %cond.true.i.i

land.lhs.true68.i.i.cond.false.i.i_crit_edge:     ; preds = %land.lhs.true68.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true68.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %112 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx80.i.i = getelementptr i32, ptr %113, i32 1
  %114 = ptrtoint ptr %arrayidx80.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %arrayidx80.i.i, align 4
  %add81.i.i = add i32 %115, 19565
  tail call void %111(ptr noundef %adev, i32 noundef %add81.i.i, i32 noundef -1, i32 noundef 0, i32 noundef 1) #15
  br label %while.cond.backedge.i.i

cond.false.i.i:                                   ; preds = %land.lhs.true68.i.i.cond.false.i.i_crit_edge, %land.lhs.true.i.i.cond.false.i.i_crit_edge, %if.then63.i.i.cond.false.i.i_crit_edge
  %116 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx87.i.i = getelementptr i32, ptr %117, i32 1
  %118 = ptrtoint ptr %arrayidx87.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx87.i.i, align 4
  %add88.i.i = add i32 %119, 19565
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add88.i.i, i32 noundef -1, i32 noundef 0) #15
  br label %while.cond.backedge.i.i

while.cond.backedge.i.i:                          ; preds = %cond.false196.i.i, %cond.true186.i.i, %cond.false.i.i, %cond.true.i.i
  %.sink.i.i = phi i32 [ 3, %cond.false196.i.i ], [ 3, %cond.true186.i.i ], [ 1, %cond.false.i.i ], [ 1, %cond.true.i.i ]
  %i.3.i.i = add i32 %.sink.i.i, %i.215.i.i
  %120 = ptrtoint ptr %reg_list_format_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %reg_list_format_size_bytes.i.i, align 4
  %shr59.i.i = lshr i32 %121, 2
  %cmp60.i.i = icmp ult i32 %i.3.i.i, %shr59.i.i
  br i1 %cmp60.i.i, label %while.cond.backedge.i.i.while.body.i.i_crit_edge, label %while.cond.backedge.i.i.while.end.i.i_crit_edge

while.cond.backedge.i.i.while.end.i.i_crit_edge:  ; preds = %while.cond.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i.i

while.cond.backedge.i.i.while.body.i.i_crit_edge: ; preds = %while.cond.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i.i

if.end91.i.i:                                     ; preds = %while.body.i.i
  br i1 %tobool64.not.i.i, label %if.end91.i.i.cond.false119.i.i_crit_edge, label %land.lhs.true96.i.i

if.end91.i.i.cond.false119.i.i_crit_edge:         ; preds = %if.end91.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false119.i.i

land.lhs.true96.i.i:                              ; preds = %if.end91.i.i
  %122 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %funcs, align 4
  %tobool100.not.i.i = icmp eq ptr %123, null
  br i1 %tobool100.not.i.i, label %land.lhs.true96.i.i.cond.false119.i.i_crit_edge, label %land.lhs.true101.i.i

land.lhs.true96.i.i.cond.false119.i.i_crit_edge:  ; preds = %land.lhs.true96.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false119.i.i

land.lhs.true101.i.i:                             ; preds = %land.lhs.true96.i.i
  %sriov_wreg105.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %123, i32 0, i32 12
  %124 = ptrtoint ptr %sriov_wreg105.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %sriov_wreg105.i.i, align 4
  %tobool106.not.i.i = icmp eq ptr %125, null
  br i1 %tobool106.not.i.i, label %land.lhs.true101.i.i.cond.false119.i.i_crit_edge, label %cond.true107.i.i

land.lhs.true101.i.i.cond.false119.i.i_crit_edge: ; preds = %land.lhs.true101.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false119.i.i

cond.true107.i.i:                                 ; preds = %land.lhs.true101.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %126 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx115.i.i = getelementptr i32, ptr %127, i32 1
  %128 = ptrtoint ptr %arrayidx115.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx115.i.i, align 4
  %add116.i.i = add i32 %129, 19565
  tail call void %125(ptr noundef %adev, i32 noundef %add116.i.i, i32 noundef %105, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end127.i.i

cond.false119.i.i:                                ; preds = %land.lhs.true101.i.i.cond.false119.i.i_crit_edge, %land.lhs.true96.i.i.cond.false119.i.i_crit_edge, %if.end91.i.i.cond.false119.i.i_crit_edge
  %130 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx123.i.i = getelementptr i32, ptr %131, i32 1
  %132 = ptrtoint ptr %arrayidx123.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %arrayidx123.i.i, align 4
  %add124.i.i = add i32 %133, 19565
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add124.i.i, i32 noundef %105, i32 noundef 0) #15
  br label %cond.end127.i.i

cond.end127.i.i:                                  ; preds = %cond.false119.i.i, %cond.true107.i.i
  %i.4.i.i = add nuw i32 %i.215.i.i, 1
  %134 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %virt, align 8
  %and130.i.i = and i32 %135, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and130.i.i)
  %tobool131.not.i.i = icmp eq i32 %and130.i.i, 0
  br i1 %tobool131.not.i.i, label %cond.end127.i.i.cond.false155.i.i_crit_edge, label %land.lhs.true132.i.i

cond.end127.i.i.cond.false155.i.i_crit_edge:      ; preds = %cond.end127.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false155.i.i

land.lhs.true132.i.i:                             ; preds = %cond.end127.i.i
  %136 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %funcs, align 4
  %tobool136.not.i.i = icmp eq ptr %137, null
  br i1 %tobool136.not.i.i, label %land.lhs.true132.i.i.cond.false155.i.i_crit_edge, label %land.lhs.true137.i.i

land.lhs.true132.i.i.cond.false155.i.i_crit_edge: ; preds = %land.lhs.true132.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false155.i.i

land.lhs.true137.i.i:                             ; preds = %land.lhs.true132.i.i
  %sriov_wreg141.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %137, i32 0, i32 12
  %138 = ptrtoint ptr %sriov_wreg141.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %sriov_wreg141.i.i, align 4
  %tobool142.not.i.i = icmp eq ptr %139, null
  br i1 %tobool142.not.i.i, label %land.lhs.true137.i.i.cond.false155.i.i_crit_edge, label %cond.true143.i.i

land.lhs.true137.i.i.cond.false155.i.i_crit_edge: ; preds = %land.lhs.true137.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false155.i.i

cond.true143.i.i:                                 ; preds = %land.lhs.true137.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %140 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx151.i.i = getelementptr i32, ptr %141, i32 1
  %142 = ptrtoint ptr %arrayidx151.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %arrayidx151.i.i, align 4
  %add152.i.i = add i32 %143, 19565
  %arrayidx154.i.i = getelementptr i32, ptr %call.i.i, i32 %i.4.i.i
  %144 = ptrtoint ptr %arrayidx154.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %arrayidx154.i.i, align 4
  tail call void %139(ptr noundef %adev, i32 noundef %add152.i.i, i32 noundef %145, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end163.i.i

cond.false155.i.i:                                ; preds = %land.lhs.true137.i.i.cond.false155.i.i_crit_edge, %land.lhs.true132.i.i.cond.false155.i.i_crit_edge, %cond.end127.i.i.cond.false155.i.i_crit_edge
  %146 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx159.i.i = getelementptr i32, ptr %147, i32 1
  %148 = ptrtoint ptr %arrayidx159.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %arrayidx159.i.i, align 4
  %add160.i.i = add i32 %149, 19565
  %arrayidx162.i.i = getelementptr i32, ptr %call.i.i, i32 %i.4.i.i
  %150 = ptrtoint ptr %arrayidx162.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %arrayidx162.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add160.i.i, i32 noundef %151, i32 noundef 0) #15
  br label %cond.end163.i.i

cond.end163.i.i:                                  ; preds = %cond.false155.i.i, %cond.true143.i.i
  %i.5.i.i = add i32 %i.215.i.i, 2
  %arrayidx167.i.i = getelementptr i32, ptr %call.i.i, i32 %i.5.i.i
  %152 = ptrtoint ptr %arrayidx167.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %arrayidx167.i.i, align 4
  %154 = ptrtoint ptr %unique_indirect_regs.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %unique_indirect_regs.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %155)
  %cmp169.i.i = icmp eq i32 %153, %155
  br i1 %cmp169.i.i, label %cond.end163.i.i.if.then170.i.i_crit_edge, label %for.inc204.i.i

cond.end163.i.i.if.then170.i.i_crit_edge:         ; preds = %cond.end163.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

if.then170.i.i:                                   ; preds = %for.inc204.6.i.i.if.then170.i.i_crit_edge, %for.inc204.5.i.i.if.then170.i.i_crit_edge, %for.inc204.4.i.i.if.then170.i.i_crit_edge, %for.inc204.3.i.i.if.then170.i.i_crit_edge, %for.inc204.2.i.i.if.then170.i.i_crit_edge, %for.inc204.1.i.i.if.then170.i.i_crit_edge, %for.inc204.i.i.if.then170.i.i_crit_edge, %cond.end163.i.i.if.then170.i.i_crit_edge
  %j.012.lcssa.i.i = phi i32 [ 0, %cond.end163.i.i.if.then170.i.i_crit_edge ], [ 1, %for.inc204.i.i.if.then170.i.i_crit_edge ], [ 2, %for.inc204.1.i.i.if.then170.i.i_crit_edge ], [ 3, %for.inc204.2.i.i.if.then170.i.i_crit_edge ], [ 4, %for.inc204.3.i.i.if.then170.i.i_crit_edge ], [ 5, %for.inc204.4.i.i.if.then170.i.i_crit_edge ], [ 6, %for.inc204.5.i.i.if.then170.i.i_crit_edge ], [ 7, %for.inc204.6.i.i.if.then170.i.i_crit_edge ]
  %156 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %virt, align 8
  %and173.i.i = and i32 %157, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and173.i.i)
  %tobool174.not.i.i = icmp eq i32 %and173.i.i, 0
  br i1 %tobool174.not.i.i, label %if.then170.i.i.cond.false196.i.i_crit_edge, label %land.lhs.true175.i.i

if.then170.i.i.cond.false196.i.i_crit_edge:       ; preds = %if.then170.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false196.i.i

land.lhs.true175.i.i:                             ; preds = %if.then170.i.i
  %158 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %funcs, align 4
  %tobool179.not.i.i = icmp eq ptr %159, null
  br i1 %tobool179.not.i.i, label %land.lhs.true175.i.i.cond.false196.i.i_crit_edge, label %land.lhs.true180.i.i

land.lhs.true175.i.i.cond.false196.i.i_crit_edge: ; preds = %land.lhs.true175.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false196.i.i

land.lhs.true180.i.i:                             ; preds = %land.lhs.true175.i.i
  %sriov_wreg184.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %159, i32 0, i32 12
  %160 = ptrtoint ptr %sriov_wreg184.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %sriov_wreg184.i.i, align 4
  %tobool185.not.i.i = icmp eq ptr %161, null
  br i1 %tobool185.not.i.i, label %land.lhs.true180.i.i.cond.false196.i.i_crit_edge, label %cond.true186.i.i

land.lhs.true180.i.i.cond.false196.i.i_crit_edge: ; preds = %land.lhs.true180.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false196.i.i

cond.true186.i.i:                                 ; preds = %land.lhs.true180.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %162 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx194.i.i = getelementptr i32, ptr %163, i32 1
  %164 = ptrtoint ptr %arrayidx194.i.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %arrayidx194.i.i, align 4
  %add195.i.i = add i32 %165, 19565
  tail call void %161(ptr noundef %adev, i32 noundef %add195.i.i, i32 noundef %j.012.lcssa.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %while.cond.backedge.i.i

cond.false196.i.i:                                ; preds = %land.lhs.true180.i.i.cond.false196.i.i_crit_edge, %land.lhs.true175.i.i.cond.false196.i.i_crit_edge, %if.then170.i.i.cond.false196.i.i_crit_edge
  %166 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx200.i.i = getelementptr i32, ptr %167, i32 1
  %168 = ptrtoint ptr %arrayidx200.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %arrayidx200.i.i, align 4
  %add201.i.i = add i32 %169, 19565
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add201.i.i, i32 noundef %j.012.lcssa.i.i, i32 noundef 0) #15
  br label %while.cond.backedge.i.i

for.inc204.i.i:                                   ; preds = %cond.end163.i.i
  %170 = ptrtoint ptr %arrayidx168.1.i.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %arrayidx168.1.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %171)
  %cmp169.1.i.i = icmp eq i32 %153, %171
  br i1 %cmp169.1.i.i, label %for.inc204.i.i.if.then170.i.i_crit_edge, label %for.inc204.1.i.i

for.inc204.i.i.if.then170.i.i_crit_edge:          ; preds = %for.inc204.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

for.inc204.1.i.i:                                 ; preds = %for.inc204.i.i
  %172 = ptrtoint ptr %arrayidx168.2.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %arrayidx168.2.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %173)
  %cmp169.2.i.i = icmp eq i32 %153, %173
  br i1 %cmp169.2.i.i, label %for.inc204.1.i.i.if.then170.i.i_crit_edge, label %for.inc204.2.i.i

for.inc204.1.i.i.if.then170.i.i_crit_edge:        ; preds = %for.inc204.1.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

for.inc204.2.i.i:                                 ; preds = %for.inc204.1.i.i
  %174 = ptrtoint ptr %arrayidx168.3.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %arrayidx168.3.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %175)
  %cmp169.3.i.i = icmp eq i32 %153, %175
  br i1 %cmp169.3.i.i, label %for.inc204.2.i.i.if.then170.i.i_crit_edge, label %for.inc204.3.i.i

for.inc204.2.i.i.if.then170.i.i_crit_edge:        ; preds = %for.inc204.2.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

for.inc204.3.i.i:                                 ; preds = %for.inc204.2.i.i
  %176 = ptrtoint ptr %arrayidx168.4.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %arrayidx168.4.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %177)
  %cmp169.4.i.i = icmp eq i32 %153, %177
  br i1 %cmp169.4.i.i, label %for.inc204.3.i.i.if.then170.i.i_crit_edge, label %for.inc204.4.i.i

for.inc204.3.i.i.if.then170.i.i_crit_edge:        ; preds = %for.inc204.3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

for.inc204.4.i.i:                                 ; preds = %for.inc204.3.i.i
  %178 = ptrtoint ptr %arrayidx168.5.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %arrayidx168.5.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %179)
  %cmp169.5.i.i = icmp eq i32 %153, %179
  br i1 %cmp169.5.i.i, label %for.inc204.4.i.i.if.then170.i.i_crit_edge, label %for.inc204.5.i.i

for.inc204.4.i.i.if.then170.i.i_crit_edge:        ; preds = %for.inc204.4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

for.inc204.5.i.i:                                 ; preds = %for.inc204.4.i.i
  %180 = ptrtoint ptr %arrayidx168.6.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %arrayidx168.6.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %181)
  %cmp169.6.i.i = icmp eq i32 %153, %181
  br i1 %cmp169.6.i.i, label %for.inc204.5.i.i.if.then170.i.i_crit_edge, label %for.inc204.6.i.i

for.inc204.5.i.i.if.then170.i.i_crit_edge:        ; preds = %for.inc204.5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

for.inc204.6.i.i:                                 ; preds = %for.inc204.5.i.i
  %182 = ptrtoint ptr %arrayidx168.7.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %arrayidx168.7.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %153, i32 %183)
  %cmp169.7.i.i = icmp eq i32 %153, %183
  br i1 %cmp169.7.i.i, label %for.inc204.6.i.i.if.then170.i.i_crit_edge, label %for.inc204.7.i.i

for.inc204.6.i.i.if.then170.i.i_crit_edge:        ; preds = %for.inc204.6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170.i.i

for.inc204.7.i.i:                                 ; preds = %for.inc204.6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2905, 0\0A.popsection", ""() #15, !srcloc !1032
  unreachable

while.end.i.i:                                    ; preds = %while.cond.backedge.i.i.while.end.i.i_crit_edge, %while.cond.preheader.i.i.while.end.i.i_crit_edge
  %184 = ptrtoint ptr %reg_list_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %reg_list_size_bytes.i.i, align 8
  %shr222.i.i = lshr i32 %185, 3
  %186 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx227.i.i = getelementptr i32, ptr %187, i32 1
  %188 = ptrtoint ptr %arrayidx227.i.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %arrayidx227.i.i, align 4
  %add228.i.i = add i32 %189, 19564
  %reg_restore_list_size.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 19
  %190 = ptrtoint ptr %reg_restore_list_size.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %reg_restore_list_size.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add228.i.i, i32 noundef %191, i32 noundef 0) #15
  %192 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx234.i.i = getelementptr i32, ptr %193, i32 1
  %194 = ptrtoint ptr %arrayidx234.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %arrayidx234.i.i, align 4
  %add235.i.i = add i32 %195, 19565
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add235.i.i, i32 noundef %shr222.i.i, i32 noundef 0) #15
  %196 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx239.i.i = getelementptr i32, ptr %197, i32 1
  %198 = ptrtoint ptr %arrayidx239.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %arrayidx239.i.i, align 4
  %add240.i.i = add i32 %199, 19564
  %starting_offsets_start.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 22
  %200 = ptrtoint ptr %starting_offsets_start.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %starting_offsets_start.i.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add240.i.i, i32 noundef %201, i32 noundef 0) #15
  %202 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.i.i = getelementptr i32, ptr %203, i32 1
  %204 = ptrtoint ptr %arrayidx249.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %arrayidx249.i.i, align 4
  %add250.i.i = add i32 %205, 19565
  %206 = ptrtoint ptr %indirect_start_offsets.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %indirect_start_offsets.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.i.i, i32 noundef %207, i32 noundef 0) #15
  %208 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.1.i.i = getelementptr i32, ptr %209, i32 1
  %210 = ptrtoint ptr %arrayidx249.1.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %arrayidx249.1.i.i, align 4
  %add250.1.i.i = add i32 %211, 19565
  %arrayidx251.1.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 1
  %212 = ptrtoint ptr %arrayidx251.1.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %arrayidx251.1.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.1.i.i, i32 noundef %213, i32 noundef 0) #15
  %214 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.2.i.i = getelementptr i32, ptr %215, i32 1
  %216 = ptrtoint ptr %arrayidx249.2.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx249.2.i.i, align 4
  %add250.2.i.i = add i32 %217, 19565
  %arrayidx251.2.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 2
  %218 = ptrtoint ptr %arrayidx251.2.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %arrayidx251.2.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.2.i.i, i32 noundef %219, i32 noundef 0) #15
  %220 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.3.i.i = getelementptr i32, ptr %221, i32 1
  %222 = ptrtoint ptr %arrayidx249.3.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %arrayidx249.3.i.i, align 4
  %add250.3.i.i = add i32 %223, 19565
  %arrayidx251.3.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 3
  %224 = ptrtoint ptr %arrayidx251.3.i.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %arrayidx251.3.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.3.i.i, i32 noundef %225, i32 noundef 0) #15
  %226 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.4.i.i = getelementptr i32, ptr %227, i32 1
  %228 = ptrtoint ptr %arrayidx249.4.i.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %arrayidx249.4.i.i, align 4
  %add250.4.i.i = add i32 %229, 19565
  %arrayidx251.4.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 4
  %230 = ptrtoint ptr %arrayidx251.4.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %arrayidx251.4.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.4.i.i, i32 noundef %231, i32 noundef 0) #15
  %232 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.5.i.i = getelementptr i32, ptr %233, i32 1
  %234 = ptrtoint ptr %arrayidx249.5.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %arrayidx249.5.i.i, align 4
  %add250.5.i.i = add i32 %235, 19565
  %arrayidx251.5.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 5
  %236 = ptrtoint ptr %arrayidx251.5.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %arrayidx251.5.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.5.i.i, i32 noundef %237, i32 noundef 0) #15
  %238 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.6.i.i = getelementptr i32, ptr %239, i32 1
  %240 = ptrtoint ptr %arrayidx249.6.i.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %arrayidx249.6.i.i, align 4
  %add250.6.i.i = add i32 %241, 19565
  %arrayidx251.6.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 6
  %242 = ptrtoint ptr %arrayidx251.6.i.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %arrayidx251.6.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.6.i.i, i32 noundef %243, i32 noundef 0) #15
  %244 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.7.i.i = getelementptr i32, ptr %245, i32 1
  %246 = ptrtoint ptr %arrayidx249.7.i.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %arrayidx249.7.i.i, align 4
  %add250.7.i.i = add i32 %247, 19565
  %arrayidx251.7.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 7
  %248 = ptrtoint ptr %arrayidx251.7.i.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %arrayidx251.7.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.7.i.i, i32 noundef %249, i32 noundef 0) #15
  %250 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.8.i.i = getelementptr i32, ptr %251, i32 1
  %252 = ptrtoint ptr %arrayidx249.8.i.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %arrayidx249.8.i.i, align 4
  %add250.8.i.i = add i32 %253, 19565
  %arrayidx251.8.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 8
  %254 = ptrtoint ptr %arrayidx251.8.i.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %arrayidx251.8.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.8.i.i, i32 noundef %255, i32 noundef 0) #15
  %256 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx249.9.i.i = getelementptr i32, ptr %257, i32 1
  %258 = ptrtoint ptr %arrayidx249.9.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %arrayidx249.9.i.i, align 4
  %add250.9.i.i = add i32 %259, 19565
  %arrayidx251.9.i.i = getelementptr inbounds [10 x i32], ptr %indirect_start_offsets.i.i, i32 0, i32 9
  %260 = ptrtoint ptr %arrayidx251.9.i.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %arrayidx251.9.i.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add250.9.i.i, i32 noundef %261, i32 noundef 0) #15
  br label %for.body257.i.i

for.body257.i.i:                                  ; preds = %for.inc280.i.i.for.body257.i.i_crit_edge, %while.end.i.i
  %i.717.i.i = phi i32 [ %inc281.i.i, %for.inc280.i.i.for.body257.i.i_crit_edge ], [ 0, %while.end.i.i ]
  %arrayidx258.i.i = getelementptr [8 x i32], ptr %unique_indirect_regs.i.i, i32 0, i32 %i.717.i.i
  %262 = ptrtoint ptr %arrayidx258.i.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %arrayidx258.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %263)
  %cmp259.not.i.i = icmp eq i32 %263, 0
  br i1 %cmp259.not.i.i, label %for.body257.i.i.for.inc280.i.i_crit_edge, label %if.then260.i.i

for.body257.i.i.for.inc280.i.i_crit_edge:         ; preds = %for.body257.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc280.i.i

if.then260.i.i:                                   ; preds = %for.body257.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %264 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx264.i.i = getelementptr i32, ptr %265, i32 1
  %266 = ptrtoint ptr %arrayidx264.i.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %arrayidx264.i.i, align 4
  %add265.i.i = add i32 %267, 19595
  %arrayidx266.i.i = getelementptr [8 x i32], ptr @GFX_RLC_SRM_INDEX_CNTL_ADDR_OFFSETS, i32 0, i32 %i.717.i.i
  %268 = ptrtoint ptr %arrayidx266.i.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %arrayidx266.i.i, align 4
  %add267.i.i = add i32 %add265.i.i, %269
  %and269.i.i = and i32 %263, 262143
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add267.i.i, i32 noundef %and269.i.i, i32 noundef 0) #15
  %270 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx273.i.i = getelementptr i32, ptr %271, i32 1
  %272 = ptrtoint ptr %arrayidx273.i.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %arrayidx273.i.i, align 4
  %add274.i.i = add i32 %273, 19603
  %arrayidx275.i.i = getelementptr [8 x i32], ptr @GFX_RLC_SRM_INDEX_CNTL_DATA_OFFSETS, i32 0, i32 %i.717.i.i
  %274 = ptrtoint ptr %arrayidx275.i.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %arrayidx275.i.i, align 4
  %add276.i.i = add i32 %add274.i.i, %275
  %shr278.i.i = ashr i32 %263, 20
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add276.i.i, i32 noundef %shr278.i.i, i32 noundef 0) #15
  br label %for.inc280.i.i

for.inc280.i.i:                                   ; preds = %if.then260.i.i, %for.body257.i.i.for.inc280.i.i_crit_edge
  %inc281.i.i = add nuw nsw i32 %i.717.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc281.i.i, 8
  br i1 %exitcond.not.i.i, label %for.end282.i.i, label %for.inc280.i.i.for.body257.i.i_crit_edge

for.inc280.i.i.for.body257.i.i_crit_edge:         ; preds = %for.inc280.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body257.i.i

for.end282.i.i:                                   ; preds = %for.inc280.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kfree(ptr noundef nonnull %call.i.i) #15
  br label %gfx_v9_1_init_rlc_save_restore_list.exit.i

gfx_v9_1_init_rlc_save_restore_list.exit.i:       ; preds = %for.end282.i.i, %if.then3.i.gfx_v9_1_init_rlc_save_restore_list.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %indirect_start_offsets.i.i) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %unique_indirect_regs.i.i) #15
  br label %if.end.i

if.end.i:                                         ; preds = %gfx_v9_1_init_rlc_save_restore_list.exit.i, %lor.lhs.false.i.if.end.i_crit_edge
  %276 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %virt, align 8
  %and.i56.i = and i32 %277, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i56.i)
  %tobool.not.i57.i = icmp eq i32 %and.i56.i, 0
  br i1 %tobool.not.i57.i, label %if.end.i.cond.false76.sink.split.i.i_crit_edge, label %land.lhs.true.i58.i

if.end.i.cond.false76.sink.split.i.i_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split.i.i

land.lhs.true.i58.i:                              ; preds = %if.end.i
  %278 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %funcs, align 4
  %tobool1.not.i.i = icmp eq ptr %279, null
  br i1 %tobool1.not.i.i, label %land.lhs.true.i58.i.cond.false76.sink.split.i.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i58.i.cond.false76.sink.split.i.i_crit_edge: ; preds = %land.lhs.true.i58.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split.i.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i58.i
  %sriov_wreg.i59.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %279, i32 0, i32 12
  %280 = ptrtoint ptr %sriov_wreg.i59.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %sriov_wreg.i59.i, align 4
  %tobool6.not.i.i = icmp eq ptr %281, null
  %arrayidx46115.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %282 = ptrtoint ptr %arrayidx46115.i.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load ptr, ptr %arrayidx46115.i.i, align 8
  %arrayidx48116.i.i = getelementptr i32, ptr %283, i32 1
  %284 = ptrtoint ptr %arrayidx48116.i.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %arrayidx48116.i.i, align 4
  %add49117.i.i = add i32 %285, 19584
  %sriov_rreg63.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %279, i32 0, i32 13
  %286 = ptrtoint ptr %sriov_rreg63.i.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %sriov_rreg63.i.i, align 4
  %tobool64.not.i66.i = icmp eq ptr %287, null
  br i1 %tobool6.not.i.i, label %land.lhs.true59.i.i, label %cond.true.i62.i

cond.true.i62.i:                                  ; preds = %land.lhs.true2.i.i
  br i1 %tobool64.not.i66.i, label %cond.false.i64.i, label %cond.true27.i.i

cond.true27.i.i:                                  ; preds = %cond.true.i62.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i63.i = tail call i32 %287(ptr noundef %adev, i32 noundef %add49117.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i.i

cond.false.i64.i:                                 ; preds = %cond.true.i62.i
  call void @__sanitizer_cov_trace_pc() #17
  %call42.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add49117.i.i, i32 noundef 0) #15
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i64.i, %cond.true27.i.i
  %cond.i.i = phi i32 [ %call.i63.i, %cond.true27.i.i ], [ %call42.i.i, %cond.false.i64.i ]
  %or.i65.i = or i32 %cond.i.i, 1
  tail call void %281(ptr noundef %adev, i32 noundef %add49117.i.i, i32 noundef %or.i65.i, i32 noundef 0, i32 noundef 1) #15
  br label %if.end4.i

land.lhs.true59.i.i:                              ; preds = %land.lhs.true2.i.i
  br i1 %tobool64.not.i66.i, label %land.lhs.true59.i.i.cond.false76.i.i_crit_edge, label %cond.true65.i.i

land.lhs.true59.i.i.cond.false76.i.i_crit_edge:   ; preds = %land.lhs.true59.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.i.i

cond.true65.i.i:                                  ; preds = %land.lhs.true59.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call75.i.i = tail call i32 %287(ptr noundef %adev, i32 noundef %add49117.i.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end83.i.i

cond.false76.sink.split.i.i:                      ; preds = %land.lhs.true.i58.i.cond.false76.sink.split.i.i_crit_edge, %if.end.i.cond.false76.sink.split.i.i_crit_edge
  %arrayidx46115121.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %288 = ptrtoint ptr %arrayidx46115121.i.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %arrayidx46115121.i.i, align 8
  %arrayidx48116122.i.i = getelementptr i32, ptr %289, i32 1
  %290 = ptrtoint ptr %arrayidx48116122.i.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %arrayidx48116122.i.i, align 4
  %add49117123.i.i = add i32 %291, 19584
  br label %cond.false76.i.i

cond.false76.i.i:                                 ; preds = %cond.false76.sink.split.i.i, %land.lhs.true59.i.i.cond.false76.i.i_crit_edge
  %add49120.i.i = phi i32 [ %add49117.i.i, %land.lhs.true59.i.i.cond.false76.i.i_crit_edge ], [ %add49117123.i.i, %cond.false76.sink.split.i.i ]
  %call82.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add49120.i.i, i32 noundef 0) #15
  br label %cond.end83.i.i

cond.end83.i.i:                                   ; preds = %cond.false76.i.i, %cond.true65.i.i
  %add49118.i.i = phi i32 [ %add49117.i.i, %cond.true65.i.i ], [ %add49120.i.i, %cond.false76.i.i ]
  %cond84.i.i = phi i32 [ %call75.i.i, %cond.true65.i.i ], [ %call82.i.i, %cond.false76.i.i ]
  %or86.i.i = or i32 %cond84.i.i, 1
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49118.i.i, i32 noundef %or86.i.i, i32 noundef 0) #15
  br label %if.end4.i

if.end4.i:                                        ; preds = %cond.end83.i.i, %cond.end.i.i, %cond.end.if.end4.i_crit_edge
  %pg_flags.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 100
  %292 = ptrtoint ptr %pg_flags.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %pg_flags.i, align 4
  %and5.i = and i32 %293, 231
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end4.i.gfx_v9_0_init_pg.exit_crit_edge, label %if.then7.i

if.end4.i.gfx_v9_0_init_pg.exit_crit_edge:        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_pg.exit

if.then7.i:                                       ; preds = %if.end4.i
  %294 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %virt, align 8
  %and8.i = and i32 %295, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %if.then7.i.cond.false.i_crit_edge, label %land.lhs.true.i

if.then7.i.cond.false.i_crit_edge:                ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %if.then7.i
  %296 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %funcs, align 4
  %tobool12.not.i = icmp eq ptr %297, null
  br i1 %tobool12.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true13.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true13.i:                                ; preds = %land.lhs.true.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %297, i32 0, i32 12
  %298 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool17.not.i = icmp eq ptr %299, null
  br i1 %tobool17.not.i, label %land.lhs.true13.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true13.i.cond.false.i_crit_edge:         ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx22.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %300 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %arrayidx22.i, align 8
  %arrayidx24.i = getelementptr i32, ptr %301, i32 1
  %302 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %arrayidx24.i, align 4
  %add.i = add i32 %303, 19486
  %cp_table_gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 11
  %304 = ptrtoint ptr %cp_table_gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %304)
  %305 = load i64, ptr %cp_table_gpu_addr.i, align 8
  %shr.i = lshr i64 %305, 8
  %conv.i = trunc i64 %shr.i to i32
  tail call void %299(ptr noundef %adev, i32 noundef %add.i, i32 noundef %conv.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i

cond.false.i:                                     ; preds = %land.lhs.true13.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %if.then7.i.cond.false.i_crit_edge
  %arrayidx28.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %306 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %arrayidx28.i, align 8
  %arrayidx30.i = getelementptr i32, ptr %307, i32 1
  %308 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %arrayidx30.i, align 4
  %add31.i = add i32 %309, 19486
  %cp_table_gpu_addr34.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 11
  %310 = ptrtoint ptr %cp_table_gpu_addr34.i to i32
  call void @__asan_load8_noabort(i32 %310)
  %311 = load i64, ptr %cp_table_gpu_addr34.i, align 8
  %shr35.i = lshr i64 %311, 8
  %conv36.i = trunc i64 %shr35.i to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add31.i, i32 noundef %conv36.i, i32 noundef 0) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %312 = ptrtoint ptr %pg_flags.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %pg_flags.i, align 4
  %and.i67.i = and i32 %313, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i67.i)
  %tobool.not.i68.i = icmp eq i32 %and.i67.i, 0
  br i1 %tobool.not.i68.i, label %cond.end.i.gfx_v9_0_init_pg.exit_crit_edge, label %if.then.i.i

cond.end.i.gfx_v9_0_init_pg.exit_crit_edge:       ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_pg.exit

if.then.i.i:                                      ; preds = %cond.end.i
  %arrayidx.i69.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %314 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load ptr, ptr %arrayidx.i69.i, align 8
  %316 = ptrtoint ptr %315 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %315, align 4
  %add.i70.i = add i32 %317, 450
  %call.i71.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add.i70.i, i32 noundef 0) #15
  %and3.i.i = and i32 %call.i71.i, 65535
  %or.i72.i = or i32 %and3.i.i, 6291456
  %318 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %arrayidx.i69.i, align 8
  %320 = ptrtoint ptr %319 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %319, align 4
  %add8.i.i = add i32 %321, 450
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add8.i.i, i32 noundef %or.i72.i, i32 noundef 0) #15
  %322 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load ptr, ptr %arrayidx.i69.i, align 8
  %arrayidx16.i73.i = getelementptr i32, ptr %323, i32 1
  %324 = ptrtoint ptr %arrayidx16.i73.i to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load i32, ptr %arrayidx16.i73.i, align 4
  %add17.i74.i = add i32 %325, 19533
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17.i74.i, i32 noundef 1074794512, i32 noundef 0) #15
  %326 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %arrayidx.i69.i, align 8
  %arrayidx21.i75.i = getelementptr i32, ptr %327, i32 1
  %328 = ptrtoint ptr %arrayidx21.i75.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load i32, ptr %arrayidx21.i75.i, align 4
  %add22.i76.i = add i32 %329, 19487
  %call23.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add22.i76.i, i32 noundef 0) #15
  %and24.i.i = and i32 %call23.i.i, -65281
  %or25.i.i = or i32 %and24.i.i, 1024
  %330 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %arrayidx.i69.i, align 8
  %arrayidx29.i77.i = getelementptr i32, ptr %331, i32 1
  %332 = ptrtoint ptr %arrayidx29.i77.i to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %arrayidx29.i77.i, align 4
  %add30.i78.i = add i32 %333, 19487
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add30.i78.i, i32 noundef %or25.i.i, i32 noundef 0) #15
  %334 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %arrayidx.i69.i, align 8
  %arrayidx34.i.i = getelementptr i32, ptr %335, i32 1
  %336 = ptrtoint ptr %arrayidx34.i.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load i32, ptr %arrayidx34.i.i, align 4
  %add35.i.i = add i32 %337, 19576
  %call36.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add35.i.i, i32 noundef 0) #15
  %or38.i.i = or i32 %call36.i.i, 255
  %338 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load ptr, ptr %arrayidx.i69.i, align 8
  %arrayidx42.i.i = getelementptr i32, ptr %339, i32 1
  %340 = ptrtoint ptr %arrayidx42.i.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %arrayidx42.i.i, align 4
  %add43.i.i = add i32 %341, 19576
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add43.i.i, i32 noundef %or38.i.i, i32 noundef 0) #15
  %342 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load ptr, ptr %arrayidx.i69.i, align 8
  %arrayidx47.i.i = getelementptr i32, ptr %343, i32 1
  %344 = ptrtoint ptr %arrayidx47.i.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %arrayidx47.i.i, align 4
  %add48.i.i = add i32 %345, 19541
  %call49.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add48.i.i, i32 noundef 0) #15
  %and50.i.i = and i32 %call49.i.i, -524281
  %or51.i.i = or i32 %and50.i.i, 176000
  %346 = ptrtoint ptr %arrayidx.i69.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %arrayidx.i69.i, align 8
  %arrayidx55.i.i = getelementptr i32, ptr %347, i32 1
  %348 = ptrtoint ptr %arrayidx55.i.i to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %arrayidx55.i.i, align 4
  %add56.i.i = add i32 %349, 19541
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add56.i.i, i32 noundef %or51.i.i, i32 noundef 0) #15
  %arrayidx57.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %350 = ptrtoint ptr %arrayidx57.i.i to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load i32, ptr %arrayidx57.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590592, i32 %351)
  %cmp.not.i.i = icmp eq i32 %351, 590592
  br i1 %cmp.not.i.i, label %if.then.i.i.gfx_v9_0_init_pg.exit_crit_edge, label %if.then59.i.i

if.then.i.i.gfx_v9_0_init_pg.exit_crit_edge:      ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_pg.exit

if.then59.i.i:                                    ; preds = %if.then.i.i
  %arrayidx.i.i79.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 23
  %352 = ptrtoint ptr %arrayidx.i.i79.i to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %arrayidx.i.i79.i, align 8
  %354 = ptrtoint ptr %353 to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %353, align 4
  %add.i.i80.i = add i32 %355, 387
  %call.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add.i.i80.i, i32 noundef 0) #15
  %or.i.i.i = or i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i.i, i32 %or.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %call.i.i.i, %or.i.i.i
  br i1 %cmp.not.i.i.i, label %if.then59.i.i.if.end.i.i81.i_crit_edge, label %if.then3.i.i.i

if.then59.i.i.if.end.i.i81.i_crit_edge:           ; preds = %if.then59.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i81.i

if.then3.i.i.i:                                   ; preds = %if.then59.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %356 = ptrtoint ptr %arrayidx.i.i79.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load ptr, ptr %arrayidx.i.i79.i, align 8
  %358 = ptrtoint ptr %357 to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load i32, ptr %357, align 4
  %add8.i.i.i = add i32 %359, 387
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add8.i.i.i, i32 noundef %or.i.i.i, i32 noundef 0) #15
  br label %if.end.i.i81.i

if.end.i.i81.i:                                   ; preds = %if.then3.i.i.i, %if.then59.i.i.if.end.i.i81.i_crit_edge
  %and.i.i.i = and i32 %or.i.i.i, -7
  %or9.i.i.i = or i32 %and.i.i.i, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i.i, i32 %or9.i.i.i)
  %cmp10.not.i.i.i = icmp eq i32 %call.i.i.i, %or9.i.i.i
  br i1 %cmp10.not.i.i.i, label %if.end.i.i81.i.gfx_v9_0_init_pg.exit_crit_edge, label %if.then11.i.i.i

if.end.i.i81.i.gfx_v9_0_init_pg.exit_crit_edge:   ; preds = %if.end.i.i81.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_pg.exit

if.then11.i.i.i:                                  ; preds = %if.end.i.i81.i
  call void @__sanitizer_cov_trace_pc() #17
  %360 = ptrtoint ptr %arrayidx.i.i79.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load ptr, ptr %arrayidx.i.i79.i, align 8
  %362 = ptrtoint ptr %361 to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load i32, ptr %361, align 4
  %add16.i.i.i = add i32 %363, 387
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add16.i.i.i, i32 noundef %or9.i.i.i, i32 noundef 0) #15
  br label %gfx_v9_0_init_pg.exit

gfx_v9_0_init_pg.exit:                            ; preds = %if.then11.i.i.i, %if.end.i.i81.i.gfx_v9_0_init_pg.exit_crit_edge, %if.then.i.i.gfx_v9_0_init_pg.exit_crit_edge, %cond.end.i.gfx_v9_0_init_pg.exit_crit_edge, %if.end4.i.gfx_v9_0_init_pg.exit_crit_edge
  %load_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %364 = ptrtoint ptr %load_type to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load i32, ptr %load_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %365)
  %cmp.not = icmp eq i32 %365, 2
  br i1 %cmp.not, label %gfx_v9_0_init_pg.exit.if.end29_crit_edge, label %if.then25

gfx_v9_0_init_pg.exit.if.end29_crit_edge:         ; preds = %gfx_v9_0_init_pg.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.then25:                                        ; preds = %gfx_v9_0_init_pg.exit
  %rlc_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 15
  %366 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load ptr, ptr %rlc_fw.i, align 4
  %tobool.not.i66 = icmp eq ptr %367, null
  br i1 %tobool.not.i66, label %if.then25.cleanup_crit_edge, label %if.end.i69

if.then25.cleanup_crit_edge:                      ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i69:                                       ; preds = %if.then25
  %data.i = getelementptr inbounds %struct.firmware, ptr %367, i32 0, i32 1
  %368 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %data.i, align 4
  tail call void @amdgpu_ucode_print_rlc_hdr(ptr noundef %369) #15
  %370 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load ptr, ptr %rlc_fw.i, align 4
  %data5.i = getelementptr inbounds %struct.firmware, ptr %371, i32 0, i32 1
  %372 = ptrtoint ptr %data5.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %data5.i, align 4
  %ucode_array_offset_bytes.i = getelementptr inbounds %struct.common_firmware_header, ptr %369, i32 0, i32 8
  %374 = ptrtoint ptr %ucode_array_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %ucode_array_offset_bytes.i, align 4
  %376 = tail call i32 @llvm.bswap.i32(i32 %375) #15
  %add.ptr.i = getelementptr i8, ptr %373, i32 %376
  %ucode_size_bytes.i = getelementptr inbounds %struct.common_firmware_header, ptr %369, i32 0, i32 7
  %377 = ptrtoint ptr %ucode_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %ucode_size_bytes.i, align 4
  %379 = tail call i32 @llvm.bswap.i32(i32 %378) #15
  %div137.i = lshr i32 %379, 2
  %380 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load i32, ptr %virt, align 8
  %and.i68 = and i32 %381, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i68)
  %tobool8.not.i = icmp eq i32 %and.i68, 0
  br i1 %tobool8.not.i, label %if.end.i69.cond.false.i76_crit_edge, label %land.lhs.true.i71

if.end.i69.cond.false.i76_crit_edge:              ; preds = %if.end.i69
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i76

land.lhs.true.i71:                                ; preds = %if.end.i69
  %382 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %funcs, align 4
  %tobool10.not.i = icmp eq ptr %383, null
  br i1 %tobool10.not.i, label %land.lhs.true.i71.cond.false.i76_crit_edge, label %land.lhs.true11.i

land.lhs.true.i71.cond.false.i76_crit_edge:       ; preds = %land.lhs.true.i71
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i76

land.lhs.true11.i:                                ; preds = %land.lhs.true.i71
  %sriov_wreg.i72 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %383, i32 0, i32 12
  %384 = ptrtoint ptr %sriov_wreg.i72 to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load ptr, ptr %sriov_wreg.i72, align 4
  %tobool15.not.i = icmp eq ptr %385, null
  br i1 %tobool15.not.i, label %land.lhs.true11.i.cond.false.i76_crit_edge, label %cond.true.i75

land.lhs.true11.i.cond.false.i76_crit_edge:       ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i76

cond.true.i75:                                    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i73 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %386 = ptrtoint ptr %arrayidx.i73 to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load ptr, ptr %arrayidx.i73, align 8
  %arrayidx21.i = getelementptr i32, ptr %387, i32 1
  %388 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %arrayidx21.i, align 4
  %add.i74 = add i32 %389, 22588
  tail call void %385(ptr noundef %adev, i32 noundef %add.i74, i32 noundef 8192, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i77

cond.false.i76:                                   ; preds = %land.lhs.true11.i.cond.false.i76_crit_edge, %land.lhs.true.i71.cond.false.i76_crit_edge, %if.end.i69.cond.false.i76_crit_edge
  %arrayidx23.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %390 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %arrayidx23.i, align 8
  %arrayidx25.i = getelementptr i32, ptr %391, i32 1
  %392 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %arrayidx25.i, align 4
  %add26.i = add i32 %393, 22588
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add26.i, i32 noundef 8192, i32 noundef 0) #15
  br label %cond.end.i77

cond.end.i77:                                     ; preds = %cond.false.i76, %cond.true.i75
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %379)
  %cmp138.not.i = icmp ult i32 %379, 4
  br i1 %cmp138.not.i, label %cond.end.i77.for.end.i_crit_edge, label %for.body.lr.ph.i

cond.end.i77.for.end.i_crit_edge:                 ; preds = %cond.end.i77
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %cond.end.i77
  %arrayidx48.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %umax.i = tail call i32 @llvm.umax.i32(i32 %div137.i, i32 1) #15
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0141.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %fw_data.0139.i = phi ptr [ %add.ptr.i, %for.body.lr.ph.i ], [ %fw_data.1.i, %for.inc.i.for.body.i_crit_edge ]
  %394 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load i32, ptr %virt, align 8
  %and29.i = and i32 %395, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i)
  %tobool30.not.i = icmp eq i32 %and29.i, 0
  br i1 %tobool30.not.i, label %for.body.i.cond.false52.i_crit_edge, label %land.lhs.true31.i

for.body.i.cond.false52.i_crit_edge:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false52.i

land.lhs.true31.i:                                ; preds = %for.body.i
  %396 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load ptr, ptr %funcs, align 4
  %tobool35.not.i = icmp eq ptr %397, null
  br i1 %tobool35.not.i, label %land.lhs.true31.i.cond.false52.i_crit_edge, label %land.lhs.true36.i

land.lhs.true31.i.cond.false52.i_crit_edge:       ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false52.i

land.lhs.true36.i:                                ; preds = %land.lhs.true31.i
  %sriov_wreg40.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %397, i32 0, i32 12
  %398 = ptrtoint ptr %sriov_wreg40.i to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load ptr, ptr %sriov_wreg40.i, align 4
  %tobool41.not.i = icmp eq ptr %399, null
  br i1 %tobool41.not.i, label %land.lhs.true36.i.cond.false52.i_crit_edge, label %cond.true42.i

land.lhs.true36.i.cond.false52.i_crit_edge:       ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false52.i

cond.true42.i:                                    ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #17
  %400 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load ptr, ptr %arrayidx48.i, align 8
  %arrayidx50.i = getelementptr i32, ptr %401, i32 1
  %402 = ptrtoint ptr %arrayidx50.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %arrayidx50.i, align 4
  %add51.i = add i32 %403, 22589
  %404 = ptrtoint ptr %fw_data.0139.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %fw_data.0139.i, align 4
  %406 = tail call i32 @llvm.bswap.i32(i32 %405) #15
  tail call void %399(ptr noundef %adev, i32 noundef %add51.i, i32 noundef %406, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc.i

cond.false52.i:                                   ; preds = %land.lhs.true36.i.cond.false52.i_crit_edge, %land.lhs.true31.i.cond.false52.i_crit_edge, %for.body.i.cond.false52.i_crit_edge
  %407 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load ptr, ptr %arrayidx48.i, align 8
  %arrayidx56.i = getelementptr i32, ptr %408, i32 1
  %409 = ptrtoint ptr %arrayidx56.i to i32
  call void @__asan_load4_noabort(i32 %409)
  %410 = load i32, ptr %arrayidx56.i, align 4
  %add57.i = add i32 %410, 22589
  %411 = ptrtoint ptr %fw_data.0139.i to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load i32, ptr %fw_data.0139.i, align 4
  %413 = tail call i32 @llvm.bswap.i32(i32 %412) #15
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add57.i, i32 noundef %413, i32 noundef 0) #15
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.false52.i, %cond.true42.i
  %fw_data.1.i = getelementptr i32, ptr %fw_data.0139.i, i32 1
  %inc.i = add nuw nsw i32 %i.0141.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %umax.i
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %cond.end.i77.for.end.i_crit_edge
  %414 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load i32, ptr %virt, align 8
  %and63.i = and i32 %415, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63.i)
  %tobool64.not.i = icmp eq i32 %and63.i, 0
  br i1 %tobool64.not.i, label %for.end.i.cond.false87.i_crit_edge, label %land.lhs.true65.i

for.end.i.cond.false87.i_crit_edge:               ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false87.i

land.lhs.true65.i:                                ; preds = %for.end.i
  %416 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load ptr, ptr %funcs, align 4
  %tobool69.not.i = icmp eq ptr %417, null
  br i1 %tobool69.not.i, label %land.lhs.true65.i.cond.false87.i_crit_edge, label %land.lhs.true70.i

land.lhs.true65.i.cond.false87.i_crit_edge:       ; preds = %land.lhs.true65.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false87.i

land.lhs.true70.i:                                ; preds = %land.lhs.true65.i
  %sriov_wreg74.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %417, i32 0, i32 12
  %418 = ptrtoint ptr %sriov_wreg74.i to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load ptr, ptr %sriov_wreg74.i, align 4
  %tobool75.not.i = icmp eq ptr %419, null
  br i1 %tobool75.not.i, label %land.lhs.true70.i.cond.false87.i_crit_edge, label %cond.true76.i

land.lhs.true70.i.cond.false87.i_crit_edge:       ; preds = %land.lhs.true70.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false87.i

cond.true76.i:                                    ; preds = %land.lhs.true70.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx82.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %420 = ptrtoint ptr %arrayidx82.i to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load ptr, ptr %arrayidx82.i, align 8
  %arrayidx84.i = getelementptr i32, ptr %421, i32 1
  %422 = ptrtoint ptr %arrayidx84.i to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load i32, ptr %arrayidx84.i, align 4
  %add85.i = add i32 %423, 22588
  %rlc_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 16
  %424 = ptrtoint ptr %rlc_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load i32, ptr %rlc_fw_version.i, align 8
  tail call void %419(ptr noundef %adev, i32 noundef %add85.i, i32 noundef %425, i32 noundef 0, i32 noundef 1) #15
  br label %if.end29

cond.false87.i:                                   ; preds = %land.lhs.true70.i.cond.false87.i_crit_edge, %land.lhs.true65.i.cond.false87.i_crit_edge, %for.end.i.cond.false87.i_crit_edge
  %arrayidx89.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %426 = ptrtoint ptr %arrayidx89.i to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load ptr, ptr %arrayidx89.i, align 8
  %arrayidx91.i = getelementptr i32, ptr %427, i32 1
  %428 = ptrtoint ptr %arrayidx91.i to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load i32, ptr %arrayidx91.i, align 4
  %add92.i = add i32 %429, 22588
  %rlc_fw_version94.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 16
  %430 = ptrtoint ptr %rlc_fw_version94.i to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %rlc_fw_version94.i, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add92.i, i32 noundef %431, i32 noundef 0) #15
  br label %if.end29

if.end29:                                         ; preds = %cond.false87.i, %cond.true76.i, %gfx_v9_0_init_pg.exit.if.end29_crit_edge
  %arrayidx30 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %432 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load i32, ptr %arrayidx30, align 4
  %434 = zext i32 %433 to i64
  call void @__sanitizer_cov_trace_switch(i64 %434, ptr @__sancov_gen_cov_switch_values.410)
  switch i32 %433, label %if.end29.sw.epilog_crit_edge [
    i32 590338, label %if.end29.sw.bb_crit_edge
    i32 590080, label %if.end29.sw.bb_crit_edge81
    i32 590848, label %sw.bb35
  ]

if.end29.sw.bb_crit_edge81:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end29.sw.bb_crit_edge:                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb

if.end29.sw.epilog_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end29.sw.bb_crit_edge, %if.end29.sw.bb_crit_edge81
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_lbpw to i32))
  %435 = load i32, ptr @amdgpu_lbpw, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %435)
  %cmp32 = icmp ne i32 %435, 0
  br label %sw.epilog.sink.split

sw.bb35:                                          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_lbpw to i32))
  %436 = load i32, ptr @amdgpu_lbpw, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %436)
  %cmp36 = icmp sgt i32 %436, 0
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb35, %sw.bb
  %.sink = phi i1 [ %cmp32, %sw.bb ], [ %cmp36, %sw.bb35 ]
  tail call fastcc void @gfx_v9_0_enable_lbpw(ptr noundef %adev, i1 noundef zeroext %.sink)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %if.end29.sw.epilog_crit_edge
  %437 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %437)
  %438 = load ptr, ptr %funcs, align 4
  %start = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %438, i32 0, i32 10
  %439 = ptrtoint ptr %start to i32
  call void @__asan_load4_noabort(i32 %439)
  %440 = load ptr, ptr %start, align 4
  tail call void %440(ptr noundef %adev) #15
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.then25.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %sw.epilog ], [ -22, %if.then25.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_rlc_stop(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false76.sink.split_crit_edge, label %land.lhs.true

entry.cond.false76.sink.split_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false76.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false76.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true54, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19456
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %and43 = and i32 %cond, -2
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %and43, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end87

land.lhs.true54:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx46117 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx46117 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx46117, align 8
  %arrayidx48118 = getelementptr i32, ptr %14, i32 1
  %15 = ptrtoint ptr %arrayidx48118 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx48118, align 4
  %add49119 = add i32 %16, 19456
  %tobool58.not = icmp eq ptr %.pr, null
  br i1 %tobool58.not, label %land.lhs.true54.cond.false76_crit_edge, label %land.lhs.true59

land.lhs.true54.cond.false76_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %sriov_rreg63 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg63 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg63, align 4
  %tobool64.not = icmp eq ptr %18, null
  br i1 %tobool64.not, label %land.lhs.true59.cond.false76_crit_edge, label %cond.true65

land.lhs.true59.cond.false76_crit_edge:           ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

cond.true65:                                      ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  %call75 = tail call i32 %18(ptr noundef %adev, i32 noundef %add49119, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end83

cond.false76.sink.split:                          ; preds = %land.lhs.true.cond.false76.sink.split_crit_edge, %entry.cond.false76.sink.split_crit_edge
  %arrayidx46117127 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx46117127 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx46117127, align 8
  %arrayidx48118128 = getelementptr i32, ptr %20, i32 1
  %21 = ptrtoint ptr %arrayidx48118128 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx48118128, align 4
  %add49119129 = add i32 %22, 19456
  br label %cond.false76

cond.false76:                                     ; preds = %cond.false76.sink.split, %land.lhs.true59.cond.false76_crit_edge, %land.lhs.true54.cond.false76_crit_edge
  %add49122 = phi i32 [ %add49119, %land.lhs.true59.cond.false76_crit_edge ], [ %add49119, %land.lhs.true54.cond.false76_crit_edge ], [ %add49119129, %cond.false76.sink.split ]
  %call82 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add49122, i32 noundef 0) #15
  br label %cond.end83

cond.end83:                                       ; preds = %cond.false76, %cond.true65
  %add49120 = phi i32 [ %add49119, %cond.true65 ], [ %add49122, %cond.false76 ]
  %cond84 = phi i32 [ %call75, %cond.true65 ], [ %call82, %cond.false76 ]
  %and85 = and i32 %cond84, -2
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49120, i32 noundef %and85, i32 noundef 0) #15
  br label %cond.end87

cond.end87:                                       ; preds = %cond.end83, %cond.end
  tail call fastcc void @gfx_v9_0_enable_gui_idle_interrupt(ptr noundef %adev, i1 noundef zeroext false)
  %grbm_idx_mutex.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex.i, i32 noundef 0) #15
  %config.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1
  %23 = ptrtoint ptr %config.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %config.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp173.not.i = icmp eq i32 %24, 0
  br i1 %cmp173.not.i, label %cond.end87.for.end40.i_crit_edge, label %for.cond1.preheader.lr.ph.i

cond.end87.for.end40.i_crit_edge:                 ; preds = %cond.end87
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end40.i

for.cond1.preheader.lr.ph.i:                      ; preds = %cond.end87
  %max_sh_per_se.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 3
  %funcs.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %usec_timeout.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  br label %for.cond1.preheader.i

for.cond1.preheader.i:                            ; preds = %for.inc38.i.for.cond1.preheader.i_crit_edge, %for.cond1.preheader.lr.ph.i
  %i.0174.i = phi i32 [ 0, %for.cond1.preheader.lr.ph.i ], [ %inc39.i, %for.inc38.i.for.cond1.preheader.i_crit_edge ]
  %25 = ptrtoint ptr %max_sh_per_se.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %max_sh_per_se.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp4171.not.i = icmp eq i32 %26, 0
  br i1 %cmp4171.not.i, label %for.cond1.preheader.i.for.inc38.i_crit_edge, label %for.body5.lr.ph.i

for.cond1.preheader.i.for.inc38.i_crit_edge:      ; preds = %for.cond1.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc38.i

for.body5.lr.ph.i:                                ; preds = %for.cond1.preheader.i
  %shl7.i.i = shl i32 %i.0174.i, 16
  %and8.i.i = and i32 %shl7.i.i, 16711680
  br label %for.body5.i

for.body5.i:                                      ; preds = %for.inc35.i.for.body5.i_crit_edge, %for.body5.lr.ph.i
  %j.0172.i = phi i32 [ 0, %for.body5.lr.ph.i ], [ %inc36.i, %for.inc35.i.for.body5.i_crit_edge ]
  %shl17.i.i = shl i32 %j.0172.i, 8
  %and18.i.i = and i32 %shl17.i.i, 65280
  %and8.i.op.i = or i32 %and8.i.i, %and18.i.i
  %data.2.i.i = or i32 %and8.i.op.i, 1073741824
  %27 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %virt, align 8
  %and21.i.i = and i32 %28, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i)
  %tobool.not.i.i = icmp eq i32 %and21.i.i, 0
  br i1 %tobool.not.i.i, label %for.body5.i.cond.false.i.i_crit_edge, label %land.lhs.true.i.i

for.body5.i.cond.false.i.i_crit_edge:             ; preds = %for.body5.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true.i.i:                                ; preds = %for.body5.i
  %29 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %funcs.i.i, align 4
  %tobool22.not.i.i = icmp eq ptr %30, null
  br i1 %tobool22.not.i.i, label %land.lhs.true.i.i.cond.false.i.i_crit_edge, label %land.lhs.true23.i.i

land.lhs.true.i.i.cond.false.i.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

land.lhs.true23.i.i:                              ; preds = %land.lhs.true.i.i
  %sriov_wreg.i.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %30, i32 0, i32 12
  %31 = ptrtoint ptr %sriov_wreg.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %sriov_wreg.i.i, align 4
  %tobool27.not.i.i = icmp eq ptr %32, null
  br i1 %tobool27.not.i.i, label %land.lhs.true23.i.i.cond.false.i.i_crit_edge, label %cond.true.i.i

land.lhs.true23.i.i.cond.false.i.i_crit_edge:     ; preds = %land.lhs.true23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %33 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx33.i.i = getelementptr i32, ptr %34, i32 1
  %35 = ptrtoint ptr %arrayidx33.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx33.i.i, align 4
  %add.i.i = add i32 %36, 8704
  tail call void %32(ptr noundef %adev, i32 noundef %add.i.i, i32 noundef %data.2.i.i, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit.i

cond.false.i.i:                                   ; preds = %land.lhs.true23.i.i.cond.false.i.i_crit_edge, %land.lhs.true.i.i.cond.false.i.i_crit_edge, %for.body5.i.cond.false.i.i_crit_edge
  %37 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx37.i.i = getelementptr i32, ptr %38, i32 1
  %39 = ptrtoint ptr %arrayidx37.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx37.i.i, align 4
  %add38.i.i = add i32 %40, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i.i, i32 noundef %data.2.i.i, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit.i

gfx_v9_0_select_se_sh.exit.i:                     ; preds = %cond.false.i.i, %cond.true.i.i
  %41 = ptrtoint ptr %usec_timeout.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %usec_timeout.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp7168.not.i = icmp eq i32 %42, 0
  br i1 %cmp7168.not.i, label %gfx_v9_0_select_se_sh.exit.i.for.end.i_crit_edge, label %gfx_v9_0_select_se_sh.exit.i.for.body8.i_crit_edge

gfx_v9_0_select_se_sh.exit.i.for.body8.i_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit.i
  br label %for.body8.i

gfx_v9_0_select_se_sh.exit.i.for.end.i_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.body8.i:                                      ; preds = %if.end.i.for.body8.i_crit_edge, %gfx_v9_0_select_se_sh.exit.i.for.body8.i_crit_edge
  %k.0169.i = phi i32 [ %inc.i, %if.end.i.for.body8.i_crit_edge ], [ 0, %gfx_v9_0_select_se_sh.exit.i.for.body8.i_crit_edge ]
  %43 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %virt, align 8
  %and.i = and i32 %44, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.body8.i.cond.false.i_crit_edge, label %land.lhs.true.i

for.body8.i.cond.false.i_crit_edge:               ; preds = %for.body8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %for.body8.i
  %45 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %funcs.i.i, align 4
  %tobool10.not.i = icmp eq ptr %46, null
  br i1 %tobool10.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %46, i32 0, i32 13
  %47 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool15.not.i = icmp eq ptr %48, null
  br i1 %tobool15.not.i, label %land.lhs.true11.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true11.i.cond.false.i_crit_edge:         ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #17
  %49 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx21.i = getelementptr i32, ptr %50, i32 1
  %51 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx21.i, align 4
  %add.i = add i32 %52, 19553
  %call.i = tail call i32 %48(ptr noundef %adev, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i

cond.false.i:                                     ; preds = %land.lhs.true11.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %for.body8.i.cond.false.i_crit_edge
  %53 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx25.i = getelementptr i32, ptr %54, i32 1
  %55 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx25.i, align 4
  %add26.i = add i32 %56, 19553
  %call27.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add26.i, i32 noundef 0) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ %call27.i, %cond.false.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i)
  %cmp28.i = icmp eq i32 %cond.i, 0
  br i1 %cmp28.i, label %cond.end.i.for.end.i_crit_edge, label %if.end.i

cond.end.i.for.end.i_crit_edge:                   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

if.end.i:                                         ; preds = %cond.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %57 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %57(i32 noundef 214748) #15
  %inc.i = add nuw i32 %k.0169.i, 1
  %58 = ptrtoint ptr %usec_timeout.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %usec_timeout.i, align 8
  %cmp7.i = icmp ult i32 %inc.i, %59
  br i1 %cmp7.i, label %if.end.i.for.body8.i_crit_edge, label %if.end.i.for.end.i_crit_edge

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

if.end.i.for.body8.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body8.i

for.end.i:                                        ; preds = %if.end.i.for.end.i_crit_edge, %cond.end.i.for.end.i_crit_edge, %gfx_v9_0_select_se_sh.exit.i.for.end.i_crit_edge
  %k.0.lcssa.i = phi i32 [ 0, %gfx_v9_0_select_se_sh.exit.i.for.end.i_crit_edge ], [ %inc.i, %if.end.i.for.end.i_crit_edge ], [ %k.0169.i, %cond.end.i.for.end.i_crit_edge ]
  %60 = ptrtoint ptr %usec_timeout.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %usec_timeout.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %k.0.lcssa.i, i32 %61)
  %cmp30.i = icmp eq i32 %k.0.lcssa.i, %61
  br i1 %cmp30.i, label %if.then31.i, label %for.inc35.i

if.then31.i:                                      ; preds = %for.end.i
  %62 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %virt, align 8
  %and21.i131.i = and i32 %63, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i131.i)
  %tobool.not.i132.i = icmp eq i32 %and21.i131.i, 0
  br i1 %tobool.not.i132.i, label %if.then31.i.cond.false.i146.i_crit_edge, label %land.lhs.true.i135.i

if.then31.i.cond.false.i146.i_crit_edge:          ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i146.i

land.lhs.true.i135.i:                             ; preds = %if.then31.i
  %64 = ptrtoint ptr %funcs.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %funcs.i.i, align 4
  %tobool22.not.i134.i = icmp eq ptr %65, null
  br i1 %tobool22.not.i134.i, label %land.lhs.true.i135.i.cond.false.i146.i_crit_edge, label %land.lhs.true23.i138.i

land.lhs.true.i135.i.cond.false.i146.i_crit_edge: ; preds = %land.lhs.true.i135.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i146.i

land.lhs.true23.i138.i:                           ; preds = %land.lhs.true.i135.i
  %sriov_wreg.i136.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %65, i32 0, i32 12
  %66 = ptrtoint ptr %sriov_wreg.i136.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %sriov_wreg.i136.i, align 4
  %tobool27.not.i137.i = icmp eq ptr %67, null
  br i1 %tobool27.not.i137.i, label %land.lhs.true23.i138.i.cond.false.i146.i_crit_edge, label %cond.true.i142.i

land.lhs.true23.i138.i.cond.false.i146.i_crit_edge: ; preds = %land.lhs.true23.i138.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i146.i

cond.true.i142.i:                                 ; preds = %land.lhs.true23.i138.i
  call void @__sanitizer_cov_trace_pc() #17
  %68 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx33.i140.i = getelementptr i32, ptr %69, i32 1
  %70 = ptrtoint ptr %arrayidx33.i140.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx33.i140.i, align 4
  %add.i141.i = add i32 %71, 8704
  tail call void %67(ptr noundef %adev, i32 noundef %add.i141.i, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit147.i

cond.false.i146.i:                                ; preds = %land.lhs.true23.i138.i.cond.false.i146.i_crit_edge, %land.lhs.true.i135.i.cond.false.i146.i_crit_edge, %if.then31.i.cond.false.i146.i_crit_edge
  %72 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx.i.i, align 8
  %arrayidx37.i144.i = getelementptr i32, ptr %73, i32 1
  %74 = ptrtoint ptr %arrayidx37.i144.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx37.i144.i, align 4
  %add38.i145.i = add i32 %75, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i145.i, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit147.i

gfx_v9_0_select_se_sh.exit147.i:                  ; preds = %cond.false.i146.i, %cond.true.i142.i
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i) #15
  %call33.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, i32 noundef %i.0174.i, i32 noundef %j.0172.i) #18
  br label %gfx_v9_0_wait_for_rlc_serdes.exit

for.inc35.i:                                      ; preds = %for.end.i
  %inc36.i = add nuw i32 %j.0172.i, 1
  %76 = ptrtoint ptr %max_sh_per_se.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %max_sh_per_se.i, align 4
  %cmp4.i = icmp ult i32 %inc36.i, %77
  br i1 %cmp4.i, label %for.inc35.i.for.body5.i_crit_edge, label %for.inc35.i.for.inc38.i_crit_edge

for.inc35.i.for.inc38.i_crit_edge:                ; preds = %for.inc35.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc38.i

for.inc35.i.for.body5.i_crit_edge:                ; preds = %for.inc35.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body5.i

for.inc38.i:                                      ; preds = %for.inc35.i.for.inc38.i_crit_edge, %for.cond1.preheader.i.for.inc38.i_crit_edge
  %inc39.i = add nuw i32 %i.0174.i, 1
  %78 = ptrtoint ptr %config.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %config.i, align 8
  %cmp.i = icmp ult i32 %inc39.i, %79
  br i1 %cmp.i, label %for.inc38.i.for.cond1.preheader.i_crit_edge, label %for.inc38.i.for.end40.i_crit_edge

for.inc38.i.for.end40.i_crit_edge:                ; preds = %for.inc38.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end40.i

for.inc38.i.for.cond1.preheader.i_crit_edge:      ; preds = %for.inc38.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond1.preheader.i

for.end40.i:                                      ; preds = %for.inc38.i.for.end40.i_crit_edge, %cond.end87.for.end40.i_crit_edge
  %80 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %virt, align 8
  %and21.i149.i = and i32 %81, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i149.i)
  %tobool.not.i150.i = icmp eq i32 %and21.i149.i, 0
  br i1 %tobool.not.i150.i, label %for.end40.i.cond.false.i164.i_crit_edge, label %land.lhs.true.i153.i

for.end40.i.cond.false.i164.i_crit_edge:          ; preds = %for.end40.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i164.i

land.lhs.true.i153.i:                             ; preds = %for.end40.i
  %funcs.i151.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %82 = ptrtoint ptr %funcs.i151.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %funcs.i151.i, align 4
  %tobool22.not.i152.i = icmp eq ptr %83, null
  br i1 %tobool22.not.i152.i, label %land.lhs.true.i153.i.cond.false.i164.i_crit_edge, label %land.lhs.true23.i156.i

land.lhs.true.i153.i.cond.false.i164.i_crit_edge: ; preds = %land.lhs.true.i153.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i164.i

land.lhs.true23.i156.i:                           ; preds = %land.lhs.true.i153.i
  %sriov_wreg.i154.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %83, i32 0, i32 12
  %84 = ptrtoint ptr %sriov_wreg.i154.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %sriov_wreg.i154.i, align 4
  %tobool27.not.i155.i = icmp eq ptr %85, null
  br i1 %tobool27.not.i155.i, label %land.lhs.true23.i156.i.cond.false.i164.i_crit_edge, label %cond.true.i160.i

land.lhs.true23.i156.i.cond.false.i164.i_crit_edge: ; preds = %land.lhs.true23.i156.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i164.i

cond.true.i160.i:                                 ; preds = %land.lhs.true23.i156.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i157.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %86 = ptrtoint ptr %arrayidx.i157.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %arrayidx.i157.i, align 8
  %arrayidx33.i158.i = getelementptr i32, ptr %87, i32 1
  %88 = ptrtoint ptr %arrayidx33.i158.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %arrayidx33.i158.i, align 4
  %add.i159.i = add i32 %89, 8704
  tail call void %85(ptr noundef %adev, i32 noundef %add.i159.i, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit165.i

cond.false.i164.i:                                ; preds = %land.lhs.true23.i156.i.cond.false.i164.i_crit_edge, %land.lhs.true.i153.i.cond.false.i164.i_crit_edge, %for.end40.i.cond.false.i164.i_crit_edge
  %arrayidx35.i161.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %90 = ptrtoint ptr %arrayidx35.i161.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %arrayidx35.i161.i, align 8
  %arrayidx37.i162.i = getelementptr i32, ptr %91, i32 1
  %92 = ptrtoint ptr %arrayidx37.i162.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %arrayidx37.i162.i, align 4
  %add38.i163.i = add i32 %93, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i163.i, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit165.i

gfx_v9_0_select_se_sh.exit165.i:                  ; preds = %cond.false.i164.i, %cond.true.i160.i
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex.i) #15
  %usec_timeout43.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 11
  %94 = ptrtoint ptr %usec_timeout43.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %usec_timeout43.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %cmp44176.not.i = icmp eq i32 %95, 0
  br i1 %cmp44176.not.i, label %gfx_v9_0_select_se_sh.exit165.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge, label %for.body45.lr.ph.i

gfx_v9_0_select_se_sh.exit165.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit165.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_wait_for_rlc_serdes.exit

for.body45.lr.ph.i:                               ; preds = %gfx_v9_0_select_se_sh.exit165.i
  %funcs53.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx67.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.body45.i

for.body45.i:                                     ; preds = %if.end84.i.for.body45.i_crit_edge, %for.body45.lr.ph.i
  %k.1177.i = phi i32 [ 0, %for.body45.lr.ph.i ], [ %inc86.i, %if.end84.i.for.body45.i_crit_edge ]
  %96 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %virt, align 8
  %and48.i = and i32 %97, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48.i)
  %tobool49.not.i = icmp eq i32 %and48.i, 0
  br i1 %tobool49.not.i, label %for.body45.i.cond.false72.i_crit_edge, label %land.lhs.true50.i

for.body45.i.cond.false72.i_crit_edge:            ; preds = %for.body45.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false72.i

land.lhs.true50.i:                                ; preds = %for.body45.i
  %98 = ptrtoint ptr %funcs53.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %funcs53.i, align 4
  %tobool54.not.i = icmp eq ptr %99, null
  br i1 %tobool54.not.i, label %land.lhs.true50.i.cond.false72.i_crit_edge, label %land.lhs.true55.i

land.lhs.true50.i.cond.false72.i_crit_edge:       ; preds = %land.lhs.true50.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false72.i

land.lhs.true55.i:                                ; preds = %land.lhs.true50.i
  %sriov_rreg59.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %99, i32 0, i32 13
  %100 = ptrtoint ptr %sriov_rreg59.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %sriov_rreg59.i, align 4
  %tobool60.not.i = icmp eq ptr %101, null
  br i1 %tobool60.not.i, label %land.lhs.true55.i.cond.false72.i_crit_edge, label %cond.true61.i

land.lhs.true55.i.cond.false72.i_crit_edge:       ; preds = %land.lhs.true55.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false72.i

cond.true61.i:                                    ; preds = %land.lhs.true55.i
  call void @__sanitizer_cov_trace_pc() #17
  %102 = ptrtoint ptr %arrayidx67.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %arrayidx67.i, align 8
  %arrayidx69.i = getelementptr i32, ptr %103, i32 1
  %104 = ptrtoint ptr %arrayidx69.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx69.i, align 4
  %add70.i = add i32 %105, 19554
  %call71.i = tail call i32 %101(ptr noundef %adev, i32 noundef %add70.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end79.i

cond.false72.i:                                   ; preds = %land.lhs.true55.i.cond.false72.i_crit_edge, %land.lhs.true50.i.cond.false72.i_crit_edge, %for.body45.i.cond.false72.i_crit_edge
  %106 = ptrtoint ptr %arrayidx67.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %arrayidx67.i, align 8
  %arrayidx76.i = getelementptr i32, ptr %107, i32 1
  %108 = ptrtoint ptr %arrayidx76.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %arrayidx76.i, align 4
  %add77.i = add i32 %109, 19554
  %call78.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add77.i, i32 noundef 0) #15
  br label %cond.end79.i

cond.end79.i:                                     ; preds = %cond.false72.i, %cond.true61.i
  %cond80.i = phi i32 [ %call71.i, %cond.true61.i ], [ %call78.i, %cond.false72.i ]
  %and81.i = and i32 %cond80.i, 917503
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and81.i)
  %cmp82.i = icmp eq i32 %and81.i, 0
  br i1 %cmp82.i, label %cond.end79.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge, label %if.end84.i

cond.end79.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge: ; preds = %cond.end79.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_wait_for_rlc_serdes.exit

if.end84.i:                                       ; preds = %cond.end79.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %110 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %110(i32 noundef 214748) #15
  %inc86.i = add nuw i32 %k.1177.i, 1
  %111 = ptrtoint ptr %usec_timeout43.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %usec_timeout43.i, align 8
  %cmp44.i = icmp ult i32 %inc86.i, %112
  br i1 %cmp44.i, label %if.end84.i.for.body45.i_crit_edge, label %if.end84.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge

if.end84.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge: ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_wait_for_rlc_serdes.exit

if.end84.i.for.body45.i_crit_edge:                ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body45.i

gfx_v9_0_wait_for_rlc_serdes.exit:                ; preds = %if.end84.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge, %cond.end79.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge, %gfx_v9_0_select_se_sh.exit165.i.gfx_v9_0_wait_for_rlc_serdes.exit_crit_edge, %gfx_v9_0_select_se_sh.exit147.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_rlc_reset(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false76.sink.split_crit_edge, label %land.lhs.true

entry.cond.false76.sink.split_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false76.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false76.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true54, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 8
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %or = or i32 %cond, 4
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end87

land.lhs.true54:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx46250 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx46250 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx46250, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add49251 = add i32 %16, 8
  %tobool58.not = icmp eq ptr %.pr, null
  br i1 %tobool58.not, label %land.lhs.true54.cond.false76_crit_edge, label %land.lhs.true59

land.lhs.true54.cond.false76_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %sriov_rreg63 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg63 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg63, align 4
  %tobool64.not = icmp eq ptr %18, null
  br i1 %tobool64.not, label %land.lhs.true59.cond.false76_crit_edge, label %cond.true65

land.lhs.true59.cond.false76_crit_edge:           ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

cond.true65:                                      ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  %call75 = tail call i32 %18(ptr noundef %adev, i32 noundef %add49251, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end83

cond.false76.sink.split:                          ; preds = %land.lhs.true.cond.false76.sink.split_crit_edge, %entry.cond.false76.sink.split_crit_edge
  %arrayidx46250260 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx46250260 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx46250260, align 8
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add49251261 = add i32 %22, 8
  br label %cond.false76

cond.false76:                                     ; preds = %cond.false76.sink.split, %land.lhs.true59.cond.false76_crit_edge, %land.lhs.true54.cond.false76_crit_edge
  %add49254 = phi i32 [ %add49251, %land.lhs.true59.cond.false76_crit_edge ], [ %add49251, %land.lhs.true54.cond.false76_crit_edge ], [ %add49251261, %cond.false76.sink.split ]
  %call82 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add49254, i32 noundef 0) #15
  br label %cond.end83

cond.end83:                                       ; preds = %cond.false76, %cond.true65
  %add49252 = phi i32 [ %add49251, %cond.true65 ], [ %add49254, %cond.false76 ]
  %cond84 = phi i32 [ %call75, %cond.true65 ], [ %call82, %cond.false76 ]
  %or86 = or i32 %cond84, 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49252, i32 noundef %or86, i32 noundef 0) #15
  br label %cond.end87

cond.end87:                                       ; preds = %cond.end83, %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %23 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %23(i32 noundef 10737400) #15
  %24 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt, align 8
  %and90 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and90)
  %tobool91.not = icmp eq i32 %and90, 0
  br i1 %tobool91.not, label %cond.end87.cond.false182.sink.split_crit_edge, label %land.lhs.true92

cond.end87.cond.false182.sink.split_crit_edge:    ; preds = %cond.end87
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182.sink.split

land.lhs.true92:                                  ; preds = %cond.end87
  %funcs95 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %26 = ptrtoint ptr %funcs95 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs95, align 4
  %tobool96.not = icmp eq ptr %27, null
  br i1 %tobool96.not, label %land.lhs.true92.cond.false182.sink.split_crit_edge, label %land.lhs.true97

land.lhs.true92.cond.false182.sink.split_crit_edge: ; preds = %land.lhs.true92
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182.sink.split

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %sriov_wreg101 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %sriov_wreg101 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_wreg101, align 4
  %tobool102.not = icmp eq ptr %29, null
  br i1 %tobool102.not, label %land.lhs.true160, label %cond.true103

cond.true103:                                     ; preds = %land.lhs.true97
  %arrayidx109 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %30 = ptrtoint ptr %arrayidx109 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx109, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %add112 = add i32 %33, 8
  %sriov_rreg126 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 13
  %34 = ptrtoint ptr %sriov_rreg126 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_rreg126, align 4
  %tobool127.not = icmp eq ptr %35, null
  br i1 %tobool127.not, label %cond.false139, label %cond.true128

cond.true128:                                     ; preds = %cond.true103
  call void @__sanitizer_cov_trace_pc() #17
  %call138 = tail call i32 %35(ptr noundef %adev, i32 noundef %add112, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end146

cond.false139:                                    ; preds = %cond.true103
  call void @__sanitizer_cov_trace_pc() #17
  %call145 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add112, i32 noundef 0) #15
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false139, %cond.true128
  %cond147 = phi i32 [ %call138, %cond.true128 ], [ %call145, %cond.false139 ]
  %and148 = and i32 %cond147, -5
  tail call void %29(ptr noundef %adev, i32 noundef %add112, i32 noundef %and148, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end193

land.lhs.true160:                                 ; preds = %land.lhs.true97
  %36 = ptrtoint ptr %funcs95 to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pr263 = load ptr, ptr %funcs95, align 4
  %arrayidx152255 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %37 = ptrtoint ptr %arrayidx152255 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx152255, align 8
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 4
  %add155256 = add i32 %40, 8
  %tobool164.not = icmp eq ptr %.pr263, null
  br i1 %tobool164.not, label %land.lhs.true160.cond.false182_crit_edge, label %land.lhs.true165

land.lhs.true160.cond.false182_crit_edge:         ; preds = %land.lhs.true160
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182

land.lhs.true165:                                 ; preds = %land.lhs.true160
  %sriov_rreg169 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr263, i32 0, i32 13
  %41 = ptrtoint ptr %sriov_rreg169 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sriov_rreg169, align 4
  %tobool170.not = icmp eq ptr %42, null
  br i1 %tobool170.not, label %land.lhs.true165.cond.false182_crit_edge, label %cond.true171

land.lhs.true165.cond.false182_crit_edge:         ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false182

cond.true171:                                     ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #17
  %call181 = tail call i32 %42(ptr noundef %adev, i32 noundef %add155256, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end189

cond.false182.sink.split:                         ; preds = %land.lhs.true92.cond.false182.sink.split_crit_edge, %cond.end87.cond.false182.sink.split_crit_edge
  %arrayidx152255264 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %43 = ptrtoint ptr %arrayidx152255264 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx152255264, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add155256265 = add i32 %46, 8
  br label %cond.false182

cond.false182:                                    ; preds = %cond.false182.sink.split, %land.lhs.true165.cond.false182_crit_edge, %land.lhs.true160.cond.false182_crit_edge
  %add155259 = phi i32 [ %add155256, %land.lhs.true165.cond.false182_crit_edge ], [ %add155256, %land.lhs.true160.cond.false182_crit_edge ], [ %add155256265, %cond.false182.sink.split ]
  %call188 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add155259, i32 noundef 0) #15
  br label %cond.end189

cond.end189:                                      ; preds = %cond.false182, %cond.true171
  %add155257 = phi i32 [ %add155256, %cond.true171 ], [ %add155259, %cond.false182 ]
  %cond190 = phi i32 [ %call181, %cond.true171 ], [ %call188, %cond.false182 ]
  %and191 = and i32 %cond190, -5
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add155257, i32 noundef %and191, i32 noundef 0) #15
  br label %cond.end193

cond.end193:                                      ; preds = %cond.end189, %cond.end146
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %47 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %47(i32 noundef 10737400) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_rlc_start(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false76.sink.split_crit_edge, label %land.lhs.true

entry.cond.false76.sink.split_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false76.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false76.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true54, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19456
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %or = or i32 %cond, 1
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end87

land.lhs.true54:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx46119 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx46119 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx46119, align 8
  %arrayidx48120 = getelementptr i32, ptr %14, i32 1
  %15 = ptrtoint ptr %arrayidx48120 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx48120, align 4
  %add49121 = add i32 %16, 19456
  %tobool58.not = icmp eq ptr %.pr, null
  br i1 %tobool58.not, label %land.lhs.true54.cond.false76_crit_edge, label %land.lhs.true59

land.lhs.true54.cond.false76_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %sriov_rreg63 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg63 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg63, align 4
  %tobool64.not = icmp eq ptr %18, null
  br i1 %tobool64.not, label %land.lhs.true59.cond.false76_crit_edge, label %cond.true65

land.lhs.true59.cond.false76_crit_edge:           ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false76

cond.true65:                                      ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #17
  %call75 = tail call i32 %18(ptr noundef %adev, i32 noundef %add49121, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end83

cond.false76.sink.split:                          ; preds = %land.lhs.true.cond.false76.sink.split_crit_edge, %entry.cond.false76.sink.split_crit_edge
  %arrayidx46119125 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx46119125 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx46119125, align 8
  %arrayidx48120126 = getelementptr i32, ptr %20, i32 1
  %21 = ptrtoint ptr %arrayidx48120126 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx48120126, align 4
  %add49121127 = add i32 %22, 19456
  br label %cond.false76

cond.false76:                                     ; preds = %cond.false76.sink.split, %land.lhs.true59.cond.false76_crit_edge, %land.lhs.true54.cond.false76_crit_edge
  %add49124 = phi i32 [ %add49121, %land.lhs.true59.cond.false76_crit_edge ], [ %add49121, %land.lhs.true54.cond.false76_crit_edge ], [ %add49121127, %cond.false76.sink.split ]
  %call82 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add49124, i32 noundef 0) #15
  br label %cond.end83

cond.end83:                                       ; preds = %cond.false76, %cond.true65
  %add49122 = phi i32 [ %add49121, %cond.true65 ], [ %add49124, %cond.false76 ]
  %cond84 = phi i32 [ %call75, %cond.true65 ], [ %call82, %cond.false76 ]
  %or86 = or i32 %cond84, 1
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add49122, i32 noundef %or86, i32 noundef 0) #15
  br label %cond.end87

cond.end87:                                       ; preds = %cond.end83, %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %23 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %23(i32 noundef 10737400) #15
  %flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 9
  %24 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags, align 8
  %and88 = and i32 %25, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88)
  %tobool89.not = icmp eq i32 %and88, 0
  br i1 %tobool89.not, label %if.then, label %cond.end87.if.end_crit_edge

cond.end87.if.end_crit_edge:                      ; preds = %cond.end87
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %cond.end87
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @gfx_v9_0_enable_gui_idle_interrupt(ptr noundef %adev, i1 noundef zeroext true)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %26 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %26(i32 noundef 10737400) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end87.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_update_spm_vmid(ptr noundef %adev, i32 noundef %vmid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %adev, i1 noundef zeroext false) #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 8
  %arrayidx2 = getelementptr i32, ptr %1, i32 1
  %2 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx2, align 4
  %add = add i32 %3, 19569
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %gim_feature = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 12
  %4 = ptrtoint ptr %gim_feature to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gim_feature, align 4
  %and = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 2) #15
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and4 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.else.cond.false_crit_edge, label %land.lhs.true

if.else.cond.false_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %if.else
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true7

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true7:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool11.not = icmp eq ptr %11, null
  br i1 %tobool11.not, label %land.lhs.true7.cond.false_crit_edge, label %cond.true

land.lhs.true7.cond.false_crit_edge:              ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  %call21 = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %if.end

cond.false:                                       ; preds = %land.lhs.true7.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.else.cond.false_crit_edge
  %call27 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %if.end

if.end:                                           ; preds = %cond.false, %cond.true, %if.then
  %data.0 = phi i32 [ %call, %if.then ], [ %call21, %cond.true ], [ %call27, %cond.false ]
  %and28 = and i32 %data.0, -16
  %and29 = and i32 %vmid, 15
  %or = or i32 %and28, %and29
  %12 = ptrtoint ptr %gim_feature to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gim_feature, align 4
  %and32 = and i32 %13, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  %14 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %virt, align 8
  %and69 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool33.not, label %if.else66, label %if.then34

if.then34:                                        ; preds = %if.end
  br i1 %tobool70.not, label %if.then34.cond.false59_crit_edge, label %land.lhs.true39

if.then34.cond.false59_crit_edge:                 ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false59

land.lhs.true39:                                  ; preds = %if.then34
  %funcs42 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %16 = ptrtoint ptr %funcs42 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %funcs42, align 4
  %tobool43.not = icmp eq ptr %17, null
  br i1 %tobool43.not, label %land.lhs.true39.cond.false59_crit_edge, label %land.lhs.true44

land.lhs.true39.cond.false59_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false59

land.lhs.true44:                                  ; preds = %land.lhs.true39
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sriov_wreg, align 4
  %tobool48.not = icmp eq ptr %19, null
  br i1 %tobool48.not, label %land.lhs.true44.cond.false59_crit_edge, label %cond.true49

land.lhs.true44.cond.false59_crit_edge:           ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false59

cond.true49:                                      ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 8
  %arrayidx57 = getelementptr i32, ptr %21, i32 1
  %22 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx57, align 4
  %add58 = add i32 %23, 19569
  tail call void %19(ptr noundef %adev, i32 noundef %add58, i32 noundef %or, i32 noundef 2, i32 noundef 1) #15
  br label %if.end99

cond.false59:                                     ; preds = %land.lhs.true44.cond.false59_crit_edge, %land.lhs.true39.cond.false59_crit_edge, %if.then34.cond.false59_crit_edge
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx, align 8
  %arrayidx63 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx63, align 4
  %add64 = add i32 %27, 19569
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add64, i32 noundef %or, i32 noundef 0) #15
  br label %if.end99

if.else66:                                        ; preds = %if.end
  br i1 %tobool70.not, label %if.else66.cond.false92_crit_edge, label %land.lhs.true71

if.else66.cond.false92_crit_edge:                 ; preds = %if.else66
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false92

land.lhs.true71:                                  ; preds = %if.else66
  %funcs74 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %28 = ptrtoint ptr %funcs74 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %funcs74, align 4
  %tobool75.not = icmp eq ptr %29, null
  br i1 %tobool75.not, label %land.lhs.true71.cond.false92_crit_edge, label %land.lhs.true76

land.lhs.true71.cond.false92_crit_edge:           ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false92

land.lhs.true76:                                  ; preds = %land.lhs.true71
  %sriov_wreg80 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %sriov_wreg80 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sriov_wreg80, align 4
  %tobool81.not = icmp eq ptr %31, null
  br i1 %tobool81.not, label %land.lhs.true76.cond.false92_crit_edge, label %cond.true82

land.lhs.true76.cond.false92_crit_edge:           ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false92

cond.true82:                                      ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #17
  %32 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx, align 8
  %arrayidx90 = getelementptr i32, ptr %33, i32 1
  %34 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx90, align 4
  %add91 = add i32 %35, 19569
  tail call void %31(ptr noundef %adev, i32 noundef %add91, i32 noundef %or, i32 noundef 0, i32 noundef 1) #15
  br label %if.end99

cond.false92:                                     ; preds = %land.lhs.true76.cond.false92_crit_edge, %land.lhs.true71.cond.false92_crit_edge, %if.else66.cond.false92_crit_edge
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx, align 8
  %arrayidx96 = getelementptr i32, ptr %37, i32 1
  %38 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx96, align 4
  %add97 = add i32 %39, 19569
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add97, i32 noundef %or, i32 noundef 0) #15
  br label %if.end99

if.end99:                                         ; preds = %cond.false92, %cond.true82, %cond.false59, %cond.true49
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %adev, i1 noundef zeroext true) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_sriov_wreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef %acc_flags, i32 noundef %hwip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %hwip)
  %cond14.i = icmp eq i32 %hwip, 1
  %or.cond = and i1 %cond14.i, %tobool.not
  br i1 %or.cond, label %sw.bb.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

sw.bb.i:                                          ; preds = %entry
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sw.bb.i.if.else.i_crit_edge, label %land.lhs.true.i

sw.bb.i.if.else.i_crit_edge:                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %reg_access.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 18
  %2 = ptrtoint ptr %reg_access.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %reg_access.i, align 4
  %and2.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %land.lhs.true.i.if.then_crit_edge

land.lhs.true.i.if.then_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %sw.bb.i.if.else.i_crit_edge
  %4 = and i32 %acc_flags, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %4)
  %.not = icmp eq i32 %4, 4
  br i1 %.not, label %if.else.i.if.then_crit_edge, label %if.else.i.if.end_crit_edge

if.else.i.if.end_crit_edge:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.else.i.if.then_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.then:                                          ; preds = %if.else.i.if.then_crit_edge, %land.lhs.true.i.if.then_crit_edge
  %.sink.i = phi i32 [ -2147483648, %if.else.i.if.then_crit_edge ], [ 0, %land.lhs.true.i.if.then_crit_edge ]
  %call1 = tail call fastcc i32 @gfx_v9_0_rlcg_rw(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef %.sink.i)
  br label %cleanup

if.end:                                           ; preds = %if.else.i.if.end_crit_edge, %entry.if.end_crit_edge
  %and2 = and i32 %acc_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef 2) #15
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %value, i32 noundef 0) #15
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then4, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_sriov_rreg(ptr noundef %adev, i32 noundef %offset, i32 noundef %acc_flags, i32 noundef %hwip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp ne i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %hwip)
  %cond14.i = icmp ne i32 %hwip, 1
  %or.cond.not = or i1 %cond14.i, %tobool.not
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %or.cond16 = select i1 %or.cond.not, i1 true, i1 %tobool.not.i
  br i1 %or.cond16, label %entry.if.end_crit_edge, label %land.lhs.true.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true.i:                                  ; preds = %entry
  %reg_access.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 18
  %2 = ptrtoint ptr %reg_access.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %reg_access.i, align 4
  %and2.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.end_crit_edge, label %if.then

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call fastcc i32 @gfx_v9_0_rlcg_rw(ptr noundef %adev, i32 noundef %offset, i32 noundef 0, i32 noundef 268435456)
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.i.if.end_crit_edge, %entry.if.end_crit_edge
  %and2 = and i32 %acc_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call5 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %offset, i32 noundef 2) #15
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call6 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %offset, i32 noundef 0) #15
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then4, %if.then
  %retval.0 = phi i32 [ %call5, %if.then4 ], [ %call6, %if.else ], [ %call1, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @gfx_v9_0_is_rlcg_access_range(ptr nocapture noundef readonly %adev, i32 noundef %offset) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx3.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1, i32 0
  %0 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx3.i, align 4
  %arrayidx4.i = getelementptr i32, ptr %1, i32 1
  %2 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx4.i, align 4
  %add.i = add i32 %3, 8704
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %offset)
  %cmp6.i = icmp eq i32 %add.i, %offset
  br i1 %cmp6.i, label %entry.gfx_v9_0_check_rlcg_range.exit_crit_edge, label %for.cond.i

entry.gfx_v9_0_check_rlcg_range.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_rlcg_range.exit

for.cond.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %1, align 4
  %add.1.i = add i32 %5, 888
  call void @__sanitizer_cov_trace_cmp4(i32 %add.1.i, i32 %offset)
  %cmp6.1.i = icmp eq i32 %add.1.i, %offset
  br label %gfx_v9_0_check_rlcg_range.exit

gfx_v9_0_check_rlcg_range.exit:                   ; preds = %for.cond.i, %entry.gfx_v9_0_check_rlcg_range.exit_crit_edge
  %cmp.lcssa.i = phi i1 [ true, %entry.gfx_v9_0_check_rlcg_range.exit_crit_edge ], [ %cmp6.1.i, %for.cond.i ]
  ret i1 %cmp.lcssa.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_rlc_init_csb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_rlc_init_cpt(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_init_always_on_cu_mask(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 9
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590337, i32 %3)
  %cmp = icmp eq i32 %3, 590337
  %. = select i1 %cmp, i32 8, i32 12
  br label %if.end5

if.end5:                                          ; preds = %if.else, %entry.if.end5_crit_edge
  %always_on_cu_num.0 = phi i32 [ 4, %entry.if.end5_crit_edge ], [ %., %if.else ]
  %grbm_idx_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex, i32 noundef 0) #15
  %config = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1
  %4 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %config, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp7168.not = icmp eq i32 %5, 0
  br i1 %cmp7168.not, label %if.end5.for.end92_crit_edge, label %for.cond8.preheader.lr.ph

if.end5.for.end92_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end92

for.cond8.preheader.lr.ph:                        ; preds = %if.end5
  %max_sh_per_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 3
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %max_cu_per_sh = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 2
  br label %for.cond8.preheader

for.cond8.preheader:                              ; preds = %for.inc90.for.cond8.preheader_crit_edge, %for.cond8.preheader.lr.ph
  %i.0169 = phi i32 [ 0, %for.cond8.preheader.lr.ph ], [ %inc91, %for.inc90.for.cond8.preheader_crit_edge ]
  %6 = ptrtoint ptr %max_sh_per_se to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max_sh_per_se, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp11165.not = icmp eq i32 %7, 0
  br i1 %cmp11165.not, label %for.cond8.preheader.for.inc90_crit_edge, label %for.body12.lr.ph

for.cond8.preheader.for.inc90_crit_edge:          ; preds = %for.cond8.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc90

for.body12.lr.ph:                                 ; preds = %for.cond8.preheader
  %shl7.i = shl i32 %i.0169, 16
  %and8.i = and i32 %shl7.i, 16711680
  %and8.i.op = or i32 %and8.i, 1073741824
  br label %for.body12

for.body12:                                       ; preds = %cond.end84.for.body12_crit_edge, %for.body12.lr.ph
  %j.0166 = phi i32 [ 0, %for.body12.lr.ph ], [ %inc88, %cond.end84.for.body12_crit_edge ]
  %shl17.i = shl i32 %j.0166, 8
  %and18.i = and i32 %shl17.i, 65280
  %data.2.i = or i32 %and18.i, %and8.i.op
  %8 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %virt.i, align 8
  %and21.i = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool.not.i = icmp eq i32 %and21.i, 0
  br i1 %tobool.not.i, label %for.body12.cond.false.i_crit_edge, label %land.lhs.true.i

for.body12.cond.false.i_crit_edge:                ; preds = %for.body12
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %for.body12
  %10 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %funcs.i, align 4
  %tobool22.not.i = icmp eq ptr %11, null
  br i1 %tobool22.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true23.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true23.i:                                ; preds = %land.lhs.true.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %11, i32 0, i32 12
  %12 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool27.not.i = icmp eq ptr %13, null
  br i1 %tobool27.not.i, label %land.lhs.true23.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true23.i.cond.false.i_crit_edge:         ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #17
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx33.i = getelementptr i32, ptr %15, i32 1
  %16 = ptrtoint ptr %arrayidx33.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx33.i, align 4
  %add.i = add i32 %17, 8704
  tail call void %13(ptr noundef %adev, i32 noundef %add.i, i32 noundef %data.2.i, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit

cond.false.i:                                     ; preds = %land.lhs.true23.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %for.body12.cond.false.i_crit_edge
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx37.i = getelementptr i32, ptr %19, i32 1
  %20 = ptrtoint ptr %arrayidx37.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx37.i, align 4
  %add38.i = add i32 %21, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i, i32 noundef %data.2.i, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit

gfx_v9_0_select_se_sh.exit:                       ; preds = %cond.false.i, %cond.true.i
  %22 = ptrtoint ptr %max_cu_per_sh to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %max_cu_per_sh, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp16159.not = icmp eq i32 %23, 0
  br i1 %cmp16159.not, label %gfx_v9_0_select_se_sh.exit.for.end_crit_edge, label %for.body17.lr.ph

gfx_v9_0_select_se_sh.exit.for.end_crit_edge:     ; preds = %gfx_v9_0_select_se_sh.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body17.lr.ph:                                 ; preds = %gfx_v9_0_select_se_sh.exit
  %arrayidx19 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 48, i32 8, i32 %i.0169, i32 %j.0166
  br label %for.body17

for.body17:                                       ; preds = %if.end51.for.body17_crit_edge, %for.body17.lr.ph
  %counter.0163 = phi i32 [ 0, %for.body17.lr.ph ], [ %counter.1, %if.end51.for.body17_crit_edge ]
  %cu_bitmap.0162 = phi i32 [ 0, %for.body17.lr.ph ], [ %cu_bitmap.1, %if.end51.for.body17_crit_edge ]
  %mask.0161 = phi i32 [ 1, %for.body17.lr.ph ], [ %shl, %if.end51.for.body17_crit_edge ]
  %k.0160 = phi i32 [ 0, %for.body17.lr.ph ], [ %inc52, %if.end51.for.body17_crit_edge ]
  %24 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx19, align 4
  %and20 = and i32 %25, %mask.0161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %for.body17.if.end51_crit_edge, label %if.then22

for.body17.if.end51_crit_edge:                    ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end51

if.then22:                                        ; preds = %for.body17
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %counter.0163)
  %cmp23 = icmp eq i32 %counter.0163, 2
  br i1 %cmp23, label %if.then24, label %if.then22.if.end46_crit_edge

if.then22.if.end46_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end46

if.then24:                                        ; preds = %if.then22
  %26 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %virt.i, align 8
  %and25 = and i32 %27, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %if.then24.cond.false_crit_edge, label %land.lhs.true

if.then24.cond.false_crit_edge:                   ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then24
  %28 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %funcs.i, align 4
  %tobool28.not = icmp eq ptr %29, null
  br i1 %tobool28.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true29

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true29:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sriov_wreg, align 4
  %tobool33.not = icmp eq ptr %31, null
  br i1 %tobool33.not, label %land.lhs.true29.cond.false_crit_edge, label %cond.true

land.lhs.true29.cond.false_crit_edge:             ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #17
  %32 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx40 = getelementptr i32, ptr %33, i32 1
  %34 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx40, align 4
  %add = add i32 %35, 19539
  tail call void %31(ptr noundef %adev, i32 noundef %add, i32 noundef %cu_bitmap.0162, i32 noundef 0, i32 noundef 1) #15
  br label %if.end46

cond.false:                                       ; preds = %land.lhs.true29.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then24.cond.false_crit_edge
  %36 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx44 = getelementptr i32, ptr %37, i32 1
  %38 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %39, 19539
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add45, i32 noundef %cu_bitmap.0162, i32 noundef 0) #15
  br label %if.end46

if.end46:                                         ; preds = %cond.false, %cond.true, %if.then22.if.end46_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %counter.0163, i32 %always_on_cu_num.0)
  %cmp47 = icmp ult i32 %counter.0163, %always_on_cu_num.0
  br i1 %cmp47, label %if.then48, label %if.end46.for.end_crit_edge

if.end46.for.end_crit_edge:                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.then48:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  %or = or i32 %cu_bitmap.0162, %mask.0161
  %inc = add nuw i32 %counter.0163, 1
  br label %if.end51

if.end51:                                         ; preds = %if.then48, %for.body17.if.end51_crit_edge
  %cu_bitmap.1 = phi i32 [ %or, %if.then48 ], [ %cu_bitmap.0162, %for.body17.if.end51_crit_edge ]
  %counter.1 = phi i32 [ %inc, %if.then48 ], [ %counter.0163, %for.body17.if.end51_crit_edge ]
  %shl = shl i32 %mask.0161, 1
  %inc52 = add nuw i32 %k.0160, 1
  %40 = ptrtoint ptr %max_cu_per_sh to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %max_cu_per_sh, align 8
  %cmp16 = icmp ult i32 %inc52, %41
  br i1 %cmp16, label %if.end51.for.body17_crit_edge, label %if.end51.for.end_crit_edge

if.end51.for.end_crit_edge:                       ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.end51.for.body17_crit_edge:                    ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body17

for.end:                                          ; preds = %if.end51.for.end_crit_edge, %if.end46.for.end_crit_edge, %gfx_v9_0_select_se_sh.exit.for.end_crit_edge
  %cu_bitmap.0.lcssa = phi i32 [ 0, %gfx_v9_0_select_se_sh.exit.for.end_crit_edge ], [ %cu_bitmap.0162, %if.end46.for.end_crit_edge ], [ %cu_bitmap.1, %if.end51.for.end_crit_edge ]
  %42 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %virt.i, align 8
  %and55 = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55)
  %tobool56.not = icmp eq i32 %and55, 0
  br i1 %tobool56.not, label %for.end.cond.false78_crit_edge, label %land.lhs.true57

for.end.cond.false78_crit_edge:                   ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78

land.lhs.true57:                                  ; preds = %for.end
  %44 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %funcs.i, align 4
  %tobool61.not = icmp eq ptr %45, null
  br i1 %tobool61.not, label %land.lhs.true57.cond.false78_crit_edge, label %land.lhs.true62

land.lhs.true57.cond.false78_crit_edge:           ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78

land.lhs.true62:                                  ; preds = %land.lhs.true57
  %sriov_wreg66 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %45, i32 0, i32 12
  %46 = ptrtoint ptr %sriov_wreg66 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sriov_wreg66, align 4
  %tobool67.not = icmp eq ptr %47, null
  br i1 %tobool67.not, label %land.lhs.true62.cond.false78_crit_edge, label %cond.true68

land.lhs.true62.cond.false78_crit_edge:           ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78

cond.true68:                                      ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  %48 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx76 = getelementptr i32, ptr %49, i32 1
  %50 = ptrtoint ptr %arrayidx76 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx76, align 4
  %add77 = add i32 %51, 19536
  tail call void %47(ptr noundef %adev, i32 noundef %add77, i32 noundef %cu_bitmap.0.lcssa, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end84

cond.false78:                                     ; preds = %land.lhs.true62.cond.false78_crit_edge, %land.lhs.true57.cond.false78_crit_edge, %for.end.cond.false78_crit_edge
  %52 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx82 = getelementptr i32, ptr %53, i32 1
  %54 = ptrtoint ptr %arrayidx82 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx82, align 4
  %add83 = add i32 %55, 19536
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add83, i32 noundef %cu_bitmap.0.lcssa, i32 noundef 0) #15
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false78, %cond.true68
  %arrayidx86 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 48, i32 7, i32 %i.0169, i32 %j.0166
  %56 = ptrtoint ptr %arrayidx86 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %cu_bitmap.0.lcssa, ptr %arrayidx86, align 4
  %inc88 = add nuw i32 %j.0166, 1
  %57 = ptrtoint ptr %max_sh_per_se to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %max_sh_per_se, align 4
  %cmp11 = icmp ult i32 %inc88, %58
  br i1 %cmp11, label %cond.end84.for.body12_crit_edge, label %cond.end84.for.inc90_crit_edge

cond.end84.for.inc90_crit_edge:                   ; preds = %cond.end84
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc90

cond.end84.for.body12_crit_edge:                  ; preds = %cond.end84
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body12

for.inc90:                                        ; preds = %cond.end84.for.inc90_crit_edge, %for.cond8.preheader.for.inc90_crit_edge
  %inc91 = add nuw i32 %i.0169, 1
  %59 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %config, align 8
  %cmp7 = icmp ult i32 %inc91, %60
  br i1 %cmp7, label %for.inc90.for.cond8.preheader_crit_edge, label %for.inc90.for.end92_crit_edge

for.inc90.for.end92_crit_edge:                    ; preds = %for.inc90
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end92

for.inc90.for.cond8.preheader_crit_edge:          ; preds = %for.inc90
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond8.preheader

for.end92:                                        ; preds = %for.inc90.for.end92_crit_edge, %if.end5.for.end92_crit_edge
  %virt.i141 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %61 = ptrtoint ptr %virt.i141 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %virt.i141, align 8
  %and21.i142 = and i32 %62, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i142)
  %tobool.not.i143 = icmp eq i32 %and21.i142, 0
  br i1 %tobool.not.i143, label %for.end92.cond.false.i157_crit_edge, label %land.lhs.true.i146

for.end92.cond.false.i157_crit_edge:              ; preds = %for.end92
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i157

land.lhs.true.i146:                               ; preds = %for.end92
  %funcs.i144 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %63 = ptrtoint ptr %funcs.i144 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %funcs.i144, align 4
  %tobool22.not.i145 = icmp eq ptr %64, null
  br i1 %tobool22.not.i145, label %land.lhs.true.i146.cond.false.i157_crit_edge, label %land.lhs.true23.i149

land.lhs.true.i146.cond.false.i157_crit_edge:     ; preds = %land.lhs.true.i146
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i157

land.lhs.true23.i149:                             ; preds = %land.lhs.true.i146
  %sriov_wreg.i147 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %64, i32 0, i32 12
  %65 = ptrtoint ptr %sriov_wreg.i147 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %sriov_wreg.i147, align 4
  %tobool27.not.i148 = icmp eq ptr %66, null
  br i1 %tobool27.not.i148, label %land.lhs.true23.i149.cond.false.i157_crit_edge, label %cond.true.i153

land.lhs.true23.i149.cond.false.i157_crit_edge:   ; preds = %land.lhs.true23.i149
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i157

cond.true.i153:                                   ; preds = %land.lhs.true23.i149
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i150 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %67 = ptrtoint ptr %arrayidx.i150 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %arrayidx.i150, align 8
  %arrayidx33.i151 = getelementptr i32, ptr %68, i32 1
  %69 = ptrtoint ptr %arrayidx33.i151 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx33.i151, align 4
  %add.i152 = add i32 %70, 8704
  tail call void %66(ptr noundef %adev, i32 noundef %add.i152, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit158

cond.false.i157:                                  ; preds = %land.lhs.true23.i149.cond.false.i157_crit_edge, %land.lhs.true.i146.cond.false.i157_crit_edge, %for.end92.cond.false.i157_crit_edge
  %arrayidx35.i154 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %71 = ptrtoint ptr %arrayidx35.i154 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx35.i154, align 8
  %arrayidx37.i155 = getelementptr i32, ptr %72, i32 1
  %73 = ptrtoint ptr %arrayidx37.i155 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx37.i155, align 4
  %add38.i156 = add i32 %74, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i156, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit158

gfx_v9_0_select_se_sh.exit158:                    ; preds = %cond.false.i157, %cond.true.i153
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex) #15
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_init_csb(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %funcs, align 4
  %get_csb_buffer = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %get_csb_buffer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %get_csb_buffer, align 4
  %cs_ptr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 7
  %4 = ptrtoint ptr %cs_ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cs_ptr, align 8
  tail call void %3(ptr noundef %adev, ptr noundef %5) #15
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true7

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true7:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 12
  %10 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_wreg, align 4
  %tobool11.not = icmp eq ptr %11, null
  br i1 %tobool11.not, label %land.lhs.true7.cond.false_crit_edge, label %cond.true

land.lhs.true7.cond.false_crit_edge:              ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 8
  %arrayidx17 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx17, align 4
  %add = add i32 %15, 19619
  %clear_state_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %16 = ptrtoint ptr %clear_state_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %clear_state_gpu_addr, align 8
  %shr = lshr i64 %17, 32
  %conv = trunc i64 %shr to i32
  tail call void %11(ptr noundef %adev, i32 noundef %add, i32 noundef %conv, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true7.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx21 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %18 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx21, align 8
  %arrayidx23 = getelementptr i32, ptr %19, i32 1
  %20 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx23, align 4
  %add24 = add i32 %21, 19619
  %clear_state_gpu_addr27 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %22 = ptrtoint ptr %clear_state_gpu_addr27 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %clear_state_gpu_addr27, align 8
  %shr28 = lshr i64 %23, 32
  %conv29 = trunc i64 %shr28 to i32
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add24, i32 noundef %conv29, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %24 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt, align 8
  %and32 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %cond.end.cond.false60_crit_edge, label %land.lhs.true34

cond.end.cond.false60_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false60

land.lhs.true34:                                  ; preds = %cond.end
  %26 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %funcs, align 4
  %tobool38.not = icmp eq ptr %27, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false60_crit_edge, label %land.lhs.true39

land.lhs.true34.cond.false60_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false60

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %sriov_wreg43 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %27, i32 0, i32 12
  %28 = ptrtoint ptr %sriov_wreg43 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sriov_wreg43, align 4
  %tobool44.not = icmp eq ptr %29, null
  br i1 %tobool44.not, label %land.lhs.true39.cond.false60_crit_edge, label %cond.true45

land.lhs.true39.cond.false60_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false60

cond.true45:                                      ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx51 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %30 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx51, align 8
  %arrayidx53 = getelementptr i32, ptr %31, i32 1
  %32 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx53, align 4
  %add54 = add i32 %33, 19618
  %clear_state_gpu_addr57 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %34 = ptrtoint ptr %clear_state_gpu_addr57 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %clear_state_gpu_addr57, align 8
  %36 = trunc i64 %35 to i32
  %conv59 = and i32 %36, -4
  tail call void %29(ptr noundef %adev, i32 noundef %add54, i32 noundef %conv59, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end71

cond.false60:                                     ; preds = %land.lhs.true39.cond.false60_crit_edge, %land.lhs.true34.cond.false60_crit_edge, %cond.end.cond.false60_crit_edge
  %arrayidx62 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %37 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx62, align 8
  %arrayidx64 = getelementptr i32, ptr %38, i32 1
  %39 = ptrtoint ptr %arrayidx64 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx64, align 4
  %add65 = add i32 %40, 19618
  %clear_state_gpu_addr68 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 6
  %41 = ptrtoint ptr %clear_state_gpu_addr68 to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %clear_state_gpu_addr68, align 8
  %43 = trunc i64 %42 to i32
  %conv70 = and i32 %43, -4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add65, i32 noundef %conv70, i32 noundef 0) #15
  br label %cond.end71

cond.end71:                                       ; preds = %cond.false60, %cond.true45
  %44 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %virt, align 8
  %and74 = and i32 %45, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and74)
  %tobool75.not = icmp eq i32 %and74, 0
  br i1 %tobool75.not, label %cond.end71.cond.false99_crit_edge, label %land.lhs.true76

cond.end71.cond.false99_crit_edge:                ; preds = %cond.end71
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false99

land.lhs.true76:                                  ; preds = %cond.end71
  %46 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %funcs, align 4
  %tobool80.not = icmp eq ptr %47, null
  br i1 %tobool80.not, label %land.lhs.true76.cond.false99_crit_edge, label %land.lhs.true81

land.lhs.true76.cond.false99_crit_edge:           ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false99

land.lhs.true81:                                  ; preds = %land.lhs.true76
  %sriov_wreg85 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %47, i32 0, i32 12
  %48 = ptrtoint ptr %sriov_wreg85 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sriov_wreg85, align 4
  %tobool86.not = icmp eq ptr %49, null
  br i1 %tobool86.not, label %land.lhs.true81.cond.false99_crit_edge, label %cond.true87

land.lhs.true81.cond.false99_crit_edge:           ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false99

cond.true87:                                      ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx93 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %50 = ptrtoint ptr %arrayidx93 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx93, align 8
  %arrayidx95 = getelementptr i32, ptr %51, i32 1
  %52 = ptrtoint ptr %arrayidx95 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx95, align 4
  %add96 = add i32 %53, 19620
  %clear_state_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 9
  %54 = ptrtoint ptr %clear_state_size to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %clear_state_size, align 8
  tail call void %49(ptr noundef %adev, i32 noundef %add96, i32 noundef %55, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end108

cond.false99:                                     ; preds = %land.lhs.true81.cond.false99_crit_edge, %land.lhs.true76.cond.false99_crit_edge, %cond.end71.cond.false99_crit_edge
  %arrayidx101 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %56 = ptrtoint ptr %arrayidx101 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx101, align 8
  %arrayidx103 = getelementptr i32, ptr %57, i32 1
  %58 = ptrtoint ptr %arrayidx103 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %arrayidx103, align 4
  %add104 = add i32 %59, 19620
  %clear_state_size107 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 9
  %60 = ptrtoint ptr %clear_state_size107 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %clear_state_size107, align 8
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add104, i32 noundef %61, i32 noundef 0) #15
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false99, %cond.true87
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_enable_lbpw(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false78.sink.split_crit_edge, label %land.lhs.true

entry.cond.false78.sink.split_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78.sink.split

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false78.sink.split_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false78.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78.sink.split

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_wreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true56, label %cond.true

cond.true:                                        ; preds = %land.lhs.true2
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %arrayidx12 = getelementptr i32, ptr %7, i32 1
  %8 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx12, align 4
  %add = add i32 %9, 19481
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool26.not = icmp eq ptr %11, null
  br i1 %tobool26.not, label %cond.false, label %cond.true27

cond.true27:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true27
  %cond = phi i32 [ %call, %cond.true27 ], [ %call42, %cond.false ]
  %and43 = and i32 %cond, -2
  %cond45 = zext i1 %enable to i32
  %or = or i32 %and43, %cond45
  tail call void %5(ptr noundef %adev, i32 noundef %add, i32 noundef %or, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end92

land.lhs.true56:                                  ; preds = %land.lhs.true2
  %12 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx48121 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %13 = ptrtoint ptr %arrayidx48121 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx48121, align 8
  %arrayidx50122 = getelementptr i32, ptr %14, i32 1
  %15 = ptrtoint ptr %arrayidx50122 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx50122, align 4
  %add51123 = add i32 %16, 19481
  %tobool60.not = icmp eq ptr %.pr, null
  br i1 %tobool60.not, label %land.lhs.true56.cond.false78_crit_edge, label %land.lhs.true61

land.lhs.true56.cond.false78_crit_edge:           ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78

land.lhs.true61:                                  ; preds = %land.lhs.true56
  %sriov_rreg65 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %17 = ptrtoint ptr %sriov_rreg65 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sriov_rreg65, align 4
  %tobool66.not = icmp eq ptr %18, null
  br i1 %tobool66.not, label %land.lhs.true61.cond.false78_crit_edge, label %cond.true67

land.lhs.true61.cond.false78_crit_edge:           ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false78

cond.true67:                                      ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #17
  %call77 = tail call i32 %18(ptr noundef %adev, i32 noundef %add51123, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end85

cond.false78.sink.split:                          ; preds = %land.lhs.true.cond.false78.sink.split_crit_edge, %entry.cond.false78.sink.split_crit_edge
  %arrayidx48121127 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %19 = ptrtoint ptr %arrayidx48121127 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx48121127, align 8
  %arrayidx50122128 = getelementptr i32, ptr %20, i32 1
  %21 = ptrtoint ptr %arrayidx50122128 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx50122128, align 4
  %add51123129 = add i32 %22, 19481
  br label %cond.false78

cond.false78:                                     ; preds = %cond.false78.sink.split, %land.lhs.true61.cond.false78_crit_edge, %land.lhs.true56.cond.false78_crit_edge
  %add51126 = phi i32 [ %add51123, %land.lhs.true61.cond.false78_crit_edge ], [ %add51123, %land.lhs.true56.cond.false78_crit_edge ], [ %add51123129, %cond.false78.sink.split ]
  %call84 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add51126, i32 noundef 0) #15
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false78, %cond.true67
  %add51124 = phi i32 [ %add51123, %cond.true67 ], [ %add51126, %cond.false78 ]
  %cond86 = phi i32 [ %call77, %cond.true67 ], [ %call84, %cond.false78 ]
  %and87 = and i32 %cond86, -2
  %cond89 = zext i1 %enable to i32
  %or91 = or i32 %and87, %cond89
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add51124, i32 noundef %or91, i32 noundef 0) #15
  br label %cond.end92

cond.end92:                                       ; preds = %cond.end85, %cond.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ucode_print_rlc_hdr(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_enable_gui_idle_interrupt(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 4202
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 4202
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, -1835009
  %or28 = select i1 %enable, i32 1835008, i32 0
  %or34 = or i32 %or28, %and19
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %14 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool36.not = icmp eq i32 %15, 0
  %and37 = and i32 %or34, -2097153
  %shl40 = select i1 %enable, i32 2097152, i32 0
  %or42 = or i32 %and37, %shl40
  %tmp.0 = select i1 %tobool36.not, i32 %or34, i32 %or42
  %16 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %virt, align 8
  %and45 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and45)
  %tobool46.not = icmp eq i32 %and45, 0
  br i1 %tobool46.not, label %cond.end.cond.false67_crit_edge, label %land.lhs.true47

cond.end.cond.false67_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false67

land.lhs.true47:                                  ; preds = %cond.end
  %funcs50 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %18 = ptrtoint ptr %funcs50 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs50, align 4
  %tobool51.not = icmp eq ptr %19, null
  br i1 %tobool51.not, label %land.lhs.true47.cond.false67_crit_edge, label %land.lhs.true52

land.lhs.true47.cond.false67_crit_edge:           ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false67

land.lhs.true52:                                  ; preds = %land.lhs.true47
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %19, i32 0, i32 12
  %20 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_wreg, align 4
  %tobool56.not = icmp eq ptr %21, null
  br i1 %tobool56.not, label %land.lhs.true52.cond.false67_crit_edge, label %cond.true57

land.lhs.true52.cond.false67_crit_edge:           ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false67

cond.true57:                                      ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx63 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %22 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx63, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %add66 = add i32 %25, 4202
  tail call void %21(ptr noundef %adev, i32 noundef %add66, i32 noundef %tmp.0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end73

cond.false67:                                     ; preds = %land.lhs.true52.cond.false67_crit_edge, %land.lhs.true47.cond.false67_crit_edge, %cond.end.cond.false67_crit_edge
  %arrayidx69 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx69 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx69, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %add72 = add i32 %29, 4202
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add72, i32 noundef %tmp.0, i32 noundef 0) #15
  br label %cond.end73

cond.end73:                                       ; preds = %cond.false67, %cond.true57
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_off_ctrl(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v9_0_rlcg_rw(ptr nocapture noundef readonly %adev, i32 noundef %offset, i32 noundef %v, i32 noundef %flag) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %rmmio = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 32
  %0 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rmmio, align 8
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 8
  %arrayidx2 = getelementptr i32, ptr %3, i32 1
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx2, align 4
  %add = shl i32 %5, 2
  %mul = add i32 %add, 33024
  %add.ptr = getelementptr i8, ptr %1, i32 %mul
  store ptr %add.ptr, ptr @gfx_v9_0_rlcg_rw.scratch_reg0, align 4
  %mul9 = add i32 %add, 33028
  %add.ptr10 = getelementptr i8, ptr %1, i32 %mul9
  store ptr %add.ptr10, ptr @gfx_v9_0_rlcg_rw.scratch_reg1, align 4
  %mul17 = add i32 %add, 33032
  %add.ptr18 = getelementptr i8, ptr %1, i32 %mul17
  store ptr %add.ptr18, ptr @gfx_v9_0_rlcg_rw.scratch_reg2, align 4
  %mul25 = add i32 %add, 33036
  %add.ptr26 = getelementptr i8, ptr %1, i32 %mul25
  store ptr %add.ptr26, ptr @gfx_v9_0_rlcg_rw.scratch_reg3, align 4
  %mul33 = add i32 %add, 78640
  %add.ptr34 = getelementptr i8, ptr %1, i32 %mul33
  store ptr %add.ptr34, ptr @gfx_v9_0_rlcg_rw.spare_int, align 4
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %3, align 4
  %add39 = add i32 %7, 34
  %add44 = add i32 %5, 8704
  call void @__sanitizer_cov_trace_cmp4(i32 %add39, i32 %offset)
  %cmp = icmp eq i32 %add39, %offset
  call void @__sanitizer_cov_trace_cmp4(i32 %add44, i32 %offset)
  %cmp45 = icmp eq i32 %add44, %offset
  %or.cond = select i1 %cmp, i1 true, i1 %cmp45
  br i1 %or.cond, label %if.then, label %do.body61

if.then:                                          ; preds = %entry
  br i1 %cmp, label %do.body, label %if.else

do.body:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1033
  tail call void @arm_heavy_mb() #15
  %8 = tail call i32 @llvm.bswap.i32(i32 %v)
  %9 = load ptr, ptr @gfx_v9_0_rlcg_rw.scratch_reg2, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %9, i32 %8) #15, !srcloc !1034
  br label %do.body54

if.else:                                          ; preds = %if.then
  br i1 %cmp45, label %do.body50, label %if.else.do.body54_crit_edge

if.else.do.body54_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %.pre = tail call i32 @llvm.bswap.i32(i32 %v)
  br label %do.body54

do.body50:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1035
  tail call void @arm_heavy_mb() #15
  %10 = tail call i32 @llvm.bswap.i32(i32 %v)
  %11 = load ptr, ptr @gfx_v9_0_rlcg_rw.scratch_reg3, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %11, i32 %10) #15, !srcloc !1034
  br label %do.body54

do.body54:                                        ; preds = %do.body50, %if.else.do.body54_crit_edge, %do.body
  %.pre-phi = phi i32 [ %.pre, %if.else.do.body54_crit_edge ], [ %8, %do.body ], [ %10, %do.body50 ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1036
  tail call void @arm_heavy_mb() #15
  %12 = ptrtoint ptr %rmmio to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rmmio, align 8
  %mul58 = shl i32 %offset, 2
  %add.ptr59 = getelementptr i8, ptr %13, i32 %mul58
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr59, i32 %.pre-phi) #15, !srcloc !1034
  br label %if.end126

do.body61:                                        ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1037
  tail call void @arm_heavy_mb() #15
  %14 = tail call i32 @llvm.bswap.i32(i32 %v)
  %15 = load ptr, ptr @gfx_v9_0_rlcg_rw.scratch_reg0, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %15, i32 %14) #15, !srcloc !1034
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1038
  tail call void @arm_heavy_mb() #15
  %or = or i32 %flag, %offset
  %16 = tail call i32 @llvm.bswap.i32(i32 %or)
  %17 = load ptr, ptr @gfx_v9_0_rlcg_rw.scratch_reg1, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %17, i32 %16) #15, !srcloc !1034
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1039
  tail call void @arm_heavy_mb() #15
  %18 = load ptr, ptr @gfx_v9_0_rlcg_rw.spare_int, align 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %18, i32 16777216) #15, !srcloc !1034
  br label %for.body

for.body:                                         ; preds = %if.end74.for.body_crit_edge, %do.body61
  %i.0170 = phi i32 [ 0, %do.body61 ], [ %inc, %if.end74.for.body_crit_edge ]
  %19 = load ptr, ptr @gfx_v9_0_rlcg_rw.scratch_reg1, align 4
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %19) #15, !srcloc !1040
  %21 = tail call i32 @llvm.bswap.i32(i32 %20)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1041
  %and = and i32 %21, %flag
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.if.end126_crit_edge, label %if.end74

for.body.if.end126_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end126

if.end74:                                         ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %22 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %22(i32 noundef 2147480) #15
  %inc = add nuw nsw i32 %i.0170, 1
  %exitcond.not = icmp eq i32 %inc, 50000
  br i1 %exitcond.not, label %if.then76, label %if.end74.for.body_crit_edge

if.end74.for.body_crit_edge:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

if.then76:                                        ; preds = %if.end74
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %23 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %virt, align 8
  %and77 = and i32 %24, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77)
  %tobool78.not = icmp eq i32 %and77, 0
  br i1 %tobool78.not, label %if.then76.do.end121_crit_edge, label %land.lhs.true

if.then76.do.end121_crit_edge:                    ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end121

land.lhs.true:                                    ; preds = %if.then76
  %reg_access = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132, i32 18
  %25 = ptrtoint ptr %reg_access to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %reg_access, align 4
  %and80 = and i32 %26, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and80)
  %tobool81.not = icmp eq i32 %and80, 0
  br i1 %tobool81.not, label %land.lhs.true.do.end121_crit_edge, label %if.then82

land.lhs.true.do.end121_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end121

if.then82:                                        ; preds = %land.lhs.true
  %and83 = and i32 %21, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83)
  %tobool84.not = icmp eq i32 %and83, 0
  br i1 %tobool84.not, label %if.else91, label %do.end88

do.end88:                                         ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #17
  %call90 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, i32 noundef %offset) #18
  br label %if.end126

if.else91:                                        ; preds = %if.then82
  %and92 = and i32 %21, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and92)
  %tobool93.not = icmp eq i32 %and92, 0
  br i1 %tobool93.not, label %if.else100, label %do.end97

do.end97:                                         ; preds = %if.else91
  call void @__sanitizer_cov_trace_pc() #17
  %call99 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, i32 noundef %offset) #18
  br label %if.end126

if.else100:                                       ; preds = %if.else91
  %and101 = and i32 %21, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and101)
  %tobool102.not = icmp eq i32 %and101, 0
  br i1 %tobool102.not, label %do.end112, label %do.end106

do.end106:                                        ; preds = %if.else100
  call void @__sanitizer_cov_trace_pc() #17
  %call108 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.18, i32 noundef %offset) #18
  br label %if.end126

do.end112:                                        ; preds = %if.else100
  call void @__sanitizer_cov_trace_pc() #17
  %call114 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.21, i32 noundef %offset) #18
  br label %if.end126

do.end121:                                        ; preds = %land.lhs.true.do.end121_crit_edge, %if.then76.do.end121_crit_edge
  %call123 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.24, i32 noundef %offset) #18
  br label %if.end126

if.end126:                                        ; preds = %do.end121, %do.end112, %do.end106, %do.end97, %do.end88, %for.body.if.end126_crit_edge, %do.body54
  %27 = load ptr, ptr @gfx_v9_0_rlcg_rw.scratch_reg0, align 4
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %27) #15, !srcloc !1040
  %29 = tail call i32 @llvm.bswap.i32(i32 %28)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1042
  ret i32 %29
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_irq_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gfx_v9_4_2_do_edc_gpr_workarounds(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_irq_add_id(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v9_0_init_microcode(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  %fw_name.i67 = alloca [30 x i8], align 1
  %fw_name.i53 = alloca [30 x i8], align 1
  %smu_version.i = alloca i32, align 4
  %fw_name.i = alloca [30 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.36) #15
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.411)
  switch i32 %1, label %do.body [
    i32 589825, label %entry.sw.epilog_crit_edge
    i32 590337, label %sw.bb2
    i32 590848, label %sw.bb3
    i32 590338, label %entry.sw.bb4_crit_edge
    i32 590080, label %entry.sw.bb4_crit_edge96
    i32 590849, label %sw.bb11
    i32 590592, label %sw.bb12
    i32 590850, label %sw.bb19
  ]

entry.sw.bb4_crit_edge96:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb4

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb4

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge96
  %apu_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %3 = ptrtoint ptr %apu_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %apu_flags, align 4
  %and = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %sw.bb4.sw.epilog_crit_edge

sw.bb4.sw.epilog_crit_edge:                       ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #17
  %and6 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %.str.42..str.41 = select i1 %tobool7.not, ptr @.str.42, ptr @.str.41
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %apu_flags13 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %5 = ptrtoint ptr %apu_flags13 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %apu_flags13, align 4
  %and14 = and i32 %6, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  %.str.45..str.44 = select i1 %tobool15.not, ptr @.str.45, ptr @.str.44
  br label %sw.epilog

sw.bb19:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1766, 0\0A.popsection", ""() #15, !srcloc !1043
  unreachable

sw.epilog:                                        ; preds = %sw.bb19, %sw.bb12, %sw.bb11, %if.else, %sw.bb4.sw.epilog_crit_edge, %sw.bb3, %sw.bb2, %entry.sw.epilog_crit_edge
  %chip_name.0 = phi ptr [ @.str.46, %sw.bb19 ], [ @.str.43, %sw.bb11 ], [ @.str.39, %sw.bb3 ], [ @.str.38, %sw.bb2 ], [ @.str.37, %entry.sw.epilog_crit_edge ], [ @.str.40, %sw.bb4.sw.epilog_crit_edge ], [ %.str.42..str.41, %if.else ], [ %.str.45..str.44, %sw.bb12 ]
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %7 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool23.not = icmp eq i32 %8, 0
  br i1 %tobool23.not, label %sw.epilog.if.end28_crit_edge, label %if.then24

sw.epilog.if.end28_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end28

if.then24:                                        ; preds = %sw.epilog
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %fw_name.i) #15
  %9 = call ptr @memset(ptr %fw_name.i, i32 255, i32 30)
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 30, ptr noundef nonnull @.str.47, ptr noundef nonnull %chip_name.0) #15
  %pfp_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 11
  %10 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %adev, align 8
  %call2.i = call i32 @request_firmware(ptr noundef %pfp_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %11) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then24.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge

if.then24.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge: ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_gfx_microcode.exit

if.end.i:                                         ; preds = %if.then24
  %12 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pfp_fw.i, align 4
  %call5.i = call i32 @amdgpu_ucode_validate(ptr noundef %13) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge

if.end.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_gfx_microcode.exit

if.end8.i:                                        ; preds = %if.end.i
  %14 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pfp_fw.i, align 4
  %data.i = getelementptr inbounds %struct.firmware, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  %ucode_version.i = getelementptr inbounds %struct.common_firmware_header, ptr %17, i32 0, i32 6
  %18 = ptrtoint ptr %ucode_version.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ucode_version.i, align 4
  %20 = call i32 @llvm.bswap.i32(i32 %19) #15
  %pfp_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %21 = ptrtoint ptr %pfp_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %pfp_fw_version.i, align 8
  %ucode_feature_version.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %17, i32 0, i32 1
  %22 = ptrtoint ptr %ucode_feature_version.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ucode_feature_version.i, align 4
  %24 = call i32 @llvm.bswap.i32(i32 %23) #15
  %pfp_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 23
  %25 = ptrtoint ptr %pfp_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %pfp_feature_version.i, align 4
  %call15.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 30, ptr noundef nonnull @.str.48, ptr noundef nonnull %chip_name.0) #15
  %me_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 9
  %26 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %adev, align 8
  %call19.i = call i32 @request_firmware(ptr noundef %me_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %27) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %tobool20.not.i = icmp eq i32 %call19.i, 0
  br i1 %tobool20.not.i, label %if.end22.i, label %if.end8.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge

if.end8.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge: ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_gfx_microcode.exit

if.end22.i:                                       ; preds = %if.end8.i
  %28 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %me_fw.i, align 4
  %call25.i = call i32 @amdgpu_ucode_validate(ptr noundef %29) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool26.not.i = icmp eq i32 %call25.i, 0
  br i1 %tobool26.not.i, label %if.end28.i, label %if.end22.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge

if.end22.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge: ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_gfx_microcode.exit

if.end28.i:                                       ; preds = %if.end22.i
  %30 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %me_fw.i, align 4
  %data31.i = getelementptr inbounds %struct.firmware, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %data31.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %data31.i, align 4
  %ucode_version33.i = getelementptr inbounds %struct.common_firmware_header, ptr %33, i32 0, i32 6
  %34 = ptrtoint ptr %ucode_version33.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %ucode_version33.i, align 4
  %36 = call i32 @llvm.bswap.i32(i32 %35) #15
  %me_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %37 = ptrtoint ptr %me_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %me_fw_version.i, align 8
  %ucode_feature_version35.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %33, i32 0, i32 1
  %38 = ptrtoint ptr %ucode_feature_version35.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ucode_feature_version35.i, align 4
  %40 = call i32 @llvm.bswap.i32(i32 %39) #15
  %me_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 21
  %41 = ptrtoint ptr %me_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %me_feature_version.i, align 4
  %call38.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 30, ptr noundef nonnull @.str.49, ptr noundef nonnull %chip_name.0) #15
  %ce_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 13
  %42 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %adev, align 8
  %call42.i = call i32 @request_firmware(ptr noundef %ce_fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %43) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i)
  %tobool43.not.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.not.i, label %if.end45.i, label %if.end28.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge

if.end28.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge: ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_gfx_microcode.exit

if.end45.i:                                       ; preds = %if.end28.i
  %44 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %ce_fw.i, align 4
  %call48.i = call i32 @amdgpu_ucode_validate(ptr noundef %45) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48.i)
  %tobool49.not.i = icmp eq i32 %call48.i, 0
  br i1 %tobool49.not.i, label %if.end51.i, label %if.end45.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge

if.end45.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge: ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_gfx_microcode.exit

if.end51.i:                                       ; preds = %if.end45.i
  %46 = ptrtoint ptr %ce_fw.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ce_fw.i, align 4
  %data54.i = getelementptr inbounds %struct.firmware, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %data54.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %data54.i, align 4
  %ucode_version56.i = getelementptr inbounds %struct.common_firmware_header, ptr %49, i32 0, i32 6
  %50 = ptrtoint ptr %ucode_version56.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %ucode_version56.i, align 4
  %52 = call i32 @llvm.bswap.i32(i32 %51) #15
  %ce_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 14
  %53 = ptrtoint ptr %ce_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %ce_fw_version.i, align 8
  %ucode_feature_version58.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %49, i32 0, i32 1
  %54 = ptrtoint ptr %ucode_feature_version58.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %ucode_feature_version58.i, align 4
  %56 = call i32 @llvm.bswap.i32(i32 %55) #15
  %ce_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 22
  %57 = ptrtoint ptr %ce_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %ce_feature_version.i, align 8
  %load_type.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %58 = ptrtoint ptr %load_type.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %load_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %59)
  %cmp.i = icmp eq i32 %59, 2
  br i1 %cmp.i, label %if.then60.i, label %if.end51.i.gfx_v9_0_init_cp_gfx_microcode.exit.thread_crit_edge

if.end51.i.gfx_v9_0_init_cp_gfx_microcode.exit.thread_crit_edge: ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_gfx_microcode.exit.thread

if.then60.i:                                      ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 9
  %60 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 9, ptr %arrayidx.i, align 8
  %61 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %pfp_fw.i, align 4
  %fw.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 9, i32 1
  %63 = ptrtoint ptr %fw.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %62, ptr %fw.i, align 4
  %data65.i = getelementptr inbounds %struct.firmware, ptr %62, i32 0, i32 1
  %64 = ptrtoint ptr %data65.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %data65.i, align 4
  %ucode_size_bytes.i = getelementptr inbounds %struct.common_firmware_header, ptr %65, i32 0, i32 7
  %66 = ptrtoint ptr %ucode_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %ucode_size_bytes.i, align 4
  %68 = call i32 @llvm.bswap.i32(i32 %67) #15
  %add.i = add i32 %68, 4095
  %and.i = and i32 %add.i, -4096
  %fw_size.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 3
  %69 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %fw_size.i, align 8
  %add67.i = add i32 %and.i, %70
  store i32 %add67.i, ptr %fw_size.i, align 8
  %arrayidx70.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 10
  %71 = ptrtoint ptr %arrayidx70.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 10, ptr %arrayidx70.i, align 8
  %72 = ptrtoint ptr %me_fw.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %me_fw.i, align 4
  %fw74.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 10, i32 1
  %74 = ptrtoint ptr %fw74.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %73, ptr %fw74.i, align 4
  %data76.i = getelementptr inbounds %struct.firmware, ptr %73, i32 0, i32 1
  %75 = ptrtoint ptr %data76.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %data76.i, align 4
  %ucode_size_bytes77.i = getelementptr inbounds %struct.common_firmware_header, ptr %76, i32 0, i32 7
  %77 = ptrtoint ptr %ucode_size_bytes77.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %ucode_size_bytes77.i, align 4
  %79 = call i32 @llvm.bswap.i32(i32 %78) #15
  %add78.i = add i32 %79, 4095
  %and79.i = and i32 %add78.i, -4096
  %add82.i = add i32 %and79.i, %add67.i
  %80 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %add82.i, ptr %fw_size.i, align 8
  %arrayidx85.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 8
  %81 = ptrtoint ptr %arrayidx85.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 8, ptr %arrayidx85.i, align 8
  %fw89.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 8, i32 1
  %82 = ptrtoint ptr %fw89.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %47, ptr %fw89.i, align 4
  %83 = ptrtoint ptr %data54.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %data54.i, align 4
  %ucode_size_bytes92.i = getelementptr inbounds %struct.common_firmware_header, ptr %84, i32 0, i32 7
  %85 = ptrtoint ptr %ucode_size_bytes92.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %ucode_size_bytes92.i, align 4
  %87 = call i32 @llvm.bswap.i32(i32 %86) #15
  %add93.i = add i32 %87, 4095
  %and94.i = and i32 %add93.i, -4096
  %add97.i = add i32 %and94.i, %add82.i
  %88 = ptrtoint ptr %fw_size.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %add97.i, ptr %fw_size.i, align 8
  br label %gfx_v9_0_init_cp_gfx_microcode.exit.thread

gfx_v9_0_init_cp_gfx_microcode.exit.thread:       ; preds = %if.then60.i, %if.end51.i.gfx_v9_0_init_cp_gfx_microcode.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %fw_name.i) #15
  br label %if.end28

gfx_v9_0_init_cp_gfx_microcode.exit:              ; preds = %if.end45.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge, %if.end28.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge, %if.end22.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge, %if.end8.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge, %if.end.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge, %if.then24.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge
  %err.0.ph.i = phi i32 [ %call48.i, %if.end45.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge ], [ %call42.i, %if.end28.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge ], [ %call25.i, %if.end22.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge ], [ %call19.i, %if.end8.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge ], [ %call5.i, %if.end.i.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge ], [ %call2.i, %if.then24.gfx_v9_0_init_cp_gfx_microcode.exit_crit_edge ]
  %89 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %90, ptr noundef nonnull @.str.50, ptr noundef nonnull %fw_name.i) #18
  %91 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %pfp_fw.i, align 4
  call void @release_firmware(ptr noundef %92) #15
  %93 = ptrtoint ptr %pfp_fw.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr null, ptr %pfp_fw.i, align 4
  %me_fw108.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 9
  %94 = ptrtoint ptr %me_fw108.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %me_fw108.i, align 4
  call void @release_firmware(ptr noundef %95) #15
  %96 = ptrtoint ptr %me_fw108.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr null, ptr %me_fw108.i, align 4
  %ce_fw112.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 13
  %97 = ptrtoint ptr %ce_fw112.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %ce_fw112.i, align 4
  call void @release_firmware(ptr noundef %98) #15
  %99 = ptrtoint ptr %ce_fw112.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr null, ptr %ce_fw112.i, align 4
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %fw_name.i) #15
  br label %cleanup

if.end28:                                         ; preds = %gfx_v9_0_init_cp_gfx_microcode.exit.thread, %sw.epilog.if.end28_crit_edge
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %fw_name.i53) #15
  %100 = call ptr @memset(ptr %fw_name.i53, i32 255, i32 30)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %smu_version.i) #15
  %101 = ptrtoint ptr %smu_version.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 -1, ptr %smu_version.i, align 4, !annotation !1019
  %call.i54 = call i32 @strcmp(ptr noundef nonnull %chip_name.0, ptr noundef nonnull dereferenceable(8) @.str.41) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i54)
  %tobool.not.i55 = icmp eq i32 %call.i54, 0
  br i1 %tobool.not.i55, label %land.lhs.true.i, label %if.end28.if.else.i_crit_edge

if.end28.if.else.i_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.end28
  %pdev.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %102 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %pdev.i, align 4
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %103, i32 0, i32 12
  %104 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %revision.i, align 4
  %106 = and i8 %105, -24
  call void @__sanitizer_cov_trace_const_cmp1(i8 -56, i8 %106)
  %107 = icmp eq i8 %106, -56
  br i1 %107, label %land.lhs.true.i.if.end35.i_crit_edge, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

land.lhs.true.i.if.end35.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end35.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.end28.if.else.i_crit_edge
  %call20.i = call i32 @strcmp(ptr noundef nonnull %chip_name.0, ptr noundef nonnull dereferenceable(6) @.str.42) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %tobool21.not.i = icmp eq i32 %call20.i, 0
  br i1 %tobool21.not.i, label %land.lhs.true22.i, label %if.else.i.if.else32.i_crit_edge

if.else.i.if.else32.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else32.i

land.lhs.true22.i:                                ; preds = %if.else.i
  %call23.i = call i32 @amdgpu_pm_load_smu_firmware(ptr noundef %adev, ptr noundef nonnull %smu_version.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %cmp24.i = icmp eq i32 %call23.i, 0
  br i1 %cmp24.i, label %land.lhs.true26.i, label %land.lhs.true22.i.if.else32.i_crit_edge

land.lhs.true22.i.if.else32.i_crit_edge:          ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else32.i

land.lhs.true26.i:                                ; preds = %land.lhs.true22.i
  %108 = ptrtoint ptr %smu_version.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %smu_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 269866, i32 %109)
  %cmp27.i = icmp ugt i32 %109, 269866
  br i1 %cmp27.i, label %land.lhs.true26.i.if.end35.i_crit_edge, label %land.lhs.true26.i.if.else32.i_crit_edge

land.lhs.true26.i.if.else32.i_crit_edge:          ; preds = %land.lhs.true26.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else32.i

land.lhs.true26.i.if.end35.i_crit_edge:           ; preds = %land.lhs.true26.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end35.i

if.else32.i:                                      ; preds = %land.lhs.true26.i.if.else32.i_crit_edge, %land.lhs.true22.i.if.else32.i_crit_edge, %if.else.i.if.else32.i_crit_edge
  br label %if.end35.i

if.end35.i:                                       ; preds = %if.else32.i, %land.lhs.true26.i.if.end35.i_crit_edge, %land.lhs.true.i.if.end35.i_crit_edge
  %.str.55.sink.i = phi ptr [ @.str.56, %if.else32.i ], [ @.str.54, %land.lhs.true.i.if.end35.i_crit_edge ], [ @.str.55, %land.lhs.true26.i.if.end35.i_crit_edge ]
  %call31.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i53, i32 noundef 30, ptr noundef nonnull %.str.55.sink.i, ptr noundef nonnull %chip_name.0) #15
  %rlc_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 15
  %110 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %adev, align 8
  %call37.i = call i32 @request_firmware(ptr noundef %rlc_fw.i, ptr noundef nonnull %fw_name.i53, ptr noundef %111) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37.i)
  %tobool38.not.i = icmp eq i32 %call37.i, 0
  br i1 %tobool38.not.i, label %if.end40.i, label %if.end35.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge

if.end35.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge: ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_rlc_microcode.exit

if.end40.i:                                       ; preds = %if.end35.i
  %112 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %rlc_fw.i, align 4
  %call43.i = call i32 @amdgpu_ucode_validate(ptr noundef %113) #15
  %114 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %rlc_fw.i, align 4
  %data.i56 = getelementptr inbounds %struct.firmware, ptr %115, i32 0, i32 1
  %116 = ptrtoint ptr %data.i56 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %data.i56, align 4
  %header_version_major.i = getelementptr inbounds %struct.common_firmware_header, ptr %117, i32 0, i32 2
  %118 = ptrtoint ptr %header_version_major.i to i32
  call void @__asan_load2_noabort(i32 %118)
  %119 = load i16, ptr %header_version_major.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 512, i16 %119)
  %cmp49.i = icmp eq i16 %119, 512
  br i1 %cmp49.i, label %land.lhs.true51.i, label %if.end40.i.if.end57.i_crit_edge

if.end40.i.if.end57.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57.i

land.lhs.true51.i:                                ; preds = %if.end40.i
  %header_version_minor.i = getelementptr inbounds %struct.common_firmware_header, ptr %117, i32 0, i32 3
  %120 = ptrtoint ptr %header_version_minor.i to i32
  call void @__asan_load2_noabort(i32 %120)
  %121 = load i16, ptr %header_version_minor.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %121)
  %cmp53.i = icmp eq i16 %121, 256
  br i1 %cmp53.i, label %if.then55.i, label %land.lhs.true51.i.if.end57.i_crit_edge

land.lhs.true51.i.if.end57.i_crit_edge:           ; preds = %land.lhs.true51.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57.i

if.then55.i:                                      ; preds = %land.lhs.true51.i
  call void @__sanitizer_cov_trace_pc() #17
  %is_rlc_v2_1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 38
  %122 = ptrtoint ptr %is_rlc_v2_1.i to i32
  call void @__asan_store1_noabort(i32 %122)
  store i8 1, ptr %is_rlc_v2_1.i, align 8
  br label %if.end57.i

if.end57.i:                                       ; preds = %if.then55.i, %land.lhs.true51.i.if.end57.i_crit_edge, %if.end40.i.if.end57.i_crit_edge
  %ucode_version.i57 = getelementptr inbounds %struct.common_firmware_header, ptr %117, i32 0, i32 6
  %123 = ptrtoint ptr %ucode_version.i57 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %ucode_version.i57, align 4
  %125 = call i32 @llvm.bswap.i32(i32 %124) #15
  %rlc_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 16
  %126 = ptrtoint ptr %rlc_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %126)
  store i32 %125, ptr %rlc_fw_version.i, align 8
  %ucode_feature_version.i58 = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 1
  %127 = ptrtoint ptr %ucode_feature_version.i58 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %ucode_feature_version.i58, align 4
  %129 = call i32 @llvm.bswap.i32(i32 %128) #15
  %rlc_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 24
  %130 = ptrtoint ptr %rlc_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 %129, ptr %rlc_feature_version.i, align 8
  %save_and_restore_offset.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 4
  %131 = ptrtoint ptr %save_and_restore_offset.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %save_and_restore_offset.i, align 4
  %133 = call i32 @llvm.bswap.i32(i32 %132) #15
  %save_and_restore_offset63.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 16
  %134 = ptrtoint ptr %save_and_restore_offset63.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %133, ptr %save_and_restore_offset63.i, align 8
  %clear_state_descriptor_offset.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 5
  %135 = ptrtoint ptr %clear_state_descriptor_offset.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %clear_state_descriptor_offset.i, align 4
  %137 = call i32 @llvm.bswap.i32(i32 %136) #15
  %clear_state_descriptor_offset66.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 17
  %138 = ptrtoint ptr %clear_state_descriptor_offset66.i to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 %137, ptr %clear_state_descriptor_offset66.i, align 4
  %avail_scratch_ram_locations.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 6
  %139 = ptrtoint ptr %avail_scratch_ram_locations.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %avail_scratch_ram_locations.i, align 4
  %141 = call i32 @llvm.bswap.i32(i32 %140) #15
  %avail_scratch_ram_locations69.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 18
  %142 = ptrtoint ptr %avail_scratch_ram_locations69.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %141, ptr %avail_scratch_ram_locations69.i, align 8
  %reg_restore_list_size.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 7
  %143 = ptrtoint ptr %reg_restore_list_size.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %reg_restore_list_size.i, align 4
  %145 = call i32 @llvm.bswap.i32(i32 %144) #15
  %reg_restore_list_size72.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 19
  %146 = ptrtoint ptr %reg_restore_list_size72.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 %145, ptr %reg_restore_list_size72.i, align 4
  %reg_list_format_start.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 8
  %147 = ptrtoint ptr %reg_list_format_start.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %reg_list_format_start.i, align 4
  %149 = call i32 @llvm.bswap.i32(i32 %148) #15
  %reg_list_format_start75.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 20
  %150 = ptrtoint ptr %reg_list_format_start75.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 %149, ptr %reg_list_format_start75.i, align 8
  %reg_list_format_separate_start.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 9
  %151 = ptrtoint ptr %reg_list_format_separate_start.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %reg_list_format_separate_start.i, align 4
  %153 = call i32 @llvm.bswap.i32(i32 %152) #15
  %reg_list_format_separate_start78.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 21
  %154 = ptrtoint ptr %reg_list_format_separate_start78.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 %153, ptr %reg_list_format_separate_start78.i, align 4
  %starting_offsets_start.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 10
  %155 = ptrtoint ptr %starting_offsets_start.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %starting_offsets_start.i, align 4
  %157 = call i32 @llvm.bswap.i32(i32 %156) #15
  %starting_offsets_start81.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 22
  %158 = ptrtoint ptr %starting_offsets_start81.i to i32
  call void @__asan_store4_noabort(i32 %158)
  store i32 %157, ptr %starting_offsets_start81.i, align 8
  %reg_list_format_size_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 11
  %159 = ptrtoint ptr %reg_list_format_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %reg_list_format_size_bytes.i, align 4
  %161 = call i32 @llvm.bswap.i32(i32 %160) #15
  %reg_list_format_size_bytes84.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 23
  %162 = ptrtoint ptr %reg_list_format_size_bytes84.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 %161, ptr %reg_list_format_size_bytes84.i, align 4
  %reg_list_size_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 13
  %163 = ptrtoint ptr %reg_list_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %reg_list_size_bytes.i, align 4
  %165 = call i32 @llvm.bswap.i32(i32 %164) #15
  %reg_list_size_bytes87.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 24
  %166 = ptrtoint ptr %reg_list_size_bytes87.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %165, ptr %reg_list_size_bytes87.i, align 8
  %add.i59 = add i32 %165, %161
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add.i59, i32 noundef 3264) #20
  %register_list_format.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 31
  %167 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr %call9.i.i, ptr %register_list_format.i, align 4
  %tobool100.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool100.not.i, label %if.end57.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge, label %if.end102.i

if.end57.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge: ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_rlc_microcode.exit

if.end102.i:                                      ; preds = %if.end57.i
  %168 = ptrtoint ptr %117 to i32
  %reg_list_format_array_offset_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 12
  %169 = ptrtoint ptr %reg_list_format_array_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %reg_list_format_array_offset_bytes.i, align 4
  %171 = call i32 @llvm.bswap.i32(i32 %170) #15
  %add103.i = add i32 %171, %168
  %172 = inttoptr i32 %add103.i to ptr
  %173 = ptrtoint ptr %reg_list_format_size_bytes84.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %reg_list_format_size_bytes84.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %174)
  %cmp107332.not.i = icmp ult i32 %174, 4
  br i1 %cmp107332.not.i, label %if.end102.i.for.end.i_crit_edge, label %if.end102.i.for.body.i_crit_edge

if.end102.i.for.body.i_crit_edge:                 ; preds = %if.end102.i
  br label %for.body.i

if.end102.i.for.end.i_crit_edge:                  ; preds = %if.end102.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end102.i.for.body.i_crit_edge
  %i.0333.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end102.i.for.body.i_crit_edge ]
  %arrayidx.i60 = getelementptr i32, ptr %172, i32 %i.0333.i
  %175 = ptrtoint ptr %arrayidx.i60 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %arrayidx.i60, align 4
  %177 = call i32 @llvm.bswap.i32(i32 %176) #15
  %178 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %register_list_format.i, align 4
  %arrayidx112.i = getelementptr i32, ptr %179, i32 %i.0333.i
  %180 = ptrtoint ptr %arrayidx112.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 %177, ptr %arrayidx112.i, align 4
  %inc.i = add nuw nsw i32 %i.0333.i, 1
  %181 = ptrtoint ptr %reg_list_format_size_bytes84.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %reg_list_format_size_bytes84.i, align 4
  %shr.i = lshr i32 %182, 2
  %cmp107.i = icmp ult i32 %inc.i, %shr.i
  br i1 %cmp107.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.for.end.i_crit_edge

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.end102.i.for.end.i_crit_edge
  %i.0.lcssa.i = phi i32 [ 0, %if.end102.i.for.end.i_crit_edge ], [ %inc.i, %for.body.i.for.end.i_crit_edge ]
  %183 = ptrtoint ptr %register_list_format.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %register_list_format.i, align 4
  %add.ptr.i = getelementptr i32, ptr %184, i32 %i.0.lcssa.i
  %register_restore.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 32
  %185 = ptrtoint ptr %register_restore.i to i32
  call void @__asan_store4_noabort(i32 %185)
  store ptr %add.ptr.i, ptr %register_restore.i, align 8
  %reg_list_array_offset_bytes.i = getelementptr inbounds %struct.rlc_firmware_header_v2_0, ptr %117, i32 0, i32 14
  %186 = ptrtoint ptr %reg_list_array_offset_bytes.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %reg_list_array_offset_bytes.i, align 4
  %188 = call i32 @llvm.bswap.i32(i32 %187) #15
  %add118.i = add i32 %188, %168
  %189 = inttoptr i32 %add118.i to ptr
  %190 = ptrtoint ptr %reg_list_size_bytes87.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %reg_list_size_bytes87.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %191)
  %cmp124335.not.i = icmp ult i32 %191, 4
  br i1 %cmp124335.not.i, label %for.end.i.for.end134.i_crit_edge, label %for.end.i.for.body126.i_crit_edge

for.end.i.for.body126.i_crit_edge:                ; preds = %for.end.i
  br label %for.body126.i

for.end.i.for.end134.i_crit_edge:                 ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end134.i

for.body126.i:                                    ; preds = %for.body126.i.for.body126.i_crit_edge, %for.end.i.for.body126.i_crit_edge
  %i.1336.i = phi i32 [ %inc133.i, %for.body126.i.for.body126.i_crit_edge ], [ 0, %for.end.i.for.body126.i_crit_edge ]
  %arrayidx127.i = getelementptr i32, ptr %189, i32 %i.1336.i
  %192 = ptrtoint ptr %arrayidx127.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %arrayidx127.i, align 4
  %194 = call i32 @llvm.bswap.i32(i32 %193) #15
  %195 = ptrtoint ptr %register_restore.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %register_restore.i, align 8
  %arrayidx131.i = getelementptr i32, ptr %196, i32 %i.1336.i
  %197 = ptrtoint ptr %arrayidx131.i to i32
  call void @__asan_store4_noabort(i32 %197)
  store i32 %194, ptr %arrayidx131.i, align 4
  %inc133.i = add nuw nsw i32 %i.1336.i, 1
  %198 = ptrtoint ptr %reg_list_size_bytes87.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %reg_list_size_bytes87.i, align 8
  %shr123.i = lshr i32 %199, 2
  %cmp124.i = icmp ult i32 %inc133.i, %shr123.i
  br i1 %cmp124.i, label %for.body126.i.for.body126.i_crit_edge, label %for.body126.i.for.end134.i_crit_edge

for.body126.i.for.end134.i_crit_edge:             ; preds = %for.body126.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end134.i

for.body126.i.for.body126.i_crit_edge:            ; preds = %for.body126.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body126.i

for.end134.i:                                     ; preds = %for.body126.i.for.end134.i_crit_edge, %for.end.i.for.end134.i_crit_edge
  %is_rlc_v2_1137.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 38
  %200 = ptrtoint ptr %is_rlc_v2_1137.i to i32
  call void @__asan_load1_noabort(i32 %200)
  %201 = load i8, ptr %is_rlc_v2_1137.i, align 8, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %201)
  %tobool138.not.i = icmp eq i8 %201, 0
  br i1 %tobool138.not.i, label %for.end134.i.if.end140.i_crit_edge, label %if.then139.i

for.end134.i.if.end140.i_crit_edge:               ; preds = %for.end134.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end140.i

if.then139.i:                                     ; preds = %for.end134.i
  call void @__sanitizer_cov_trace_pc() #17
  %202 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %rlc_fw.i, align 4
  %data.i.i = getelementptr inbounds %struct.firmware, ptr %203, i32 0, i32 1
  %204 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %data.i.i, align 4
  %save_restore_list_cntl_ucode_ver.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 2
  %206 = ptrtoint ptr %save_restore_list_cntl_ucode_ver.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %save_restore_list_cntl_ucode_ver.i.i, align 4
  %208 = call i32 @llvm.bswap.i32(i32 %207) #15
  %rlc_srlc_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 25
  %209 = ptrtoint ptr %rlc_srlc_fw_version.i.i to i32
  call void @__asan_store4_noabort(i32 %209)
  store i32 %208, ptr %rlc_srlc_fw_version.i.i, align 4
  %save_restore_list_cntl_feature_ver.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 3
  %210 = ptrtoint ptr %save_restore_list_cntl_feature_ver.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %save_restore_list_cntl_feature_ver.i.i, align 4
  %212 = call i32 @llvm.bswap.i32(i32 %211) #15
  %rlc_srlc_feature_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 26
  %213 = ptrtoint ptr %rlc_srlc_feature_version.i.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 %212, ptr %rlc_srlc_feature_version.i.i, align 8
  %save_restore_list_cntl_size_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 4
  %214 = ptrtoint ptr %save_restore_list_cntl_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %save_restore_list_cntl_size_bytes.i.i, align 4
  %216 = call i32 @llvm.bswap.i32(i32 %215) #15
  %save_restore_list_cntl_size_bytes4.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 26
  %217 = ptrtoint ptr %save_restore_list_cntl_size_bytes4.i.i to i32
  call void @__asan_store4_noabort(i32 %217)
  store i32 %216, ptr %save_restore_list_cntl_size_bytes4.i.i, align 8
  %save_restore_list_cntl_offset_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 5
  %218 = ptrtoint ptr %save_restore_list_cntl_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %save_restore_list_cntl_offset_bytes.i.i, align 4
  %220 = call i32 @llvm.bswap.i32(i32 %219) #15
  %add.ptr.i.i = getelementptr i8, ptr %205, i32 %220
  %save_restore_list_cntl.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 33
  %221 = ptrtoint ptr %save_restore_list_cntl.i.i to i32
  call void @__asan_store4_noabort(i32 %221)
  store ptr %add.ptr.i.i, ptr %save_restore_list_cntl.i.i, align 4
  %save_restore_list_gpm_ucode_ver.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 6
  %222 = ptrtoint ptr %save_restore_list_gpm_ucode_ver.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %save_restore_list_gpm_ucode_ver.i.i, align 4
  %224 = call i32 @llvm.bswap.i32(i32 %223) #15
  %rlc_srlg_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 27
  %225 = ptrtoint ptr %rlc_srlg_fw_version.i.i to i32
  call void @__asan_store4_noabort(i32 %225)
  store i32 %224, ptr %rlc_srlg_fw_version.i.i, align 4
  %save_restore_list_gpm_feature_ver.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 7
  %226 = ptrtoint ptr %save_restore_list_gpm_feature_ver.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %save_restore_list_gpm_feature_ver.i.i, align 4
  %228 = call i32 @llvm.bswap.i32(i32 %227) #15
  %rlc_srlg_feature_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 28
  %229 = ptrtoint ptr %rlc_srlg_feature_version.i.i to i32
  call void @__asan_store4_noabort(i32 %229)
  store i32 %228, ptr %rlc_srlg_feature_version.i.i, align 8
  %save_restore_list_gpm_size_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 8
  %230 = ptrtoint ptr %save_restore_list_gpm_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %save_restore_list_gpm_size_bytes.i.i, align 4
  %232 = call i32 @llvm.bswap.i32(i32 %231) #15
  %save_restore_list_gpm_size_bytes11.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 27
  %233 = ptrtoint ptr %save_restore_list_gpm_size_bytes11.i.i to i32
  call void @__asan_store4_noabort(i32 %233)
  store i32 %232, ptr %save_restore_list_gpm_size_bytes11.i.i, align 4
  %save_restore_list_gpm_offset_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 9
  %234 = ptrtoint ptr %save_restore_list_gpm_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %save_restore_list_gpm_offset_bytes.i.i, align 4
  %236 = call i32 @llvm.bswap.i32(i32 %235) #15
  %add.ptr12.i.i = getelementptr i8, ptr %205, i32 %236
  %save_restore_list_gpm.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 34
  %237 = ptrtoint ptr %save_restore_list_gpm.i.i to i32
  call void @__asan_store4_noabort(i32 %237)
  store ptr %add.ptr12.i.i, ptr %save_restore_list_gpm.i.i, align 8
  %save_restore_list_srm_ucode_ver.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 10
  %238 = ptrtoint ptr %save_restore_list_srm_ucode_ver.i.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %save_restore_list_srm_ucode_ver.i.i, align 4
  %240 = call i32 @llvm.bswap.i32(i32 %239) #15
  %rlc_srls_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 29
  %241 = ptrtoint ptr %rlc_srls_fw_version.i.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 %240, ptr %rlc_srls_fw_version.i.i, align 4
  %save_restore_list_srm_feature_ver.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 11
  %242 = ptrtoint ptr %save_restore_list_srm_feature_ver.i.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %save_restore_list_srm_feature_ver.i.i, align 4
  %244 = call i32 @llvm.bswap.i32(i32 %243) #15
  %rlc_srls_feature_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 30
  %245 = ptrtoint ptr %rlc_srls_feature_version.i.i to i32
  call void @__asan_store4_noabort(i32 %245)
  store i32 %244, ptr %rlc_srls_feature_version.i.i, align 8
  %save_restore_list_srm_size_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 12
  %246 = ptrtoint ptr %save_restore_list_srm_size_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %save_restore_list_srm_size_bytes.i.i, align 4
  %248 = call i32 @llvm.bswap.i32(i32 %247) #15
  %save_restore_list_srm_size_bytes19.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 28
  %249 = ptrtoint ptr %save_restore_list_srm_size_bytes19.i.i to i32
  call void @__asan_store4_noabort(i32 %249)
  store i32 %248, ptr %save_restore_list_srm_size_bytes19.i.i, align 8
  %save_restore_list_srm_offset_bytes.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 13
  %250 = ptrtoint ptr %save_restore_list_srm_offset_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %save_restore_list_srm_offset_bytes.i.i, align 4
  %252 = call i32 @llvm.bswap.i32(i32 %251) #15
  %add.ptr20.i.i = getelementptr i8, ptr %205, i32 %252
  %save_restore_list_srm.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 35
  %253 = ptrtoint ptr %save_restore_list_srm.i.i to i32
  call void @__asan_store4_noabort(i32 %253)
  store ptr %add.ptr20.i.i, ptr %save_restore_list_srm.i.i, align 4
  %reg_list_format_direct_reg_list_length.i.i = getelementptr inbounds %struct.rlc_firmware_header_v2_1, ptr %205, i32 0, i32 1
  %254 = ptrtoint ptr %reg_list_format_direct_reg_list_length.i.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %reg_list_format_direct_reg_list_length.i.i, align 4
  %256 = call i32 @llvm.bswap.i32(i32 %255) #15
  %reg_list_format_direct_reg_list_length25.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 25
  %257 = ptrtoint ptr %reg_list_format_direct_reg_list_length25.i.i to i32
  call void @__asan_store4_noabort(i32 %257)
  store i32 %256, ptr %reg_list_format_direct_reg_list_length25.i.i, align 4
  br label %if.end140.i

if.end140.i:                                      ; preds = %if.then139.i, %for.end134.i.if.end140.i_crit_edge
  %load_type.i61 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 1
  %258 = ptrtoint ptr %load_type.i61 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %load_type.i61, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %259)
  %cmp141.i = icmp eq i32 %259, 2
  br i1 %cmp141.i, label %if.then143.i, label %if.end140.i.out.i_crit_edge

if.end140.i.out.i_crit_edge:                      ; preds = %if.end140.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

if.then143.i:                                     ; preds = %if.end140.i
  %arrayidx145.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 22
  %260 = ptrtoint ptr %arrayidx145.i to i32
  call void @__asan_store4_noabort(i32 %260)
  store i32 22, ptr %arrayidx145.i, align 8
  %261 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %rlc_fw.i, align 4
  %fw.i62 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 22, i32 1
  %263 = ptrtoint ptr %fw.i62 to i32
  call void @__asan_store4_noabort(i32 %263)
  store ptr %262, ptr %fw.i62, align 4
  %data149.i = getelementptr inbounds %struct.firmware, ptr %262, i32 0, i32 1
  %264 = ptrtoint ptr %data149.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %data149.i, align 4
  %ucode_size_bytes.i63 = getelementptr inbounds %struct.common_firmware_header, ptr %265, i32 0, i32 7
  %266 = ptrtoint ptr %ucode_size_bytes.i63 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %ucode_size_bytes.i63, align 4
  %268 = call i32 @llvm.bswap.i32(i32 %267) #15
  %add150.i = add i32 %268, 4095
  %and.i64 = and i32 %add150.i, -4096
  %fw_size.i65 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 3
  %269 = ptrtoint ptr %fw_size.i65 to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load i32, ptr %fw_size.i65, align 8
  %add152.i = add i32 %and.i64, %270
  store i32 %add152.i, ptr %fw_size.i65, align 8
  br i1 %tobool138.not.i, label %if.then143.i.out.i_crit_edge, label %land.lhs.true158.i

if.then143.i.out.i_crit_edge:                     ; preds = %if.then143.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

land.lhs.true158.i:                               ; preds = %if.then143.i
  %save_restore_list_cntl_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 26
  %271 = ptrtoint ptr %save_restore_list_cntl_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %save_restore_list_cntl_size_bytes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %272)
  %tobool161.not.i = icmp eq i32 %272, 0
  br i1 %tobool161.not.i, label %land.lhs.true158.i.out.i_crit_edge, label %land.lhs.true162.i

land.lhs.true158.i.out.i_crit_edge:               ; preds = %land.lhs.true158.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

land.lhs.true162.i:                               ; preds = %land.lhs.true158.i
  %save_restore_list_gpm_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 27
  %273 = ptrtoint ptr %save_restore_list_gpm_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %save_restore_list_gpm_size_bytes.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %274)
  %tobool165.not.i = icmp eq i32 %274, 0
  br i1 %tobool165.not.i, label %land.lhs.true162.i.out.i_crit_edge, label %land.lhs.true166.i

land.lhs.true162.i.out.i_crit_edge:               ; preds = %land.lhs.true162.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

land.lhs.true166.i:                               ; preds = %land.lhs.true162.i
  %save_restore_list_srm_size_bytes.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 28
  %275 = ptrtoint ptr %save_restore_list_srm_size_bytes.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load i32, ptr %save_restore_list_srm_size_bytes.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %276)
  %tobool169.not.i = icmp eq i32 %276, 0
  br i1 %tobool169.not.i, label %land.lhs.true166.i.out.i_crit_edge, label %if.then170.i

land.lhs.true166.i.out.i_crit_edge:               ; preds = %land.lhs.true166.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

if.then170.i:                                     ; preds = %land.lhs.true166.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx173.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 17
  %277 = ptrtoint ptr %arrayidx173.i to i32
  call void @__asan_store4_noabort(i32 %277)
  store i32 17, ptr %arrayidx173.i, align 8
  %fw177.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 17, i32 1
  %278 = ptrtoint ptr %fw177.i to i32
  call void @__asan_store4_noabort(i32 %278)
  store ptr %262, ptr %fw177.i, align 4
  %add181.i = add i32 %272, 4095
  %and182.i = and i32 %add181.i, -4096
  %add185.i = add i32 %and182.i, %add152.i
  %arrayidx188.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 18
  %279 = ptrtoint ptr %arrayidx188.i to i32
  call void @__asan_store4_noabort(i32 %279)
  store i32 18, ptr %arrayidx188.i, align 8
  %fw192.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 18, i32 1
  %280 = ptrtoint ptr %fw192.i to i32
  call void @__asan_store4_noabort(i32 %280)
  store ptr %262, ptr %fw192.i, align 4
  %add196.i = add i32 %274, 4095
  %and197.i = and i32 %add196.i, -4096
  %add200.i = add i32 %add185.i, %and197.i
  %arrayidx203.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 19
  %281 = ptrtoint ptr %arrayidx203.i to i32
  call void @__asan_store4_noabort(i32 %281)
  store i32 19, ptr %arrayidx203.i, align 8
  %fw207.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 19, i32 1
  %282 = ptrtoint ptr %fw207.i to i32
  call void @__asan_store4_noabort(i32 %282)
  store ptr %262, ptr %fw207.i, align 4
  %add211.i = add i32 %276, 4095
  %and212.i = and i32 %add211.i, -4096
  %add215.i = add i32 %add200.i, %and212.i
  %283 = ptrtoint ptr %fw_size.i65 to i32
  call void @__asan_store4_noabort(i32 %283)
  store i32 %add215.i, ptr %fw_size.i65, align 8
  br label %out.i

out.i:                                            ; preds = %if.then170.i, %land.lhs.true166.i.out.i_crit_edge, %land.lhs.true162.i.out.i_crit_edge, %land.lhs.true158.i.out.i_crit_edge, %if.then143.i.out.i_crit_edge, %if.end140.i.out.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43.i)
  %tobool218.not.i = icmp eq i32 %call43.i, 0
  br i1 %tobool218.not.i, label %if.end32, label %out.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge

out.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge: ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_rlc_microcode.exit

gfx_v9_0_init_rlc_microcode.exit:                 ; preds = %out.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge, %if.end57.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge, %if.end35.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge
  %err.0328.i = phi i32 [ %call43.i, %out.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge ], [ -12, %if.end57.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge ], [ %call37.i, %if.end35.i.gfx_v9_0_init_rlc_microcode.exit_crit_edge ]
  %284 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %285, ptr noundef nonnull @.str.50, ptr noundef nonnull %fw_name.i53) #18
  %286 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %rlc_fw.i, align 4
  call void @release_firmware(ptr noundef %287) #15
  %288 = ptrtoint ptr %rlc_fw.i to i32
  call void @__asan_store4_noabort(i32 %288)
  store ptr null, ptr %rlc_fw.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %smu_version.i) #15
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %fw_name.i53) #15
  br label %cleanup

if.end32:                                         ; preds = %out.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %smu_version.i) #15
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %fw_name.i53) #15
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %fw_name.i67) #15
  %289 = call ptr @memset(ptr %fw_name.i67, i32 255, i32 30)
  %call.i68 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i67, i32 noundef 30, ptr noundef nonnull @.str.58, ptr noundef nonnull %chip_name.0) #15
  %mec_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 17
  %290 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %adev, align 8
  %call2.i69 = call i32 @request_firmware(ptr noundef %mec_fw.i, ptr noundef nonnull %fw_name.i67, ptr noundef %291) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i69)
  %tobool.not.i70 = icmp eq i32 %call2.i69, 0
  br i1 %tobool.not.i70, label %if.end.i73, label %if.end32.out.i87_crit_edge

if.end32.out.i87_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.end.i73:                                       ; preds = %if.end32
  %292 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %mec_fw.i, align 4
  %call5.i71 = call i32 @amdgpu_ucode_validate(ptr noundef %293) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i71)
  %tobool6.not.i72 = icmp eq i32 %call5.i71, 0
  br i1 %tobool6.not.i72, label %if.end8.i77, label %if.end.i73.out.i87_crit_edge

if.end.i73.out.i87_crit_edge:                     ; preds = %if.end.i73
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.end8.i77:                                      ; preds = %if.end.i73
  %294 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %mec_fw.i, align 4
  %data.i74 = getelementptr inbounds %struct.firmware, ptr %295, i32 0, i32 1
  %296 = ptrtoint ptr %data.i74 to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %data.i74, align 4
  %ucode_version.i75 = getelementptr inbounds %struct.common_firmware_header, ptr %297, i32 0, i32 6
  %298 = ptrtoint ptr %ucode_version.i75 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %ucode_version.i75, align 4
  %300 = call i32 @llvm.bswap.i32(i32 %299) #15
  %mec_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 18
  %301 = ptrtoint ptr %mec_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %301)
  store i32 %300, ptr %mec_fw_version.i, align 8
  %ucode_feature_version.i76 = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %297, i32 0, i32 1
  %302 = ptrtoint ptr %ucode_feature_version.i76 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %ucode_feature_version.i76, align 4
  %304 = call i32 @llvm.bswap.i32(i32 %303) #15
  %mec_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 31
  %305 = ptrtoint ptr %mec_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %305)
  store i32 %304, ptr %mec_feature_version.i, align 4
  %306 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %arrayidx, align 4
  %308 = zext i32 %307 to i64
  call void @__sanitizer_cov_trace_switch(i64 %308, ptr @__sancov_gen_cov_switch_values.412)
  switch i32 %307, label %if.then15.i [
    i32 590850, label %if.end8.i77.if.else41.i_crit_edge
    i32 590849, label %if.end8.i77.if.else41.i_crit_edge97
    i32 590592, label %if.end8.i77.if.else41.i_crit_edge98
  ]

if.end8.i77.if.else41.i_crit_edge98:              ; preds = %if.end8.i77
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else41.i

if.end8.i77.if.else41.i_crit_edge97:              ; preds = %if.end8.i77
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else41.i

if.end8.i77.if.else41.i_crit_edge:                ; preds = %if.end8.i77
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else41.i

if.then15.i:                                      ; preds = %if.end8.i77
  %call17.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i67, i32 noundef 30, ptr noundef nonnull @.str.59, ptr noundef nonnull %chip_name.0) #15
  %mec2_fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 19
  %309 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load ptr, ptr %adev, align 8
  %call21.i = call i32 @request_firmware(ptr noundef %mec2_fw.i, ptr noundef nonnull %fw_name.i67, ptr noundef %310) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %tobool22.not.i = icmp eq i32 %call21.i, 0
  br i1 %tobool22.not.i, label %if.then23.i, label %if.else.i78

if.then23.i:                                      ; preds = %if.then15.i
  %311 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %mec2_fw.i, align 4
  %call26.i = call i32 @amdgpu_ucode_validate(ptr noundef %312) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26.i)
  %tobool27.not.i = icmp eq i32 %call26.i, 0
  br i1 %tobool27.not.i, label %if.end29.i, label %if.then23.i.out.i87_crit_edge

if.then23.i.out.i87_crit_edge:                    ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.end29.i:                                       ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #17
  %313 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %mec2_fw.i, align 4
  %data32.i = getelementptr inbounds %struct.firmware, ptr %314, i32 0, i32 1
  %315 = ptrtoint ptr %data32.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %data32.i, align 4
  %ucode_version34.i = getelementptr inbounds %struct.common_firmware_header, ptr %316, i32 0, i32 6
  %317 = ptrtoint ptr %ucode_version34.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %ucode_version34.i, align 4
  %319 = call i32 @llvm.bswap.i32(i32 %318) #15
  %mec2_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 20
  %320 = ptrtoint ptr %mec2_fw_version.i to i32
  call void @__asan_store4_noabort(i32 %320)
  store i32 %319, ptr %mec2_fw_version.i, align 8
  %ucode_feature_version36.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %316, i32 0, i32 1
  %321 = ptrtoint ptr %ucode_feature_version36.i to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %ucode_feature_version36.i, align 4
  %323 = call i32 @llvm.bswap.i32(i32 %322) #15
  %mec2_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 32
  %324 = ptrtoint ptr %mec2_feature_version.i to i32
  call void @__asan_store4_noabort(i32 %324)
  store i32 %323, ptr %mec2_feature_version.i, align 8
  br label %if.end50.i

if.else.i78:                                      ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #17
  %325 = ptrtoint ptr %mec2_fw.i to i32
  call void @__asan_store4_noabort(i32 %325)
  store ptr null, ptr %mec2_fw.i, align 4
  br label %if.end50.i

if.else41.i:                                      ; preds = %if.end8.i77.if.else41.i_crit_edge, %if.end8.i77.if.else41.i_crit_edge97, %if.end8.i77.if.else41.i_crit_edge98
  %mec2_fw_version45.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 20
  %326 = ptrtoint ptr %mec2_fw_version45.i to i32
  call void @__asan_store4_noabort(i32 %326)
  store i32 %300, ptr %mec2_fw_version45.i, align 8
  %mec2_feature_version49.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 32
  %327 = ptrtoint ptr %mec2_feature_version49.i to i32
  call void @__asan_store4_noabort(i32 %327)
  store i32 %304, ptr %mec2_feature_version49.i, align 8
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.else41.i, %if.else.i78, %if.end29.i
  %328 = ptrtoint ptr %load_type.i61 to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load i32, ptr %load_type.i61, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %329)
  %cmp.i80 = icmp eq i32 %329, 2
  br i1 %cmp.i80, label %if.then51.i, label %if.end50.i.out.i87_crit_edge

if.end50.i.out.i87_crit_edge:                     ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.then51.i:                                      ; preds = %if.end50.i
  %arrayidx.i81 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 11
  %330 = ptrtoint ptr %arrayidx.i81 to i32
  call void @__asan_store4_noabort(i32 %330)
  store i32 11, ptr %arrayidx.i81, align 8
  %331 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load ptr, ptr %mec_fw.i, align 4
  %fw.i82 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 11, i32 1
  %333 = ptrtoint ptr %fw.i82 to i32
  call void @__asan_store4_noabort(i32 %333)
  store ptr %332, ptr %fw.i82, align 4
  %data56.i = getelementptr inbounds %struct.firmware, ptr %332, i32 0, i32 1
  %334 = ptrtoint ptr %data56.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %data56.i, align 4
  %ucode_size_bytes.i83 = getelementptr inbounds %struct.common_firmware_header, ptr %335, i32 0, i32 7
  %336 = ptrtoint ptr %ucode_size_bytes.i83 to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load i32, ptr %ucode_size_bytes.i83, align 4
  %338 = call i32 @llvm.bswap.i32(i32 %337) #15
  %jt_size.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %335, i32 0, i32 3
  %339 = ptrtoint ptr %jt_size.i to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load i32, ptr %jt_size.i, align 4
  %341 = call i32 @llvm.bswap.i32(i32 %340) #15
  %mul.neg.i = mul i32 %341, -4
  %sub.i = add i32 %338, 4095
  %add.i84 = add i32 %sub.i, %mul.neg.i
  %and.i85 = and i32 %add.i84, -4096
  %fw_size.i86 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 3
  %342 = ptrtoint ptr %fw_size.i86 to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %fw_size.i86, align 8
  %add60.i = add i32 %and.i85, %343
  store i32 %add60.i, ptr %fw_size.i86, align 8
  %arrayidx63.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 12
  %344 = ptrtoint ptr %arrayidx63.i to i32
  call void @__asan_store4_noabort(i32 %344)
  store i32 12, ptr %arrayidx63.i, align 8
  %fw67.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 12, i32 1
  %345 = ptrtoint ptr %fw67.i to i32
  call void @__asan_store4_noabort(i32 %345)
  store ptr %332, ptr %fw67.i, align 4
  %346 = ptrtoint ptr %jt_size.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load i32, ptr %jt_size.i, align 4
  %348 = call i32 @llvm.bswap.i32(i32 %347) #15
  %mul69.i = shl i32 %348, 2
  %add70.i = add i32 %mul69.i, 4095
  %and71.i = and i32 %add70.i, -4096
  %add74.i = add i32 %and71.i, %add60.i
  %349 = ptrtoint ptr %fw_size.i86 to i32
  call void @__asan_store4_noabort(i32 %349)
  store i32 %add74.i, ptr %fw_size.i86, align 8
  %mec2_fw76.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 19
  %350 = ptrtoint ptr %mec2_fw76.i to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load ptr, ptr %mec2_fw76.i, align 4
  %tobool77.not.i = icmp eq ptr %351, null
  br i1 %tobool77.not.i, label %if.then51.i.out.i87_crit_edge, label %if.then78.i

if.then51.i.out.i87_crit_edge:                    ; preds = %if.then51.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.then78.i:                                      ; preds = %if.then51.i
  %arrayidx81.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 13
  %352 = ptrtoint ptr %arrayidx81.i to i32
  call void @__asan_store4_noabort(i32 %352)
  store i32 13, ptr %arrayidx81.i, align 8
  %fw85.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 13, i32 1
  %353 = ptrtoint ptr %fw85.i to i32
  call void @__asan_store4_noabort(i32 %353)
  store ptr %351, ptr %fw85.i, align 4
  %data87.i = getelementptr inbounds %struct.firmware, ptr %351, i32 0, i32 1
  %354 = ptrtoint ptr %data87.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %data87.i, align 4
  %ucode_size_bytes90.i = getelementptr inbounds %struct.common_firmware_header, ptr %355, i32 0, i32 7
  %356 = ptrtoint ptr %ucode_size_bytes90.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %ucode_size_bytes90.i, align 4
  %358 = call i32 @llvm.bswap.i32(i32 %357) #15
  %jt_size91.i = getelementptr inbounds %struct.gfx_firmware_header_v1_0, ptr %355, i32 0, i32 3
  %359 = ptrtoint ptr %jt_size91.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %jt_size91.i, align 4
  %361 = call i32 @llvm.bswap.i32(i32 %360) #15
  %mul92.neg.i = mul i32 %361, -4
  %sub93.i = add i32 %358, 4095
  %add94.i = add i32 %sub93.i, %mul92.neg.i
  %and95.i = and i32 %add94.i, -4096
  %add98.i = add i32 %and95.i, %add74.i
  %362 = ptrtoint ptr %fw_size.i86 to i32
  call void @__asan_store4_noabort(i32 %362)
  store i32 %add98.i, ptr %fw_size.i86, align 8
  %363 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %arrayidx, align 4
  %365 = zext i32 %364 to i64
  call void @__sanitizer_cov_trace_switch(i64 %365, ptr @__sancov_gen_cov_switch_values.413)
  switch i32 %364, label %if.then100.i [
    i32 590850, label %if.then78.i.out.i87_crit_edge
    i32 590849, label %if.then78.i.out.i87_crit_edge99
    i32 590592, label %if.then78.i.out.i87_crit_edge100
  ]

if.then78.i.out.i87_crit_edge100:                 ; preds = %if.then78.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.then78.i.out.i87_crit_edge99:                  ; preds = %if.then78.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.then78.i.out.i87_crit_edge:                    ; preds = %if.then78.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i87

if.then100.i:                                     ; preds = %if.then78.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx103.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 14
  %366 = ptrtoint ptr %arrayidx103.i to i32
  call void @__asan_store4_noabort(i32 %366)
  store i32 14, ptr %arrayidx103.i, align 8
  %fw107.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 112, i32 0, i32 14, i32 1
  %367 = ptrtoint ptr %fw107.i to i32
  call void @__asan_store4_noabort(i32 %367)
  store ptr %351, ptr %fw107.i, align 4
  %368 = ptrtoint ptr %jt_size91.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load i32, ptr %jt_size91.i, align 4
  %370 = call i32 @llvm.bswap.i32(i32 %369) #15
  %mul109.i = shl i32 %370, 2
  %add110.i = add i32 %mul109.i, 4095
  %and111.i = and i32 %add110.i, -4096
  %add114.i = add i32 %and111.i, %add98.i
  %371 = ptrtoint ptr %fw_size.i86 to i32
  call void @__asan_store4_noabort(i32 %371)
  store i32 %add114.i, ptr %fw_size.i86, align 8
  br label %out.i87

out.i87:                                          ; preds = %if.then100.i, %if.then78.i.out.i87_crit_edge, %if.then78.i.out.i87_crit_edge99, %if.then78.i.out.i87_crit_edge100, %if.then51.i.out.i87_crit_edge, %if.end50.i.out.i87_crit_edge, %if.then23.i.out.i87_crit_edge, %if.end.i73.out.i87_crit_edge, %if.end32.out.i87_crit_edge
  %err.1.i = phi i32 [ %call2.i69, %if.end32.out.i87_crit_edge ], [ %call5.i71, %if.end.i73.out.i87_crit_edge ], [ 0, %if.then100.i ], [ 0, %if.then51.i.out.i87_crit_edge ], [ 0, %if.end50.i.out.i87_crit_edge ], [ %call26.i, %if.then23.i.out.i87_crit_edge ], [ 0, %if.then78.i.out.i87_crit_edge ], [ 0, %if.then78.i.out.i87_crit_edge99 ], [ 0, %if.then78.i.out.i87_crit_edge100 ]
  %pdev.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %372 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %pdev.i.i, align 4
  %revision.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %373, i32 0, i32 12
  %vendor.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %373, i32 0, i32 7
  %subsystem_vendor.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %373, i32 0, i32 9
  %subsystem_device.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %373, i32 0, i32 10
  %374 = ptrtoint ptr %vendor.i.i.i to i32
  call void @__asan_load2_noabort(i32 %374)
  %375 = load i16, ptr %vendor.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 4098, i16 %375)
  %cmp4.i.i.i = icmp eq i16 %375, 4098
  br i1 %cmp4.i.i.i, label %land.lhs.true.i.i.i, label %out.i87.if.end.i200.i_crit_edge

out.i87.if.end.i200.i_crit_edge:                  ; preds = %out.i87
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i200.i

land.lhs.true.i.i.i:                              ; preds = %out.i87
  %device.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %373, i32 0, i32 8
  %376 = ptrtoint ptr %device.i.i.i to i32
  call void @__asan_load2_noabort(i32 %376)
  %377 = load i16, ptr %device.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 5597, i16 %377)
  %cmp9.i.i.i = icmp eq i16 %377, 5597
  br i1 %cmp9.i.i.i, label %land.lhs.true11.i.i.i, label %land.lhs.true.i.i.i.if.end.i200.i_crit_edge

land.lhs.true.i.i.i.if.end.i200.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i200.i

land.lhs.true11.i.i.i:                            ; preds = %land.lhs.true.i.i.i
  %378 = ptrtoint ptr %subsystem_vendor.i.i.i to i32
  call void @__asan_load2_noabort(i32 %378)
  %379 = load i16, ptr %subsystem_vendor.i.i.i, align 4
  %380 = zext i16 %379 to i64
  call void @__sanitizer_cov_trace_switch(i64 %380, ptr @__sancov_gen_cov_switch_values.414)
  switch i16 %379, label %land.lhs.true11.i.i.i.if.end.i200.i_crit_edge [
    i16 4098, label %land.lhs.true16.i.i.i
    i16 4156, label %land.lhs.true16.1.i.i.i
  ]

land.lhs.true11.i.i.i.if.end.i200.i_crit_edge:    ; preds = %land.lhs.true11.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i200.i

land.lhs.true16.i.i.i:                            ; preds = %land.lhs.true11.i.i.i
  %381 = ptrtoint ptr %subsystem_device.i.i.i to i32
  call void @__asan_load2_noabort(i32 %381)
  %382 = load i16, ptr %subsystem_device.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 5597, i16 %382)
  %cmp19.i.i.i = icmp eq i16 %382, 5597
  br i1 %cmp19.i.i.i, label %land.lhs.true21.i.i.i, label %land.lhs.true16.i.i.i.if.end.i200.i_crit_edge

land.lhs.true16.i.i.i.if.end.i200.i_crit_edge:    ; preds = %land.lhs.true16.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i200.i

land.lhs.true21.i.i.i:                            ; preds = %land.lhs.true16.i.i.i
  %383 = ptrtoint ptr %revision.i.i.i to i32
  call void @__asan_load1_noabort(i32 %383)
  %384 = load i8, ptr %revision.i.i.i, align 4
  %385 = zext i8 %384 to i64
  call void @__sanitizer_cov_trace_switch(i64 %385, ptr @__sancov_gen_cov_switch_values.415)
  switch i8 %384, label %land.lhs.true21.i.i.i.if.end.i200.i_crit_edge [
    i8 -56, label %land.lhs.true21.i.i.i.if.then.i.i88_crit_edge
    i8 -58, label %land.lhs.true21.i.i.i.if.then.i.i88_crit_edge101
  ]

land.lhs.true21.i.i.i.if.then.i.i88_crit_edge101: ; preds = %land.lhs.true21.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i88

land.lhs.true21.i.i.i.if.then.i.i88_crit_edge:    ; preds = %land.lhs.true21.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i88

land.lhs.true21.i.i.i.if.end.i200.i_crit_edge:    ; preds = %land.lhs.true21.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i200.i

land.lhs.true16.1.i.i.i:                          ; preds = %land.lhs.true11.i.i.i
  %386 = ptrtoint ptr %subsystem_device.i.i.i to i32
  call void @__asan_load2_noabort(i32 %386)
  %387 = load i16, ptr %subsystem_device.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -31769, i16 %387)
  %cmp19.1.i.i.i = icmp eq i16 %387, -31769
  br i1 %cmp19.1.i.i.i, label %land.lhs.true21.1.i.i.i, label %land.lhs.true16.1.i.i.i.if.end.i200.i_crit_edge

land.lhs.true16.1.i.i.i.if.end.i200.i_crit_edge:  ; preds = %land.lhs.true16.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i200.i

land.lhs.true21.1.i.i.i:                          ; preds = %land.lhs.true16.1.i.i.i
  %388 = ptrtoint ptr %revision.i.i.i to i32
  call void @__asan_load1_noabort(i32 %388)
  %389 = load i8, ptr %revision.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -45, i8 %389)
  %cmp25.1.i.i.i = icmp eq i8 %389, -45
  br i1 %cmp25.1.i.i.i, label %land.lhs.true21.1.i.i.i.if.then.i.i88_crit_edge, label %land.lhs.true21.1.i.i.i.if.end.i200.i_crit_edge

land.lhs.true21.1.i.i.i.if.end.i200.i_crit_edge:  ; preds = %land.lhs.true21.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i200.i

land.lhs.true21.1.i.i.i.if.then.i.i88_crit_edge:  ; preds = %land.lhs.true21.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i88

if.then.i.i88:                                    ; preds = %land.lhs.true21.1.i.i.i.if.then.i.i88_crit_edge, %land.lhs.true21.i.i.i.if.then.i.i88_crit_edge, %land.lhs.true21.i.i.i.if.then.i.i88_crit_edge101
  %pp_feature.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 24
  %390 = ptrtoint ptr %pp_feature.i.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load i32, ptr %pp_feature.i.i, align 8
  %and.i.i = and i32 %391, -32769
  store i32 %and.i.i, ptr %pp_feature.i.i, align 8
  br label %if.end.i200.i

if.end.i200.i:                                    ; preds = %if.then.i.i88, %land.lhs.true21.1.i.i.i.if.end.i200.i_crit_edge, %land.lhs.true16.1.i.i.i.if.end.i200.i_crit_edge, %land.lhs.true21.i.i.i.if.end.i200.i_crit_edge, %land.lhs.true16.i.i.i.if.end.i200.i_crit_edge, %land.lhs.true11.i.i.i.if.end.i200.i_crit_edge, %land.lhs.true.i.i.i.if.end.i200.i_crit_edge, %out.i87.if.end.i200.i_crit_edge
  %392 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %arrayidx, align 4
  %394 = zext i32 %393 to i64
  call void @__sanitizer_cov_trace_switch(i64 %394, ptr @__sancov_gen_cov_switch_values.416)
  switch i32 %393, label %gfx_v9_0_check_if_need_gfxoff.exit.i [
    i32 590592, label %sw.bb26.i.i
    i32 590080, label %if.end.i200.i.sw.bb2.i.i_crit_edge
    i32 590338, label %if.end.i200.i.sw.bb2.i.i_crit_edge102
  ]

if.end.i200.i.sw.bb2.i.i_crit_edge102:            ; preds = %if.end.i200.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb2.i.i

if.end.i200.i.sw.bb2.i.i_crit_edge:               ; preds = %if.end.i200.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb2.i.i

sw.bb2.i.i:                                       ; preds = %if.end.i200.i.sw.bb2.i.i_crit_edge, %if.end.i200.i.sw.bb2.i.i_crit_edge102
  %apu_flags.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %395 = ptrtoint ptr %apu_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load i32, ptr %apu_flags.i.i, align 4
  %397 = and i32 %396, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %397)
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %land.lhs.true.i.i, label %sw.bb2.i.i.if.end19.i.i_crit_edge

sw.bb2.i.i.if.end19.i.i_crit_edge:                ; preds = %sw.bb2.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i.i

land.lhs.true.i.i:                                ; preds = %sw.bb2.i.i
  %fw_version.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 17
  %399 = ptrtoint ptr %fw_version.i.i.i to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load i32, ptr %fw_version.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 269866, i32 %400)
  %cmp.i.i.i89 = icmp ugt i32 %400, 269866
  br i1 %cmp.i.i.i89, label %land.lhs.true.i.i.lor.lhs.false9.i.i_crit_edge, label %land.lhs.true8.i.i

land.lhs.true.i.i.lor.lhs.false9.i.i_crit_edge:   ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.lhs.false9.i.i

land.lhs.true8.i.i:                               ; preds = %land.lhs.true.i.i
  %401 = ptrtoint ptr %rlc_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load i32, ptr %rlc_fw_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 531, i32 %402)
  %cmp.i.i90 = icmp ult i32 %402, 531
  br i1 %cmp.i.i90, label %land.lhs.true8.i.i.if.then15.i.i_crit_edge, label %land.lhs.true8.i.i.lor.lhs.false9.i.i_crit_edge

land.lhs.true8.i.i.lor.lhs.false9.i.i_crit_edge:  ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.lhs.false9.i.i

land.lhs.true8.i.i.if.then15.i.i_crit_edge:       ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then15.i.i

lor.lhs.false9.i.i:                               ; preds = %land.lhs.true8.i.i.lor.lhs.false9.i.i_crit_edge, %land.lhs.true.i.i.lor.lhs.false9.i.i_crit_edge
  %403 = ptrtoint ptr %rlc_feature_version.i to i32
  call void @__asan_load4_noabort(i32 %403)
  %404 = load i32, ptr %rlc_feature_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %404)
  %cmp11.i.i = icmp eq i32 %404, 0
  br i1 %cmp11.i.i, label %lor.lhs.false9.i.i.if.then15.i.i_crit_edge, label %lor.lhs.false12.i.i

lor.lhs.false9.i.i.if.then15.i.i_crit_edge:       ; preds = %lor.lhs.false9.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then15.i.i

lor.lhs.false12.i.i:                              ; preds = %lor.lhs.false9.i.i
  %405 = ptrtoint ptr %is_rlc_v2_1137.i to i32
  call void @__asan_load1_noabort(i32 %405)
  %406 = load i8, ptr %is_rlc_v2_1137.i, align 8, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %406)
  %tobool14.not.i.i = icmp eq i8 %406, 0
  br i1 %tobool14.not.i.i, label %lor.lhs.false12.i.i.if.then15.i.i_crit_edge, label %lor.lhs.false12.i.i.if.end19.i.i_crit_edge

lor.lhs.false12.i.i.if.end19.i.i_crit_edge:       ; preds = %lor.lhs.false12.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i.i

lor.lhs.false12.i.i.if.then15.i.i_crit_edge:      ; preds = %lor.lhs.false12.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then15.i.i

if.then15.i.i:                                    ; preds = %lor.lhs.false12.i.i.if.then15.i.i_crit_edge, %lor.lhs.false9.i.i.if.then15.i.i_crit_edge, %land.lhs.true8.i.i.if.then15.i.i_crit_edge
  %pp_feature17.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 24
  %407 = ptrtoint ptr %pp_feature17.i.i to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load i32, ptr %pp_feature17.i.i, align 8
  %and18.i.i = and i32 %408, -32769
  store i32 %and18.i.i, ptr %pp_feature17.i.i, align 8
  br label %if.end19.i.i

if.end19.i.i:                                     ; preds = %if.then15.i.i, %lor.lhs.false12.i.i.if.end19.i.i_crit_edge, %sw.bb2.i.i.if.end19.i.i_crit_edge
  %pp_feature21.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 24
  %409 = ptrtoint ptr %pp_feature21.i.i to i32
  call void @__asan_load4_noabort(i32 %409)
  %410 = load i32, ptr %pp_feature21.i.i, align 8
  %and22.i.i = and i32 %410, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i.i)
  %tobool23.not.i.i = icmp eq i32 %and22.i.i, 0
  br i1 %tobool23.not.i.i, label %if.end19.i.i.gfx_v9_0_check_if_need_gfxoff.exit.thread.i_crit_edge, label %if.end19.i.i.sw.epilog.sink.split.i.i_crit_edge

if.end19.i.i.sw.epilog.sink.split.i.i_crit_edge:  ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i.i

if.end19.i.i.gfx_v9_0_check_if_need_gfxoff.exit.thread.i_crit_edge: ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_if_need_gfxoff.exit.thread.i

sw.bb26.i.i:                                      ; preds = %if.end.i200.i
  %pp_feature28.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 24
  %411 = ptrtoint ptr %pp_feature28.i.i to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load i32, ptr %pp_feature28.i.i, align 8
  %and29.i.i = and i32 %412, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i.i)
  %tobool30.not.i.i = icmp eq i32 %and29.i.i, 0
  br i1 %tobool30.not.i.i, label %sw.bb26.i.i.gfx_v9_0_check_if_need_gfxoff.exit.thread.i_crit_edge, label %sw.bb26.i.i.sw.epilog.sink.split.i.i_crit_edge

sw.bb26.i.i.sw.epilog.sink.split.i.i_crit_edge:   ; preds = %sw.bb26.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i.i

sw.bb26.i.i.gfx_v9_0_check_if_need_gfxoff.exit.thread.i_crit_edge: ; preds = %sw.bb26.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_if_need_gfxoff.exit.thread.i

sw.epilog.sink.split.i.i:                         ; preds = %sw.bb26.i.i.sw.epilog.sink.split.i.i_crit_edge, %if.end19.i.i.sw.epilog.sink.split.i.i_crit_edge
  %pg_flags.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 100
  %413 = ptrtoint ptr %pg_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %413)
  %414 = load i32, ptr %pg_flags.i.i, align 4
  %or33.i.i = or i32 %414, 161
  store i32 %or33.i.i, ptr %pg_flags.i.i, align 4
  br label %gfx_v9_0_check_if_need_gfxoff.exit.thread.i

gfx_v9_0_check_if_need_gfxoff.exit.thread.i:      ; preds = %sw.epilog.sink.split.i.i, %sw.bb26.i.i.gfx_v9_0_check_if_need_gfxoff.exit.thread.i_crit_edge, %if.end19.i.i.gfx_v9_0_check_if_need_gfxoff.exit.thread.i_crit_edge
  %me_fw_write_wait.i206.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 34
  %415 = ptrtoint ptr %me_fw_write_wait.i206.i to i32
  call void @__asan_store1_noabort(i32 %415)
  store i8 0, ptr %me_fw_write_wait.i206.i, align 1
  %mec_fw_write_wait.i207.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 33
  %416 = ptrtoint ptr %mec_fw_write_wait.i207.i to i32
  call void @__asan_store1_noabort(i32 %416)
  store i8 0, ptr %mec_fw_write_wait.i207.i, align 4
  br label %land.lhs.true.i202.i

gfx_v9_0_check_if_need_gfxoff.exit.i:             ; preds = %if.end.i200.i
  %me_fw_write_wait.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 34
  %417 = ptrtoint ptr %me_fw_write_wait.i.i to i32
  call void @__asan_store1_noabort(i32 %417)
  store i8 0, ptr %me_fw_write_wait.i.i, align 1
  %mec_fw_write_wait.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 33
  %418 = ptrtoint ptr %mec_fw_write_wait.i.i to i32
  call void @__asan_store1_noabort(i32 %418)
  store i8 0, ptr %mec_fw_write_wait.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590849, i32 %393)
  %cmp.not.i.i = icmp eq i32 %393, 590849
  br i1 %cmp.not.i.i, label %gfx_v9_0_check_if_need_gfxoff.exit.i.sw.default.i.i_crit_edge, label %gfx_v9_0_check_if_need_gfxoff.exit.i.land.lhs.true.i202.i_crit_edge

gfx_v9_0_check_if_need_gfxoff.exit.i.land.lhs.true.i202.i_crit_edge: ; preds = %gfx_v9_0_check_if_need_gfxoff.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true.i202.i

gfx_v9_0_check_if_need_gfxoff.exit.i.sw.default.i.i_crit_edge: ; preds = %gfx_v9_0_check_if_need_gfxoff.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.default.i.i

land.lhs.true.i202.i:                             ; preds = %gfx_v9_0_check_if_need_gfxoff.exit.i.land.lhs.true.i202.i_crit_edge, %gfx_v9_0_check_if_need_gfxoff.exit.thread.i
  %mec_fw_write_wait.i213.i = phi ptr [ %mec_fw_write_wait.i207.i, %gfx_v9_0_check_if_need_gfxoff.exit.thread.i ], [ %mec_fw_write_wait.i.i, %gfx_v9_0_check_if_need_gfxoff.exit.i.land.lhs.true.i202.i_crit_edge ]
  %me_fw_write_wait.i209.i = phi ptr [ %me_fw_write_wait.i206.i, %gfx_v9_0_check_if_need_gfxoff.exit.thread.i ], [ %me_fw_write_wait.i.i, %gfx_v9_0_check_if_need_gfxoff.exit.i.land.lhs.true.i202.i_crit_edge ]
  %mec_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 18
  %419 = ptrtoint ptr %mec_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load i32, ptr %mec_fw_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 421, i32 %420)
  %cmp4.i.i = icmp ult i32 %420, 421
  br i1 %cmp4.i.i, label %land.lhs.true.i202.i.land.end.i.i_crit_edge, label %lor.lhs.false.i.i

land.lhs.true.i202.i.land.end.i.i_crit_edge:      ; preds = %land.lhs.true.i202.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i202.i
  %mec_feature_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 31
  %421 = ptrtoint ptr %mec_feature_version.i.i to i32
  call void @__asan_load4_noabort(i32 %421)
  %422 = load i32, ptr %mec_feature_version.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 46, i32 %422)
  %cmp6.i.i = icmp ult i32 %422, 46
  br i1 %cmp6.i.i, label %lor.lhs.false.i.i.land.end.i.i_crit_edge, label %lor.lhs.false7.i.i

lor.lhs.false.i.i.land.end.i.i_crit_edge:         ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i.i

lor.lhs.false7.i.i:                               ; preds = %lor.lhs.false.i.i
  %pfp_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %423 = ptrtoint ptr %pfp_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %423)
  %424 = load i32, ptr %pfp_fw_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 183, i32 %424)
  %cmp9.i.i = icmp ult i32 %424, 183
  br i1 %cmp9.i.i, label %lor.lhs.false7.i.i.land.end.i.i_crit_edge, label %lor.lhs.false10.i.i

lor.lhs.false7.i.i.land.end.i.i_crit_edge:        ; preds = %lor.lhs.false7.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i.i

lor.lhs.false10.i.i:                              ; preds = %lor.lhs.false7.i.i
  %pfp_feature_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 23
  %425 = ptrtoint ptr %pfp_feature_version.i.i to i32
  call void @__asan_load4_noabort(i32 %425)
  %426 = load i32, ptr %pfp_feature_version.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 46, i32 %426)
  %cmp12.i.i = icmp ult i32 %426, 46
  br i1 %cmp12.i.i, label %lor.lhs.false10.i.i.land.end.i.i_crit_edge, label %lor.lhs.false10.i.i.if.end25.i.i_crit_edge

lor.lhs.false10.i.i.if.end25.i.i_crit_edge:       ; preds = %lor.lhs.false10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end25.i.i

lor.lhs.false10.i.i.land.end.i.i_crit_edge:       ; preds = %lor.lhs.false10.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %lor.lhs.false10.i.i.land.end.i.i_crit_edge, %lor.lhs.false7.i.i.land.end.i.i_crit_edge, %lor.lhs.false.i.i.land.end.i.i_crit_edge, %land.lhs.true.i202.i.land.end.i.i_crit_edge
  %.b196.i.i = load i1, ptr @gfx_v9_0_check_fw_write_wait.__already_done, align 1
  br i1 %.b196.i.i, label %land.end.i.i.if.end25.i.i_crit_edge, label %if.then17.i.i, !prof !1011

land.end.i.i.if.end25.i.i_crit_edge:              ; preds = %land.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end25.i.i

if.then17.i.i:                                    ; preds = %land.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @gfx_v9_0_check_fw_write_wait.__already_done, align 1
  %call.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.61) #18
  br label %if.end25.i.i

if.end25.i.i:                                     ; preds = %if.then17.i.i, %land.end.i.i.if.end25.i.i_crit_edge, %lor.lhs.false10.i.i.if.end25.i.i_crit_edge
  %427 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %427)
  %.pr.i.i = load i32, ptr %arrayidx, align 4
  %428 = zext i32 %.pr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %428, ptr @__sancov_gen_cov_switch_values.417)
  switch i32 %.pr.i.i, label %if.end25.i.i.sw.default.i.i_crit_edge [
    i32 589825, label %sw.bb.i.i
    i32 590337, label %sw.bb57.i.i
    i32 590848, label %sw.bb88.i.i
    i32 590080, label %if.end25.i.i.sw.bb119.i.i_crit_edge
    i32 590338, label %if.end25.i.i.sw.bb119.i.i_crit_edge103
  ]

if.end25.i.i.sw.bb119.i.i_crit_edge103:           ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb119.i.i

if.end25.i.i.sw.bb119.i.i_crit_edge:              ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb119.i.i

if.end25.i.i.sw.default.i.i_crit_edge:            ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.default.i.i

sw.bb.i.i:                                        ; preds = %if.end25.i.i
  %me_fw_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %429 = ptrtoint ptr %me_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %429)
  %430 = load i32, ptr %me_fw_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 155, i32 %430)
  %cmp30.i.i = icmp ugt i32 %430, 155
  br i1 %cmp30.i.i, label %land.lhs.true31.i.i, label %sw.bb.i.i.if.end45.i.i_crit_edge

sw.bb.i.i.if.end45.i.i_crit_edge:                 ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end45.i.i

land.lhs.true31.i.i:                              ; preds = %sw.bb.i.i
  %me_feature_version.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 21
  %431 = ptrtoint ptr %me_feature_version.i.i to i32
  call void @__asan_load4_noabort(i32 %431)
  %432 = load i32, ptr %me_feature_version.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 41, i32 %432)
  %cmp33.i.i = icmp ugt i32 %432, 41
  br i1 %cmp33.i.i, label %land.lhs.true34.i.i, label %land.lhs.true31.i.i.if.end45.i.i_crit_edge

land.lhs.true31.i.i.if.end45.i.i_crit_edge:       ; preds = %land.lhs.true31.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end45.i.i

land.lhs.true34.i.i:                              ; preds = %land.lhs.true31.i.i
  %pfp_fw_version36.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %433 = ptrtoint ptr %pfp_fw_version36.i.i to i32
  call void @__asan_load4_noabort(i32 %433)
  %434 = load i32, ptr %pfp_fw_version36.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 176, i32 %434)
  %cmp37.i.i = icmp ugt i32 %434, 176
  br i1 %cmp37.i.i, label %land.lhs.true38.i.i, label %land.lhs.true34.i.i.if.end45.i.i_crit_edge

land.lhs.true34.i.i.if.end45.i.i_crit_edge:       ; preds = %land.lhs.true34.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end45.i.i

land.lhs.true38.i.i:                              ; preds = %land.lhs.true34.i.i
  %pfp_feature_version40.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 23
  %435 = ptrtoint ptr %pfp_feature_version40.i.i to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load i32, ptr %pfp_feature_version40.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 41, i32 %436)
  %cmp41.i.i = icmp ugt i32 %436, 41
  br i1 %cmp41.i.i, label %if.then42.i.i, label %land.lhs.true38.i.i.if.end45.i.i_crit_edge

land.lhs.true38.i.i.if.end45.i.i_crit_edge:       ; preds = %land.lhs.true38.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end45.i.i

if.then42.i.i:                                    ; preds = %land.lhs.true38.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %437 = ptrtoint ptr %me_fw_write_wait.i209.i to i32
  call void @__asan_store1_noabort(i32 %437)
  store i8 1, ptr %me_fw_write_wait.i209.i, align 1
  br label %if.end45.i.i

if.end45.i.i:                                     ; preds = %if.then42.i.i, %land.lhs.true38.i.i.if.end45.i.i_crit_edge, %land.lhs.true34.i.i.if.end45.i.i_crit_edge, %land.lhs.true31.i.i.if.end45.i.i_crit_edge, %sw.bb.i.i.if.end45.i.i_crit_edge
  %438 = ptrtoint ptr %mec_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %mec_fw_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 402, i32 %439)
  %cmp48.i.i = icmp ugt i32 %439, 402
  br i1 %cmp48.i.i, label %land.lhs.true49.i.i, label %if.end45.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

if.end45.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %if.end45.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true49.i.i:                              ; preds = %if.end45.i.i
  %mec_feature_version51.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 31
  %440 = ptrtoint ptr %mec_feature_version51.i.i to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load i32, ptr %mec_feature_version51.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 41, i32 %441)
  %cmp52.i.i = icmp ugt i32 %441, 41
  br i1 %cmp52.i.i, label %land.lhs.true49.i.i.sw.epilog.sink.split.i203.i_crit_edge, label %land.lhs.true49.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

land.lhs.true49.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %land.lhs.true49.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true49.i.i.sw.epilog.sink.split.i203.i_crit_edge: ; preds = %land.lhs.true49.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i203.i

sw.bb57.i.i:                                      ; preds = %if.end25.i.i
  %me_fw_version59.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %442 = ptrtoint ptr %me_fw_version59.i.i to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load i32, ptr %me_fw_version59.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 155, i32 %443)
  %cmp60.i.i = icmp ugt i32 %443, 155
  br i1 %cmp60.i.i, label %land.lhs.true61.i.i, label %sw.bb57.i.i.if.end76.i.i_crit_edge

sw.bb57.i.i.if.end76.i.i_crit_edge:               ; preds = %sw.bb57.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end76.i.i

land.lhs.true61.i.i:                              ; preds = %sw.bb57.i.i
  %me_feature_version63.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 21
  %444 = ptrtoint ptr %me_feature_version63.i.i to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load i32, ptr %me_feature_version63.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %445)
  %cmp64.i.i = icmp ugt i32 %445, 43
  br i1 %cmp64.i.i, label %land.lhs.true65.i.i, label %land.lhs.true61.i.i.if.end76.i.i_crit_edge

land.lhs.true61.i.i.if.end76.i.i_crit_edge:       ; preds = %land.lhs.true61.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end76.i.i

land.lhs.true65.i.i:                              ; preds = %land.lhs.true61.i.i
  %pfp_fw_version67.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %446 = ptrtoint ptr %pfp_fw_version67.i.i to i32
  call void @__asan_load4_noabort(i32 %446)
  %447 = load i32, ptr %pfp_fw_version67.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 177, i32 %447)
  %cmp68.i.i = icmp ugt i32 %447, 177
  br i1 %cmp68.i.i, label %land.lhs.true69.i.i, label %land.lhs.true65.i.i.if.end76.i.i_crit_edge

land.lhs.true65.i.i.if.end76.i.i_crit_edge:       ; preds = %land.lhs.true65.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end76.i.i

land.lhs.true69.i.i:                              ; preds = %land.lhs.true65.i.i
  %pfp_feature_version71.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 23
  %448 = ptrtoint ptr %pfp_feature_version71.i.i to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load i32, ptr %pfp_feature_version71.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %449)
  %cmp72.i.i = icmp ugt i32 %449, 43
  br i1 %cmp72.i.i, label %if.then73.i.i, label %land.lhs.true69.i.i.if.end76.i.i_crit_edge

land.lhs.true69.i.i.if.end76.i.i_crit_edge:       ; preds = %land.lhs.true69.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end76.i.i

if.then73.i.i:                                    ; preds = %land.lhs.true69.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %450 = ptrtoint ptr %me_fw_write_wait.i209.i to i32
  call void @__asan_store1_noabort(i32 %450)
  store i8 1, ptr %me_fw_write_wait.i209.i, align 1
  br label %if.end76.i.i

if.end76.i.i:                                     ; preds = %if.then73.i.i, %land.lhs.true69.i.i.if.end76.i.i_crit_edge, %land.lhs.true65.i.i.if.end76.i.i_crit_edge, %land.lhs.true61.i.i.if.end76.i.i_crit_edge, %sw.bb57.i.i.if.end76.i.i_crit_edge
  %451 = ptrtoint ptr %mec_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %451)
  %452 = load i32, ptr %mec_fw_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 405, i32 %452)
  %cmp79.i.i = icmp ugt i32 %452, 405
  br i1 %cmp79.i.i, label %land.lhs.true80.i.i, label %if.end76.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

if.end76.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %if.end76.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true80.i.i:                              ; preds = %if.end76.i.i
  %mec_feature_version82.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 31
  %453 = ptrtoint ptr %mec_feature_version82.i.i to i32
  call void @__asan_load4_noabort(i32 %453)
  %454 = load i32, ptr %mec_feature_version82.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %454)
  %cmp83.i.i = icmp ugt i32 %454, 43
  br i1 %cmp83.i.i, label %land.lhs.true80.i.i.sw.epilog.sink.split.i203.i_crit_edge, label %land.lhs.true80.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

land.lhs.true80.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %land.lhs.true80.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true80.i.i.sw.epilog.sink.split.i203.i_crit_edge: ; preds = %land.lhs.true80.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i203.i

sw.bb88.i.i:                                      ; preds = %if.end25.i.i
  %me_fw_version90.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %455 = ptrtoint ptr %me_fw_version90.i.i to i32
  call void @__asan_load4_noabort(i32 %455)
  %456 = load i32, ptr %me_fw_version90.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 155, i32 %456)
  %cmp91.i.i = icmp ugt i32 %456, 155
  br i1 %cmp91.i.i, label %land.lhs.true92.i.i, label %sw.bb88.i.i.if.end107.i.i_crit_edge

sw.bb88.i.i.if.end107.i.i_crit_edge:              ; preds = %sw.bb88.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end107.i.i

land.lhs.true92.i.i:                              ; preds = %sw.bb88.i.i
  %me_feature_version94.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 21
  %457 = ptrtoint ptr %me_feature_version94.i.i to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load i32, ptr %me_feature_version94.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %458)
  %cmp95.i.i = icmp ugt i32 %458, 43
  br i1 %cmp95.i.i, label %land.lhs.true96.i.i, label %land.lhs.true92.i.i.if.end107.i.i_crit_edge

land.lhs.true92.i.i.if.end107.i.i_crit_edge:      ; preds = %land.lhs.true92.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end107.i.i

land.lhs.true96.i.i:                              ; preds = %land.lhs.true92.i.i
  %pfp_fw_version98.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %459 = ptrtoint ptr %pfp_fw_version98.i.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load i32, ptr %pfp_fw_version98.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 177, i32 %460)
  %cmp99.i.i = icmp ugt i32 %460, 177
  br i1 %cmp99.i.i, label %land.lhs.true100.i.i, label %land.lhs.true96.i.i.if.end107.i.i_crit_edge

land.lhs.true96.i.i.if.end107.i.i_crit_edge:      ; preds = %land.lhs.true96.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end107.i.i

land.lhs.true100.i.i:                             ; preds = %land.lhs.true96.i.i
  %pfp_feature_version102.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 23
  %461 = ptrtoint ptr %pfp_feature_version102.i.i to i32
  call void @__asan_load4_noabort(i32 %461)
  %462 = load i32, ptr %pfp_feature_version102.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %462)
  %cmp103.i.i = icmp ugt i32 %462, 43
  br i1 %cmp103.i.i, label %if.then104.i.i, label %land.lhs.true100.i.i.if.end107.i.i_crit_edge

land.lhs.true100.i.i.if.end107.i.i_crit_edge:     ; preds = %land.lhs.true100.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end107.i.i

if.then104.i.i:                                   ; preds = %land.lhs.true100.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %463 = ptrtoint ptr %me_fw_write_wait.i209.i to i32
  call void @__asan_store1_noabort(i32 %463)
  store i8 1, ptr %me_fw_write_wait.i209.i, align 1
  br label %if.end107.i.i

if.end107.i.i:                                    ; preds = %if.then104.i.i, %land.lhs.true100.i.i.if.end107.i.i_crit_edge, %land.lhs.true96.i.i.if.end107.i.i_crit_edge, %land.lhs.true92.i.i.if.end107.i.i_crit_edge, %sw.bb88.i.i.if.end107.i.i_crit_edge
  %464 = ptrtoint ptr %mec_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %mec_fw_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 406, i32 %465)
  %cmp110.i.i = icmp ugt i32 %465, 406
  br i1 %cmp110.i.i, label %land.lhs.true111.i.i, label %if.end107.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

if.end107.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %if.end107.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true111.i.i:                             ; preds = %if.end107.i.i
  %mec_feature_version113.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 31
  %466 = ptrtoint ptr %mec_feature_version113.i.i to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load i32, ptr %mec_feature_version113.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %467)
  %cmp114.i.i = icmp ugt i32 %467, 43
  br i1 %cmp114.i.i, label %land.lhs.true111.i.i.sw.epilog.sink.split.i203.i_crit_edge, label %land.lhs.true111.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

land.lhs.true111.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %land.lhs.true111.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true111.i.i.sw.epilog.sink.split.i203.i_crit_edge: ; preds = %land.lhs.true111.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i203.i

sw.bb119.i.i:                                     ; preds = %if.end25.i.i.sw.bb119.i.i_crit_edge, %if.end25.i.i.sw.bb119.i.i_crit_edge103
  %me_fw_version121.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 10
  %468 = ptrtoint ptr %me_fw_version121.i.i to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load i32, ptr %me_fw_version121.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 155, i32 %469)
  %cmp122.i.i = icmp ugt i32 %469, 155
  br i1 %cmp122.i.i, label %land.lhs.true123.i.i, label %sw.bb119.i.i.if.end138.i.i_crit_edge

sw.bb119.i.i.if.end138.i.i_crit_edge:             ; preds = %sw.bb119.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end138.i.i

land.lhs.true123.i.i:                             ; preds = %sw.bb119.i.i
  %me_feature_version125.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 21
  %470 = ptrtoint ptr %me_feature_version125.i.i to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load i32, ptr %me_feature_version125.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 41, i32 %471)
  %cmp126.i.i = icmp ugt i32 %471, 41
  br i1 %cmp126.i.i, label %land.lhs.true127.i.i, label %land.lhs.true123.i.i.if.end138.i.i_crit_edge

land.lhs.true123.i.i.if.end138.i.i_crit_edge:     ; preds = %land.lhs.true123.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end138.i.i

land.lhs.true127.i.i:                             ; preds = %land.lhs.true123.i.i
  %pfp_fw_version129.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 12
  %472 = ptrtoint ptr %pfp_fw_version129.i.i to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %pfp_fw_version129.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 176, i32 %473)
  %cmp130.i.i = icmp ugt i32 %473, 176
  br i1 %cmp130.i.i, label %land.lhs.true131.i.i, label %land.lhs.true127.i.i.if.end138.i.i_crit_edge

land.lhs.true127.i.i.if.end138.i.i_crit_edge:     ; preds = %land.lhs.true127.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end138.i.i

land.lhs.true131.i.i:                             ; preds = %land.lhs.true127.i.i
  %pfp_feature_version133.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 23
  %474 = ptrtoint ptr %pfp_feature_version133.i.i to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load i32, ptr %pfp_feature_version133.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 41, i32 %475)
  %cmp134.i.i = icmp ugt i32 %475, 41
  br i1 %cmp134.i.i, label %if.then135.i.i, label %land.lhs.true131.i.i.if.end138.i.i_crit_edge

land.lhs.true131.i.i.if.end138.i.i_crit_edge:     ; preds = %land.lhs.true131.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end138.i.i

if.then135.i.i:                                   ; preds = %land.lhs.true131.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %476 = ptrtoint ptr %me_fw_write_wait.i209.i to i32
  call void @__asan_store1_noabort(i32 %476)
  store i8 1, ptr %me_fw_write_wait.i209.i, align 1
  br label %if.end138.i.i

if.end138.i.i:                                    ; preds = %if.then135.i.i, %land.lhs.true131.i.i.if.end138.i.i_crit_edge, %land.lhs.true127.i.i.if.end138.i.i_crit_edge, %land.lhs.true123.i.i.if.end138.i.i_crit_edge, %sw.bb119.i.i.if.end138.i.i_crit_edge
  %477 = ptrtoint ptr %mec_fw_version.i.i to i32
  call void @__asan_load4_noabort(i32 %477)
  %478 = load i32, ptr %mec_fw_version.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 401, i32 %478)
  %cmp141.i.i = icmp ugt i32 %478, 401
  br i1 %cmp141.i.i, label %land.lhs.true142.i.i, label %if.end138.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

if.end138.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %if.end138.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true142.i.i:                             ; preds = %if.end138.i.i
  %mec_feature_version144.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 31
  %479 = ptrtoint ptr %mec_feature_version144.i.i to i32
  call void @__asan_load4_noabort(i32 %479)
  %480 = load i32, ptr %mec_feature_version144.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 41, i32 %480)
  %cmp145.i.i = icmp ugt i32 %480, 41
  br i1 %cmp145.i.i, label %land.lhs.true142.i.i.sw.epilog.sink.split.i203.i_crit_edge, label %land.lhs.true142.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge

land.lhs.true142.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge: ; preds = %land.lhs.true142.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_check_fw_write_wait.exit.i

land.lhs.true142.i.i.sw.epilog.sink.split.i203.i_crit_edge: ; preds = %land.lhs.true142.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i203.i

sw.default.i.i:                                   ; preds = %if.end25.i.i.sw.default.i.i_crit_edge, %gfx_v9_0_check_if_need_gfxoff.exit.i.sw.default.i.i_crit_edge
  %mec_fw_write_wait.i212.i = phi ptr [ %mec_fw_write_wait.i213.i, %if.end25.i.i.sw.default.i.i_crit_edge ], [ %mec_fw_write_wait.i.i, %gfx_v9_0_check_if_need_gfxoff.exit.i.sw.default.i.i_crit_edge ]
  %me_fw_write_wait.i210.i = phi ptr [ %me_fw_write_wait.i209.i, %if.end25.i.i.sw.default.i.i_crit_edge ], [ %me_fw_write_wait.i.i, %gfx_v9_0_check_if_need_gfxoff.exit.i.sw.default.i.i_crit_edge ]
  %481 = ptrtoint ptr %me_fw_write_wait.i210.i to i32
  call void @__asan_store1_noabort(i32 %481)
  store i8 1, ptr %me_fw_write_wait.i210.i, align 1
  br label %sw.epilog.sink.split.i203.i

sw.epilog.sink.split.i203.i:                      ; preds = %sw.default.i.i, %land.lhs.true142.i.i.sw.epilog.sink.split.i203.i_crit_edge, %land.lhs.true111.i.i.sw.epilog.sink.split.i203.i_crit_edge, %land.lhs.true80.i.i.sw.epilog.sink.split.i203.i_crit_edge, %land.lhs.true49.i.i.sw.epilog.sink.split.i203.i_crit_edge
  %mec_fw_write_wait.i211.i = phi ptr [ %mec_fw_write_wait.i212.i, %sw.default.i.i ], [ %mec_fw_write_wait.i213.i, %land.lhs.true142.i.i.sw.epilog.sink.split.i203.i_crit_edge ], [ %mec_fw_write_wait.i213.i, %land.lhs.true111.i.i.sw.epilog.sink.split.i203.i_crit_edge ], [ %mec_fw_write_wait.i213.i, %land.lhs.true80.i.i.sw.epilog.sink.split.i203.i_crit_edge ], [ %mec_fw_write_wait.i213.i, %land.lhs.true49.i.i.sw.epilog.sink.split.i203.i_crit_edge ]
  %482 = ptrtoint ptr %mec_fw_write_wait.i211.i to i32
  call void @__asan_store1_noabort(i32 %482)
  store i8 1, ptr %mec_fw_write_wait.i211.i, align 4
  br label %gfx_v9_0_check_fw_write_wait.exit.i

gfx_v9_0_check_fw_write_wait.exit.i:              ; preds = %sw.epilog.sink.split.i203.i, %land.lhs.true142.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge, %if.end138.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge, %land.lhs.true111.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge, %if.end107.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge, %land.lhs.true80.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge, %if.end76.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge, %land.lhs.true49.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge, %if.end45.i.i.gfx_v9_0_check_fw_write_wait.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.1.i)
  %tobool118.not.i = icmp eq i32 %err.1.i, 0
  br i1 %tobool118.not.i, label %gfx_v9_0_check_fw_write_wait.exit.i.gfx_v9_0_init_cp_compute_microcode.exit_crit_edge, label %do.end.i91

gfx_v9_0_check_fw_write_wait.exit.i.gfx_v9_0_init_cp_compute_microcode.exit_crit_edge: ; preds = %gfx_v9_0_check_fw_write_wait.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_init_cp_compute_microcode.exit

do.end.i91:                                       ; preds = %gfx_v9_0_check_fw_write_wait.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %483 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %484, ptr noundef nonnull @.str.50, ptr noundef nonnull %fw_name.i67) #18
  %485 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_load4_noabort(i32 %485)
  %486 = load ptr, ptr %mec_fw.i, align 4
  call void @release_firmware(ptr noundef %486) #15
  %487 = ptrtoint ptr %mec_fw.i to i32
  call void @__asan_store4_noabort(i32 %487)
  store ptr null, ptr %mec_fw.i, align 4
  %mec2_fw127.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 19
  %488 = ptrtoint ptr %mec2_fw127.i to i32
  call void @__asan_load4_noabort(i32 %488)
  %489 = load ptr, ptr %mec2_fw127.i, align 4
  call void @release_firmware(ptr noundef %489) #15
  %490 = ptrtoint ptr %mec2_fw127.i to i32
  call void @__asan_store4_noabort(i32 %490)
  store ptr null, ptr %mec2_fw127.i, align 4
  br label %gfx_v9_0_init_cp_compute_microcode.exit

gfx_v9_0_init_cp_compute_microcode.exit:          ; preds = %do.end.i91, %gfx_v9_0_check_fw_write_wait.exit.i.gfx_v9_0_init_cp_compute_microcode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %fw_name.i67) #15
  br label %cleanup

cleanup:                                          ; preds = %gfx_v9_0_init_cp_compute_microcode.exit, %gfx_v9_0_init_rlc_microcode.exit, %gfx_v9_0_init_cp_gfx_microcode.exit
  %retval.0 = phi i32 [ %err.0.ph.i, %gfx_v9_0_init_cp_gfx_microcode.exit ], [ %err.0328.i, %gfx_v9_0_init_rlc_microcode.exit ], [ %err.1.i, %gfx_v9_0_init_cp_compute_microcode.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v9_0_mec_init(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  %hpd = alloca ptr, align 4
  %fw = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %hpd) #15
  %0 = ptrtoint ptr %hpd to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %hpd, align 4, !annotation !1019
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fw) #15
  %1 = ptrtoint ptr %fw to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %fw, align 4, !annotation !1019
  %mec = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6
  %queue_bitmap = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 8
  %2 = call ptr @memset(ptr %queue_bitmap, i32 0, i32 16)
  tail call void @amdgpu_gfx_compute_queue_acquire(ptr noundef %adev) #15
  %num_compute_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 39
  %3 = ptrtoint ptr %num_compute_rings to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_compute_rings, align 8
  %mul = shl i32 %4, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul)
  %tobool.not = icmp eq i32 %mul, 0
  br i1 %tobool.not, label %entry.if.end14_crit_edge, label %if.then

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

if.then:                                          ; preds = %entry
  %hpd_eop_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 1
  %call = call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %mul, i32 noundef 4096, i32 noundef 4, ptr noundef %mec, ptr noundef %hpd_eop_gpu_addr, ptr noundef nonnull %hpd) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool6.not = icmp eq i32 %call, 0
  br i1 %tobool6.not, label %if.end, label %do.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %5 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %6, ptr noundef nonnull @.str.63, i32 noundef %call) #18
  call void @amdgpu_bo_free_kernel(ptr noundef %mec, ptr noundef null, ptr noundef null) #15
  %mec_fw_obj.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 2
  call void @amdgpu_bo_free_kernel(ptr noundef %mec_fw_obj.i, ptr noundef null, ptr noundef null) #15
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %7 = ptrtoint ptr %hpd to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hpd, align 4
  %9 = call ptr @memset(ptr %8, i32 0, i32 %mul)
  %10 = ptrtoint ptr %mec to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mec, align 8
  call void @amdgpu_bo_kunmap(ptr noundef %11) #15
  %12 = ptrtoint ptr %mec to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mec, align 8
  %tbo.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4
  %bdev.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4, i32 1
  %14 = ptrtoint ptr %bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bdev.i.i.i, align 8
  %lru_lock.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %15, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i) #15
  %resource.i.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4, i32 6
  %16 = ptrtoint ptr %resource.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %resource.i.i.i, align 4
  call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i, ptr noundef %17, ptr noundef null) #15
  %18 = ptrtoint ptr %bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %bdev.i.i.i, align 8
  %lru_lock2.i.i.i = getelementptr inbounds %struct.ttm_device, ptr %19, i32 0, i32 6
  call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i) #15
  %resv.i.i = getelementptr inbounds %struct.amdgpu_bo, ptr %13, i32 0, i32 4, i32 0, i32 9
  %20 = ptrtoint ptr %resv.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %resv.i.i, align 8
  call void @dma_resv_reset_shared_max(ptr noundef %21) #15
  call void @ww_mutex_unlock(ptr noundef %21) #15
  br label %if.end14

if.end14:                                         ; preds = %if.end, %entry.if.end14_crit_edge
  %mec_fw = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 17
  %22 = ptrtoint ptr %mec_fw to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mec_fw, align 4
  %data = getelementptr inbounds %struct.firmware, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %data, align 4
  %ucode_array_offset_bytes = getelementptr inbounds %struct.common_firmware_header, ptr %25, i32 0, i32 8
  %26 = ptrtoint ptr %ucode_array_offset_bytes to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %ucode_array_offset_bytes, align 4
  %ucode_size_bytes = getelementptr inbounds %struct.common_firmware_header, ptr %25, i32 0, i32 7
  %28 = ptrtoint ptr %ucode_size_bytes to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ucode_size_bytes, align 4
  %mec_fw_obj = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 2
  %mec_fw_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 3
  %call26 = call i32 @amdgpu_bo_create_reserved(ptr noundef %adev, i32 noundef %29, i32 noundef 4096, i32 noundef 2, ptr noundef %mec_fw_obj, ptr noundef %mec_fw_gpu_addr, ptr noundef nonnull %fw) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end33, label %do.end31

do.end31:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  %30 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %adev, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %31, ptr noundef nonnull @.str.67, i32 noundef %call26) #18
  call void @amdgpu_bo_free_kernel(ptr noundef %mec, ptr noundef null, ptr noundef null) #15
  call void @amdgpu_bo_free_kernel(ptr noundef %mec_fw_obj, ptr noundef null, ptr noundef null) #15
  br label %cleanup

if.end33:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  %32 = call i32 @llvm.bswap.i32(i32 %29)
  %33 = call i32 @llvm.bswap.i32(i32 %27)
  %add.ptr = getelementptr i8, ptr %25, i32 %33
  %34 = ptrtoint ptr %fw to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %fw, align 4
  %36 = call ptr @memcpy(ptr %35, ptr %add.ptr, i32 %32)
  %37 = ptrtoint ptr %mec_fw_obj to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mec_fw_obj, align 8
  call void @amdgpu_bo_kunmap(ptr noundef %38) #15
  %39 = ptrtoint ptr %mec_fw_obj to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %mec_fw_obj, align 8
  %tbo.i75 = getelementptr inbounds %struct.amdgpu_bo, ptr %40, i32 0, i32 4
  %bdev.i.i.i76 = getelementptr inbounds %struct.amdgpu_bo, ptr %40, i32 0, i32 4, i32 1
  %41 = ptrtoint ptr %bdev.i.i.i76 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bdev.i.i.i76, align 8
  %lru_lock.i.i.i77 = getelementptr inbounds %struct.ttm_device, ptr %42, i32 0, i32 6
  call void @_raw_spin_lock(ptr noundef %lru_lock.i.i.i77) #15
  %resource.i.i.i78 = getelementptr inbounds %struct.amdgpu_bo, ptr %40, i32 0, i32 4, i32 6
  %43 = ptrtoint ptr %resource.i.i.i78 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %resource.i.i.i78, align 4
  call void @ttm_bo_move_to_lru_tail(ptr noundef %tbo.i75, ptr noundef %44, ptr noundef null) #15
  %45 = ptrtoint ptr %bdev.i.i.i76 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %bdev.i.i.i76, align 8
  %lru_lock2.i.i.i79 = getelementptr inbounds %struct.ttm_device, ptr %46, i32 0, i32 6
  call void @_raw_spin_unlock(ptr noundef %lru_lock2.i.i.i79) #15
  %resv.i.i80 = getelementptr inbounds %struct.amdgpu_bo, ptr %40, i32 0, i32 4, i32 0, i32 9
  %47 = ptrtoint ptr %resv.i.i80 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %resv.i.i80, align 8
  call void @dma_resv_reset_shared_max(ptr noundef %48) #15
  call void @ww_mutex_unlock(ptr noundef %48) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %do.end31, %do.end
  %retval.0 = phi i32 [ %call, %do.end ], [ %call26, %do.end31 ], [ 0, %if.end33 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fw) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %hpd) #15
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ring_init(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_gfx_is_mec_queue_enabled(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v9_0_compute_ring_init(ptr noundef %adev, i32 noundef %ring_id, i32 noundef %mec, i32 noundef %pipe, i32 noundef %queue) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx3 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id
  %add = add i32 %mec, 1
  %me = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 16
  %0 = ptrtoint ptr %me to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %add, ptr %me, align 8
  %pipe4 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 17
  %1 = ptrtoint ptr %pipe4 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %pipe, ptr %pipe4, align 4
  %queue5 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 18
  %2 = ptrtoint ptr %queue5 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %queue, ptr %queue5, align 8
  %ring_obj = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 4
  %3 = ptrtoint ptr %ring_obj to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %ring_obj, align 8
  %use_doorbell = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 24
  %4 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %use_doorbell, align 4
  %mec_ring0 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 144, i32 1
  %5 = ptrtoint ptr %mec_ring0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mec_ring0, align 4
  %add6 = add i32 %6, %ring_id
  %shl = shl i32 %add6, 1
  %doorbell_index7 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 23
  %7 = ptrtoint ptr %doorbell_index7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %shl, ptr %doorbell_index7, align 8
  %hpd_eop_gpu_addr = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 1
  %8 = ptrtoint ptr %hpd_eop_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %hpd_eop_gpu_addr, align 8
  %mul = shl i32 %ring_id, 12
  %conv = sext i32 %mul to i64
  %add10 = add i64 %9, %conv
  %eop_gpu_addr = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 22
  %10 = ptrtoint ptr %eop_gpu_addr to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %add10, ptr %eop_gpu_addr, align 8
  %name = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 38, i32 %ring_id, i32 29
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %name, ptr noundef nonnull @.str.69, i32 noundef %add, i32 noundef %pipe, i32 noundef %queue)
  %11 = ptrtoint ptr %me to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %me, align 8
  %sub = add i32 %12, -1
  %num_pipe_per_mec = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 6, i32 5
  %13 = ptrtoint ptr %num_pipe_per_mec to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_pipe_per_mec, align 4
  %mul17 = mul i32 %sub, %14
  %add18 = add i32 %mul17, 2
  %15 = ptrtoint ptr %pipe4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pipe4, align 4
  %add20 = add i32 %add18, %16
  %call21 = tail call zeroext i1 @amdgpu_gfx_is_high_priority_compute_queue(ptr noundef %adev, ptr noundef %arrayidx3) #15
  %cond = select i1 %call21, i32 2, i32 1
  %eop_irq = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 40
  %call24 = tail call i32 @amdgpu_ring_init(ptr noundef %adev, ptr noundef %arrayidx3, i32 noundef 1024, ptr noundef %eop_irq, i32 noundef %add20, i32 noundef %cond, ptr noundef null) #15
  ret i32 %call24
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_kiq_init(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_kiq_init_ring(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_mqd_sw_init(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gfx_v9_0_gpu_early_init(ptr noundef %adev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 49
  %0 = ptrtoint ptr %funcs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @gfx_v9_0_gfx_funcs, ptr %funcs, align 4
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.418)
  switch i32 %2, label %do.body256 [
    i32 589825, label %sw.bb
    i32 590337, label %sw.bb11
    i32 590848, label %sw.bb27
    i32 590338, label %entry.sw.bb69_crit_edge
    i32 590080, label %entry.sw.bb69_crit_edge437
    i32 590849, label %sw.bb89
    i32 590592, label %sw.bb144
    i32 590850, label %sw.bb197
  ]

entry.sw.bb69_crit_edge437:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb69

entry.sw.bb69_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb69

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %max_hw_contexts = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %4 = ptrtoint ptr %max_hw_contexts to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 8, ptr %max_hw_contexts, align 8
  %sc_prim_fifo_size_frontend = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %5 = ptrtoint ptr %sc_prim_fifo_size_frontend to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 32, ptr %sc_prim_fifo_size_frontend, align 4
  %sc_prim_fifo_size_backend = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %6 = ptrtoint ptr %sc_prim_fifo_size_backend to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 256, ptr %sc_prim_fifo_size_backend, align 8
  %sc_hiz_tile_fifo_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %7 = ptrtoint ptr %sc_hiz_tile_fifo_size to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 48, ptr %sc_hiz_tile_fifo_size, align 4
  %sc_earlyz_tile_fifo_size = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %8 = ptrtoint ptr %sc_earlyz_tile_fifo_size to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size, align 8
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %max_hw_contexts14 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %9 = ptrtoint ptr %max_hw_contexts14 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 8, ptr %max_hw_contexts14, align 8
  %sc_prim_fifo_size_frontend17 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %10 = ptrtoint ptr %sc_prim_fifo_size_frontend17 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 32, ptr %sc_prim_fifo_size_frontend17, align 4
  %sc_prim_fifo_size_backend20 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %11 = ptrtoint ptr %sc_prim_fifo_size_backend20 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 256, ptr %sc_prim_fifo_size_backend20, align 8
  %sc_hiz_tile_fifo_size23 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %12 = ptrtoint ptr %sc_hiz_tile_fifo_size23 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 48, ptr %sc_hiz_tile_fifo_size23, align 4
  %sc_earlyz_tile_fifo_size26 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %13 = ptrtoint ptr %sc_earlyz_tile_fifo_size26 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size26, align 8
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70) #18
  br label %sw.epilog

sw.bb27:                                          ; preds = %entry
  %ras_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 59
  %14 = ptrtoint ptr %ras_funcs to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @gfx_v9_0_ras_funcs, ptr %ras_funcs, align 8
  %max_hw_contexts31 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %15 = ptrtoint ptr %max_hw_contexts31 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 8, ptr %max_hw_contexts31, align 8
  %sc_prim_fifo_size_frontend34 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %16 = ptrtoint ptr %sc_prim_fifo_size_frontend34 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 32, ptr %sc_prim_fifo_size_frontend34, align 4
  %sc_prim_fifo_size_backend37 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %17 = ptrtoint ptr %sc_prim_fifo_size_backend37 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 256, ptr %sc_prim_fifo_size_backend37, align 8
  %sc_hiz_tile_fifo_size40 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %18 = ptrtoint ptr %sc_hiz_tile_fifo_size40 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 48, ptr %sc_hiz_tile_fifo_size40, align 4
  %sc_earlyz_tile_fifo_size43 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %19 = ptrtoint ptr %sc_earlyz_tile_fifo_size43 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size43, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %20 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %virt, align 8
  %and = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb27.cond.false_crit_edge, label %land.lhs.true

sw.bb27.cond.false_crit_edge:                     ; preds = %sw.bb27
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %sw.bb27
  %funcs45 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %22 = ptrtoint ptr %funcs45 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %funcs45, align 4
  %tobool46.not = icmp eq ptr %23, null
  br i1 %tobool46.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true47

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true47:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %23, i32 0, i32 13
  %24 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sriov_rreg, align 4
  %tobool51.not = icmp eq ptr %25, null
  br i1 %tobool51.not, label %land.lhs.true47.cond.false_crit_edge, label %cond.true

land.lhs.true47.cond.false_crit_edge:             ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx56 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx56, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %add = add i32 %29, 1598
  %call59 = tail call i32 %25(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true47.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %sw.bb27.cond.false_crit_edge
  %arrayidx61 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %30 = ptrtoint ptr %arrayidx61 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx61, align 8
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %add64 = add i32 %33, 1598
  %call65 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add64, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call59, %cond.true ], [ %call65, %cond.false ]
  %and66 = and i32 %cond, 202934272
  %or = or i32 %and66, 570507330
  %call67 = tail call i32 @amdgpu_atomfirmware_get_gfx_info(ptr noundef %adev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call67)
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %cond.end.sw.epilog_crit_edge, label %cond.end.cleanup_crit_edge

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.end.sw.epilog_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb69:                                          ; preds = %entry.sw.bb69_crit_edge, %entry.sw.bb69_crit_edge437
  %max_hw_contexts72 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %34 = ptrtoint ptr %max_hw_contexts72 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 8, ptr %max_hw_contexts72, align 8
  %sc_prim_fifo_size_frontend75 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %35 = ptrtoint ptr %sc_prim_fifo_size_frontend75 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 32, ptr %sc_prim_fifo_size_frontend75, align 4
  %sc_prim_fifo_size_backend78 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %36 = ptrtoint ptr %sc_prim_fifo_size_backend78 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 256, ptr %sc_prim_fifo_size_backend78, align 8
  %sc_hiz_tile_fifo_size81 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %37 = ptrtoint ptr %sc_hiz_tile_fifo_size81 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 48, ptr %sc_hiz_tile_fifo_size81, align 4
  %sc_earlyz_tile_fifo_size84 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %38 = ptrtoint ptr %sc_earlyz_tile_fifo_size84 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size84, align 8
  %apu_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 10
  %39 = ptrtoint ptr %apu_flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %apu_flags, align 4
  %and85 = and i32 %40, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and85)
  %tobool86.not = icmp eq i32 %and85, 0
  %. = select i1 %tobool86.not, i32 603979842, i32 637612097
  br label %sw.epilog

sw.bb89:                                          ; preds = %entry
  %ras_funcs91 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 59
  %41 = ptrtoint ptr %ras_funcs91 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @gfx_v9_4_ras_funcs, ptr %ras_funcs91, align 8
  %max_hw_contexts94 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %42 = ptrtoint ptr %max_hw_contexts94 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 8, ptr %max_hw_contexts94, align 8
  %sc_prim_fifo_size_frontend97 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %43 = ptrtoint ptr %sc_prim_fifo_size_frontend97 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 32, ptr %sc_prim_fifo_size_frontend97, align 4
  %sc_prim_fifo_size_backend100 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %44 = ptrtoint ptr %sc_prim_fifo_size_backend100 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 256, ptr %sc_prim_fifo_size_backend100, align 8
  %sc_hiz_tile_fifo_size103 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %45 = ptrtoint ptr %sc_hiz_tile_fifo_size103 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 48, ptr %sc_hiz_tile_fifo_size103, align 4
  %sc_earlyz_tile_fifo_size106 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %46 = ptrtoint ptr %sc_earlyz_tile_fifo_size106 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size106, align 8
  %virt107 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %47 = ptrtoint ptr %virt107 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %virt107, align 8
  %and109 = and i32 %48, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and109)
  %tobool110.not = icmp eq i32 %and109, 0
  br i1 %tobool110.not, label %sw.bb89.cond.false133_crit_edge, label %land.lhs.true111

sw.bb89.cond.false133_crit_edge:                  ; preds = %sw.bb89
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false133

land.lhs.true111:                                 ; preds = %sw.bb89
  %funcs114 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %49 = ptrtoint ptr %funcs114 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %funcs114, align 4
  %tobool115.not = icmp eq ptr %50, null
  br i1 %tobool115.not, label %land.lhs.true111.cond.false133_crit_edge, label %land.lhs.true116

land.lhs.true111.cond.false133_crit_edge:         ; preds = %land.lhs.true111
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false133

land.lhs.true116:                                 ; preds = %land.lhs.true111
  %sriov_rreg120 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %50, i32 0, i32 13
  %51 = ptrtoint ptr %sriov_rreg120 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %sriov_rreg120, align 4
  %tobool121.not = icmp eq ptr %52, null
  br i1 %tobool121.not, label %land.lhs.true116.cond.false133_crit_edge, label %cond.true122

land.lhs.true116.cond.false133_crit_edge:         ; preds = %land.lhs.true116
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false133

cond.true122:                                     ; preds = %land.lhs.true116
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx128 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %53 = ptrtoint ptr %arrayidx128 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx128, align 8
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %add131 = add i32 %56, 1598
  %call132 = tail call i32 %52(ptr noundef %adev, i32 noundef %add131, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end140

cond.false133:                                    ; preds = %land.lhs.true116.cond.false133_crit_edge, %land.lhs.true111.cond.false133_crit_edge, %sw.bb89.cond.false133_crit_edge
  %arrayidx135 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %57 = ptrtoint ptr %arrayidx135 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx135, align 8
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %58, align 4
  %add138 = add i32 %60, 1598
  %call139 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add138, i32 noundef 0) #15
  br label %cond.end140

cond.end140:                                      ; preds = %cond.false133, %cond.true122
  %cond141 = phi i32 [ %call132, %cond.true122 ], [ %call139, %cond.false133 ]
  %and142 = and i32 %cond141, 202934272
  %or143 = or i32 %and142, 570507330
  br label %sw.epilog

sw.bb144:                                         ; preds = %entry
  %max_hw_contexts147 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %61 = ptrtoint ptr %max_hw_contexts147 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 8, ptr %max_hw_contexts147, align 8
  %sc_prim_fifo_size_frontend150 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %62 = ptrtoint ptr %sc_prim_fifo_size_frontend150 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 32, ptr %sc_prim_fifo_size_frontend150, align 4
  %sc_prim_fifo_size_backend153 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %63 = ptrtoint ptr %sc_prim_fifo_size_backend153 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 256, ptr %sc_prim_fifo_size_backend153, align 8
  %sc_hiz_tile_fifo_size156 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %64 = ptrtoint ptr %sc_hiz_tile_fifo_size156 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 128, ptr %sc_hiz_tile_fifo_size156, align 4
  %sc_earlyz_tile_fifo_size159 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %65 = ptrtoint ptr %sc_earlyz_tile_fifo_size159 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size159, align 8
  %virt160 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %66 = ptrtoint ptr %virt160 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %virt160, align 8
  %and162 = and i32 %67, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and162)
  %tobool163.not = icmp eq i32 %and162, 0
  br i1 %tobool163.not, label %sw.bb144.cond.false186_crit_edge, label %land.lhs.true164

sw.bb144.cond.false186_crit_edge:                 ; preds = %sw.bb144
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false186

land.lhs.true164:                                 ; preds = %sw.bb144
  %funcs167 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %68 = ptrtoint ptr %funcs167 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %funcs167, align 4
  %tobool168.not = icmp eq ptr %69, null
  br i1 %tobool168.not, label %land.lhs.true164.cond.false186_crit_edge, label %land.lhs.true169

land.lhs.true164.cond.false186_crit_edge:         ; preds = %land.lhs.true164
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false186

land.lhs.true169:                                 ; preds = %land.lhs.true164
  %sriov_rreg173 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %69, i32 0, i32 13
  %70 = ptrtoint ptr %sriov_rreg173 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %sriov_rreg173, align 4
  %tobool174.not = icmp eq ptr %71, null
  br i1 %tobool174.not, label %land.lhs.true169.cond.false186_crit_edge, label %cond.true175

land.lhs.true169.cond.false186_crit_edge:         ; preds = %land.lhs.true169
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false186

cond.true175:                                     ; preds = %land.lhs.true169
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx181 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %72 = ptrtoint ptr %arrayidx181 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx181, align 8
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %73, align 4
  %add184 = add i32 %75, 1598
  %call185 = tail call i32 %71(ptr noundef %adev, i32 noundef %add184, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end193

cond.false186:                                    ; preds = %land.lhs.true169.cond.false186_crit_edge, %land.lhs.true164.cond.false186_crit_edge, %sw.bb144.cond.false186_crit_edge
  %arrayidx188 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %76 = ptrtoint ptr %arrayidx188 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx188, align 8
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %77, align 4
  %add191 = add i32 %79, 1598
  %call192 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add191, i32 noundef 0) #15
  br label %cond.end193

cond.end193:                                      ; preds = %cond.false186, %cond.true175
  %cond194 = phi i32 [ %call185, %cond.true175 ], [ %call192, %cond.false186 ]
  %and195 = and i32 %cond194, 202934272
  %or196 = or i32 %and195, 570490946
  br label %sw.epilog

sw.bb197:                                         ; preds = %entry
  %ras_funcs199 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 59
  %80 = ptrtoint ptr %ras_funcs199 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr @gfx_v9_4_2_ras_funcs, ptr %ras_funcs199, align 8
  %max_hw_contexts202 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 8
  %81 = ptrtoint ptr %max_hw_contexts202 to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 8, ptr %max_hw_contexts202, align 8
  %sc_prim_fifo_size_frontend205 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 9
  %82 = ptrtoint ptr %sc_prim_fifo_size_frontend205 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 32, ptr %sc_prim_fifo_size_frontend205, align 4
  %sc_prim_fifo_size_backend208 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 10
  %83 = ptrtoint ptr %sc_prim_fifo_size_backend208 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 256, ptr %sc_prim_fifo_size_backend208, align 8
  %sc_hiz_tile_fifo_size211 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 11
  %84 = ptrtoint ptr %sc_hiz_tile_fifo_size211 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 48, ptr %sc_hiz_tile_fifo_size211, align 4
  %sc_earlyz_tile_fifo_size214 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 12
  %85 = ptrtoint ptr %sc_earlyz_tile_fifo_size214 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 1216, ptr %sc_earlyz_tile_fifo_size214, align 8
  %virt215 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %86 = ptrtoint ptr %virt215 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %virt215, align 8
  %and217 = and i32 %87, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and217)
  %tobool218.not = icmp eq i32 %and217, 0
  br i1 %tobool218.not, label %sw.bb197.cond.false241_crit_edge, label %land.lhs.true219

sw.bb197.cond.false241_crit_edge:                 ; preds = %sw.bb197
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241

land.lhs.true219:                                 ; preds = %sw.bb197
  %funcs222 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %88 = ptrtoint ptr %funcs222 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %funcs222, align 4
  %tobool223.not = icmp eq ptr %89, null
  br i1 %tobool223.not, label %land.lhs.true219.cond.false241_crit_edge, label %land.lhs.true224

land.lhs.true219.cond.false241_crit_edge:         ; preds = %land.lhs.true219
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241

land.lhs.true224:                                 ; preds = %land.lhs.true219
  %sriov_rreg228 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %89, i32 0, i32 13
  %90 = ptrtoint ptr %sriov_rreg228 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %sriov_rreg228, align 4
  %tobool229.not = icmp eq ptr %91, null
  br i1 %tobool229.not, label %land.lhs.true224.cond.false241_crit_edge, label %cond.true230

land.lhs.true224.cond.false241_crit_edge:         ; preds = %land.lhs.true224
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241

cond.true230:                                     ; preds = %land.lhs.true224
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx236 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %92 = ptrtoint ptr %arrayidx236 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %arrayidx236, align 8
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %93, align 4
  %add239 = add i32 %95, 1598
  %call240 = tail call i32 %91(ptr noundef %adev, i32 noundef %add239, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end248

cond.false241:                                    ; preds = %land.lhs.true224.cond.false241_crit_edge, %land.lhs.true219.cond.false241_crit_edge, %sw.bb197.cond.false241_crit_edge
  %arrayidx243 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %96 = ptrtoint ptr %arrayidx243 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %arrayidx243, align 8
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %97, align 4
  %add246 = add i32 %99, 1598
  %call247 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add246, i32 noundef 0) #15
  br label %cond.end248

cond.end248:                                      ; preds = %cond.false241, %cond.true230
  %cond249 = phi i32 [ %call240, %cond.true230 ], [ %call247, %cond.false241 ]
  %and250 = and i32 %cond249, 202934272
  %or251 = or i32 %and250, 570507330
  %call252 = tail call i32 @amdgpu_atomfirmware_get_gfx_info(ptr noundef %adev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call252)
  %tobool253.not = icmp eq i32 %call252, 0
  br i1 %tobool253.not, label %cond.end248.sw.epilog_crit_edge, label %cond.end248.cleanup_crit_edge

cond.end248.cleanup_crit_edge:                    ; preds = %cond.end248
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.end248.sw.epilog_crit_edge:                  ; preds = %cond.end248
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

do.body256:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2297, 0\0A.popsection", ""() #15, !srcloc !1044
  unreachable

sw.epilog:                                        ; preds = %cond.end248.sw.epilog_crit_edge, %cond.end193, %cond.end140, %sw.bb69, %cond.end.sw.epilog_crit_edge, %sw.bb11, %sw.bb
  %gb_addr_config.0 = phi i32 [ %or251, %cond.end248.sw.epilog_crit_edge ], [ %or196, %cond.end193 ], [ %or143, %cond.end140 ], [ %or, %cond.end.sw.epilog_crit_edge ], [ 605044801, %sw.bb11 ], [ 705773634, %sw.bb ], [ %., %sw.bb69 ]
  %gb_addr_config264 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 23
  %100 = ptrtoint ptr %gb_addr_config264 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %gb_addr_config.0, ptr %gb_addr_config264, align 4
  %and268 = and i32 %gb_addr_config.0, 7
  %shl = shl nuw nsw i32 1, %and268
  %conv = trunc i32 %shl to i8
  %gb_addr_config_fields = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29
  %num_pipes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 1
  %101 = ptrtoint ptr %num_pipes to i32
  call void @__asan_store1_noabort(i32 %101)
  store i8 %conv, ptr %num_pipes, align 2
  %max_tile_pipes = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 1
  %102 = ptrtoint ptr %max_tile_pipes to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %shl, ptr %max_tile_pipes, align 4
  %and281 = lshr i32 %gb_addr_config.0, 12
  %shr282 = and i32 %and281, 7
  %shl283 = shl nuw nsw i32 1, %shr282
  %conv284 = trunc i32 %shl283 to i8
  %num_banks = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 3
  %103 = ptrtoint ptr %num_banks to i32
  call void @__asan_store1_noabort(i32 %103)
  store i8 %conv284, ptr %num_banks, align 4
  %and291 = lshr i32 %gb_addr_config.0, 6
  %shr292 = and i32 %and291, 3
  %shl293 = shl nuw nsw i32 1, %shr292
  %conv294 = trunc i32 %shl293 to i8
  %max_compress_frags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 2
  %104 = ptrtoint ptr %max_compress_frags to i32
  call void @__asan_store1_noabort(i32 %104)
  store i8 %conv294, ptr %max_compress_frags, align 1
  %and301 = lshr i32 %gb_addr_config.0, 26
  %shr302 = and i32 %and301, 3
  %shl303 = shl nuw nsw i32 1, %shr302
  %conv304 = trunc i32 %shl303 to i8
  %num_rb_per_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 5
  %105 = ptrtoint ptr %num_rb_per_se to i32
  call void @__asan_store1_noabort(i32 %105)
  store i8 %conv304, ptr %num_rb_per_se, align 2
  %and311 = lshr i32 %gb_addr_config.0, 19
  %shr312 = and i32 %and311, 3
  %shl313 = shl nuw nsw i32 1, %shr312
  %conv314 = trunc i32 %shl313 to i8
  %num_se = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 1, i32 29, i32 4
  %106 = ptrtoint ptr %num_se to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %conv314, ptr %num_se, align 1
  %and321 = lshr i32 %gb_addr_config.0, 3
  %shr322 = and i32 %and321, 7
  %add323 = or i32 %shr322, 8
  %shl324 = shl nuw i32 1, %add323
  %conv325 = trunc i32 %shl324 to i16
  %107 = ptrtoint ptr %gb_addr_config_fields to i32
  call void @__asan_store2_noabort(i32 %107)
  store i16 %conv325, ptr %gb_addr_config_fields, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %cond.end248.cleanup_crit_edge, %cond.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ %call67, %cond.end.cleanup_crit_edge ], [ %call252, %cond.end248.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_firmware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ucode_validate(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_firmware(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_pm_load_smu_firmware(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_compute_queue_acquire(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_bo_create_reserved(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_bo_kunmap(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_bo_free_kernel(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ttm_bo_move_to_lru_tail(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_resv_reset_shared_max(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ww_mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_gfx_is_high_priority_compute_queue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atomfirmware_get_gfx_info(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i64 @gfx_v9_0_get_gpu_clock_counter(ptr noundef %adev) #0 align 64 {
entry:
  %seq.i = alloca i32, align 4
  %reg_val_offs.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590592, i32 %1)
  %cond254 = icmp eq i32 %1, 590592
  br i1 %cond254, label %do.body, label %sw.default

do.body:                                          ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !998) #15
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %5, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1045
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %6 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %virt, align 8
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body.cond.false_crit_edge, label %land.lhs.true

do.body.cond.false_crit_edge:                     ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %do.body
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %8 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %funcs, align 4
  %tobool2.not = icmp eq ptr %9, null
  br i1 %tobool2.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true3

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %9, i32 0, i32 13
  %10 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sriov_rreg, align 4
  %tobool7.not = icmp eq ptr %11, null
  br i1 %tobool7.not, label %land.lhs.true3.cond.false_crit_edge, label %cond.true

land.lhs.true3.cond.false_crit_edge:              ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx12 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %12 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx12, align 8
  %arrayidx14 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx14, align 4
  %add = add i32 %15, 37
  %call = tail call i32 %11(ptr noundef %adev, i32 noundef %add, i32 noundef 2, i32 noundef 22) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true3.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %do.body.cond.false_crit_edge
  %arrayidx16 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %16 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx16, align 8
  %arrayidx18 = getelementptr i32, ptr %17, i32 1
  %18 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx18, align 4
  %add19 = add i32 %19, 37
  %call20 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add19, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call20, %cond.false ]
  %20 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %virt, align 8
  %and23 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %cond.end.cond.false47_crit_edge, label %land.lhs.true25

cond.end.cond.false47_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false47

land.lhs.true25:                                  ; preds = %cond.end
  %funcs28 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %22 = ptrtoint ptr %funcs28 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %funcs28, align 4
  %tobool29.not = icmp eq ptr %23, null
  br i1 %tobool29.not, label %land.lhs.true25.cond.false47_crit_edge, label %land.lhs.true30

land.lhs.true25.cond.false47_crit_edge:           ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false47

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %sriov_rreg34 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %23, i32 0, i32 13
  %24 = ptrtoint ptr %sriov_rreg34 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sriov_rreg34, align 4
  %tobool35.not = icmp eq ptr %25, null
  br i1 %tobool35.not, label %land.lhs.true30.cond.false47_crit_edge, label %cond.true36

land.lhs.true30.cond.false47_crit_edge:           ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false47

cond.true36:                                      ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx42 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %26 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx42, align 8
  %arrayidx44 = getelementptr i32, ptr %27, i32 1
  %28 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %29, 38
  %call46 = tail call i32 %25(ptr noundef %adev, i32 noundef %add45, i32 noundef 2, i32 noundef 22) #15
  br label %cond.end54

cond.false47:                                     ; preds = %land.lhs.true30.cond.false47_crit_edge, %land.lhs.true25.cond.false47_crit_edge, %cond.end.cond.false47_crit_edge
  %arrayidx49 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %30 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx49, align 8
  %arrayidx51 = getelementptr i32, ptr %31, i32 1
  %32 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx51, align 4
  %add52 = add i32 %33, 38
  %call53 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add52, i32 noundef 0) #15
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false47, %cond.true36
  %cond55 = phi i32 [ %call46, %cond.true36 ], [ %call53, %cond.false47 ]
  %34 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %virt, align 8
  %and59 = and i32 %35, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %cond.end54.cond.false83_crit_edge, label %land.lhs.true61

cond.end54.cond.false83_crit_edge:                ; preds = %cond.end54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83

land.lhs.true61:                                  ; preds = %cond.end54
  %funcs64 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %36 = ptrtoint ptr %funcs64 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %funcs64, align 4
  %tobool65.not = icmp eq ptr %37, null
  br i1 %tobool65.not, label %land.lhs.true61.cond.false83_crit_edge, label %land.lhs.true66

land.lhs.true61.cond.false83_crit_edge:           ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83

land.lhs.true66:                                  ; preds = %land.lhs.true61
  %sriov_rreg70 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %37, i32 0, i32 13
  %38 = ptrtoint ptr %sriov_rreg70 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sriov_rreg70, align 4
  %tobool71.not = icmp eq ptr %39, null
  br i1 %tobool71.not, label %land.lhs.true66.cond.false83_crit_edge, label %cond.true72

land.lhs.true66.cond.false83_crit_edge:           ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83

cond.true72:                                      ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx78 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %40 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx78, align 8
  %arrayidx80 = getelementptr i32, ptr %41, i32 1
  %42 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx80, align 4
  %add81 = add i32 %43, 37
  %call82 = tail call i32 %39(ptr noundef %adev, i32 noundef %add81, i32 noundef 2, i32 noundef 22) #15
  br label %cond.end90

cond.false83:                                     ; preds = %land.lhs.true66.cond.false83_crit_edge, %land.lhs.true61.cond.false83_crit_edge, %cond.end54.cond.false83_crit_edge
  %arrayidx85 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %44 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx85, align 8
  %arrayidx87 = getelementptr i32, ptr %45, i32 1
  %46 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx87, align 4
  %add88 = add i32 %47, 37
  %call89 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add88, i32 noundef 0) #15
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false83, %cond.true72
  %cond91 = phi i32 [ %call82, %cond.true72 ], [ %call89, %cond.false83 ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond91, i32 %cond)
  %cmp.not = icmp eq i32 %cond91, %cond
  br i1 %cmp.not, label %cond.end90.do.body130_crit_edge, label %if.then

cond.end90.do.body130_crit_edge:                  ; preds = %cond.end90
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body130

if.then:                                          ; preds = %cond.end90
  %48 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %virt, align 8
  %and96 = and i32 %49, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96)
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %if.then.cond.false120_crit_edge, label %land.lhs.true98

if.then.cond.false120_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false120

land.lhs.true98:                                  ; preds = %if.then
  %funcs101 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %50 = ptrtoint ptr %funcs101 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %funcs101, align 4
  %tobool102.not = icmp eq ptr %51, null
  br i1 %tobool102.not, label %land.lhs.true98.cond.false120_crit_edge, label %land.lhs.true103

land.lhs.true98.cond.false120_crit_edge:          ; preds = %land.lhs.true98
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false120

land.lhs.true103:                                 ; preds = %land.lhs.true98
  %sriov_rreg107 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %51, i32 0, i32 13
  %52 = ptrtoint ptr %sriov_rreg107 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %sriov_rreg107, align 4
  %tobool108.not = icmp eq ptr %53, null
  br i1 %tobool108.not, label %land.lhs.true103.cond.false120_crit_edge, label %cond.true109

land.lhs.true103.cond.false120_crit_edge:         ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false120

cond.true109:                                     ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx115 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %54 = ptrtoint ptr %arrayidx115 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx115, align 8
  %arrayidx117 = getelementptr i32, ptr %55, i32 1
  %56 = ptrtoint ptr %arrayidx117 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx117, align 4
  %add118 = add i32 %57, 38
  %call119 = tail call i32 %53(ptr noundef %adev, i32 noundef %add118, i32 noundef 2, i32 noundef 22) #15
  br label %do.body130

cond.false120:                                    ; preds = %land.lhs.true103.cond.false120_crit_edge, %land.lhs.true98.cond.false120_crit_edge, %if.then.cond.false120_crit_edge
  %arrayidx122 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 22
  %58 = ptrtoint ptr %arrayidx122 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx122, align 8
  %arrayidx124 = getelementptr i32, ptr %59, i32 1
  %60 = ptrtoint ptr %arrayidx124 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx124, align 4
  %add125 = add i32 %61, 38
  %call126 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add125, i32 noundef 0) #15
  br label %do.body130

do.body130:                                       ; preds = %cond.false120, %cond.true109, %cond.end90.do.body130_crit_edge
  %clock_lo.0.in = phi i32 [ %cond55, %cond.end90.do.body130_crit_edge ], [ %call119, %cond.true109 ], [ %call126, %cond.false120 ]
  %clock_hi.0.in = phi i32 [ %cond, %cond.end90.do.body130_crit_edge ], [ %cond91, %cond.true109 ], [ %cond91, %cond.false120 ]
  %clock_hi.0 = zext i32 %clock_hi.0.in to i64
  %clock_lo.0 = zext i32 %clock_lo.0.in to i64
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !1046
  %62 = tail call i32 @llvm.read_register.i32(metadata !998) #15
  %and.i.i.i333 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i333 to ptr
  %preempt_count.i.i334 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %preempt_count.i.i334 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %preempt_count.i.i334, align 4
  %sub.i = add i32 %65, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i334, align 4
  %shl = shl nuw i64 %clock_hi.0, 32
  %or = or i64 %shl, %clock_lo.0
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  tail call void @amdgpu_gfx_off_ctrl(ptr noundef %adev, i1 noundef zeroext false) #15
  %gfx133 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106
  tail call void @mutex_lock_nested(ptr noundef %gfx133, i32 noundef 0) #15
  %66 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 589825, i32 %67)
  %cmp137 = icmp eq i32 %67, 589825
  br i1 %cmp137, label %land.lhs.true139, label %sw.default.if.else_crit_edge

sw.default.if.else_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true139:                                 ; preds = %sw.default
  %virt140 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %68 = ptrtoint ptr %virt140 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %virt140, align 8
  %and142 = and i32 %69, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and142)
  %tobool143.not = icmp eq i32 %and142, 0
  br i1 %tobool143.not, label %land.lhs.true139.if.else_crit_edge, label %if.then144

land.lhs.true139.if.else_crit_edge:               ; preds = %land.lhs.true139
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then144:                                       ; preds = %land.lhs.true139
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %seq.i) #15
  %70 = ptrtoint ptr %seq.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 -1, ptr %seq.i, align 4, !annotation !1019
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %reg_val_offs.i) #15
  %71 = ptrtoint ptr %reg_val_offs.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 0, ptr %reg_val_offs.i, align 4
  %ring2.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 1
  %72 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %funcs.i, align 4
  %emit_rreg.i = getelementptr inbounds %struct.amdgpu_ring_funcs, ptr %73, i32 0, i32 32
  %74 = ptrtoint ptr %emit_rreg.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %emit_rreg.i, align 4
  %tobool.not.i = icmp eq ptr %75, null
  br i1 %tobool.not.i, label %do.body6.i, label %do.body13.i, !prof !1022

do.body6.i:                                       ; preds = %if.then144
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4240, 0\0A.popsection", ""() #15, !srcloc !1047
  unreachable

do.body13.i:                                      ; preds = %if.then144
  %ring_lock.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 2
  %call14.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %ring_lock.i) #15
  %call19.i = call i32 @amdgpu_device_wb_get(ptr noundef %adev, ptr noundef nonnull %reg_val_offs.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %tobool20.not.i = icmp eq i32 %call19.i, 0
  br i1 %tobool20.not.i, label %if.end27.i, label %do.end24.i

do.end24.i:                                       ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #17
  %call26.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.72) #18
  br label %failed_unlock.i

if.end27.i:                                       ; preds = %do.body13.i
  %call28.i = call i32 @amdgpu_ring_alloc(ptr noundef %ring2.i, i32 noundef 32) #15
  %count_dw.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 11
  %76 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %77)
  %cmp.i.i = icmp slt i32 %77, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end27.i.amdgpu_ring_write.exit.i_crit_edge

if.end27.i.amdgpu_ring_write.exit.i_crit_edge:    ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit.i

if.then.i.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit.i

amdgpu_ring_write.exit.i:                         ; preds = %if.then.i.i, %if.end27.i.amdgpu_ring_write.exit.i_crit_edge
  %ring1.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 5
  %78 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %ring1.i.i, align 4
  %wptr.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 7
  %80 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %wptr.i.i, align 8
  %inc.i.i = add i64 %81, 1
  store i64 %inc.i.i, ptr %wptr.i.i, align 8
  %buf_mask.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 14
  %82 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %buf_mask.i.i, align 8
  %84 = trunc i64 %81 to i32
  %idxprom.i.i = and i32 %83, %84
  %arrayidx.i.i = getelementptr i32, ptr %79, i32 %idxprom.i.i
  %85 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store volatile i32 -1073463296, ptr %arrayidx.i.i, align 4
  %ptr_mask.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 7, i32 3, i32 13
  %86 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %86)
  %87 = load i64, ptr %ptr_mask.i.i, align 8
  %88 = load i64, ptr %wptr.i.i, align 8
  %and3.i.i = and i64 %88, %87
  store i64 %and3.i.i, ptr %wptr.i.i, align 8
  %89 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %count_dw.i.i, align 8
  %dec.i.i = add i32 %90, -1
  store i32 %dec.i.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i.i)
  %cmp.i120.i = icmp slt i32 %dec.i.i, 1
  br i1 %cmp.i120.i, label %if.then.i121.i, label %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit131.i_crit_edge

amdgpu_ring_write.exit.i.amdgpu_ring_write.exit131.i_crit_edge: ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit131.i

if.then.i121.i:                                   ; preds = %amdgpu_ring_write.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit131.i

amdgpu_ring_write.exit131.i:                      ; preds = %if.then.i121.i, %amdgpu_ring_write.exit.i.amdgpu_ring_write.exit131.i_crit_edge
  %91 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %ring1.i.i, align 4
  %93 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %wptr.i.i, align 8
  %inc.i124.i = add i64 %94, 1
  store i64 %inc.i124.i, ptr %wptr.i.i, align 8
  %95 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %buf_mask.i.i, align 8
  %97 = trunc i64 %94 to i32
  %idxprom.i126.i = and i32 %96, %97
  %arrayidx.i127.i = getelementptr i32, ptr %92, i32 %idxprom.i126.i
  %98 = ptrtoint ptr %arrayidx.i127.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store volatile i32 1115401, ptr %arrayidx.i127.i, align 4
  %99 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %99)
  %100 = load i64, ptr %ptr_mask.i.i, align 8
  %101 = load i64, ptr %wptr.i.i, align 8
  %and3.i129.i = and i64 %101, %100
  store i64 %and3.i129.i, ptr %wptr.i.i, align 8
  %102 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %count_dw.i.i, align 8
  %dec.i130.i = add i32 %103, -1
  store i32 %dec.i130.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i130.i)
  %cmp.i133.i = icmp slt i32 %dec.i130.i, 1
  br i1 %cmp.i133.i, label %if.then.i134.i, label %amdgpu_ring_write.exit131.i.amdgpu_ring_write.exit144.i_crit_edge

amdgpu_ring_write.exit131.i.amdgpu_ring_write.exit144.i_crit_edge: ; preds = %amdgpu_ring_write.exit131.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit144.i

if.then.i134.i:                                   ; preds = %amdgpu_ring_write.exit131.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit144.i

amdgpu_ring_write.exit144.i:                      ; preds = %if.then.i134.i, %amdgpu_ring_write.exit131.i.amdgpu_ring_write.exit144.i_crit_edge
  %104 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %ring1.i.i, align 4
  %106 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %106)
  %107 = load i64, ptr %wptr.i.i, align 8
  %inc.i137.i = add i64 %107, 1
  store i64 %inc.i137.i, ptr %wptr.i.i, align 8
  %108 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %buf_mask.i.i, align 8
  %110 = trunc i64 %107 to i32
  %idxprom.i139.i = and i32 %109, %110
  %arrayidx.i140.i = getelementptr i32, ptr %105, i32 %idxprom.i139.i
  %111 = ptrtoint ptr %arrayidx.i140.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store volatile i32 0, ptr %arrayidx.i140.i, align 4
  %112 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %ptr_mask.i.i, align 8
  %114 = load i64, ptr %wptr.i.i, align 8
  %and3.i142.i = and i64 %114, %113
  store i64 %and3.i142.i, ptr %wptr.i.i, align 8
  %115 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %count_dw.i.i, align 8
  %dec.i143.i = add i32 %116, -1
  store i32 %dec.i143.i, ptr %count_dw.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i143.i)
  %cmp.i146.i = icmp slt i32 %dec.i143.i, 1
  br i1 %cmp.i146.i, label %if.then.i147.i, label %amdgpu_ring_write.exit144.i.amdgpu_ring_write.exit157.i_crit_edge

amdgpu_ring_write.exit144.i.amdgpu_ring_write.exit157.i_crit_edge: ; preds = %amdgpu_ring_write.exit144.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit157.i

if.then.i147.i:                                   ; preds = %amdgpu_ring_write.exit144.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit157.i

amdgpu_ring_write.exit157.i:                      ; preds = %if.then.i147.i, %amdgpu_ring_write.exit144.i.amdgpu_ring_write.exit157.i_crit_edge
  %117 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %ring1.i.i, align 4
  %119 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %wptr.i.i, align 8
  %inc.i150.i = add i64 %120, 1
  store i64 %inc.i150.i, ptr %wptr.i.i, align 8
  %121 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %buf_mask.i.i, align 8
  %123 = trunc i64 %120 to i32
  %idxprom.i152.i = and i32 %122, %123
  %arrayidx.i153.i = getelementptr i32, ptr %118, i32 %idxprom.i152.i
  %124 = ptrtoint ptr %arrayidx.i153.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store volatile i32 0, ptr %arrayidx.i153.i, align 4
  %125 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %ptr_mask.i.i, align 8
  %127 = load i64, ptr %wptr.i.i, align 8
  %and3.i155.i = and i64 %127, %126
  store i64 %and3.i155.i, ptr %wptr.i.i, align 8
  %128 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %count_dw.i.i, align 8
  %dec.i156.i = add i32 %129, -1
  store i32 %dec.i156.i, ptr %count_dw.i.i, align 8
  %gpu_addr.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 2
  %130 = ptrtoint ptr %gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %130)
  %131 = load i64, ptr %gpu_addr.i, align 8
  %132 = ptrtoint ptr %reg_val_offs.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %reg_val_offs.i, align 4
  %mul.i = shl i32 %133, 2
  %134 = trunc i64 %131 to i32
  %conv30.i = add i32 %mul.i, %134
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i156.i)
  %cmp.i159.i = icmp slt i32 %dec.i156.i, 1
  br i1 %cmp.i159.i, label %if.then.i160.i, label %amdgpu_ring_write.exit157.i.amdgpu_ring_write.exit170.i_crit_edge

amdgpu_ring_write.exit157.i.amdgpu_ring_write.exit170.i_crit_edge: ; preds = %amdgpu_ring_write.exit157.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit170.i

if.then.i160.i:                                   ; preds = %amdgpu_ring_write.exit157.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit170.i

amdgpu_ring_write.exit170.i:                      ; preds = %if.then.i160.i, %amdgpu_ring_write.exit157.i.amdgpu_ring_write.exit170.i_crit_edge
  %135 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %ring1.i.i, align 4
  %137 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %137)
  %138 = load i64, ptr %wptr.i.i, align 8
  %inc.i163.i = add i64 %138, 1
  store i64 %inc.i163.i, ptr %wptr.i.i, align 8
  %139 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %buf_mask.i.i, align 8
  %141 = trunc i64 %138 to i32
  %idxprom.i165.i = and i32 %140, %141
  %arrayidx.i166.i = getelementptr i32, ptr %136, i32 %idxprom.i165.i
  %142 = ptrtoint ptr %arrayidx.i166.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store volatile i32 %conv30.i, ptr %arrayidx.i166.i, align 4
  %143 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %143)
  %144 = load i64, ptr %ptr_mask.i.i, align 8
  %145 = load i64, ptr %wptr.i.i, align 8
  %and3.i168.i = and i64 %145, %144
  store i64 %and3.i168.i, ptr %wptr.i.i, align 8
  %146 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %count_dw.i.i, align 8
  %dec.i169.i = add i32 %147, -1
  store i32 %dec.i169.i, ptr %count_dw.i.i, align 8
  %148 = ptrtoint ptr %gpu_addr.i to i32
  call void @__asan_load8_noabort(i32 %148)
  %149 = load i64, ptr %gpu_addr.i, align 8
  %150 = ptrtoint ptr %reg_val_offs.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %reg_val_offs.i, align 4
  %mul33.i = shl i32 %151, 2
  %conv34.i = zext i32 %mul33.i to i64
  %add35.i = add i64 %149, %conv34.i
  %shr.i = lshr i64 %add35.i, 32
  %conv37.i = trunc i64 %shr.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i169.i)
  %cmp.i172.i = icmp slt i32 %dec.i169.i, 1
  br i1 %cmp.i172.i, label %if.then.i173.i, label %amdgpu_ring_write.exit170.i.amdgpu_ring_write.exit183.i_crit_edge

amdgpu_ring_write.exit170.i.amdgpu_ring_write.exit183.i_crit_edge: ; preds = %amdgpu_ring_write.exit170.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ring_write.exit183.i

if.then.i173.i:                                   ; preds = %amdgpu_ring_write.exit170.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.1) #15
  br label %amdgpu_ring_write.exit183.i

amdgpu_ring_write.exit183.i:                      ; preds = %if.then.i173.i, %amdgpu_ring_write.exit170.i.amdgpu_ring_write.exit183.i_crit_edge
  %152 = ptrtoint ptr %ring1.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %ring1.i.i, align 4
  %154 = ptrtoint ptr %wptr.i.i to i32
  call void @__asan_load8_noabort(i32 %154)
  %155 = load i64, ptr %wptr.i.i, align 8
  %inc.i176.i = add i64 %155, 1
  store i64 %inc.i176.i, ptr %wptr.i.i, align 8
  %156 = ptrtoint ptr %buf_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %buf_mask.i.i, align 8
  %158 = trunc i64 %155 to i32
  %idxprom.i178.i = and i32 %157, %158
  %arrayidx.i179.i = getelementptr i32, ptr %153, i32 %idxprom.i178.i
  %159 = ptrtoint ptr %arrayidx.i179.i to i32
  call void @__asan_store4_noabort(i32 %159)
  store volatile i32 %conv37.i, ptr %arrayidx.i179.i, align 4
  %160 = ptrtoint ptr %ptr_mask.i.i to i32
  call void @__asan_load8_noabort(i32 %160)
  %161 = load i64, ptr %ptr_mask.i.i, align 8
  %162 = load i64, ptr %wptr.i.i, align 8
  %and3.i181.i = and i64 %162, %161
  store i64 %and3.i181.i, ptr %wptr.i.i, align 8
  %163 = ptrtoint ptr %count_dw.i.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %count_dw.i.i, align 8
  %dec.i182.i = add i32 %164, -1
  store i32 %dec.i182.i, ptr %count_dw.i.i, align 8
  %call38.i = call i32 @amdgpu_fence_emit_polling(ptr noundef %ring2.i, ptr noundef nonnull %seq.i, i32 noundef 5000) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38.i)
  %tobool39.not.i = icmp eq i32 %call38.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %failed_undo.i

if.end41.i:                                       ; preds = %amdgpu_ring_write.exit183.i
  call void @amdgpu_ring_commit(ptr noundef %ring2.i) #15
  call void @_raw_spin_unlock_irqrestore(ptr noundef %ring_lock.i, i32 noundef %call14.i) #15
  %165 = ptrtoint ptr %seq.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %seq.i, align 4
  %call43.i = call i32 @amdgpu_fence_wait_polling(ptr noundef %ring2.i, i32 noundef %166, i32 noundef 5000) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call43.i)
  %cmp44.i = icmp slt i32 %call43.i, 1
  br i1 %cmp44.i, label %land.lhs.true.i, label %do.body50.i

land.lhs.true.i:                                  ; preds = %if.end41.i
  %in_gpu_reset.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 141
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %in_gpu_reset.i.i, i32 noundef 4) #15
  %167 = ptrtoint ptr %in_gpu_reset.i.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load volatile i32, ptr %in_gpu_reset.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %168)
  %tobool47.not.i = icmp eq i32 %168, 0
  br i1 %tobool47.not.i, label %land.rhs.preheader.i, label %land.lhs.true.i.failed_kiq_read.i_crit_edge

land.lhs.true.i.failed_kiq_read.i_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %failed_kiq_read.i

do.body50.i:                                      ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__might_sleep(ptr noundef nonnull @.str.9, i32 noundef 4279) #15
  br label %do.body65.i

land.rhs.preheader.i:                             ; preds = %land.lhs.true.i
  call void @__might_sleep(ptr noundef nonnull @.str.9, i32 noundef 4279) #15
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i.land.rhs.i_crit_edge, %land.rhs.preheader.i
  %cnt.0187.i = phi i32 [ %inc.i, %while.body.i.land.rhs.i_crit_edge ], [ 0, %land.rhs.preheader.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %cnt.0187.i)
  %exitcond.not.i = icmp eq i32 %cnt.0187.i, 1000
  br i1 %exitcond.not.i, label %land.rhs.i.failed_kiq_read.i_crit_edge, label %while.body.i

land.rhs.i.failed_kiq_read.i_crit_edge:           ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %failed_kiq_read.i

while.body.i:                                     ; preds = %land.rhs.i
  %inc.i = add nuw nsw i32 %cnt.0187.i, 1
  call void @msleep(i32 noundef 5) #15
  %169 = ptrtoint ptr %seq.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %seq.i, align 4
  %call60.i = call i32 @amdgpu_fence_wait_polling(ptr noundef %ring2.i, i32 noundef %170, i32 noundef 5000) #15
  %cmp56.i = icmp slt i32 %call60.i, 1
  br i1 %cmp56.i, label %while.body.i.land.rhs.i_crit_edge, label %while.body.i.do.body65.i_crit_edge

while.body.i.do.body65.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body65.i

while.body.i.land.rhs.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs.i

do.body65.i:                                      ; preds = %while.body.i.do.body65.i_crit_edge, %do.body50.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !1048
  call void @arm_heavy_mb() #15
  %wb69.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 70, i32 1
  %171 = ptrtoint ptr %wb69.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %wb69.i, align 4
  %173 = ptrtoint ptr %reg_val_offs.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %reg_val_offs.i, align 4
  %arrayidx.i = getelementptr i32, ptr %172, i32 %174
  %175 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load volatile i32, ptr %arrayidx.i, align 4
  %conv70.i = zext i32 %176 to i64
  %add73.i = add i32 %174, 1
  %arrayidx74.i = getelementptr i32, ptr %172, i32 %add73.i
  %177 = ptrtoint ptr %arrayidx74.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load volatile i32, ptr %arrayidx74.i, align 4
  %conv75.i = zext i32 %178 to i64
  %shl.i = shl nuw i64 %conv75.i, 32
  %or.i = or i64 %shl.i, %conv70.i
  call void @amdgpu_device_wb_free(ptr noundef %adev, i32 noundef %174) #15
  br label %gfx_v9_0_kiq_read_clock.exit

failed_undo.i:                                    ; preds = %amdgpu_ring_write.exit183.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @amdgpu_ring_undo(ptr noundef %ring2.i) #15
  br label %failed_unlock.i

failed_unlock.i:                                  ; preds = %failed_undo.i, %do.end24.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %ring_lock.i, i32 noundef %call14.i) #15
  br label %failed_kiq_read.i

failed_kiq_read.i:                                ; preds = %failed_unlock.i, %land.rhs.i.failed_kiq_read.i_crit_edge, %land.lhs.true.i.failed_kiq_read.i_crit_edge
  %179 = ptrtoint ptr %reg_val_offs.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %reg_val_offs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %180)
  %tobool77.not.i = icmp eq i32 %180, 0
  br i1 %tobool77.not.i, label %failed_kiq_read.i.do.end82.i_crit_edge, label %if.then78.i

failed_kiq_read.i.do.end82.i_crit_edge:           ; preds = %failed_kiq_read.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end82.i

if.then78.i:                                      ; preds = %failed_kiq_read.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @amdgpu_device_wb_free(ptr noundef %adev, i32 noundef %180) #15
  br label %do.end82.i

do.end82.i:                                       ; preds = %if.then78.i, %failed_kiq_read.i.do.end82.i_crit_edge
  %call84.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75) #18
  br label %gfx_v9_0_kiq_read_clock.exit

gfx_v9_0_kiq_read_clock.exit:                     ; preds = %do.end82.i, %do.body65.i
  %retval.0.i = phi i64 [ -1, %do.end82.i ], [ %or.i, %do.body65.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %reg_val_offs.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %seq.i) #15
  br label %if.end251

if.else:                                          ; preds = %land.lhs.true139.if.else_crit_edge, %sw.default.if.else_crit_edge
  %virt146 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %181 = ptrtoint ptr %virt146 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %virt146, align 8
  %and148 = and i32 %182, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148)
  %tobool149.not = icmp eq i32 %and148, 0
  br i1 %tobool149.not, label %if.else.cond.false170_crit_edge, label %land.lhs.true150

if.else.cond.false170_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false170

land.lhs.true150:                                 ; preds = %if.else
  %funcs153 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %183 = ptrtoint ptr %funcs153 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %funcs153, align 4
  %tobool154.not = icmp eq ptr %184, null
  br i1 %tobool154.not, label %land.lhs.true150.cond.false170_crit_edge, label %land.lhs.true155

land.lhs.true150.cond.false170_crit_edge:         ; preds = %land.lhs.true150
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false170

land.lhs.true155:                                 ; preds = %land.lhs.true150
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %184, i32 0, i32 12
  %185 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %sriov_wreg, align 4
  %tobool159.not = icmp eq ptr %186, null
  br i1 %tobool159.not, label %land.lhs.true155.cond.false170_crit_edge, label %cond.true160

land.lhs.true155.cond.false170_crit_edge:         ; preds = %land.lhs.true155
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false170

cond.true160:                                     ; preds = %land.lhs.true155
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx166 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %187 = ptrtoint ptr %arrayidx166 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %arrayidx166, align 8
  %arrayidx168 = getelementptr i32, ptr %188, i32 1
  %189 = ptrtoint ptr %arrayidx168 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %arrayidx168, align 4
  %add169 = add i32 %190, 19494
  tail call void %186(ptr noundef %adev, i32 noundef %add169, i32 noundef 1, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end176

cond.false170:                                    ; preds = %land.lhs.true155.cond.false170_crit_edge, %land.lhs.true150.cond.false170_crit_edge, %if.else.cond.false170_crit_edge
  %arrayidx172 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %191 = ptrtoint ptr %arrayidx172 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %arrayidx172, align 8
  %arrayidx174 = getelementptr i32, ptr %192, i32 1
  %193 = ptrtoint ptr %arrayidx174 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %arrayidx174, align 4
  %add175 = add i32 %194, 19494
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add175, i32 noundef 1, i32 noundef 0) #15
  br label %cond.end176

cond.end176:                                      ; preds = %cond.false170, %cond.true160
  %195 = ptrtoint ptr %virt146 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %virt146, align 8
  %and179 = and i32 %196, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and179)
  %tobool180.not = icmp eq i32 %and179, 0
  br i1 %tobool180.not, label %cond.end176.cond.false203_crit_edge, label %land.lhs.true181

cond.end176.cond.false203_crit_edge:              ; preds = %cond.end176
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203

land.lhs.true181:                                 ; preds = %cond.end176
  %funcs184 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %197 = ptrtoint ptr %funcs184 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %funcs184, align 4
  %tobool185.not = icmp eq ptr %198, null
  br i1 %tobool185.not, label %land.lhs.true181.cond.false203_crit_edge, label %land.lhs.true186

land.lhs.true181.cond.false203_crit_edge:         ; preds = %land.lhs.true181
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %sriov_rreg190 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %198, i32 0, i32 13
  %199 = ptrtoint ptr %sriov_rreg190 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %sriov_rreg190, align 4
  %tobool191.not = icmp eq ptr %200, null
  br i1 %tobool191.not, label %land.lhs.true186.cond.false203_crit_edge, label %cond.true192

land.lhs.true186.cond.false203_crit_edge:         ; preds = %land.lhs.true186
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203

cond.true192:                                     ; preds = %land.lhs.true186
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx198 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %201 = ptrtoint ptr %arrayidx198 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %arrayidx198, align 8
  %arrayidx200 = getelementptr i32, ptr %202, i32 1
  %203 = ptrtoint ptr %arrayidx200 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %arrayidx200, align 4
  %add201 = add i32 %204, 19492
  %call202 = tail call i32 %200(ptr noundef %adev, i32 noundef %add201, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end210

cond.false203:                                    ; preds = %land.lhs.true186.cond.false203_crit_edge, %land.lhs.true181.cond.false203_crit_edge, %cond.end176.cond.false203_crit_edge
  %arrayidx205 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %205 = ptrtoint ptr %arrayidx205 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %arrayidx205, align 8
  %arrayidx207 = getelementptr i32, ptr %206, i32 1
  %207 = ptrtoint ptr %arrayidx207 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %arrayidx207, align 4
  %add208 = add i32 %208, 19492
  %call209 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add208, i32 noundef 0) #15
  br label %cond.end210

cond.end210:                                      ; preds = %cond.false203, %cond.true192
  %cond211 = phi i32 [ %call202, %cond.true192 ], [ %call209, %cond.false203 ]
  %conv212 = zext i32 %cond211 to i64
  %209 = ptrtoint ptr %virt146 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %virt146, align 8
  %and215 = and i32 %210, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and215)
  %tobool216.not = icmp eq i32 %and215, 0
  br i1 %tobool216.not, label %cond.end210.cond.false239_crit_edge, label %land.lhs.true217

cond.end210.cond.false239_crit_edge:              ; preds = %cond.end210
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false239

land.lhs.true217:                                 ; preds = %cond.end210
  %funcs220 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %211 = ptrtoint ptr %funcs220 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %funcs220, align 4
  %tobool221.not = icmp eq ptr %212, null
  br i1 %tobool221.not, label %land.lhs.true217.cond.false239_crit_edge, label %land.lhs.true222

land.lhs.true217.cond.false239_crit_edge:         ; preds = %land.lhs.true217
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false239

land.lhs.true222:                                 ; preds = %land.lhs.true217
  %sriov_rreg226 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %212, i32 0, i32 13
  %213 = ptrtoint ptr %sriov_rreg226 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %sriov_rreg226, align 4
  %tobool227.not = icmp eq ptr %214, null
  br i1 %tobool227.not, label %land.lhs.true222.cond.false239_crit_edge, label %cond.true228

land.lhs.true222.cond.false239_crit_edge:         ; preds = %land.lhs.true222
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false239

cond.true228:                                     ; preds = %land.lhs.true222
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx234 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %215 = ptrtoint ptr %arrayidx234 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %arrayidx234, align 8
  %arrayidx236 = getelementptr i32, ptr %216, i32 1
  %217 = ptrtoint ptr %arrayidx236 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %arrayidx236, align 4
  %add237 = add i32 %218, 19493
  %call238 = tail call i32 %214(ptr noundef %adev, i32 noundef %add237, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end246

cond.false239:                                    ; preds = %land.lhs.true222.cond.false239_crit_edge, %land.lhs.true217.cond.false239_crit_edge, %cond.end210.cond.false239_crit_edge
  %arrayidx241 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %219 = ptrtoint ptr %arrayidx241 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %arrayidx241, align 8
  %arrayidx243 = getelementptr i32, ptr %220, i32 1
  %221 = ptrtoint ptr %arrayidx243 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %arrayidx243, align 4
  %add244 = add i32 %222, 19493
  %call245 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add244, i32 noundef 0) #15
  br label %cond.end246

cond.end246:                                      ; preds = %cond.false239, %cond.true228
  %cond247 = phi i32 [ %call238, %cond.true228 ], [ %call245, %cond.false239 ]
  %conv248 = zext i32 %cond247 to i64
  %shl249 = shl nuw i64 %conv248, 32
  %or250 = or i64 %shl249, %conv212
  br label %if.end251

if.end251:                                        ; preds = %cond.end246, %gfx_v9_0_kiq_read_clock.exit
  %clock.0 = phi i64 [ %retval.0.i, %gfx_v9_0_kiq_read_clock.exit ], [ %or250, %cond.end246 ]
  call void @mutex_unlock(ptr noundef %gfx133) #15
  call void @amdgpu_gfx_off_ctrl(ptr noundef %adev, i1 noundef zeroext true) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end251, %do.body130
  %clock.1 = phi i64 [ %or, %do.body130 ], [ %clock.0, %if.end251 ]
  ret i64 %clock.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_read_wave_data(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, ptr nocapture noundef writeonly %dst, ptr noundef %no_fields) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %no_fields, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %no_fields, align 4
  %arrayidx = getelementptr i32, ptr %dst, i32 %1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %arrayidx, align 4
  %call = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 18)
  %3 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %no_fields, align 4
  %inc1 = add i32 %4, 1
  store i32 %inc1, ptr %no_fields, align 4
  %arrayidx2 = getelementptr i32, ptr %dst, i32 %4
  %5 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %call, ptr %arrayidx2, align 4
  %call3 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 24)
  %6 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %no_fields, align 4
  %inc4 = add i32 %7, 1
  store i32 %inc4, ptr %no_fields, align 4
  %arrayidx5 = getelementptr i32, ptr %dst, i32 %7
  %8 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call3, ptr %arrayidx5, align 4
  %call6 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 25)
  %9 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %no_fields, align 4
  %inc7 = add i32 %10, 1
  store i32 %inc7, ptr %no_fields, align 4
  %arrayidx8 = getelementptr i32, ptr %dst, i32 %10
  %11 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call6, ptr %arrayidx8, align 4
  %call9 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 638)
  %12 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %no_fields, align 4
  %inc10 = add i32 %13, 1
  store i32 %inc10, ptr %no_fields, align 4
  %arrayidx11 = getelementptr i32, ptr %dst, i32 %13
  %14 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call9, ptr %arrayidx11, align 4
  %call12 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 639)
  %15 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %no_fields, align 4
  %inc13 = add i32 %16, 1
  store i32 %inc13, ptr %no_fields, align 4
  %arrayidx14 = getelementptr i32, ptr %dst, i32 %16
  %17 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %call12, ptr %arrayidx14, align 4
  %call15 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 20)
  %18 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %no_fields, align 4
  %inc16 = add i32 %19, 1
  store i32 %inc16, ptr %no_fields, align 4
  %arrayidx17 = getelementptr i32, ptr %dst, i32 %19
  %20 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call15, ptr %arrayidx17, align 4
  %call18 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 26)
  %21 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %no_fields, align 4
  %inc19 = add i32 %22, 1
  store i32 %inc19, ptr %no_fields, align 4
  %arrayidx20 = getelementptr i32, ptr %dst, i32 %22
  %23 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %call18, ptr %arrayidx20, align 4
  %call21 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 27)
  %24 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %no_fields, align 4
  %inc22 = add i32 %25, 1
  store i32 %inc22, ptr %no_fields, align 4
  %arrayidx23 = getelementptr i32, ptr %dst, i32 %25
  %26 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %call21, ptr %arrayidx23, align 4
  %call24 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 21)
  %27 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %no_fields, align 4
  %inc25 = add i32 %28, 1
  store i32 %inc25, ptr %no_fields, align 4
  %arrayidx26 = getelementptr i32, ptr %dst, i32 %28
  %29 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %call24, ptr %arrayidx26, align 4
  %call27 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 22)
  %30 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %no_fields, align 4
  %inc28 = add i32 %31, 1
  store i32 %inc28, ptr %no_fields, align 4
  %arrayidx29 = getelementptr i32, ptr %dst, i32 %31
  %32 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %call27, ptr %arrayidx29, align 4
  %call30 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 19)
  %33 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %no_fields, align 4
  %inc31 = add i32 %34, 1
  store i32 %inc31, ptr %no_fields, align 4
  %arrayidx32 = getelementptr i32, ptr %dst, i32 %34
  %35 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %call30, ptr %arrayidx32, align 4
  %call33 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 23)
  %36 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %no_fields, align 4
  %inc34 = add i32 %37, 1
  store i32 %inc34, ptr %no_fields, align 4
  %arrayidx35 = getelementptr i32, ptr %dst, i32 %37
  %38 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %call33, ptr %arrayidx35, align 4
  %call36 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 28)
  %39 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %no_fields, align 4
  %inc37 = add i32 %40, 1
  store i32 %inc37, ptr %no_fields, align 4
  %arrayidx38 = getelementptr i32, ptr %dst, i32 %40
  %41 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %call36, ptr %arrayidx38, align 4
  %call39 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 636)
  %42 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %no_fields, align 4
  %inc40 = add i32 %43, 1
  store i32 %inc40, ptr %no_fields, align 4
  %arrayidx41 = getelementptr i32, ptr %dst, i32 %43
  %44 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %call39, ptr %arrayidx41, align 4
  %call42 = tail call fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 17)
  %45 = ptrtoint ptr %no_fields to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %no_fields, align 4
  %inc43 = add i32 %46, 1
  store i32 %inc43, ptr %no_fields, align 4
  %arrayidx44 = getelementptr i32, ptr %dst, i32 %46
  %47 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %call42, ptr %arrayidx44, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_read_wave_vgprs(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef %thread, i32 noundef %start, i32 noundef %size, ptr nocapture noundef writeonly %dst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %start, 1024
  tail call fastcc void @wave_read_regs(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef %thread, i32 noundef %add, i32 noundef %size, ptr noundef %dst)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_read_wave_sgprs(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef %start, i32 noundef %size, ptr nocapture noundef writeonly %dst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %start, 512
  tail call fastcc void @wave_read_regs(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef 0, i32 noundef %add, i32 noundef %size, ptr noundef %dst)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_select_me_pipe_q(ptr noundef %adev, i32 noundef %me, i32 noundef %pipe, i32 noundef %q, i32 noundef %vm) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @soc15_grbm_select(ptr noundef %adev, i32 noundef %me, i32 noundef %pipe, i32 noundef %q, i32 noundef %vm) #15
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_fence_emit_polling(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_fence_wait_polling(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_undo(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wave_read_ind(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef %address) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %add = add i32 %3, 888
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %4 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %virt, align 8
  %and = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %tobool3.not = icmp eq ptr %7, null
  br i1 %tobool3.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true4

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sriov_wreg, align 4
  %tobool8.not = icmp eq ptr %9, null
  br i1 %tobool8.not, label %land.lhs.true4.cond.false_crit_edge, label %cond.true

land.lhs.true4.cond.false_crit_edge:              ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  %shl13 = shl i32 %simd, 4
  %shl14 = shl i32 %address, 16
  %or = or i32 %shl13, %wave
  %or15 = or i32 %or, %shl14
  %or16 = or i32 %or15, 8192
  tail call void %9(ptr noundef %adev, i32 noundef %add, i32 noundef %or16, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true4.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %shl18 = shl i32 %simd, 4
  %shl20 = shl i32 %address, 16
  %or19 = or i32 %shl18, %wave
  %or21 = or i32 %or19, %shl20
  %or22 = or i32 %or21, 8192
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %or22, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %10 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %virt, align 8
  %and25 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25)
  %tobool26.not = icmp eq i32 %and25, 0
  br i1 %tobool26.not, label %cond.end.cond.false47_crit_edge, label %land.lhs.true27

cond.end.cond.false47_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false47

land.lhs.true27:                                  ; preds = %cond.end
  %funcs30 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %12 = ptrtoint ptr %funcs30 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %funcs30, align 4
  %tobool31.not = icmp eq ptr %13, null
  br i1 %tobool31.not, label %land.lhs.true27.cond.false47_crit_edge, label %land.lhs.true32

land.lhs.true27.cond.false47_crit_edge:           ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false47

land.lhs.true32:                                  ; preds = %land.lhs.true27
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %13, i32 0, i32 13
  %14 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sriov_rreg, align 4
  %tobool36.not = icmp eq ptr %15, null
  br i1 %tobool36.not, label %land.lhs.true32.cond.false47_crit_edge, label %cond.true37

land.lhs.true32.cond.false47_crit_edge:           ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false47

cond.true37:                                      ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add46 = add i32 %19, 889
  %call = tail call i32 %15(ptr noundef %adev, i32 noundef %add46, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end54

cond.false47:                                     ; preds = %land.lhs.true32.cond.false47_crit_edge, %land.lhs.true27.cond.false47_crit_edge, %cond.end.cond.false47_crit_edge
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add52 = add i32 %23, 889
  %call53 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add52, i32 noundef 0) #15
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false47, %cond.true37
  %cond = phi i32 [ %call, %cond.true37 ], [ %call53, %cond.false47 ]
  ret i32 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wave_read_regs(ptr noundef %adev, i32 noundef %simd, i32 noundef %wave, i32 noundef %thread, i32 noundef %regno, i32 noundef %num, ptr nocapture noundef writeonly %out) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %add = add i32 %3, 888
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %4 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %virt, align 8
  %and = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %tobool3.not = icmp eq ptr %7, null
  br i1 %tobool3.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true4

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sriov_wreg, align 4
  %tobool8.not = icmp eq ptr %9, null
  br i1 %tobool8.not, label %land.lhs.true4.cond.false_crit_edge, label %cond.true

land.lhs.true4.cond.false_crit_edge:              ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  %shl13 = shl i32 %simd, 4
  %shl14 = shl i32 %regno, 16
  %shl16 = shl i32 %thread, 6
  %or = or i32 %shl13, %wave
  %or15 = or i32 %or, %shl16
  %or17 = or i32 %or15, %shl14
  %or19 = or i32 %or17, 12288
  tail call void %9(ptr noundef %adev, i32 noundef %add, i32 noundef %or19, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true4.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %shl21 = shl i32 %simd, 4
  %shl23 = shl i32 %regno, 16
  %shl25 = shl i32 %thread, 6
  %or22 = or i32 %shl21, %wave
  %or24 = or i32 %or22, %shl25
  %or26 = or i32 %or24, %shl23
  %or28 = or i32 %or26, 12288
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add, i32 noundef %or28, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num)
  %tobool29.not85 = icmp eq i32 %num, 0
  br i1 %tobool29.not85, label %cond.end.while.end_crit_edge, label %while.body.lr.ph

cond.end.while.end_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.body.lr.ph:                                 ; preds = %cond.end
  %funcs37 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  br label %while.body

while.body:                                       ; preds = %cond.end61.while.body_crit_edge, %while.body.lr.ph
  %dec87.in = phi i32 [ %num, %while.body.lr.ph ], [ %dec87, %cond.end61.while.body_crit_edge ]
  %out.addr.086 = phi ptr [ %out, %while.body.lr.ph ], [ %incdec.ptr, %cond.end61.while.body_crit_edge ]
  %dec87 = add i32 %dec87.in, -1
  %10 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %virt, align 8
  %and32 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %while.body.cond.false54_crit_edge, label %land.lhs.true34

while.body.cond.false54_crit_edge:                ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

land.lhs.true34:                                  ; preds = %while.body
  %12 = ptrtoint ptr %funcs37 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %funcs37, align 4
  %tobool38.not = icmp eq ptr %13, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false54_crit_edge, label %land.lhs.true39

land.lhs.true34.cond.false54_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %13, i32 0, i32 13
  %14 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sriov_rreg, align 4
  %tobool43.not = icmp eq ptr %15, null
  br i1 %tobool43.not, label %land.lhs.true39.cond.false54_crit_edge, label %cond.true44

land.lhs.true39.cond.false54_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

cond.true44:                                      ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add53 = add i32 %19, 889
  %call = tail call i32 %15(ptr noundef %adev, i32 noundef %add53, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end61

cond.false54:                                     ; preds = %land.lhs.true39.cond.false54_crit_edge, %land.lhs.true34.cond.false54_crit_edge, %while.body.cond.false54_crit_edge
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %add59 = add i32 %23, 889
  %call60 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add59, i32 noundef 0) #15
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false54, %cond.true44
  %cond = phi i32 [ %call, %cond.true44 ], [ %call60, %cond.false54 ]
  %incdec.ptr = getelementptr i32, ptr %out.addr.086, i32 1
  %24 = ptrtoint ptr %out.addr.086 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %cond, ptr %out.addr.086, align 4
  %tobool29.not = icmp eq i32 %dec87, 0
  br i1 %tobool29.not, label %cond.end61.while.end_crit_edge, label %cond.end61.while.body_crit_edge

cond.end61.while.body_crit_edge:                  ; preds = %cond.end61
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

cond.end61.while.end_crit_edge:                   ; preds = %cond.end61
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.end:                                        ; preds = %cond.end61.while.end_crit_edge, %cond.end.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @soc15_grbm_select(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_ras_late_init(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_ras_fini(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_ras_error_inject(ptr noundef %adev, ptr nocapture noundef readonly %inject_if) #0 align 64 {
entry:
  %block_info = alloca %struct.ta_ras_trigger_error_input, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %block_info) #15
  %0 = getelementptr inbounds i8, ptr %block_info, i32 8
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 0, ptr %0, align 8
  %ras1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 34, i32 1
  %2 = ptrtoint ptr %ras1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ras1.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %amdgpu_ras_is_supported.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

amdgpu_ras_is_supported.exit:                     ; preds = %entry
  %ras_enabled.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 167
  %4 = ptrtoint ptr %ras_enabled.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ras_enabled.i, align 8
  %6 = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %amdgpu_ras_is_supported.exit.cleanup_crit_edge, label %if.end

amdgpu_ras_is_supported.exit.cleanup_crit_edge:   ; preds = %amdgpu_ras_is_supported.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %amdgpu_ras_is_supported.exit
  %sub_block_index = getelementptr inbounds %struct.ras_common_if, ptr %inject_if, i32 0, i32 2
  %7 = ptrtoint ptr %sub_block_index to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sub_block_index, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 111, i32 %8)
  %cmp = icmp ugt i32 %8, 111
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %arrayidx = getelementptr [112 x %struct.ras_gfx_subblock], ptr @ras_gfx_subblocks, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 4
  %tobool5.not = icmp eq ptr %10, null
  br i1 %tobool5.not, label %if.end2.cleanup_crit_edge, label %if.end7

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end7:                                          ; preds = %if.end2
  %hw_supported_error_type = getelementptr [112 x %struct.ras_gfx_subblock], ptr @ras_gfx_subblocks, i32 0, i32 %8, i32 2
  %11 = ptrtoint ptr %hw_supported_error_type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %hw_supported_error_type, align 4
  %type = getelementptr inbounds %struct.ras_common_if, ptr %inject_if, i32 0, i32 1
  %13 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %type, align 4
  %and = and i32 %14, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool12.not = icmp eq i32 %and, 0
  br i1 %tobool12.not, label %if.then13, label %if.end20

if.then13:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.77, ptr noundef nonnull %10, i32 noundef %14) #15
  br label %cleanup

if.end20:                                         ; preds = %if.end7
  %sw_supported_error_type = getelementptr [112 x %struct.ras_gfx_subblock], ptr @ras_gfx_subblocks, i32 0, i32 %8, i32 3
  %15 = ptrtoint ptr %sw_supported_error_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sw_supported_error_type, align 4
  %and26 = and i32 %16, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %if.then28, label %if.end35

if.then28:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.78, ptr noundef nonnull %10, i32 noundef %14) #15
  br label %cleanup

if.end35:                                         ; preds = %if.end20
  %17 = ptrtoint ptr %inject_if to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %inject_if, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %18)
  %19 = icmp ult i32 %18, 15
  br i1 %19, label %if.end35.amdgpu_ras_block_to_ta.exit_crit_edge, label %land.end.i

if.end35.amdgpu_ras_block_to_ta.exit_crit_edge:   ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ras_block_to_ta.exit

land.end.i:                                       ; preds = %if.end35
  %.b50.i = load i1, ptr @amdgpu_ras_block_to_ta.__already_done, align 1
  br i1 %.b50.i, label %land.end.i.amdgpu_ras_block_to_ta.exit_crit_edge, label %if.then.i, !prof !1011

land.end.i.amdgpu_ras_block_to_ta.exit_crit_edge: ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ras_block_to_ta.exit

if.then.i:                                        ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @amdgpu_ras_block_to_ta.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.191, i32 noundef 573, i32 noundef 9, ptr noundef nonnull @.str.192, i32 noundef %18) #15
  br label %amdgpu_ras_block_to_ta.exit

amdgpu_ras_block_to_ta.exit:                      ; preds = %if.then.i, %land.end.i.amdgpu_ras_block_to_ta.exit_crit_edge, %if.end35.amdgpu_ras_block_to_ta.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.then.i ], [ 0, %land.end.i.amdgpu_ras_block_to_ta.exit_crit_edge ], [ %18, %if.end35.amdgpu_ras_block_to_ta.exit_crit_edge ]
  %20 = ptrtoint ptr %block_info to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %retval.0.i, ptr %block_info, align 8
  %21 = ptrtoint ptr %sub_block_index to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sub_block_index, align 8
  %ta_subblock = getelementptr [112 x %struct.ras_gfx_subblock], ptr @ras_gfx_subblocks, i32 0, i32 %22, i32 1
  %23 = ptrtoint ptr %ta_subblock to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ta_subblock, align 4
  %sub_block_index41 = getelementptr inbounds %struct.ta_ras_trigger_error_input, ptr %block_info, i32 0, i32 2
  %25 = ptrtoint ptr %sub_block_index41 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %sub_block_index41, align 8
  %26 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %27)
  %28 = icmp ult i32 %27, 9
  br i1 %28, label %switch.hole_check, label %amdgpu_ras_block_to_ta.exit.land.end.i73_crit_edge

amdgpu_ras_block_to_ta.exit.land.end.i73_crit_edge: ; preds = %amdgpu_ras_block_to_ta.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i73

land.end.i73:                                     ; preds = %switch.hole_check.land.end.i73_crit_edge, %amdgpu_ras_block_to_ta.exit.land.end.i73_crit_edge
  %.b40.i = load i1, ptr @amdgpu_ras_error_to_ta.__already_done, align 1
  br i1 %.b40.i, label %land.end.i73.amdgpu_ras_error_to_ta.exit_crit_edge, label %if.then.i74, !prof !1011

land.end.i73.amdgpu_ras_error_to_ta.exit_crit_edge: ; preds = %land.end.i73
  call void @__sanitizer_cov_trace_pc() #17
  br label %amdgpu_ras_error_to_ta.exit

if.then.i74:                                      ; preds = %land.end.i73
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @amdgpu_ras_error_to_ta.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.191, i32 noundef 592, i32 noundef 9, ptr noundef nonnull @.str.193, i32 noundef %27) #15
  br label %amdgpu_ras_error_to_ta.exit

switch.hole_check:                                ; preds = %amdgpu_ras_block_to_ta.exit
  %switch.maskindex = trunc i32 %27 to i16
  %switch.shifted = lshr i16 279, %switch.maskindex
  %29 = and i16 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %switch.lobit.not = icmp eq i16 %29, 0
  br i1 %switch.lobit.not, label %switch.hole_check.land.end.i73_crit_edge, label %switch.lookup

switch.hole_check.land.end.i73_crit_edge:         ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i73

switch.lookup:                                    ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #17
  %switch.gep = getelementptr inbounds [9 x i32], ptr @switch.table.gfx_v9_0_ras_error_inject, i32 0, i32 %27
  %30 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %30)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %amdgpu_ras_error_to_ta.exit

amdgpu_ras_error_to_ta.exit:                      ; preds = %switch.lookup, %if.then.i74, %land.end.i73.amdgpu_ras_error_to_ta.exit_crit_edge
  %retval.0.i75 = phi i32 [ 0, %if.then.i74 ], [ 0, %land.end.i73.amdgpu_ras_error_to_ta.exit_crit_edge ], [ %switch.load, %switch.lookup ]
  %inject_error_type = getelementptr inbounds %struct.ta_ras_trigger_error_input, ptr %block_info, i32 0, i32 1
  %31 = ptrtoint ptr %inject_error_type to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %retval.0.i75, ptr %inject_error_type, align 4
  %address = getelementptr inbounds %struct.ras_inject_if, ptr %inject_if, i32 0, i32 1
  %32 = ptrtoint ptr %address to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %address, align 8
  %address45 = getelementptr inbounds %struct.ta_ras_trigger_error_input, ptr %block_info, i32 0, i32 3
  %34 = ptrtoint ptr %address45 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %33, ptr %address45, align 8
  %value = getelementptr inbounds %struct.ras_inject_if, ptr %inject_if, i32 0, i32 2
  %35 = ptrtoint ptr %value to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %value, align 8
  %value46 = getelementptr inbounds %struct.ta_ras_trigger_error_input, ptr %block_info, i32 0, i32 4
  %37 = ptrtoint ptr %value46 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %36, ptr %value46, align 8
  %grbm_idx_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex, i32 noundef 0) #15
  %psp = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113
  %call47 = call i32 @psp_ras_trigger_error(ptr noundef %psp, ptr noundef nonnull %block_info) #15
  call void @mutex_unlock(ptr noundef %grbm_idx_mutex) #15
  br label %cleanup

cleanup:                                          ; preds = %amdgpu_ras_error_to_ta.exit, %if.then28, %if.then13, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %amdgpu_ras_is_supported.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call47, %amdgpu_ras_error_to_ta.exit ], [ -1, %if.then28 ], [ -1, %if.then13 ], [ -22, %amdgpu_ras_is_supported.exit.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -1, %if.end2.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %block_info) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gfx_v9_0_query_ras_error_count(ptr noundef %adev, ptr nocapture noundef %ras_error_status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %ras1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 34, i32 1
  %0 = ptrtoint ptr %ras1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ras1.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %amdgpu_ras_is_supported.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

amdgpu_ras_is_supported.exit:                     ; preds = %entry
  %ras_enabled.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 167
  %2 = ptrtoint ptr %ras_enabled.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ras_enabled.i, align 8
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %amdgpu_ras_is_supported.exit.cleanup_crit_edge, label %if.end

amdgpu_ras_is_supported.exit.cleanup_crit_edge:   ; preds = %amdgpu_ras_is_supported.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %amdgpu_ras_is_supported.exit
  %5 = ptrtoint ptr %ras_error_status to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %ras_error_status, align 4
  %ce_count = getelementptr inbounds %struct.ras_err_data, ptr %ras_error_status, i32 0, i32 1
  %6 = ptrtoint ptr %ce_count to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %ce_count, align 4
  %grbm_idx_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex, i32 noundef 0) #15
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.cond4.preheader.lr.ph

for.cond4.preheader.lr.ph:                        ; preds = %for.inc25.for.cond4.preheader.lr.ph_crit_edge, %if.end
  %i.0127 = phi i32 [ 0, %if.end ], [ %inc26, %for.inc25.for.cond4.preheader.lr.ph_crit_edge ]
  %ded_count.0126 = phi i32 [ 0, %if.end ], [ %ded_count.5, %for.inc25.for.cond4.preheader.lr.ph_crit_edge ]
  %sec_count.0125 = phi i32 [ 0, %if.end ], [ %sec_count.6, %for.inc25.for.cond4.preheader.lr.ph_crit_edge ]
  %arrayidx = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0127
  %se_num = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0127, i32 5
  %7 = ptrtoint ptr %se_num to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %se_num, align 4
  %instance = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0127, i32 6
  %9 = ptrtoint ptr %instance to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %instance, align 4
  %inst = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0127, i32 1
  %seg = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0127, i32 2
  %reg_offset15 = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0127, i32 3
  %umax = call i32 @llvm.umax.i32(i32 %10, i32 1)
  %umax129 = call i32 @llvm.umax.i32(i32 %8, i32 1)
  br label %for.body7.lr.ph

for.body7.lr.ph:                                  ; preds = %for.inc22.for.body7.lr.ph_crit_edge, %for.cond4.preheader.lr.ph
  %j.0121 = phi i32 [ 0, %for.cond4.preheader.lr.ph ], [ %inc23, %for.inc22.for.body7.lr.ph_crit_edge ]
  %ded_count.1120 = phi i32 [ %ded_count.0126, %for.cond4.preheader.lr.ph ], [ %ded_count.5, %for.inc22.for.body7.lr.ph_crit_edge ]
  %sec_count.1119 = phi i32 [ %sec_count.0125, %for.cond4.preheader.lr.ph ], [ %sec_count.6, %for.inc22.for.body7.lr.ph_crit_edge ]
  %shl7.i = shl i32 %j.0121, 16
  %and8.i = and i32 %shl7.i, 16711680
  br label %for.body7

for.body7:                                        ; preds = %for.inc.for.body7_crit_edge, %for.body7.lr.ph
  %k.0115 = phi i32 [ 0, %for.body7.lr.ph ], [ %inc, %for.inc.for.body7_crit_edge ]
  %ded_count.2114 = phi i32 [ %ded_count.1120, %for.body7.lr.ph ], [ %ded_count.5, %for.inc.for.body7_crit_edge ]
  %sec_count.2113 = phi i32 [ %sec_count.1119, %for.body7.lr.ph ], [ %sec_count.6, %for.inc.for.body7_crit_edge ]
  %and.i67 = and i32 %k.0115, 255
  %data.1.i = or i32 %and.i67, %and8.i
  %11 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %virt.i, align 8
  %and21.i = and i32 %12, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool.not.i68 = icmp eq i32 %and21.i, 0
  br i1 %tobool.not.i68, label %for.body7.cond.false.i_crit_edge, label %land.lhs.true.i

for.body7.cond.false.i_crit_edge:                 ; preds = %for.body7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %for.body7
  %13 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %funcs.i, align 4
  %tobool22.not.i = icmp eq ptr %14, null
  br i1 %tobool22.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true23.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true23.i:                                ; preds = %land.lhs.true.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %14, i32 0, i32 12
  %15 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool27.not.i = icmp eq ptr %16, null
  br i1 %tobool27.not.i, label %land.lhs.true23.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true23.i.cond.false.i_crit_edge:         ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #17
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx33.i = getelementptr i32, ptr %18, i32 1
  %19 = ptrtoint ptr %arrayidx33.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx33.i, align 4
  %add.i = add i32 %20, 8704
  tail call void %16(ptr noundef %adev, i32 noundef %add.i, i32 noundef %data.1.i, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit

cond.false.i:                                     ; preds = %land.lhs.true23.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %for.body7.cond.false.i_crit_edge
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx37.i = getelementptr i32, ptr %22, i32 1
  %23 = ptrtoint ptr %arrayidx37.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx37.i, align 4
  %add38.i = add i32 %24, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i, i32 noundef %data.1.i, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit

gfx_v9_0_select_se_sh.exit:                       ; preds = %cond.false.i, %cond.true.i
  %25 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx, align 4
  %27 = ptrtoint ptr %inst to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %inst, align 4
  %arrayidx11 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 %26, i32 %28
  %29 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx11, align 4
  %31 = ptrtoint ptr %seg to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %seg, align 4
  %arrayidx13 = getelementptr i32, ptr %30, i32 %32
  %33 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx13, align 4
  %35 = ptrtoint ptr %reg_offset15 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %reg_offset15, align 4
  %add = add i32 %36, %34
  %call16 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %gfx_v9_0_select_se_sh.exit.for.inc_crit_edge, label %if.then18

gfx_v9_0_select_se_sh.exit.for.inc_crit_edge:     ; preds = %gfx_v9_0_select_se_sh.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.then18:                                        ; preds = %gfx_v9_0_select_se_sh.exit
  %37 = ptrtoint ptr %reg_offset15 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %reg_offset15, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then18
  %sec_count.3 = phi i32 [ %sec_count.2113, %if.then18 ], [ %sec_count.5, %for.inc.i.for.body.i_crit_edge ]
  %ded_count.3 = phi i32 [ %ded_count.2114, %if.then18 ], [ %ded_count.4, %for.inc.i.for.body.i_crit_edge ]
  %i.01.i = phi i32 [ 0, %if.then18 ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i69 = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i
  %reg_offset.i = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i, i32 4
  %39 = ptrtoint ptr %reg_offset.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %reg_offset.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %38)
  %cmp2.not.i = icmp eq i32 %40, %38
  br i1 %cmp2.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %seg.i = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i, i32 3
  %41 = ptrtoint ptr %seg.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %seg.i, align 4
  %43 = ptrtoint ptr %seg to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %seg, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %44)
  %cmp5.not.i = icmp eq i32 %42, %44
  br i1 %cmp5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false.i
  %inst.i = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i, i32 2
  %45 = ptrtoint ptr %inst.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %inst.i, align 4
  %47 = ptrtoint ptr %inst to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %inst, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %46, i32 %48)
  %cmp9.not.i = icmp eq i32 %46, %48
  br i1 %cmp9.not.i, label %if.end.i, label %lor.lhs.false6.i.for.inc.i_crit_edge

lor.lhs.false6.i.for.inc.i_crit_edge:             ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.end.i:                                         ; preds = %lor.lhs.false6.i
  %sec_count_mask.i = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i, i32 5
  %49 = ptrtoint ptr %sec_count_mask.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sec_count_mask.i, align 4
  %and.i70 = and i32 %50, %call16
  %sec_count_shift.i = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i, i32 6
  %51 = ptrtoint ptr %sec_count_shift.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %sec_count_shift.i, align 4
  %shr.i = lshr i32 %and.i70, %52
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr.i)
  %tobool.not.i71 = icmp eq i32 %shr.i, 0
  br i1 %tobool.not.i71, label %if.end.i.if.end14.i_crit_edge, label %do.end.i

if.end.i.if.end14.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14.i

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %53 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %adev, align 8
  %55 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx.i69, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %54, ptr noundef nonnull @.str.194, ptr noundef %56, i32 noundef %j.0121, i32 noundef %k.0115, i32 noundef %shr.i) #18
  %add.i72 = add i32 %shr.i, %sec_count.3
  br label %if.end14.i

if.end14.i:                                       ; preds = %do.end.i, %if.end.i.if.end14.i_crit_edge
  %sec_count.4 = phi i32 [ %sec_count.3, %if.end.i.if.end14.i_crit_edge ], [ %add.i72, %do.end.i ]
  %ded_count_mask.i = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i, i32 7
  %57 = ptrtoint ptr %ded_count_mask.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %ded_count_mask.i, align 4
  %and16.i = and i32 %58, %call16
  %ded_count_shift.i = getelementptr [108 x %struct.soc15_ras_field_entry], ptr @gfx_v9_0_ras_fields, i32 0, i32 %i.01.i, i32 8
  %59 = ptrtoint ptr %ded_count_shift.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %ded_count_shift.i, align 4
  %shr18.i = lshr i32 %and16.i, %60
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr18.i)
  %tobool19.not.i = icmp eq i32 %shr18.i, 0
  br i1 %tobool19.not.i, label %if.end14.i.for.inc.i_crit_edge, label %do.end23.i

if.end14.i.for.inc.i_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

do.end23.i:                                       ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #17
  %61 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %adev, align 8
  %63 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx.i69, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %62, ptr noundef nonnull @.str.198, ptr noundef %64, i32 noundef %j.0121, i32 noundef %k.0115, i32 noundef %shr18.i) #18
  %add27.i = add i32 %shr18.i, %ded_count.3
  br label %for.inc.i

for.inc.i:                                        ; preds = %do.end23.i, %if.end14.i.for.inc.i_crit_edge, %lor.lhs.false6.i.for.inc.i_crit_edge, %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %sec_count.5 = phi i32 [ %sec_count.4, %if.end14.i.for.inc.i_crit_edge ], [ %sec_count.4, %do.end23.i ], [ %sec_count.3, %lor.lhs.false6.i.for.inc.i_crit_edge ], [ %sec_count.3, %lor.lhs.false.i.for.inc.i_crit_edge ], [ %sec_count.3, %for.body.i.for.inc.i_crit_edge ]
  %ded_count.4 = phi i32 [ %ded_count.3, %if.end14.i.for.inc.i_crit_edge ], [ %add27.i, %do.end23.i ], [ %ded_count.3, %lor.lhs.false6.i.for.inc.i_crit_edge ], [ %ded_count.3, %lor.lhs.false.i.for.inc.i_crit_edge ], [ %ded_count.3, %for.body.i.for.inc.i_crit_edge ]
  %inc.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 108
  br i1 %exitcond.not.i, label %for.inc.i.for.inc_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.inc.i.for.inc_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

for.inc:                                          ; preds = %for.inc.i.for.inc_crit_edge, %gfx_v9_0_select_se_sh.exit.for.inc_crit_edge
  %sec_count.6 = phi i32 [ %sec_count.2113, %gfx_v9_0_select_se_sh.exit.for.inc_crit_edge ], [ %sec_count.5, %for.inc.i.for.inc_crit_edge ]
  %ded_count.5 = phi i32 [ %ded_count.2114, %gfx_v9_0_select_se_sh.exit.for.inc_crit_edge ], [ %ded_count.4, %for.inc.i.for.inc_crit_edge ]
  %inc = add nuw i32 %k.0115, 1
  %exitcond.not = icmp eq i32 %inc, %umax
  br i1 %exitcond.not, label %for.inc22, label %for.inc.for.body7_crit_edge

for.inc.for.body7_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body7

for.inc22:                                        ; preds = %for.inc
  %inc23 = add nuw i32 %j.0121, 1
  %exitcond130.not = icmp eq i32 %inc23, %umax129
  br i1 %exitcond130.not, label %for.inc25, label %for.inc22.for.body7.lr.ph_crit_edge

for.inc22.for.body7.lr.ph_crit_edge:              ; preds = %for.inc22
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body7.lr.ph

for.inc25:                                        ; preds = %for.inc22
  %inc26 = add nuw nsw i32 %i.0127, 1
  %exitcond131.not = icmp eq i32 %inc26, 33
  br i1 %exitcond131.not, label %for.end27, label %for.inc25.for.cond4.preheader.lr.ph_crit_edge

for.inc25.for.cond4.preheader.lr.ph_crit_edge:    ; preds = %for.inc25
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond4.preheader.lr.ph

for.end27:                                        ; preds = %for.inc25
  %65 = ptrtoint ptr %ce_count to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %ce_count, align 4
  %add29 = add i32 %66, %sec_count.6
  store i32 %add29, ptr %ce_count, align 4
  %67 = ptrtoint ptr %ras_error_status to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %ras_error_status, align 4
  %add31 = add i32 %68, %ded_count.5
  store i32 %add31, ptr %ras_error_status, align 4
  %69 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %virt.i, align 8
  %and21.i74 = and i32 %70, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i74)
  %tobool.not.i75 = icmp eq i32 %and21.i74, 0
  br i1 %tobool.not.i75, label %for.end27.cond.false.i89_crit_edge, label %land.lhs.true.i78

for.end27.cond.false.i89_crit_edge:               ; preds = %for.end27
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i89

land.lhs.true.i78:                                ; preds = %for.end27
  %71 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %funcs.i, align 4
  %tobool22.not.i77 = icmp eq ptr %72, null
  br i1 %tobool22.not.i77, label %land.lhs.true.i78.cond.false.i89_crit_edge, label %land.lhs.true23.i81

land.lhs.true.i78.cond.false.i89_crit_edge:       ; preds = %land.lhs.true.i78
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i89

land.lhs.true23.i81:                              ; preds = %land.lhs.true.i78
  %sriov_wreg.i79 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %72, i32 0, i32 12
  %73 = ptrtoint ptr %sriov_wreg.i79 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %sriov_wreg.i79, align 4
  %tobool27.not.i80 = icmp eq ptr %74, null
  br i1 %tobool27.not.i80, label %land.lhs.true23.i81.cond.false.i89_crit_edge, label %cond.true.i85

land.lhs.true23.i81.cond.false.i89_crit_edge:     ; preds = %land.lhs.true23.i81
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i89

cond.true.i85:                                    ; preds = %land.lhs.true23.i81
  call void @__sanitizer_cov_trace_pc() #17
  %75 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx33.i83 = getelementptr i32, ptr %76, i32 1
  %77 = ptrtoint ptr %arrayidx33.i83 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx33.i83, align 4
  %add.i84 = add i32 %78, 8704
  tail call void %74(ptr noundef %adev, i32 noundef %add.i84, i32 noundef -536870912, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit90

cond.false.i89:                                   ; preds = %land.lhs.true23.i81.cond.false.i89_crit_edge, %land.lhs.true.i78.cond.false.i89_crit_edge, %for.end27.cond.false.i89_crit_edge
  %79 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx37.i87 = getelementptr i32, ptr %80, i32 1
  %81 = ptrtoint ptr %arrayidx37.i87 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx37.i87, align 4
  %add38.i88 = add i32 %82, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i88, i32 noundef -536870912, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit90

gfx_v9_0_select_se_sh.exit90:                     ; preds = %cond.false.i89, %cond.true.i85
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex) #15
  %83 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %virt.i, align 8
  %and.i92 = and i32 %84, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i92)
  %tobool.not.i93 = icmp eq i32 %and.i92, 0
  br i1 %tobool.not.i93, label %gfx_v9_0_select_se_sh.exit90.cond.false.i100_crit_edge, label %land.lhs.true.i95

gfx_v9_0_select_se_sh.exit90.cond.false.i100_crit_edge: ; preds = %gfx_v9_0_select_se_sh.exit90
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i100

land.lhs.true.i95:                                ; preds = %gfx_v9_0_select_se_sh.exit90
  %85 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %funcs.i, align 4
  %tobool1.not.i = icmp eq ptr %86, null
  br i1 %tobool1.not.i, label %land.lhs.true.i95.cond.false.i100_crit_edge, label %land.lhs.true2.i

land.lhs.true.i95.cond.false.i100_crit_edge:      ; preds = %land.lhs.true.i95
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i100

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i95
  %sriov_wreg.i96 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %86, i32 0, i32 12
  %87 = ptrtoint ptr %sriov_wreg.i96 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %sriov_wreg.i96, align 4
  %tobool6.not.i = icmp eq ptr %88, null
  br i1 %tobool6.not.i, label %land.lhs.true2.i.cond.false.i100_crit_edge, label %cond.true.i99

land.lhs.true2.i.cond.false.i100_crit_edge:       ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i100

cond.true.i99:                                    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  %89 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx.i, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add.i98 = add i32 %92, 2144
  tail call void %88(ptr noundef %adev, i32 noundef %add.i98, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end.i

cond.false.i100:                                  ; preds = %land.lhs.true2.i.cond.false.i100_crit_edge, %land.lhs.true.i95.cond.false.i100_crit_edge, %gfx_v9_0_select_se_sh.exit90.cond.false.i100_crit_edge
  %93 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %arrayidx.i, align 8
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %94, align 4
  %add17.i = add i32 %96, 2144
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add17.i, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i100, %cond.true.i99
  %97 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %virt.i, align 8
  %and20.i = and i32 %98, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br i1 %tobool21.not.i, label %cond.end.i.cond.false43.i_crit_edge, label %land.lhs.true22.i

cond.end.i.cond.false43.i_crit_edge:              ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i

land.lhs.true22.i:                                ; preds = %cond.end.i
  %99 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %funcs.i, align 4
  %tobool26.not.i = icmp eq ptr %100, null
  br i1 %tobool26.not.i, label %land.lhs.true22.i.cond.false43.i_crit_edge, label %land.lhs.true27.i

land.lhs.true22.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true22.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i

land.lhs.true27.i:                                ; preds = %land.lhs.true22.i
  %sriov_wreg31.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %100, i32 0, i32 12
  %101 = ptrtoint ptr %sriov_wreg31.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %sriov_wreg31.i, align 4
  %tobool32.not.i = icmp eq ptr %102, null
  br i1 %tobool32.not.i, label %land.lhs.true27.i.cond.false43.i_crit_edge, label %cond.true33.i

land.lhs.true27.i.cond.false43.i_crit_edge:       ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false43.i

cond.true33.i:                                    ; preds = %land.lhs.true27.i
  call void @__sanitizer_cov_trace_pc() #17
  %103 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %arrayidx.i, align 8
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %104, align 4
  %add42.i = add i32 %106, 2146
  tail call void %102(ptr noundef %adev, i32 noundef %add42.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end49.i

cond.false43.i:                                   ; preds = %land.lhs.true27.i.cond.false43.i_crit_edge, %land.lhs.true22.i.cond.false43.i_crit_edge, %cond.end.i.cond.false43.i_crit_edge
  %107 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %arrayidx.i, align 8
  %109 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %108, align 4
  %add48.i = add i32 %110, 2146
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add48.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end49.i

cond.end49.i:                                     ; preds = %cond.false43.i, %cond.true33.i
  %111 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %virt.i, align 8
  %and52.i = and i32 %112, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52.i)
  %tobool53.not.i = icmp eq i32 %and52.i, 0
  br i1 %tobool53.not.i, label %cond.end49.i.cond.false75.i_crit_edge, label %land.lhs.true54.i

cond.end49.i.cond.false75.i_crit_edge:            ; preds = %cond.end49.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i

land.lhs.true54.i:                                ; preds = %cond.end49.i
  %113 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %funcs.i, align 4
  %tobool58.not.i = icmp eq ptr %114, null
  br i1 %tobool58.not.i, label %land.lhs.true54.i.cond.false75.i_crit_edge, label %land.lhs.true59.i

land.lhs.true54.i.cond.false75.i_crit_edge:       ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i

land.lhs.true59.i:                                ; preds = %land.lhs.true54.i
  %sriov_wreg63.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %114, i32 0, i32 12
  %115 = ptrtoint ptr %sriov_wreg63.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %sriov_wreg63.i, align 4
  %tobool64.not.i = icmp eq ptr %116, null
  br i1 %tobool64.not.i, label %land.lhs.true59.i.cond.false75.i_crit_edge, label %cond.true65.i

land.lhs.true59.i.cond.false75.i_crit_edge:       ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false75.i

cond.true65.i:                                    ; preds = %land.lhs.true59.i
  call void @__sanitizer_cov_trace_pc() #17
  %117 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %arrayidx.i, align 8
  %119 = ptrtoint ptr %118 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %118, align 4
  %add74.i = add i32 %120, 2145
  tail call void %116(ptr noundef %adev, i32 noundef %add74.i, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end81.i

cond.false75.i:                                   ; preds = %land.lhs.true59.i.cond.false75.i_crit_edge, %land.lhs.true54.i.cond.false75.i_crit_edge, %cond.end49.i.cond.false75.i_crit_edge
  %121 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %arrayidx.i, align 8
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %122, align 4
  %add80.i = add i32 %124, 2145
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add80.i, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end81.i

cond.end81.i:                                     ; preds = %cond.false75.i, %cond.true65.i
  %125 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %virt.i, align 8
  %and84.i = and i32 %126, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84.i)
  %tobool85.not.i = icmp eq i32 %and84.i, 0
  br i1 %tobool85.not.i, label %cond.end81.i.cond.false107.i_crit_edge, label %land.lhs.true86.i

cond.end81.i.cond.false107.i_crit_edge:           ; preds = %cond.end81.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i

land.lhs.true86.i:                                ; preds = %cond.end81.i
  %127 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %funcs.i, align 4
  %tobool90.not.i = icmp eq ptr %128, null
  br i1 %tobool90.not.i, label %land.lhs.true86.i.cond.false107.i_crit_edge, label %land.lhs.true91.i

land.lhs.true86.i.cond.false107.i_crit_edge:      ; preds = %land.lhs.true86.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i

land.lhs.true91.i:                                ; preds = %land.lhs.true86.i
  %sriov_wreg95.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %128, i32 0, i32 12
  %129 = ptrtoint ptr %sriov_wreg95.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %sriov_wreg95.i, align 4
  %tobool96.not.i = icmp eq ptr %130, null
  br i1 %tobool96.not.i, label %land.lhs.true91.i.cond.false107.i_crit_edge, label %cond.true97.i

land.lhs.true91.i.cond.false107.i_crit_edge:      ; preds = %land.lhs.true91.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false107.i

cond.true97.i:                                    ; preds = %land.lhs.true91.i
  call void @__sanitizer_cov_trace_pc() #17
  %131 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %arrayidx.i, align 8
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %132, align 4
  %add106.i = add i32 %134, 2147
  tail call void %130(ptr noundef %adev, i32 noundef %add106.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end113.i

cond.false107.i:                                  ; preds = %land.lhs.true91.i.cond.false107.i_crit_edge, %land.lhs.true86.i.cond.false107.i_crit_edge, %cond.end81.i.cond.false107.i_crit_edge
  %135 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %arrayidx.i, align 8
  %137 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %136, align 4
  %add112.i = add i32 %138, 2147
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add112.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end113.i

cond.end113.i:                                    ; preds = %cond.false107.i, %cond.true97.i
  %139 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %virt.i, align 8
  %and116.i = and i32 %140, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116.i)
  %tobool117.not.i = icmp eq i32 %and116.i, 0
  br i1 %tobool117.not.i, label %cond.end113.i.cond.false139.i_crit_edge, label %land.lhs.true118.i

cond.end113.i.cond.false139.i_crit_edge:          ; preds = %cond.end113.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i

land.lhs.true118.i:                               ; preds = %cond.end113.i
  %141 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %funcs.i, align 4
  %tobool122.not.i = icmp eq ptr %142, null
  br i1 %tobool122.not.i, label %land.lhs.true118.i.cond.false139.i_crit_edge, label %land.lhs.true123.i

land.lhs.true118.i.cond.false139.i_crit_edge:     ; preds = %land.lhs.true118.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i

land.lhs.true123.i:                               ; preds = %land.lhs.true118.i
  %sriov_wreg127.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %142, i32 0, i32 12
  %143 = ptrtoint ptr %sriov_wreg127.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %sriov_wreg127.i, align 4
  %tobool128.not.i = icmp eq ptr %144, null
  br i1 %tobool128.not.i, label %land.lhs.true123.i.cond.false139.i_crit_edge, label %cond.true129.i

land.lhs.true123.i.cond.false139.i_crit_edge:     ; preds = %land.lhs.true123.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false139.i

cond.true129.i:                                   ; preds = %land.lhs.true123.i
  call void @__sanitizer_cov_trace_pc() #17
  %145 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %arrayidx.i, align 8
  %147 = ptrtoint ptr %146 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %146, align 4
  %add138.i = add i32 %148, 2063
  tail call void %144(ptr noundef %adev, i32 noundef %add138.i, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end145.i

cond.false139.i:                                  ; preds = %land.lhs.true123.i.cond.false139.i_crit_edge, %land.lhs.true118.i.cond.false139.i_crit_edge, %cond.end113.i.cond.false139.i_crit_edge
  %149 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %arrayidx.i, align 8
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %150, align 4
  %add144.i = add i32 %152, 2063
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add144.i, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end145.i

cond.end145.i:                                    ; preds = %cond.false139.i, %cond.true129.i
  %153 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %virt.i, align 8
  %and148.i = and i32 %154, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148.i)
  %tobool149.not.i = icmp eq i32 %and148.i, 0
  br i1 %tobool149.not.i, label %cond.end145.i.cond.false171.i_crit_edge, label %land.lhs.true150.i

cond.end145.i.cond.false171.i_crit_edge:          ; preds = %cond.end145.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i

land.lhs.true150.i:                               ; preds = %cond.end145.i
  %155 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %funcs.i, align 4
  %tobool154.not.i = icmp eq ptr %156, null
  br i1 %tobool154.not.i, label %land.lhs.true150.i.cond.false171.i_crit_edge, label %land.lhs.true155.i

land.lhs.true150.i.cond.false171.i_crit_edge:     ; preds = %land.lhs.true150.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i

land.lhs.true155.i:                               ; preds = %land.lhs.true150.i
  %sriov_wreg159.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %156, i32 0, i32 12
  %157 = ptrtoint ptr %sriov_wreg159.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %sriov_wreg159.i, align 4
  %tobool160.not.i = icmp eq ptr %158, null
  br i1 %tobool160.not.i, label %land.lhs.true155.i.cond.false171.i_crit_edge, label %cond.true161.i

land.lhs.true155.i.cond.false171.i_crit_edge:     ; preds = %land.lhs.true155.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false171.i

cond.true161.i:                                   ; preds = %land.lhs.true155.i
  call void @__sanitizer_cov_trace_pc() #17
  %159 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %arrayidx.i, align 8
  %161 = ptrtoint ptr %160 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %160, align 4
  %add170.i = add i32 %162, 2065
  tail call void %158(ptr noundef %adev, i32 noundef %add170.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end177.i

cond.false171.i:                                  ; preds = %land.lhs.true155.i.cond.false171.i_crit_edge, %land.lhs.true150.i.cond.false171.i_crit_edge, %cond.end145.i.cond.false171.i_crit_edge
  %163 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %arrayidx.i, align 8
  %165 = ptrtoint ptr %164 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %164, align 4
  %add176.i = add i32 %166, 2065
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add176.i, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end177.i

cond.end177.i:                                    ; preds = %cond.false171.i, %cond.true161.i
  %167 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %virt.i, align 8
  %and180.i = and i32 %168, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and180.i)
  %tobool181.not.i = icmp eq i32 %and180.i, 0
  br i1 %tobool181.not.i, label %cond.end177.i.cond.false203.i_crit_edge, label %land.lhs.true182.i

cond.end177.i.cond.false203.i_crit_edge:          ; preds = %cond.end177.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i

land.lhs.true182.i:                               ; preds = %cond.end177.i
  %169 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %funcs.i, align 4
  %tobool186.not.i = icmp eq ptr %170, null
  br i1 %tobool186.not.i, label %land.lhs.true182.i.cond.false203.i_crit_edge, label %land.lhs.true187.i

land.lhs.true182.i.cond.false203.i_crit_edge:     ; preds = %land.lhs.true182.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i

land.lhs.true187.i:                               ; preds = %land.lhs.true182.i
  %sriov_wreg191.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %170, i32 0, i32 12
  %171 = ptrtoint ptr %sriov_wreg191.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %sriov_wreg191.i, align 4
  %tobool192.not.i = icmp eq ptr %172, null
  br i1 %tobool192.not.i, label %land.lhs.true187.i.cond.false203.i_crit_edge, label %cond.true193.i

land.lhs.true187.i.cond.false203.i_crit_edge:     ; preds = %land.lhs.true187.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false203.i

cond.true193.i:                                   ; preds = %land.lhs.true187.i
  call void @__sanitizer_cov_trace_pc() #17
  %173 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %arrayidx.i, align 8
  %175 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %174, align 4
  %add202.i = add i32 %176, 2062
  tail call void %172(ptr noundef %adev, i32 noundef %add202.i, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end209.i

cond.false203.i:                                  ; preds = %land.lhs.true187.i.cond.false203.i_crit_edge, %land.lhs.true182.i.cond.false203.i_crit_edge, %cond.end177.i.cond.false203.i_crit_edge
  %177 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %arrayidx.i, align 8
  %179 = ptrtoint ptr %178 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %178, align 4
  %add208.i = add i32 %180, 2062
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add208.i, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end209.i

cond.end209.i:                                    ; preds = %cond.false203.i, %cond.true193.i
  %181 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %virt.i, align 8
  %and212.i = and i32 %182, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and212.i)
  %tobool213.not.i = icmp eq i32 %and212.i, 0
  br i1 %tobool213.not.i, label %cond.end209.i.cond.false235.i_crit_edge, label %land.lhs.true214.i

cond.end209.i.cond.false235.i_crit_edge:          ; preds = %cond.end209.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false235.i

land.lhs.true214.i:                               ; preds = %cond.end209.i
  %183 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %funcs.i, align 4
  %tobool218.not.i = icmp eq ptr %184, null
  br i1 %tobool218.not.i, label %land.lhs.true214.i.cond.false235.i_crit_edge, label %land.lhs.true219.i

land.lhs.true214.i.cond.false235.i_crit_edge:     ; preds = %land.lhs.true214.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false235.i

land.lhs.true219.i:                               ; preds = %land.lhs.true214.i
  %sriov_wreg223.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %184, i32 0, i32 12
  %185 = ptrtoint ptr %sriov_wreg223.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %sriov_wreg223.i, align 4
  %tobool224.not.i = icmp eq ptr %186, null
  br i1 %tobool224.not.i, label %land.lhs.true219.i.cond.false235.i_crit_edge, label %cond.true225.i

land.lhs.true219.i.cond.false235.i_crit_edge:     ; preds = %land.lhs.true219.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false235.i

cond.true225.i:                                   ; preds = %land.lhs.true219.i
  call void @__sanitizer_cov_trace_pc() #17
  %187 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %arrayidx.i, align 8
  %189 = ptrtoint ptr %188 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %188, align 4
  %add234.i = add i32 %190, 2064
  tail call void %186(ptr noundef %adev, i32 noundef %add234.i, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %for.body.i102.preheader

cond.false235.i:                                  ; preds = %land.lhs.true219.i.cond.false235.i_crit_edge, %land.lhs.true214.i.cond.false235.i_crit_edge, %cond.end209.i.cond.false235.i_crit_edge
  %191 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %arrayidx.i, align 8
  %193 = ptrtoint ptr %192 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %192, align 4
  %add240.i = add i32 %194, 2064
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add240.i, i32 noundef 0, i32 noundef 0) #15
  br label %for.body.i102.preheader

for.body.i102.preheader:                          ; preds = %cond.false235.i, %cond.true225.i
  br label %for.body.i102

for.body.i102:                                    ; preds = %for.inc.i108.for.body.i102_crit_edge, %for.body.i102.preheader
  %i.01.i101 = phi i32 [ %inc.i106, %for.inc.i108.for.body.i102_crit_edge ], [ 0, %for.body.i102.preheader ]
  %195 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %virt.i, align 8
  %and244.i = and i32 %196, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and244.i)
  %tobool245.not.i = icmp eq i32 %and244.i, 0
  br i1 %tobool245.not.i, label %for.body.i102.cond.false267.i_crit_edge, label %land.lhs.true246.i

for.body.i102.cond.false267.i_crit_edge:          ; preds = %for.body.i102
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false267.i

land.lhs.true246.i:                               ; preds = %for.body.i102
  %197 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %funcs.i, align 4
  %tobool250.not.i = icmp eq ptr %198, null
  br i1 %tobool250.not.i, label %land.lhs.true246.i.cond.false267.i_crit_edge, label %land.lhs.true251.i

land.lhs.true246.i.cond.false267.i_crit_edge:     ; preds = %land.lhs.true246.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false267.i

land.lhs.true251.i:                               ; preds = %land.lhs.true246.i
  %sriov_wreg255.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %198, i32 0, i32 12
  %199 = ptrtoint ptr %sriov_wreg255.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %sriov_wreg255.i, align 4
  %tobool256.not.i = icmp eq ptr %200, null
  br i1 %tobool256.not.i, label %land.lhs.true251.i.cond.false267.i_crit_edge, label %cond.true257.i

land.lhs.true251.i.cond.false267.i_crit_edge:     ; preds = %land.lhs.true251.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false267.i

cond.true257.i:                                   ; preds = %land.lhs.true251.i
  call void @__sanitizer_cov_trace_pc() #17
  %201 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %arrayidx.i, align 8
  %203 = ptrtoint ptr %202 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %202, align 4
  %add266.i = add i32 %204, 2144
  tail call void %200(ptr noundef %adev, i32 noundef %add266.i, i32 noundef %i.01.i101, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end273.i

cond.false267.i:                                  ; preds = %land.lhs.true251.i.cond.false267.i_crit_edge, %land.lhs.true246.i.cond.false267.i_crit_edge, %for.body.i102.cond.false267.i_crit_edge
  %205 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %arrayidx.i, align 8
  %207 = ptrtoint ptr %206 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %206, align 4
  %add272.i = add i32 %208, 2144
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add272.i, i32 noundef %i.01.i101, i32 noundef 0) #15
  br label %cond.end273.i

cond.end273.i:                                    ; preds = %cond.false267.i, %cond.true257.i
  %209 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %virt.i, align 8
  %and276.i = and i32 %210, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and276.i)
  %tobool277.not.i = icmp eq i32 %and276.i, 0
  br i1 %tobool277.not.i, label %cond.end273.i.cond.false298.i_crit_edge, label %land.lhs.true278.i

cond.end273.i.cond.false298.i_crit_edge:          ; preds = %cond.end273.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false298.i

land.lhs.true278.i:                               ; preds = %cond.end273.i
  %211 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %funcs.i, align 4
  %tobool282.not.i = icmp eq ptr %212, null
  br i1 %tobool282.not.i, label %land.lhs.true278.i.cond.false298.i_crit_edge, label %land.lhs.true283.i

land.lhs.true278.i.cond.false298.i_crit_edge:     ; preds = %land.lhs.true278.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false298.i

land.lhs.true283.i:                               ; preds = %land.lhs.true278.i
  %sriov_rreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %212, i32 0, i32 13
  %213 = ptrtoint ptr %sriov_rreg.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %sriov_rreg.i, align 4
  %tobool287.not.i = icmp eq ptr %214, null
  br i1 %tobool287.not.i, label %land.lhs.true283.i.cond.false298.i_crit_edge, label %cond.true288.i

land.lhs.true283.i.cond.false298.i_crit_edge:     ; preds = %land.lhs.true283.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false298.i

cond.true288.i:                                   ; preds = %land.lhs.true283.i
  call void @__sanitizer_cov_trace_pc() #17
  %215 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %arrayidx.i, align 8
  %217 = ptrtoint ptr %216 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %216, align 4
  %add297.i = add i32 %218, 2146
  %call.i = tail call i32 %214(ptr noundef %adev, i32 noundef %add297.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end305.i

cond.false298.i:                                  ; preds = %land.lhs.true283.i.cond.false298.i_crit_edge, %land.lhs.true278.i.cond.false298.i_crit_edge, %cond.end273.i.cond.false298.i_crit_edge
  %219 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %arrayidx.i, align 8
  %221 = ptrtoint ptr %220 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %220, align 4
  %add303.i = add i32 %222, 2146
  %call304.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add303.i, i32 noundef 0) #15
  br label %cond.end305.i

cond.end305.i:                                    ; preds = %cond.false298.i, %cond.true288.i
  %cond.i = phi i32 [ %call.i, %cond.true288.i ], [ %call304.i, %cond.false298.i ]
  %and306.i = lshr i32 %cond.i, 12
  %shr.i103 = and i32 %and306.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr.i103)
  %tobool307.not.i = icmp eq i32 %shr.i103, 0
  br i1 %tobool307.not.i, label %cond.end305.i.if.end.i105_crit_edge, label %do.end.i104

cond.end305.i.if.end.i105_crit_edge:              ; preds = %cond.end305.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i105

do.end.i104:                                      ; preds = %cond.end305.i
  call void @__sanitizer_cov_trace_pc() #17
  %223 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %adev, align 8
  %arrayidx308.i = getelementptr [16 x ptr], ptr @vml2_mems, i32 0, i32 %i.01.i101
  %225 = ptrtoint ptr %arrayidx308.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %arrayidx308.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %224, ptr noundef nonnull @.str.308, i32 noundef %i.01.i101, ptr noundef %226, i32 noundef %shr.i103) #18
  %227 = ptrtoint ptr %ce_count to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %ce_count, align 4
  %add309.i = add i32 %228, %shr.i103
  store i32 %add309.i, ptr %ce_count, align 4
  br label %if.end.i105

if.end.i105:                                      ; preds = %do.end.i104, %cond.end305.i.if.end.i105_crit_edge
  %and310.i = lshr i32 %cond.i, 14
  %shr311.i = and i32 %and310.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr311.i)
  %tobool312.not.i = icmp eq i32 %shr311.i, 0
  br i1 %tobool312.not.i, label %if.end.i105.for.inc.i108_crit_edge, label %do.end316.i

if.end.i105.for.inc.i108_crit_edge:               ; preds = %if.end.i105
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i108

do.end316.i:                                      ; preds = %if.end.i105
  call void @__sanitizer_cov_trace_pc() #17
  %229 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %adev, align 8
  %arrayidx318.i = getelementptr [16 x ptr], ptr @vml2_mems, i32 0, i32 %i.01.i101
  %231 = ptrtoint ptr %arrayidx318.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %arrayidx318.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %230, ptr noundef nonnull @.str.311, i32 noundef %i.01.i101, ptr noundef %232, i32 noundef %shr311.i) #18
  %233 = ptrtoint ptr %ras_error_status to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %ras_error_status, align 4
  %add319.i = add i32 %234, %shr311.i
  store i32 %add319.i, ptr %ras_error_status, align 4
  br label %for.inc.i108

for.inc.i108:                                     ; preds = %do.end316.i, %if.end.i105.for.inc.i108_crit_edge
  %inc.i106 = add nuw nsw i32 %i.01.i101, 1
  %exitcond.not.i107 = icmp eq i32 %inc.i106, 16
  br i1 %exitcond.not.i107, label %for.inc.i108.for.body323.i_crit_edge, label %for.inc.i108.for.body.i102_crit_edge

for.inc.i108.for.body.i102_crit_edge:             ; preds = %for.inc.i108
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i102

for.inc.i108.for.body323.i_crit_edge:             ; preds = %for.inc.i108
  br label %for.body323.i

for.body323.i:                                    ; preds = %for.inc415.i.for.body323.i_crit_edge, %for.inc.i108.for.body323.i_crit_edge
  %i.16.i = phi i32 [ %inc416.i, %for.inc415.i.for.body323.i_crit_edge ], [ 0, %for.inc.i108.for.body323.i_crit_edge ]
  %235 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %virt.i, align 8
  %and326.i = and i32 %236, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and326.i)
  %tobool327.not.i = icmp eq i32 %and326.i, 0
  br i1 %tobool327.not.i, label %for.body323.i.cond.false349.i_crit_edge, label %land.lhs.true328.i

for.body323.i.cond.false349.i_crit_edge:          ; preds = %for.body323.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false349.i

land.lhs.true328.i:                               ; preds = %for.body323.i
  %237 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %funcs.i, align 4
  %tobool332.not.i = icmp eq ptr %238, null
  br i1 %tobool332.not.i, label %land.lhs.true328.i.cond.false349.i_crit_edge, label %land.lhs.true333.i

land.lhs.true328.i.cond.false349.i_crit_edge:     ; preds = %land.lhs.true328.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false349.i

land.lhs.true333.i:                               ; preds = %land.lhs.true328.i
  %sriov_wreg337.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %238, i32 0, i32 12
  %239 = ptrtoint ptr %sriov_wreg337.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load ptr, ptr %sriov_wreg337.i, align 4
  %tobool338.not.i = icmp eq ptr %240, null
  br i1 %tobool338.not.i, label %land.lhs.true333.i.cond.false349.i_crit_edge, label %cond.true339.i

land.lhs.true333.i.cond.false349.i_crit_edge:     ; preds = %land.lhs.true333.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false349.i

cond.true339.i:                                   ; preds = %land.lhs.true333.i
  call void @__sanitizer_cov_trace_pc() #17
  %241 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %arrayidx.i, align 8
  %243 = ptrtoint ptr %242 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %242, align 4
  %add348.i = add i32 %244, 2145
  tail call void %240(ptr noundef %adev, i32 noundef %add348.i, i32 noundef %i.16.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end355.i

cond.false349.i:                                  ; preds = %land.lhs.true333.i.cond.false349.i_crit_edge, %land.lhs.true328.i.cond.false349.i_crit_edge, %for.body323.i.cond.false349.i_crit_edge
  %245 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %arrayidx.i, align 8
  %247 = ptrtoint ptr %246 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %246, align 4
  %add354.i = add i32 %248, 2145
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add354.i, i32 noundef %i.16.i, i32 noundef 0) #15
  br label %cond.end355.i

cond.end355.i:                                    ; preds = %cond.false349.i, %cond.true339.i
  %249 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %virt.i, align 8
  %and358.i = and i32 %250, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and358.i)
  %tobool359.not.i = icmp eq i32 %and358.i, 0
  br i1 %tobool359.not.i, label %cond.end355.i.cond.false382.i_crit_edge, label %land.lhs.true360.i

cond.end355.i.cond.false382.i_crit_edge:          ; preds = %cond.end355.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false382.i

land.lhs.true360.i:                               ; preds = %cond.end355.i
  %251 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %funcs.i, align 4
  %tobool364.not.i = icmp eq ptr %252, null
  br i1 %tobool364.not.i, label %land.lhs.true360.i.cond.false382.i_crit_edge, label %land.lhs.true365.i

land.lhs.true360.i.cond.false382.i_crit_edge:     ; preds = %land.lhs.true360.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false382.i

land.lhs.true365.i:                               ; preds = %land.lhs.true360.i
  %sriov_rreg369.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %252, i32 0, i32 13
  %253 = ptrtoint ptr %sriov_rreg369.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load ptr, ptr %sriov_rreg369.i, align 4
  %tobool370.not.i = icmp eq ptr %254, null
  br i1 %tobool370.not.i, label %land.lhs.true365.i.cond.false382.i_crit_edge, label %cond.true371.i

land.lhs.true365.i.cond.false382.i_crit_edge:     ; preds = %land.lhs.true365.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false382.i

cond.true371.i:                                   ; preds = %land.lhs.true365.i
  call void @__sanitizer_cov_trace_pc() #17
  %255 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %arrayidx.i, align 8
  %257 = ptrtoint ptr %256 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %256, align 4
  %add380.i = add i32 %258, 2147
  %call381.i = tail call i32 %254(ptr noundef %adev, i32 noundef %add380.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end389.i

cond.false382.i:                                  ; preds = %land.lhs.true365.i.cond.false382.i_crit_edge, %land.lhs.true360.i.cond.false382.i_crit_edge, %cond.end355.i.cond.false382.i_crit_edge
  %259 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load ptr, ptr %arrayidx.i, align 8
  %261 = ptrtoint ptr %260 to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %260, align 4
  %add387.i = add i32 %262, 2147
  %call388.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add387.i, i32 noundef 0) #15
  br label %cond.end389.i

cond.end389.i:                                    ; preds = %cond.false382.i, %cond.true371.i
  %cond390.i = phi i32 [ %call381.i, %cond.true371.i ], [ %call388.i, %cond.false382.i ]
  %and391.i = lshr i32 %cond390.i, 12
  %shr392.i = and i32 %and391.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr392.i)
  %tobool393.not.i = icmp eq i32 %shr392.i, 0
  br i1 %tobool393.not.i, label %cond.end389.i.if.end402.i_crit_edge, label %do.end397.i

cond.end389.i.if.end402.i_crit_edge:              ; preds = %cond.end389.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end402.i

do.end397.i:                                      ; preds = %cond.end389.i
  call void @__sanitizer_cov_trace_pc() #17
  %263 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %adev, align 8
  %arrayidx399.i = getelementptr [7 x ptr], ptr @vml2_walker_mems, i32 0, i32 %i.16.i
  %265 = ptrtoint ptr %arrayidx399.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %arrayidx399.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %264, ptr noundef nonnull @.str.308, i32 noundef %i.16.i, ptr noundef %266, i32 noundef %shr392.i) #18
  %267 = ptrtoint ptr %ce_count to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %ce_count, align 4
  %add401.i = add i32 %268, %shr392.i
  store i32 %add401.i, ptr %ce_count, align 4
  br label %if.end402.i

if.end402.i:                                      ; preds = %do.end397.i, %cond.end389.i.if.end402.i_crit_edge
  %and403.i = lshr i32 %cond390.i, 14
  %shr404.i = and i32 %and403.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr404.i)
  %tobool405.not.i = icmp eq i32 %shr404.i, 0
  br i1 %tobool405.not.i, label %if.end402.i.for.inc415.i_crit_edge, label %do.end409.i

if.end402.i.for.inc415.i_crit_edge:               ; preds = %if.end402.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc415.i

do.end409.i:                                      ; preds = %if.end402.i
  call void @__sanitizer_cov_trace_pc() #17
  %269 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %adev, align 8
  %arrayidx411.i = getelementptr [7 x ptr], ptr @vml2_walker_mems, i32 0, i32 %i.16.i
  %271 = ptrtoint ptr %arrayidx411.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %arrayidx411.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %270, ptr noundef nonnull @.str.311, i32 noundef %i.16.i, ptr noundef %272, i32 noundef %shr404.i) #18
  %273 = ptrtoint ptr %ras_error_status to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %ras_error_status, align 4
  %add413.i = add i32 %274, %shr404.i
  store i32 %add413.i, ptr %ras_error_status, align 4
  br label %for.inc415.i

for.inc415.i:                                     ; preds = %do.end409.i, %if.end402.i.for.inc415.i_crit_edge
  %inc416.i = add nuw nsw i32 %i.16.i, 1
  %exitcond20.not.i = icmp eq i32 %inc416.i, 7
  br i1 %exitcond20.not.i, label %for.inc415.i.for.body420.i_crit_edge, label %for.inc415.i.for.body323.i_crit_edge

for.inc415.i.for.body323.i_crit_edge:             ; preds = %for.inc415.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body323.i

for.inc415.i.for.body420.i_crit_edge:             ; preds = %for.inc415.i
  br label %for.body420.i

for.body420.i:                                    ; preds = %for.inc500.i.for.body420.i_crit_edge, %for.inc415.i.for.body420.i_crit_edge
  %i.211.i = phi i32 [ %inc501.i, %for.inc500.i.for.body420.i_crit_edge ], [ 0, %for.inc415.i.for.body420.i_crit_edge ]
  %275 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load i32, ptr %virt.i, align 8
  %and423.i = and i32 %276, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and423.i)
  %tobool424.not.i = icmp eq i32 %and423.i, 0
  br i1 %tobool424.not.i, label %for.body420.i.cond.false446.i_crit_edge, label %land.lhs.true425.i

for.body420.i.cond.false446.i_crit_edge:          ; preds = %for.body420.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false446.i

land.lhs.true425.i:                               ; preds = %for.body420.i
  %277 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %funcs.i, align 4
  %tobool429.not.i = icmp eq ptr %278, null
  br i1 %tobool429.not.i, label %land.lhs.true425.i.cond.false446.i_crit_edge, label %land.lhs.true430.i

land.lhs.true425.i.cond.false446.i_crit_edge:     ; preds = %land.lhs.true425.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false446.i

land.lhs.true430.i:                               ; preds = %land.lhs.true425.i
  %sriov_wreg434.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %278, i32 0, i32 12
  %279 = ptrtoint ptr %sriov_wreg434.i to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load ptr, ptr %sriov_wreg434.i, align 4
  %tobool435.not.i = icmp eq ptr %280, null
  br i1 %tobool435.not.i, label %land.lhs.true430.i.cond.false446.i_crit_edge, label %cond.true436.i

land.lhs.true430.i.cond.false446.i_crit_edge:     ; preds = %land.lhs.true430.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false446.i

cond.true436.i:                                   ; preds = %land.lhs.true430.i
  call void @__sanitizer_cov_trace_pc() #17
  %281 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load ptr, ptr %arrayidx.i, align 8
  %283 = ptrtoint ptr %282 to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load i32, ptr %282, align 4
  %add445.i = add i32 %284, 2063
  tail call void %280(ptr noundef %adev, i32 noundef %add445.i, i32 noundef %i.211.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end452.i

cond.false446.i:                                  ; preds = %land.lhs.true430.i.cond.false446.i_crit_edge, %land.lhs.true425.i.cond.false446.i_crit_edge, %for.body420.i.cond.false446.i_crit_edge
  %285 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load ptr, ptr %arrayidx.i, align 8
  %287 = ptrtoint ptr %286 to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load i32, ptr %286, align 4
  %add451.i = add i32 %288, 2063
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add451.i, i32 noundef %i.211.i, i32 noundef 0) #15
  br label %cond.end452.i

cond.end452.i:                                    ; preds = %cond.false446.i, %cond.true436.i
  %289 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load i32, ptr %virt.i, align 8
  %and455.i = and i32 %290, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and455.i)
  %tobool456.not.i = icmp eq i32 %and455.i, 0
  br i1 %tobool456.not.i, label %cond.end452.i.cond.false479.i_crit_edge, label %land.lhs.true457.i

cond.end452.i.cond.false479.i_crit_edge:          ; preds = %cond.end452.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false479.i

land.lhs.true457.i:                               ; preds = %cond.end452.i
  %291 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %funcs.i, align 4
  %tobool461.not.i = icmp eq ptr %292, null
  br i1 %tobool461.not.i, label %land.lhs.true457.i.cond.false479.i_crit_edge, label %land.lhs.true462.i

land.lhs.true457.i.cond.false479.i_crit_edge:     ; preds = %land.lhs.true457.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false479.i

land.lhs.true462.i:                               ; preds = %land.lhs.true457.i
  %sriov_rreg466.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %292, i32 0, i32 13
  %293 = ptrtoint ptr %sriov_rreg466.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load ptr, ptr %sriov_rreg466.i, align 4
  %tobool467.not.i = icmp eq ptr %294, null
  br i1 %tobool467.not.i, label %land.lhs.true462.i.cond.false479.i_crit_edge, label %cond.true468.i

land.lhs.true462.i.cond.false479.i_crit_edge:     ; preds = %land.lhs.true462.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false479.i

cond.true468.i:                                   ; preds = %land.lhs.true462.i
  call void @__sanitizer_cov_trace_pc() #17
  %295 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %arrayidx.i, align 8
  %297 = ptrtoint ptr %296 to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %296, align 4
  %add477.i = add i32 %298, 2065
  %call478.i = tail call i32 %294(ptr noundef %adev, i32 noundef %add477.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end486.i

cond.false479.i:                                  ; preds = %land.lhs.true462.i.cond.false479.i_crit_edge, %land.lhs.true457.i.cond.false479.i_crit_edge, %cond.end452.i.cond.false479.i_crit_edge
  %299 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load ptr, ptr %arrayidx.i, align 8
  %301 = ptrtoint ptr %300 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %300, align 4
  %add484.i = add i32 %302, 2065
  %call485.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add484.i, i32 noundef 0) #15
  br label %cond.end486.i

cond.end486.i:                                    ; preds = %cond.false479.i, %cond.true468.i
  %cond487.i = phi i32 [ %call478.i, %cond.true468.i ], [ %call485.i, %cond.false479.i ]
  %and488.i = lshr i32 %cond487.i, 13
  %shr489.i = and i32 %and488.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr489.i)
  %tobool490.not.i = icmp eq i32 %shr489.i, 0
  br i1 %tobool490.not.i, label %cond.end486.i.for.inc500.i_crit_edge, label %do.end494.i

cond.end486.i.for.inc500.i_crit_edge:             ; preds = %cond.end486.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc500.i

do.end494.i:                                      ; preds = %cond.end486.i
  call void @__sanitizer_cov_trace_pc() #17
  %303 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load ptr, ptr %adev, align 8
  %arrayidx496.i = getelementptr [4 x ptr], ptr @atc_l2_cache_2m_mems, i32 0, i32 %i.211.i
  %305 = ptrtoint ptr %arrayidx496.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %arrayidx496.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %304, ptr noundef nonnull @.str.308, i32 noundef %i.211.i, ptr noundef %306, i32 noundef %shr489.i) #18
  %307 = ptrtoint ptr %ce_count to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load i32, ptr %ce_count, align 4
  %add498.i = add i32 %308, %shr489.i
  store i32 %add498.i, ptr %ce_count, align 4
  br label %for.inc500.i

for.inc500.i:                                     ; preds = %do.end494.i, %cond.end486.i.for.inc500.i_crit_edge
  %inc501.i = add nuw nsw i32 %i.211.i, 1
  %exitcond21.not.i = icmp eq i32 %inc501.i, 4
  br i1 %exitcond21.not.i, label %for.inc500.i.for.body505.i_crit_edge, label %for.inc500.i.for.body420.i_crit_edge

for.inc500.i.for.body420.i_crit_edge:             ; preds = %for.inc500.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body420.i

for.inc500.i.for.body505.i_crit_edge:             ; preds = %for.inc500.i
  br label %for.body505.i

for.body505.i:                                    ; preds = %for.inc597.i.for.body505.i_crit_edge, %for.inc500.i.for.body505.i_crit_edge
  %i.315.i = phi i32 [ %inc598.i, %for.inc597.i.for.body505.i_crit_edge ], [ 0, %for.inc500.i.for.body505.i_crit_edge ]
  %309 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %virt.i, align 8
  %and508.i = and i32 %310, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and508.i)
  %tobool509.not.i = icmp eq i32 %and508.i, 0
  br i1 %tobool509.not.i, label %for.body505.i.cond.false531.i_crit_edge, label %land.lhs.true510.i

for.body505.i.cond.false531.i_crit_edge:          ; preds = %for.body505.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false531.i

land.lhs.true510.i:                               ; preds = %for.body505.i
  %311 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %funcs.i, align 4
  %tobool514.not.i = icmp eq ptr %312, null
  br i1 %tobool514.not.i, label %land.lhs.true510.i.cond.false531.i_crit_edge, label %land.lhs.true515.i

land.lhs.true510.i.cond.false531.i_crit_edge:     ; preds = %land.lhs.true510.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false531.i

land.lhs.true515.i:                               ; preds = %land.lhs.true510.i
  %sriov_wreg519.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %312, i32 0, i32 12
  %313 = ptrtoint ptr %sriov_wreg519.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %sriov_wreg519.i, align 4
  %tobool520.not.i = icmp eq ptr %314, null
  br i1 %tobool520.not.i, label %land.lhs.true515.i.cond.false531.i_crit_edge, label %cond.true521.i

land.lhs.true515.i.cond.false531.i_crit_edge:     ; preds = %land.lhs.true515.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false531.i

cond.true521.i:                                   ; preds = %land.lhs.true515.i
  call void @__sanitizer_cov_trace_pc() #17
  %315 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %arrayidx.i, align 8
  %317 = ptrtoint ptr %316 to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %316, align 4
  %add530.i = add i32 %318, 2062
  tail call void %314(ptr noundef %adev, i32 noundef %add530.i, i32 noundef %i.315.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end537.i

cond.false531.i:                                  ; preds = %land.lhs.true515.i.cond.false531.i_crit_edge, %land.lhs.true510.i.cond.false531.i_crit_edge, %for.body505.i.cond.false531.i_crit_edge
  %319 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %arrayidx.i, align 8
  %321 = ptrtoint ptr %320 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %320, align 4
  %add536.i = add i32 %322, 2062
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add536.i, i32 noundef %i.315.i, i32 noundef 0) #15
  br label %cond.end537.i

cond.end537.i:                                    ; preds = %cond.false531.i, %cond.true521.i
  %323 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %virt.i, align 8
  %and540.i = and i32 %324, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and540.i)
  %tobool541.not.i = icmp eq i32 %and540.i, 0
  br i1 %tobool541.not.i, label %cond.end537.i.cond.false564.i_crit_edge, label %land.lhs.true542.i

cond.end537.i.cond.false564.i_crit_edge:          ; preds = %cond.end537.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false564.i

land.lhs.true542.i:                               ; preds = %cond.end537.i
  %325 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %funcs.i, align 4
  %tobool546.not.i = icmp eq ptr %326, null
  br i1 %tobool546.not.i, label %land.lhs.true542.i.cond.false564.i_crit_edge, label %land.lhs.true547.i

land.lhs.true542.i.cond.false564.i_crit_edge:     ; preds = %land.lhs.true542.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false564.i

land.lhs.true547.i:                               ; preds = %land.lhs.true542.i
  %sriov_rreg551.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %326, i32 0, i32 13
  %327 = ptrtoint ptr %sriov_rreg551.i to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load ptr, ptr %sriov_rreg551.i, align 4
  %tobool552.not.i = icmp eq ptr %328, null
  br i1 %tobool552.not.i, label %land.lhs.true547.i.cond.false564.i_crit_edge, label %cond.true553.i

land.lhs.true547.i.cond.false564.i_crit_edge:     ; preds = %land.lhs.true547.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false564.i

cond.true553.i:                                   ; preds = %land.lhs.true547.i
  call void @__sanitizer_cov_trace_pc() #17
  %329 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load ptr, ptr %arrayidx.i, align 8
  %331 = ptrtoint ptr %330 to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %330, align 4
  %add562.i = add i32 %332, 2064
  %call563.i = tail call i32 %328(ptr noundef %adev, i32 noundef %add562.i, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end571.i

cond.false564.i:                                  ; preds = %land.lhs.true547.i.cond.false564.i_crit_edge, %land.lhs.true542.i.cond.false564.i_crit_edge, %cond.end537.i.cond.false564.i_crit_edge
  %333 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %arrayidx.i, align 8
  %335 = ptrtoint ptr %334 to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load i32, ptr %334, align 4
  %add569.i = add i32 %336, 2064
  %call570.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add569.i, i32 noundef 0) #15
  br label %cond.end571.i

cond.end571.i:                                    ; preds = %cond.false564.i, %cond.true553.i
  %cond572.i = phi i32 [ %call563.i, %cond.true553.i ], [ %call570.i, %cond.false564.i ]
  %and573.i = lshr i32 %cond572.i, 13
  %shr574.i = and i32 %and573.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr574.i)
  %tobool575.not.i = icmp eq i32 %shr574.i, 0
  br i1 %tobool575.not.i, label %cond.end571.i.if.end584.i_crit_edge, label %do.end579.i

cond.end571.i.if.end584.i_crit_edge:              ; preds = %cond.end571.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end584.i

do.end579.i:                                      ; preds = %cond.end571.i
  call void @__sanitizer_cov_trace_pc() #17
  %337 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %adev, align 8
  %arrayidx581.i = getelementptr [32 x ptr], ptr @atc_l2_cache_4k_mems, i32 0, i32 %i.315.i
  %339 = ptrtoint ptr %arrayidx581.i to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load ptr, ptr %arrayidx581.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %338, ptr noundef nonnull @.str.308, i32 noundef %i.315.i, ptr noundef %340, i32 noundef %shr574.i) #18
  %341 = ptrtoint ptr %ce_count to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load i32, ptr %ce_count, align 4
  %add583.i = add i32 %342, %shr574.i
  store i32 %add583.i, ptr %ce_count, align 4
  br label %if.end584.i

if.end584.i:                                      ; preds = %do.end579.i, %cond.end571.i.if.end584.i_crit_edge
  %and585.i = lshr i32 %cond572.i, 15
  %shr586.i = and i32 %and585.i, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr586.i)
  %tobool587.not.i = icmp eq i32 %shr586.i, 0
  br i1 %tobool587.not.i, label %if.end584.i.for.inc597.i_crit_edge, label %do.end591.i

if.end584.i.for.inc597.i_crit_edge:               ; preds = %if.end584.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc597.i

do.end591.i:                                      ; preds = %if.end584.i
  call void @__sanitizer_cov_trace_pc() #17
  %343 = ptrtoint ptr %adev to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load ptr, ptr %adev, align 8
  %arrayidx593.i = getelementptr [32 x ptr], ptr @atc_l2_cache_4k_mems, i32 0, i32 %i.315.i
  %345 = ptrtoint ptr %arrayidx593.i to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load ptr, ptr %arrayidx593.i, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %344, ptr noundef nonnull @.str.311, i32 noundef %i.315.i, ptr noundef %346, i32 noundef %shr586.i) #18
  %347 = ptrtoint ptr %ras_error_status to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load i32, ptr %ras_error_status, align 4
  %add595.i = add i32 %348, %shr586.i
  store i32 %add595.i, ptr %ras_error_status, align 4
  br label %for.inc597.i

for.inc597.i:                                     ; preds = %do.end591.i, %if.end584.i.for.inc597.i_crit_edge
  %inc598.i = add nuw nsw i32 %i.315.i, 1
  %exitcond22.not.i = icmp eq i32 %inc598.i, 32
  br i1 %exitcond22.not.i, label %for.end599.i, label %for.inc597.i.for.body505.i_crit_edge

for.inc597.i.for.body505.i_crit_edge:             ; preds = %for.inc597.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body505.i

for.end599.i:                                     ; preds = %for.inc597.i
  %349 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load i32, ptr %virt.i, align 8
  %and602.i = and i32 %350, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and602.i)
  %tobool603.not.i = icmp eq i32 %and602.i, 0
  br i1 %tobool603.not.i, label %for.end599.i.cond.false625.i_crit_edge, label %land.lhs.true604.i

for.end599.i.cond.false625.i_crit_edge:           ; preds = %for.end599.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false625.i

land.lhs.true604.i:                               ; preds = %for.end599.i
  %351 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load ptr, ptr %funcs.i, align 4
  %tobool608.not.i = icmp eq ptr %352, null
  br i1 %tobool608.not.i, label %land.lhs.true604.i.cond.false625.i_crit_edge, label %land.lhs.true609.i

land.lhs.true604.i.cond.false625.i_crit_edge:     ; preds = %land.lhs.true604.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false625.i

land.lhs.true609.i:                               ; preds = %land.lhs.true604.i
  %sriov_wreg613.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %352, i32 0, i32 12
  %353 = ptrtoint ptr %sriov_wreg613.i to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load ptr, ptr %sriov_wreg613.i, align 4
  %tobool614.not.i = icmp eq ptr %354, null
  br i1 %tobool614.not.i, label %land.lhs.true609.i.cond.false625.i_crit_edge, label %cond.true615.i

land.lhs.true609.i.cond.false625.i_crit_edge:     ; preds = %land.lhs.true609.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false625.i

cond.true615.i:                                   ; preds = %land.lhs.true609.i
  call void @__sanitizer_cov_trace_pc() #17
  %355 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load ptr, ptr %arrayidx.i, align 8
  %357 = ptrtoint ptr %356 to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %356, align 4
  %add624.i = add i32 %358, 2144
  tail call void %354(ptr noundef %adev, i32 noundef %add624.i, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end631.i

cond.false625.i:                                  ; preds = %land.lhs.true609.i.cond.false625.i_crit_edge, %land.lhs.true604.i.cond.false625.i_crit_edge, %for.end599.i.cond.false625.i_crit_edge
  %359 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load ptr, ptr %arrayidx.i, align 8
  %361 = ptrtoint ptr %360 to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load i32, ptr %360, align 4
  %add630.i = add i32 %362, 2144
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add630.i, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end631.i

cond.end631.i:                                    ; preds = %cond.false625.i, %cond.true615.i
  %363 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %virt.i, align 8
  %and634.i = and i32 %364, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and634.i)
  %tobool635.not.i = icmp eq i32 %and634.i, 0
  br i1 %tobool635.not.i, label %cond.end631.i.cond.false657.i_crit_edge, label %land.lhs.true636.i

cond.end631.i.cond.false657.i_crit_edge:          ; preds = %cond.end631.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false657.i

land.lhs.true636.i:                               ; preds = %cond.end631.i
  %365 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %funcs.i, align 4
  %tobool640.not.i = icmp eq ptr %366, null
  br i1 %tobool640.not.i, label %land.lhs.true636.i.cond.false657.i_crit_edge, label %land.lhs.true641.i

land.lhs.true636.i.cond.false657.i_crit_edge:     ; preds = %land.lhs.true636.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false657.i

land.lhs.true641.i:                               ; preds = %land.lhs.true636.i
  %sriov_wreg645.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %366, i32 0, i32 12
  %367 = ptrtoint ptr %sriov_wreg645.i to i32
  call void @__asan_load4_noabort(i32 %367)
  %368 = load ptr, ptr %sriov_wreg645.i, align 4
  %tobool646.not.i = icmp eq ptr %368, null
  br i1 %tobool646.not.i, label %land.lhs.true641.i.cond.false657.i_crit_edge, label %cond.true647.i

land.lhs.true641.i.cond.false657.i_crit_edge:     ; preds = %land.lhs.true641.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false657.i

cond.true647.i:                                   ; preds = %land.lhs.true641.i
  call void @__sanitizer_cov_trace_pc() #17
  %369 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load ptr, ptr %arrayidx.i, align 8
  %371 = ptrtoint ptr %370 to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load i32, ptr %370, align 4
  %add656.i = add i32 %372, 2145
  tail call void %368(ptr noundef %adev, i32 noundef %add656.i, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end663.i

cond.false657.i:                                  ; preds = %land.lhs.true641.i.cond.false657.i_crit_edge, %land.lhs.true636.i.cond.false657.i_crit_edge, %cond.end631.i.cond.false657.i_crit_edge
  %373 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load ptr, ptr %arrayidx.i, align 8
  %375 = ptrtoint ptr %374 to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load i32, ptr %374, align 4
  %add662.i = add i32 %376, 2145
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add662.i, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end663.i

cond.end663.i:                                    ; preds = %cond.false657.i, %cond.true647.i
  %377 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %virt.i, align 8
  %and666.i = and i32 %378, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and666.i)
  %tobool667.not.i = icmp eq i32 %and666.i, 0
  br i1 %tobool667.not.i, label %cond.end663.i.cond.false689.i_crit_edge, label %land.lhs.true668.i

cond.end663.i.cond.false689.i_crit_edge:          ; preds = %cond.end663.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false689.i

land.lhs.true668.i:                               ; preds = %cond.end663.i
  %379 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load ptr, ptr %funcs.i, align 4
  %tobool672.not.i = icmp eq ptr %380, null
  br i1 %tobool672.not.i, label %land.lhs.true668.i.cond.false689.i_crit_edge, label %land.lhs.true673.i

land.lhs.true668.i.cond.false689.i_crit_edge:     ; preds = %land.lhs.true668.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false689.i

land.lhs.true673.i:                               ; preds = %land.lhs.true668.i
  %sriov_wreg677.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %380, i32 0, i32 12
  %381 = ptrtoint ptr %sriov_wreg677.i to i32
  call void @__asan_load4_noabort(i32 %381)
  %382 = load ptr, ptr %sriov_wreg677.i, align 4
  %tobool678.not.i = icmp eq ptr %382, null
  br i1 %tobool678.not.i, label %land.lhs.true673.i.cond.false689.i_crit_edge, label %cond.true679.i

land.lhs.true673.i.cond.false689.i_crit_edge:     ; preds = %land.lhs.true673.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false689.i

cond.true679.i:                                   ; preds = %land.lhs.true673.i
  call void @__sanitizer_cov_trace_pc() #17
  %383 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load ptr, ptr %arrayidx.i, align 8
  %385 = ptrtoint ptr %384 to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load i32, ptr %384, align 4
  %add688.i = add i32 %386, 2063
  tail call void %382(ptr noundef %adev, i32 noundef %add688.i, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end695.i

cond.false689.i:                                  ; preds = %land.lhs.true673.i.cond.false689.i_crit_edge, %land.lhs.true668.i.cond.false689.i_crit_edge, %cond.end663.i.cond.false689.i_crit_edge
  %387 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %arrayidx.i, align 8
  %389 = ptrtoint ptr %388 to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %388, align 4
  %add694.i = add i32 %390, 2063
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add694.i, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end695.i

cond.end695.i:                                    ; preds = %cond.false689.i, %cond.true679.i
  %391 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load i32, ptr %virt.i, align 8
  %and698.i = and i32 %392, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and698.i)
  %tobool699.not.i = icmp eq i32 %and698.i, 0
  br i1 %tobool699.not.i, label %cond.end695.i.cond.false721.i_crit_edge, label %land.lhs.true700.i

cond.end695.i.cond.false721.i_crit_edge:          ; preds = %cond.end695.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false721.i

land.lhs.true700.i:                               ; preds = %cond.end695.i
  %393 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load ptr, ptr %funcs.i, align 4
  %tobool704.not.i = icmp eq ptr %394, null
  br i1 %tobool704.not.i, label %land.lhs.true700.i.cond.false721.i_crit_edge, label %land.lhs.true705.i

land.lhs.true700.i.cond.false721.i_crit_edge:     ; preds = %land.lhs.true700.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false721.i

land.lhs.true705.i:                               ; preds = %land.lhs.true700.i
  %sriov_wreg709.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %394, i32 0, i32 12
  %395 = ptrtoint ptr %sriov_wreg709.i to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load ptr, ptr %sriov_wreg709.i, align 4
  %tobool710.not.i = icmp eq ptr %396, null
  br i1 %tobool710.not.i, label %land.lhs.true705.i.cond.false721.i_crit_edge, label %cond.true711.i

land.lhs.true705.i.cond.false721.i_crit_edge:     ; preds = %land.lhs.true705.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false721.i

cond.true711.i:                                   ; preds = %land.lhs.true705.i
  call void @__sanitizer_cov_trace_pc() #17
  %397 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %397)
  %398 = load ptr, ptr %arrayidx.i, align 8
  %399 = ptrtoint ptr %398 to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load i32, ptr %398, align 4
  %add720.i = add i32 %400, 2062
  tail call void %396(ptr noundef %adev, i32 noundef %add720.i, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cleanup

cond.false721.i:                                  ; preds = %land.lhs.true705.i.cond.false721.i_crit_edge, %land.lhs.true700.i.cond.false721.i_crit_edge, %cond.end695.i.cond.false721.i_crit_edge
  %401 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load ptr, ptr %arrayidx.i, align 8
  %403 = ptrtoint ptr %402 to i32
  call void @__asan_load4_noabort(i32 %403)
  %404 = load i32, ptr %402, align 4
  %add726.i = add i32 %404, 2062
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add726.i, i32 noundef 255, i32 noundef 0) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.false721.i, %cond.true711.i, %amdgpu_ras_is_supported.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %amdgpu_ras_is_supported.exit.cleanup_crit_edge ], [ 0, %cond.true711.i ], [ 0, %cond.false721.i ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gfx_v9_0_reset_ras_error_count(ptr noundef %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %ras1.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 113, i32 34, i32 1
  %0 = ptrtoint ptr %ras1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ras1.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %amdgpu_ras_is_supported.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

amdgpu_ras_is_supported.exit:                     ; preds = %entry
  %ras_enabled.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 167
  %2 = ptrtoint ptr %ras_enabled.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ras_enabled.i, align 8
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %amdgpu_ras_is_supported.exit.cleanup_crit_edge, label %if.end

amdgpu_ras_is_supported.exit.cleanup_crit_edge:   ; preds = %amdgpu_ras_is_supported.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %amdgpu_ras_is_supported.exit
  %grbm_idx_mutex = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 21
  tail call void @mutex_lock_nested(ptr noundef %grbm_idx_mutex, i32 noundef 0) #15
  %virt.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  br label %for.cond4.preheader.lr.ph

for.cond4.preheader.lr.ph:                        ; preds = %for.inc20.for.cond4.preheader.lr.ph_crit_edge, %if.end
  %i.0970 = phi i32 [ 0, %if.end ], [ %inc21, %for.inc20.for.cond4.preheader.lr.ph_crit_edge ]
  %arrayidx = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0970
  %se_num = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0970, i32 5
  %5 = ptrtoint ptr %se_num to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %se_num, align 4
  %instance = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0970, i32 6
  %7 = ptrtoint ptr %instance to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %instance, align 4
  %inst = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0970, i32 1
  %seg = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0970, i32 2
  %reg_offset15 = getelementptr [33 x %struct.soc15_reg_entry], ptr @gfx_v9_0_edc_counter_regs, i32 0, i32 %i.0970, i32 3
  %umax = call i32 @llvm.umax.i32(i32 %8, i32 1)
  %umax984 = call i32 @llvm.umax.i32(i32 %6, i32 1)
  br label %for.body7.lr.ph

for.body7.lr.ph:                                  ; preds = %for.inc17.for.body7.lr.ph_crit_edge, %for.cond4.preheader.lr.ph
  %j.0968 = phi i32 [ 0, %for.cond4.preheader.lr.ph ], [ %inc18, %for.inc17.for.body7.lr.ph_crit_edge ]
  %shl7.i = shl i32 %j.0968, 16
  %and8.i = and i32 %shl7.i, 16711680
  br label %for.body7

for.body7:                                        ; preds = %gfx_v9_0_select_se_sh.exit.for.body7_crit_edge, %for.body7.lr.ph
  %k.0966 = phi i32 [ 0, %for.body7.lr.ph ], [ %inc, %gfx_v9_0_select_se_sh.exit.for.body7_crit_edge ]
  %and.i962 = and i32 %k.0966, 255
  %data.1.i = or i32 %and.i962, %and8.i
  %9 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %virt.i, align 8
  %and21.i = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i)
  %tobool.not.i963 = icmp eq i32 %and21.i, 0
  br i1 %tobool.not.i963, label %for.body7.cond.false.i_crit_edge, label %land.lhs.true.i

for.body7.cond.false.i_crit_edge:                 ; preds = %for.body7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true.i:                                  ; preds = %for.body7
  %11 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %funcs.i, align 4
  %tobool22.not.i = icmp eq ptr %12, null
  br i1 %tobool22.not.i, label %land.lhs.true.i.cond.false.i_crit_edge, label %land.lhs.true23.i

land.lhs.true.i.cond.false.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

land.lhs.true23.i:                                ; preds = %land.lhs.true.i
  %sriov_wreg.i = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %12, i32 0, i32 12
  %13 = ptrtoint ptr %sriov_wreg.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sriov_wreg.i, align 4
  %tobool27.not.i = icmp eq ptr %14, null
  br i1 %tobool27.not.i, label %land.lhs.true23.i.cond.false.i_crit_edge, label %cond.true.i

land.lhs.true23.i.cond.false.i_crit_edge:         ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false.i

cond.true.i:                                      ; preds = %land.lhs.true23.i
  call void @__sanitizer_cov_trace_pc() #17
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx33.i = getelementptr i32, ptr %16, i32 1
  %17 = ptrtoint ptr %arrayidx33.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx33.i, align 4
  %add.i = add i32 %18, 8704
  tail call void %14(ptr noundef %adev, i32 noundef %add.i, i32 noundef %data.1.i, i32 noundef 4, i32 noundef 1) #15
  br label %gfx_v9_0_select_se_sh.exit

cond.false.i:                                     ; preds = %land.lhs.true23.i.cond.false.i_crit_edge, %land.lhs.true.i.cond.false.i_crit_edge, %for.body7.cond.false.i_crit_edge
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx37.i = getelementptr i32, ptr %20, i32 1
  %21 = ptrtoint ptr %arrayidx37.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx37.i, align 4
  %add38.i = add i32 %22, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add38.i, i32 noundef %data.1.i, i32 noundef 0) #15
  br label %gfx_v9_0_select_se_sh.exit

gfx_v9_0_select_se_sh.exit:                       ; preds = %cond.false.i, %cond.true.i
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx, align 4
  %25 = ptrtoint ptr %inst to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %inst, align 4
  %arrayidx11 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 %24, i32 %26
  %27 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx11, align 4
  %29 = ptrtoint ptr %seg to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %seg, align 4
  %arrayidx13 = getelementptr i32, ptr %28, i32 %30
  %31 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx13, align 4
  %33 = ptrtoint ptr %reg_offset15 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %reg_offset15, align 4
  %add = add i32 %34, %32
  %call16 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add, i32 noundef 0) #15
  %inc = add nuw i32 %k.0966, 1
  %exitcond.not = icmp eq i32 %inc, %umax
  br i1 %exitcond.not, label %for.inc17, label %gfx_v9_0_select_se_sh.exit.for.body7_crit_edge

gfx_v9_0_select_se_sh.exit.for.body7_crit_edge:   ; preds = %gfx_v9_0_select_se_sh.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body7

for.inc17:                                        ; preds = %gfx_v9_0_select_se_sh.exit
  %inc18 = add nuw i32 %j.0968, 1
  %exitcond985.not = icmp eq i32 %inc18, %umax984
  br i1 %exitcond985.not, label %for.inc20, label %for.inc17.for.body7.lr.ph_crit_edge

for.inc17.for.body7.lr.ph_crit_edge:              ; preds = %for.inc17
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body7.lr.ph

for.inc20:                                        ; preds = %for.inc17
  %inc21 = add nuw nsw i32 %i.0970, 1
  %exitcond986.not = icmp eq i32 %inc21, 33
  br i1 %exitcond986.not, label %for.end22, label %for.inc20.for.cond4.preheader.lr.ph_crit_edge

for.inc20.for.cond4.preheader.lr.ph_crit_edge:    ; preds = %for.inc20
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond4.preheader.lr.ph

for.end22:                                        ; preds = %for.inc20
  %35 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %virt.i, align 8
  %and = and i32 %36, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool23.not = icmp eq i32 %and, 0
  br i1 %tobool23.not, label %for.end22.cond.false_crit_edge, label %land.lhs.true

for.end22.cond.false_crit_edge:                   ; preds = %for.end22
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %for.end22
  %37 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %funcs.i, align 4
  %tobool24.not = icmp eq ptr %38, null
  br i1 %tobool24.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true25

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true25:                                  ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %38, i32 0, i32 12
  %39 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sriov_wreg, align 4
  %tobool29.not = icmp eq ptr %40, null
  br i1 %tobool29.not, label %land.lhs.true25.cond.false_crit_edge, label %cond.true

land.lhs.true25.cond.false_crit_edge:             ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  %41 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx37 = getelementptr i32, ptr %42, i32 1
  %43 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx37, align 4
  %add38 = add i32 %44, 8704
  tail call void %40(ptr noundef %adev, i32 noundef %add38, i32 noundef -536870912, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true25.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %for.end22.cond.false_crit_edge
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx.i, align 8
  %arrayidx42 = getelementptr i32, ptr %46, i32 1
  %47 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx42, align 4
  %add43 = add i32 %48, 8704
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add43, i32 noundef -536870912, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  tail call void @mutex_unlock(ptr noundef %grbm_idx_mutex) #15
  %49 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %virt.i, align 8
  %and47 = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %cond.end.cond.false70_crit_edge, label %land.lhs.true49

cond.end.cond.false70_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false70

land.lhs.true49:                                  ; preds = %cond.end
  %51 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %funcs.i, align 4
  %tobool53.not = icmp eq ptr %52, null
  br i1 %tobool53.not, label %land.lhs.true49.cond.false70_crit_edge, label %land.lhs.true54

land.lhs.true49.cond.false70_crit_edge:           ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false70

land.lhs.true54:                                  ; preds = %land.lhs.true49
  %sriov_wreg58 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %52, i32 0, i32 12
  %53 = ptrtoint ptr %sriov_wreg58 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %sriov_wreg58, align 4
  %tobool59.not = icmp eq ptr %54, null
  br i1 %tobool59.not, label %land.lhs.true54.cond.false70_crit_edge, label %cond.true60

land.lhs.true54.cond.false70_crit_edge:           ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false70

cond.true60:                                      ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #17
  %55 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx.i, align 8
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 4
  %add69 = add i32 %58, 2144
  tail call void %54(ptr noundef %adev, i32 noundef %add69, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end76

cond.false70:                                     ; preds = %land.lhs.true54.cond.false70_crit_edge, %land.lhs.true49.cond.false70_crit_edge, %cond.end.cond.false70_crit_edge
  %59 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx.i, align 8
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %60, align 4
  %add75 = add i32 %62, 2144
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add75, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end76

cond.end76:                                       ; preds = %cond.false70, %cond.true60
  %63 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %virt.i, align 8
  %and79 = and i32 %64, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and79)
  %tobool80.not = icmp eq i32 %and79, 0
  br i1 %tobool80.not, label %cond.end76.cond.false102_crit_edge, label %land.lhs.true81

cond.end76.cond.false102_crit_edge:               ; preds = %cond.end76
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false102

land.lhs.true81:                                  ; preds = %cond.end76
  %65 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %funcs.i, align 4
  %tobool85.not = icmp eq ptr %66, null
  br i1 %tobool85.not, label %land.lhs.true81.cond.false102_crit_edge, label %land.lhs.true86

land.lhs.true81.cond.false102_crit_edge:          ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false102

land.lhs.true86:                                  ; preds = %land.lhs.true81
  %sriov_wreg90 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %66, i32 0, i32 12
  %67 = ptrtoint ptr %sriov_wreg90 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %sriov_wreg90, align 4
  %tobool91.not = icmp eq ptr %68, null
  br i1 %tobool91.not, label %land.lhs.true86.cond.false102_crit_edge, label %cond.true92

land.lhs.true86.cond.false102_crit_edge:          ; preds = %land.lhs.true86
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false102

cond.true92:                                      ; preds = %land.lhs.true86
  call void @__sanitizer_cov_trace_pc() #17
  %69 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %arrayidx.i, align 8
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %70, align 4
  %add101 = add i32 %72, 2146
  tail call void %68(ptr noundef %adev, i32 noundef %add101, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end108

cond.false102:                                    ; preds = %land.lhs.true86.cond.false102_crit_edge, %land.lhs.true81.cond.false102_crit_edge, %cond.end76.cond.false102_crit_edge
  %73 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx.i, align 8
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %74, align 4
  %add107 = add i32 %76, 2146
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add107, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false102, %cond.true92
  %77 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %virt.i, align 8
  %and111 = and i32 %78, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and111)
  %tobool112.not = icmp eq i32 %and111, 0
  br i1 %tobool112.not, label %cond.end108.cond.false134_crit_edge, label %land.lhs.true113

cond.end108.cond.false134_crit_edge:              ; preds = %cond.end108
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false134

land.lhs.true113:                                 ; preds = %cond.end108
  %79 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %funcs.i, align 4
  %tobool117.not = icmp eq ptr %80, null
  br i1 %tobool117.not, label %land.lhs.true113.cond.false134_crit_edge, label %land.lhs.true118

land.lhs.true113.cond.false134_crit_edge:         ; preds = %land.lhs.true113
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false134

land.lhs.true118:                                 ; preds = %land.lhs.true113
  %sriov_wreg122 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %80, i32 0, i32 12
  %81 = ptrtoint ptr %sriov_wreg122 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %sriov_wreg122, align 4
  %tobool123.not = icmp eq ptr %82, null
  br i1 %tobool123.not, label %land.lhs.true118.cond.false134_crit_edge, label %cond.true124

land.lhs.true118.cond.false134_crit_edge:         ; preds = %land.lhs.true118
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false134

cond.true124:                                     ; preds = %land.lhs.true118
  call void @__sanitizer_cov_trace_pc() #17
  %83 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %arrayidx.i, align 8
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %84, align 4
  %add133 = add i32 %86, 2145
  tail call void %82(ptr noundef %adev, i32 noundef %add133, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end140

cond.false134:                                    ; preds = %land.lhs.true118.cond.false134_crit_edge, %land.lhs.true113.cond.false134_crit_edge, %cond.end108.cond.false134_crit_edge
  %87 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %arrayidx.i, align 8
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %88, align 4
  %add139 = add i32 %90, 2145
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add139, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end140

cond.end140:                                      ; preds = %cond.false134, %cond.true124
  %91 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %virt.i, align 8
  %and143 = and i32 %92, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and143)
  %tobool144.not = icmp eq i32 %and143, 0
  br i1 %tobool144.not, label %cond.end140.cond.false166_crit_edge, label %land.lhs.true145

cond.end140.cond.false166_crit_edge:              ; preds = %cond.end140
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false166

land.lhs.true145:                                 ; preds = %cond.end140
  %93 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %funcs.i, align 4
  %tobool149.not = icmp eq ptr %94, null
  br i1 %tobool149.not, label %land.lhs.true145.cond.false166_crit_edge, label %land.lhs.true150

land.lhs.true145.cond.false166_crit_edge:         ; preds = %land.lhs.true145
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false166

land.lhs.true150:                                 ; preds = %land.lhs.true145
  %sriov_wreg154 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %94, i32 0, i32 12
  %95 = ptrtoint ptr %sriov_wreg154 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %sriov_wreg154, align 4
  %tobool155.not = icmp eq ptr %96, null
  br i1 %tobool155.not, label %land.lhs.true150.cond.false166_crit_edge, label %cond.true156

land.lhs.true150.cond.false166_crit_edge:         ; preds = %land.lhs.true150
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false166

cond.true156:                                     ; preds = %land.lhs.true150
  call void @__sanitizer_cov_trace_pc() #17
  %97 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %arrayidx.i, align 8
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %98, align 4
  %add165 = add i32 %100, 2147
  tail call void %96(ptr noundef %adev, i32 noundef %add165, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end172

cond.false166:                                    ; preds = %land.lhs.true150.cond.false166_crit_edge, %land.lhs.true145.cond.false166_crit_edge, %cond.end140.cond.false166_crit_edge
  %101 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx.i, align 8
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %102, align 4
  %add171 = add i32 %104, 2147
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add171, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false166, %cond.true156
  %105 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %virt.i, align 8
  %and175 = and i32 %106, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and175)
  %tobool176.not = icmp eq i32 %and175, 0
  br i1 %tobool176.not, label %cond.end172.cond.false198_crit_edge, label %land.lhs.true177

cond.end172.cond.false198_crit_edge:              ; preds = %cond.end172
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false198

land.lhs.true177:                                 ; preds = %cond.end172
  %107 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %funcs.i, align 4
  %tobool181.not = icmp eq ptr %108, null
  br i1 %tobool181.not, label %land.lhs.true177.cond.false198_crit_edge, label %land.lhs.true182

land.lhs.true177.cond.false198_crit_edge:         ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false198

land.lhs.true182:                                 ; preds = %land.lhs.true177
  %sriov_wreg186 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %108, i32 0, i32 12
  %109 = ptrtoint ptr %sriov_wreg186 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %sriov_wreg186, align 4
  %tobool187.not = icmp eq ptr %110, null
  br i1 %tobool187.not, label %land.lhs.true182.cond.false198_crit_edge, label %cond.true188

land.lhs.true182.cond.false198_crit_edge:         ; preds = %land.lhs.true182
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false198

cond.true188:                                     ; preds = %land.lhs.true182
  call void @__sanitizer_cov_trace_pc() #17
  %111 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %arrayidx.i, align 8
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %112, align 4
  %add197 = add i32 %114, 2063
  tail call void %110(ptr noundef %adev, i32 noundef %add197, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end204

cond.false198:                                    ; preds = %land.lhs.true182.cond.false198_crit_edge, %land.lhs.true177.cond.false198_crit_edge, %cond.end172.cond.false198_crit_edge
  %115 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %arrayidx.i, align 8
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %116, align 4
  %add203 = add i32 %118, 2063
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add203, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end204

cond.end204:                                      ; preds = %cond.false198, %cond.true188
  %119 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %virt.i, align 8
  %and207 = and i32 %120, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and207)
  %tobool208.not = icmp eq i32 %and207, 0
  br i1 %tobool208.not, label %cond.end204.cond.false230_crit_edge, label %land.lhs.true209

cond.end204.cond.false230_crit_edge:              ; preds = %cond.end204
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false230

land.lhs.true209:                                 ; preds = %cond.end204
  %121 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %funcs.i, align 4
  %tobool213.not = icmp eq ptr %122, null
  br i1 %tobool213.not, label %land.lhs.true209.cond.false230_crit_edge, label %land.lhs.true214

land.lhs.true209.cond.false230_crit_edge:         ; preds = %land.lhs.true209
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false230

land.lhs.true214:                                 ; preds = %land.lhs.true209
  %sriov_wreg218 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %122, i32 0, i32 12
  %123 = ptrtoint ptr %sriov_wreg218 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %sriov_wreg218, align 4
  %tobool219.not = icmp eq ptr %124, null
  br i1 %tobool219.not, label %land.lhs.true214.cond.false230_crit_edge, label %cond.true220

land.lhs.true214.cond.false230_crit_edge:         ; preds = %land.lhs.true214
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false230

cond.true220:                                     ; preds = %land.lhs.true214
  call void @__sanitizer_cov_trace_pc() #17
  %125 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %arrayidx.i, align 8
  %127 = ptrtoint ptr %126 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %126, align 4
  %add229 = add i32 %128, 2065
  tail call void %124(ptr noundef %adev, i32 noundef %add229, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end236

cond.false230:                                    ; preds = %land.lhs.true214.cond.false230_crit_edge, %land.lhs.true209.cond.false230_crit_edge, %cond.end204.cond.false230_crit_edge
  %129 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %arrayidx.i, align 8
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %130, align 4
  %add235 = add i32 %132, 2065
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add235, i32 noundef 0, i32 noundef 0) #15
  br label %cond.end236

cond.end236:                                      ; preds = %cond.false230, %cond.true220
  %133 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %virt.i, align 8
  %and239 = and i32 %134, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and239)
  %tobool240.not = icmp eq i32 %and239, 0
  br i1 %tobool240.not, label %cond.end236.cond.false262_crit_edge, label %land.lhs.true241

cond.end236.cond.false262_crit_edge:              ; preds = %cond.end236
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false262

land.lhs.true241:                                 ; preds = %cond.end236
  %135 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %funcs.i, align 4
  %tobool245.not = icmp eq ptr %136, null
  br i1 %tobool245.not, label %land.lhs.true241.cond.false262_crit_edge, label %land.lhs.true246

land.lhs.true241.cond.false262_crit_edge:         ; preds = %land.lhs.true241
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false262

land.lhs.true246:                                 ; preds = %land.lhs.true241
  %sriov_wreg250 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %136, i32 0, i32 12
  %137 = ptrtoint ptr %sriov_wreg250 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %sriov_wreg250, align 4
  %tobool251.not = icmp eq ptr %138, null
  br i1 %tobool251.not, label %land.lhs.true246.cond.false262_crit_edge, label %cond.true252

land.lhs.true246.cond.false262_crit_edge:         ; preds = %land.lhs.true246
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false262

cond.true252:                                     ; preds = %land.lhs.true246
  call void @__sanitizer_cov_trace_pc() #17
  %139 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %arrayidx.i, align 8
  %141 = ptrtoint ptr %140 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %140, align 4
  %add261 = add i32 %142, 2062
  tail call void %138(ptr noundef %adev, i32 noundef %add261, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end268

cond.false262:                                    ; preds = %land.lhs.true246.cond.false262_crit_edge, %land.lhs.true241.cond.false262_crit_edge, %cond.end236.cond.false262_crit_edge
  %143 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %arrayidx.i, align 8
  %145 = ptrtoint ptr %144 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %144, align 4
  %add267 = add i32 %146, 2062
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add267, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end268

cond.end268:                                      ; preds = %cond.false262, %cond.true252
  %147 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %virt.i, align 8
  %and271 = and i32 %148, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and271)
  %tobool272.not = icmp eq i32 %and271, 0
  br i1 %tobool272.not, label %cond.end268.cond.false294_crit_edge, label %land.lhs.true273

cond.end268.cond.false294_crit_edge:              ; preds = %cond.end268
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false294

land.lhs.true273:                                 ; preds = %cond.end268
  %149 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %funcs.i, align 4
  %tobool277.not = icmp eq ptr %150, null
  br i1 %tobool277.not, label %land.lhs.true273.cond.false294_crit_edge, label %land.lhs.true278

land.lhs.true273.cond.false294_crit_edge:         ; preds = %land.lhs.true273
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false294

land.lhs.true278:                                 ; preds = %land.lhs.true273
  %sriov_wreg282 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %150, i32 0, i32 12
  %151 = ptrtoint ptr %sriov_wreg282 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %sriov_wreg282, align 4
  %tobool283.not = icmp eq ptr %152, null
  br i1 %tobool283.not, label %land.lhs.true278.cond.false294_crit_edge, label %cond.true284

land.lhs.true278.cond.false294_crit_edge:         ; preds = %land.lhs.true278
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false294

cond.true284:                                     ; preds = %land.lhs.true278
  call void @__sanitizer_cov_trace_pc() #17
  %153 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %arrayidx.i, align 8
  %155 = ptrtoint ptr %154 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %154, align 4
  %add293 = add i32 %156, 2064
  tail call void %152(ptr noundef %adev, i32 noundef %add293, i32 noundef 0, i32 noundef 0, i32 noundef 1) #15
  br label %for.body303.preheader

cond.false294:                                    ; preds = %land.lhs.true278.cond.false294_crit_edge, %land.lhs.true273.cond.false294_crit_edge, %cond.end268.cond.false294_crit_edge
  %157 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %arrayidx.i, align 8
  %159 = ptrtoint ptr %158 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %158, align 4
  %add299 = add i32 %160, 2064
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add299, i32 noundef 0, i32 noundef 0) #15
  br label %for.body303.preheader

for.body303.preheader:                            ; preds = %cond.false294, %cond.true284
  br label %for.body303

for.body303:                                      ; preds = %for.inc369.for.body303_crit_edge, %for.body303.preheader
  %i.1972 = phi i32 [ %inc370, %for.inc369.for.body303_crit_edge ], [ 0, %for.body303.preheader ]
  %161 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %virt.i, align 8
  %and306 = and i32 %162, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and306)
  %tobool307.not = icmp eq i32 %and306, 0
  br i1 %tobool307.not, label %for.body303.cond.false329_crit_edge, label %land.lhs.true308

for.body303.cond.false329_crit_edge:              ; preds = %for.body303
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false329

land.lhs.true308:                                 ; preds = %for.body303
  %163 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %funcs.i, align 4
  %tobool312.not = icmp eq ptr %164, null
  br i1 %tobool312.not, label %land.lhs.true308.cond.false329_crit_edge, label %land.lhs.true313

land.lhs.true308.cond.false329_crit_edge:         ; preds = %land.lhs.true308
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false329

land.lhs.true313:                                 ; preds = %land.lhs.true308
  %sriov_wreg317 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %164, i32 0, i32 12
  %165 = ptrtoint ptr %sriov_wreg317 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %sriov_wreg317, align 4
  %tobool318.not = icmp eq ptr %166, null
  br i1 %tobool318.not, label %land.lhs.true313.cond.false329_crit_edge, label %cond.true319

land.lhs.true313.cond.false329_crit_edge:         ; preds = %land.lhs.true313
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false329

cond.true319:                                     ; preds = %land.lhs.true313
  call void @__sanitizer_cov_trace_pc() #17
  %167 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %arrayidx.i, align 8
  %169 = ptrtoint ptr %168 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %168, align 4
  %add328 = add i32 %170, 2144
  tail call void %166(ptr noundef %adev, i32 noundef %add328, i32 noundef %i.1972, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end335

cond.false329:                                    ; preds = %land.lhs.true313.cond.false329_crit_edge, %land.lhs.true308.cond.false329_crit_edge, %for.body303.cond.false329_crit_edge
  %171 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %arrayidx.i, align 8
  %173 = ptrtoint ptr %172 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %172, align 4
  %add334 = add i32 %174, 2144
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add334, i32 noundef %i.1972, i32 noundef 0) #15
  br label %cond.end335

cond.end335:                                      ; preds = %cond.false329, %cond.true319
  %175 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %virt.i, align 8
  %and338 = and i32 %176, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and338)
  %tobool339.not = icmp eq i32 %and338, 0
  br i1 %tobool339.not, label %cond.end335.cond.false361_crit_edge, label %land.lhs.true340

cond.end335.cond.false361_crit_edge:              ; preds = %cond.end335
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false361

land.lhs.true340:                                 ; preds = %cond.end335
  %177 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %funcs.i, align 4
  %tobool344.not = icmp eq ptr %178, null
  br i1 %tobool344.not, label %land.lhs.true340.cond.false361_crit_edge, label %land.lhs.true345

land.lhs.true340.cond.false361_crit_edge:         ; preds = %land.lhs.true340
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false361

land.lhs.true345:                                 ; preds = %land.lhs.true340
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %178, i32 0, i32 13
  %179 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %sriov_rreg, align 4
  %tobool349.not = icmp eq ptr %180, null
  br i1 %tobool349.not, label %land.lhs.true345.cond.false361_crit_edge, label %cond.true350

land.lhs.true345.cond.false361_crit_edge:         ; preds = %land.lhs.true345
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false361

cond.true350:                                     ; preds = %land.lhs.true345
  call void @__sanitizer_cov_trace_pc() #17
  %181 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %arrayidx.i, align 8
  %183 = ptrtoint ptr %182 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %182, align 4
  %add359 = add i32 %184, 2146
  %call360 = tail call i32 %180(ptr noundef %adev, i32 noundef %add359, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc369

cond.false361:                                    ; preds = %land.lhs.true345.cond.false361_crit_edge, %land.lhs.true340.cond.false361_crit_edge, %cond.end335.cond.false361_crit_edge
  %185 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %arrayidx.i, align 8
  %187 = ptrtoint ptr %186 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %186, align 4
  %add366 = add i32 %188, 2146
  %call367 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add366, i32 noundef 0) #15
  br label %for.inc369

for.inc369:                                       ; preds = %cond.false361, %cond.true350
  %inc370 = add nuw nsw i32 %i.1972, 1
  %exitcond987.not = icmp eq i32 %inc370, 16
  br i1 %exitcond987.not, label %for.inc369.for.body374_crit_edge, label %for.inc369.for.body303_crit_edge

for.inc369.for.body303_crit_edge:                 ; preds = %for.inc369
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body303

for.inc369.for.body374_crit_edge:                 ; preds = %for.inc369
  br label %for.body374

for.body374:                                      ; preds = %for.inc442.for.body374_crit_edge, %for.inc369.for.body374_crit_edge
  %i.2975 = phi i32 [ %inc443, %for.inc442.for.body374_crit_edge ], [ 0, %for.inc369.for.body374_crit_edge ]
  %189 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %virt.i, align 8
  %and377 = and i32 %190, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and377)
  %tobool378.not = icmp eq i32 %and377, 0
  br i1 %tobool378.not, label %for.body374.cond.false400_crit_edge, label %land.lhs.true379

for.body374.cond.false400_crit_edge:              ; preds = %for.body374
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false400

land.lhs.true379:                                 ; preds = %for.body374
  %191 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %funcs.i, align 4
  %tobool383.not = icmp eq ptr %192, null
  br i1 %tobool383.not, label %land.lhs.true379.cond.false400_crit_edge, label %land.lhs.true384

land.lhs.true379.cond.false400_crit_edge:         ; preds = %land.lhs.true379
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false400

land.lhs.true384:                                 ; preds = %land.lhs.true379
  %sriov_wreg388 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %192, i32 0, i32 12
  %193 = ptrtoint ptr %sriov_wreg388 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %sriov_wreg388, align 4
  %tobool389.not = icmp eq ptr %194, null
  br i1 %tobool389.not, label %land.lhs.true384.cond.false400_crit_edge, label %cond.true390

land.lhs.true384.cond.false400_crit_edge:         ; preds = %land.lhs.true384
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false400

cond.true390:                                     ; preds = %land.lhs.true384
  call void @__sanitizer_cov_trace_pc() #17
  %195 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %arrayidx.i, align 8
  %197 = ptrtoint ptr %196 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %196, align 4
  %add399 = add i32 %198, 2145
  tail call void %194(ptr noundef %adev, i32 noundef %add399, i32 noundef %i.2975, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end406

cond.false400:                                    ; preds = %land.lhs.true384.cond.false400_crit_edge, %land.lhs.true379.cond.false400_crit_edge, %for.body374.cond.false400_crit_edge
  %199 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %arrayidx.i, align 8
  %201 = ptrtoint ptr %200 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %200, align 4
  %add405 = add i32 %202, 2145
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add405, i32 noundef %i.2975, i32 noundef 0) #15
  br label %cond.end406

cond.end406:                                      ; preds = %cond.false400, %cond.true390
  %203 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %virt.i, align 8
  %and409 = and i32 %204, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and409)
  %tobool410.not = icmp eq i32 %and409, 0
  br i1 %tobool410.not, label %cond.end406.cond.false433_crit_edge, label %land.lhs.true411

cond.end406.cond.false433_crit_edge:              ; preds = %cond.end406
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false433

land.lhs.true411:                                 ; preds = %cond.end406
  %205 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %funcs.i, align 4
  %tobool415.not = icmp eq ptr %206, null
  br i1 %tobool415.not, label %land.lhs.true411.cond.false433_crit_edge, label %land.lhs.true416

land.lhs.true411.cond.false433_crit_edge:         ; preds = %land.lhs.true411
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false433

land.lhs.true416:                                 ; preds = %land.lhs.true411
  %sriov_rreg420 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %206, i32 0, i32 13
  %207 = ptrtoint ptr %sriov_rreg420 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %sriov_rreg420, align 4
  %tobool421.not = icmp eq ptr %208, null
  br i1 %tobool421.not, label %land.lhs.true416.cond.false433_crit_edge, label %cond.true422

land.lhs.true416.cond.false433_crit_edge:         ; preds = %land.lhs.true416
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false433

cond.true422:                                     ; preds = %land.lhs.true416
  call void @__sanitizer_cov_trace_pc() #17
  %209 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %arrayidx.i, align 8
  %211 = ptrtoint ptr %210 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %210, align 4
  %add431 = add i32 %212, 2147
  %call432 = tail call i32 %208(ptr noundef %adev, i32 noundef %add431, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc442

cond.false433:                                    ; preds = %land.lhs.true416.cond.false433_crit_edge, %land.lhs.true411.cond.false433_crit_edge, %cond.end406.cond.false433_crit_edge
  %213 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %arrayidx.i, align 8
  %215 = ptrtoint ptr %214 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %214, align 4
  %add438 = add i32 %216, 2147
  %call439 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add438, i32 noundef 0) #15
  br label %for.inc442

for.inc442:                                       ; preds = %cond.false433, %cond.true422
  %inc443 = add nuw nsw i32 %i.2975, 1
  %exitcond988.not = icmp eq i32 %inc443, 7
  br i1 %exitcond988.not, label %for.inc442.for.body447_crit_edge, label %for.inc442.for.body374_crit_edge

for.inc442.for.body374_crit_edge:                 ; preds = %for.inc442
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body374

for.inc442.for.body447_crit_edge:                 ; preds = %for.inc442
  br label %for.body447

for.body447:                                      ; preds = %for.inc515.for.body447_crit_edge, %for.inc442.for.body447_crit_edge
  %i.3978 = phi i32 [ %inc516, %for.inc515.for.body447_crit_edge ], [ 0, %for.inc442.for.body447_crit_edge ]
  %217 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %virt.i, align 8
  %and450 = and i32 %218, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and450)
  %tobool451.not = icmp eq i32 %and450, 0
  br i1 %tobool451.not, label %for.body447.cond.false473_crit_edge, label %land.lhs.true452

for.body447.cond.false473_crit_edge:              ; preds = %for.body447
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false473

land.lhs.true452:                                 ; preds = %for.body447
  %219 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %funcs.i, align 4
  %tobool456.not = icmp eq ptr %220, null
  br i1 %tobool456.not, label %land.lhs.true452.cond.false473_crit_edge, label %land.lhs.true457

land.lhs.true452.cond.false473_crit_edge:         ; preds = %land.lhs.true452
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false473

land.lhs.true457:                                 ; preds = %land.lhs.true452
  %sriov_wreg461 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %220, i32 0, i32 12
  %221 = ptrtoint ptr %sriov_wreg461 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %sriov_wreg461, align 4
  %tobool462.not = icmp eq ptr %222, null
  br i1 %tobool462.not, label %land.lhs.true457.cond.false473_crit_edge, label %cond.true463

land.lhs.true457.cond.false473_crit_edge:         ; preds = %land.lhs.true457
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false473

cond.true463:                                     ; preds = %land.lhs.true457
  call void @__sanitizer_cov_trace_pc() #17
  %223 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %arrayidx.i, align 8
  %225 = ptrtoint ptr %224 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %224, align 4
  %add472 = add i32 %226, 2063
  tail call void %222(ptr noundef %adev, i32 noundef %add472, i32 noundef %i.3978, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end479

cond.false473:                                    ; preds = %land.lhs.true457.cond.false473_crit_edge, %land.lhs.true452.cond.false473_crit_edge, %for.body447.cond.false473_crit_edge
  %227 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %arrayidx.i, align 8
  %229 = ptrtoint ptr %228 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %228, align 4
  %add478 = add i32 %230, 2063
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add478, i32 noundef %i.3978, i32 noundef 0) #15
  br label %cond.end479

cond.end479:                                      ; preds = %cond.false473, %cond.true463
  %231 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %virt.i, align 8
  %and482 = and i32 %232, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and482)
  %tobool483.not = icmp eq i32 %and482, 0
  br i1 %tobool483.not, label %cond.end479.cond.false506_crit_edge, label %land.lhs.true484

cond.end479.cond.false506_crit_edge:              ; preds = %cond.end479
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false506

land.lhs.true484:                                 ; preds = %cond.end479
  %233 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %funcs.i, align 4
  %tobool488.not = icmp eq ptr %234, null
  br i1 %tobool488.not, label %land.lhs.true484.cond.false506_crit_edge, label %land.lhs.true489

land.lhs.true484.cond.false506_crit_edge:         ; preds = %land.lhs.true484
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false506

land.lhs.true489:                                 ; preds = %land.lhs.true484
  %sriov_rreg493 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %234, i32 0, i32 13
  %235 = ptrtoint ptr %sriov_rreg493 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %sriov_rreg493, align 4
  %tobool494.not = icmp eq ptr %236, null
  br i1 %tobool494.not, label %land.lhs.true489.cond.false506_crit_edge, label %cond.true495

land.lhs.true489.cond.false506_crit_edge:         ; preds = %land.lhs.true489
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false506

cond.true495:                                     ; preds = %land.lhs.true489
  call void @__sanitizer_cov_trace_pc() #17
  %237 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %arrayidx.i, align 8
  %239 = ptrtoint ptr %238 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %238, align 4
  %add504 = add i32 %240, 2065
  %call505 = tail call i32 %236(ptr noundef %adev, i32 noundef %add504, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc515

cond.false506:                                    ; preds = %land.lhs.true489.cond.false506_crit_edge, %land.lhs.true484.cond.false506_crit_edge, %cond.end479.cond.false506_crit_edge
  %241 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %arrayidx.i, align 8
  %243 = ptrtoint ptr %242 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %242, align 4
  %add511 = add i32 %244, 2065
  %call512 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add511, i32 noundef 0) #15
  br label %for.inc515

for.inc515:                                       ; preds = %cond.false506, %cond.true495
  %inc516 = add nuw nsw i32 %i.3978, 1
  %exitcond989.not = icmp eq i32 %inc516, 4
  br i1 %exitcond989.not, label %for.inc515.for.body520_crit_edge, label %for.inc515.for.body447_crit_edge

for.inc515.for.body447_crit_edge:                 ; preds = %for.inc515
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body447

for.inc515.for.body520_crit_edge:                 ; preds = %for.inc515
  br label %for.body520

for.body520:                                      ; preds = %for.inc588.for.body520_crit_edge, %for.inc515.for.body520_crit_edge
  %i.4981 = phi i32 [ %inc589, %for.inc588.for.body520_crit_edge ], [ 0, %for.inc515.for.body520_crit_edge ]
  %245 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %virt.i, align 8
  %and523 = and i32 %246, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and523)
  %tobool524.not = icmp eq i32 %and523, 0
  br i1 %tobool524.not, label %for.body520.cond.false546_crit_edge, label %land.lhs.true525

for.body520.cond.false546_crit_edge:              ; preds = %for.body520
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false546

land.lhs.true525:                                 ; preds = %for.body520
  %247 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %funcs.i, align 4
  %tobool529.not = icmp eq ptr %248, null
  br i1 %tobool529.not, label %land.lhs.true525.cond.false546_crit_edge, label %land.lhs.true530

land.lhs.true525.cond.false546_crit_edge:         ; preds = %land.lhs.true525
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false546

land.lhs.true530:                                 ; preds = %land.lhs.true525
  %sriov_wreg534 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %248, i32 0, i32 12
  %249 = ptrtoint ptr %sriov_wreg534 to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %sriov_wreg534, align 4
  %tobool535.not = icmp eq ptr %250, null
  br i1 %tobool535.not, label %land.lhs.true530.cond.false546_crit_edge, label %cond.true536

land.lhs.true530.cond.false546_crit_edge:         ; preds = %land.lhs.true530
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false546

cond.true536:                                     ; preds = %land.lhs.true530
  call void @__sanitizer_cov_trace_pc() #17
  %251 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %arrayidx.i, align 8
  %253 = ptrtoint ptr %252 to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %252, align 4
  %add545 = add i32 %254, 2062
  tail call void %250(ptr noundef %adev, i32 noundef %add545, i32 noundef %i.4981, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end552

cond.false546:                                    ; preds = %land.lhs.true530.cond.false546_crit_edge, %land.lhs.true525.cond.false546_crit_edge, %for.body520.cond.false546_crit_edge
  %255 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %arrayidx.i, align 8
  %257 = ptrtoint ptr %256 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %256, align 4
  %add551 = add i32 %258, 2062
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add551, i32 noundef %i.4981, i32 noundef 0) #15
  br label %cond.end552

cond.end552:                                      ; preds = %cond.false546, %cond.true536
  %259 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %virt.i, align 8
  %and555 = and i32 %260, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and555)
  %tobool556.not = icmp eq i32 %and555, 0
  br i1 %tobool556.not, label %cond.end552.cond.false579_crit_edge, label %land.lhs.true557

cond.end552.cond.false579_crit_edge:              ; preds = %cond.end552
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false579

land.lhs.true557:                                 ; preds = %cond.end552
  %261 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %funcs.i, align 4
  %tobool561.not = icmp eq ptr %262, null
  br i1 %tobool561.not, label %land.lhs.true557.cond.false579_crit_edge, label %land.lhs.true562

land.lhs.true557.cond.false579_crit_edge:         ; preds = %land.lhs.true557
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false579

land.lhs.true562:                                 ; preds = %land.lhs.true557
  %sriov_rreg566 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %262, i32 0, i32 13
  %263 = ptrtoint ptr %sriov_rreg566 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %sriov_rreg566, align 4
  %tobool567.not = icmp eq ptr %264, null
  br i1 %tobool567.not, label %land.lhs.true562.cond.false579_crit_edge, label %cond.true568

land.lhs.true562.cond.false579_crit_edge:         ; preds = %land.lhs.true562
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false579

cond.true568:                                     ; preds = %land.lhs.true562
  call void @__sanitizer_cov_trace_pc() #17
  %265 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %arrayidx.i, align 8
  %267 = ptrtoint ptr %266 to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %266, align 4
  %add577 = add i32 %268, 2064
  %call578 = tail call i32 %264(ptr noundef %adev, i32 noundef %add577, i32 noundef 0, i32 noundef 1) #15
  br label %for.inc588

cond.false579:                                    ; preds = %land.lhs.true562.cond.false579_crit_edge, %land.lhs.true557.cond.false579_crit_edge, %cond.end552.cond.false579_crit_edge
  %269 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %arrayidx.i, align 8
  %271 = ptrtoint ptr %270 to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %270, align 4
  %add584 = add i32 %272, 2064
  %call585 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add584, i32 noundef 0) #15
  br label %for.inc588

for.inc588:                                       ; preds = %cond.false579, %cond.true568
  %inc589 = add nuw nsw i32 %i.4981, 1
  %exitcond990.not = icmp eq i32 %inc589, 32
  br i1 %exitcond990.not, label %for.end590, label %for.inc588.for.body520_crit_edge

for.inc588.for.body520_crit_edge:                 ; preds = %for.inc588
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body520

for.end590:                                       ; preds = %for.inc588
  %273 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %virt.i, align 8
  %and593 = and i32 %274, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and593)
  %tobool594.not = icmp eq i32 %and593, 0
  br i1 %tobool594.not, label %for.end590.cond.false616_crit_edge, label %land.lhs.true595

for.end590.cond.false616_crit_edge:               ; preds = %for.end590
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false616

land.lhs.true595:                                 ; preds = %for.end590
  %275 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %funcs.i, align 4
  %tobool599.not = icmp eq ptr %276, null
  br i1 %tobool599.not, label %land.lhs.true595.cond.false616_crit_edge, label %land.lhs.true600

land.lhs.true595.cond.false616_crit_edge:         ; preds = %land.lhs.true595
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false616

land.lhs.true600:                                 ; preds = %land.lhs.true595
  %sriov_wreg604 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %276, i32 0, i32 12
  %277 = ptrtoint ptr %sriov_wreg604 to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load ptr, ptr %sriov_wreg604, align 4
  %tobool605.not = icmp eq ptr %278, null
  br i1 %tobool605.not, label %land.lhs.true600.cond.false616_crit_edge, label %cond.true606

land.lhs.true600.cond.false616_crit_edge:         ; preds = %land.lhs.true600
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false616

cond.true606:                                     ; preds = %land.lhs.true600
  call void @__sanitizer_cov_trace_pc() #17
  %279 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load ptr, ptr %arrayidx.i, align 8
  %281 = ptrtoint ptr %280 to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load i32, ptr %280, align 4
  %add615 = add i32 %282, 2144
  tail call void %278(ptr noundef %adev, i32 noundef %add615, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end622

cond.false616:                                    ; preds = %land.lhs.true600.cond.false616_crit_edge, %land.lhs.true595.cond.false616_crit_edge, %for.end590.cond.false616_crit_edge
  %283 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %arrayidx.i, align 8
  %285 = ptrtoint ptr %284 to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load i32, ptr %284, align 4
  %add621 = add i32 %286, 2144
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add621, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end622

cond.end622:                                      ; preds = %cond.false616, %cond.true606
  %287 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load i32, ptr %virt.i, align 8
  %and625 = and i32 %288, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and625)
  %tobool626.not = icmp eq i32 %and625, 0
  br i1 %tobool626.not, label %cond.end622.cond.false648_crit_edge, label %land.lhs.true627

cond.end622.cond.false648_crit_edge:              ; preds = %cond.end622
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false648

land.lhs.true627:                                 ; preds = %cond.end622
  %289 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %funcs.i, align 4
  %tobool631.not = icmp eq ptr %290, null
  br i1 %tobool631.not, label %land.lhs.true627.cond.false648_crit_edge, label %land.lhs.true632

land.lhs.true627.cond.false648_crit_edge:         ; preds = %land.lhs.true627
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false648

land.lhs.true632:                                 ; preds = %land.lhs.true627
  %sriov_wreg636 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %290, i32 0, i32 12
  %291 = ptrtoint ptr %sriov_wreg636 to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %sriov_wreg636, align 4
  %tobool637.not = icmp eq ptr %292, null
  br i1 %tobool637.not, label %land.lhs.true632.cond.false648_crit_edge, label %cond.true638

land.lhs.true632.cond.false648_crit_edge:         ; preds = %land.lhs.true632
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false648

cond.true638:                                     ; preds = %land.lhs.true632
  call void @__sanitizer_cov_trace_pc() #17
  %293 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load ptr, ptr %arrayidx.i, align 8
  %295 = ptrtoint ptr %294 to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load i32, ptr %294, align 4
  %add647 = add i32 %296, 2145
  tail call void %292(ptr noundef %adev, i32 noundef %add647, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end654

cond.false648:                                    ; preds = %land.lhs.true632.cond.false648_crit_edge, %land.lhs.true627.cond.false648_crit_edge, %cond.end622.cond.false648_crit_edge
  %297 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load ptr, ptr %arrayidx.i, align 8
  %299 = ptrtoint ptr %298 to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load i32, ptr %298, align 4
  %add653 = add i32 %300, 2145
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add653, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end654

cond.end654:                                      ; preds = %cond.false648, %cond.true638
  %301 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %virt.i, align 8
  %and657 = and i32 %302, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and657)
  %tobool658.not = icmp eq i32 %and657, 0
  br i1 %tobool658.not, label %cond.end654.cond.false680_crit_edge, label %land.lhs.true659

cond.end654.cond.false680_crit_edge:              ; preds = %cond.end654
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false680

land.lhs.true659:                                 ; preds = %cond.end654
  %303 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load ptr, ptr %funcs.i, align 4
  %tobool663.not = icmp eq ptr %304, null
  br i1 %tobool663.not, label %land.lhs.true659.cond.false680_crit_edge, label %land.lhs.true664

land.lhs.true659.cond.false680_crit_edge:         ; preds = %land.lhs.true659
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false680

land.lhs.true664:                                 ; preds = %land.lhs.true659
  %sriov_wreg668 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %304, i32 0, i32 12
  %305 = ptrtoint ptr %sriov_wreg668 to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %sriov_wreg668, align 4
  %tobool669.not = icmp eq ptr %306, null
  br i1 %tobool669.not, label %land.lhs.true664.cond.false680_crit_edge, label %cond.true670

land.lhs.true664.cond.false680_crit_edge:         ; preds = %land.lhs.true664
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false680

cond.true670:                                     ; preds = %land.lhs.true664
  call void @__sanitizer_cov_trace_pc() #17
  %307 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load ptr, ptr %arrayidx.i, align 8
  %309 = ptrtoint ptr %308 to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load i32, ptr %308, align 4
  %add679 = add i32 %310, 2063
  tail call void %306(ptr noundef %adev, i32 noundef %add679, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end686

cond.false680:                                    ; preds = %land.lhs.true664.cond.false680_crit_edge, %land.lhs.true659.cond.false680_crit_edge, %cond.end654.cond.false680_crit_edge
  %311 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %arrayidx.i, align 8
  %313 = ptrtoint ptr %312 to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %312, align 4
  %add685 = add i32 %314, 2063
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add685, i32 noundef 255, i32 noundef 0) #15
  br label %cond.end686

cond.end686:                                      ; preds = %cond.false680, %cond.true670
  %315 = ptrtoint ptr %virt.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %virt.i, align 8
  %and689 = and i32 %316, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and689)
  %tobool690.not = icmp eq i32 %and689, 0
  br i1 %tobool690.not, label %cond.end686.cond.false712_crit_edge, label %land.lhs.true691

cond.end686.cond.false712_crit_edge:              ; preds = %cond.end686
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false712

land.lhs.true691:                                 ; preds = %cond.end686
  %317 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load ptr, ptr %funcs.i, align 4
  %tobool695.not = icmp eq ptr %318, null
  br i1 %tobool695.not, label %land.lhs.true691.cond.false712_crit_edge, label %land.lhs.true696

land.lhs.true691.cond.false712_crit_edge:         ; preds = %land.lhs.true691
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false712

land.lhs.true696:                                 ; preds = %land.lhs.true691
  %sriov_wreg700 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %318, i32 0, i32 12
  %319 = ptrtoint ptr %sriov_wreg700 to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %sriov_wreg700, align 4
  %tobool701.not = icmp eq ptr %320, null
  br i1 %tobool701.not, label %land.lhs.true696.cond.false712_crit_edge, label %cond.true702

land.lhs.true696.cond.false712_crit_edge:         ; preds = %land.lhs.true696
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false712

cond.true702:                                     ; preds = %land.lhs.true696
  call void @__sanitizer_cov_trace_pc() #17
  %321 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load ptr, ptr %arrayidx.i, align 8
  %323 = ptrtoint ptr %322 to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %322, align 4
  %add711 = add i32 %324, 2062
  tail call void %320(ptr noundef %adev, i32 noundef %add711, i32 noundef 255, i32 noundef 0, i32 noundef 1) #15
  br label %cleanup

cond.false712:                                    ; preds = %land.lhs.true696.cond.false712_crit_edge, %land.lhs.true691.cond.false712_crit_edge, %cond.end686.cond.false712_crit_edge
  %325 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %arrayidx.i, align 8
  %327 = ptrtoint ptr %326 to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %326, align 4
  %add717 = add i32 %328, 2062
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add717, i32 noundef 255, i32 noundef 0) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.false712, %cond.true702, %amdgpu_ras_is_supported.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @psp_ras_trigger_error(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ring_fini(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_mqd_sw_fini(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_kiq_free_ring(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_kiq_fini(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @gfx_v9_4_2_set_power_brake_sequence(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @soc15_program_register_sequence(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @gfx_v9_4_2_init_golden_registers(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_parse_disable_cu(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ring_test_helper(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_ucode_print_gfx_hdr(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_cp_gfx_enable(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %0 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %virt, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %2 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %funcs, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true2

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true2:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sriov_rreg, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %land.lhs.true2.cond.false_crit_edge, label %cond.true

land.lhs.true2.cond.false_crit_edge:              ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add = add i32 %9, 438
  %call = tail call i32 %5(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true2.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx14 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add17 = add i32 %13, 438
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add17, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call18, %cond.false ]
  %and19 = and i32 %cond, -352321537
  %or28 = select i1 %enable, i32 0, i32 352321536
  %or34 = or i32 %or28, %and19
  %arrayidx36 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %14 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx36, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add39 = add i32 %17, 438
  %18 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt, align 8
  %and42 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and42)
  %tobool43.not = icmp eq i32 %and42, 0
  br i1 %tobool43.not, label %cond.end.cond.false59_crit_edge, label %land.lhs.true44

cond.end.cond.false59_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false59

land.lhs.true44:                                  ; preds = %cond.end
  %funcs47 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs47 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs47, align 4
  %tobool48.not = icmp eq ptr %21, null
  br i1 %tobool48.not, label %land.lhs.true44.cond.false59_crit_edge, label %land.lhs.true49

land.lhs.true44.cond.false59_crit_edge:           ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false59

land.lhs.true49:                                  ; preds = %land.lhs.true44
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_wreg, align 4
  %tobool53.not = icmp eq ptr %23, null
  br i1 %tobool53.not, label %land.lhs.true49.cond.false59_crit_edge, label %cond.true54

land.lhs.true49.cond.false59_crit_edge:           ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false59

cond.true54:                                      ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %23(ptr noundef %adev, i32 noundef %add39, i32 noundef %or34, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end60

cond.false59:                                     ; preds = %land.lhs.true49.cond.false59_crit_edge, %land.lhs.true44.cond.false59_crit_edge, %cond.end.cond.false59_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add39, i32 noundef %or34, i32 noundef 0) #15
  br label %cond.end60

cond.end60:                                       ; preds = %cond.false59, %cond.true54
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %24 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %24(i32 noundef 10737400) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_bo_kmap(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ww_mutex_lock_interruptible(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_kiq_init_register(ptr nocapture noundef readonly %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %mqd_ptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 21
  %2 = ptrtoint ptr %mqd_ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mqd_ptr, align 8
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %4 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %virt, align 8
  %and = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cond.false77.sink.split_crit_edge, label %land.lhs.true

entry.cond.false77.sink.split_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %6 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %funcs, align 4
  %tobool2.not = icmp eq ptr %7, null
  br i1 %tobool2.not, label %land.lhs.true.cond.false77.sink.split_crit_edge, label %land.lhs.true3

land.lhs.true.cond.false77.sink.split_crit_edge:  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77.sink.split

land.lhs.true3:                                   ; preds = %land.lhs.true
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sriov_wreg, align 4
  %tobool7.not = icmp eq ptr %9, null
  br i1 %tobool7.not, label %land.lhs.true55, label %cond.true

cond.true:                                        ; preds = %land.lhs.true3
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 8
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %add = add i32 %13, 4227
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %7, i32 0, i32 13
  %14 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sriov_rreg, align 4
  %tobool27.not = icmp eq ptr %15, null
  br i1 %tobool27.not, label %cond.false, label %cond.true28

cond.true28:                                      ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 %15(ptr noundef %1, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #17
  %call43 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true28
  %cond = phi i32 [ %call, %cond.true28 ], [ %call43, %cond.false ]
  %and44 = and i32 %cond, 2147483647
  tail call void %9(ptr noundef %1, i32 noundef %add, i32 noundef %and44, i32 noundef 0, i32 noundef 1) #15
  br label %do.body

land.lhs.true55:                                  ; preds = %land.lhs.true3
  %16 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr = load ptr, ptr %funcs, align 4
  %arrayidx471 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %17 = ptrtoint ptr %arrayidx471 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx471, align 8
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %add502 = add i32 %20, 4227
  %tobool59.not = icmp eq ptr %.pr, null
  br i1 %tobool59.not, label %land.lhs.true55.cond.false77_crit_edge, label %land.lhs.true60

land.lhs.true55.cond.false77_crit_edge:           ; preds = %land.lhs.true55
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %sriov_rreg64 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr, i32 0, i32 13
  %21 = ptrtoint ptr %sriov_rreg64 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sriov_rreg64, align 4
  %tobool65.not = icmp eq ptr %22, null
  br i1 %tobool65.not, label %land.lhs.true60.cond.false77_crit_edge, label %cond.true66

land.lhs.true60.cond.false77_crit_edge:           ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false77

cond.true66:                                      ; preds = %land.lhs.true60
  call void @__sanitizer_cov_trace_pc() #17
  %call76 = tail call i32 %22(ptr noundef %1, i32 noundef %add502, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end84

cond.false77.sink.split:                          ; preds = %land.lhs.true.cond.false77.sink.split_crit_edge, %entry.cond.false77.sink.split_crit_edge
  %arrayidx47113 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %23 = ptrtoint ptr %arrayidx47113 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx47113, align 8
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  %add50214 = add i32 %26, 4227
  br label %cond.false77

cond.false77:                                     ; preds = %cond.false77.sink.split, %land.lhs.true60.cond.false77_crit_edge, %land.lhs.true55.cond.false77_crit_edge
  %add505 = phi i32 [ %add502, %land.lhs.true60.cond.false77_crit_edge ], [ %add502, %land.lhs.true55.cond.false77_crit_edge ], [ %add50214, %cond.false77.sink.split ]
  %call83 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add505, i32 noundef 0) #15
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false77, %cond.true66
  %add503 = phi i32 [ %add502, %cond.true66 ], [ %add505, %cond.false77 ]
  %cond85 = phi i32 [ %call76, %cond.true66 ], [ %call83, %cond.false77 ]
  %and86 = and i32 %cond85, 2147483647
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add503, i32 noundef %and86, i32 noundef 0) #15
  br label %do.body

do.body:                                          ; preds = %cond.end84, %cond.end
  %arrayidx90 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %27 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx90, align 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %add93 = add i32 %30, 4714
  %31 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %virt, align 8
  %and96 = and i32 %32, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96)
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %do.body.cond.false114_crit_edge, label %land.lhs.true98

do.body.cond.false114_crit_edge:                  ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false114

land.lhs.true98:                                  ; preds = %do.body
  %funcs101 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %33 = ptrtoint ptr %funcs101 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %funcs101, align 4
  %tobool102.not = icmp eq ptr %34, null
  br i1 %tobool102.not, label %land.lhs.true98.cond.false114_crit_edge, label %land.lhs.true103

land.lhs.true98.cond.false114_crit_edge:          ; preds = %land.lhs.true98
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false114

land.lhs.true103:                                 ; preds = %land.lhs.true98
  %sriov_wreg107 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %34, i32 0, i32 12
  %35 = ptrtoint ptr %sriov_wreg107 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sriov_wreg107, align 4
  %tobool108.not = icmp eq ptr %36, null
  br i1 %tobool108.not, label %land.lhs.true103.cond.false114_crit_edge, label %cond.true109

land.lhs.true103.cond.false114_crit_edge:         ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false114

cond.true109:                                     ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_eop_base_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 165
  %37 = ptrtoint ptr %cp_hqd_eop_base_addr_lo to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cp_hqd_eop_base_addr_lo, align 4
  tail call void %36(ptr noundef %1, i32 noundef %add93, i32 noundef %38, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end116

cond.false114:                                    ; preds = %land.lhs.true103.cond.false114_crit_edge, %land.lhs.true98.cond.false114_crit_edge, %do.body.cond.false114_crit_edge
  %cp_hqd_eop_base_addr_lo115 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 165
  %39 = ptrtoint ptr %cp_hqd_eop_base_addr_lo115 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cp_hqd_eop_base_addr_lo115, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add93, i32 noundef %40, i32 noundef 0) #15
  br label %cond.end116

cond.end116:                                      ; preds = %cond.false114, %cond.true109
  %41 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx90, align 8
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %add123 = add i32 %44, 4715
  %45 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %virt, align 8
  %and126 = and i32 %46, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and126)
  %tobool127.not = icmp eq i32 %and126, 0
  br i1 %tobool127.not, label %cond.end116.cond.false144_crit_edge, label %land.lhs.true128

cond.end116.cond.false144_crit_edge:              ; preds = %cond.end116
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false144

land.lhs.true128:                                 ; preds = %cond.end116
  %funcs131 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %47 = ptrtoint ptr %funcs131 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %funcs131, align 4
  %tobool132.not = icmp eq ptr %48, null
  br i1 %tobool132.not, label %land.lhs.true128.cond.false144_crit_edge, label %land.lhs.true133

land.lhs.true128.cond.false144_crit_edge:         ; preds = %land.lhs.true128
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false144

land.lhs.true133:                                 ; preds = %land.lhs.true128
  %sriov_wreg137 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %48, i32 0, i32 12
  %49 = ptrtoint ptr %sriov_wreg137 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %sriov_wreg137, align 4
  %tobool138.not = icmp eq ptr %50, null
  br i1 %tobool138.not, label %land.lhs.true133.cond.false144_crit_edge, label %cond.true139

land.lhs.true133.cond.false144_crit_edge:         ; preds = %land.lhs.true133
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false144

cond.true139:                                     ; preds = %land.lhs.true133
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_eop_base_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 166
  %51 = ptrtoint ptr %cp_hqd_eop_base_addr_hi to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cp_hqd_eop_base_addr_hi, align 4
  tail call void %50(ptr noundef %1, i32 noundef %add123, i32 noundef %52, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end146

cond.false144:                                    ; preds = %land.lhs.true133.cond.false144_crit_edge, %land.lhs.true128.cond.false144_crit_edge, %cond.end116.cond.false144_crit_edge
  %cp_hqd_eop_base_addr_hi145 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 166
  %53 = ptrtoint ptr %cp_hqd_eop_base_addr_hi145 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cp_hqd_eop_base_addr_hi145, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add123, i32 noundef %54, i32 noundef 0) #15
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false144, %cond.true139
  %55 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx90, align 8
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 4
  %add155 = add i32 %58, 4716
  %59 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %virt, align 8
  %and158 = and i32 %60, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and158)
  %tobool159.not = icmp eq i32 %and158, 0
  br i1 %tobool159.not, label %cond.end146.cond.false176_crit_edge, label %land.lhs.true160

cond.end146.cond.false176_crit_edge:              ; preds = %cond.end146
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false176

land.lhs.true160:                                 ; preds = %cond.end146
  %funcs163 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %61 = ptrtoint ptr %funcs163 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %funcs163, align 4
  %tobool164.not = icmp eq ptr %62, null
  br i1 %tobool164.not, label %land.lhs.true160.cond.false176_crit_edge, label %land.lhs.true165

land.lhs.true160.cond.false176_crit_edge:         ; preds = %land.lhs.true160
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false176

land.lhs.true165:                                 ; preds = %land.lhs.true160
  %sriov_wreg169 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %62, i32 0, i32 12
  %63 = ptrtoint ptr %sriov_wreg169 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sriov_wreg169, align 4
  %tobool170.not = icmp eq ptr %64, null
  br i1 %tobool170.not, label %land.lhs.true165.cond.false176_crit_edge, label %cond.true171

land.lhs.true165.cond.false176_crit_edge:         ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false176

cond.true171:                                     ; preds = %land.lhs.true165
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_eop_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 167
  %65 = ptrtoint ptr %cp_hqd_eop_control to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %cp_hqd_eop_control, align 4
  tail call void %64(ptr noundef %1, i32 noundef %add155, i32 noundef %66, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end178

cond.false176:                                    ; preds = %land.lhs.true165.cond.false176_crit_edge, %land.lhs.true160.cond.false176_crit_edge, %cond.end146.cond.false176_crit_edge
  %cp_hqd_eop_control177 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 167
  %67 = ptrtoint ptr %cp_hqd_eop_control177 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cp_hqd_eop_control177, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add155, i32 noundef %68, i32 noundef 0) #15
  br label %cond.end178

cond.end178:                                      ; preds = %cond.false176, %cond.true171
  %69 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %arrayidx90, align 8
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %70, align 4
  %add187 = add i32 %72, 4692
  %73 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %virt, align 8
  %and190 = and i32 %74, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and190)
  %tobool191.not = icmp eq i32 %and190, 0
  br i1 %tobool191.not, label %cond.end178.cond.false208_crit_edge, label %land.lhs.true192

cond.end178.cond.false208_crit_edge:              ; preds = %cond.end178
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false208

land.lhs.true192:                                 ; preds = %cond.end178
  %funcs195 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %75 = ptrtoint ptr %funcs195 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %funcs195, align 4
  %tobool196.not = icmp eq ptr %76, null
  br i1 %tobool196.not, label %land.lhs.true192.cond.false208_crit_edge, label %land.lhs.true197

land.lhs.true192.cond.false208_crit_edge:         ; preds = %land.lhs.true192
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false208

land.lhs.true197:                                 ; preds = %land.lhs.true192
  %sriov_wreg201 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %76, i32 0, i32 12
  %77 = ptrtoint ptr %sriov_wreg201 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %sriov_wreg201, align 4
  %tobool202.not = icmp eq ptr %78, null
  br i1 %tobool202.not, label %land.lhs.true197.cond.false208_crit_edge, label %cond.true203

land.lhs.true197.cond.false208_crit_edge:         ; preds = %land.lhs.true197
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false208

cond.true203:                                     ; preds = %land.lhs.true197
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_doorbell_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 143
  %79 = ptrtoint ptr %cp_hqd_pq_doorbell_control to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %cp_hqd_pq_doorbell_control, align 4
  tail call void %78(ptr noundef %1, i32 noundef %add187, i32 noundef %80, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end210

cond.false208:                                    ; preds = %land.lhs.true197.cond.false208_crit_edge, %land.lhs.true192.cond.false208_crit_edge, %cond.end178.cond.false208_crit_edge
  %cp_hqd_pq_doorbell_control209 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 143
  %81 = ptrtoint ptr %cp_hqd_pq_doorbell_control209 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %cp_hqd_pq_doorbell_control209, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add187, i32 noundef %82, i32 noundef 0) #15
  br label %cond.end210

cond.end210:                                      ; preds = %cond.false208, %cond.true203
  %83 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %virt, align 8
  %and215 = and i32 %84, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and215)
  %tobool216.not = icmp eq i32 %and215, 0
  br i1 %tobool216.not, label %cond.end210.cond.false239_crit_edge, label %land.lhs.true217

cond.end210.cond.false239_crit_edge:              ; preds = %cond.end210
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false239

land.lhs.true217:                                 ; preds = %cond.end210
  %funcs220 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %85 = ptrtoint ptr %funcs220 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %funcs220, align 4
  %tobool221.not = icmp eq ptr %86, null
  br i1 %tobool221.not, label %land.lhs.true217.cond.false239_crit_edge, label %land.lhs.true222

land.lhs.true217.cond.false239_crit_edge:         ; preds = %land.lhs.true217
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false239

land.lhs.true222:                                 ; preds = %land.lhs.true217
  %sriov_rreg226 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %86, i32 0, i32 13
  %87 = ptrtoint ptr %sriov_rreg226 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %sriov_rreg226, align 4
  %tobool227.not = icmp eq ptr %88, null
  br i1 %tobool227.not, label %land.lhs.true222.cond.false239_crit_edge, label %cond.true228

land.lhs.true222.cond.false239_crit_edge:         ; preds = %land.lhs.true222
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false239

cond.true228:                                     ; preds = %land.lhs.true222
  call void @__sanitizer_cov_trace_pc() #17
  %89 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx90, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %90, align 4
  %add237 = add i32 %92, 4679
  %call238 = tail call i32 %88(ptr noundef %1, i32 noundef %add237, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end246

cond.false239:                                    ; preds = %land.lhs.true222.cond.false239_crit_edge, %land.lhs.true217.cond.false239_crit_edge, %cond.end210.cond.false239_crit_edge
  %93 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %arrayidx90, align 8
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %94, align 4
  %add244 = add i32 %96, 4679
  %call245 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add244, i32 noundef 0) #15
  br label %cond.end246

cond.end246:                                      ; preds = %cond.false239, %cond.true228
  %cond247 = phi i32 [ %call238, %cond.true228 ], [ %call245, %cond.false239 ]
  %and248 = and i32 %cond247, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and248)
  %tobool249.not = icmp eq i32 %and248, 0
  br i1 %tobool249.not, label %cond.end246.do.body448_crit_edge, label %do.body250

cond.end246.do.body448_crit_edge:                 ; preds = %cond.end246
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body448

do.body250:                                       ; preds = %cond.end246
  %97 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %arrayidx90, align 8
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %98, align 4
  %add256 = add i32 %100, 4701
  %101 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %virt, align 8
  %and259 = and i32 %102, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and259)
  %tobool260.not = icmp eq i32 %and259, 0
  br i1 %tobool260.not, label %do.body250.cond.false277_crit_edge, label %land.lhs.true261

do.body250.cond.false277_crit_edge:               ; preds = %do.body250
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false277

land.lhs.true261:                                 ; preds = %do.body250
  %funcs264 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %103 = ptrtoint ptr %funcs264 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %funcs264, align 4
  %tobool265.not = icmp eq ptr %104, null
  br i1 %tobool265.not, label %land.lhs.true261.cond.false277_crit_edge, label %land.lhs.true266

land.lhs.true261.cond.false277_crit_edge:         ; preds = %land.lhs.true261
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false277

land.lhs.true266:                                 ; preds = %land.lhs.true261
  %sriov_wreg270 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %104, i32 0, i32 12
  %105 = ptrtoint ptr %sriov_wreg270 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %sriov_wreg270, align 4
  %tobool271.not = icmp eq ptr %106, null
  br i1 %tobool271.not, label %land.lhs.true266.cond.false277_crit_edge, label %cond.true272

land.lhs.true266.cond.false277_crit_edge:         ; preds = %land.lhs.true266
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false277

cond.true272:                                     ; preds = %land.lhs.true266
  call void @__sanitizer_cov_trace_pc() #17
  tail call void %106(ptr noundef %1, i32 noundef %add256, i32 noundef 1, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end278

cond.false277:                                    ; preds = %land.lhs.true266.cond.false277_crit_edge, %land.lhs.true261.cond.false277_crit_edge, %do.body250.cond.false277_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add256, i32 noundef 1, i32 noundef 0) #15
  br label %cond.end278

cond.end278:                                      ; preds = %cond.false277, %cond.true272
  %usec_timeout = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 11
  %107 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %usec_timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %108)
  %cmp11 = icmp sgt i32 %108, 0
  br i1 %cmp11, label %for.body.lr.ph, label %cond.end278.do.body319_crit_edge

cond.end278.do.body319_crit_edge:                 ; preds = %cond.end278
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body319

for.body.lr.ph:                                   ; preds = %cond.end278
  %funcs288 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %j.012 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.for.body_crit_edge ]
  %109 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %virt, align 8
  %and283 = and i32 %110, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and283)
  %tobool284.not = icmp eq i32 %and283, 0
  br i1 %tobool284.not, label %for.body.cond.false307_crit_edge, label %land.lhs.true285

for.body.cond.false307_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false307

land.lhs.true285:                                 ; preds = %for.body
  %111 = ptrtoint ptr %funcs288 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %funcs288, align 4
  %tobool289.not = icmp eq ptr %112, null
  br i1 %tobool289.not, label %land.lhs.true285.cond.false307_crit_edge, label %land.lhs.true290

land.lhs.true285.cond.false307_crit_edge:         ; preds = %land.lhs.true285
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false307

land.lhs.true290:                                 ; preds = %land.lhs.true285
  %sriov_rreg294 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %112, i32 0, i32 13
  %113 = ptrtoint ptr %sriov_rreg294 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %sriov_rreg294, align 4
  %tobool295.not = icmp eq ptr %114, null
  br i1 %tobool295.not, label %land.lhs.true290.cond.false307_crit_edge, label %cond.true296

land.lhs.true290.cond.false307_crit_edge:         ; preds = %land.lhs.true290
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false307

cond.true296:                                     ; preds = %land.lhs.true290
  call void @__sanitizer_cov_trace_pc() #17
  %115 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %arrayidx90, align 8
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %116, align 4
  %add305 = add i32 %118, 4679
  %call306 = tail call i32 %114(ptr noundef %1, i32 noundef %add305, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end314

cond.false307:                                    ; preds = %land.lhs.true290.cond.false307_crit_edge, %land.lhs.true285.cond.false307_crit_edge, %for.body.cond.false307_crit_edge
  %119 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %arrayidx90, align 8
  %121 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %120, align 4
  %add312 = add i32 %122, 4679
  %call313 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add312, i32 noundef 0) #15
  br label %cond.end314

cond.end314:                                      ; preds = %cond.false307, %cond.true296
  %cond315 = phi i32 [ %call306, %cond.true296 ], [ %call313, %cond.false307 ]
  %and316 = and i32 %cond315, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and316)
  %tobool317.not = icmp eq i32 %and316, 0
  br i1 %tobool317.not, label %cond.end314.do.body319_crit_edge, label %if.end

cond.end314.do.body319_crit_edge:                 ; preds = %cond.end314
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body319

if.end:                                           ; preds = %cond.end314
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %123 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %123(i32 noundef 214748) #15
  %inc = add nuw nsw i32 %j.012, 1
  %124 = ptrtoint ptr %usec_timeout to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %usec_timeout, align 8
  %cmp = icmp slt i32 %inc, %125
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.do.body319_crit_edge

if.end.do.body319_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body319

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

do.body319:                                       ; preds = %if.end.do.body319_crit_edge, %cond.end314.do.body319_crit_edge, %cond.end278.do.body319_crit_edge
  %126 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %arrayidx90, align 8
  %128 = ptrtoint ptr %127 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %127, align 4
  %add325 = add i32 %129, 4701
  %130 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %virt, align 8
  %and328 = and i32 %131, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and328)
  %tobool329.not = icmp eq i32 %and328, 0
  br i1 %tobool329.not, label %do.body319.cond.false346_crit_edge, label %land.lhs.true330

do.body319.cond.false346_crit_edge:               ; preds = %do.body319
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false346

land.lhs.true330:                                 ; preds = %do.body319
  %funcs333 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %132 = ptrtoint ptr %funcs333 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %funcs333, align 4
  %tobool334.not = icmp eq ptr %133, null
  br i1 %tobool334.not, label %land.lhs.true330.cond.false346_crit_edge, label %land.lhs.true335

land.lhs.true330.cond.false346_crit_edge:         ; preds = %land.lhs.true330
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false346

land.lhs.true335:                                 ; preds = %land.lhs.true330
  %sriov_wreg339 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %133, i32 0, i32 12
  %134 = ptrtoint ptr %sriov_wreg339 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %sriov_wreg339, align 4
  %tobool340.not = icmp eq ptr %135, null
  br i1 %tobool340.not, label %land.lhs.true335.cond.false346_crit_edge, label %cond.true341

land.lhs.true335.cond.false346_crit_edge:         ; preds = %land.lhs.true335
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false346

cond.true341:                                     ; preds = %land.lhs.true335
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_dequeue_request = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 152
  %136 = ptrtoint ptr %cp_hqd_dequeue_request to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %cp_hqd_dequeue_request, align 4
  tail call void %135(ptr noundef %1, i32 noundef %add325, i32 noundef %137, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end348

cond.false346:                                    ; preds = %land.lhs.true335.cond.false346_crit_edge, %land.lhs.true330.cond.false346_crit_edge, %do.body319.cond.false346_crit_edge
  %cp_hqd_dequeue_request347 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 152
  %138 = ptrtoint ptr %cp_hqd_dequeue_request347 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %cp_hqd_dequeue_request347, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add325, i32 noundef %139, i32 noundef 0) #15
  br label %cond.end348

cond.end348:                                      ; preds = %cond.false346, %cond.true341
  %140 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %arrayidx90, align 8
  %142 = ptrtoint ptr %141 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %141, align 4
  %add357 = add i32 %143, 4687
  %144 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %virt, align 8
  %and360 = and i32 %145, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and360)
  %tobool361.not = icmp eq i32 %and360, 0
  br i1 %tobool361.not, label %cond.end348.cond.false378_crit_edge, label %land.lhs.true362

cond.end348.cond.false378_crit_edge:              ; preds = %cond.end348
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false378

land.lhs.true362:                                 ; preds = %cond.end348
  %funcs365 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %146 = ptrtoint ptr %funcs365 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %funcs365, align 4
  %tobool366.not = icmp eq ptr %147, null
  br i1 %tobool366.not, label %land.lhs.true362.cond.false378_crit_edge, label %land.lhs.true367

land.lhs.true362.cond.false378_crit_edge:         ; preds = %land.lhs.true362
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false378

land.lhs.true367:                                 ; preds = %land.lhs.true362
  %sriov_wreg371 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %147, i32 0, i32 12
  %148 = ptrtoint ptr %sriov_wreg371 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %sriov_wreg371, align 4
  %tobool372.not = icmp eq ptr %149, null
  br i1 %tobool372.not, label %land.lhs.true367.cond.false378_crit_edge, label %cond.true373

land.lhs.true367.cond.false378_crit_edge:         ; preds = %land.lhs.true367
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false378

cond.true373:                                     ; preds = %land.lhs.true367
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_rptr = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 138
  %150 = ptrtoint ptr %cp_hqd_pq_rptr to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %cp_hqd_pq_rptr, align 4
  tail call void %149(ptr noundef %1, i32 noundef %add357, i32 noundef %151, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end380

cond.false378:                                    ; preds = %land.lhs.true367.cond.false378_crit_edge, %land.lhs.true362.cond.false378_crit_edge, %cond.end348.cond.false378_crit_edge
  %cp_hqd_pq_rptr379 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 138
  %152 = ptrtoint ptr %cp_hqd_pq_rptr379 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %cp_hqd_pq_rptr379, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add357, i32 noundef %153, i32 noundef 0) #15
  br label %cond.end380

cond.end380:                                      ; preds = %cond.false378, %cond.true373
  %154 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %arrayidx90, align 8
  %156 = ptrtoint ptr %155 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %155, align 4
  %add389 = add i32 %157, 4731
  %158 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %virt, align 8
  %and392 = and i32 %159, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and392)
  %tobool393.not = icmp eq i32 %and392, 0
  br i1 %tobool393.not, label %cond.end380.cond.false410_crit_edge, label %land.lhs.true394

cond.end380.cond.false410_crit_edge:              ; preds = %cond.end380
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false410

land.lhs.true394:                                 ; preds = %cond.end380
  %funcs397 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %160 = ptrtoint ptr %funcs397 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %funcs397, align 4
  %tobool398.not = icmp eq ptr %161, null
  br i1 %tobool398.not, label %land.lhs.true394.cond.false410_crit_edge, label %land.lhs.true399

land.lhs.true394.cond.false410_crit_edge:         ; preds = %land.lhs.true394
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false410

land.lhs.true399:                                 ; preds = %land.lhs.true394
  %sriov_wreg403 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %161, i32 0, i32 12
  %162 = ptrtoint ptr %sriov_wreg403 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %sriov_wreg403, align 4
  %tobool404.not = icmp eq ptr %163, null
  br i1 %tobool404.not, label %land.lhs.true399.cond.false410_crit_edge, label %cond.true405

land.lhs.true399.cond.false410_crit_edge:         ; preds = %land.lhs.true399
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false410

cond.true405:                                     ; preds = %land.lhs.true399
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_wptr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 182
  %164 = ptrtoint ptr %cp_hqd_pq_wptr_lo to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %cp_hqd_pq_wptr_lo, align 4
  tail call void %163(ptr noundef %1, i32 noundef %add389, i32 noundef %165, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end412

cond.false410:                                    ; preds = %land.lhs.true399.cond.false410_crit_edge, %land.lhs.true394.cond.false410_crit_edge, %cond.end380.cond.false410_crit_edge
  %cp_hqd_pq_wptr_lo411 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 182
  %166 = ptrtoint ptr %cp_hqd_pq_wptr_lo411 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %cp_hqd_pq_wptr_lo411, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add389, i32 noundef %167, i32 noundef 0) #15
  br label %cond.end412

cond.end412:                                      ; preds = %cond.false410, %cond.true405
  %168 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %arrayidx90, align 8
  %170 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %169, align 4
  %add421 = add i32 %171, 4732
  %172 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %virt, align 8
  %and424 = and i32 %173, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and424)
  %tobool425.not = icmp eq i32 %and424, 0
  br i1 %tobool425.not, label %cond.end412.cond.false442_crit_edge, label %land.lhs.true426

cond.end412.cond.false442_crit_edge:              ; preds = %cond.end412
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false442

land.lhs.true426:                                 ; preds = %cond.end412
  %funcs429 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %174 = ptrtoint ptr %funcs429 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %funcs429, align 4
  %tobool430.not = icmp eq ptr %175, null
  br i1 %tobool430.not, label %land.lhs.true426.cond.false442_crit_edge, label %land.lhs.true431

land.lhs.true426.cond.false442_crit_edge:         ; preds = %land.lhs.true426
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false442

land.lhs.true431:                                 ; preds = %land.lhs.true426
  %sriov_wreg435 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %175, i32 0, i32 12
  %176 = ptrtoint ptr %sriov_wreg435 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %sriov_wreg435, align 4
  %tobool436.not = icmp eq ptr %177, null
  br i1 %tobool436.not, label %land.lhs.true431.cond.false442_crit_edge, label %cond.true437

land.lhs.true431.cond.false442_crit_edge:         ; preds = %land.lhs.true431
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false442

cond.true437:                                     ; preds = %land.lhs.true431
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_wptr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 183
  %178 = ptrtoint ptr %cp_hqd_pq_wptr_hi to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %cp_hqd_pq_wptr_hi, align 4
  tail call void %177(ptr noundef %1, i32 noundef %add421, i32 noundef %179, i32 noundef 4, i32 noundef 1) #15
  br label %do.body448

cond.false442:                                    ; preds = %land.lhs.true431.cond.false442_crit_edge, %land.lhs.true426.cond.false442_crit_edge, %cond.end412.cond.false442_crit_edge
  %cp_hqd_pq_wptr_hi443 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 183
  %180 = ptrtoint ptr %cp_hqd_pq_wptr_hi443 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %cp_hqd_pq_wptr_hi443, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add421, i32 noundef %181, i32 noundef 0) #15
  br label %do.body448

do.body448:                                       ; preds = %cond.false442, %cond.true437, %cond.end246.do.body448_crit_edge
  %182 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %arrayidx90, align 8
  %184 = ptrtoint ptr %183 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %183, align 4
  %add454 = add i32 %185, 4677
  %186 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %virt, align 8
  %and457 = and i32 %187, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and457)
  %tobool458.not = icmp eq i32 %and457, 0
  br i1 %tobool458.not, label %do.body448.cond.false475_crit_edge, label %land.lhs.true459

do.body448.cond.false475_crit_edge:               ; preds = %do.body448
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false475

land.lhs.true459:                                 ; preds = %do.body448
  %funcs462 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %188 = ptrtoint ptr %funcs462 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %funcs462, align 4
  %tobool463.not = icmp eq ptr %189, null
  br i1 %tobool463.not, label %land.lhs.true459.cond.false475_crit_edge, label %land.lhs.true464

land.lhs.true459.cond.false475_crit_edge:         ; preds = %land.lhs.true459
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false475

land.lhs.true464:                                 ; preds = %land.lhs.true459
  %sriov_wreg468 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %189, i32 0, i32 12
  %190 = ptrtoint ptr %sriov_wreg468 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %sriov_wreg468, align 4
  %tobool469.not = icmp eq ptr %191, null
  br i1 %tobool469.not, label %land.lhs.true464.cond.false475_crit_edge, label %cond.true470

land.lhs.true464.cond.false475_crit_edge:         ; preds = %land.lhs.true464
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false475

cond.true470:                                     ; preds = %land.lhs.true464
  call void @__sanitizer_cov_trace_pc() #17
  %cp_mqd_base_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 128
  %192 = ptrtoint ptr %cp_mqd_base_addr_lo to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %cp_mqd_base_addr_lo, align 4
  tail call void %191(ptr noundef %1, i32 noundef %add454, i32 noundef %193, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end477

cond.false475:                                    ; preds = %land.lhs.true464.cond.false475_crit_edge, %land.lhs.true459.cond.false475_crit_edge, %do.body448.cond.false475_crit_edge
  %cp_mqd_base_addr_lo476 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 128
  %194 = ptrtoint ptr %cp_mqd_base_addr_lo476 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %cp_mqd_base_addr_lo476, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add454, i32 noundef %195, i32 noundef 0) #15
  br label %cond.end477

cond.end477:                                      ; preds = %cond.false475, %cond.true470
  %196 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %arrayidx90, align 8
  %198 = ptrtoint ptr %197 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %197, align 4
  %add486 = add i32 %199, 4678
  %200 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %virt, align 8
  %and489 = and i32 %201, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and489)
  %tobool490.not = icmp eq i32 %and489, 0
  br i1 %tobool490.not, label %cond.end477.cond.false507_crit_edge, label %land.lhs.true491

cond.end477.cond.false507_crit_edge:              ; preds = %cond.end477
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false507

land.lhs.true491:                                 ; preds = %cond.end477
  %funcs494 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %202 = ptrtoint ptr %funcs494 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %funcs494, align 4
  %tobool495.not = icmp eq ptr %203, null
  br i1 %tobool495.not, label %land.lhs.true491.cond.false507_crit_edge, label %land.lhs.true496

land.lhs.true491.cond.false507_crit_edge:         ; preds = %land.lhs.true491
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false507

land.lhs.true496:                                 ; preds = %land.lhs.true491
  %sriov_wreg500 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %203, i32 0, i32 12
  %204 = ptrtoint ptr %sriov_wreg500 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %sriov_wreg500, align 4
  %tobool501.not = icmp eq ptr %205, null
  br i1 %tobool501.not, label %land.lhs.true496.cond.false507_crit_edge, label %cond.true502

land.lhs.true496.cond.false507_crit_edge:         ; preds = %land.lhs.true496
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false507

cond.true502:                                     ; preds = %land.lhs.true496
  call void @__sanitizer_cov_trace_pc() #17
  %cp_mqd_base_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 129
  %206 = ptrtoint ptr %cp_mqd_base_addr_hi to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %cp_mqd_base_addr_hi, align 4
  tail call void %205(ptr noundef %1, i32 noundef %add486, i32 noundef %207, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end509

cond.false507:                                    ; preds = %land.lhs.true496.cond.false507_crit_edge, %land.lhs.true491.cond.false507_crit_edge, %cond.end477.cond.false507_crit_edge
  %cp_mqd_base_addr_hi508 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 129
  %208 = ptrtoint ptr %cp_mqd_base_addr_hi508 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %cp_mqd_base_addr_hi508, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add486, i32 noundef %209, i32 noundef 0) #15
  br label %cond.end509

cond.end509:                                      ; preds = %cond.false507, %cond.true502
  %210 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %arrayidx90, align 8
  %212 = ptrtoint ptr %211 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %211, align 4
  %add518 = add i32 %213, 4711
  %214 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %virt, align 8
  %and521 = and i32 %215, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and521)
  %tobool522.not = icmp eq i32 %and521, 0
  br i1 %tobool522.not, label %cond.end509.cond.false539_crit_edge, label %land.lhs.true523

cond.end509.cond.false539_crit_edge:              ; preds = %cond.end509
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false539

land.lhs.true523:                                 ; preds = %cond.end509
  %funcs526 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %216 = ptrtoint ptr %funcs526 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %funcs526, align 4
  %tobool527.not = icmp eq ptr %217, null
  br i1 %tobool527.not, label %land.lhs.true523.cond.false539_crit_edge, label %land.lhs.true528

land.lhs.true523.cond.false539_crit_edge:         ; preds = %land.lhs.true523
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false539

land.lhs.true528:                                 ; preds = %land.lhs.true523
  %sriov_wreg532 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %217, i32 0, i32 12
  %218 = ptrtoint ptr %sriov_wreg532 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %sriov_wreg532, align 4
  %tobool533.not = icmp eq ptr %219, null
  br i1 %tobool533.not, label %land.lhs.true528.cond.false539_crit_edge, label %cond.true534

land.lhs.true528.cond.false539_crit_edge:         ; preds = %land.lhs.true528
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false539

cond.true534:                                     ; preds = %land.lhs.true528
  call void @__sanitizer_cov_trace_pc() #17
  %cp_mqd_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 162
  %220 = ptrtoint ptr %cp_mqd_control to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %cp_mqd_control, align 4
  tail call void %219(ptr noundef %1, i32 noundef %add518, i32 noundef %221, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end541

cond.false539:                                    ; preds = %land.lhs.true528.cond.false539_crit_edge, %land.lhs.true523.cond.false539_crit_edge, %cond.end509.cond.false539_crit_edge
  %cp_mqd_control540 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 162
  %222 = ptrtoint ptr %cp_mqd_control540 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %cp_mqd_control540, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add518, i32 noundef %223, i32 noundef 0) #15
  br label %cond.end541

cond.end541:                                      ; preds = %cond.false539, %cond.true534
  %224 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %arrayidx90, align 8
  %226 = ptrtoint ptr %225 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %225, align 4
  %add550 = add i32 %227, 4685
  %228 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %virt, align 8
  %and553 = and i32 %229, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and553)
  %tobool554.not = icmp eq i32 %and553, 0
  br i1 %tobool554.not, label %cond.end541.cond.false571_crit_edge, label %land.lhs.true555

cond.end541.cond.false571_crit_edge:              ; preds = %cond.end541
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false571

land.lhs.true555:                                 ; preds = %cond.end541
  %funcs558 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %230 = ptrtoint ptr %funcs558 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %funcs558, align 4
  %tobool559.not = icmp eq ptr %231, null
  br i1 %tobool559.not, label %land.lhs.true555.cond.false571_crit_edge, label %land.lhs.true560

land.lhs.true555.cond.false571_crit_edge:         ; preds = %land.lhs.true555
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false571

land.lhs.true560:                                 ; preds = %land.lhs.true555
  %sriov_wreg564 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %231, i32 0, i32 12
  %232 = ptrtoint ptr %sriov_wreg564 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %sriov_wreg564, align 4
  %tobool565.not = icmp eq ptr %233, null
  br i1 %tobool565.not, label %land.lhs.true560.cond.false571_crit_edge, label %cond.true566

land.lhs.true560.cond.false571_crit_edge:         ; preds = %land.lhs.true560
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false571

cond.true566:                                     ; preds = %land.lhs.true560
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_base_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 136
  %234 = ptrtoint ptr %cp_hqd_pq_base_lo to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %cp_hqd_pq_base_lo, align 4
  tail call void %233(ptr noundef %1, i32 noundef %add550, i32 noundef %235, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end573

cond.false571:                                    ; preds = %land.lhs.true560.cond.false571_crit_edge, %land.lhs.true555.cond.false571_crit_edge, %cond.end541.cond.false571_crit_edge
  %cp_hqd_pq_base_lo572 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 136
  %236 = ptrtoint ptr %cp_hqd_pq_base_lo572 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %cp_hqd_pq_base_lo572, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add550, i32 noundef %237, i32 noundef 0) #15
  br label %cond.end573

cond.end573:                                      ; preds = %cond.false571, %cond.true566
  %238 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %arrayidx90, align 8
  %240 = ptrtoint ptr %239 to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %239, align 4
  %add582 = add i32 %241, 4686
  %242 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %virt, align 8
  %and585 = and i32 %243, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and585)
  %tobool586.not = icmp eq i32 %and585, 0
  br i1 %tobool586.not, label %cond.end573.cond.false603_crit_edge, label %land.lhs.true587

cond.end573.cond.false603_crit_edge:              ; preds = %cond.end573
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false603

land.lhs.true587:                                 ; preds = %cond.end573
  %funcs590 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %244 = ptrtoint ptr %funcs590 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %funcs590, align 4
  %tobool591.not = icmp eq ptr %245, null
  br i1 %tobool591.not, label %land.lhs.true587.cond.false603_crit_edge, label %land.lhs.true592

land.lhs.true587.cond.false603_crit_edge:         ; preds = %land.lhs.true587
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false603

land.lhs.true592:                                 ; preds = %land.lhs.true587
  %sriov_wreg596 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %245, i32 0, i32 12
  %246 = ptrtoint ptr %sriov_wreg596 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %sriov_wreg596, align 4
  %tobool597.not = icmp eq ptr %247, null
  br i1 %tobool597.not, label %land.lhs.true592.cond.false603_crit_edge, label %cond.true598

land.lhs.true592.cond.false603_crit_edge:         ; preds = %land.lhs.true592
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false603

cond.true598:                                     ; preds = %land.lhs.true592
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_base_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 137
  %248 = ptrtoint ptr %cp_hqd_pq_base_hi to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %cp_hqd_pq_base_hi, align 4
  tail call void %247(ptr noundef %1, i32 noundef %add582, i32 noundef %249, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end605

cond.false603:                                    ; preds = %land.lhs.true592.cond.false603_crit_edge, %land.lhs.true587.cond.false603_crit_edge, %cond.end573.cond.false603_crit_edge
  %cp_hqd_pq_base_hi604 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 137
  %250 = ptrtoint ptr %cp_hqd_pq_base_hi604 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %cp_hqd_pq_base_hi604, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add582, i32 noundef %251, i32 noundef 0) #15
  br label %cond.end605

cond.end605:                                      ; preds = %cond.false603, %cond.true598
  %252 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %arrayidx90, align 8
  %254 = ptrtoint ptr %253 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %253, align 4
  %add614 = add i32 %255, 4694
  %256 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %virt, align 8
  %and617 = and i32 %257, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and617)
  %tobool618.not = icmp eq i32 %and617, 0
  br i1 %tobool618.not, label %cond.end605.cond.false635_crit_edge, label %land.lhs.true619

cond.end605.cond.false635_crit_edge:              ; preds = %cond.end605
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false635

land.lhs.true619:                                 ; preds = %cond.end605
  %funcs622 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %258 = ptrtoint ptr %funcs622 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %funcs622, align 4
  %tobool623.not = icmp eq ptr %259, null
  br i1 %tobool623.not, label %land.lhs.true619.cond.false635_crit_edge, label %land.lhs.true624

land.lhs.true619.cond.false635_crit_edge:         ; preds = %land.lhs.true619
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false635

land.lhs.true624:                                 ; preds = %land.lhs.true619
  %sriov_wreg628 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %259, i32 0, i32 12
  %260 = ptrtoint ptr %sriov_wreg628 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %sriov_wreg628, align 4
  %tobool629.not = icmp eq ptr %261, null
  br i1 %tobool629.not, label %land.lhs.true624.cond.false635_crit_edge, label %cond.true630

land.lhs.true624.cond.false635_crit_edge:         ; preds = %land.lhs.true624
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false635

cond.true630:                                     ; preds = %land.lhs.true624
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 145
  %262 = ptrtoint ptr %cp_hqd_pq_control to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %cp_hqd_pq_control, align 4
  tail call void %261(ptr noundef %1, i32 noundef %add614, i32 noundef %263, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end637

cond.false635:                                    ; preds = %land.lhs.true624.cond.false635_crit_edge, %land.lhs.true619.cond.false635_crit_edge, %cond.end605.cond.false635_crit_edge
  %cp_hqd_pq_control636 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 145
  %264 = ptrtoint ptr %cp_hqd_pq_control636 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %cp_hqd_pq_control636, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add614, i32 noundef %265, i32 noundef 0) #15
  br label %cond.end637

cond.end637:                                      ; preds = %cond.false635, %cond.true630
  %266 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %arrayidx90, align 8
  %268 = ptrtoint ptr %267 to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %267, align 4
  %add646 = add i32 %269, 4688
  %270 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %virt, align 8
  %and649 = and i32 %271, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and649)
  %tobool650.not = icmp eq i32 %and649, 0
  br i1 %tobool650.not, label %cond.end637.cond.false667_crit_edge, label %land.lhs.true651

cond.end637.cond.false667_crit_edge:              ; preds = %cond.end637
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false667

land.lhs.true651:                                 ; preds = %cond.end637
  %funcs654 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %272 = ptrtoint ptr %funcs654 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load ptr, ptr %funcs654, align 4
  %tobool655.not = icmp eq ptr %273, null
  br i1 %tobool655.not, label %land.lhs.true651.cond.false667_crit_edge, label %land.lhs.true656

land.lhs.true651.cond.false667_crit_edge:         ; preds = %land.lhs.true651
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false667

land.lhs.true656:                                 ; preds = %land.lhs.true651
  %sriov_wreg660 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %273, i32 0, i32 12
  %274 = ptrtoint ptr %sriov_wreg660 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %sriov_wreg660, align 4
  %tobool661.not = icmp eq ptr %275, null
  br i1 %tobool661.not, label %land.lhs.true656.cond.false667_crit_edge, label %cond.true662

land.lhs.true656.cond.false667_crit_edge:         ; preds = %land.lhs.true656
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false667

cond.true662:                                     ; preds = %land.lhs.true656
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_rptr_report_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 139
  %276 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_lo to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %cp_hqd_pq_rptr_report_addr_lo, align 4
  tail call void %275(ptr noundef %1, i32 noundef %add646, i32 noundef %277, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end669

cond.false667:                                    ; preds = %land.lhs.true656.cond.false667_crit_edge, %land.lhs.true651.cond.false667_crit_edge, %cond.end637.cond.false667_crit_edge
  %cp_hqd_pq_rptr_report_addr_lo668 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 139
  %278 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_lo668 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %cp_hqd_pq_rptr_report_addr_lo668, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add646, i32 noundef %279, i32 noundef 0) #15
  br label %cond.end669

cond.end669:                                      ; preds = %cond.false667, %cond.true662
  %280 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %arrayidx90, align 8
  %282 = ptrtoint ptr %281 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %281, align 4
  %add678 = add i32 %283, 4689
  %284 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %virt, align 8
  %and681 = and i32 %285, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and681)
  %tobool682.not = icmp eq i32 %and681, 0
  br i1 %tobool682.not, label %cond.end669.cond.false699_crit_edge, label %land.lhs.true683

cond.end669.cond.false699_crit_edge:              ; preds = %cond.end669
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false699

land.lhs.true683:                                 ; preds = %cond.end669
  %funcs686 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %286 = ptrtoint ptr %funcs686 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %funcs686, align 4
  %tobool687.not = icmp eq ptr %287, null
  br i1 %tobool687.not, label %land.lhs.true683.cond.false699_crit_edge, label %land.lhs.true688

land.lhs.true683.cond.false699_crit_edge:         ; preds = %land.lhs.true683
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false699

land.lhs.true688:                                 ; preds = %land.lhs.true683
  %sriov_wreg692 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %287, i32 0, i32 12
  %288 = ptrtoint ptr %sriov_wreg692 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %sriov_wreg692, align 4
  %tobool693.not = icmp eq ptr %289, null
  br i1 %tobool693.not, label %land.lhs.true688.cond.false699_crit_edge, label %cond.true694

land.lhs.true688.cond.false699_crit_edge:         ; preds = %land.lhs.true688
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false699

cond.true694:                                     ; preds = %land.lhs.true688
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_rptr_report_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 140
  %290 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_hi to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %cp_hqd_pq_rptr_report_addr_hi, align 4
  tail call void %289(ptr noundef %1, i32 noundef %add678, i32 noundef %291, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end701

cond.false699:                                    ; preds = %land.lhs.true688.cond.false699_crit_edge, %land.lhs.true683.cond.false699_crit_edge, %cond.end669.cond.false699_crit_edge
  %cp_hqd_pq_rptr_report_addr_hi700 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 140
  %292 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_hi700 to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %cp_hqd_pq_rptr_report_addr_hi700, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add678, i32 noundef %293, i32 noundef 0) #15
  br label %cond.end701

cond.end701:                                      ; preds = %cond.false699, %cond.true694
  %294 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %arrayidx90, align 8
  %296 = ptrtoint ptr %295 to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %295, align 4
  %add710 = add i32 %297, 4690
  %298 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %virt, align 8
  %and713 = and i32 %299, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and713)
  %tobool714.not = icmp eq i32 %and713, 0
  br i1 %tobool714.not, label %cond.end701.cond.false731_crit_edge, label %land.lhs.true715

cond.end701.cond.false731_crit_edge:              ; preds = %cond.end701
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false731

land.lhs.true715:                                 ; preds = %cond.end701
  %funcs718 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %300 = ptrtoint ptr %funcs718 to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %funcs718, align 4
  %tobool719.not = icmp eq ptr %301, null
  br i1 %tobool719.not, label %land.lhs.true715.cond.false731_crit_edge, label %land.lhs.true720

land.lhs.true715.cond.false731_crit_edge:         ; preds = %land.lhs.true715
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false731

land.lhs.true720:                                 ; preds = %land.lhs.true715
  %sriov_wreg724 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %301, i32 0, i32 12
  %302 = ptrtoint ptr %sriov_wreg724 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %sriov_wreg724, align 4
  %tobool725.not = icmp eq ptr %303, null
  br i1 %tobool725.not, label %land.lhs.true720.cond.false731_crit_edge, label %cond.true726

land.lhs.true720.cond.false731_crit_edge:         ; preds = %land.lhs.true720
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false731

cond.true726:                                     ; preds = %land.lhs.true720
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_wptr_poll_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 141
  %304 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_lo to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_lo, align 4
  tail call void %303(ptr noundef %1, i32 noundef %add710, i32 noundef %305, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end733

cond.false731:                                    ; preds = %land.lhs.true720.cond.false731_crit_edge, %land.lhs.true715.cond.false731_crit_edge, %cond.end701.cond.false731_crit_edge
  %cp_hqd_pq_wptr_poll_addr_lo732 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 141
  %306 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_lo732 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_lo732, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add710, i32 noundef %307, i32 noundef 0) #15
  br label %cond.end733

cond.end733:                                      ; preds = %cond.false731, %cond.true726
  %308 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %arrayidx90, align 8
  %310 = ptrtoint ptr %309 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %309, align 4
  %add742 = add i32 %311, 4691
  %312 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %virt, align 8
  %and745 = and i32 %313, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and745)
  %tobool746.not = icmp eq i32 %and745, 0
  br i1 %tobool746.not, label %cond.end733.cond.false763_crit_edge, label %land.lhs.true747

cond.end733.cond.false763_crit_edge:              ; preds = %cond.end733
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false763

land.lhs.true747:                                 ; preds = %cond.end733
  %funcs750 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %314 = ptrtoint ptr %funcs750 to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load ptr, ptr %funcs750, align 4
  %tobool751.not = icmp eq ptr %315, null
  br i1 %tobool751.not, label %land.lhs.true747.cond.false763_crit_edge, label %land.lhs.true752

land.lhs.true747.cond.false763_crit_edge:         ; preds = %land.lhs.true747
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false763

land.lhs.true752:                                 ; preds = %land.lhs.true747
  %sriov_wreg756 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %315, i32 0, i32 12
  %316 = ptrtoint ptr %sriov_wreg756 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load ptr, ptr %sriov_wreg756, align 4
  %tobool757.not = icmp eq ptr %317, null
  br i1 %tobool757.not, label %land.lhs.true752.cond.false763_crit_edge, label %cond.true758

land.lhs.true752.cond.false763_crit_edge:         ; preds = %land.lhs.true752
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false763

cond.true758:                                     ; preds = %land.lhs.true752
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_wptr_poll_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 142
  %318 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_hi to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_hi, align 4
  tail call void %317(ptr noundef %1, i32 noundef %add742, i32 noundef %319, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end765

cond.false763:                                    ; preds = %land.lhs.true752.cond.false763_crit_edge, %land.lhs.true747.cond.false763_crit_edge, %cond.end733.cond.false763_crit_edge
  %cp_hqd_pq_wptr_poll_addr_hi764 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 142
  %320 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_hi764 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %cp_hqd_pq_wptr_poll_addr_hi764, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add742, i32 noundef %321, i32 noundef 0) #15
  br label %cond.end765

cond.end765:                                      ; preds = %cond.false763, %cond.true758
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %322 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %322)
  %323 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %323)
  %tobool768.not = icmp eq i8 %323, 0
  br i1 %tobool768.not, label %cond.end765.do.body884_crit_edge, label %if.then769

cond.end765.do.body884_crit_edge:                 ; preds = %cond.end765
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body884

if.then769:                                       ; preds = %cond.end765
  %324 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load i32, ptr %virt, align 8
  %and772 = and i32 %325, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and772)
  %tobool773.not = icmp eq i32 %and772, 0
  br i1 %tobool773.not, label %if.then769.cond.false795_crit_edge, label %land.lhs.true774

if.then769.cond.false795_crit_edge:               ; preds = %if.then769
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false795

land.lhs.true774:                                 ; preds = %if.then769
  %funcs777 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %326 = ptrtoint ptr %funcs777 to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %funcs777, align 4
  %tobool778.not = icmp eq ptr %327, null
  br i1 %tobool778.not, label %land.lhs.true774.cond.false795_crit_edge, label %land.lhs.true779

land.lhs.true774.cond.false795_crit_edge:         ; preds = %land.lhs.true774
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false795

land.lhs.true779:                                 ; preds = %land.lhs.true774
  %sriov_wreg783 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %327, i32 0, i32 12
  %328 = ptrtoint ptr %sriov_wreg783 to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %sriov_wreg783, align 4
  %tobool784.not = icmp eq ptr %329, null
  br i1 %tobool784.not, label %land.lhs.true779.cond.false795_crit_edge, label %cond.true785

land.lhs.true779.cond.false795_crit_edge:         ; preds = %land.lhs.true779
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false795

cond.true785:                                     ; preds = %land.lhs.true779
  call void @__sanitizer_cov_trace_pc() #17
  %330 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %arrayidx90, align 8
  %332 = ptrtoint ptr %331 to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %331, align 4
  %add794 = add i32 %333, 4188
  %doorbell_index = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144
  %334 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load i32, ptr %doorbell_index, align 4
  %mul = shl i32 %335, 3
  tail call void %329(ptr noundef %1, i32 noundef %add794, i32 noundef %mul, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end805

cond.false795:                                    ; preds = %land.lhs.true779.cond.false795_crit_edge, %land.lhs.true774.cond.false795_crit_edge, %if.then769.cond.false795_crit_edge
  %336 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %arrayidx90, align 8
  %338 = ptrtoint ptr %337 to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %337, align 4
  %add800 = add i32 %339, 4188
  %doorbell_index801 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144
  %340 = ptrtoint ptr %doorbell_index801 to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %doorbell_index801, align 4
  %mul803 = shl i32 %341, 3
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add800, i32 noundef %mul803, i32 noundef 0) #15
  br label %cond.end805

cond.end805:                                      ; preds = %cond.false795, %cond.true785
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 172, i32 1
  %342 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590592, i32 %343)
  %cmp.i = icmp eq i32 %343, 590592
  br i1 %cmp.i, label %land.lhs.true.i, label %cond.end805.if.else_crit_edge

cond.end805.if.else_crit_edge:                    ; preds = %cond.end805
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true.i:                                  ; preds = %cond.end805
  %me_fw_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 10
  %344 = ptrtoint ptr %me_fw_version.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %me_fw_version.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 164, i32 %345)
  %cmp2.i = icmp ugt i32 %345, 164
  br i1 %cmp2.i, label %land.lhs.true3.i, label %land.lhs.true.i.if.else_crit_edge

land.lhs.true.i.if.else_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %me_feature_version.i = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 21
  %346 = ptrtoint ptr %me_feature_version.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load i32, ptr %me_feature_version.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 51, i32 %347)
  %cmp5.i = icmp ugt i32 %347, 51
  br i1 %cmp5.i, label %if.then807, label %land.lhs.true3.i.if.else_crit_edge

land.lhs.true3.i.if.else_crit_edge:               ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then807:                                       ; preds = %land.lhs.true3.i
  %348 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %virt, align 8
  %and810 = and i32 %349, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and810)
  %tobool811.not = icmp eq i32 %and810, 0
  br i1 %tobool811.not, label %if.then807.cond.false833_crit_edge, label %land.lhs.true812

if.then807.cond.false833_crit_edge:               ; preds = %if.then807
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false833

land.lhs.true812:                                 ; preds = %if.then807
  %funcs815 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %350 = ptrtoint ptr %funcs815 to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load ptr, ptr %funcs815, align 4
  %tobool816.not = icmp eq ptr %351, null
  br i1 %tobool816.not, label %land.lhs.true812.cond.false833_crit_edge, label %land.lhs.true817

land.lhs.true812.cond.false833_crit_edge:         ; preds = %land.lhs.true812
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false833

land.lhs.true817:                                 ; preds = %land.lhs.true812
  %sriov_wreg821 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %351, i32 0, i32 12
  %352 = ptrtoint ptr %sriov_wreg821 to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %sriov_wreg821, align 4
  %tobool822.not = icmp eq ptr %353, null
  br i1 %tobool822.not, label %land.lhs.true817.cond.false833_crit_edge, label %cond.true823

land.lhs.true817.cond.false833_crit_edge:         ; preds = %land.lhs.true817
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false833

cond.true823:                                     ; preds = %land.lhs.true817
  call void @__sanitizer_cov_trace_pc() #17
  %354 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %arrayidx90, align 8
  %356 = ptrtoint ptr %355 to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %355, align 4
  %add832 = add i32 %357, 4189
  %size = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 60, i32 1
  %358 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load i32, ptr %size, align 4
  %sub = add i32 %359, -4
  tail call void %353(ptr noundef %1, i32 noundef %add832, i32 noundef %sub, i32 noundef 0, i32 noundef 1) #15
  br label %do.body884

cond.false833:                                    ; preds = %land.lhs.true817.cond.false833_crit_edge, %land.lhs.true812.cond.false833_crit_edge, %if.then807.cond.false833_crit_edge
  %360 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load ptr, ptr %arrayidx90, align 8
  %362 = ptrtoint ptr %361 to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load i32, ptr %361, align 4
  %add838 = add i32 %363, 4189
  %size840 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 60, i32 1
  %364 = ptrtoint ptr %size840 to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load i32, ptr %size840, align 4
  %sub841 = add i32 %365, -4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add838, i32 noundef %sub841, i32 noundef 0) #15
  br label %do.body884

if.else:                                          ; preds = %land.lhs.true3.i.if.else_crit_edge, %land.lhs.true.i.if.else_crit_edge, %cond.end805.if.else_crit_edge
  %366 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %virt, align 8
  %and845 = and i32 %367, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and845)
  %tobool846.not = icmp eq i32 %and845, 0
  br i1 %tobool846.not, label %if.else.cond.false871_crit_edge, label %land.lhs.true847

if.else.cond.false871_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false871

land.lhs.true847:                                 ; preds = %if.else
  %funcs850 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %368 = ptrtoint ptr %funcs850 to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %funcs850, align 4
  %tobool851.not = icmp eq ptr %369, null
  br i1 %tobool851.not, label %land.lhs.true847.cond.false871_crit_edge, label %land.lhs.true852

land.lhs.true847.cond.false871_crit_edge:         ; preds = %land.lhs.true847
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false871

land.lhs.true852:                                 ; preds = %land.lhs.true847
  %sriov_wreg856 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %369, i32 0, i32 12
  %370 = ptrtoint ptr %sriov_wreg856 to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load ptr, ptr %sriov_wreg856, align 4
  %tobool857.not = icmp eq ptr %371, null
  br i1 %tobool857.not, label %land.lhs.true852.cond.false871_crit_edge, label %cond.true858

land.lhs.true852.cond.false871_crit_edge:         ; preds = %land.lhs.true852
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false871

cond.true858:                                     ; preds = %land.lhs.true852
  call void @__sanitizer_cov_trace_pc() #17
  %372 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %arrayidx90, align 8
  %374 = ptrtoint ptr %373 to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %373, align 4
  %add867 = add i32 %375, 4189
  %userqueue_end = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144, i32 10
  %376 = ptrtoint ptr %userqueue_end to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load i32, ptr %userqueue_end, align 4
  %mul869 = shl i32 %377, 3
  tail call void %371(ptr noundef %1, i32 noundef %add867, i32 noundef %mul869, i32 noundef 0, i32 noundef 1) #15
  br label %do.body884

cond.false871:                                    ; preds = %land.lhs.true852.cond.false871_crit_edge, %land.lhs.true847.cond.false871_crit_edge, %if.else.cond.false871_crit_edge
  %378 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load ptr, ptr %arrayidx90, align 8
  %380 = ptrtoint ptr %379 to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load i32, ptr %379, align 4
  %add876 = add i32 %381, 4189
  %userqueue_end878 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 144, i32 10
  %382 = ptrtoint ptr %userqueue_end878 to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load i32, ptr %userqueue_end878, align 4
  %mul879 = shl i32 %383, 3
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add876, i32 noundef %mul879, i32 noundef 0) #15
  br label %do.body884

do.body884:                                       ; preds = %cond.false871, %cond.true858, %cond.false833, %cond.true823, %cond.end765.do.body884_crit_edge
  %384 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load ptr, ptr %arrayidx90, align 8
  %386 = ptrtoint ptr %385 to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load i32, ptr %385, align 4
  %add890 = add i32 %387, 4692
  %388 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %virt, align 8
  %and893 = and i32 %389, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and893)
  %tobool894.not = icmp eq i32 %and893, 0
  br i1 %tobool894.not, label %do.body884.cond.false912_crit_edge, label %land.lhs.true895

do.body884.cond.false912_crit_edge:               ; preds = %do.body884
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false912

land.lhs.true895:                                 ; preds = %do.body884
  %funcs898 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %390 = ptrtoint ptr %funcs898 to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %funcs898, align 4
  %tobool899.not = icmp eq ptr %391, null
  br i1 %tobool899.not, label %land.lhs.true895.cond.false912_crit_edge, label %land.lhs.true900

land.lhs.true895.cond.false912_crit_edge:         ; preds = %land.lhs.true895
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false912

land.lhs.true900:                                 ; preds = %land.lhs.true895
  %sriov_wreg904 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %391, i32 0, i32 12
  %392 = ptrtoint ptr %sriov_wreg904 to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load ptr, ptr %sriov_wreg904, align 4
  %tobool905.not = icmp eq ptr %393, null
  br i1 %tobool905.not, label %land.lhs.true900.cond.false912_crit_edge, label %cond.true906

land.lhs.true900.cond.false912_crit_edge:         ; preds = %land.lhs.true900
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false912

cond.true906:                                     ; preds = %land.lhs.true900
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_doorbell_control911 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 143
  %394 = ptrtoint ptr %cp_hqd_pq_doorbell_control911 to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load i32, ptr %cp_hqd_pq_doorbell_control911, align 4
  tail call void %393(ptr noundef %1, i32 noundef %add890, i32 noundef %395, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end914

cond.false912:                                    ; preds = %land.lhs.true900.cond.false912_crit_edge, %land.lhs.true895.cond.false912_crit_edge, %do.body884.cond.false912_crit_edge
  %cp_hqd_pq_doorbell_control913 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 143
  %396 = ptrtoint ptr %cp_hqd_pq_doorbell_control913 to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load i32, ptr %cp_hqd_pq_doorbell_control913, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add890, i32 noundef %397, i32 noundef 0) #15
  br label %cond.end914

cond.end914:                                      ; preds = %cond.false912, %cond.true906
  %398 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load ptr, ptr %arrayidx90, align 8
  %400 = ptrtoint ptr %399 to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load i32, ptr %399, align 4
  %add923 = add i32 %401, 4731
  %402 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %virt, align 8
  %and926 = and i32 %403, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and926)
  %tobool927.not = icmp eq i32 %and926, 0
  br i1 %tobool927.not, label %cond.end914.cond.false945_crit_edge, label %land.lhs.true928

cond.end914.cond.false945_crit_edge:              ; preds = %cond.end914
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false945

land.lhs.true928:                                 ; preds = %cond.end914
  %funcs931 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %404 = ptrtoint ptr %funcs931 to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load ptr, ptr %funcs931, align 4
  %tobool932.not = icmp eq ptr %405, null
  br i1 %tobool932.not, label %land.lhs.true928.cond.false945_crit_edge, label %land.lhs.true933

land.lhs.true928.cond.false945_crit_edge:         ; preds = %land.lhs.true928
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false945

land.lhs.true933:                                 ; preds = %land.lhs.true928
  %sriov_wreg937 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %405, i32 0, i32 12
  %406 = ptrtoint ptr %sriov_wreg937 to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %sriov_wreg937, align 4
  %tobool938.not = icmp eq ptr %407, null
  br i1 %tobool938.not, label %land.lhs.true933.cond.false945_crit_edge, label %cond.true939

land.lhs.true933.cond.false945_crit_edge:         ; preds = %land.lhs.true933
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false945

cond.true939:                                     ; preds = %land.lhs.true933
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_wptr_lo944 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 182
  %408 = ptrtoint ptr %cp_hqd_pq_wptr_lo944 to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load i32, ptr %cp_hqd_pq_wptr_lo944, align 4
  tail call void %407(ptr noundef %1, i32 noundef %add923, i32 noundef %409, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end947

cond.false945:                                    ; preds = %land.lhs.true933.cond.false945_crit_edge, %land.lhs.true928.cond.false945_crit_edge, %cond.end914.cond.false945_crit_edge
  %cp_hqd_pq_wptr_lo946 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 182
  %410 = ptrtoint ptr %cp_hqd_pq_wptr_lo946 to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load i32, ptr %cp_hqd_pq_wptr_lo946, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add923, i32 noundef %411, i32 noundef 0) #15
  br label %cond.end947

cond.end947:                                      ; preds = %cond.false945, %cond.true939
  %412 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load ptr, ptr %arrayidx90, align 8
  %414 = ptrtoint ptr %413 to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load i32, ptr %413, align 4
  %add956 = add i32 %415, 4732
  %416 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load i32, ptr %virt, align 8
  %and959 = and i32 %417, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and959)
  %tobool960.not = icmp eq i32 %and959, 0
  br i1 %tobool960.not, label %cond.end947.cond.false978_crit_edge, label %land.lhs.true961

cond.end947.cond.false978_crit_edge:              ; preds = %cond.end947
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false978

land.lhs.true961:                                 ; preds = %cond.end947
  %funcs964 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %418 = ptrtoint ptr %funcs964 to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load ptr, ptr %funcs964, align 4
  %tobool965.not = icmp eq ptr %419, null
  br i1 %tobool965.not, label %land.lhs.true961.cond.false978_crit_edge, label %land.lhs.true966

land.lhs.true961.cond.false978_crit_edge:         ; preds = %land.lhs.true961
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false978

land.lhs.true966:                                 ; preds = %land.lhs.true961
  %sriov_wreg970 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %419, i32 0, i32 12
  %420 = ptrtoint ptr %sriov_wreg970 to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load ptr, ptr %sriov_wreg970, align 4
  %tobool971.not = icmp eq ptr %421, null
  br i1 %tobool971.not, label %land.lhs.true966.cond.false978_crit_edge, label %cond.true972

land.lhs.true966.cond.false978_crit_edge:         ; preds = %land.lhs.true966
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false978

cond.true972:                                     ; preds = %land.lhs.true966
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pq_wptr_hi977 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 183
  %422 = ptrtoint ptr %cp_hqd_pq_wptr_hi977 to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load i32, ptr %cp_hqd_pq_wptr_hi977, align 4
  tail call void %421(ptr noundef %1, i32 noundef %add956, i32 noundef %423, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end980

cond.false978:                                    ; preds = %land.lhs.true966.cond.false978_crit_edge, %land.lhs.true961.cond.false978_crit_edge, %cond.end947.cond.false978_crit_edge
  %cp_hqd_pq_wptr_hi979 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 183
  %424 = ptrtoint ptr %cp_hqd_pq_wptr_hi979 to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load i32, ptr %cp_hqd_pq_wptr_hi979, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add956, i32 noundef %425, i32 noundef 0) #15
  br label %cond.end980

cond.end980:                                      ; preds = %cond.false978, %cond.true972
  %426 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load ptr, ptr %arrayidx90, align 8
  %428 = ptrtoint ptr %427 to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load i32, ptr %427, align 4
  %add989 = add i32 %429, 4680
  %430 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %virt, align 8
  %and992 = and i32 %431, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and992)
  %tobool993.not = icmp eq i32 %and992, 0
  br i1 %tobool993.not, label %cond.end980.cond.false1010_crit_edge, label %land.lhs.true994

cond.end980.cond.false1010_crit_edge:             ; preds = %cond.end980
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1010

land.lhs.true994:                                 ; preds = %cond.end980
  %funcs997 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %432 = ptrtoint ptr %funcs997 to i32
  call void @__asan_load4_noabort(i32 %432)
  %433 = load ptr, ptr %funcs997, align 4
  %tobool998.not = icmp eq ptr %433, null
  br i1 %tobool998.not, label %land.lhs.true994.cond.false1010_crit_edge, label %land.lhs.true999

land.lhs.true994.cond.false1010_crit_edge:        ; preds = %land.lhs.true994
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1010

land.lhs.true999:                                 ; preds = %land.lhs.true994
  %sriov_wreg1003 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %433, i32 0, i32 12
  %434 = ptrtoint ptr %sriov_wreg1003 to i32
  call void @__asan_load4_noabort(i32 %434)
  %435 = load ptr, ptr %sriov_wreg1003, align 4
  %tobool1004.not = icmp eq ptr %435, null
  br i1 %tobool1004.not, label %land.lhs.true999.cond.false1010_crit_edge, label %cond.true1005

land.lhs.true999.cond.false1010_crit_edge:        ; preds = %land.lhs.true999
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1010

cond.true1005:                                    ; preds = %land.lhs.true999
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_vmid = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 131
  %436 = ptrtoint ptr %cp_hqd_vmid to i32
  call void @__asan_load4_noabort(i32 %436)
  %437 = load i32, ptr %cp_hqd_vmid, align 4
  tail call void %435(ptr noundef %1, i32 noundef %add989, i32 noundef %437, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end1012

cond.false1010:                                   ; preds = %land.lhs.true999.cond.false1010_crit_edge, %land.lhs.true994.cond.false1010_crit_edge, %cond.end980.cond.false1010_crit_edge
  %cp_hqd_vmid1011 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 131
  %438 = ptrtoint ptr %cp_hqd_vmid1011 to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %cp_hqd_vmid1011, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add989, i32 noundef %439, i32 noundef 0) #15
  br label %cond.end1012

cond.end1012:                                     ; preds = %cond.false1010, %cond.true1005
  %440 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load ptr, ptr %arrayidx90, align 8
  %442 = ptrtoint ptr %441 to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load i32, ptr %441, align 4
  %add1021 = add i32 %443, 4681
  %444 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load i32, ptr %virt, align 8
  %and1024 = and i32 %445, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1024)
  %tobool1025.not = icmp eq i32 %and1024, 0
  br i1 %tobool1025.not, label %cond.end1012.cond.false1042_crit_edge, label %land.lhs.true1026

cond.end1012.cond.false1042_crit_edge:            ; preds = %cond.end1012
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1042

land.lhs.true1026:                                ; preds = %cond.end1012
  %funcs1029 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %446 = ptrtoint ptr %funcs1029 to i32
  call void @__asan_load4_noabort(i32 %446)
  %447 = load ptr, ptr %funcs1029, align 4
  %tobool1030.not = icmp eq ptr %447, null
  br i1 %tobool1030.not, label %land.lhs.true1026.cond.false1042_crit_edge, label %land.lhs.true1031

land.lhs.true1026.cond.false1042_crit_edge:       ; preds = %land.lhs.true1026
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1042

land.lhs.true1031:                                ; preds = %land.lhs.true1026
  %sriov_wreg1035 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %447, i32 0, i32 12
  %448 = ptrtoint ptr %sriov_wreg1035 to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load ptr, ptr %sriov_wreg1035, align 4
  %tobool1036.not = icmp eq ptr %449, null
  br i1 %tobool1036.not, label %land.lhs.true1031.cond.false1042_crit_edge, label %cond.true1037

land.lhs.true1031.cond.false1042_crit_edge:       ; preds = %land.lhs.true1031
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1042

cond.true1037:                                    ; preds = %land.lhs.true1031
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_persistent_state = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 132
  %450 = ptrtoint ptr %cp_hqd_persistent_state to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load i32, ptr %cp_hqd_persistent_state, align 4
  tail call void %449(ptr noundef %1, i32 noundef %add1021, i32 noundef %451, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end1044

cond.false1042:                                   ; preds = %land.lhs.true1031.cond.false1042_crit_edge, %land.lhs.true1026.cond.false1042_crit_edge, %cond.end1012.cond.false1042_crit_edge
  %cp_hqd_persistent_state1043 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 132
  %452 = ptrtoint ptr %cp_hqd_persistent_state1043 to i32
  call void @__asan_load4_noabort(i32 %452)
  %453 = load i32, ptr %cp_hqd_persistent_state1043, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add1021, i32 noundef %453, i32 noundef 0) #15
  br label %cond.end1044

cond.end1044:                                     ; preds = %cond.false1042, %cond.true1037
  %454 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load ptr, ptr %arrayidx90, align 8
  %456 = ptrtoint ptr %455 to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load i32, ptr %455, align 4
  %add1053 = add i32 %457, 4679
  %458 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load i32, ptr %virt, align 8
  %and1056 = and i32 %459, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1056)
  %tobool1057.not = icmp eq i32 %and1056, 0
  br i1 %tobool1057.not, label %cond.end1044.cond.false1074_crit_edge, label %land.lhs.true1058

cond.end1044.cond.false1074_crit_edge:            ; preds = %cond.end1044
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1074

land.lhs.true1058:                                ; preds = %cond.end1044
  %funcs1061 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %460 = ptrtoint ptr %funcs1061 to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load ptr, ptr %funcs1061, align 4
  %tobool1062.not = icmp eq ptr %461, null
  br i1 %tobool1062.not, label %land.lhs.true1058.cond.false1074_crit_edge, label %land.lhs.true1063

land.lhs.true1058.cond.false1074_crit_edge:       ; preds = %land.lhs.true1058
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1074

land.lhs.true1063:                                ; preds = %land.lhs.true1058
  %sriov_wreg1067 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %461, i32 0, i32 12
  %462 = ptrtoint ptr %sriov_wreg1067 to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load ptr, ptr %sriov_wreg1067, align 4
  %tobool1068.not = icmp eq ptr %463, null
  br i1 %tobool1068.not, label %land.lhs.true1063.cond.false1074_crit_edge, label %cond.true1069

land.lhs.true1063.cond.false1074_crit_edge:       ; preds = %land.lhs.true1063
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1074

cond.true1069:                                    ; preds = %land.lhs.true1063
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_active = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 130
  %464 = ptrtoint ptr %cp_hqd_active to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %cp_hqd_active, align 4
  tail call void %463(ptr noundef %1, i32 noundef %add1053, i32 noundef %465, i32 noundef 4, i32 noundef 1) #15
  br label %cond.end1076

cond.false1074:                                   ; preds = %land.lhs.true1063.cond.false1074_crit_edge, %land.lhs.true1058.cond.false1074_crit_edge, %cond.end1044.cond.false1074_crit_edge
  %cp_hqd_active1075 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 130
  %466 = ptrtoint ptr %cp_hqd_active1075 to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load i32, ptr %cp_hqd_active1075, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add1053, i32 noundef %467, i32 noundef 0) #15
  br label %cond.end1076

cond.end1076:                                     ; preds = %cond.false1074, %cond.true1069
  %468 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %468)
  %469 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %469)
  %tobool1080.not = icmp eq i8 %469, 0
  br i1 %tobool1080.not, label %cond.end1076.if.end1188_crit_edge, label %if.then1081

cond.end1076.if.end1188_crit_edge:                ; preds = %cond.end1076
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end1188

if.then1081:                                      ; preds = %cond.end1076
  %470 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load i32, ptr %virt, align 8
  %and1084 = and i32 %471, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1084)
  %tobool1085.not = icmp eq i32 %and1084, 0
  br i1 %tobool1085.not, label %if.then1081.cond.false1176.sink.split_crit_edge, label %land.lhs.true1086

if.then1081.cond.false1176.sink.split_crit_edge:  ; preds = %if.then1081
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1176.sink.split

land.lhs.true1086:                                ; preds = %if.then1081
  %funcs1089 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %472 = ptrtoint ptr %funcs1089 to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load ptr, ptr %funcs1089, align 4
  %tobool1090.not = icmp eq ptr %473, null
  br i1 %tobool1090.not, label %land.lhs.true1086.cond.false1176.sink.split_crit_edge, label %land.lhs.true1091

land.lhs.true1086.cond.false1176.sink.split_crit_edge: ; preds = %land.lhs.true1086
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1176.sink.split

land.lhs.true1091:                                ; preds = %land.lhs.true1086
  %sriov_wreg1095 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %473, i32 0, i32 12
  %474 = ptrtoint ptr %sriov_wreg1095 to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load ptr, ptr %sriov_wreg1095, align 4
  %tobool1096.not = icmp eq ptr %475, null
  br i1 %tobool1096.not, label %land.lhs.true1154, label %cond.true1097

cond.true1097:                                    ; preds = %land.lhs.true1091
  %476 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %476)
  %477 = load ptr, ptr %arrayidx90, align 8
  %478 = ptrtoint ptr %477 to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load i32, ptr %477, align 4
  %add1106 = add i32 %479, 4280
  %sriov_rreg1120 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %473, i32 0, i32 13
  %480 = ptrtoint ptr %sriov_rreg1120 to i32
  call void @__asan_load4_noabort(i32 %480)
  %481 = load ptr, ptr %sriov_rreg1120, align 4
  %tobool1121.not = icmp eq ptr %481, null
  br i1 %tobool1121.not, label %cond.false1133, label %cond.true1122

cond.true1122:                                    ; preds = %cond.true1097
  call void @__sanitizer_cov_trace_pc() #17
  %call1132 = tail call i32 %481(ptr noundef %1, i32 noundef %add1106, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end1140

cond.false1133:                                   ; preds = %cond.true1097
  call void @__sanitizer_cov_trace_pc() #17
  %call1139 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add1106, i32 noundef 0) #15
  br label %cond.end1140

cond.end1140:                                     ; preds = %cond.false1133, %cond.true1122
  %cond1141 = phi i32 [ %call1132, %cond.true1122 ], [ %call1139, %cond.false1133 ]
  %or1143 = or i32 %cond1141, 2
  tail call void %475(ptr noundef %1, i32 noundef %add1106, i32 noundef %or1143, i32 noundef 0, i32 noundef 1) #15
  br label %if.end1188

land.lhs.true1154:                                ; preds = %land.lhs.true1091
  %482 = ptrtoint ptr %funcs1089 to i32
  call void @__asan_load4_noabort(i32 %482)
  %.pr16 = load ptr, ptr %funcs1089, align 4
  %483 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load ptr, ptr %arrayidx90, align 8
  %485 = ptrtoint ptr %484 to i32
  call void @__asan_load4_noabort(i32 %485)
  %486 = load i32, ptr %484, align 4
  %add11497 = add i32 %486, 4280
  %tobool1158.not = icmp eq ptr %.pr16, null
  br i1 %tobool1158.not, label %land.lhs.true1154.cond.false1176_crit_edge, label %land.lhs.true1159

land.lhs.true1154.cond.false1176_crit_edge:       ; preds = %land.lhs.true1154
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1176

land.lhs.true1159:                                ; preds = %land.lhs.true1154
  %sriov_rreg1163 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %.pr16, i32 0, i32 13
  %487 = ptrtoint ptr %sriov_rreg1163 to i32
  call void @__asan_load4_noabort(i32 %487)
  %488 = load ptr, ptr %sriov_rreg1163, align 4
  %tobool1164.not = icmp eq ptr %488, null
  br i1 %tobool1164.not, label %land.lhs.true1159.cond.false1176_crit_edge, label %cond.true1165

land.lhs.true1159.cond.false1176_crit_edge:       ; preds = %land.lhs.true1159
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false1176

cond.true1165:                                    ; preds = %land.lhs.true1159
  call void @__sanitizer_cov_trace_pc() #17
  %call1175 = tail call i32 %488(ptr noundef %1, i32 noundef %add11497, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end1183

cond.false1176.sink.split:                        ; preds = %land.lhs.true1086.cond.false1176.sink.split_crit_edge, %if.then1081.cond.false1176.sink.split_crit_edge
  %489 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %489)
  %490 = load ptr, ptr %arrayidx90, align 8
  %491 = ptrtoint ptr %490 to i32
  call void @__asan_load4_noabort(i32 %491)
  %492 = load i32, ptr %490, align 4
  %add1149717 = add i32 %492, 4280
  br label %cond.false1176

cond.false1176:                                   ; preds = %cond.false1176.sink.split, %land.lhs.true1159.cond.false1176_crit_edge, %land.lhs.true1154.cond.false1176_crit_edge
  %add114910 = phi i32 [ %add11497, %land.lhs.true1159.cond.false1176_crit_edge ], [ %add11497, %land.lhs.true1154.cond.false1176_crit_edge ], [ %add1149717, %cond.false1176.sink.split ]
  %call1182 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add114910, i32 noundef 0) #15
  br label %cond.end1183

cond.end1183:                                     ; preds = %cond.false1176, %cond.true1165
  %add11498 = phi i32 [ %add11497, %cond.true1165 ], [ %add114910, %cond.false1176 ]
  %cond1184 = phi i32 [ %call1175, %cond.true1165 ], [ %call1182, %cond.false1176 ]
  %or1186 = or i32 %cond1184, 2
  tail call void @amdgpu_device_wreg(ptr noundef %1, i32 noundef %add11498, i32 noundef %or1186, i32 noundef 0) #15
  br label %if.end1188

if.end1188:                                       ; preds = %cond.end1183, %cond.end1140, %cond.end1076.if.end1188_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_mqd_init(ptr noundef %ring) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ring, align 8
  %mqd_ptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 21
  %2 = ptrtoint ptr %mqd_ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mqd_ptr, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1070528512, ptr %3, align 4
  %compute_pipelinestat_enable = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 11
  %5 = ptrtoint ptr %compute_pipelinestat_enable to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %compute_pipelinestat_enable, align 4
  %compute_static_thread_mgmt_se0 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 23
  %6 = ptrtoint ptr %compute_static_thread_mgmt_se0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %compute_static_thread_mgmt_se0, align 4
  %compute_static_thread_mgmt_se1 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 24
  %7 = ptrtoint ptr %compute_static_thread_mgmt_se1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %compute_static_thread_mgmt_se1, align 4
  %compute_static_thread_mgmt_se2 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 26
  %8 = ptrtoint ptr %compute_static_thread_mgmt_se2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %compute_static_thread_mgmt_se2, align 4
  %compute_static_thread_mgmt_se3 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 27
  %9 = ptrtoint ptr %compute_static_thread_mgmt_se3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %compute_static_thread_mgmt_se3, align 4
  %compute_static_thread_mgmt_se4 = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 39
  %compute_misc_reserved = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 32
  %10 = call ptr @memset(ptr %compute_static_thread_mgmt_se4, i32 255, i32 16)
  %11 = ptrtoint ptr %compute_misc_reserved to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 3, ptr %compute_misc_reserved, align 4
  %mqd_gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 20
  %12 = ptrtoint ptr %mqd_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %mqd_gpu_addr, align 8
  %14 = trunc i64 %13 to i32
  %conv = add i32 %14, 2056
  %dynamic_cu_mask_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 126
  %15 = ptrtoint ptr %dynamic_cu_mask_addr_lo to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv, ptr %dynamic_cu_mask_addr_lo, align 4
  %16 = load i64, ptr %mqd_gpu_addr, align 8
  %add3 = add i64 %16, 2056
  %shr = lshr i64 %add3, 32
  %conv5 = trunc i64 %shr to i32
  %dynamic_cu_mask_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 127
  %17 = ptrtoint ptr %dynamic_cu_mask_addr_hi to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %conv5, ptr %dynamic_cu_mask_addr_hi, align 4
  %eop_gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 22
  %18 = ptrtoint ptr %eop_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %eop_gpu_addr, align 8
  %shr6 = lshr i64 %19, 8
  %conv7 = trunc i64 %shr6 to i32
  %cp_hqd_eop_base_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 165
  %20 = ptrtoint ptr %cp_hqd_eop_base_addr_lo to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %conv7, ptr %cp_hqd_eop_base_addr_lo, align 4
  %shr8 = lshr i64 %19, 40
  %conv10 = trunc i64 %shr8 to i32
  %cp_hqd_eop_base_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 166
  %21 = ptrtoint ptr %cp_hqd_eop_base_addr_hi to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %conv10, ptr %cp_hqd_eop_base_addr_hi, align 4
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 132
  %22 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %virt, align 8
  %and11 = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool.not = icmp eq i32 %and11, 0
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.lhs.true

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %entry
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %24 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %funcs, align 4
  %tobool12.not = icmp eq ptr %25, null
  br i1 %tobool12.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true13

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true13:                                  ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %25, i32 0, i32 13
  %26 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sriov_rreg, align 4
  %tobool17.not = icmp eq ptr %27, null
  br i1 %tobool17.not, label %land.lhs.true13.cond.false_crit_edge, label %cond.true

land.lhs.true13.cond.false_crit_edge:             ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add24 = add i32 %31, 4716
  %call = tail call i32 %27(ptr noundef %1, i32 noundef %add24, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true13.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %entry.cond.false_crit_edge
  %arrayidx26 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %32 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx26, align 8
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %add29 = add i32 %35, 4716
  %call30 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add29, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call30, %cond.false ]
  %and31 = and i32 %cond, -64
  %or = or i32 %and31, 9
  %cp_hqd_eop_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 167
  %36 = ptrtoint ptr %cp_hqd_eop_control to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %or, ptr %cp_hqd_eop_control, align 4
  %37 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %virt, align 8
  %and34 = and i32 %38, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %cond.end.cond.false58_crit_edge, label %land.lhs.true36

cond.end.cond.false58_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false58

land.lhs.true36:                                  ; preds = %cond.end
  %funcs39 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %39 = ptrtoint ptr %funcs39 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %funcs39, align 4
  %tobool40.not = icmp eq ptr %40, null
  br i1 %tobool40.not, label %land.lhs.true36.cond.false58_crit_edge, label %land.lhs.true41

land.lhs.true36.cond.false58_crit_edge:           ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false58

land.lhs.true41:                                  ; preds = %land.lhs.true36
  %sriov_rreg45 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %40, i32 0, i32 13
  %41 = ptrtoint ptr %sriov_rreg45 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sriov_rreg45, align 4
  %tobool46.not = icmp eq ptr %42, null
  br i1 %tobool46.not, label %land.lhs.true41.cond.false58_crit_edge, label %cond.true47

land.lhs.true41.cond.false58_crit_edge:           ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false58

cond.true47:                                      ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx53 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %43 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx53, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add56 = add i32 %46, 4692
  %call57 = tail call i32 %42(ptr noundef %1, i32 noundef %add56, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end65

cond.false58:                                     ; preds = %land.lhs.true41.cond.false58_crit_edge, %land.lhs.true36.cond.false58_crit_edge, %cond.end.cond.false58_crit_edge
  %arrayidx60 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %47 = ptrtoint ptr %arrayidx60 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx60, align 8
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %48, align 4
  %add63 = add i32 %50, 4692
  %call64 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add63, i32 noundef 0) #15
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false58, %cond.true47
  %cond66 = phi i32 [ %call57, %cond.true47 ], [ %call64, %cond.false58 ]
  %use_doorbell = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 24
  %51 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool67.not = icmp eq i8 %52, 0
  br i1 %tobool67.not, label %if.else, label %if.then

if.then:                                          ; preds = %cond.end65
  call void @__sanitizer_cov_trace_pc() #17
  %and68 = and i32 %cond66, 536870915
  %doorbell_index = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %53 = ptrtoint ptr %doorbell_index to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %doorbell_index, align 8
  %shl = shl i32 %54, 2
  %and69 = and i32 %shl, 268435452
  %or70 = or i32 %and68, %and69
  %or72 = or i32 %or70, 1073741824
  br label %if.end

if.else:                                          ; preds = %cond.end65
  call void @__sanitizer_cov_trace_pc() #17
  %and77 = and i32 %cond66, -1073741825
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tmp.0 = phi i32 [ %or72, %if.then ], [ %and77, %if.else ]
  %cp_hqd_pq_doorbell_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 143
  %55 = ptrtoint ptr %cp_hqd_pq_doorbell_control to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %tmp.0, ptr %cp_hqd_pq_doorbell_control, align 4
  %wptr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 7
  %56 = ptrtoint ptr %wptr to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 0, ptr %wptr, align 8
  %cp_hqd_dequeue_request = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 152
  %57 = ptrtoint ptr %cp_hqd_dequeue_request to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %cp_hqd_dequeue_request, align 4
  %cp_hqd_pq_rptr = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 138
  %58 = ptrtoint ptr %cp_hqd_pq_rptr to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 0, ptr %cp_hqd_pq_rptr, align 4
  %cp_hqd_pq_wptr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 182
  %59 = ptrtoint ptr %cp_hqd_pq_wptr_lo to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 0, ptr %cp_hqd_pq_wptr_lo, align 4
  %cp_hqd_pq_wptr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 183
  %60 = ptrtoint ptr %cp_hqd_pq_wptr_hi to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %cp_hqd_pq_wptr_hi, align 4
  %61 = ptrtoint ptr %mqd_gpu_addr to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %mqd_gpu_addr, align 8
  %63 = trunc i64 %62 to i32
  %conv81 = and i32 %63, -4
  %cp_mqd_base_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 128
  %64 = ptrtoint ptr %cp_mqd_base_addr_lo to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %conv81, ptr %cp_mqd_base_addr_lo, align 4
  %65 = load i64, ptr %mqd_gpu_addr, align 8
  %shr83 = lshr i64 %65, 32
  %conv85 = trunc i64 %shr83 to i32
  %cp_mqd_base_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 129
  %66 = ptrtoint ptr %cp_mqd_base_addr_hi to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %conv85, ptr %cp_mqd_base_addr_hi, align 4
  %67 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %virt, align 8
  %and88 = and i32 %68, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and88)
  %tobool89.not = icmp eq i32 %and88, 0
  br i1 %tobool89.not, label %if.end.cond.false112_crit_edge, label %land.lhs.true90

if.end.cond.false112_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false112

land.lhs.true90:                                  ; preds = %if.end
  %funcs93 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %69 = ptrtoint ptr %funcs93 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %funcs93, align 4
  %tobool94.not = icmp eq ptr %70, null
  br i1 %tobool94.not, label %land.lhs.true90.cond.false112_crit_edge, label %land.lhs.true95

land.lhs.true90.cond.false112_crit_edge:          ; preds = %land.lhs.true90
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false112

land.lhs.true95:                                  ; preds = %land.lhs.true90
  %sriov_rreg99 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %70, i32 0, i32 13
  %71 = ptrtoint ptr %sriov_rreg99 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sriov_rreg99, align 4
  %tobool100.not = icmp eq ptr %72, null
  br i1 %tobool100.not, label %land.lhs.true95.cond.false112_crit_edge, label %cond.true101

land.lhs.true95.cond.false112_crit_edge:          ; preds = %land.lhs.true95
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false112

cond.true101:                                     ; preds = %land.lhs.true95
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx107 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %73 = ptrtoint ptr %arrayidx107 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx107, align 8
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %74, align 4
  %add110 = add i32 %76, 4711
  %call111 = tail call i32 %72(ptr noundef %1, i32 noundef %add110, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end119

cond.false112:                                    ; preds = %land.lhs.true95.cond.false112_crit_edge, %land.lhs.true90.cond.false112_crit_edge, %if.end.cond.false112_crit_edge
  %arrayidx114 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %77 = ptrtoint ptr %arrayidx114 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx114, align 8
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %78, align 4
  %add117 = add i32 %80, 4711
  %call118 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add117, i32 noundef 0) #15
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false112, %cond.true101
  %cond120 = phi i32 [ %call111, %cond.true101 ], [ %call118, %cond.false112 ]
  %and121 = and i32 %cond120, -16
  %cp_mqd_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 162
  %81 = ptrtoint ptr %cp_mqd_control to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %and121, ptr %cp_mqd_control, align 4
  %gpu_addr = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 12
  %82 = ptrtoint ptr %gpu_addr to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %gpu_addr, align 8
  %shr123 = lshr i64 %83, 8
  %conv124 = trunc i64 %shr123 to i32
  %cp_hqd_pq_base_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 136
  %84 = ptrtoint ptr %cp_hqd_pq_base_lo to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %conv124, ptr %cp_hqd_pq_base_lo, align 4
  %shr125 = lshr i64 %83, 40
  %conv127 = trunc i64 %shr125 to i32
  %cp_hqd_pq_base_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 137
  %85 = ptrtoint ptr %cp_hqd_pq_base_hi to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %conv127, ptr %cp_hqd_pq_base_hi, align 4
  %86 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %virt, align 8
  %and130 = and i32 %87, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and130)
  %tobool131.not = icmp eq i32 %and130, 0
  br i1 %tobool131.not, label %cond.end119.cond.false154_crit_edge, label %land.lhs.true132

cond.end119.cond.false154_crit_edge:              ; preds = %cond.end119
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false154

land.lhs.true132:                                 ; preds = %cond.end119
  %funcs135 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %88 = ptrtoint ptr %funcs135 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %funcs135, align 4
  %tobool136.not = icmp eq ptr %89, null
  br i1 %tobool136.not, label %land.lhs.true132.cond.false154_crit_edge, label %land.lhs.true137

land.lhs.true132.cond.false154_crit_edge:         ; preds = %land.lhs.true132
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false154

land.lhs.true137:                                 ; preds = %land.lhs.true132
  %sriov_rreg141 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %89, i32 0, i32 13
  %90 = ptrtoint ptr %sriov_rreg141 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %sriov_rreg141, align 4
  %tobool142.not = icmp eq ptr %91, null
  br i1 %tobool142.not, label %land.lhs.true137.cond.false154_crit_edge, label %cond.true143

land.lhs.true137.cond.false154_crit_edge:         ; preds = %land.lhs.true137
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false154

cond.true143:                                     ; preds = %land.lhs.true137
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx149 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %92 = ptrtoint ptr %arrayidx149 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %arrayidx149, align 8
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %93, align 4
  %add152 = add i32 %95, 4694
  %call153 = tail call i32 %91(ptr noundef %1, i32 noundef %add152, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end161

cond.false154:                                    ; preds = %land.lhs.true137.cond.false154_crit_edge, %land.lhs.true132.cond.false154_crit_edge, %cond.end119.cond.false154_crit_edge
  %arrayidx156 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %96 = ptrtoint ptr %arrayidx156 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %arrayidx156, align 8
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %97, align 4
  %add159 = add i32 %99, 4694
  %call160 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add159, i32 noundef 0) #15
  br label %cond.end161

cond.end161:                                      ; preds = %cond.false154, %cond.true143
  %cond162 = phi i32 [ %call153, %cond.true143 ], [ %call160, %cond.false154 ]
  %and163 = and i32 %cond162, 268026048
  %ring_size = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 9
  %100 = ptrtoint ptr %ring_size to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %ring_size, align 8
  %div1 = lshr i32 %101, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %101)
  %cmp.i = icmp ugt i32 %101, 7
  %sub.i2 = add nsw i32 %div1, -1
  %102 = tail call i32 @llvm.ctlz.i32(i32 %sub.i2, i1 false) #15, !range !1014
  %add.i.op = sub nsw i32 31, %102
  %add.i.op.op = and i32 %add.i.op, 63
  %and209 = select i1 %cmp.i, i32 %add.i.op.op, i32 63
  %or210 = or i32 %and163, %and209
  %or222 = or i32 %or210, -1073610752
  %cp_hqd_pq_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 145
  %103 = ptrtoint ptr %cp_hqd_pq_control to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %or222, ptr %cp_hqd_pq_control, align 4
  %gpu_addr223 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 70, i32 2
  %104 = ptrtoint ptr %gpu_addr223 to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %gpu_addr223, align 8
  %rptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 6
  %106 = ptrtoint ptr %rptr_offs to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %rptr_offs, align 8
  %mul = shl i32 %107, 2
  %conv224 = zext i32 %mul to i64
  %add225 = add i64 %105, %conv224
  %108 = trunc i64 %add225 to i32
  %conv227 = and i32 %108, -4
  %cp_hqd_pq_rptr_report_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 139
  %109 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_lo to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %conv227, ptr %cp_hqd_pq_rptr_report_addr_lo, align 4
  %shr228 = lshr i64 %add225, 32
  %conv230 = trunc i64 %shr228 to i32
  %and231 = and i32 %conv230, 65535
  %cp_hqd_pq_rptr_report_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 140
  %110 = ptrtoint ptr %cp_hqd_pq_rptr_report_addr_hi to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %and231, ptr %cp_hqd_pq_rptr_report_addr_hi, align 4
  %111 = load i64, ptr %gpu_addr223, align 8
  %wptr_offs = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 26
  %112 = ptrtoint ptr %wptr_offs to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %wptr_offs, align 8
  %mul234 = shl i32 %113, 2
  %conv235 = zext i32 %mul234 to i64
  %add236 = add i64 %111, %conv235
  %114 = trunc i64 %add236 to i32
  %conv238 = and i32 %114, -4
  %cp_hqd_pq_wptr_poll_addr_lo = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 141
  %115 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_lo to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %conv238, ptr %cp_hqd_pq_wptr_poll_addr_lo, align 4
  %shr239 = lshr i64 %add236, 32
  %conv241 = trunc i64 %shr239 to i32
  %and242 = and i32 %conv241, 65535
  %cp_hqd_pq_wptr_poll_addr_hi = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 142
  %116 = ptrtoint ptr %cp_hqd_pq_wptr_poll_addr_hi to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %and242, ptr %cp_hqd_pq_wptr_poll_addr_hi, align 4
  %117 = ptrtoint ptr %use_doorbell to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %use_doorbell, align 4, !range !1008
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %118)
  %tobool244.not = icmp eq i8 %118, 0
  br i1 %tobool244.not, label %cond.end161.if.end292_crit_edge, label %if.then245

cond.end161.if.end292_crit_edge:                  ; preds = %cond.end161
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end292

if.then245:                                       ; preds = %cond.end161
  %119 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %virt, align 8
  %and248 = and i32 %120, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and248)
  %tobool249.not = icmp eq i32 %and248, 0
  br i1 %tobool249.not, label %if.then245.cond.false272_crit_edge, label %land.lhs.true250

if.then245.cond.false272_crit_edge:               ; preds = %if.then245
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272

land.lhs.true250:                                 ; preds = %if.then245
  %funcs253 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %121 = ptrtoint ptr %funcs253 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %funcs253, align 4
  %tobool254.not = icmp eq ptr %122, null
  br i1 %tobool254.not, label %land.lhs.true250.cond.false272_crit_edge, label %land.lhs.true255

land.lhs.true250.cond.false272_crit_edge:         ; preds = %land.lhs.true250
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272

land.lhs.true255:                                 ; preds = %land.lhs.true250
  %sriov_rreg259 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %122, i32 0, i32 13
  %123 = ptrtoint ptr %sriov_rreg259 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %sriov_rreg259, align 4
  %tobool260.not = icmp eq ptr %124, null
  br i1 %tobool260.not, label %land.lhs.true255.cond.false272_crit_edge, label %cond.true261

land.lhs.true255.cond.false272_crit_edge:         ; preds = %land.lhs.true255
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false272

cond.true261:                                     ; preds = %land.lhs.true255
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx267 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %125 = ptrtoint ptr %arrayidx267 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %arrayidx267, align 8
  %127 = ptrtoint ptr %126 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %126, align 4
  %add270 = add i32 %128, 4692
  %call271 = tail call i32 %124(ptr noundef %1, i32 noundef %add270, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end279

cond.false272:                                    ; preds = %land.lhs.true255.cond.false272_crit_edge, %land.lhs.true250.cond.false272_crit_edge, %if.then245.cond.false272_crit_edge
  %arrayidx274 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %129 = ptrtoint ptr %arrayidx274 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %arrayidx274, align 8
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %130, align 4
  %add277 = add i32 %132, 4692
  %call278 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add277, i32 noundef 0) #15
  br label %cond.end279

cond.end279:                                      ; preds = %cond.false272, %cond.true261
  %cond280 = phi i32 [ %call271, %cond.true261 ], [ %call278, %cond.false272 ]
  %and281 = and i32 %cond280, 536870915
  %doorbell_index282 = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 23
  %133 = ptrtoint ptr %doorbell_index282 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %doorbell_index282, align 8
  %shl283 = shl i32 %134, 2
  %and284 = and i32 %shl283, 268435452
  %or285 = or i32 %and281, %and284
  %or287 = or i32 %or285, 1073741824
  br label %if.end292

if.end292:                                        ; preds = %cond.end279, %cond.end161.if.end292_crit_edge
  %tmp.1 = phi i32 [ %or287, %cond.end279 ], [ 0, %cond.end161.if.end292_crit_edge ]
  %135 = ptrtoint ptr %cp_hqd_pq_doorbell_control to i32
  call void @__asan_store4_noabort(i32 %135)
  store i32 %tmp.1, ptr %cp_hqd_pq_doorbell_control, align 4
  %136 = ptrtoint ptr %wptr to i32
  call void @__asan_store8_noabort(i32 %136)
  store i64 0, ptr %wptr, align 8
  %137 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %virt, align 8
  %and297 = and i32 %138, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and297)
  %tobool298.not = icmp eq i32 %and297, 0
  br i1 %tobool298.not, label %if.end292.cond.false321_crit_edge, label %land.lhs.true299

if.end292.cond.false321_crit_edge:                ; preds = %if.end292
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false321

land.lhs.true299:                                 ; preds = %if.end292
  %funcs302 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %139 = ptrtoint ptr %funcs302 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %funcs302, align 4
  %tobool303.not = icmp eq ptr %140, null
  br i1 %tobool303.not, label %land.lhs.true299.cond.false321_crit_edge, label %land.lhs.true304

land.lhs.true299.cond.false321_crit_edge:         ; preds = %land.lhs.true299
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false321

land.lhs.true304:                                 ; preds = %land.lhs.true299
  %sriov_rreg308 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %140, i32 0, i32 13
  %141 = ptrtoint ptr %sriov_rreg308 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %sriov_rreg308, align 4
  %tobool309.not = icmp eq ptr %142, null
  br i1 %tobool309.not, label %land.lhs.true304.cond.false321_crit_edge, label %cond.true310

land.lhs.true304.cond.false321_crit_edge:         ; preds = %land.lhs.true304
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false321

cond.true310:                                     ; preds = %land.lhs.true304
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx316 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %143 = ptrtoint ptr %arrayidx316 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %arrayidx316, align 8
  %145 = ptrtoint ptr %144 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %144, align 4
  %add319 = add i32 %146, 4687
  %call320 = tail call i32 %142(ptr noundef %1, i32 noundef %add319, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end328

cond.false321:                                    ; preds = %land.lhs.true304.cond.false321_crit_edge, %land.lhs.true299.cond.false321_crit_edge, %if.end292.cond.false321_crit_edge
  %arrayidx323 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %147 = ptrtoint ptr %arrayidx323 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %arrayidx323, align 8
  %149 = ptrtoint ptr %148 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %148, align 4
  %add326 = add i32 %150, 4687
  %call327 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add326, i32 noundef 0) #15
  br label %cond.end328

cond.end328:                                      ; preds = %cond.false321, %cond.true310
  %cond329 = phi i32 [ %call320, %cond.true310 ], [ %call327, %cond.false321 ]
  %151 = ptrtoint ptr %cp_hqd_pq_rptr to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %cond329, ptr %cp_hqd_pq_rptr, align 4
  %cp_hqd_vmid = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 131
  %152 = ptrtoint ptr %cp_hqd_vmid to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 0, ptr %cp_hqd_vmid, align 4
  %153 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %virt, align 8
  %and333 = and i32 %154, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and333)
  %tobool334.not = icmp eq i32 %and333, 0
  br i1 %tobool334.not, label %cond.end328.cond.false357_crit_edge, label %land.lhs.true335

cond.end328.cond.false357_crit_edge:              ; preds = %cond.end328
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false357

land.lhs.true335:                                 ; preds = %cond.end328
  %funcs338 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %155 = ptrtoint ptr %funcs338 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %funcs338, align 4
  %tobool339.not = icmp eq ptr %156, null
  br i1 %tobool339.not, label %land.lhs.true335.cond.false357_crit_edge, label %land.lhs.true340

land.lhs.true335.cond.false357_crit_edge:         ; preds = %land.lhs.true335
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false357

land.lhs.true340:                                 ; preds = %land.lhs.true335
  %sriov_rreg344 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %156, i32 0, i32 13
  %157 = ptrtoint ptr %sriov_rreg344 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %sriov_rreg344, align 4
  %tobool345.not = icmp eq ptr %158, null
  br i1 %tobool345.not, label %land.lhs.true340.cond.false357_crit_edge, label %cond.true346

land.lhs.true340.cond.false357_crit_edge:         ; preds = %land.lhs.true340
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false357

cond.true346:                                     ; preds = %land.lhs.true340
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx352 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %159 = ptrtoint ptr %arrayidx352 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %arrayidx352, align 8
  %161 = ptrtoint ptr %160 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %160, align 4
  %add355 = add i32 %162, 4681
  %call356 = tail call i32 %158(ptr noundef %1, i32 noundef %add355, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end364

cond.false357:                                    ; preds = %land.lhs.true340.cond.false357_crit_edge, %land.lhs.true335.cond.false357_crit_edge, %cond.end328.cond.false357_crit_edge
  %arrayidx359 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %163 = ptrtoint ptr %arrayidx359 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %arrayidx359, align 8
  %165 = ptrtoint ptr %164 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %164, align 4
  %add362 = add i32 %166, 4681
  %call363 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add362, i32 noundef 0) #15
  br label %cond.end364

cond.end364:                                      ; preds = %cond.false357, %cond.true346
  %cond365 = phi i32 [ %call356, %cond.true346 ], [ %call363, %cond.false357 ]
  %and366 = and i32 %cond365, -261889
  %or367 = or i32 %and366, 21248
  %cp_hqd_persistent_state = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 132
  %167 = ptrtoint ptr %cp_hqd_persistent_state to i32
  call void @__asan_store4_noabort(i32 %167)
  store i32 %or367, ptr %cp_hqd_persistent_state, align 4
  %168 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %virt, align 8
  %and370 = and i32 %169, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and370)
  %tobool371.not = icmp eq i32 %and370, 0
  br i1 %tobool371.not, label %cond.end364.cond.false394_crit_edge, label %land.lhs.true372

cond.end364.cond.false394_crit_edge:              ; preds = %cond.end364
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false394

land.lhs.true372:                                 ; preds = %cond.end364
  %funcs375 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %170 = ptrtoint ptr %funcs375 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %funcs375, align 4
  %tobool376.not = icmp eq ptr %171, null
  br i1 %tobool376.not, label %land.lhs.true372.cond.false394_crit_edge, label %land.lhs.true377

land.lhs.true372.cond.false394_crit_edge:         ; preds = %land.lhs.true372
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false394

land.lhs.true377:                                 ; preds = %land.lhs.true372
  %sriov_rreg381 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %171, i32 0, i32 13
  %172 = ptrtoint ptr %sriov_rreg381 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %sriov_rreg381, align 4
  %tobool382.not = icmp eq ptr %173, null
  br i1 %tobool382.not, label %land.lhs.true377.cond.false394_crit_edge, label %cond.true383

land.lhs.true377.cond.false394_crit_edge:         ; preds = %land.lhs.true377
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false394

cond.true383:                                     ; preds = %land.lhs.true377
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx389 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %174 = ptrtoint ptr %arrayidx389 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %arrayidx389, align 8
  %176 = ptrtoint ptr %175 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %175, align 4
  %add392 = add i32 %177, 4698
  %call393 = tail call i32 %173(ptr noundef %1, i32 noundef %add392, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end401

cond.false394:                                    ; preds = %land.lhs.true377.cond.false394_crit_edge, %land.lhs.true372.cond.false394_crit_edge, %cond.end364.cond.false394_crit_edge
  %arrayidx396 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %178 = ptrtoint ptr %arrayidx396 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %arrayidx396, align 8
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %179, align 4
  %add399 = add i32 %181, 4698
  %call400 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add399, i32 noundef 0) #15
  br label %cond.end401

cond.end401:                                      ; preds = %cond.false394, %cond.true383
  %cond402 = phi i32 [ %call393, %cond.true383 ], [ %call400, %cond.false394 ]
  %or404 = or i32 %cond402, 3145728
  %cp_hqd_ib_control = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 149
  %182 = ptrtoint ptr %cp_hqd_ib_control to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 %or404, ptr %cp_hqd_ib_control, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_ring, ptr %ring, i32 0, i32 1
  %183 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %funcs.i, align 4
  %185 = ptrtoint ptr %184 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %184, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %186)
  %cmp.i3 = icmp eq i32 %186, 1
  br i1 %cmp.i3, label %if.then.i, label %cond.end401.gfx_v9_0_mqd_set_priority.exit_crit_edge

cond.end401.gfx_v9_0_mqd_set_priority.exit_crit_edge: ; preds = %cond.end401
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_mqd_set_priority.exit

if.then.i:                                        ; preds = %cond.end401
  %187 = ptrtoint ptr %ring to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %ring, align 8
  %call.i = tail call zeroext i1 @amdgpu_gfx_is_high_priority_compute_queue(ptr noundef %188, ptr noundef %ring) #15
  br i1 %call.i, label %if.then2.i, label %if.then.i.gfx_v9_0_mqd_set_priority.exit_crit_edge

if.then.i.gfx_v9_0_mqd_set_priority.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %gfx_v9_0_mqd_set_priority.exit

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_pipe_priority.i = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 133
  %189 = ptrtoint ptr %cp_hqd_pipe_priority.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 2, ptr %cp_hqd_pipe_priority.i, align 4
  %cp_hqd_queue_priority.i = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 134
  %190 = ptrtoint ptr %cp_hqd_queue_priority.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 15, ptr %cp_hqd_queue_priority.i, align 4
  br label %gfx_v9_0_mqd_set_priority.exit

gfx_v9_0_mqd_set_priority.exit:                   ; preds = %if.then2.i, %if.then.i.gfx_v9_0_mqd_set_priority.exit_crit_edge, %cond.end401.gfx_v9_0_mqd_set_priority.exit_crit_edge
  %191 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %virt, align 8
  %and407 = and i32 %192, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and407)
  %tobool408.not = icmp eq i32 %and407, 0
  br i1 %tobool408.not, label %gfx_v9_0_mqd_set_priority.exit.cond.false431_crit_edge, label %land.lhs.true409

gfx_v9_0_mqd_set_priority.exit.cond.false431_crit_edge: ; preds = %gfx_v9_0_mqd_set_priority.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false431

land.lhs.true409:                                 ; preds = %gfx_v9_0_mqd_set_priority.exit
  %funcs412 = getelementptr inbounds %struct.amdgpu_device, ptr %1, i32 0, i32 106, i32 2, i32 15
  %193 = ptrtoint ptr %funcs412 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %funcs412, align 4
  %tobool413.not = icmp eq ptr %194, null
  br i1 %tobool413.not, label %land.lhs.true409.cond.false431_crit_edge, label %land.lhs.true414

land.lhs.true409.cond.false431_crit_edge:         ; preds = %land.lhs.true409
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false431

land.lhs.true414:                                 ; preds = %land.lhs.true409
  %sriov_rreg418 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %194, i32 0, i32 13
  %195 = ptrtoint ptr %sriov_rreg418 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %sriov_rreg418, align 4
  %tobool419.not = icmp eq ptr %196, null
  br i1 %tobool419.not, label %land.lhs.true414.cond.false431_crit_edge, label %cond.true420

land.lhs.true414.cond.false431_crit_edge:         ; preds = %land.lhs.true414
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false431

cond.true420:                                     ; preds = %land.lhs.true414
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx426 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %197 = ptrtoint ptr %arrayidx426 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %arrayidx426, align 8
  %199 = ptrtoint ptr %198 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %198, align 4
  %add429 = add i32 %200, 4684
  %call430 = tail call i32 %196(ptr noundef %1, i32 noundef %add429, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end438

cond.false431:                                    ; preds = %land.lhs.true414.cond.false431_crit_edge, %land.lhs.true409.cond.false431_crit_edge, %gfx_v9_0_mqd_set_priority.exit.cond.false431_crit_edge
  %arrayidx433 = getelementptr %struct.amdgpu_device, ptr %1, i32 0, i32 130, i32 1
  %201 = ptrtoint ptr %arrayidx433 to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load ptr, ptr %arrayidx433, align 8
  %203 = ptrtoint ptr %202 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load i32, ptr %202, align 4
  %add436 = add i32 %204, 4684
  %call437 = tail call i32 @amdgpu_device_rreg(ptr noundef %1, i32 noundef %add436, i32 noundef 0) #15
  br label %cond.end438

cond.end438:                                      ; preds = %cond.false431, %cond.true420
  %cond439 = phi i32 [ %call430, %cond.true420 ], [ %call437, %cond.false431 ]
  %cp_hqd_quantum = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 135
  %205 = ptrtoint ptr %cp_hqd_quantum to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %cond439, ptr %cp_hqd_quantum, align 4
  %206 = ptrtoint ptr %funcs.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %funcs.i, align 4
  %208 = ptrtoint ptr %207 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %207, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %209)
  %cmp441 = icmp eq i32 %209, 9
  br i1 %cmp441, label %if.then443, label %cond.end438.if.end444_crit_edge

cond.end438.if.end444_crit_edge:                  ; preds = %cond.end438
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end444

if.then443:                                       ; preds = %cond.end438
  call void @__sanitizer_cov_trace_pc() #17
  %cp_hqd_active = getelementptr inbounds %struct.v9_mqd, ptr %3, i32 0, i32 130
  %210 = ptrtoint ptr %cp_hqd_active to i32
  call void @__asan_store4_noabort(i32 %210)
  store i32 1, ptr %cp_hqd_active, align 4
  br label %if.end444

if.end444:                                        ; preds = %if.then443, %cond.end438.if.end444_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_enable_kcq(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_irq_put(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_gfx_disable_kcq(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_update_medium_grain_clock_gating(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef %adev) #15
  br i1 %enable, label %land.lhs.true, label %entry.if.else_crit_edge

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %cg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %0 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cg_flags, align 8
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %land.lhs.true.if.else_crit_edge, label %if.then

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and2 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.then.cond.false_crit_edge, label %land.lhs.true4

if.then.cond.false_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true4:                                   ; preds = %if.then
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %land.lhs.true4.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true4.cond.false_crit_edge:              ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %arrayidx16 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx16, align 4
  %add = add i32 %11, 19528
  %call = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true4.cond.false_crit_edge, %if.then.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx18, align 8
  %arrayidx20 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx20, align 4
  %add21 = add i32 %15, 19528
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add21, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call22, %cond.false ]
  %arrayidx23 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %16 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590337, i32 %17)
  %cmp.not = icmp eq i32 %17, 590337
  %and26 = and i32 %cond, -104
  %spec.select = select i1 %cmp.not, i32 %cond, i32 %and26
  %and27 = and i32 %spec.select, -103
  %or = or i32 %and27, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %or)
  %cmp28.not = icmp eq i32 %cond, %or
  br i1 %cmp28.not, label %cond.end.if.end61_crit_edge, label %if.then29

cond.end.if.end61_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end61

if.then29:                                        ; preds = %cond.end
  %18 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %virt, align 8
  %and32 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.then29.cond.false54_crit_edge, label %land.lhs.true34

if.then29.cond.false54_crit_edge:                 ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

land.lhs.true34:                                  ; preds = %if.then29
  %funcs37 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %20 = ptrtoint ptr %funcs37 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %funcs37, align 4
  %tobool38.not = icmp eq ptr %21, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false54_crit_edge, label %land.lhs.true39

land.lhs.true34.cond.false54_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sriov_wreg, align 4
  %tobool43.not = icmp eq ptr %23, null
  br i1 %tobool43.not, label %land.lhs.true39.cond.false54_crit_edge, label %cond.true44

land.lhs.true39.cond.false54_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

cond.true44:                                      ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx50 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %24 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx50, align 8
  %arrayidx52 = getelementptr i32, ptr %25, i32 1
  %26 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx52, align 4
  %add53 = add i32 %27, 19528
  tail call void %23(ptr noundef %adev, i32 noundef %add53, i32 noundef %or, i32 noundef 0, i32 noundef 1) #15
  br label %if.end61

cond.false54:                                     ; preds = %land.lhs.true39.cond.false54_crit_edge, %land.lhs.true34.cond.false54_crit_edge, %if.then29.cond.false54_crit_edge
  %arrayidx56 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %28 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx56, align 8
  %arrayidx58 = getelementptr i32, ptr %29, i32 1
  %30 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx58, align 4
  %add59 = add i32 %31, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add59, i32 noundef %or, i32 noundef 0) #15
  br label %if.end61

if.end61:                                         ; preds = %cond.false54, %cond.true44, %cond.end.if.end61_crit_edge
  %32 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cg_flags, align 8
  %and63 = and i32 %33, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63)
  %tobool64.not = icmp eq i32 %and63, 0
  br i1 %tobool64.not, label %if.end61.if.end441_crit_edge, label %if.then65

if.end61.if.end441_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end441

if.then65:                                        ; preds = %if.end61
  %and67 = and i32 %33, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and67)
  %tobool68.not = icmp eq i32 %and67, 0
  br i1 %tobool68.not, label %if.then65.if.end141_crit_edge, label %if.then69

if.then65.if.end141_crit_edge:                    ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end141

if.then69:                                        ; preds = %if.then65
  %34 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %virt, align 8
  %and72 = and i32 %35, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and72)
  %tobool73.not = icmp eq i32 %and72, 0
  br i1 %tobool73.not, label %if.then69.cond.false96_crit_edge, label %land.lhs.true74

if.then69.cond.false96_crit_edge:                 ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false96

land.lhs.true74:                                  ; preds = %if.then69
  %funcs77 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %36 = ptrtoint ptr %funcs77 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %funcs77, align 4
  %tobool78.not = icmp eq ptr %37, null
  br i1 %tobool78.not, label %land.lhs.true74.cond.false96_crit_edge, label %land.lhs.true79

land.lhs.true74.cond.false96_crit_edge:           ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false96

land.lhs.true79:                                  ; preds = %land.lhs.true74
  %sriov_rreg83 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %37, i32 0, i32 13
  %38 = ptrtoint ptr %sriov_rreg83 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sriov_rreg83, align 4
  %tobool84.not = icmp eq ptr %39, null
  br i1 %tobool84.not, label %land.lhs.true79.cond.false96_crit_edge, label %cond.true85

land.lhs.true79.cond.false96_crit_edge:           ; preds = %land.lhs.true79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false96

cond.true85:                                      ; preds = %land.lhs.true79
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx91 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %40 = ptrtoint ptr %arrayidx91 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx91, align 8
  %arrayidx93 = getelementptr i32, ptr %41, i32 1
  %42 = ptrtoint ptr %arrayidx93 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx93, align 4
  %add94 = add i32 %43, 19462
  %call95 = tail call i32 %39(ptr noundef %adev, i32 noundef %add94, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end103

cond.false96:                                     ; preds = %land.lhs.true79.cond.false96_crit_edge, %land.lhs.true74.cond.false96_crit_edge, %if.then69.cond.false96_crit_edge
  %arrayidx98 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %44 = ptrtoint ptr %arrayidx98 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx98, align 8
  %arrayidx100 = getelementptr i32, ptr %45, i32 1
  %46 = ptrtoint ptr %arrayidx100 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx100, align 4
  %add101 = add i32 %47, 19462
  %call102 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add101, i32 noundef 0) #15
  br label %cond.end103

cond.end103:                                      ; preds = %cond.false96, %cond.true85
  %cond104 = phi i32 [ %call95, %cond.true85 ], [ %call102, %cond.false96 ]
  %or105 = or i32 %cond104, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %cond104, i32 %or105)
  %cmp106.not = icmp eq i32 %cond104, %or105
  br i1 %cmp106.not, label %cond.end103.if.end141_crit_edge, label %if.then107

cond.end103.if.end141_crit_edge:                  ; preds = %cond.end103
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end141

if.then107:                                       ; preds = %cond.end103
  %48 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %virt, align 8
  %and110 = and i32 %49, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and110)
  %tobool111.not = icmp eq i32 %and110, 0
  br i1 %tobool111.not, label %if.then107.cond.false133_crit_edge, label %land.lhs.true112

if.then107.cond.false133_crit_edge:               ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false133

land.lhs.true112:                                 ; preds = %if.then107
  %funcs115 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %50 = ptrtoint ptr %funcs115 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %funcs115, align 4
  %tobool116.not = icmp eq ptr %51, null
  br i1 %tobool116.not, label %land.lhs.true112.cond.false133_crit_edge, label %land.lhs.true117

land.lhs.true112.cond.false133_crit_edge:         ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false133

land.lhs.true117:                                 ; preds = %land.lhs.true112
  %sriov_wreg121 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %51, i32 0, i32 12
  %52 = ptrtoint ptr %sriov_wreg121 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %sriov_wreg121, align 4
  %tobool122.not = icmp eq ptr %53, null
  br i1 %tobool122.not, label %land.lhs.true117.cond.false133_crit_edge, label %cond.true123

land.lhs.true117.cond.false133_crit_edge:         ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false133

cond.true123:                                     ; preds = %land.lhs.true117
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx129 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %54 = ptrtoint ptr %arrayidx129 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx129, align 8
  %arrayidx131 = getelementptr i32, ptr %55, i32 1
  %56 = ptrtoint ptr %arrayidx131 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx131, align 4
  %add132 = add i32 %57, 19462
  tail call void %53(ptr noundef %adev, i32 noundef %add132, i32 noundef %or105, i32 noundef 0, i32 noundef 1) #15
  br label %if.end141

cond.false133:                                    ; preds = %land.lhs.true117.cond.false133_crit_edge, %land.lhs.true112.cond.false133_crit_edge, %if.then107.cond.false133_crit_edge
  %arrayidx135 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %58 = ptrtoint ptr %arrayidx135 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx135, align 8
  %arrayidx137 = getelementptr i32, ptr %59, i32 1
  %60 = ptrtoint ptr %arrayidx137 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx137, align 4
  %add138 = add i32 %61, 19462
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add138, i32 noundef %or105, i32 noundef 0) #15
  br label %if.end141

if.end141:                                        ; preds = %cond.false133, %cond.true123, %cond.end103.if.end141_crit_edge, %if.then65.if.end141_crit_edge
  %62 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cg_flags, align 8
  %and143 = and i32 %63, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and143)
  %tobool144.not = icmp eq i32 %and143, 0
  br i1 %tobool144.not, label %if.end141.if.end441_crit_edge, label %if.then145

if.end141.if.end441_crit_edge:                    ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end441

if.then145:                                       ; preds = %if.end141
  %64 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %virt, align 8
  %and148 = and i32 %65, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148)
  %tobool149.not = icmp eq i32 %and148, 0
  br i1 %tobool149.not, label %if.then145.cond.false172_crit_edge, label %land.lhs.true150

if.then145.cond.false172_crit_edge:               ; preds = %if.then145
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false172

land.lhs.true150:                                 ; preds = %if.then145
  %funcs153 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %66 = ptrtoint ptr %funcs153 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %funcs153, align 4
  %tobool154.not = icmp eq ptr %67, null
  br i1 %tobool154.not, label %land.lhs.true150.cond.false172_crit_edge, label %land.lhs.true155

land.lhs.true150.cond.false172_crit_edge:         ; preds = %land.lhs.true150
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false172

land.lhs.true155:                                 ; preds = %land.lhs.true150
  %sriov_rreg159 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %67, i32 0, i32 13
  %68 = ptrtoint ptr %sriov_rreg159 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %sriov_rreg159, align 4
  %tobool160.not = icmp eq ptr %69, null
  br i1 %tobool160.not, label %land.lhs.true155.cond.false172_crit_edge, label %cond.true161

land.lhs.true155.cond.false172_crit_edge:         ; preds = %land.lhs.true155
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false172

cond.true161:                                     ; preds = %land.lhs.true155
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx167 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %70 = ptrtoint ptr %arrayidx167 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx167, align 8
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 4
  %add170 = add i32 %73, 4217
  %call171 = tail call i32 %69(ptr noundef %adev, i32 noundef %add170, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end179

cond.false172:                                    ; preds = %land.lhs.true155.cond.false172_crit_edge, %land.lhs.true150.cond.false172_crit_edge, %if.then145.cond.false172_crit_edge
  %arrayidx174 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %74 = ptrtoint ptr %arrayidx174 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %arrayidx174, align 8
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  %add177 = add i32 %77, 4217
  %call178 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add177, i32 noundef 0) #15
  br label %cond.end179

cond.end179:                                      ; preds = %cond.false172, %cond.true161
  %cond180 = phi i32 [ %call171, %cond.true161 ], [ %call178, %cond.false172 ]
  %or181 = or i32 %cond180, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %cond180, i32 %or181)
  %cmp182.not = icmp eq i32 %cond180, %or181
  br i1 %cmp182.not, label %cond.end179.if.end441_crit_edge, label %if.then183

cond.end179.if.end441_crit_edge:                  ; preds = %cond.end179
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end441

if.then183:                                       ; preds = %cond.end179
  %78 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %virt, align 8
  %and186 = and i32 %79, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and186)
  %tobool187.not = icmp eq i32 %and186, 0
  br i1 %tobool187.not, label %if.then183.cond.false209_crit_edge, label %land.lhs.true188

if.then183.cond.false209_crit_edge:               ; preds = %if.then183
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false209

land.lhs.true188:                                 ; preds = %if.then183
  %funcs191 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %80 = ptrtoint ptr %funcs191 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %funcs191, align 4
  %tobool192.not = icmp eq ptr %81, null
  br i1 %tobool192.not, label %land.lhs.true188.cond.false209_crit_edge, label %land.lhs.true193

land.lhs.true188.cond.false209_crit_edge:         ; preds = %land.lhs.true188
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false209

land.lhs.true193:                                 ; preds = %land.lhs.true188
  %sriov_wreg197 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %81, i32 0, i32 12
  %82 = ptrtoint ptr %sriov_wreg197 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %sriov_wreg197, align 4
  %tobool198.not = icmp eq ptr %83, null
  br i1 %tobool198.not, label %land.lhs.true193.cond.false209_crit_edge, label %cond.true199

land.lhs.true193.cond.false209_crit_edge:         ; preds = %land.lhs.true193
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false209

cond.true199:                                     ; preds = %land.lhs.true193
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx205 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %84 = ptrtoint ptr %arrayidx205 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %arrayidx205, align 8
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %85, align 4
  %add208 = add i32 %87, 4217
  tail call void %83(ptr noundef %adev, i32 noundef %add208, i32 noundef %or181, i32 noundef 0, i32 noundef 1) #15
  br label %if.end441

cond.false209:                                    ; preds = %land.lhs.true193.cond.false209_crit_edge, %land.lhs.true188.cond.false209_crit_edge, %if.then183.cond.false209_crit_edge
  %arrayidx211 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %88 = ptrtoint ptr %arrayidx211 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %arrayidx211, align 8
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %89, align 4
  %add214 = add i32 %91, 4217
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add214, i32 noundef %or181, i32 noundef 0) #15
  br label %if.end441

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %virt219 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %92 = ptrtoint ptr %virt219 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %virt219, align 8
  %and221 = and i32 %93, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and221)
  %tobool222.not = icmp eq i32 %and221, 0
  br i1 %tobool222.not, label %if.else.cond.false245_crit_edge, label %land.lhs.true223

if.else.cond.false245_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false245

land.lhs.true223:                                 ; preds = %if.else
  %funcs226 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %94 = ptrtoint ptr %funcs226 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %funcs226, align 4
  %tobool227.not = icmp eq ptr %95, null
  br i1 %tobool227.not, label %land.lhs.true223.cond.false245_crit_edge, label %land.lhs.true228

land.lhs.true223.cond.false245_crit_edge:         ; preds = %land.lhs.true223
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false245

land.lhs.true228:                                 ; preds = %land.lhs.true223
  %sriov_rreg232 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %95, i32 0, i32 13
  %96 = ptrtoint ptr %sriov_rreg232 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %sriov_rreg232, align 4
  %tobool233.not = icmp eq ptr %97, null
  br i1 %tobool233.not, label %land.lhs.true228.cond.false245_crit_edge, label %cond.true234

land.lhs.true228.cond.false245_crit_edge:         ; preds = %land.lhs.true228
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false245

cond.true234:                                     ; preds = %land.lhs.true228
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx240 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %98 = ptrtoint ptr %arrayidx240 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %arrayidx240, align 8
  %arrayidx242 = getelementptr i32, ptr %99, i32 1
  %100 = ptrtoint ptr %arrayidx242 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx242, align 4
  %add243 = add i32 %101, 19528
  %call244 = tail call i32 %97(ptr noundef %adev, i32 noundef %add243, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end252

cond.false245:                                    ; preds = %land.lhs.true228.cond.false245_crit_edge, %land.lhs.true223.cond.false245_crit_edge, %if.else.cond.false245_crit_edge
  %arrayidx247 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %102 = ptrtoint ptr %arrayidx247 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %arrayidx247, align 8
  %arrayidx249 = getelementptr i32, ptr %103, i32 1
  %104 = ptrtoint ptr %arrayidx249 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx249, align 4
  %add250 = add i32 %105, 19528
  %call251 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add250, i32 noundef 0) #15
  br label %cond.end252

cond.end252:                                      ; preds = %cond.false245, %cond.true234
  %cond253 = phi i32 [ %call244, %cond.true234 ], [ %call251, %cond.false245 ]
  %arrayidx255 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %106 = ptrtoint ptr %arrayidx255 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx255, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590337, i32 %107)
  %cmp257.not = icmp ne i32 %107, 590337
  %or259 = zext i1 %cmp257.not to i32
  %spec.select597 = or i32 %cond253, %or259
  %or261 = or i32 %spec.select597, 102
  call void @__sanitizer_cov_trace_cmp4(i32 %cond253, i32 %or261)
  %cmp262.not = icmp eq i32 %cond253, %or261
  br i1 %cmp262.not, label %cond.end252.if.end296_crit_edge, label %if.then263

cond.end252.if.end296_crit_edge:                  ; preds = %cond.end252
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end296

if.then263:                                       ; preds = %cond.end252
  %108 = ptrtoint ptr %virt219 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %virt219, align 8
  %and266 = and i32 %109, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and266)
  %tobool267.not = icmp eq i32 %and266, 0
  br i1 %tobool267.not, label %if.then263.cond.false289_crit_edge, label %land.lhs.true268

if.then263.cond.false289_crit_edge:               ; preds = %if.then263
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false289

land.lhs.true268:                                 ; preds = %if.then263
  %funcs271 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %110 = ptrtoint ptr %funcs271 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %funcs271, align 4
  %tobool272.not = icmp eq ptr %111, null
  br i1 %tobool272.not, label %land.lhs.true268.cond.false289_crit_edge, label %land.lhs.true273

land.lhs.true268.cond.false289_crit_edge:         ; preds = %land.lhs.true268
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false289

land.lhs.true273:                                 ; preds = %land.lhs.true268
  %sriov_wreg277 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %111, i32 0, i32 12
  %112 = ptrtoint ptr %sriov_wreg277 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %sriov_wreg277, align 4
  %tobool278.not = icmp eq ptr %113, null
  br i1 %tobool278.not, label %land.lhs.true273.cond.false289_crit_edge, label %cond.true279

land.lhs.true273.cond.false289_crit_edge:         ; preds = %land.lhs.true273
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false289

cond.true279:                                     ; preds = %land.lhs.true273
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx285 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %114 = ptrtoint ptr %arrayidx285 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %arrayidx285, align 8
  %arrayidx287 = getelementptr i32, ptr %115, i32 1
  %116 = ptrtoint ptr %arrayidx287 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %arrayidx287, align 4
  %add288 = add i32 %117, 19528
  tail call void %113(ptr noundef %adev, i32 noundef %add288, i32 noundef %or261, i32 noundef 0, i32 noundef 1) #15
  br label %if.end296

cond.false289:                                    ; preds = %land.lhs.true273.cond.false289_crit_edge, %land.lhs.true268.cond.false289_crit_edge, %if.then263.cond.false289_crit_edge
  %arrayidx291 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %118 = ptrtoint ptr %arrayidx291 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %arrayidx291, align 8
  %arrayidx293 = getelementptr i32, ptr %119, i32 1
  %120 = ptrtoint ptr %arrayidx293 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %arrayidx293, align 4
  %add294 = add i32 %121, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add294, i32 noundef %or261, i32 noundef 0) #15
  br label %if.end296

if.end296:                                        ; preds = %cond.false289, %cond.true279, %cond.end252.if.end296_crit_edge
  %122 = ptrtoint ptr %virt219 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %virt219, align 8
  %and299 = and i32 %123, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and299)
  %tobool300.not = icmp eq i32 %and299, 0
  br i1 %tobool300.not, label %if.end296.cond.false323_crit_edge, label %land.lhs.true301

if.end296.cond.false323_crit_edge:                ; preds = %if.end296
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false323

land.lhs.true301:                                 ; preds = %if.end296
  %funcs304 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %124 = ptrtoint ptr %funcs304 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %funcs304, align 4
  %tobool305.not = icmp eq ptr %125, null
  br i1 %tobool305.not, label %land.lhs.true301.cond.false323_crit_edge, label %land.lhs.true306

land.lhs.true301.cond.false323_crit_edge:         ; preds = %land.lhs.true301
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false323

land.lhs.true306:                                 ; preds = %land.lhs.true301
  %sriov_rreg310 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %125, i32 0, i32 13
  %126 = ptrtoint ptr %sriov_rreg310 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %sriov_rreg310, align 4
  %tobool311.not = icmp eq ptr %127, null
  br i1 %tobool311.not, label %land.lhs.true306.cond.false323_crit_edge, label %cond.true312

land.lhs.true306.cond.false323_crit_edge:         ; preds = %land.lhs.true306
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false323

cond.true312:                                     ; preds = %land.lhs.true306
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx318 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %128 = ptrtoint ptr %arrayidx318 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %arrayidx318, align 8
  %arrayidx320 = getelementptr i32, ptr %129, i32 1
  %130 = ptrtoint ptr %arrayidx320 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %arrayidx320, align 4
  %add321 = add i32 %131, 19462
  %call322 = tail call i32 %127(ptr noundef %adev, i32 noundef %add321, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end330

cond.false323:                                    ; preds = %land.lhs.true306.cond.false323_crit_edge, %land.lhs.true301.cond.false323_crit_edge, %if.end296.cond.false323_crit_edge
  %arrayidx325 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %132 = ptrtoint ptr %arrayidx325 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %arrayidx325, align 8
  %arrayidx327 = getelementptr i32, ptr %133, i32 1
  %134 = ptrtoint ptr %arrayidx327 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %arrayidx327, align 4
  %add328 = add i32 %135, 19462
  %call329 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add328, i32 noundef 0) #15
  br label %cond.end330

cond.end330:                                      ; preds = %cond.false323, %cond.true312
  %cond331 = phi i32 [ %call322, %cond.true312 ], [ %call329, %cond.false323 ]
  %and332 = and i32 %cond331, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and332)
  %tobool333.not = icmp eq i32 %and332, 0
  br i1 %tobool333.not, label %cond.end330.if.end368_crit_edge, label %if.then334

cond.end330.if.end368_crit_edge:                  ; preds = %cond.end330
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end368

if.then334:                                       ; preds = %cond.end330
  %and335 = and i32 %cond331, -2
  %136 = ptrtoint ptr %virt219 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %virt219, align 8
  %and338 = and i32 %137, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and338)
  %tobool339.not = icmp eq i32 %and338, 0
  br i1 %tobool339.not, label %if.then334.cond.false361_crit_edge, label %land.lhs.true340

if.then334.cond.false361_crit_edge:               ; preds = %if.then334
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false361

land.lhs.true340:                                 ; preds = %if.then334
  %funcs343 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %138 = ptrtoint ptr %funcs343 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %funcs343, align 4
  %tobool344.not = icmp eq ptr %139, null
  br i1 %tobool344.not, label %land.lhs.true340.cond.false361_crit_edge, label %land.lhs.true345

land.lhs.true340.cond.false361_crit_edge:         ; preds = %land.lhs.true340
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false361

land.lhs.true345:                                 ; preds = %land.lhs.true340
  %sriov_wreg349 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %139, i32 0, i32 12
  %140 = ptrtoint ptr %sriov_wreg349 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %sriov_wreg349, align 4
  %tobool350.not = icmp eq ptr %141, null
  br i1 %tobool350.not, label %land.lhs.true345.cond.false361_crit_edge, label %cond.true351

land.lhs.true345.cond.false361_crit_edge:         ; preds = %land.lhs.true345
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false361

cond.true351:                                     ; preds = %land.lhs.true345
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx357 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %142 = ptrtoint ptr %arrayidx357 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %arrayidx357, align 8
  %arrayidx359 = getelementptr i32, ptr %143, i32 1
  %144 = ptrtoint ptr %arrayidx359 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %arrayidx359, align 4
  %add360 = add i32 %145, 19462
  tail call void %141(ptr noundef %adev, i32 noundef %add360, i32 noundef %and335, i32 noundef 0, i32 noundef 1) #15
  br label %if.end368

cond.false361:                                    ; preds = %land.lhs.true345.cond.false361_crit_edge, %land.lhs.true340.cond.false361_crit_edge, %if.then334.cond.false361_crit_edge
  %arrayidx363 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %146 = ptrtoint ptr %arrayidx363 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %arrayidx363, align 8
  %arrayidx365 = getelementptr i32, ptr %147, i32 1
  %148 = ptrtoint ptr %arrayidx365 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %arrayidx365, align 4
  %add366 = add i32 %149, 19462
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add366, i32 noundef %and335, i32 noundef 0) #15
  br label %if.end368

if.end368:                                        ; preds = %cond.false361, %cond.true351, %cond.end330.if.end368_crit_edge
  %150 = ptrtoint ptr %virt219 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %virt219, align 8
  %and371 = and i32 %151, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and371)
  %tobool372.not = icmp eq i32 %and371, 0
  br i1 %tobool372.not, label %if.end368.cond.false395_crit_edge, label %land.lhs.true373

if.end368.cond.false395_crit_edge:                ; preds = %if.end368
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false395

land.lhs.true373:                                 ; preds = %if.end368
  %funcs376 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %152 = ptrtoint ptr %funcs376 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %funcs376, align 4
  %tobool377.not = icmp eq ptr %153, null
  br i1 %tobool377.not, label %land.lhs.true373.cond.false395_crit_edge, label %land.lhs.true378

land.lhs.true373.cond.false395_crit_edge:         ; preds = %land.lhs.true373
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false395

land.lhs.true378:                                 ; preds = %land.lhs.true373
  %sriov_rreg382 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %153, i32 0, i32 13
  %154 = ptrtoint ptr %sriov_rreg382 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %sriov_rreg382, align 4
  %tobool383.not = icmp eq ptr %155, null
  br i1 %tobool383.not, label %land.lhs.true378.cond.false395_crit_edge, label %cond.true384

land.lhs.true378.cond.false395_crit_edge:         ; preds = %land.lhs.true378
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false395

cond.true384:                                     ; preds = %land.lhs.true378
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx390 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %156 = ptrtoint ptr %arrayidx390 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %arrayidx390, align 8
  %158 = ptrtoint ptr %157 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %157, align 4
  %add393 = add i32 %159, 4217
  %call394 = tail call i32 %155(ptr noundef %adev, i32 noundef %add393, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end402

cond.false395:                                    ; preds = %land.lhs.true378.cond.false395_crit_edge, %land.lhs.true373.cond.false395_crit_edge, %if.end368.cond.false395_crit_edge
  %arrayidx397 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %160 = ptrtoint ptr %arrayidx397 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %arrayidx397, align 8
  %162 = ptrtoint ptr %161 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %161, align 4
  %add400 = add i32 %163, 4217
  %call401 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add400, i32 noundef 0) #15
  br label %cond.end402

cond.end402:                                      ; preds = %cond.false395, %cond.true384
  %cond403 = phi i32 [ %call394, %cond.true384 ], [ %call401, %cond.false395 ]
  %and404 = and i32 %cond403, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and404)
  %tobool405.not = icmp eq i32 %and404, 0
  br i1 %tobool405.not, label %cond.end402.if.end441_crit_edge, label %if.then406

cond.end402.if.end441_crit_edge:                  ; preds = %cond.end402
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end441

if.then406:                                       ; preds = %cond.end402
  %and407 = and i32 %cond403, -2
  %164 = ptrtoint ptr %virt219 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %virt219, align 8
  %and410 = and i32 %165, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and410)
  %tobool411.not = icmp eq i32 %and410, 0
  br i1 %tobool411.not, label %if.then406.cond.false433_crit_edge, label %land.lhs.true412

if.then406.cond.false433_crit_edge:               ; preds = %if.then406
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false433

land.lhs.true412:                                 ; preds = %if.then406
  %funcs415 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %166 = ptrtoint ptr %funcs415 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %funcs415, align 4
  %tobool416.not = icmp eq ptr %167, null
  br i1 %tobool416.not, label %land.lhs.true412.cond.false433_crit_edge, label %land.lhs.true417

land.lhs.true412.cond.false433_crit_edge:         ; preds = %land.lhs.true412
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false433

land.lhs.true417:                                 ; preds = %land.lhs.true412
  %sriov_wreg421 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %167, i32 0, i32 12
  %168 = ptrtoint ptr %sriov_wreg421 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %sriov_wreg421, align 4
  %tobool422.not = icmp eq ptr %169, null
  br i1 %tobool422.not, label %land.lhs.true417.cond.false433_crit_edge, label %cond.true423

land.lhs.true417.cond.false433_crit_edge:         ; preds = %land.lhs.true417
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false433

cond.true423:                                     ; preds = %land.lhs.true417
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx429 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %170 = ptrtoint ptr %arrayidx429 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %arrayidx429, align 8
  %172 = ptrtoint ptr %171 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %171, align 4
  %add432 = add i32 %173, 4217
  tail call void %169(ptr noundef %adev, i32 noundef %add432, i32 noundef %and407, i32 noundef 0, i32 noundef 1) #15
  br label %if.end441

cond.false433:                                    ; preds = %land.lhs.true417.cond.false433_crit_edge, %land.lhs.true412.cond.false433_crit_edge, %if.then406.cond.false433_crit_edge
  %arrayidx435 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %174 = ptrtoint ptr %arrayidx435 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %arrayidx435, align 8
  %176 = ptrtoint ptr %175 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %175, align 4
  %add438 = add i32 %177, 4217
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add438, i32 noundef %and407, i32 noundef 0) #15
  br label %if.end441

if.end441:                                        ; preds = %cond.false433, %cond.true423, %cond.end402.if.end441_crit_edge, %cond.false209, %cond.true199, %cond.end179.if.end441_crit_edge, %if.end141.if.end441_crit_edge, %if.end61.if.end441_crit_edge
  tail call void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef %adev) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_update_3d_clock_gating(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %num_gfx_rings = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 37
  %0 = ptrtoint ptr %num_gfx_rings to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_gfx_rings, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef %adev) #15
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %enable, label %if.then2, label %if.else206

if.then2:                                         ; preds = %if.end
  br i1 %tobool3.not, label %if.then2.cond.false_crit_edge, label %land.lhs.true

if.then2.cond.false_crit_edge:                    ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true:                                    ; preds = %if.then2
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %land.lhs.true.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true.cond.false_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %arrayidx16 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx16, align 4
  %add = add i32 %11, 19528
  %call = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true.cond.false_crit_edge, %if.then2.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx18, align 8
  %arrayidx20 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx20, align 4
  %add21 = add i32 %15, 19528
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add21, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call22, %cond.false ]
  %and23 = and i32 %cond, -129
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %and23)
  %cmp.not = icmp eq i32 %cond, %and23
  br i1 %cmp.not, label %cond.end.if.end56_crit_edge, label %if.then24

cond.end.if.end56_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end56

if.then24:                                        ; preds = %cond.end
  %16 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %virt, align 8
  %and27 = and i32 %17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  br i1 %tobool28.not, label %if.then24.cond.false49_crit_edge, label %land.lhs.true29

if.then24.cond.false49_crit_edge:                 ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false49

land.lhs.true29:                                  ; preds = %if.then24
  %funcs32 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %18 = ptrtoint ptr %funcs32 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %funcs32, align 4
  %tobool33.not = icmp eq ptr %19, null
  br i1 %tobool33.not, label %land.lhs.true29.cond.false49_crit_edge, label %land.lhs.true34

land.lhs.true29.cond.false49_crit_edge:           ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false49

land.lhs.true34:                                  ; preds = %land.lhs.true29
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %19, i32 0, i32 12
  %20 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sriov_wreg, align 4
  %tobool38.not = icmp eq ptr %21, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false49_crit_edge, label %cond.true39

land.lhs.true34.cond.false49_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false49

cond.true39:                                      ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx45 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %22 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx45, align 8
  %arrayidx47 = getelementptr i32, ptr %23, i32 1
  %24 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx47, align 4
  %add48 = add i32 %25, 19528
  tail call void %21(ptr noundef %adev, i32 noundef %add48, i32 noundef %and23, i32 noundef 0, i32 noundef 1) #15
  br label %if.end56

cond.false49:                                     ; preds = %land.lhs.true34.cond.false49_crit_edge, %land.lhs.true29.cond.false49_crit_edge, %if.then24.cond.false49_crit_edge
  %arrayidx51 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %26 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx51, align 8
  %arrayidx53 = getelementptr i32, ptr %27, i32 1
  %28 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx53, align 4
  %add54 = add i32 %29, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add54, i32 noundef %and23, i32 noundef 0) #15
  br label %if.end56

if.end56:                                         ; preds = %cond.false49, %cond.true39, %cond.end.if.end56_crit_edge
  %30 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %virt, align 8
  %and59 = and i32 %31, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %if.end56.cond.false83_crit_edge, label %land.lhs.true61

if.end56.cond.false83_crit_edge:                  ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83

land.lhs.true61:                                  ; preds = %if.end56
  %funcs64 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %32 = ptrtoint ptr %funcs64 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %funcs64, align 4
  %tobool65.not = icmp eq ptr %33, null
  br i1 %tobool65.not, label %land.lhs.true61.cond.false83_crit_edge, label %land.lhs.true66

land.lhs.true61.cond.false83_crit_edge:           ; preds = %land.lhs.true61
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83

land.lhs.true66:                                  ; preds = %land.lhs.true61
  %sriov_rreg70 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %33, i32 0, i32 13
  %34 = ptrtoint ptr %sriov_rreg70 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sriov_rreg70, align 4
  %tobool71.not = icmp eq ptr %35, null
  br i1 %tobool71.not, label %land.lhs.true66.cond.false83_crit_edge, label %cond.true72

land.lhs.true66.cond.false83_crit_edge:           ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false83

cond.true72:                                      ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx78 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %36 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx78, align 8
  %arrayidx80 = getelementptr i32, ptr %37, i32 1
  %38 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx80, align 4
  %add81 = add i32 %39, 19653
  %call82 = tail call i32 %35(ptr noundef %adev, i32 noundef %add81, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end90

cond.false83:                                     ; preds = %land.lhs.true66.cond.false83_crit_edge, %land.lhs.true61.cond.false83_crit_edge, %if.end56.cond.false83_crit_edge
  %arrayidx85 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %40 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx85, align 8
  %arrayidx87 = getelementptr i32, ptr %41, i32 1
  %42 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx87, align 4
  %add88 = add i32 %43, 19653
  %call89 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add88, i32 noundef 0) #15
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false83, %cond.true72
  %cond91 = phi i32 [ %call82, %cond.true72 ], [ %call89, %cond.false83 ]
  %cg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %44 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cg_flags, align 8
  %and92 = and i32 %45, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and92)
  %tobool93.not = icmp eq i32 %and92, 0
  %. = select i1 %tobool93.not, i32 0, i32 13825
  %and97 = and i32 %45, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and97)
  %tobool98.not = icmp eq i32 %and97, 0
  %or = or i32 %., 62
  %data.1 = select i1 %tobool98.not, i32 %., i32 %or
  call void @__sanitizer_cov_trace_cmp4(i32 %cond91, i32 %data.1)
  %cmp101.not = icmp eq i32 %cond91, %data.1
  br i1 %cmp101.not, label %cond.end90.if.end135_crit_edge, label %if.then102

cond.end90.if.end135_crit_edge:                   ; preds = %cond.end90
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end135

if.then102:                                       ; preds = %cond.end90
  %46 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %virt, align 8
  %and105 = and i32 %47, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and105)
  %tobool106.not = icmp eq i32 %and105, 0
  br i1 %tobool106.not, label %if.then102.cond.false128_crit_edge, label %land.lhs.true107

if.then102.cond.false128_crit_edge:               ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false128

land.lhs.true107:                                 ; preds = %if.then102
  %funcs110 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %48 = ptrtoint ptr %funcs110 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %funcs110, align 4
  %tobool111.not = icmp eq ptr %49, null
  br i1 %tobool111.not, label %land.lhs.true107.cond.false128_crit_edge, label %land.lhs.true112

land.lhs.true107.cond.false128_crit_edge:         ; preds = %land.lhs.true107
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false128

land.lhs.true112:                                 ; preds = %land.lhs.true107
  %sriov_wreg116 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %49, i32 0, i32 12
  %50 = ptrtoint ptr %sriov_wreg116 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %sriov_wreg116, align 4
  %tobool117.not = icmp eq ptr %51, null
  br i1 %tobool117.not, label %land.lhs.true112.cond.false128_crit_edge, label %cond.true118

land.lhs.true112.cond.false128_crit_edge:         ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false128

cond.true118:                                     ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx124 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %52 = ptrtoint ptr %arrayidx124 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx124, align 8
  %arrayidx126 = getelementptr i32, ptr %53, i32 1
  %54 = ptrtoint ptr %arrayidx126 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx126, align 4
  %add127 = add i32 %55, 19653
  tail call void %51(ptr noundef %adev, i32 noundef %add127, i32 noundef %data.1, i32 noundef 0, i32 noundef 1) #15
  br label %if.end135

cond.false128:                                    ; preds = %land.lhs.true112.cond.false128_crit_edge, %land.lhs.true107.cond.false128_crit_edge, %if.then102.cond.false128_crit_edge
  %arrayidx130 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %56 = ptrtoint ptr %arrayidx130 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx130, align 8
  %arrayidx132 = getelementptr i32, ptr %57, i32 1
  %58 = ptrtoint ptr %arrayidx132 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %arrayidx132, align 4
  %add133 = add i32 %59, 19653
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add133, i32 noundef %data.1, i32 noundef 0) #15
  br label %if.end135

if.end135:                                        ; preds = %cond.false128, %cond.true118, %cond.end90.if.end135_crit_edge
  %60 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %virt, align 8
  %and138 = and i32 %61, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and138)
  %tobool139.not = icmp eq i32 %and138, 0
  br i1 %tobool139.not, label %if.end135.cond.false162_crit_edge, label %land.lhs.true140

if.end135.cond.false162_crit_edge:                ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false162

land.lhs.true140:                                 ; preds = %if.end135
  %funcs143 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %62 = ptrtoint ptr %funcs143 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %funcs143, align 4
  %tobool144.not = icmp eq ptr %63, null
  br i1 %tobool144.not, label %land.lhs.true140.cond.false162_crit_edge, label %land.lhs.true145

land.lhs.true140.cond.false162_crit_edge:         ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false162

land.lhs.true145:                                 ; preds = %land.lhs.true140
  %sriov_rreg149 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %63, i32 0, i32 13
  %64 = ptrtoint ptr %sriov_rreg149 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %sriov_rreg149, align 4
  %tobool150.not = icmp eq ptr %65, null
  br i1 %tobool150.not, label %land.lhs.true145.cond.false162_crit_edge, label %cond.true151

land.lhs.true145.cond.false162_crit_edge:         ; preds = %land.lhs.true145
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false162

cond.true151:                                     ; preds = %land.lhs.true145
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx157 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %66 = ptrtoint ptr %arrayidx157 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx157, align 8
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %67, align 4
  %add160 = add i32 %69, 450
  %call161 = tail call i32 %65(ptr noundef %adev, i32 noundef %add160, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end169

cond.false162:                                    ; preds = %land.lhs.true145.cond.false162_crit_edge, %land.lhs.true140.cond.false162_crit_edge, %if.end135.cond.false162_crit_edge
  %arrayidx164 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %70 = ptrtoint ptr %arrayidx164 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx164, align 8
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 4
  %add167 = add i32 %73, 450
  %call168 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add167, i32 noundef 0) #15
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false162, %cond.true151
  %cond170 = phi i32 [ %call161, %cond.true151 ], [ %call168, %cond.false162 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9437440, i32 %cond170)
  %cmp171.not = icmp eq i32 %cond170, 9437440
  br i1 %cmp171.not, label %cond.end169.if.end278_crit_edge, label %if.then172

cond.end169.if.end278_crit_edge:                  ; preds = %cond.end169
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end278

if.then172:                                       ; preds = %cond.end169
  %74 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %virt, align 8
  %and175 = and i32 %75, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and175)
  %tobool176.not = icmp eq i32 %and175, 0
  br i1 %tobool176.not, label %if.then172.cond.false198_crit_edge, label %land.lhs.true177

if.then172.cond.false198_crit_edge:               ; preds = %if.then172
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false198

land.lhs.true177:                                 ; preds = %if.then172
  %funcs180 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %76 = ptrtoint ptr %funcs180 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %funcs180, align 4
  %tobool181.not = icmp eq ptr %77, null
  br i1 %tobool181.not, label %land.lhs.true177.cond.false198_crit_edge, label %land.lhs.true182

land.lhs.true177.cond.false198_crit_edge:         ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false198

land.lhs.true182:                                 ; preds = %land.lhs.true177
  %sriov_wreg186 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %77, i32 0, i32 12
  %78 = ptrtoint ptr %sriov_wreg186 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %sriov_wreg186, align 4
  %tobool187.not = icmp eq ptr %79, null
  br i1 %tobool187.not, label %land.lhs.true182.cond.false198_crit_edge, label %cond.true188

land.lhs.true182.cond.false198_crit_edge:         ; preds = %land.lhs.true182
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false198

cond.true188:                                     ; preds = %land.lhs.true182
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx194 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %80 = ptrtoint ptr %arrayidx194 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %arrayidx194, align 8
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %81, align 4
  %add197 = add i32 %83, 450
  tail call void %79(ptr noundef %adev, i32 noundef %add197, i32 noundef 9437440, i32 noundef 0, i32 noundef 1) #15
  br label %if.end278

cond.false198:                                    ; preds = %land.lhs.true182.cond.false198_crit_edge, %land.lhs.true177.cond.false198_crit_edge, %if.then172.cond.false198_crit_edge
  %arrayidx200 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %84 = ptrtoint ptr %arrayidx200 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %arrayidx200, align 8
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %85, align 4
  %add203 = add i32 %87, 450
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add203, i32 noundef 9437440, i32 noundef 0) #15
  br label %if.end278

if.else206:                                       ; preds = %if.end
  br i1 %tobool3.not, label %if.else206.cond.false233_crit_edge, label %land.lhs.true211

if.else206.cond.false233_crit_edge:               ; preds = %if.else206
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false233

land.lhs.true211:                                 ; preds = %if.else206
  %funcs214 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %88 = ptrtoint ptr %funcs214 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %funcs214, align 4
  %tobool215.not = icmp eq ptr %89, null
  br i1 %tobool215.not, label %land.lhs.true211.cond.false233_crit_edge, label %land.lhs.true216

land.lhs.true211.cond.false233_crit_edge:         ; preds = %land.lhs.true211
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false233

land.lhs.true216:                                 ; preds = %land.lhs.true211
  %sriov_rreg220 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %89, i32 0, i32 13
  %90 = ptrtoint ptr %sriov_rreg220 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %sriov_rreg220, align 4
  %tobool221.not = icmp eq ptr %91, null
  br i1 %tobool221.not, label %land.lhs.true216.cond.false233_crit_edge, label %cond.true222

land.lhs.true216.cond.false233_crit_edge:         ; preds = %land.lhs.true216
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false233

cond.true222:                                     ; preds = %land.lhs.true216
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx228 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %92 = ptrtoint ptr %arrayidx228 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %arrayidx228, align 8
  %arrayidx230 = getelementptr i32, ptr %93, i32 1
  %94 = ptrtoint ptr %arrayidx230 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %arrayidx230, align 4
  %add231 = add i32 %95, 19653
  %call232 = tail call i32 %91(ptr noundef %adev, i32 noundef %add231, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end240

cond.false233:                                    ; preds = %land.lhs.true216.cond.false233_crit_edge, %land.lhs.true211.cond.false233_crit_edge, %if.else206.cond.false233_crit_edge
  %arrayidx235 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %96 = ptrtoint ptr %arrayidx235 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %arrayidx235, align 8
  %arrayidx237 = getelementptr i32, ptr %97, i32 1
  %98 = ptrtoint ptr %arrayidx237 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx237, align 4
  %add238 = add i32 %99, 19653
  %call239 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add238, i32 noundef 0) #15
  br label %cond.end240

cond.end240:                                      ; preds = %cond.false233, %cond.true222
  %cond241 = phi i32 [ %call232, %cond.true222 ], [ %call239, %cond.false233 ]
  %and242 = and i32 %cond241, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %cond241, i32 %and242)
  %cmp243.not = icmp eq i32 %cond241, %and242
  br i1 %cmp243.not, label %cond.end240.if.end278_crit_edge, label %if.then244

cond.end240.if.end278_crit_edge:                  ; preds = %cond.end240
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end278

if.then244:                                       ; preds = %cond.end240
  %100 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %virt, align 8
  %and247 = and i32 %101, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and247)
  %tobool248.not = icmp eq i32 %and247, 0
  br i1 %tobool248.not, label %if.then244.cond.false270_crit_edge, label %land.lhs.true249

if.then244.cond.false270_crit_edge:               ; preds = %if.then244
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false270

land.lhs.true249:                                 ; preds = %if.then244
  %funcs252 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %102 = ptrtoint ptr %funcs252 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %funcs252, align 4
  %tobool253.not = icmp eq ptr %103, null
  br i1 %tobool253.not, label %land.lhs.true249.cond.false270_crit_edge, label %land.lhs.true254

land.lhs.true249.cond.false270_crit_edge:         ; preds = %land.lhs.true249
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false270

land.lhs.true254:                                 ; preds = %land.lhs.true249
  %sriov_wreg258 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %103, i32 0, i32 12
  %104 = ptrtoint ptr %sriov_wreg258 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %sriov_wreg258, align 4
  %tobool259.not = icmp eq ptr %105, null
  br i1 %tobool259.not, label %land.lhs.true254.cond.false270_crit_edge, label %cond.true260

land.lhs.true254.cond.false270_crit_edge:         ; preds = %land.lhs.true254
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false270

cond.true260:                                     ; preds = %land.lhs.true254
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx266 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %106 = ptrtoint ptr %arrayidx266 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %arrayidx266, align 8
  %arrayidx268 = getelementptr i32, ptr %107, i32 1
  %108 = ptrtoint ptr %arrayidx268 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %arrayidx268, align 4
  %add269 = add i32 %109, 19653
  tail call void %105(ptr noundef %adev, i32 noundef %add269, i32 noundef %and242, i32 noundef 0, i32 noundef 1) #15
  br label %if.end278

cond.false270:                                    ; preds = %land.lhs.true254.cond.false270_crit_edge, %land.lhs.true249.cond.false270_crit_edge, %if.then244.cond.false270_crit_edge
  %arrayidx272 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %110 = ptrtoint ptr %arrayidx272 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %arrayidx272, align 8
  %arrayidx274 = getelementptr i32, ptr %111, i32 1
  %112 = ptrtoint ptr %arrayidx274 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx274, align 4
  %add275 = add i32 %113, 19653
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add275, i32 noundef %and242, i32 noundef 0) #15
  br label %if.end278

if.end278:                                        ; preds = %cond.false270, %cond.true260, %cond.end240.if.end278_crit_edge, %cond.false198, %cond.true188, %cond.end169.if.end278_crit_edge
  tail call void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef %adev) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end278, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gfx_v9_0_update_coarse_grain_clock_gating(ptr noundef %adev, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef %adev) #15
  br i1 %enable, label %land.lhs.true, label %entry.if.else214_crit_edge

entry.if.else214_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else214

land.lhs.true:                                    ; preds = %entry
  %cg_flags = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 99
  %0 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cg_flags, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %land.lhs.true.if.else214_crit_edge, label %if.then

land.lhs.true.if.else214_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else214

if.then:                                          ; preds = %land.lhs.true
  %virt = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %2 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %virt, align 8
  %and2 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.then.cond.false_crit_edge, label %land.lhs.true4

if.then.cond.false_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true4:                                   ; preds = %if.then
  %funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %4 = ptrtoint ptr %funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %funcs, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %land.lhs.true4.cond.false_crit_edge, label %land.lhs.true6

land.lhs.true4.cond.false_crit_edge:              ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %sriov_rreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %sriov_rreg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sriov_rreg, align 4
  %tobool10.not = icmp eq ptr %7, null
  br i1 %tobool10.not, label %land.lhs.true6.cond.false_crit_edge, label %cond.true

land.lhs.true6.cond.false_crit_edge:              ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false

cond.true:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 8
  %arrayidx16 = getelementptr i32, ptr %9, i32 1
  %10 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx16, align 4
  %add = add i32 %11, 19528
  %call = tail call i32 %7(ptr noundef %adev, i32 noundef %add, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true6.cond.false_crit_edge, %land.lhs.true4.cond.false_crit_edge, %if.then.cond.false_crit_edge
  %arrayidx18 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %12 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx18, align 8
  %arrayidx20 = getelementptr i32, ptr %13, i32 1
  %14 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx20, align 4
  %add21 = add i32 %15, 19528
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add21, i32 noundef 0) #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call22, %cond.false ]
  %16 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cg_flags, align 8
  %and28 = and i32 %cond, -25
  %and25 = shl i32 %17, 1
  %18 = and i32 %and25, 16
  %19 = or i32 %18, %and28
  %20 = xor i32 %19, 16
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %20)
  %cmp.not = icmp eq i32 %cond, %20
  br i1 %cmp.not, label %cond.end.if.end61_crit_edge, label %if.then29

cond.end.if.end61_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end61

if.then29:                                        ; preds = %cond.end
  %21 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %virt, align 8
  %and32 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.then29.cond.false54_crit_edge, label %land.lhs.true34

if.then29.cond.false54_crit_edge:                 ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

land.lhs.true34:                                  ; preds = %if.then29
  %funcs37 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %23 = ptrtoint ptr %funcs37 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %funcs37, align 4
  %tobool38.not = icmp eq ptr %24, null
  br i1 %tobool38.not, label %land.lhs.true34.cond.false54_crit_edge, label %land.lhs.true39

land.lhs.true34.cond.false54_crit_edge:           ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %sriov_wreg = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %24, i32 0, i32 12
  %25 = ptrtoint ptr %sriov_wreg to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sriov_wreg, align 4
  %tobool43.not = icmp eq ptr %26, null
  br i1 %tobool43.not, label %land.lhs.true39.cond.false54_crit_edge, label %cond.true44

land.lhs.true39.cond.false54_crit_edge:           ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false54

cond.true44:                                      ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx50 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %27 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx50, align 8
  %arrayidx52 = getelementptr i32, ptr %28, i32 1
  %29 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx52, align 4
  %add53 = add i32 %30, 19528
  tail call void %26(ptr noundef %adev, i32 noundef %add53, i32 noundef %20, i32 noundef 0, i32 noundef 1) #15
  br label %if.end61

cond.false54:                                     ; preds = %land.lhs.true39.cond.false54_crit_edge, %land.lhs.true34.cond.false54_crit_edge, %if.then29.cond.false54_crit_edge
  %arrayidx56 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %31 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx56, align 8
  %arrayidx58 = getelementptr i32, ptr %32, i32 1
  %33 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx58, align 4
  %add59 = add i32 %34, 19528
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add59, i32 noundef %20, i32 noundef 0) #15
  br label %if.end61

if.end61:                                         ; preds = %cond.false54, %cond.true44, %cond.end.if.end61_crit_edge
  %35 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %virt, align 8
  %and64 = and i32 %36, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and64)
  %tobool65.not = icmp eq i32 %and64, 0
  br i1 %tobool65.not, label %if.end61.cond.false88_crit_edge, label %land.lhs.true66

if.end61.cond.false88_crit_edge:                  ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false88

land.lhs.true66:                                  ; preds = %if.end61
  %funcs69 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %37 = ptrtoint ptr %funcs69 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %funcs69, align 4
  %tobool70.not = icmp eq ptr %38, null
  br i1 %tobool70.not, label %land.lhs.true66.cond.false88_crit_edge, label %land.lhs.true71

land.lhs.true66.cond.false88_crit_edge:           ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false88

land.lhs.true71:                                  ; preds = %land.lhs.true66
  %sriov_rreg75 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %38, i32 0, i32 13
  %39 = ptrtoint ptr %sriov_rreg75 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sriov_rreg75, align 4
  %tobool76.not = icmp eq ptr %40, null
  br i1 %tobool76.not, label %land.lhs.true71.cond.false88_crit_edge, label %cond.true77

land.lhs.true71.cond.false88_crit_edge:           ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false88

cond.true77:                                      ; preds = %land.lhs.true71
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx83 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %41 = ptrtoint ptr %arrayidx83 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx83, align 8
  %arrayidx85 = getelementptr i32, ptr %42, i32 1
  %43 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx85, align 4
  %add86 = add i32 %44, 19529
  %call87 = tail call i32 %40(ptr noundef %adev, i32 noundef %add86, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end95

cond.false88:                                     ; preds = %land.lhs.true71.cond.false88_crit_edge, %land.lhs.true66.cond.false88_crit_edge, %if.end61.cond.false88_crit_edge
  %arrayidx90 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %45 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx90, align 8
  %arrayidx92 = getelementptr i32, ptr %46, i32 1
  %47 = ptrtoint ptr %arrayidx92 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx92, align 4
  %add93 = add i32 %48, 19529
  %call94 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add93, i32 noundef 0) #15
  br label %cond.end95

cond.end95:                                       ; preds = %cond.false88, %cond.true77
  %cond96 = phi i32 [ %call87, %cond.true77 ], [ %call94, %cond.false88 ]
  %arrayidx97 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 172, i32 1
  %49 = ptrtoint ptr %arrayidx97 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx97, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 590849, i32 %50)
  %cmp99 = icmp eq i32 %50, 590849
  %. = select i1 %cmp99, i32 2097153, i32 13825
  %51 = ptrtoint ptr %cg_flags to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cg_flags, align 8
  %and104 = and i32 %52, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and104)
  %tobool105.not = icmp eq i32 %and104, 0
  %or107 = or i32 %., 62
  %data.2 = select i1 %tobool105.not, i32 %., i32 %or107
  call void @__sanitizer_cov_trace_cmp4(i32 %cond96, i32 %data.2)
  %cmp109.not = icmp eq i32 %cond96, %data.2
  br i1 %cmp109.not, label %cond.end95.if.end143_crit_edge, label %if.then110

cond.end95.if.end143_crit_edge:                   ; preds = %cond.end95
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end143

if.then110:                                       ; preds = %cond.end95
  %53 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %virt, align 8
  %and113 = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and113)
  %tobool114.not = icmp eq i32 %and113, 0
  br i1 %tobool114.not, label %if.then110.cond.false136_crit_edge, label %land.lhs.true115

if.then110.cond.false136_crit_edge:               ; preds = %if.then110
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false136

land.lhs.true115:                                 ; preds = %if.then110
  %funcs118 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %55 = ptrtoint ptr %funcs118 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %funcs118, align 4
  %tobool119.not = icmp eq ptr %56, null
  br i1 %tobool119.not, label %land.lhs.true115.cond.false136_crit_edge, label %land.lhs.true120

land.lhs.true115.cond.false136_crit_edge:         ; preds = %land.lhs.true115
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false136

land.lhs.true120:                                 ; preds = %land.lhs.true115
  %sriov_wreg124 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %56, i32 0, i32 12
  %57 = ptrtoint ptr %sriov_wreg124 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sriov_wreg124, align 4
  %tobool125.not = icmp eq ptr %58, null
  br i1 %tobool125.not, label %land.lhs.true120.cond.false136_crit_edge, label %cond.true126

land.lhs.true120.cond.false136_crit_edge:         ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false136

cond.true126:                                     ; preds = %land.lhs.true120
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx132 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %59 = ptrtoint ptr %arrayidx132 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx132, align 8
  %arrayidx134 = getelementptr i32, ptr %60, i32 1
  %61 = ptrtoint ptr %arrayidx134 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx134, align 4
  %add135 = add i32 %62, 19529
  tail call void %58(ptr noundef %adev, i32 noundef %add135, i32 noundef %data.2, i32 noundef 0, i32 noundef 1) #15
  br label %if.end143

cond.false136:                                    ; preds = %land.lhs.true120.cond.false136_crit_edge, %land.lhs.true115.cond.false136_crit_edge, %if.then110.cond.false136_crit_edge
  %arrayidx138 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %63 = ptrtoint ptr %arrayidx138 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx138, align 8
  %arrayidx140 = getelementptr i32, ptr %64, i32 1
  %65 = ptrtoint ptr %arrayidx140 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx140, align 4
  %add141 = add i32 %66, 19529
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add141, i32 noundef %data.2, i32 noundef 0) #15
  br label %if.end143

if.end143:                                        ; preds = %cond.false136, %cond.true126, %cond.end95.if.end143_crit_edge
  %67 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %virt, align 8
  %and146 = and i32 %68, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and146)
  %tobool147.not = icmp eq i32 %and146, 0
  br i1 %tobool147.not, label %if.end143.cond.false170_crit_edge, label %land.lhs.true148

if.end143.cond.false170_crit_edge:                ; preds = %if.end143
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false170

land.lhs.true148:                                 ; preds = %if.end143
  %funcs151 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %69 = ptrtoint ptr %funcs151 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %funcs151, align 4
  %tobool152.not = icmp eq ptr %70, null
  br i1 %tobool152.not, label %land.lhs.true148.cond.false170_crit_edge, label %land.lhs.true153

land.lhs.true148.cond.false170_crit_edge:         ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false170

land.lhs.true153:                                 ; preds = %land.lhs.true148
  %sriov_rreg157 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %70, i32 0, i32 13
  %71 = ptrtoint ptr %sriov_rreg157 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sriov_rreg157, align 4
  %tobool158.not = icmp eq ptr %72, null
  br i1 %tobool158.not, label %land.lhs.true153.cond.false170_crit_edge, label %cond.true159

land.lhs.true153.cond.false170_crit_edge:         ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false170

cond.true159:                                     ; preds = %land.lhs.true153
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx165 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %73 = ptrtoint ptr %arrayidx165 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx165, align 8
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %74, align 4
  %add168 = add i32 %76, 450
  %call169 = tail call i32 %72(ptr noundef %adev, i32 noundef %add168, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end177

cond.false170:                                    ; preds = %land.lhs.true153.cond.false170_crit_edge, %land.lhs.true148.cond.false170_crit_edge, %if.end143.cond.false170_crit_edge
  %arrayidx172 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %77 = ptrtoint ptr %arrayidx172 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx172, align 8
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %78, align 4
  %add175 = add i32 %80, 450
  %call176 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add175, i32 noundef 0) #15
  br label %cond.end177

cond.end177:                                      ; preds = %cond.false170, %cond.true159
  %cond178 = phi i32 [ %call169, %cond.true159 ], [ %call176, %cond.false170 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9437440, i32 %cond178)
  %cmp179.not = icmp eq i32 %cond178, 9437440
  br i1 %cmp179.not, label %cond.end177.if.end286_crit_edge, label %if.then180

cond.end177.if.end286_crit_edge:                  ; preds = %cond.end177
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end286

if.then180:                                       ; preds = %cond.end177
  %81 = ptrtoint ptr %virt to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %virt, align 8
  %and183 = and i32 %82, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and183)
  %tobool184.not = icmp eq i32 %and183, 0
  br i1 %tobool184.not, label %if.then180.cond.false206_crit_edge, label %land.lhs.true185

if.then180.cond.false206_crit_edge:               ; preds = %if.then180
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false206

land.lhs.true185:                                 ; preds = %if.then180
  %funcs188 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %83 = ptrtoint ptr %funcs188 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %funcs188, align 4
  %tobool189.not = icmp eq ptr %84, null
  br i1 %tobool189.not, label %land.lhs.true185.cond.false206_crit_edge, label %land.lhs.true190

land.lhs.true185.cond.false206_crit_edge:         ; preds = %land.lhs.true185
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false206

land.lhs.true190:                                 ; preds = %land.lhs.true185
  %sriov_wreg194 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %84, i32 0, i32 12
  %85 = ptrtoint ptr %sriov_wreg194 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %sriov_wreg194, align 4
  %tobool195.not = icmp eq ptr %86, null
  br i1 %tobool195.not, label %land.lhs.true190.cond.false206_crit_edge, label %cond.true196

land.lhs.true190.cond.false206_crit_edge:         ; preds = %land.lhs.true190
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false206

cond.true196:                                     ; preds = %land.lhs.true190
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx202 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %87 = ptrtoint ptr %arrayidx202 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %arrayidx202, align 8
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %88, align 4
  %add205 = add i32 %90, 450
  tail call void %86(ptr noundef %adev, i32 noundef %add205, i32 noundef 9437440, i32 noundef 0, i32 noundef 1) #15
  br label %if.end286

cond.false206:                                    ; preds = %land.lhs.true190.cond.false206_crit_edge, %land.lhs.true185.cond.false206_crit_edge, %if.then180.cond.false206_crit_edge
  %arrayidx208 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %91 = ptrtoint ptr %arrayidx208 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx208, align 8
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %92, align 4
  %add211 = add i32 %94, 450
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add211, i32 noundef 9437440, i32 noundef 0) #15
  br label %if.end286

if.else214:                                       ; preds = %land.lhs.true.if.else214_crit_edge, %entry.if.else214_crit_edge
  %virt215 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 132
  %95 = ptrtoint ptr %virt215 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %virt215, align 8
  %and217 = and i32 %96, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and217)
  %tobool218.not = icmp eq i32 %and217, 0
  br i1 %tobool218.not, label %if.else214.cond.false241_crit_edge, label %land.lhs.true219

if.else214.cond.false241_crit_edge:               ; preds = %if.else214
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241

land.lhs.true219:                                 ; preds = %if.else214
  %funcs222 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %97 = ptrtoint ptr %funcs222 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %funcs222, align 4
  %tobool223.not = icmp eq ptr %98, null
  br i1 %tobool223.not, label %land.lhs.true219.cond.false241_crit_edge, label %land.lhs.true224

land.lhs.true219.cond.false241_crit_edge:         ; preds = %land.lhs.true219
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241

land.lhs.true224:                                 ; preds = %land.lhs.true219
  %sriov_rreg228 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %98, i32 0, i32 13
  %99 = ptrtoint ptr %sriov_rreg228 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %sriov_rreg228, align 4
  %tobool229.not = icmp eq ptr %100, null
  br i1 %tobool229.not, label %land.lhs.true224.cond.false241_crit_edge, label %cond.true230

land.lhs.true224.cond.false241_crit_edge:         ; preds = %land.lhs.true224
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false241

cond.true230:                                     ; preds = %land.lhs.true224
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx236 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %101 = ptrtoint ptr %arrayidx236 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx236, align 8
  %arrayidx238 = getelementptr i32, ptr %102, i32 1
  %103 = ptrtoint ptr %arrayidx238 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %arrayidx238, align 4
  %add239 = add i32 %104, 19529
  %call240 = tail call i32 %100(ptr noundef %adev, i32 noundef %add239, i32 noundef 0, i32 noundef 1) #15
  br label %cond.end248

cond.false241:                                    ; preds = %land.lhs.true224.cond.false241_crit_edge, %land.lhs.true219.cond.false241_crit_edge, %if.else214.cond.false241_crit_edge
  %arrayidx243 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %105 = ptrtoint ptr %arrayidx243 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %arrayidx243, align 8
  %arrayidx245 = getelementptr i32, ptr %106, i32 1
  %107 = ptrtoint ptr %arrayidx245 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %arrayidx245, align 4
  %add246 = add i32 %108, 19529
  %call247 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %add246, i32 noundef 0) #15
  br label %cond.end248

cond.end248:                                      ; preds = %cond.false241, %cond.true230
  %cond249 = phi i32 [ %call240, %cond.true230 ], [ %call247, %cond.false241 ]
  %and250 = and i32 %cond249, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %cond249, i32 %and250)
  %cmp251.not = icmp eq i32 %cond249, %and250
  br i1 %cmp251.not, label %cond.end248.if.end286_crit_edge, label %if.then252

cond.end248.if.end286_crit_edge:                  ; preds = %cond.end248
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end286

if.then252:                                       ; preds = %cond.end248
  %109 = ptrtoint ptr %virt215 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %virt215, align 8
  %and255 = and i32 %110, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and255)
  %tobool256.not = icmp eq i32 %and255, 0
  br i1 %tobool256.not, label %if.then252.cond.false278_crit_edge, label %land.lhs.true257

if.then252.cond.false278_crit_edge:               ; preds = %if.then252
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false278

land.lhs.true257:                                 ; preds = %if.then252
  %funcs260 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 106, i32 2, i32 15
  %111 = ptrtoint ptr %funcs260 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %funcs260, align 4
  %tobool261.not = icmp eq ptr %112, null
  br i1 %tobool261.not, label %land.lhs.true257.cond.false278_crit_edge, label %land.lhs.true262

land.lhs.true257.cond.false278_crit_edge:         ; preds = %land.lhs.true257
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false278

land.lhs.true262:                                 ; preds = %land.lhs.true257
  %sriov_wreg266 = getelementptr inbounds %struct.amdgpu_rlc_funcs, ptr %112, i32 0, i32 12
  %113 = ptrtoint ptr %sriov_wreg266 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %sriov_wreg266, align 4
  %tobool267.not = icmp eq ptr %114, null
  br i1 %tobool267.not, label %land.lhs.true262.cond.false278_crit_edge, label %cond.true268

land.lhs.true262.cond.false278_crit_edge:         ; preds = %land.lhs.true262
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.false278

cond.true268:                                     ; preds = %land.lhs.true262
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx274 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %115 = ptrtoint ptr %arrayidx274 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %arrayidx274, align 8
  %arrayidx276 = getelementptr i32, ptr %116, i32 1
  %117 = ptrtoint ptr %arrayidx276 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx276, align 4
  %add277 = add i32 %118, 19529
  tail call void %114(ptr noundef %adev, i32 noundef %add277, i32 noundef %and250, i32 noundef 0, i32 noundef 1) #15
  br label %if.end286

cond.false278:                                    ; preds = %land.lhs.true262.cond.false278_crit_edge, %land.lhs.true257.cond.false278_crit_edge, %if.then252.cond.false278_crit_edge
  %arrayidx280 = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 130, i32 1
  %119 = ptrtoint ptr %arrayidx280 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %arrayidx280, align 8
  %arrayidx282 = getelementptr i32, ptr %120, i32 1
  %121 = ptrtoint ptr %arrayidx282 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %arrayidx282, align 4
  %add283 = add i32 %122, 19529
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add283, i32 noundef %and250, i32 noundef 0) #15
  br label %if.end286

if.end286:                                        ; preds = %cond.false278, %cond.true268, %cond.end248.if.end286_crit_edge, %cond.false206, %cond.true196, %cond.end177.if.end286_crit_edge
  tail call void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef %adev) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_rlc_enter_safe_mode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_gfx_rlc_exit_safe_mode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_kiq_rreg(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #9

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #15

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #16 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 444)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #16 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 444)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #5 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #17 = { nomerge }
attributes #18 = { cold nounwind }
attributes #19 = { nobuiltin nounwind }
attributes #20 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !173, !174, !175, !177, !179, !181, !183, !185, !187, !189, !191, !192, !193, !194, !196, !197, !198, !200, !201, !202, !204, !205, !206, !208, !209, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !266, !268, !270, !272, !274, !276, !277, !278, !279, !280, !281, !283, !285, !287, !289, !290, !291, !293, !295, !297, !298, !299, !301, !303, !304, !305, !306, !307, !309, !310, !311, !312, !313, !315, !316, !317, !319, !321, !322, !323, !324, !326, !328, !329, !330, !331, !333, !334, !335, !337, !339, !341, !343, !345, !347, !349, !351, !353, !355, !357, !359, !361, !363, !365, !367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !403, !405, !407, !409, !411, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !435, !437, !439, !441, !443, !445, !447, !449, !451, !453, !455, !457, !459, !461, !463, !465, !467, !469, !471, !473, !475, !477, !479, !481, !483, !485, !487, !489, !491, !493, !495, !497, !499, !501, !503, !505, !507, !509, !511, !513, !515, !517, !519, !521, !523, !525, !527, !529, !531, !533, !535, !537, !539, !541, !543, !545, !547, !549, !551, !553, !555, !557, !559, !561, !563, !565, !567, !569, !570, !571, !573, !574, !576, !578, !579, !580, !581, !582, !584, !585, !586, !588, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610, !612, !614, !616, !618, !620, !622, !624, !626, !628, !630, !632, !634, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676, !678, !680, !682, !684, !686, !688, !690, !692, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714, !716, !718, !720, !722, !724, !726, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764, !766, !768, !770, !772, !774, !776, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796, !798, !800, !802, !804, !806, !807, !808, !809, !811, !812, !813, !815, !816, !818, !819, !821, !822, !824, !825, !827, !828, !830, !832, !834, !836, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !858, !860, !862, !864, !866, !868, !870, !872, !874, !876, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !966, !968, !970, !972, !974, !976, !978, !979, !980, !981, !982, !984, !986, !988, !989, !990, !991, !993, !995, !996, !997}
!llvm.named.register.sp = !{!998}
!llvm.module.flags = !{!999, !1000, !1001, !1002, !1003, !1004, !1005, !1006}
!llvm.ident = !{!1007}

!0 = !{ptr @__UNIQUE_ID_firmware343, !1, !"__UNIQUE_ID_firmware343", i1 false, i1 false}
!1 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 73, i32 1}
!2 = !{ptr @__UNIQUE_ID_firmware344, !3, !"__UNIQUE_ID_firmware344", i1 false, i1 false}
!3 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 74, i32 1}
!4 = !{ptr @__UNIQUE_ID_firmware345, !5, !"__UNIQUE_ID_firmware345", i1 false, i1 false}
!5 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 75, i32 1}
!6 = !{ptr @__UNIQUE_ID_firmware346, !7, !"__UNIQUE_ID_firmware346", i1 false, i1 false}
!7 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 76, i32 1}
!8 = !{ptr @__UNIQUE_ID_firmware347, !9, !"__UNIQUE_ID_firmware347", i1 false, i1 false}
!9 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 77, i32 1}
!10 = !{ptr @__UNIQUE_ID_firmware348, !11, !"__UNIQUE_ID_firmware348", i1 false, i1 false}
!11 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 78, i32 1}
!12 = !{ptr @__UNIQUE_ID_firmware349, !13, !"__UNIQUE_ID_firmware349", i1 false, i1 false}
!13 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 80, i32 1}
!14 = !{ptr @__UNIQUE_ID_firmware350, !15, !"__UNIQUE_ID_firmware350", i1 false, i1 false}
!15 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 81, i32 1}
!16 = !{ptr @__UNIQUE_ID_firmware351, !17, !"__UNIQUE_ID_firmware351", i1 false, i1 false}
!17 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 82, i32 1}
!18 = !{ptr @__UNIQUE_ID_firmware352, !19, !"__UNIQUE_ID_firmware352", i1 false, i1 false}
!19 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 83, i32 1}
!20 = !{ptr @__UNIQUE_ID_firmware353, !21, !"__UNIQUE_ID_firmware353", i1 false, i1 false}
!21 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 84, i32 1}
!22 = !{ptr @__UNIQUE_ID_firmware354, !23, !"__UNIQUE_ID_firmware354", i1 false, i1 false}
!23 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 85, i32 1}
!24 = !{ptr @__UNIQUE_ID_firmware355, !25, !"__UNIQUE_ID_firmware355", i1 false, i1 false}
!25 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 87, i32 1}
!26 = !{ptr @__UNIQUE_ID_firmware356, !27, !"__UNIQUE_ID_firmware356", i1 false, i1 false}
!27 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 88, i32 1}
!28 = !{ptr @__UNIQUE_ID_firmware357, !29, !"__UNIQUE_ID_firmware357", i1 false, i1 false}
!29 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 89, i32 1}
!30 = !{ptr @__UNIQUE_ID_firmware358, !31, !"__UNIQUE_ID_firmware358", i1 false, i1 false}
!31 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 90, i32 1}
!32 = !{ptr @__UNIQUE_ID_firmware359, !33, !"__UNIQUE_ID_firmware359", i1 false, i1 false}
!33 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 91, i32 1}
!34 = !{ptr @__UNIQUE_ID_firmware360, !35, !"__UNIQUE_ID_firmware360", i1 false, i1 false}
!35 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 92, i32 1}
!36 = !{ptr @__UNIQUE_ID_firmware361, !37, !"__UNIQUE_ID_firmware361", i1 false, i1 false}
!37 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 94, i32 1}
!38 = !{ptr @__UNIQUE_ID_firmware362, !39, !"__UNIQUE_ID_firmware362", i1 false, i1 false}
!39 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 95, i32 1}
!40 = !{ptr @__UNIQUE_ID_firmware363, !41, !"__UNIQUE_ID_firmware363", i1 false, i1 false}
!41 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 96, i32 1}
!42 = !{ptr @__UNIQUE_ID_firmware364, !43, !"__UNIQUE_ID_firmware364", i1 false, i1 false}
!43 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 97, i32 1}
!44 = !{ptr @__UNIQUE_ID_firmware365, !45, !"__UNIQUE_ID_firmware365", i1 false, i1 false}
!45 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 98, i32 1}
!46 = !{ptr @__UNIQUE_ID_firmware366, !47, !"__UNIQUE_ID_firmware366", i1 false, i1 false}
!47 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 99, i32 1}
!48 = !{ptr @__UNIQUE_ID_firmware367, !49, !"__UNIQUE_ID_firmware367", i1 false, i1 false}
!49 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 101, i32 1}
!50 = !{ptr @__UNIQUE_ID_firmware368, !51, !"__UNIQUE_ID_firmware368", i1 false, i1 false}
!51 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 102, i32 1}
!52 = !{ptr @__UNIQUE_ID_firmware369, !53, !"__UNIQUE_ID_firmware369", i1 false, i1 false}
!53 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 103, i32 1}
!54 = !{ptr @__UNIQUE_ID_firmware370, !55, !"__UNIQUE_ID_firmware370", i1 false, i1 false}
!55 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 104, i32 1}
!56 = !{ptr @__UNIQUE_ID_firmware371, !57, !"__UNIQUE_ID_firmware371", i1 false, i1 false}
!57 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 105, i32 1}
!58 = !{ptr @__UNIQUE_ID_firmware372, !59, !"__UNIQUE_ID_firmware372", i1 false, i1 false}
!59 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 106, i32 1}
!60 = !{ptr @__UNIQUE_ID_firmware373, !61, !"__UNIQUE_ID_firmware373", i1 false, i1 false}
!61 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 107, i32 1}
!62 = !{ptr @__UNIQUE_ID_firmware374, !63, !"__UNIQUE_ID_firmware374", i1 false, i1 false}
!63 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 109, i32 1}
!64 = !{ptr @__UNIQUE_ID_firmware375, !65, !"__UNIQUE_ID_firmware375", i1 false, i1 false}
!65 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 110, i32 1}
!66 = !{ptr @__UNIQUE_ID_firmware376, !67, !"__UNIQUE_ID_firmware376", i1 false, i1 false}
!67 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 111, i32 1}
!68 = !{ptr @__UNIQUE_ID_firmware377, !69, !"__UNIQUE_ID_firmware377", i1 false, i1 false}
!69 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 112, i32 1}
!70 = !{ptr @__UNIQUE_ID_firmware378, !71, !"__UNIQUE_ID_firmware378", i1 false, i1 false}
!71 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 113, i32 1}
!72 = !{ptr @__UNIQUE_ID_firmware379, !73, !"__UNIQUE_ID_firmware379", i1 false, i1 false}
!73 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 114, i32 1}
!74 = !{ptr @__UNIQUE_ID_firmware380, !75, !"__UNIQUE_ID_firmware380", i1 false, i1 false}
!75 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 115, i32 1}
!76 = !{ptr @__UNIQUE_ID_firmware381, !77, !"__UNIQUE_ID_firmware381", i1 false, i1 false}
!77 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 117, i32 1}
!78 = !{ptr @__UNIQUE_ID_firmware382, !79, !"__UNIQUE_ID_firmware382", i1 false, i1 false}
!79 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 118, i32 1}
!80 = !{ptr @__UNIQUE_ID_firmware383, !81, !"__UNIQUE_ID_firmware383", i1 false, i1 false}
!81 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 120, i32 1}
!82 = !{ptr @__UNIQUE_ID_firmware384, !83, !"__UNIQUE_ID_firmware384", i1 false, i1 false}
!83 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 121, i32 1}
!84 = !{ptr @__UNIQUE_ID_firmware385, !85, !"__UNIQUE_ID_firmware385", i1 false, i1 false}
!85 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 122, i32 1}
!86 = !{ptr @__UNIQUE_ID_firmware386, !87, !"__UNIQUE_ID_firmware386", i1 false, i1 false}
!87 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 123, i32 1}
!88 = !{ptr @__UNIQUE_ID_firmware387, !89, !"__UNIQUE_ID_firmware387", i1 false, i1 false}
!89 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 124, i32 1}
!90 = !{ptr @__UNIQUE_ID_firmware388, !91, !"__UNIQUE_ID_firmware388", i1 false, i1 false}
!91 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 126, i32 1}
!92 = !{ptr @__UNIQUE_ID_firmware389, !93, !"__UNIQUE_ID_firmware389", i1 false, i1 false}
!93 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 127, i32 1}
!94 = !{ptr @__UNIQUE_ID_firmware390, !95, !"__UNIQUE_ID_firmware390", i1 false, i1 false}
!95 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 128, i32 1}
!96 = !{ptr @__UNIQUE_ID_firmware391, !97, !"__UNIQUE_ID_firmware391", i1 false, i1 false}
!97 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 129, i32 1}
!98 = !{ptr @__UNIQUE_ID_firmware392, !99, !"__UNIQUE_ID_firmware392", i1 false, i1 false}
!99 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 130, i32 1}
!100 = !{ptr @__UNIQUE_ID_firmware393, !101, !"__UNIQUE_ID_firmware393", i1 false, i1 false}
!101 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 131, i32 1}
!102 = !{ptr @__UNIQUE_ID_firmware394, !103, !"__UNIQUE_ID_firmware394", i1 false, i1 false}
!103 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 133, i32 1}
!104 = !{ptr @__UNIQUE_ID_firmware395, !105, !"__UNIQUE_ID_firmware395", i1 false, i1 false}
!105 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 134, i32 1}
!106 = !{ptr @__UNIQUE_ID_firmware396, !107, !"__UNIQUE_ID_firmware396", i1 false, i1 false}
!107 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 135, i32 1}
!108 = !{ptr @gfx_v9_0_ip_block, !109, !"gfx_v9_0_ip_block", i1 false, i1 false}
!109 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 7304, i32 38}
!110 = !{ptr @.str, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6943, i32 10}
!112 = !{ptr @gfx_v9_0_ip_funcs, !113, !"gfx_v9_0_ip_funcs", i1 false, i1 false}
!113 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6942, i32 34}
!114 = !{ptr @gfx_v9_0_kiq_pm4_funcs, !115, !"gfx_v9_0_kiq_pm4_funcs", i1 false, i1 false}
!115 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1001, i32 35}
!116 = !{ptr @.str.1, !117, !"<string literal>", i1 false, i1 false}
!117 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ring.h", i32 314, i32 3}
!118 = !{ptr @gfx_v9_0_ring_funcs_kiq, !119, !"gfx_v9_0_ring_funcs_kiq", i1 false, i1 false}
!119 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 7052, i32 39}
!120 = !{ptr @gfx_v9_0_ring_funcs_gfx, !121, !"gfx_v9_0_ring_funcs_gfx", i1 false, i1 false}
!121 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6960, i32 39}
!122 = !{ptr @gfx_v9_0_ring_funcs_compute, !123, !"gfx_v9_0_ring_funcs_compute", i1 false, i1 false}
!123 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 7013, i32 39}
!124 = !{ptr @.str.2, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6907, i32 3}
!126 = !{ptr @gfx_v9_0_eop_irq_funcs, !127, !"gfx_v9_0_eop_irq_funcs", i1 false, i1 false}
!127 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 7094, i32 42}
!128 = !{ptr @.str.3, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 5854, i32 3}
!130 = !{ptr @.str.4, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6000, i32 2}
!132 = !{ptr @gfx_v9_0_priv_reg_irq_funcs, !133, !"gfx_v9_0_priv_reg_irq_funcs", i1 false, i1 false}
!133 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 7099, i32 42}
!134 = !{ptr @.str.5, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6055, i32 2}
!136 = !{ptr @gfx_v9_0_priv_inst_irq_funcs, !137, !"gfx_v9_0_priv_inst_irq_funcs", i1 false, i1 false}
!137 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 7104, i32 42}
!138 = !{ptr @.str.6, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6064, i32 2}
!140 = !{ptr @gfx_v9_0_cp_ecc_error_irq_funcs, !141, !"gfx_v9_0_cp_ecc_error_irq_funcs", i1 false, i1 false}
!141 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 7109, i32 42}
!142 = !{ptr @gfx_v9_0_rlc_funcs, !143, !"gfx_v9_0_rlc_funcs", i1 false, i1 false}
!143 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 5240, i32 38}
!144 = !{ptr @gfx9_cs_data, !145, !"gfx9_cs_data", i1 false, i1 false}
!145 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 939, i32 36}
!146 = !{ptr @gfx9_SECT_CONTEXT_defs, !147, !"gfx9_SECT_CONTEXT_defs", i1 false, i1 false}
!147 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 927, i32 35}
!148 = !{ptr @gfx9_SECT_CONTEXT_def_1, !149, !"gfx9_SECT_CONTEXT_def_1", i1 false, i1 false}
!149 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 24, i32 27}
!150 = !{ptr @gfx9_SECT_CONTEXT_def_2, !151, !"gfx9_SECT_CONTEXT_def_2", i1 false, i1 false}
!151 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 239, i32 27}
!152 = !{ptr @gfx9_SECT_CONTEXT_def_3, !153, !"gfx9_SECT_CONTEXT_def_3", i1 false, i1 false}
!153 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 524, i32 27}
!154 = !{ptr @gfx9_SECT_CONTEXT_def_4, !155, !"gfx9_SECT_CONTEXT_def_4", i1 false, i1 false}
!155 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 531, i32 27}
!156 = !{ptr @gfx9_SECT_CONTEXT_def_5, !157, !"gfx9_SECT_CONTEXT_def_5", i1 false, i1 false}
!157 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 691, i32 27}
!158 = !{ptr @gfx9_SECT_CONTEXT_def_6, !159, !"gfx9_SECT_CONTEXT_def_6", i1 false, i1 false}
!159 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 696, i32 27}
!160 = !{ptr @gfx9_SECT_CONTEXT_def_7, !161, !"gfx9_SECT_CONTEXT_def_7", i1 false, i1 false}
!161 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 700, i32 27}
!162 = !{ptr @gfx9_SECT_CONTEXT_def_8, !163, !"gfx9_SECT_CONTEXT_def_8", i1 false, i1 false}
!163 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/clearstate_gfx9.h", i32 769, i32 27}
!164 = !{ptr @.str.9, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2813, i32 3}
!166 = !{ptr @GFX_RLC_SRM_INDEX_CNTL_ADDR_OFFSETS, !167, !"GFX_RLC_SRM_INDEX_CNTL_ADDR_OFFSETS", i1 false, i1 false}
!167 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 725, i32 18}
!168 = !{ptr @GFX_RLC_SRM_INDEX_CNTL_DATA_OFFSETS, !169, !"GFX_RLC_SRM_INDEX_CNTL_DATA_OFFSETS", i1 false, i1 false}
!169 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 737, i32 18}
!170 = !{ptr @.str.10, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2751, i32 5}
!172 = !{ptr @.str.11, !171, !"<string literal>", i1 false, i1 false}
!173 = !{ptr @gfx_v9_0_wait_for_rlc_serdes._entry, !171, !"_entry", i1 false, i1 false}
!174 = !{ptr @gfx_v9_0_wait_for_rlc_serdes._entry_ptr, !171, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @gfx_v9_0_rlcg_rw.scratch_reg0, !176, !"scratch_reg0", i1 false, i1 false}
!176 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 751, i32 15}
!177 = !{ptr @gfx_v9_0_rlcg_rw.scratch_reg1, !178, !"scratch_reg1", i1 false, i1 false}
!178 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 752, i32 15}
!179 = !{ptr @gfx_v9_0_rlcg_rw.scratch_reg2, !180, !"scratch_reg2", i1 false, i1 false}
!180 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 753, i32 15}
!181 = !{ptr @gfx_v9_0_rlcg_rw.scratch_reg3, !182, !"scratch_reg3", i1 false, i1 false}
!182 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 754, i32 15}
!183 = !{ptr @gfx_v9_0_rlcg_rw.spare_int, !184, !"spare_int", i1 false, i1 false}
!184 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 755, i32 15}
!185 = distinct !{null, !186, !"grbm_cntl", i1 false, i1 false}
!186 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 756, i32 18}
!187 = distinct !{null, !188, !"grbm_idx", i1 false, i1 false}
!188 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 757, i32 18}
!189 = !{ptr @.str.12, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 801, i32 6}
!191 = !{ptr @.str.13, !190, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @gfx_v9_0_rlcg_rw._entry, !190, !"_entry", i1 false, i1 false}
!193 = !{ptr @gfx_v9_0_rlcg_rw._entry_ptr, !190, !"_entry_ptr", i1 false, i1 false}
!194 = !{ptr @.str.15, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 803, i32 6}
!196 = !{ptr @gfx_v9_0_rlcg_rw._entry.14, !195, !"_entry", i1 false, i1 false}
!197 = !{ptr @gfx_v9_0_rlcg_rw._entry_ptr.16, !195, !"_entry_ptr", i1 false, i1 false}
!198 = !{ptr @.str.18, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 805, i32 6}
!200 = !{ptr @gfx_v9_0_rlcg_rw._entry.17, !199, !"_entry", i1 false, i1 false}
!201 = !{ptr @gfx_v9_0_rlcg_rw._entry_ptr.19, !199, !"_entry_ptr", i1 false, i1 false}
!202 = !{ptr @.str.21, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 807, i32 6}
!204 = !{ptr @gfx_v9_0_rlcg_rw._entry.20, !203, !"_entry", i1 false, i1 false}
!205 = !{ptr @gfx_v9_0_rlcg_rw._entry_ptr.22, !203, !"_entry_ptr", i1 false, i1 false}
!206 = !{ptr @.str.24, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 809, i32 5}
!208 = !{ptr @gfx_v9_0_rlcg_rw._entry.23, !207, !"_entry", i1 false, i1 false}
!209 = !{ptr @gfx_v9_0_rlcg_rw._entry_ptr.25, !207, !"_entry_ptr", i1 false, i1 false}
!210 = distinct !{null, !211, !"rlcg_access_gc_9_0", i1 false, i1 false}
!211 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 720, i32 36}
!212 = !{ptr @.str.26, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4618, i32 3}
!214 = !{ptr @.str.27, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4707, i32 3}
!216 = !{ptr @.str.28, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4808, i32 3}
!218 = !{ptr @.str.29, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4815, i32 3}
!220 = !{ptr @vgpr_init_compute_shader_arcturus, !221, !"vgpr_init_compute_shader_arcturus", i1 false, i1 false}
!221 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4405, i32 18}
!222 = !{ptr @vgpr_init_regs_arcturus, !223, !"vgpr_init_regs_arcturus", i1 false, i1 false}
!223 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4520, i32 37}
!224 = !{ptr @vgpr_init_compute_shader, !225, !"vgpr_init_compute_shader", i1 false, i1 false}
!225 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4371, i32 18}
!226 = !{ptr @vgpr_init_regs, !227, !"vgpr_init_regs", i1 false, i1 false}
!227 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4503, i32 37}
!228 = distinct !{null, !229, !"sgpr_init_compute_shader", i1 false, i1 false}
!229 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4394, i32 18}
!230 = !{ptr @sgpr1_init_regs, !231, !"sgpr1_init_regs", i1 false, i1 false}
!231 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4537, i32 37}
!232 = !{ptr @sgpr2_init_regs, !233, !"sgpr2_init_regs", i1 false, i1 false}
!233 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4554, i32 37}
!234 = !{ptr @.str.30, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2433, i32 3}
!236 = !{ptr @.str.31, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2439, i32 3}
!238 = !{ptr @.str.32, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2445, i32 3}
!240 = distinct !{null, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2454, i32 24}
!242 = !{ptr @.str.34, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2456, i32 24}
!244 = !{ptr @.str.35, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2487, i32 3}
!246 = !{ptr @.str.36, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1732, i32 2}
!248 = !{ptr @.str.37, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1736, i32 15}
!250 = !{ptr @.str.38, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1739, i32 15}
!252 = !{ptr @.str.39, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1742, i32 15}
!254 = !{ptr @.str.40, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1747, i32 16}
!256 = !{ptr @.str.41, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1749, i32 16}
!258 = !{ptr @.str.42, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1751, i32 16}
!260 = !{ptr @.str.43, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1754, i32 15}
!262 = !{ptr @.str.44, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1758, i32 16}
!264 = !{ptr @.str.45, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1760, i32 16}
!266 = !{ptr @.str.46, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1763, i32 15}
!268 = !{ptr @.str.47, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1420, i32 37}
!270 = !{ptr @.str.48, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1431, i32 37}
!272 = !{ptr @.str.49, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1442, i32 37}
!274 = !{ptr @.str.50, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1478, i32 3}
!276 = !{ptr @.str.51, !275, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @.str.52, !275, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @.str.53, !275, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @gfx_v9_0_init_cp_gfx_microcode._entry, !275, !"_entry", i1 false, i1 false}
!280 = !{ptr @gfx_v9_0_init_cp_gfx_microcode._entry_ptr, !275, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @.str.54, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1516, i32 38}
!283 = !{ptr @.str.55, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1522, i32 38}
!285 = !{ptr @.str.56, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1524, i32 38}
!287 = !{ptr @.str.57, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1613, i32 3}
!289 = !{ptr @gfx_v9_0_init_rlc_microcode._entry, !288, !"_entry", i1 false, i1 false}
!290 = !{ptr @gfx_v9_0_init_rlc_microcode._entry_ptr, !288, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.58, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1641, i32 37}
!293 = !{ptr @.str.59, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1654, i32 38}
!295 = !{ptr @.str.60, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1716, i32 3}
!297 = !{ptr @gfx_v9_0_init_cp_compute_microcode._entry, !296, !"_entry", i1 false, i1 false}
!298 = !{ptr @gfx_v9_0_init_cp_compute_microcode._entry_ptr, !296, !"_entry_ptr", i1 false, i1 false}
!299 = distinct !{null, !300, !"amdgpu_gfxoff_quirk_list", i1 false, i1 false}
!300 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1330, i32 41}
!301 = distinct !{null, !302, !"__already_done", i1 false, i1 false}
!302 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 1267, i32 3}
!303 = !{ptr @.str.61, !302, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @.str.62, !302, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @gfx_v9_0_check_fw_write_wait._entry, !302, !"_entry", i1 false, i1 false}
!306 = !{ptr @gfx_v9_0_check_fw_write_wait._entry_ptr, !302, !"_entry_ptr", i1 false, i1 false}
!307 = !{ptr @.str.63, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2083, i32 4}
!309 = !{ptr @.str.64, !308, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @.str.65, !308, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @gfx_v9_0_mec_init._entry, !308, !"_entry", i1 false, i1 false}
!312 = !{ptr @gfx_v9_0_mec_init._entry_ptr, !308, !"_entry_ptr", i1 false, i1 false}
!313 = !{ptr @.str.67, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2107, i32 3}
!315 = !{ptr @gfx_v9_0_mec_init._entry.66, !314, !"_entry", i1 false, i1 false}
!316 = !{ptr @gfx_v9_0_mec_init._entry_ptr.68, !314, !"_entry_ptr", i1 false, i1 false}
!317 = !{ptr @.str.69, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2360, i32 22}
!319 = !{ptr @.str.70, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2231, i32 3}
!321 = !{ptr @.str.71, !320, !"<string literal>", i1 false, i1 false}
!322 = !{ptr @gfx_v9_0_gpu_early_init._entry, !320, !"_entry", i1 false, i1 false}
!323 = !{ptr @gfx_v9_0_gpu_early_init._entry_ptr, !320, !"_entry_ptr", i1 false, i1 false}
!324 = !{ptr @gfx_v9_0_gfx_funcs, !325, !"gfx_v9_0_gfx_funcs", i1 false, i1 false}
!325 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2191, i32 38}
!326 = !{ptr @.str.72, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4244, i32 3}
!328 = !{ptr @.str.73, !327, !"<string literal>", i1 false, i1 false}
!329 = !{ptr @gfx_v9_0_kiq_read_clock._entry, !327, !"_entry", i1 false, i1 false}
!330 = !{ptr @gfx_v9_0_kiq_read_clock._entry_ptr, !327, !"_entry_ptr", i1 false, i1 false}
!331 = !{ptr @.str.75, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4301, i32 2}
!333 = !{ptr @gfx_v9_0_kiq_read_clock._entry.74, !332, !"_entry", i1 false, i1 false}
!334 = !{ptr @gfx_v9_0_kiq_read_clock._entry_ptr.76, !332, !"_entry_ptr", i1 false, i1 false}
!335 = !{ptr @gfx_v9_0_ras_funcs, !336, !"gfx_v9_0_ras_funcs", i1 false, i1 false}
!336 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 2200, i32 42}
!337 = !{ptr @.str.77, !338, !"<string literal>", i1 false, i1 false}
!338 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6529, i32 3}
!339 = !{ptr @.str.78, !340, !"<string literal>", i1 false, i1 false}
!340 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6537, i32 3}
!341 = !{ptr @.str.79, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 373, i32 2}
!343 = !{ptr @.str.80, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 374, i32 2}
!345 = !{ptr @.str.81, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 375, i32 2}
!347 = !{ptr @.str.82, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 376, i32 2}
!349 = !{ptr @.str.83, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 377, i32 2}
!351 = !{ptr @.str.84, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 378, i32 2}
!353 = !{ptr @.str.85, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 379, i32 2}
!355 = !{ptr @.str.86, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 380, i32 2}
!357 = !{ptr @.str.87, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 381, i32 2}
!359 = !{ptr @.str.88, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 382, i32 2}
!361 = !{ptr @.str.89, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 383, i32 2}
!363 = !{ptr @.str.90, !364, !"<string literal>", i1 false, i1 false}
!364 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 384, i32 2}
!365 = !{ptr @.str.91, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 385, i32 2}
!367 = !{ptr @.str.92, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 386, i32 2}
!369 = !{ptr @.str.93, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 387, i32 2}
!371 = !{ptr @.str.94, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 388, i32 2}
!373 = !{ptr @.str.95, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 389, i32 2}
!375 = !{ptr @.str.96, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 391, i32 2}
!377 = !{ptr @.str.97, !378, !"<string literal>", i1 false, i1 false}
!378 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 393, i32 2}
!379 = !{ptr @.str.98, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 394, i32 2}
!381 = !{ptr @.str.99, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 395, i32 2}
!383 = !{ptr @.str.100, !384, !"<string literal>", i1 false, i1 false}
!384 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 396, i32 2}
!385 = !{ptr @.str.101, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 397, i32 2}
!387 = !{ptr @.str.102, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 398, i32 2}
!389 = !{ptr @.str.103, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 399, i32 2}
!391 = !{ptr @.str.104, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 400, i32 2}
!393 = !{ptr @.str.105, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 402, i32 2}
!395 = !{ptr @.str.106, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 404, i32 2}
!397 = !{ptr @.str.107, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 406, i32 2}
!399 = !{ptr @.str.108, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 408, i32 2}
!401 = !{ptr @.str.109, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 410, i32 2}
!403 = !{ptr @.str.110, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 412, i32 2}
!405 = !{ptr @.str.111, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 414, i32 2}
!407 = !{ptr @.str.112, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 416, i32 2}
!409 = !{ptr @.str.113, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 418, i32 2}
!411 = !{ptr @.str.114, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 420, i32 2}
!413 = !{ptr @.str.115, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 422, i32 2}
!415 = !{ptr @.str.116, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 424, i32 2}
!417 = !{ptr @.str.117, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 426, i32 2}
!419 = !{ptr @.str.118, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 428, i32 2}
!421 = !{ptr @.str.119, !422, !"<string literal>", i1 false, i1 false}
!422 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 430, i32 2}
!423 = !{ptr @.str.120, !424, !"<string literal>", i1 false, i1 false}
!424 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 432, i32 2}
!425 = !{ptr @.str.121, !426, !"<string literal>", i1 false, i1 false}
!426 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 434, i32 2}
!427 = !{ptr @.str.122, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 436, i32 2}
!429 = !{ptr @.str.123, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 438, i32 2}
!431 = !{ptr @.str.124, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 440, i32 2}
!433 = !{ptr @.str.125, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 442, i32 2}
!435 = !{ptr @.str.126, !436, !"<string literal>", i1 false, i1 false}
!436 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 444, i32 2}
!437 = !{ptr @.str.127, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 446, i32 2}
!439 = !{ptr @.str.128, !440, !"<string literal>", i1 false, i1 false}
!440 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 448, i32 2}
!441 = !{ptr @.str.129, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 449, i32 2}
!443 = !{ptr @.str.130, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 450, i32 2}
!445 = !{ptr @.str.131, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 451, i32 2}
!447 = !{ptr @.str.132, !448, !"<string literal>", i1 false, i1 false}
!448 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 452, i32 2}
!449 = !{ptr @.str.133, !450, !"<string literal>", i1 false, i1 false}
!450 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 453, i32 2}
!451 = !{ptr @.str.134, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 454, i32 2}
!453 = !{ptr @.str.135, !454, !"<string literal>", i1 false, i1 false}
!454 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 455, i32 2}
!455 = !{ptr @.str.136, !456, !"<string literal>", i1 false, i1 false}
!456 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 456, i32 2}
!457 = !{ptr @.str.137, !458, !"<string literal>", i1 false, i1 false}
!458 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 458, i32 2}
!459 = !{ptr @.str.138, !460, !"<string literal>", i1 false, i1 false}
!460 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 460, i32 2}
!461 = !{ptr @.str.139, !462, !"<string literal>", i1 false, i1 false}
!462 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 462, i32 2}
!463 = !{ptr @.str.140, !464, !"<string literal>", i1 false, i1 false}
!464 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 464, i32 2}
!465 = !{ptr @.str.141, !466, !"<string literal>", i1 false, i1 false}
!466 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 466, i32 2}
!467 = !{ptr @.str.142, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 467, i32 2}
!469 = !{ptr @.str.143, !470, !"<string literal>", i1 false, i1 false}
!470 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 468, i32 2}
!471 = !{ptr @.str.144, !472, !"<string literal>", i1 false, i1 false}
!472 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 469, i32 2}
!473 = !{ptr @.str.145, !474, !"<string literal>", i1 false, i1 false}
!474 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 470, i32 2}
!475 = !{ptr @.str.146, !476, !"<string literal>", i1 false, i1 false}
!476 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 471, i32 2}
!477 = !{ptr @.str.147, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 472, i32 2}
!479 = !{ptr @.str.148, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 473, i32 2}
!481 = !{ptr @.str.149, !482, !"<string literal>", i1 false, i1 false}
!482 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 474, i32 2}
!483 = !{ptr @.str.150, !484, !"<string literal>", i1 false, i1 false}
!484 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 475, i32 2}
!485 = !{ptr @.str.151, !486, !"<string literal>", i1 false, i1 false}
!486 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 476, i32 2}
!487 = !{ptr @.str.152, !488, !"<string literal>", i1 false, i1 false}
!488 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 477, i32 2}
!489 = !{ptr @.str.153, !490, !"<string literal>", i1 false, i1 false}
!490 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 479, i32 2}
!491 = !{ptr @.str.154, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 480, i32 2}
!493 = !{ptr @.str.155, !494, !"<string literal>", i1 false, i1 false}
!494 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 482, i32 2}
!495 = !{ptr @.str.156, !496, !"<string literal>", i1 false, i1 false}
!496 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 484, i32 2}
!497 = !{ptr @.str.157, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 486, i32 2}
!499 = !{ptr @.str.158, !500, !"<string literal>", i1 false, i1 false}
!500 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 487, i32 2}
!501 = !{ptr @.str.159, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 488, i32 2}
!503 = !{ptr @.str.160, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 489, i32 2}
!505 = !{ptr @.str.161, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 490, i32 2}
!507 = !{ptr @.str.162, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 491, i32 2}
!509 = !{ptr @.str.163, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 492, i32 2}
!511 = !{ptr @.str.164, !512, !"<string literal>", i1 false, i1 false}
!512 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 493, i32 2}
!513 = !{ptr @.str.165, !514, !"<string literal>", i1 false, i1 false}
!514 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 494, i32 2}
!515 = !{ptr @.str.166, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 495, i32 2}
!517 = !{ptr @.str.167, !518, !"<string literal>", i1 false, i1 false}
!518 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 496, i32 2}
!519 = !{ptr @.str.168, !520, !"<string literal>", i1 false, i1 false}
!520 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 497, i32 2}
!521 = !{ptr @.str.169, !522, !"<string literal>", i1 false, i1 false}
!522 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 498, i32 2}
!523 = !{ptr @.str.170, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 499, i32 2}
!525 = !{ptr @.str.171, !526, !"<string literal>", i1 false, i1 false}
!526 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 500, i32 2}
!527 = !{ptr @.str.172, !528, !"<string literal>", i1 false, i1 false}
!528 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 501, i32 2}
!529 = !{ptr @.str.173, !530, !"<string literal>", i1 false, i1 false}
!530 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 502, i32 2}
!531 = !{ptr @.str.174, !532, !"<string literal>", i1 false, i1 false}
!532 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 503, i32 2}
!533 = !{ptr @.str.175, !534, !"<string literal>", i1 false, i1 false}
!534 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 504, i32 2}
!535 = !{ptr @.str.176, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 505, i32 2}
!537 = !{ptr @.str.177, !538, !"<string literal>", i1 false, i1 false}
!538 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 506, i32 2}
!539 = !{ptr @.str.178, !540, !"<string literal>", i1 false, i1 false}
!540 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 507, i32 2}
!541 = !{ptr @.str.179, !542, !"<string literal>", i1 false, i1 false}
!542 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 508, i32 2}
!543 = !{ptr @.str.180, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 509, i32 2}
!545 = !{ptr @.str.181, !546, !"<string literal>", i1 false, i1 false}
!546 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 510, i32 2}
!547 = !{ptr @.str.182, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 511, i32 2}
!549 = !{ptr @.str.183, !550, !"<string literal>", i1 false, i1 false}
!550 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 512, i32 2}
!551 = !{ptr @.str.184, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 513, i32 2}
!553 = !{ptr @.str.185, !554, !"<string literal>", i1 false, i1 false}
!554 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 514, i32 2}
!555 = !{ptr @.str.186, !556, !"<string literal>", i1 false, i1 false}
!556 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 515, i32 2}
!557 = !{ptr @.str.187, !558, !"<string literal>", i1 false, i1 false}
!558 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 516, i32 2}
!559 = !{ptr @.str.188, !560, !"<string literal>", i1 false, i1 false}
!560 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 517, i32 2}
!561 = !{ptr @.str.189, !562, !"<string literal>", i1 false, i1 false}
!562 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 518, i32 2}
!563 = !{ptr @.str.190, !564, !"<string literal>", i1 false, i1 false}
!564 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 519, i32 2}
!565 = !{ptr @ras_gfx_subblocks, !566, !"ras_gfx_subblocks", i1 false, i1 false}
!566 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 372, i32 38}
!567 = distinct !{null, !568, !"__already_done", i1 false, i1 false}
!568 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ras.h", i32 573, i32 3}
!569 = !{ptr @.str.191, !568, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @.str.192, !568, !"<string literal>", i1 false, i1 false}
!571 = distinct !{null, !572, !"__already_done", i1 false, i1 false}
!572 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_ras.h", i32 592, i32 3}
!573 = !{ptr @.str.193, !572, !"<string literal>", i1 false, i1 false}
!574 = !{ptr @gfx_v9_0_edc_counter_regs, !575, !"gfx_v9_0_edc_counter_regs", i1 false, i1 false}
!575 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4571, i32 37}
!576 = !{ptr @.str.194, !577, !"<string literal>", i1 false, i1 false}
!577 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6743, i32 4}
!578 = !{ptr @.str.195, !577, !"<string literal>", i1 false, i1 false}
!579 = !{ptr @.str.196, !577, !"<string literal>", i1 false, i1 false}
!580 = !{ptr @gfx_v9_0_ras_error_count._entry, !577, !"_entry", i1 false, i1 false}
!581 = !{ptr @gfx_v9_0_ras_error_count._entry_ptr, !577, !"_entry_ptr", i1 false, i1 false}
!582 = !{ptr @.str.198, !583, !"<string literal>", i1 false, i1 false}
!583 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6755, i32 4}
!584 = !{ptr @gfx_v9_0_ras_error_count._entry.197, !583, !"_entry", i1 false, i1 false}
!585 = !{ptr @gfx_v9_0_ras_error_count._entry_ptr.199, !583, !"_entry_ptr", i1 false, i1 false}
!586 = !{ptr @.str.200, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6071, i32 4}
!588 = !{ptr @.str.201, !589, !"<string literal>", i1 false, i1 false}
!589 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6075, i32 4}
!590 = !{ptr @.str.202, !591, !"<string literal>", i1 false, i1 false}
!591 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6079, i32 4}
!592 = !{ptr @.str.203, !593, !"<string literal>", i1 false, i1 false}
!593 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6083, i32 4}
!594 = !{ptr @.str.204, !595, !"<string literal>", i1 false, i1 false}
!595 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6087, i32 4}
!596 = !{ptr @.str.205, !597, !"<string literal>", i1 false, i1 false}
!597 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6091, i32 4}
!598 = !{ptr @.str.206, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6095, i32 4}
!600 = !{ptr @.str.207, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6099, i32 4}
!602 = !{ptr @.str.208, !603, !"<string literal>", i1 false, i1 false}
!603 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6103, i32 4}
!604 = !{ptr @.str.209, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6107, i32 4}
!606 = !{ptr @.str.210, !607, !"<string literal>", i1 false, i1 false}
!607 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6111, i32 4}
!608 = !{ptr @.str.211, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6115, i32 4}
!610 = !{ptr @.str.212, !611, !"<string literal>", i1 false, i1 false}
!611 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6119, i32 4}
!612 = !{ptr @.str.213, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6123, i32 4}
!614 = !{ptr @.str.214, !615, !"<string literal>", i1 false, i1 false}
!615 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6127, i32 4}
!616 = !{ptr @.str.215, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6132, i32 4}
!618 = !{ptr @.str.216, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6137, i32 4}
!620 = !{ptr @.str.217, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6142, i32 4}
!622 = !{ptr @.str.218, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6147, i32 4}
!624 = !{ptr @.str.219, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6152, i32 4}
!626 = !{ptr @.str.220, !627, !"<string literal>", i1 false, i1 false}
!627 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6157, i32 4}
!628 = !{ptr @.str.221, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6161, i32 4}
!630 = !{ptr @.str.222, !631, !"<string literal>", i1 false, i1 false}
!631 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6165, i32 4}
!632 = !{ptr @.str.223, !633, !"<string literal>", i1 false, i1 false}
!633 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6169, i32 4}
!634 = !{ptr @.str.224, !635, !"<string literal>", i1 false, i1 false}
!635 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6173, i32 4}
!636 = !{ptr @.str.225, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6177, i32 4}
!638 = !{ptr @.str.226, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6181, i32 4}
!640 = !{ptr @.str.227, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6185, i32 4}
!642 = !{ptr @.str.228, !643, !"<string literal>", i1 false, i1 false}
!643 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6189, i32 4}
!644 = !{ptr @.str.229, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6193, i32 4}
!646 = !{ptr @.str.230, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6197, i32 4}
!648 = !{ptr @.str.231, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6201, i32 4}
!650 = !{ptr @.str.232, !651, !"<string literal>", i1 false, i1 false}
!651 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6205, i32 4}
!652 = !{ptr @.str.233, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6209, i32 4}
!654 = !{ptr @.str.234, !655, !"<string literal>", i1 false, i1 false}
!655 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6213, i32 4}
!656 = !{ptr @.str.235, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6217, i32 4}
!658 = !{ptr @.str.236, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6221, i32 4}
!660 = !{ptr @.str.237, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6225, i32 4}
!662 = !{ptr @.str.238, !663, !"<string literal>", i1 false, i1 false}
!663 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6229, i32 4}
!664 = !{ptr @.str.239, !665, !"<string literal>", i1 false, i1 false}
!665 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6233, i32 4}
!666 = !{ptr @.str.240, !667, !"<string literal>", i1 false, i1 false}
!667 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6237, i32 4}
!668 = !{ptr @.str.241, !669, !"<string literal>", i1 false, i1 false}
!669 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6241, i32 4}
!670 = !{ptr @.str.242, !671, !"<string literal>", i1 false, i1 false}
!671 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6245, i32 4}
!672 = !{ptr @.str.243, !673, !"<string literal>", i1 false, i1 false}
!673 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6249, i32 4}
!674 = !{ptr @.str.244, !675, !"<string literal>", i1 false, i1 false}
!675 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6253, i32 4}
!676 = !{ptr @.str.245, !677, !"<string literal>", i1 false, i1 false}
!677 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6257, i32 4}
!678 = !{ptr @.str.246, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6261, i32 4}
!680 = !{ptr @.str.247, !681, !"<string literal>", i1 false, i1 false}
!681 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6265, i32 4}
!682 = !{ptr @.str.248, !683, !"<string literal>", i1 false, i1 false}
!683 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6269, i32 4}
!684 = !{ptr @.str.249, !685, !"<string literal>", i1 false, i1 false}
!685 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6273, i32 4}
!686 = !{ptr @.str.250, !687, !"<string literal>", i1 false, i1 false}
!687 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6277, i32 4}
!688 = !{ptr @.str.251, !689, !"<string literal>", i1 false, i1 false}
!689 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6281, i32 4}
!690 = !{ptr @.str.252, !691, !"<string literal>", i1 false, i1 false}
!691 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6285, i32 4}
!692 = !{ptr @.str.253, !693, !"<string literal>", i1 false, i1 false}
!693 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6289, i32 4}
!694 = !{ptr @.str.254, !695, !"<string literal>", i1 false, i1 false}
!695 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6293, i32 4}
!696 = !{ptr @.str.255, !697, !"<string literal>", i1 false, i1 false}
!697 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6297, i32 4}
!698 = !{ptr @.str.256, !699, !"<string literal>", i1 false, i1 false}
!699 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6301, i32 4}
!700 = !{ptr @.str.257, !701, !"<string literal>", i1 false, i1 false}
!701 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6305, i32 4}
!702 = !{ptr @.str.258, !703, !"<string literal>", i1 false, i1 false}
!703 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6309, i32 4}
!704 = !{ptr @.str.259, !705, !"<string literal>", i1 false, i1 false}
!705 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6313, i32 4}
!706 = !{ptr @.str.260, !707, !"<string literal>", i1 false, i1 false}
!707 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6317, i32 4}
!708 = !{ptr @.str.261, !709, !"<string literal>", i1 false, i1 false}
!709 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6321, i32 4}
!710 = !{ptr @.str.262, !711, !"<string literal>", i1 false, i1 false}
!711 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6325, i32 4}
!712 = !{ptr @.str.263, !713, !"<string literal>", i1 false, i1 false}
!713 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6329, i32 4}
!714 = !{ptr @.str.264, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6333, i32 4}
!716 = !{ptr @.str.265, !717, !"<string literal>", i1 false, i1 false}
!717 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6337, i32 4}
!718 = !{ptr @.str.266, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6341, i32 4}
!720 = !{ptr @.str.267, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6345, i32 4}
!722 = !{ptr @.str.268, !723, !"<string literal>", i1 false, i1 false}
!723 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6349, i32 4}
!724 = !{ptr @.str.269, !725, !"<string literal>", i1 false, i1 false}
!725 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6353, i32 4}
!726 = !{ptr @.str.270, !727, !"<string literal>", i1 false, i1 false}
!727 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6357, i32 4}
!728 = !{ptr @.str.271, !729, !"<string literal>", i1 false, i1 false}
!729 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6361, i32 4}
!730 = !{ptr @.str.272, !731, !"<string literal>", i1 false, i1 false}
!731 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6365, i32 4}
!732 = !{ptr @.str.273, !733, !"<string literal>", i1 false, i1 false}
!733 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6369, i32 4}
!734 = !{ptr @.str.274, !735, !"<string literal>", i1 false, i1 false}
!735 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6373, i32 4}
!736 = !{ptr @.str.275, !737, !"<string literal>", i1 false, i1 false}
!737 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6377, i32 4}
!738 = !{ptr @.str.276, !739, !"<string literal>", i1 false, i1 false}
!739 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6381, i32 4}
!740 = !{ptr @.str.277, !741, !"<string literal>", i1 false, i1 false}
!741 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6385, i32 4}
!742 = !{ptr @.str.278, !743, !"<string literal>", i1 false, i1 false}
!743 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6389, i32 4}
!744 = !{ptr @.str.279, !745, !"<string literal>", i1 false, i1 false}
!745 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6393, i32 4}
!746 = !{ptr @.str.280, !747, !"<string literal>", i1 false, i1 false}
!747 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6397, i32 4}
!748 = !{ptr @.str.281, !749, !"<string literal>", i1 false, i1 false}
!749 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6401, i32 4}
!750 = !{ptr @.str.282, !751, !"<string literal>", i1 false, i1 false}
!751 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6405, i32 4}
!752 = !{ptr @.str.283, !753, !"<string literal>", i1 false, i1 false}
!753 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6409, i32 4}
!754 = !{ptr @.str.284, !755, !"<string literal>", i1 false, i1 false}
!755 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6413, i32 4}
!756 = !{ptr @.str.285, !757, !"<string literal>", i1 false, i1 false}
!757 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6417, i32 4}
!758 = !{ptr @.str.286, !759, !"<string literal>", i1 false, i1 false}
!759 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6421, i32 4}
!760 = !{ptr @.str.287, !761, !"<string literal>", i1 false, i1 false}
!761 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6425, i32 4}
!762 = !{ptr @.str.288, !763, !"<string literal>", i1 false, i1 false}
!763 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6429, i32 4}
!764 = !{ptr @.str.289, !765, !"<string literal>", i1 false, i1 false}
!765 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6433, i32 4}
!766 = !{ptr @.str.290, !767, !"<string literal>", i1 false, i1 false}
!767 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6437, i32 4}
!768 = !{ptr @.str.291, !769, !"<string literal>", i1 false, i1 false}
!769 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6441, i32 4}
!770 = !{ptr @.str.292, !771, !"<string literal>", i1 false, i1 false}
!771 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6445, i32 4}
!772 = !{ptr @.str.293, !773, !"<string literal>", i1 false, i1 false}
!773 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6449, i32 4}
!774 = !{ptr @.str.294, !775, !"<string literal>", i1 false, i1 false}
!775 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6453, i32 4}
!776 = !{ptr @.str.295, !777, !"<string literal>", i1 false, i1 false}
!777 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6457, i32 4}
!778 = !{ptr @.str.296, !779, !"<string literal>", i1 false, i1 false}
!779 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6461, i32 4}
!780 = !{ptr @.str.297, !781, !"<string literal>", i1 false, i1 false}
!781 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6465, i32 4}
!782 = !{ptr @.str.298, !783, !"<string literal>", i1 false, i1 false}
!783 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6469, i32 4}
!784 = !{ptr @.str.299, !785, !"<string literal>", i1 false, i1 false}
!785 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6473, i32 4}
!786 = !{ptr @.str.300, !787, !"<string literal>", i1 false, i1 false}
!787 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6477, i32 4}
!788 = !{ptr @.str.301, !789, !"<string literal>", i1 false, i1 false}
!789 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6481, i32 4}
!790 = !{ptr @.str.302, !791, !"<string literal>", i1 false, i1 false}
!791 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6485, i32 4}
!792 = !{ptr @.str.303, !793, !"<string literal>", i1 false, i1 false}
!793 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6489, i32 4}
!794 = !{ptr @.str.304, !795, !"<string literal>", i1 false, i1 false}
!795 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6493, i32 4}
!796 = !{ptr @.str.305, !797, !"<string literal>", i1 false, i1 false}
!797 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6497, i32 4}
!798 = !{ptr @.str.306, !799, !"<string literal>", i1 false, i1 false}
!799 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6501, i32 4}
!800 = !{ptr @.str.307, !801, !"<string literal>", i1 false, i1 false}
!801 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6505, i32 4}
!802 = !{ptr @gfx_v9_0_ras_fields, !803, !"gfx_v9_0_ras_fields", i1 false, i1 false}
!803 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6070, i32 43}
!804 = !{ptr @.str.308, !805, !"<string literal>", i1 false, i1 false}
!805 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6649, i32 4}
!806 = !{ptr @.str.309, !805, !"<string literal>", i1 false, i1 false}
!807 = !{ptr @gfx_v9_0_query_utc_edc_status._entry, !805, !"_entry", i1 false, i1 false}
!808 = !{ptr @gfx_v9_0_query_utc_edc_status._entry_ptr, !805, !"_entry_ptr", i1 false, i1 false}
!809 = !{ptr @.str.311, !810, !"<string literal>", i1 false, i1 false}
!810 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6656, i32 4}
!811 = !{ptr @gfx_v9_0_query_utc_edc_status._entry.310, !810, !"_entry", i1 false, i1 false}
!812 = !{ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.312, !810, !"_entry_ptr", i1 false, i1 false}
!813 = !{ptr @gfx_v9_0_query_utc_edc_status._entry.313, !814, !"_entry", i1 false, i1 false}
!814 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6669, i32 4}
!815 = !{ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.314, !814, !"_entry_ptr", i1 false, i1 false}
!816 = !{ptr @gfx_v9_0_query_utc_edc_status._entry.315, !817, !"_entry", i1 false, i1 false}
!817 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6677, i32 4}
!818 = !{ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.316, !817, !"_entry_ptr", i1 false, i1 false}
!819 = !{ptr @gfx_v9_0_query_utc_edc_status._entry.317, !820, !"_entry", i1 false, i1 false}
!820 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6689, i32 4}
!821 = !{ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.318, !820, !"_entry_ptr", i1 false, i1 false}
!822 = !{ptr @gfx_v9_0_query_utc_edc_status._entry.319, !823, !"_entry", i1 false, i1 false}
!823 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6702, i32 4}
!824 = !{ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.320, !823, !"_entry_ptr", i1 false, i1 false}
!825 = !{ptr @gfx_v9_0_query_utc_edc_status._entry.321, !826, !"_entry", i1 false, i1 false}
!826 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6710, i32 4}
!827 = !{ptr @gfx_v9_0_query_utc_edc_status._entry_ptr.322, !826, !"_entry_ptr", i1 false, i1 false}
!828 = !{ptr @.str.323, !829, !"<string literal>", i1 false, i1 false}
!829 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6558, i32 2}
!830 = !{ptr @.str.324, !831, !"<string literal>", i1 false, i1 false}
!831 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6559, i32 2}
!832 = !{ptr @.str.325, !833, !"<string literal>", i1 false, i1 false}
!833 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6560, i32 2}
!834 = !{ptr @.str.326, !835, !"<string literal>", i1 false, i1 false}
!835 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6561, i32 2}
!836 = !{ptr @.str.327, !837, !"<string literal>", i1 false, i1 false}
!837 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6562, i32 2}
!838 = !{ptr @.str.328, !839, !"<string literal>", i1 false, i1 false}
!839 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6563, i32 2}
!840 = !{ptr @.str.329, !841, !"<string literal>", i1 false, i1 false}
!841 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6564, i32 2}
!842 = !{ptr @.str.330, !843, !"<string literal>", i1 false, i1 false}
!843 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6565, i32 2}
!844 = !{ptr @.str.331, !845, !"<string literal>", i1 false, i1 false}
!845 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6566, i32 2}
!846 = !{ptr @.str.332, !847, !"<string literal>", i1 false, i1 false}
!847 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6567, i32 2}
!848 = !{ptr @.str.333, !849, !"<string literal>", i1 false, i1 false}
!849 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6568, i32 2}
!850 = !{ptr @.str.334, !851, !"<string literal>", i1 false, i1 false}
!851 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6569, i32 2}
!852 = !{ptr @.str.335, !853, !"<string literal>", i1 false, i1 false}
!853 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6570, i32 2}
!854 = !{ptr @.str.336, !855, !"<string literal>", i1 false, i1 false}
!855 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6571, i32 2}
!856 = !{ptr @.str.337, !857, !"<string literal>", i1 false, i1 false}
!857 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6572, i32 2}
!858 = !{ptr @.str.338, !859, !"<string literal>", i1 false, i1 false}
!859 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6573, i32 2}
!860 = !{ptr @vml2_mems, !861, !"vml2_mems", i1 false, i1 false}
!861 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6557, i32 20}
!862 = !{ptr @.str.339, !863, !"<string literal>", i1 false, i1 false}
!863 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6577, i32 2}
!864 = !{ptr @.str.340, !865, !"<string literal>", i1 false, i1 false}
!865 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6578, i32 2}
!866 = !{ptr @.str.341, !867, !"<string literal>", i1 false, i1 false}
!867 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6579, i32 2}
!868 = !{ptr @.str.342, !869, !"<string literal>", i1 false, i1 false}
!869 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6580, i32 2}
!870 = !{ptr @.str.343, !871, !"<string literal>", i1 false, i1 false}
!871 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6581, i32 2}
!872 = !{ptr @.str.344, !873, !"<string literal>", i1 false, i1 false}
!873 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6582, i32 2}
!874 = !{ptr @.str.345, !875, !"<string literal>", i1 false, i1 false}
!875 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6583, i32 2}
!876 = !{ptr @vml2_walker_mems, !877, !"vml2_walker_mems", i1 false, i1 false}
!877 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6576, i32 20}
!878 = !{ptr @.str.346, !879, !"<string literal>", i1 false, i1 false}
!879 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6587, i32 2}
!880 = !{ptr @.str.347, !881, !"<string literal>", i1 false, i1 false}
!881 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6588, i32 2}
!882 = !{ptr @.str.348, !883, !"<string literal>", i1 false, i1 false}
!883 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6589, i32 2}
!884 = !{ptr @.str.349, !885, !"<string literal>", i1 false, i1 false}
!885 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6590, i32 2}
!886 = !{ptr @atc_l2_cache_2m_mems, !887, !"atc_l2_cache_2m_mems", i1 false, i1 false}
!887 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6586, i32 20}
!888 = !{ptr @.str.350, !889, !"<string literal>", i1 false, i1 false}
!889 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6594, i32 2}
!890 = !{ptr @.str.351, !891, !"<string literal>", i1 false, i1 false}
!891 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6595, i32 2}
!892 = !{ptr @.str.352, !893, !"<string literal>", i1 false, i1 false}
!893 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6596, i32 2}
!894 = !{ptr @.str.353, !895, !"<string literal>", i1 false, i1 false}
!895 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6597, i32 2}
!896 = !{ptr @.str.354, !897, !"<string literal>", i1 false, i1 false}
!897 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6598, i32 2}
!898 = !{ptr @.str.355, !899, !"<string literal>", i1 false, i1 false}
!899 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6599, i32 2}
!900 = !{ptr @.str.356, !901, !"<string literal>", i1 false, i1 false}
!901 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6600, i32 2}
!902 = !{ptr @.str.357, !903, !"<string literal>", i1 false, i1 false}
!903 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6601, i32 2}
!904 = !{ptr @.str.358, !905, !"<string literal>", i1 false, i1 false}
!905 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6602, i32 2}
!906 = !{ptr @.str.359, !907, !"<string literal>", i1 false, i1 false}
!907 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6603, i32 2}
!908 = !{ptr @.str.360, !909, !"<string literal>", i1 false, i1 false}
!909 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6604, i32 2}
!910 = !{ptr @.str.361, !911, !"<string literal>", i1 false, i1 false}
!911 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6605, i32 2}
!912 = !{ptr @.str.362, !913, !"<string literal>", i1 false, i1 false}
!913 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6606, i32 2}
!914 = !{ptr @.str.363, !915, !"<string literal>", i1 false, i1 false}
!915 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6607, i32 2}
!916 = !{ptr @.str.364, !917, !"<string literal>", i1 false, i1 false}
!917 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6608, i32 2}
!918 = !{ptr @.str.365, !919, !"<string literal>", i1 false, i1 false}
!919 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6609, i32 2}
!920 = !{ptr @.str.366, !921, !"<string literal>", i1 false, i1 false}
!921 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6610, i32 2}
!922 = !{ptr @.str.367, !923, !"<string literal>", i1 false, i1 false}
!923 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6611, i32 2}
!924 = !{ptr @.str.368, !925, !"<string literal>", i1 false, i1 false}
!925 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6612, i32 2}
!926 = !{ptr @.str.369, !927, !"<string literal>", i1 false, i1 false}
!927 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6613, i32 2}
!928 = !{ptr @.str.370, !929, !"<string literal>", i1 false, i1 false}
!929 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6614, i32 2}
!930 = !{ptr @.str.371, !931, !"<string literal>", i1 false, i1 false}
!931 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6615, i32 2}
!932 = !{ptr @.str.372, !933, !"<string literal>", i1 false, i1 false}
!933 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6616, i32 2}
!934 = !{ptr @.str.373, !935, !"<string literal>", i1 false, i1 false}
!935 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6617, i32 2}
!936 = !{ptr @.str.374, !937, !"<string literal>", i1 false, i1 false}
!937 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6618, i32 2}
!938 = !{ptr @.str.375, !939, !"<string literal>", i1 false, i1 false}
!939 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6619, i32 2}
!940 = !{ptr @.str.376, !941, !"<string literal>", i1 false, i1 false}
!941 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6620, i32 2}
!942 = !{ptr @.str.377, !943, !"<string literal>", i1 false, i1 false}
!943 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6621, i32 2}
!944 = !{ptr @.str.378, !945, !"<string literal>", i1 false, i1 false}
!945 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6622, i32 2}
!946 = !{ptr @.str.379, !947, !"<string literal>", i1 false, i1 false}
!947 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6623, i32 2}
!948 = !{ptr @.str.380, !949, !"<string literal>", i1 false, i1 false}
!949 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6624, i32 2}
!950 = !{ptr @.str.381, !951, !"<string literal>", i1 false, i1 false}
!951 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6625, i32 2}
!952 = !{ptr @atc_l2_cache_4k_mems, !953, !"atc_l2_cache_4k_mems", i1 false, i1 false}
!953 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 6593, i32 20}
!954 = !{ptr @golden_settings_gc_9_0, !955, !"golden_settings_gc_9_0", i1 false, i1 false}
!955 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 522, i32 38}
!956 = !{ptr @golden_settings_gc_9_0_vg10, !957, !"golden_settings_gc_9_0_vg10", i1 false, i1 false}
!957 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 546, i32 38}
!958 = !{ptr @golden_settings_gc_9_2_1, !959, !"golden_settings_gc_9_2_1", i1 false, i1 false}
!959 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 668, i32 38}
!960 = !{ptr @golden_settings_gc_9_2_1_vg12, !961, !"golden_settings_gc_9_2_1_vg12", i1 false, i1 false}
!961 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 688, i32 38}
!962 = !{ptr @golden_settings_gc_9_0_vg20, !963, !"golden_settings_gc_9_0_vg20", i1 false, i1 false}
!963 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 568, i32 38}
!964 = !{ptr @golden_settings_gc_9_4_1_arct, !965, !"golden_settings_gc_9_4_1_arct", i1 false, i1 false}
!965 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 705, i32 38}
!966 = !{ptr @golden_settings_gc_9_1, !967, !"golden_settings_gc_9_1", i1 false, i1 false}
!967 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 583, i32 38}
!968 = !{ptr @golden_settings_gc_9_1_rv2, !969, !"golden_settings_gc_9_1_rv2", i1 false, i1 false}
!969 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 622, i32 38}
!970 = !{ptr @golden_settings_gc_9_1_rv1, !971, !"golden_settings_gc_9_1_rv1", i1 false, i1 false}
!971 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 611, i32 38}
!972 = !{ptr @golden_settings_gc_9_1_rn, !973, !"golden_settings_gc_9_1_rn", i1 false, i1 false}
!973 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 645, i32 38}
!974 = !{ptr @golden_settings_gc_9_x_common, !975, !"golden_settings_gc_9_x_common", i1 false, i1 false}
!975 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 661, i32 38}
!976 = !{ptr @.str.382, !977, !"<string literal>", i1 false, i1 false}
!977 = !{!"../drivers/gpu/drm/amd/amdgpu/../amdgpu/amdgpu_object.h", i32 179, i32 4}
!978 = !{ptr @.str.383, !977, !"<string literal>", i1 false, i1 false}
!979 = !{ptr @.str.384, !977, !"<string literal>", i1 false, i1 false}
!980 = !{ptr @amdgpu_bo_reserve._entry, !977, !"_entry", i1 false, i1 false}
!981 = !{ptr @amdgpu_bo_reserve._entry_ptr, !977, !"_entry_ptr", i1 false, i1 false}
!982 = distinct !{null, !983, !"<string literal>", i1 false, i1 false}
!983 = !{!"../include/drm/ttm/ttm_bo_driver.h", i32 140, i32 7}
!984 = !{ptr @.str.386, !985, !"<string literal>", i1 false, i1 false}
!985 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 3340, i32 3}
!986 = !{ptr @.str.387, !987, !"<string literal>", i1 false, i1 false}
!987 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4126, i32 3}
!988 = !{ptr @.str.388, !987, !"<string literal>", i1 false, i1 false}
!989 = !{ptr @.str.389, !987, !"<string literal>", i1 false, i1 false}
!990 = !{ptr @gfx_v9_0_hw_fini.__UNIQUE_ID_ddebug397, !987, !"__UNIQUE_ID_ddebug397", i1 false, i1 false}
!991 = !{ptr @.str.390, !992, !"<string literal>", i1 false, i1 false}
!992 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 3819, i32 4}
!993 = !{ptr @.str.391, !994, !"<string literal>", i1 false, i1 false}
!994 = !{!"../drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c", i32 4214, i32 4}
!995 = !{ptr @.str.392, !994, !"<string literal>", i1 false, i1 false}
!996 = !{ptr @gfx_v9_0_soft_reset._entry, !994, !"_entry", i1 false, i1 false}
!997 = !{ptr @gfx_v9_0_soft_reset._entry_ptr, !994, !"_entry_ptr", i1 false, i1 false}
!998 = !{!"sp"}
!999 = !{i32 1, !"wchar_size", i32 2}
!1000 = !{i32 1, !"min_enum_size", i32 4}
!1001 = !{i32 8, !"branch-target-enforcement", i32 0}
!1002 = !{i32 8, !"sign-return-address", i32 0}
!1003 = !{i32 8, !"sign-return-address-all", i32 0}
!1004 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1005 = !{i32 7, !"uwtable", i32 1}
!1006 = !{i32 7, !"frame-pointer", i32 2}
!1007 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1008 = !{i8 0, i8 2}
!1009 = !{i64 2148527071}
!1010 = !{i64 2148441535, i64 2148441567, i64 2148441596, i64 2148441630, i64 2148441661, i64 2148441684}
!1011 = !{!"branch_weights", i32 2000, i32 1}
!1012 = !{i64 2149805789}
!1013 = !{!"branch_weights", i32 1, i32 4000, i32 1}
!1014 = !{i32 0, i32 33}
!1015 = !{i64 2149005205, i64 2149005210, i64 2149005223, i64 2149005267, i64 2149005301, i64 2149005322}
!1016 = !{i64 2164743046, i64 2164743549, i64 2164743083, i64 2164743139, i64 2164743173, i64 2164743197, i64 2164743238, i64 2164743259, i64 2164743287, i64 2164743321}
!1017 = !{i64 2164744655, i64 2164745158, i64 2164744692, i64 2164744748, i64 2164744782, i64 2164744806, i64 2164744847, i64 2164744868, i64 2164744896, i64 2164744930}
!1018 = !{i64 2164746309, i64 2164746812, i64 2164746346, i64 2164746402, i64 2164746436, i64 2164746460, i64 2164746501, i64 2164746522, i64 2164746550, i64 2164746584}
!1019 = !{!"auto-init"}
!1020 = !{!"branch_weights", i32 4001, i32 1}
!1021 = !{i64 2164359796, i64 2164360299, i64 2164359833, i64 2164359889, i64 2164359923, i64 2164359947, i64 2164359988, i64 2164360009, i64 2164360037, i64 2164360071}
!1022 = !{!"branch_weights", i32 1, i32 2000}
!1023 = !{i64 2164735499, i64 2164736002, i64 2164735536, i64 2164735592, i64 2164735626, i64 2164735650, i64 2164735691, i64 2164735712, i64 2164735740, i64 2164735774}
!1024 = !{i64 2164739501, i64 2164740004, i64 2164739538, i64 2164739594, i64 2164739628, i64 2164739652, i64 2164739693, i64 2164739714, i64 2164739742, i64 2164739776}
!1025 = !{i64 2164741134, i64 2164741637, i64 2164741171, i64 2164741227, i64 2164741261, i64 2164741285, i64 2164741326, i64 2164741347, i64 2164741375, i64 2164741409}
!1026 = !{i64 2164750392, i64 2164750895, i64 2164750429, i64 2164750485, i64 2164750519, i64 2164750543, i64 2164750584, i64 2164750605, i64 2164750633, i64 2164750667}
!1027 = !{i64 2164752069, i64 2164756633, i64 2164752106, i64 2164752162, i64 2164752196, i64 2164752220, i64 2164752261, i64 2164752282, i64 2164752310, i64 2164752344}
!1028 = !{i64 2164737489, i64 2164737992, i64 2164737526, i64 2164737582, i64 2164737616, i64 2164737640, i64 2164737681, i64 2164737702, i64 2164737730, i64 2164737764}
!1029 = distinct !{!1029, !1030}
!1030 = !{!"llvm.loop.peeled.count", i32 4}
!1031 = !{i64 2164483774, i64 2164484277, i64 2164483811, i64 2164483867, i64 2164483901, i64 2164483925, i64 2164483966, i64 2164483987, i64 2164484015, i64 2164484049}
!1032 = !{i64 2164490930, i64 2164491433, i64 2164490967, i64 2164491023, i64 2164491057, i64 2164491081, i64 2164491122, i64 2164491143, i64 2164491171, i64 2164491205}
!1033 = !{i64 2164337499}
!1034 = !{i64 5239263}
!1035 = !{i64 2164337870}
!1036 = !{i64 2164338273}
!1037 = !{i64 2164338676}
!1038 = !{i64 2164339059}
!1039 = !{i64 2164339463}
!1040 = !{i64 5239681}
!1041 = !{i64 2164340090}
!1042 = !{i64 2164350447}
!1043 = !{i64 2164390439, i64 2164390942, i64 2164390476, i64 2164390532, i64 2164390566, i64 2164390590, i64 2164390631, i64 2164390652, i64 2164390680, i64 2164390714}
!1044 = !{i64 2164435425, i64 2164435928, i64 2164435462, i64 2164435518, i64 2164435552, i64 2164435576, i64 2164435617, i64 2164435638, i64 2164435666, i64 2164435700}
!1045 = !{i64 2164670607}
!1046 = !{i64 2164673404}
!1047 = !{i64 2164664896, i64 2164665399, i64 2164664933, i64 2164664989, i64 2164665023, i64 2164665047, i64 2164665088, i64 2164665109, i64 2164665137, i64 2164665171}
!1048 = !{i64 2164668756}
