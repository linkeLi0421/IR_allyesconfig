; ModuleID = '/llk/IR_all_yes/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c_pt.bc'
source_filename = "../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.amd_ip_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_ip_block_version = type { i32, i32, i32, i32, ptr }
%struct.amd_pm_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.amdgpu_irq_src_funcs = type { ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.si_cac_config_reg = type { i32, i32, i32, i32, i32 }
%struct.si_powertune_data = type { i32, i32, i8, i8, i8, %struct.ni_leakage_coeffients, i32, i32, [8 x i8], i8 }
%struct.ni_leakage_coeffients = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.si_dte_data = type { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], [16 x i32], i32, i8 }
%struct.amdgpu_device = type { ptr, ptr, %struct.drm_device, %struct.amdgpu_acp, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, i8, i8, i8, %struct.notifier_block, [16 x ptr], %struct.debugfs_blob_wrapper, %struct.debugfs_blob_wrapper, %struct.mutex, %struct.mutex, %struct.dev_pm_domain, i8, i8, i8, ptr, i32, i32, [16 x i32], i32, i32, ptr, %struct.spinlock, %struct.amdgpu_mmio_remap, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.spinlock, ptr, ptr, %struct.amdgpu_doorbell, %struct.amdgpu_clock, %struct.amdgpu_gmc, %struct.amdgpu_gart, i32, %struct.amdgpu_vm_manager, [3 x %struct.amdgpu_vmhub], i32, %struct.amdgpu_mman, %struct.amdgpu_vram_scratch, %struct.amdgpu_wb, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.anon.97, i8, ptr, %struct.amdgpu_mode_info, %struct.work_struct, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i64, i32, [28 x ptr], i8, [3 x %struct.amdgpu_sa_manager], [9 x [3 x %struct.amdgpu_sched]], %struct.amdgpu_irq, %struct.amd_powerplay, i8, %struct.smu_context, %struct.amdgpu_pm, i32, i32, %struct.amdgpu_nbio, %struct.amdgpu_hdp, %struct.amdgpu_smuio, %struct.amdgpu_mmhub, %struct.amdgpu_gfxhub, %struct.amdgpu_gfx, %struct.amdgpu_sdma, %struct.amdgpu_uvd, %struct.amdgpu_vce, %struct.amdgpu_vcn, %struct.amdgpu_jpeg, %struct.amdgpu_firmware, %struct.psp_context, %struct.amdgpu_gds, %struct.amdgpu_kfd_dev, %struct.amdgpu_umc, %struct.amdgpu_display_manager, i8, %struct.amdgpu_mes, %struct.amdgpu_df, %struct.amdgpu_mca, [16 x %struct.amdgpu_ip_block], i32, i32, %struct.mutex, [128 x %struct.hlist_head], %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, [31 x [10 x ptr]], %struct.delayed_work, %struct.amdgpu_virt, %struct.list_head, %struct.mutex, i8, [64 x i8], i8, i8, i8, i8, %struct.atomic_t, i32, %struct.rw_semaphore, %struct.amdgpu_doorbell_index, %struct.mutex, i32, %struct.work_struct, %struct.list_head, i32, i32, i32, i32, i64, [4 x i64], i8, i8, i8, i8, i8, i8, [16 x i8], [64 x i8], [20 x i8], %struct.atomic_t, %struct.ratelimit_state, i32, i32, i8, ptr, i32, ptr, [31 x [10 x i32]], i8 }
%struct.drm_device = type { i32, %struct.kref, ptr, %struct.anon.79, ptr, ptr, ptr, ptr, i8, ptr, i32, i8, ptr, ptr, %struct.mutex, %struct.mutex, %struct.atomic_t, %struct.mutex, %struct.list_head, %struct.list_head, %struct.mutex, %struct.list_head, i8, ptr, %struct.spinlock, %struct.spinlock, i32, %struct.list_head, %struct.spinlock, i32, %struct.drm_mode_config, %struct.mutex, %struct.idr, ptr, ptr, i32, ptr, %struct.list_head, ptr, %struct.list_head, %struct.mutex, %struct.idr, %struct.list_head, %struct.drm_open_hash, %struct.list_head, ptr, i32, i32, %struct.spinlock, i32, %struct.atomic_t, %struct.anon.89, ptr, i32, ptr, i8, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.anon.79 = type { %struct.list_head, ptr, %struct.spinlock }
%struct.drm_mode_config = type { %struct.mutex, %struct.drm_modeset_lock, ptr, %struct.mutex, %struct.idr, %struct.idr, %struct.mutex, i32, %struct.list_head, %struct.spinlock, i32, %struct.ida, %struct.list_head, %struct.llist_head, %struct.work_struct, i32, %struct.list_head, i32, %struct.list_head, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, ptr, i32, i8, i8, i8, %struct.delayed_work, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, ptr, i32, i32, ptr, ptr }
%struct.drm_modeset_lock = type { %struct.ww_mutex, %struct.list_head }
%struct.ww_mutex = type { %struct.mutex, ptr, ptr }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.llist_head = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.drm_open_hash = type { ptr, i8 }
%struct.anon.89 = type { i32, ptr }
%struct.amdgpu_acp = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.debugfs_blob_wrapper = type { ptr, i32 }
%struct.dev_pm_domain = type { %struct.dev_pm_ops, ptr, ptr, ptr, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.amdgpu_mmio_remap = type { i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.amdgpu_doorbell = type { i32, i32, ptr, i32 }
%struct.amdgpu_clock = type { [3 x %struct.amdgpu_pll], %struct.amdgpu_pll, %struct.amdgpu_pll, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_pll = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_gmc = type { i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i64, i32, i64, ptr, i32, %struct.amdgpu_irq_src, i32, i8, i32, i8, i32, i64, i64, i64, i64, %struct.spinlock, i8, ptr, %struct.atomic_t, [256 x %struct.amdgpu_gmc_fault], [256 x %struct.anon.96], i8, i8, ptr, %struct.amdgpu_xgmi, %struct.amdgpu_irq_src, i32, i32, i32, ptr, ptr }
%struct.amdgpu_gmc_fault = type { i56, %struct.atomic64_t }
%struct.anon.96 = type { i8, [7 x i8] }
%struct.amdgpu_xgmi = type { i64, i64, i64, i32, i32, %struct.list_head, i8, ptr, i8, i8, ptr }
%struct.amdgpu_gart = type { ptr, ptr, i32, i32, i32, i8, i64 }
%struct.amdgpu_vm_manager = type { [3 x %struct.amdgpu_vmid_mgr], i32, i8, i64, [28 x i32], i64, i32, i32, i32, i32, i64, ptr, [28 x ptr], i32, ptr, %struct.spinlock, %struct.atomic_t, i32, %struct.xarray }
%struct.amdgpu_vmid_mgr = type { %struct.mutex, i32, %struct.list_head, [16 x %struct.amdgpu_vmid], %struct.atomic_t }
%struct.amdgpu_vmid = type { %struct.list_head, %struct.amdgpu_sync, ptr, i64, i64, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_sync = type { [16 x %struct.hlist_head], ptr }
%struct.hlist_head = type { ptr }
%struct.amdgpu_vmhub = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.amdgpu_mman = type { %struct.ttm_device, i8, ptr, ptr, ptr, i8, %struct.mutex, %struct.drm_sched_entity, %struct.amdgpu_vram_mgr, %struct.amdgpu_gtt_mgr, %struct.amdgpu_preempt_mgr, i64, ptr, i64, ptr, i8, ptr, i64, i64, ptr, i32, ptr, i64, i64, ptr, ptr }
%struct.ttm_device = type { %struct.list_head, ptr, %struct.ttm_resource_manager, [8 x ptr], ptr, %struct.ttm_pool, %struct.spinlock, %struct.list_head, %struct.list_head, ptr, %struct.delayed_work }
%struct.ttm_resource_manager = type { i8, i8, i64, ptr, %struct.spinlock, [4 x %struct.list_head], ptr }
%struct.ttm_pool = type { ptr, i8, i8, [3 x %struct.anon.93] }
%struct.anon.93 = type { [12 x %struct.ttm_pool_type] }
%struct.ttm_pool_type = type { ptr, i32, i32, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.drm_sched_entity = type { %struct.list_head, ptr, ptr, i32, i32, %struct.spinlock, %struct.spsc_queue, %struct.atomic_t, i64, ptr, %struct.dma_fence_cb, ptr, ptr, ptr, i8, %struct.completion }
%struct.spsc_queue = type { ptr, %struct.atomic_t, %struct.atomic_t }
%struct.dma_fence_cb = type { %struct.list_head, ptr }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.amdgpu_vram_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.atomic64_t, %struct.atomic64_t }
%struct.drm_mm = type { ptr, %struct.list_head, %struct.drm_mm_node, %struct.rb_root_cached, %struct.rb_root_cached, %struct.rb_root, i32 }
%struct.drm_mm_node = type { i32, i64, i64, ptr, %struct.list_head, %struct.list_head, %struct.rb_node, %struct.rb_node, %struct.rb_node, i64, i64, i64, i32, i32 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.amdgpu_gtt_mgr = type { %struct.ttm_resource_manager, %struct.drm_mm, %struct.spinlock, %struct.atomic64_t }
%struct.amdgpu_preempt_mgr = type { %struct.ttm_resource_manager, %struct.atomic64_t }
%struct.amdgpu_vram_scratch = type { ptr, ptr, i64 }
%struct.amdgpu_wb = type { ptr, ptr, i64, i32, [8 x i32] }
%struct.anon.97 = type { %struct.spinlock, i64, i64, i64, i32 }
%struct.amdgpu_mode_info = type { ptr, ptr, i8, [6 x ptr], [6 x ptr], [9 x ptr], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i8, %struct.amdgpu_audio, i32, i32, i32, i32, ptr, ptr }
%struct.amdgpu_audio = type { i8, [9 x %struct.amdgpu_audio_pin], i32 }
%struct.amdgpu_audio_pin = type { i32, i32, i32, i8, i8, i32, i8, i32 }
%struct.amdgpu_irq_src = type { i32, ptr, ptr }
%struct.amdgpu_sa_manager = type { %struct.wait_queue_head, ptr, ptr, [32 x %struct.list_head], %struct.list_head, i32, i64, ptr, i32, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.amdgpu_sched = type { i32, [8 x ptr] }
%struct.amdgpu_irq = type { i8, i32, %struct.spinlock, [32 x %struct.amdgpu_irq_client], i8, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, %struct.amdgpu_ih_ring, ptr, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.amdgpu_irq_src, ptr, [256 x i32], i32 }
%struct.amdgpu_irq_client = type { ptr }
%struct.amdgpu_ih_ring = type { i32, i32, i32, i8, i8, ptr, ptr, i64, i64, ptr, i64, ptr, i8, i32, %struct.amdgpu_ih_regs, %struct.wait_queue_head, i64 }
%struct.amdgpu_ih_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amd_powerplay = type { ptr, ptr }
%struct.smu_context = type { ptr, %struct.amdgpu_irq_src, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, i64, %struct.smu_table_context, %struct.smu_dpm_context, %struct.smu_power_context, %struct.smu_feature, ptr, %struct.smu_baco_context, %struct.smu_temperature_range, ptr, %struct.smu_umd_pstate_table, i32, i32, i8, i32, i32, i32, i32, i32, ptr, i8, i8, i32, i32, i8, i32, [7 x i32], [7 x i32], i32, i32, i8, i8, i32, i32, i32, i8, i8, %struct.work_struct, %struct.atomic64_t, %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, %struct.smu_user_dpm_profile, %struct.stb_context }
%struct.smu_table_context = type { ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, %struct.smu_bios_boot_up_values, ptr, ptr, [15 x %struct.smu_table], %struct.smu_table, %struct.smu_table, %struct.smu_table, i8, ptr, ptr, ptr, i32, ptr }
%struct.smu_bios_boot_up_values = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i32, i32, i32, i32, i32, i32 }
%struct.smu_table = type { i64, i32, i8, i64, ptr, ptr }
%struct.smu_dpm_context = type { i32, ptr, ptr, i8, i32, i32, i32, ptr, ptr, ptr }
%struct.smu_power_context = type { ptr, i32, %struct.smu_power_gate }
%struct.smu_power_gate = type { i8, i8, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.mutex }
%struct.smu_feature = type { i32, [2 x i32], [2 x i32], [2 x i32], %struct.mutex }
%struct.smu_baco_context = type { %struct.mutex, i32, i8 }
%struct.smu_temperature_range = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.smu_umd_pstate_table = type { %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq, %struct.pstates_clk_freq }
%struct.pstates_clk_freq = type { i32, i32, i32, %struct.smu_freq_info, %struct.smu_freq_info }
%struct.smu_freq_info = type { i32, i32, i32 }
%struct.smu_user_dpm_profile = type { i32, i32, i32, i32, i32, i32, [23 x i32], i32 }
%struct.stb_context = type { i32, i8, %struct.spinlock }
%struct.amdgpu_pm = type { %struct.mutex, i32, i32, i32, i32, ptr, i8, i32, ptr, i8, i8, i8, i8, i8, i8, %struct.amdgpu_dpm, ptr, i32, i32, i32, %struct.amd_pp_display_configuration, i32, ptr, i8, i32, %struct.i2c_adapter, %struct.mutex, %struct.list_head, [14 x %struct.atomic_t], i32 }
%struct.amdgpu_dpm = type { ptr, i32, ptr, ptr, ptr, ptr, i32, [6 x %struct.amd_vce_state], i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, %struct.amdgpu_dpm_dynamic_state, %struct.amdgpu_dpm_fan, i32, i32, i32, i32, i32, i16, i32, i16, i8, i8, i8, i8, %struct.amdgpu_dpm_thermal, i32 }
%struct.amd_vce_state = type { i32, i32, i32, i32, i8, i8 }
%struct.amdgpu_dpm_dynamic_state = type { %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_uvd_clock_voltage_dependency_table, %struct.amdgpu_vce_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_voltage_dependency_table, %struct.amdgpu_clock_array, %struct.amdgpu_clock_array, %struct.amdgpu_clock_and_voltage_limits, %struct.amdgpu_clock_and_voltage_limits, i32, i32, i16, i16, %struct.amdgpu_cac_leakage_table, %struct.amdgpu_phase_shedding_limits_table, ptr, ptr }
%struct.amdgpu_uvd_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_vce_clock_voltage_dependency_table = type { i8, ptr }
%struct.amdgpu_clock_voltage_dependency_table = type { i32, ptr }
%struct.amdgpu_clock_array = type { i32, ptr }
%struct.amdgpu_clock_and_voltage_limits = type { i32, i32, i16, i16 }
%struct.amdgpu_cac_leakage_table = type { i32, ptr }
%struct.amdgpu_phase_shedding_limits_table = type { i32, ptr }
%struct.amdgpu_dpm_fan = type { i16, i16, i16, i16, i16, i16, i8, i32, i16, i8, i16, i16, i16, i8 }
%struct.amdgpu_dpm_thermal = type { %struct.work_struct, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.amdgpu_irq_src }
%struct.amd_pp_display_configuration = type { i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.single_display_configuration], i32, i32, i8, i32, i32, i8, i32, i32, i32, i32 }
%struct.single_display_configuration = type { i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32 }
%struct.i2c_adapter = type { ptr, i32, ptr, ptr, ptr, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i32, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, ptr, ptr, ptr, ptr }
%struct.rt_mutex = type { %struct.rt_mutex_base, %struct.lockdep_map }
%struct.rt_mutex_base = type { %struct.raw_spinlock, %struct.rb_root_cached, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.amdgpu_nbio = type { ptr, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, ptr, ptr, ptr }
%struct.amdgpu_hdp = type { ptr, ptr, ptr }
%struct.amdgpu_smuio = type { ptr }
%struct.amdgpu_mmhub = type { ptr, ptr, ptr }
%struct.amdgpu_gfxhub = type { ptr }
%struct.amdgpu_gfx = type { %struct.mutex, %struct.amdgpu_gfx_config, %struct.amdgpu_rlc, %struct.amdgpu_pfp, %struct.amdgpu_ce, %struct.amdgpu_me, %struct.amdgpu_mec, %struct.amdgpu_kiq, %struct.amdgpu_scratch, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_ring], i32, [8 x %struct.amdgpu_ring], i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.sq_work, i32, i32, %struct.amdgpu_cu_info, ptr, i32, i32, i8, %struct.mutex, i32, %struct.delayed_work, %struct.mutex, [4 x i32], ptr, ptr }
%struct.amdgpu_gfx_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x i32], [16 x i32], %struct.gb_addr_config, [4 x [2 x %struct.amdgpu_rb_config]], i32, i32, i32, i32, i32, i64 }
%struct.gb_addr_config = type { i16, i8, i8, i8, i8, i8, i8 }
%struct.amdgpu_rb_config = type { i32, i32, i32, i32 }
%struct.amdgpu_rlc = type { ptr, i64, ptr, ptr, i32, ptr, i64, ptr, ptr, i32, ptr, i64, ptr, i32, i8, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, ptr, i64, ptr, ptr, i64, ptr }
%struct.amdgpu_pfp = type { ptr, i64, ptr }
%struct.amdgpu_ce = type { ptr, i64, ptr }
%struct.amdgpu_me = type { ptr, i64, ptr, i32, i32, i32, [2 x ptr], [4 x i32] }
%struct.amdgpu_mec = type { ptr, i64, ptr, i64, i32, i32, i32, [9 x ptr], [4 x i32] }
%struct.amdgpu_kiq = type { i64, ptr, %struct.spinlock, %struct.amdgpu_ring, %struct.amdgpu_irq_src, ptr }
%struct.amdgpu_ring = type { ptr, ptr, %struct.amdgpu_fence_driver, %struct.drm_gpu_scheduler, ptr, ptr, i32, i64, i64, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, ptr, i64, ptr, i64, i32, i8, i8, i32, i32, i64, [16 x i8], i32, i32, i64, ptr, i32, i64, ptr, i32, ptr, i8, i8, i32 }
%struct.amdgpu_fence_driver = type { i64, ptr, i32, %struct.atomic_t, i8, ptr, i32, %struct.timer_list, i32, %struct.spinlock, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.drm_gpu_scheduler = type { ptr, i32, i32, ptr, [4 x %struct.drm_sched_rq], %struct.wait_queue_head, %struct.wait_queue_head, %struct.atomic_t, %struct.atomic64_t, ptr, %struct.delayed_work, ptr, %struct.list_head, %struct.spinlock, i32, ptr, %struct.atomic_t, i8, i8 }
%struct.drm_sched_rq = type { %struct.spinlock, ptr, %struct.list_head, ptr }
%struct.amdgpu_scratch = type { i32, i32, i32 }
%struct.sq_work = type { %struct.work_struct, i32 }
%struct.amdgpu_cu_info = type { i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i32]], [4 x [4 x i32]] }
%struct.amdgpu_sdma = type { [8 x %struct.amdgpu_sdma_instance], %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, i32, i32, i8, ptr, ptr }
%struct.amdgpu_sdma_instance = type { ptr, i32, i32, %struct.amdgpu_ring, %struct.amdgpu_ring, i8 }
%struct.amdgpu_uvd = type { ptr, i32, i32, i32, i8, i8, i8, [2 x %struct.amdgpu_uvd_inst], [40 x ptr], [40 x %struct.atomic_t], %struct.drm_sched_entity, %struct.delayed_work, i32, i32, i32, ptr }
%struct.amdgpu_uvd_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [2 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32 }
%struct.amdgpu_vce = type { ptr, i64, ptr, ptr, i32, i32, [16 x %struct.atomic_t], [16 x ptr], [16 x i32], %struct.delayed_work, %struct.mutex, ptr, [3 x %struct.amdgpu_ring], %struct.amdgpu_irq_src, i32, %struct.drm_sched_entity, i32, i32 }
%struct.amdgpu_vcn = type { i32, %struct.delayed_work, ptr, i32, i32, i8, i8, [2 x %struct.amdgpu_vcn_inst], [2 x i8], %struct.amdgpu_vcn_reg, %struct.mutex, %struct.mutex, %struct.atomic_t, i32, ptr }
%struct.amdgpu_vcn_inst = type { ptr, ptr, i64, ptr, %struct.amdgpu_ring, [3 x %struct.amdgpu_ring], %struct.atomic_t, %struct.amdgpu_irq_src, %struct.amdgpu_vcn_reg, ptr, %struct.dpg_pause_state, ptr, i64, ptr, %struct.atomic_t, ptr, i64 }
%struct.dpg_pause_state = type { i32, i32 }
%struct.amdgpu_vcn_reg = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_jpeg = type { i8, [2 x %struct.amdgpu_jpeg_inst], %struct.amdgpu_jpeg_reg, i32, %struct.delayed_work, i32, %struct.mutex, %struct.atomic_t }
%struct.amdgpu_jpeg_inst = type { %struct.amdgpu_ring, %struct.amdgpu_irq_src, %struct.amdgpu_jpeg_reg }
%struct.amdgpu_jpeg_reg = type { i32 }
%struct.amdgpu_firmware = type { [35 x %struct.amdgpu_firmware_info], i32, ptr, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i64 }
%struct.amdgpu_firmware_info = type { i32, ptr, i64, ptr, i32, i32, i32 }
%struct.psp_context = type { ptr, %struct.psp_ring, ptr, ptr, ptr, i64, ptr, ptr, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, %struct.psp_bin_desc, ptr, i64, ptr, ptr, ptr, i64, ptr, ptr, i64, ptr, %struct.atomic_t, i8, i8, ptr, i32, %struct.ta_context, %struct.psp_xgmi_context, %struct.psp_ras_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.ta_cp_context, %struct.mutex, %struct.psp_memory_training_context, i32 }
%struct.psp_ring = type { i32, ptr, i64, ptr, i32, i32 }
%struct.psp_bin_desc = type { i32, i32, i32, ptr }
%struct.ta_context = type { i8, i32, %struct.ta_mem_context, %struct.psp_bin_desc, i32 }
%struct.ta_mem_context = type { ptr, i64, ptr, i32 }
%struct.psp_xgmi_context = type { %struct.ta_context, %struct.psp_xgmi_topology_info, i8 }
%struct.psp_xgmi_topology_info = type { i32, [64 x %struct.psp_xgmi_node_info] }
%struct.psp_xgmi_node_info = type { i64, i8, i8, i32, i8 }
%struct.psp_ras_context = type { %struct.ta_context, ptr }
%struct.ta_cp_context = type { %struct.ta_context, %struct.mutex }
%struct.psp_memory_training_context = type { i64, ptr, i64, i64, ptr, i32, i32, i8 }
%struct.amdgpu_gds = type { i32, i32, i32, i32 }
%struct.amdgpu_kfd_dev = type { ptr, i64, i8 }
%struct.amdgpu_umc = type { i32, i32, i32, i32, ptr, ptr, ptr, ptr }
%struct.amdgpu_display_manager = type { ptr, ptr, ptr, [5 x ptr], [5 x i8], ptr, ptr, ptr, i64, ptr, i32, ptr, ptr, ptr, i16, %struct.drm_private_obj, %struct.mutex, %struct.mutex, ptr, i8, [99 x %struct.list_head], [99 x %struct.list_head], [7 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [6 x %struct.common_irq_params], [1 x %struct.common_irq_params], [1 x %struct.common_irq_params], %struct.spinlock, [2 x ptr], [2 x ptr], i8, [2 x %struct.amdgpu_dm_backlight_caps], ptr, ptr, ptr, ptr, %struct.dm_compressor_info, ptr, i32, ptr, ptr, [6 x %struct.amdgpu_encoder], i8, i8, i8, %struct.list_head, %struct.completion, ptr, [2 x i32] }
%struct.drm_private_obj = type { %struct.list_head, %struct.drm_modeset_lock, ptr, ptr }
%struct.common_irq_params = type { ptr, i32, %struct.atomic64_t }
%struct.amdgpu_dm_backlight_caps = type { ptr, i32, i32, i32, i32, i8, i8 }
%struct.dm_compressor_info = type { ptr, ptr, i64 }
%struct.amdgpu_encoder = type { %struct.drm_encoder, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.drm_display_mode, ptr, i32, i8, i16 }
%struct.drm_encoder = type { ptr, %struct.list_head, %struct.drm_mode_object, ptr, i32, i32, i32, i32, ptr, %struct.list_head, ptr, ptr }
%struct.drm_mode_object = type { i32, i32, ptr, %struct.kref, ptr }
%struct.drm_display_mode = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %struct.list_head, [32 x i8], i32, i32 }
%struct.amdgpu_mes = type { ptr, i32, i32, i32, i64, i64, %struct.amdgpu_ring, ptr, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i64, ptr, i64, ptr, i32, i32, [8 x i32], [2 x i32], [2 x i32], [5 x i32], i32, i64, ptr, i32, i64, ptr, ptr }
%struct.amdgpu_df = type { %struct.amdgpu_df_hash_status, ptr }
%struct.amdgpu_df_hash_status = type { i8, i8, i8 }
%struct.amdgpu_mca = type { ptr, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras, %struct.amdgpu_mca_ras }
%struct.amdgpu_mca_ras = type { ptr, ptr }
%struct.amdgpu_ip_block = type { %struct.amdgpu_ip_block_status, ptr }
%struct.amdgpu_ip_block_status = type { i8, i8, i8, i8, i8 }
%struct.atomic64_t = type { i64 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.amdgpu_virt = type { i32, ptr, ptr, i8, i32, %struct.amdgpu_irq_src, %struct.amdgpu_irq_src, %struct.work_struct, %struct.amdgpu_mm_table, ptr, %struct.amdgpu_vf_error_buffer, %struct.amdgpu_virt_fw_reserve, i32, i32, i32, i8, ptr, i8, i32, %struct.delayed_work, i32, i8, i32, i32, i32, i32 }
%struct.amdgpu_mm_table = type { ptr, ptr, i64 }
%struct.amdgpu_vf_error_buffer = type { %struct.mutex, i32, i32, [16 x i16], [16 x i16], [16 x i64] }
%struct.amdgpu_virt_fw_reserve = type { ptr, ptr, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.amdgpu_doorbell_index = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, %union.anon.108, i32, i32, i32, i32 }
%union.anon.108 = type { %struct.anon.110 }
%struct.anon.110 = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.list_head = type { ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_atom_ss = type { i16, i16, i8, i16, i8, i8, i8, i16, i16 }
%struct.atom_clock_dividers = type { i32, %union.anon.114, i32, i8, i8, i32, i32, i32, i32 }
%union.anon.114 = type { %struct.anon.115 }
%struct.anon.115 = type { i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.78, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.78 = type { ptr }
%struct.si_power_info = type { %struct.ni_power_info, %struct.si_clock_registers, %struct.si_mc_reg_table, %struct.atom_voltage_table, %struct.atom_voltage_table, %struct.si_leakage_voltage, i16, %struct.si_ulv_param, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, %struct.si_dyn_powertune_data, %struct.si_dte_data, %struct.SMC_SIslands_MCRegisters, %struct.SISLANDS_SMC_STATETABLE, %struct.PP_SIslands_PAPMParameters, i8, i8, i8, i32, i32, i8 }
%struct.ni_power_info = type { %struct.evergreen_power_info, %struct.ni_clock_registers, %struct.ni_mc_reg_table, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, %struct.ni_cac_data, [8 x i32], ptr, i8, i8, %struct.si_ps, %struct.si_ps, %struct.SMC_NIslands_MCRegisters, %struct.NISLANDS_SMC_STATETABLE }
%struct.evergreen_power_info = type { %struct.rv7xx_power_info, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i32, %struct.evergreen_mc_reg_table, %struct.atom_voltage_table, %struct.atom_voltage_table, %struct.evergreen_arb_registers, %struct.evergreen_ulv_param, [2 x %struct.at], i16, %struct.amdgpu_ps, %struct.rv7xx_ps, %struct.amdgpu_ps, %struct.rv7xx_ps }
%struct.rv7xx_power_info = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %union.r7xx_clock_registers, i32, i32, i32, i32, [2 x i32], i16, i16, i16, [32 x %struct.vddc_table_entry], i8, i32, [2 x i8], [2 x i8], i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, %struct.RV770_SMC_STATETABLE }
%union.r7xx_clock_registers = type { %struct.rv770_clock_registers }
%struct.rv770_clock_registers = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vddc_table_entry = type { i16, i8, i8, i32 }
%struct.RV770_SMC_STATETABLE = type { i8, i8, i8, i8, [32 x i8], [32 x i32], %struct.RV770_SMC_VOLTAGEMASKTABLE, %struct.RV770_SMC_SWSTATE, %struct.RV770_SMC_SWSTATE, %struct.RV770_SMC_SWSTATE, %struct.RV770_SMC_SWSTATE }
%struct.RV770_SMC_VOLTAGEMASKTABLE = type { [4 x i8], [4 x i32] }
%struct.RV770_SMC_SWSTATE = type { i8, i8, i8, i8, [3 x %struct.RV770_SMC_HW_PERFORMANCE_LEVEL] }
%struct.RV770_SMC_HW_PERFORMANCE_LEVEL = type { i8, %union.anon.113, i8, i8, i8, i8, i8, i8, i32, i32, %struct.RV770_SMC_SCLK_VALUE, %union.RV7XX_SMC_MCLK_VALUE, %struct.RV770_SMC_VOLTAGE_VALUE, %struct.RV770_SMC_VOLTAGE_VALUE, %struct.RV770_SMC_VOLTAGE_VALUE, i8, i8, i8, i8 }
%union.anon.113 = type { i8 }
%struct.RV770_SMC_SCLK_VALUE = type { i32, i32, i32, i32, i32, i32 }
%union.RV7XX_SMC_MCLK_VALUE = type { %struct.RV770_SMC_MCLK_VALUE }
%struct.RV770_SMC_MCLK_VALUE = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RV770_SMC_VOLTAGE_VALUE = type { i16, i8, i8 }
%struct.evergreen_mc_reg_table = type { i8, i8, i16, [16 x %struct.evergreen_mc_reg_entry], [16 x %struct.SMC_Evergreen_MCRegisterAddress] }
%struct.evergreen_mc_reg_entry = type { i32, [16 x i32] }
%struct.SMC_Evergreen_MCRegisterAddress = type { i16, i16 }
%struct.evergreen_arb_registers = type { i32, i32, i32, i32 }
%struct.evergreen_ulv_param = type { i8, ptr }
%struct.at = type { i32, i32, i32, i32 }
%struct.amdgpu_ps = type { i32, i32, i32, i32, i32, i32, i32, i8, i32, ptr }
%struct.rv7xx_ps = type { %struct.rv7xx_pl, %struct.rv7xx_pl, %struct.rv7xx_pl, i8 }
%struct.rv7xx_pl = type { i32, i32, i16, i16, i32, i32 }
%struct.ni_clock_registers = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ni_mc_reg_table = type { i8, i8, i16, [16 x %struct.ni_mc_reg_entry], [32 x %struct.SMC_NIslands_MCRegisterAddress] }
%struct.ni_mc_reg_entry = type { i32, [32 x i32] }
%struct.SMC_NIslands_MCRegisterAddress = type { i16, i16 }
%struct.ni_cac_data = type { %struct.ni_leakage_coeffients, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8 }
%struct.si_ps = type { i16, i8, [16 x %struct.rv7xx_pl] }
%struct.SMC_NIslands_MCRegisters = type { i8, [3 x i8], [32 x %struct.SMC_NIslands_MCRegisterAddress], [20 x %struct.SMC_NIslands_MCRegisterSet] }
%struct.SMC_NIslands_MCRegisterSet = type { [32 x i32] }
%struct.NISLANDS_SMC_STATETABLE = type { i8, i8, i8, i8, [32 x i8], [32 x i32], %struct.NISLANDS_SMC_VOLTAGEMASKTABLE, %struct.PP_NIslands_DPM2Parameters, %struct.NISLANDS_SMC_SWSTATE, %struct.NISLANDS_SMC_SWSTATE, %struct.NISLANDS_SMC_SWSTATE, %struct.NISLANDS_SMC_SWSTATE, [15 x %struct.NISLANDS_SMC_HW_PERFORMANCE_LEVEL] }
%struct.NISLANDS_SMC_VOLTAGEMASKTABLE = type { [4 x i8], [4 x i32] }
%struct.PP_NIslands_DPM2Parameters = type { i32, i32, i32, i32 }
%struct.NISLANDS_SMC_SWSTATE = type { i8, i8, i8, i8, [0 x %struct.NISLANDS_SMC_HW_PERFORMANCE_LEVEL] }
%struct.NISLANDS_SMC_HW_PERFORMANCE_LEVEL = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.NISLANDS_SMC_SCLK_VALUE, %struct.NISLANDS_SMC_MCLK_VALUE, %struct.NISLANDS_SMC_VOLTAGE_VALUE, %struct.NISLANDS_SMC_VOLTAGE_VALUE, %struct.NISLANDS_SMC_VOLTAGE_VALUE, %struct.NISLANDS_SMC_VOLTAGE_VALUE, i32, i8, i8, i8, i8, i32, i32, [2 x i32], %struct.PP_NIslands_Dpm2PerfLevel }
%struct.NISLANDS_SMC_SCLK_VALUE = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.NISLANDS_SMC_MCLK_VALUE = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.NISLANDS_SMC_VOLTAGE_VALUE = type { i16, i8, i8 }
%struct.PP_NIslands_Dpm2PerfLevel = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }
%struct.si_clock_registers = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.si_mc_reg_table = type { i8, i8, i16, [16 x %struct.si_mc_reg_entry], [16 x %struct.SMC_NIslands_MCRegisterAddress] }
%struct.si_mc_reg_entry = type { i32, [16 x i32] }
%struct.atom_voltage_table = type { i32, i32, i32, [32 x %struct.atom_voltage_table_entry] }
%struct.atom_voltage_table_entry = type { i16, i32 }
%struct.si_leakage_voltage = type { i16, [4 x %struct.si_leakage_voltage_entry] }
%struct.si_leakage_voltage_entry = type { i16, i16 }
%struct.si_ulv_param = type { i8, i32, i32, i32, %struct.rv7xx_pl, i8 }
%struct.si_dyn_powertune_data = type { i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SMC_SIslands_MCRegisters = type { i8, [3 x i8], [16 x %struct.SMC_SIslands_MCRegisterAddress], [20 x %struct.SMC_SIslands_MCRegisterSet] }
%struct.SMC_SIslands_MCRegisterAddress = type { i16, i16 }
%struct.SMC_SIslands_MCRegisterSet = type { [16 x i32] }
%struct.SISLANDS_SMC_STATETABLE = type { i8, i8, i8, i8, [32 x i32], %struct.SISLANDS_SMC_VOLTAGEMASKTABLE, %struct.SISLANDS_SMC_VOLTAGEMASKTABLE, %struct.PP_SIslands_DPM2Parameters, %struct.SISLANDS_SMC_SWSTATE_SINGLE, %struct.SISLANDS_SMC_SWSTATE_SINGLE, %struct.SISLANDS_SMC_SWSTATE_SINGLE, %struct.SISLANDS_SMC_SWSTATE, [16 x %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL] }
%struct.SISLANDS_SMC_VOLTAGEMASKTABLE = type { [4 x i32] }
%struct.PP_SIslands_DPM2Parameters = type { i32, i32, i32, i32, i32 }
%struct.SISLANDS_SMC_SWSTATE_SINGLE = type { i8, i8, i8, i8, %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL }
%struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.SISLANDS_SMC_SCLK_VALUE, %struct.SISLANDS_SMC_MCLK_VALUE, %struct.SISLANDS_SMC_VOLTAGE_VALUE, %struct.SISLANDS_SMC_VOLTAGE_VALUE, %struct.SISLANDS_SMC_VOLTAGE_VALUE, %struct.SISLANDS_SMC_VOLTAGE_VALUE, i8, i8, i8, i8, i32, i32, i32, %struct.SISLANDS_SMC_VOLTAGE_VALUE, %struct.SISLANDS_SMC_VOLTAGE_VALUE, [2 x i32], %struct.PP_SIslands_Dpm2PerfLevel }
%struct.SISLANDS_SMC_SCLK_VALUE = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.SISLANDS_SMC_MCLK_VALUE = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SISLANDS_SMC_VOLTAGE_VALUE = type { i16, i8, i8 }
%struct.PP_SIslands_Dpm2PerfLevel = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, [4 x i8] }
%struct.SISLANDS_SMC_SWSTATE = type { i8, i8, i8, i8, [0 x %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL] }
%struct.PP_SIslands_PAPMParameters = type { i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_clock_voltage_dependency_entry = type { i32, i16 }
%struct.atom_context = type { ptr, %struct.mutex, ptr, i32, i32, ptr, i16, i32, [2 x i32], i16, i16, i8, i32, i32, i32, ptr, i32, [20 x i8], [64 x i8], [64 x i8], i32, [32 x i8], [32 x i8] }
%struct._ATOM_PPLIB_POWERPLAYTABLE = type <{ %struct._ATOM_COMMON_TABLE_HEADER, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, i32, %struct._ATOM_PPLIB_THERMALCONTROLLER, i16, i16 }>
%struct._ATOM_COMMON_TABLE_HEADER = type { i16, i8, i8 }
%struct._ATOM_PPLIB_THERMALCONTROLLER = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct._StateArray = type { i8, [1 x %struct._ATOM_PPLIB_STATE_V2] }
%struct._ATOM_PPLIB_STATE_V2 = type { i8, i8, [1 x i8] }
%struct._NonClockInfoArray = type { i8, i8, [1 x %struct._ATOM_PPLIB_NONCLOCK_INFO] }
%struct._ATOM_PPLIB_NONCLOCK_INFO = type <{ i16, i8, i8, i32, i8, i16, i32, i32, [5 x i8] }>
%struct._ClockInfoArray = type { i8, i8, [1 x i8] }
%struct._ATOM_PPLIB_SI_CLOCK_INFO = type <{ i16, i8, i16, i8, i16, i16, i8, i8, i32 }>
%struct.amdgpu_vce_clock_voltage_dependency_entry = type { i32, i32, i16 }
%struct.amdgpu_asic_funcs = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%union.amdgpu_cac_leakage_entry = type { %struct.anon.103 }
%struct.anon.103 = type { i16, i32 }
%struct.amdgpu_crtc = type { %struct.drm_crtc, i32, i8, i8, i32, ptr, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %union.dfixed, %union.dfixed, %struct.drm_display_mode, i32, ptr, i32, i32, %struct.dm_irq_params, %struct.amdgpu_atom_ss, i8, i32, i32, i32, i32, i32, ptr, ptr, i32, i32, i32, i32, %struct.drm_display_mode, %struct.hrtimer, i32, i32, ptr }
%struct.drm_crtc = type { ptr, ptr, %struct.list_head, ptr, %struct.drm_modeset_lock, %struct.drm_mode_object, ptr, ptr, i32, i32, i32, i8, %struct.drm_display_mode, %struct.drm_display_mode, i32, i32, ptr, i32, ptr, ptr, %struct.drm_object_properties, ptr, ptr, %struct.list_head, %struct.spinlock, ptr, %struct.drm_crtc_crc, i32, %struct.spinlock, i32, [32 x i8], ptr }
%struct.drm_object_properties = type { i32, [24 x ptr], [24 x i64] }
%struct.drm_crtc_crc = type { %struct.spinlock, ptr, i8, i8, ptr, i32, i32, i32, %struct.wait_queue_head }
%union.dfixed = type { i32 }
%struct.dm_irq_params = type { i32, %struct.mod_vrr_params, ptr, i32, i8, %struct.mod_freesync_config, i32 }
%struct.mod_vrr_params = type { i8, i8, i32, i32, i32, i32, i32, i32, %struct.dc_crtc_timing_adjust, %struct.mod_vrr_params_fixed_refresh, %struct.mod_vrr_params_btr }
%struct.dc_crtc_timing_adjust = type { i32, i32, i32, i32 }
%struct.mod_vrr_params_fixed_refresh = type { i8, i8, i8, i32, i32 }
%struct.mod_vrr_params_btr = type { i8, i8, i32, i32, i32, i32, i32 }
%struct.mod_freesync_config = type { i32, i8, i8, i8, i32, i32, i32 }
%struct.atom_mpll_param = type { %union.anon.116, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.116 = type { %struct.anon.117 }
%struct.anon.117 = type { i32 }
%struct.amdgpu_phase_shedding_limits_entry = type { i16, i32, i32 }
%struct.SMC_SIslands_MCArbDramTimingRegisterSet = type { i32, i32, i8, i8, [2 x i8] }
%struct.amdgpu_ppm_table = type { i8, i16, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.amdgpu_iv_entry = type { ptr, i32, i32, i32, i32, i32, i64, i32, i32, i32, [4 x i32], ptr }
%struct.atom_mc_reg_table = type { i8, i8, [20 x %struct.atom_mc_reg_entry], [32 x %struct.atom_mc_register_address] }
%struct.atom_mc_reg_entry = type { i32, [32 x i32] }
%struct.atom_mc_register_address = type { i16, i8 }
%struct.SMC_SISLANDS_SPLL_DIV_TABLE = type { [256 x i32], [256 x i32] }
%struct.PP_SIslands_CacConfig = type { [16 x [32 x i16]], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32 }
%struct.Smc_SIslands_DTE_Configuration = type { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], [16 x i32], i32 }
%struct.PP_SIslands_FanTable = type { i8, i8, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i8, i8 }

@__UNIQUE_ID_firmware343 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/tahiti_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware344 = internal constant [40 x i8] c"amdgpu.firmware=amdgpu/pitcairn_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware345 = internal constant [42 x i8] c"amdgpu.firmware=amdgpu/pitcairn_k_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware346 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/verde_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware347 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/verde_k_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware348 = internal constant [37 x i8] c"amdgpu.firmware=amdgpu/oland_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware349 = internal constant [39 x i8] c"amdgpu.firmware=amdgpu/oland_k_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware350 = internal constant [38 x i8] c"amdgpu.firmware=amdgpu/hainan_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware351 = internal constant [40 x i8] c"amdgpu.firmware=amdgpu/hainan_k_smc.bin\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware352 = internal constant [41 x i8] c"amdgpu.firmware=amdgpu/banks_k_2_smc.bin\00", section ".modinfo", align 1
@si_dpm_ip_funcs = internal constant { %struct.amd_ip_funcs, [44 x i8] } { %struct.amd_ip_funcs { ptr @.str, ptr @si_dpm_early_init, ptr @si_dpm_late_init, ptr @si_dpm_sw_init, ptr @si_dpm_sw_fini, ptr null, ptr @si_dpm_hw_init, ptr @si_dpm_hw_fini, ptr null, ptr @si_dpm_suspend, ptr @si_dpm_resume, ptr @si_dpm_is_idle, ptr @si_dpm_wait_for_idle, ptr null, ptr null, ptr @si_dpm_soft_reset, ptr null, ptr @si_dpm_set_clockgating_state, ptr @si_dpm_set_powergating_state, ptr null, ptr null }, [44 x i8] zeroinitializer }, align 32
@si_smu_ip_block = dso_local constant { %struct.amdgpu_ip_block_version, [44 x i8] } { %struct.amdgpu_ip_block_version { i32 3, i32 6, i32 0, i32 0, ptr @si_dpm_ip_funcs }, [44 x i8] zeroinitializer }, align 32
@.str = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"si_dpm\00", [25 x i8] zeroinitializer }, align 32
@si_dpm_funcs = internal constant { %struct.amd_pm_funcs, [80 x i8] } { %struct.amd_pm_funcs { ptr @si_dpm_pre_set_power_state, ptr @si_dpm_set_power_state, ptr @si_dpm_post_set_power_state, ptr @si_dpm_display_configuration_changed, ptr @si_dpm_print_power_state, ptr @si_dpm_vblank_too_short, ptr null, ptr @si_check_state_equal, ptr @si_dpm_set_fan_control_mode, ptr @si_dpm_get_fan_control_mode, ptr @si_dpm_set_fan_speed_pwm, ptr @si_dpm_get_fan_speed_pwm, ptr null, ptr null, ptr @si_dpm_force_performance_level, ptr null, ptr null, ptr null, ptr null, ptr @si_dpm_read_sensor, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @si_dpm_debugfs_print_current_performance_level, ptr null, ptr @amdgpu_get_vce_clock_state, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @si_dpm_get_sclk, ptr @si_dpm_get_mclk, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"si_disable_ulv failed\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"si_restrict_performance_levels_before_switch failed\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"si_enable_power_containment failed\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"si_enable_smc_cac failed\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"si_halt_smc failed\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"si_upload_sw_state failed\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"si_upload_ulv_state failed\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"si_upload_mc_reg_table failed\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"si_program_memory_timing_parameters failed\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"si_resume_smc failed\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"si_set_sw_state failed\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"si_set_power_state_conditionally_enable_ulv failed\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"si_power_control_set_level failed\0A\00", [61 x i8] zeroinitializer }, align 32
@si_dpm_print_power_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str.17, i32 7902, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\016[drm] \09uvd    vclk: %d dclk: %d\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"si_dpm_print_power_state\00", [39 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c\00", [44 x i8] zeroinitializer }, align 32
@si_dpm_print_power_state._entry_ptr = internal global ptr @si_dpm_print_power_state._entry, section ".printk_index", align 4
@si_dpm_print_power_state._entry.18 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.16, ptr @.str.17, i32 7907, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\016[drm] \09\09power level %d    sclk: %u mclk: %u vddc: %u vddci: %u pcie gen: %u\0A\00", [49 x i8] zeroinitializer }, align 32
@si_dpm_print_power_state._entry_ptr.20 = internal global ptr @si_dpm_print_power_state._entry.18, section ".printk_index", align 4
@si_dpm_print_power_state._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.16, ptr @.str.17, i32 7910, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\016[drm] \09\09power level %d    sclk: %u mclk: %u vddc: %u vddci: %u\0A\00", [62 x i8] zeroinitializer }, align 32
@si_dpm_print_power_state._entry_ptr.23 = internal global ptr @si_dpm_print_power_state._entry.21, section ".printk_index", align 4
@si_check_state_equal._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.25, ptr @.str.17, i32 7955, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"si_cps is NULL\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"si_check_state_equal\00", [43 x i8] zeroinitializer }, align 32
@si_check_state_equal._entry_ptr = internal global ptr @si_check_state_equal._entry, section ".printk_index", align 4
@.str.26 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"invalid dpm profile %d\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"uvd    vclk: %d dclk: %d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"power level %d    sclk: %u mclk: %u vddc: %u vddci: %u pcie gen: %u\0A\00", [59 x i8] zeroinitializer }, align 32
@si_dpm_irq_funcs = internal constant { %struct.amdgpu_irq_src_funcs, [24 x i8] } { %struct.amdgpu_irq_src_funcs { ptr @si_dpm_set_interrupt_state, ptr @si_dpm_process_interrupt }, [24 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IH: thermal low to high\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IH: thermal high to low\0A\00", [39 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.31 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Could not enable thermal interrupts.\0A\00", [58 x i8] zeroinitializer }, align 32
@amdgpu_dpm = external dso_local local_unnamed_addr global i32, align 4
@si_dpm_sw_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.33 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"(work_completion)(&adev->pm.dpm.thermal.work)\00", [50 x i8] zeroinitializer }, align 32
@si_dpm_sw_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str.17, i32 7724, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016[drm] amdgpu: dpm initialized\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"si_dpm_sw_init\00", [17 x i8] zeroinitializer }, align 32
@si_dpm_sw_init._entry_ptr = internal global ptr @si_dpm_sw_init._entry, section ".printk_index", align 4
@.str.36 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"amdgpu: dpm initialization failed\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tahiti\00", [25 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"pitcairn_k\00", [21 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pitcairn\00", [23 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"verde_k\00", [24 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"verde\00", [26 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"oland_k\00", [24 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"oland\00", [26 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"hainan_k\00", [23 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"banks_k_2\00", [22 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"hainan\00", [25 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"amdgpu/%s_smc.bin\00", [46 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"si_smc: Failed to load firmware. err = %d\22%s\22\0A\00", [49 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.50 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Could not patch vddc_on_sclk leakage table\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Could not patch vddc_on_mclk leakage table\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Could not patch vddci_on_mclk leakage table\0A\00", [51 x i8] zeroinitializer }, align 32
@cac_weights_tahiti = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 12, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 257, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 12, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 2300, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 149, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 846, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 417, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 218, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 70, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 520, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 231, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2376, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 359, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 53, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 49, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 398, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@lcac_tahiti = internal constant { [87 x %struct.si_cac_config_reg], [436 x i8] } { [87 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 323, i32 131070, i32 1, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 326, i32 131070, i32 1, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 326, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 329, i32 131070, i32 1, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 329, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 332, i32 131070, i32 1, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 332, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 152, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 152, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 155, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 155, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 158, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 158, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 257, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 257, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 263, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 263, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 266, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 266, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 269, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 269, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 143, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 143, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 146, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 146, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 149, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 149, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 338, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 338, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 341, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 341, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 344, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 344, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 275, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 275, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 278, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 278, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 281, i32 131070, i32 1, i32 8, i32 1 }, %struct.si_cac_config_reg { i32 281, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 290, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 290, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 293, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 293, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 296, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 296, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 299, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 299, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 131070, i32 1, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [436 x i8] zeroinitializer }, align 32
@cac_override_tahiti = internal constant { [1 x %struct.si_cac_config_reg], [44 x i8] } { [1 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [44 x i8] zeroinitializer }, align 32
@powertune_data_tahiti = internal constant { %struct.si_powertune_data, [36 x i8] } { %struct.si_powertune_data { i32 92563, i32 6, i8 0, i8 4, i8 95, %struct.ni_leakage_coeffients { i32 0, i32 0, i32 4521550, i32 309631529, i32 -1270850, i32 4513710, i32 40 }, i32 595000000, i32 12, [8 x i8] zeroinitializer, i8 1 }, [36 x i8] zeroinitializer }, align 32
@dte_data_tahiti = internal constant { %struct.si_dte_data, [48 x i8] } { %struct.si_dte_data { [5 x i32] [i32 1159409, i32 0, i32 0, i32 0, i32 0], [5 x i32] [i32 777, i32 0, i32 0, i32 0, i32 0], i32 2, i32 54000, i32 127000, i8 25, i8 2, i8 10, i8 13, [16 x i8] c"\1B\1F#'+/6=CJQX_\00\00\00", [16 x i32] [i32 240888759, i32 221057860, i32 235370597, i32 162287531, i32 158510299, i32 131423027, i32 116673180, i32 103067515, i32 87941937, i32 76209048, i32 68209175, i32 64090048, i32 58301890, i32 0, i32 0, i32 0], [16 x i32] [i32 12024, i32 11189, i32 11451, i32 8411, i32 7939, i32 6666, i32 5681, i32 4905, i32 4241, i32 3720, i32 3354, i32 3122, i32 2890, i32 0, i32 0, i32 0], i32 85, i8 0 }, [48 x i8] zeroinitializer }, align 32
@dte_data_new_zealand = internal constant { %struct.si_dte_data, [48 x i8] } { %struct.si_dte_data { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] [i32 667, i32 1001, i32 1335, i32 2002, i32 0], i32 5, i32 45000, i32 105, i8 50, i8 1, i8 0, i8 16, [16 x i8] c"\82\A0\B4\FE\FE\FE\FE\FE\FE\FE\FE\FE\FE\FE\FE\FE", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], [16 x i32] [i32 3500, i32 5000, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669, i32 1669], i32 85, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_malta = internal constant { %struct.si_dte_data, [48 x i8] } { %struct.si_dte_data { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 45000, i32 100, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], [16 x i32] zeroinitializer, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"DTE is not enabled!\0A\00", [43 x i8] zeroinitializer }, align 32
@cac_weights_pitcairn = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 138, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 589, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 25, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 280, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 118, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 3089, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 2035, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 1027, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 871, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 1225, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 1117, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 877, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 1332, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 1498, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2176, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 513, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 159, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 31, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 1502, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 123, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 19, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 249, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 102, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 19, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 390, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@lcac_pitcairn = internal constant { [87 x %struct.si_cac_config_reg], [436 x i8] } { [87 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 152, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 152, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 155, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 155, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 263, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 263, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 275, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 275, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 338, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 338, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 143, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 143, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 326, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 326, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 158, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 158, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 266, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 266, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 278, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 278, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 341, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 341, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 146, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 146, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 329, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 329, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 257, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 257, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 269, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 269, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 281, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 281, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 344, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 344, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 149, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 149, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 332, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 332, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 290, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 290, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 293, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 293, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 296, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 296, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 299, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 299, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [436 x i8] zeroinitializer }, align 32
@cac_override_pitcairn = internal constant { [1 x %struct.si_cac_config_reg], [44 x i8] } { [1 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [44 x i8] zeroinitializer }, align 32
@powertune_data_pitcairn = internal constant { %struct.si_powertune_data, [36 x i8] } { %struct.si_powertune_data { i32 92563, i32 5, i8 0, i8 6, i8 100, %struct.ni_leakage_coeffients { i32 51600000, i32 1800000, i32 7194395, i32 309631529, i32 -1270850, i32 4513710, i32 100 }, i32 117830498, i32 12, [8 x i8] zeroinitializer, i8 1 }, [36 x i8] zeroinitializer }, align 32
@lcac_cape_verde = internal constant { [55 x %struct.si_cac_config_reg], [276 x i8] } { [55 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 152, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 152, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 155, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 155, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 263, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 263, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 275, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 275, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 338, i32 131070, i32 1, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 338, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 143, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 143, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 326, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 326, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [276 x i8] zeroinitializer }, align 32
@cac_override_cape_verde = internal constant { [1 x %struct.si_cac_config_reg], [44 x i8] } { [1 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [44 x i8] zeroinitializer }, align 32
@powertune_data_cape_verde = internal constant { %struct.si_powertune_data, [36 x i8] } { %struct.si_powertune_data { i32 92563, i32 5, i8 0, i8 7, i8 105, %struct.ni_leakage_coeffients { i32 0, i32 0, i32 7194395, i32 309631529, i32 -1270850, i32 4513710, i32 100 }, i32 117830498, i32 12, [8 x i8] zeroinitializer, i8 1 }, [36 x i8] zeroinitializer }, align 32
@cac_weights_cape_verde_pro = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 130, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 339, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 82, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 172, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 280, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 190, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 272, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 1229, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 55, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 39, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 195, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 53, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 40, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 620, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 946, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2461, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2623, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 52, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 789, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 122, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 256, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_heathrow = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 130, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 339, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 82, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 172, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 280, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 190, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 272, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 1229, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 55, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 39, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 195, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 53, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 40, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 620, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 946, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2461, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2623, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 52, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 866, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 122, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 256, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_chelsea_xt = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 130, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 339, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 82, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 172, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 280, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 190, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 272, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 1229, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 55, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 39, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 195, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 53, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 40, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 620, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 946, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2461, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2623, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 52, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 778, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 122, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 256, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_chelsea_pro = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 130, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 339, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 82, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 172, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 280, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 190, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 272, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 1229, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 55, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 39, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 195, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 53, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 40, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 620, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 946, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2461, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2623, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 52, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 701, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 122, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 256, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_cape_verde = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 130, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 339, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 82, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 172, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 280, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 190, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 272, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 1229, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 55, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 39, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 195, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 53, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 40, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 620, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 946, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2461, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2623, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 52, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 954, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 122, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 256, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@lcac_mars_pro = internal constant { [43 x %struct.si_cac_config_reg], [196 x i8] } { [43 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 152, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 152, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 131070, i32 1, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 131070, i32 1, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 131070, i32 1, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [196 x i8] zeroinitializer }, align 32
@cac_override_oland = internal constant { [1 x %struct.si_cac_config_reg], [44 x i8] } { [1 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [44 x i8] zeroinitializer }, align 32
@powertune_data_mars_pro = internal constant { %struct.si_powertune_data, [36 x i8] } { %struct.si_powertune_data { i32 92563, i32 5, i8 0, i8 7, i8 105, %struct.ni_leakage_coeffients { i32 0, i32 0, i32 7194395, i32 309631529, i32 -1270850, i32 4513710, i32 100 }, i32 117830498, i32 12, [8 x i8] zeroinitializer, i8 1 }, [36 x i8] zeroinitializer }, align 32
@cac_weights_mars_pro = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 67, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 175, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 42, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 89, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 421, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 470, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 675, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 2301, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 118, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 138, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 163, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 113, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 166, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 129, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 978, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 636, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2710, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 11, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 50, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 126, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 640, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 60, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 515, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 180, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_mars_xt = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 67, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 175, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 42, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 89, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 421, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 470, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 675, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 2301, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 118, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 138, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 163, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 113, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 166, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 129, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 978, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 636, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2710, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 11, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 96, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 50, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 126, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 640, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 60, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 515, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 180, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_oland_pro = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 67, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 175, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 42, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 89, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 421, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 470, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 675, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 2301, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 118, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 138, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 163, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 113, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 166, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 129, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 978, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 636, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2710, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 11, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 144, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 50, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 126, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 640, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 60, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 515, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 180, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_oland_xt = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 67, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 175, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 42, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 41, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 160, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 89, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 421, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 470, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 675, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 2301, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 118, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 138, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 163, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 113, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 166, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 129, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 978, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 636, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2710, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 11, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 54, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 16, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 288, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 50, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 126, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 640, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 7, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 60, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 515, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 180, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@cac_weights_oland = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 130, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 339, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 82, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 79, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 309, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 172, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 280, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 190, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 272, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 1229, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 55, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 39, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 195, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 53, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 40, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 620, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 946, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 2461, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2623, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 10, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 3, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 5, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 21, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 52, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 954, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 48, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 122, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 256, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@lcac_oland = internal constant { [43 x %struct.si_cac_config_reg], [196 x i8] } { [43 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 152, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 152, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 260, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 131070, i32 1, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 272, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 131070, i32 1, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 335, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 131070, i32 1, i32 6, i32 1 }, %struct.si_cac_config_reg { i32 140, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 131070, i32 1, i32 4, i32 1 }, %struct.si_cac_config_reg { i32 323, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 284, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 287, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 356, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 359, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 362, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 350, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 353, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 347, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 131070, i32 1, i32 2, i32 1 }, %struct.si_cac_config_reg { i32 365, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 368, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 371, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 374, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 377, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 380, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 131070, i32 1, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 383, i32 1, i32 0, i32 1, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [196 x i8] zeroinitializer }, align 32
@powertune_data_oland = internal constant { %struct.si_powertune_data, [36 x i8] } { %struct.si_powertune_data { i32 92563, i32 5, i8 0, i8 7, i8 105, %struct.ni_leakage_coeffients { i32 0, i32 0, i32 7194395, i32 309631529, i32 -1270850, i32 4513710, i32 100 }, i32 117830498, i32 12, [8 x i8] zeroinitializer, i8 1 }, [36 x i8] zeroinitializer }, align 32
@cac_weights_hainan = internal constant { [61 x %struct.si_cac_config_reg], [316 x i8] } { [61 x %struct.si_cac_config_reg] [%struct.si_cac_config_reg { i32 0, i32 65535, i32 0, i32 729, i32 1 }, %struct.si_cac_config_reg { i32 0, i32 -65536, i32 16, i32 555, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 65535, i32 0, i32 540, i32 1 }, %struct.si_cac_config_reg { i32 1, i32 -65536, i32 16, i32 476, i32 1 }, %struct.si_cac_config_reg { i32 2, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 65535, i32 0, i32 590, i32 1 }, %struct.si_cac_config_reg { i32 3, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 4, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 65535, i32 0, i32 862, i32 1 }, %struct.si_cac_config_reg { i32 5, i32 -65536, i32 16, i32 4419, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 65535, i32 0, i32 3607, i32 1 }, %struct.si_cac_config_reg { i32 6, i32 -65536, i32 16, i32 1089, i32 1 }, %struct.si_cac_config_reg { i32 399, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 65535, i32 0, i32 651, i32 1 }, %struct.si_cac_config_reg { i32 7, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 8, i32 -65536, i32 16, i32 2750, i32 1 }, %struct.si_cac_config_reg { i32 9, i32 65535, i32 0, i32 3857, i32 1 }, %struct.si_cac_config_reg { i32 10, i32 65535, i32 0, i32 2311, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 65535, i32 0, i32 2885, i32 1 }, %struct.si_cac_config_reg { i32 11, i32 -65536, i32 16, i32 3358, i32 1 }, %struct.si_cac_config_reg { i32 12, i32 65535, i32 0, i32 2604, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 65535, i32 0, i32 98, i32 1 }, %struct.si_cac_config_reg { i32 13, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 14, i32 65535, i32 0, i32 499, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 65535, i32 0, i32 66, i32 1 }, %struct.si_cac_config_reg { i32 15, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 16, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 65535, i32 0, i32 1801, i32 1 }, %struct.si_cac_config_reg { i32 17, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 18, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 19, i32 -65536, i32 16, i32 58, i32 1 }, %struct.si_cac_config_reg { i32 20, i32 65535, i32 0, i32 855, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 65535, i32 0, i32 159, i32 1 }, %struct.si_cac_config_reg { i32 21, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 78, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 65535, i32 0, i32 788, i32 1 }, %struct.si_cac_config_reg { i32 22, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 23, i32 65535, i32 0, i32 109, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 24, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 25, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 26, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 27, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 28, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 29, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 30, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 31, i32 -65536, i32 16, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 32, i32 65535, i32 0, i32 0, i32 1 }, %struct.si_cac_config_reg { i32 109, i32 65535, i32 0, i32 441, i32 1 }, %struct.si_cac_config_reg { i32 -1, i32 0, i32 0, i32 0, i32 0 }], [316 x i8] zeroinitializer }, align 32
@powertune_data_hainan = internal constant { %struct.si_powertune_data, [36 x i8] } { %struct.si_powertune_data { i32 92563, i32 5, i8 0, i8 9, i8 105, %struct.ni_leakage_coeffients { i32 0, i32 0, i32 7194395, i32 309631529, i32 -1270850, i32 4513710, i32 100 }, i32 117830498, i32 12, [8 x i8] zeroinitializer, i8 1 }, [36 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"Unknown SI asic revision, failed to initialize PowerTune!\0A\00", [37 x i8] zeroinitializer }, align 32
@dte_data_aruba_pro = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 45000, i32 100, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], <{ i32, [15 x i32] }> <{ i32 4096, [15 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_tahiti_pro = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 45000, i32 100, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], <{ i32, [15 x i32] }> <{ i32 2000, [15 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_curacao_xt = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 45000, i32 100, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], <{ i32, [15 x i32] }> <{ i32 7447, [15 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_curacao_pro = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 45000, i32 100, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], <{ i32, [15 x i32] }> <{ i32 7447, [15 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_neptune_xt = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 45000, i32 100, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], <{ i32, [15 x i32] }> <{ i32 14895, [15 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_sun_xt = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 55000, i32 105, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], <{ i32, [15 x i32] }> <{ i32 54613, [15 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_venus_xtx = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, <{ i8, i8, i8, [13 x i8] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, <{ i8, i8, i8, [13 x i8] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] [i32 1820, i32 2731, i32 3641, i32 4551, i32 0], i32 5, i32 55000, i32 105, i8 10, i8 1, i8 0, i8 3, <{ i8, i8, i8, [13 x i8] }> <{ i8 -106, i8 -76, i8 -1, [13 x i8] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 9000000, i32 4000000, i32 10000000, [13 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 55000, i32 35000, i32 5461, [13 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_venus_xt = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, <{ i8, i8, i8, [13 x i8] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, <{ i8, i8, i8, [13 x i8] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] [i32 3034, i32 4551, i32 6068, i32 7585, i32 0], i32 5, i32 55000, i32 105, i8 10, i8 1, i8 0, i8 3, <{ i8, i8, i8, [13 x i8] }> <{ i8 -106, i8 -76, i8 -1, [13 x i8] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 9000000, i32 4000000, i32 10000000, [13 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 45000, i32 35000, i32 9102, [13 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_venus_pro = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, <{ i8, i8, i8, [13 x i8] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, <{ i8, i8, i8, [13 x i8] }>, <{ i32, i32, i32, [13 x i32] }>, <{ i32, i32, i32, [13 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] [i32 4551, i32 6827, i32 9102, i32 11378, i32 0], i32 5, i32 55000, i32 105, i8 10, i8 1, i8 0, i8 3, <{ i8, i8, i8, [13 x i8] }> <{ i8 -106, i8 -76, i8 -1, [13 x i8] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 9000000, i32 4000000, i32 10000000, [13 x i32] zeroinitializer }>, <{ i32, i32, i32, [13 x i32] }> <{ i32 35000, i32 35000, i32 13653, [13 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@dte_data_mars_pro = internal constant { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 }, [48 x i8] } { { [5 x i32], [5 x i32], i32, i32, i32, i8, i8, i8, i8, [16 x i8], [16 x i32], <{ i32, [15 x i32] }>, i32, i8 } { [5 x i32] [i32 2000000, i32 4000000, i32 10000000, i32 40000000, i32 0], [5 x i32] zeroinitializer, i32 5, i32 55000, i32 105, i8 10, i8 1, i8 0, i8 16, [16 x i8] c"\96\B4\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", [16 x i32] [i32 9000000, i32 4000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000, i32 10000000], <{ i32, [15 x i32] }> <{ i32 63015, [15 x i32] zeroinitializer }>, i32 90, i8 1 }, [48 x i8] zeroinitializer }, align 32
@__const.si_update_dte_from_pl2.t_split = private unnamed_addr constant [5 x i32] [i32 10, i32 15, i32 20, i32 25, i32 30], align 4
@.str.65 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Invalid PL2! DTE will not be updated.\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"si_construct_voltage_tables failed\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"si_upload_firmware failed\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"si_process_firmware_header failed\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"si_initial_switch_from_arb_f0_to_f1 failed\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"si_init_smc_table failed\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"si_init_smc_spll_table failed\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"si_init_arb_table_index failed\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"si_populate_mc_reg_table failed\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"si_initialize_smc_cac_tables failed\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"si_initialize_hardware_cac_manager failed\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"si_initialize_smc_dte_tables failed\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"si_populate_smc_tdp_limits failed\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"si_populate_smc_tdp_limits_2 failed\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"si_notify_smc_display_change failed\0A\00", [59 x i8] zeroinitializer }, align 32
@r600_utc = internal constant { [15 x i32], [36 x i8] } { [15 x i32] [i32 36, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34], [36 x i8] zeroinitializer }, align 32
@r600_dtc = internal constant { [15 x i32], [36 x i8] } { [15 x i32] [i32 36, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34, i32 34], [36 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Failed to load fan table to the SMC.\00", [59 x i8] zeroinitializer }, align 32
@switch.table.si_dpm_sw_init = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.45, ptr @.str.47, ptr @.str.47, ptr @.str.45, ptr @.str.47, ptr @.str.45, ptr @.str.47, ptr @.str.45], [32 x i8] zeroinitializer }, align 32
@switch.table.si_dpm_sw_init.81 = internal constant { [32 x i32], [32 x i8] } { [32 x i32] [i32 10, i32 10, i32 0, i32 10, i32 8, i32 10, i32 8, i32 10, i32 10, i32 8, i32 0, i32 0, i32 0, i32 8, i32 0, i32 8, i32 10, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 10, i32 0, i32 8, i32 0, i32 10, i32 0, i32 8], [32 x i8] zeroinitializer }, align 32
@switch.table.si_dpm_pre_set_power_state = internal constant { [4 x i32], [16 x i8] } { [4 x i32] [i32 75000, i32 75000, i32 0, i32 75000], [16 x i8] zeroinitializer }, align 32
@switch.table.si_set_dpm_event_sources = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 2, i32 1, i32 4], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.82 = internal global [4 x i64] [i64 2, i64 16, i64 26656, i64 26657]
@__sancov_gen_cov_switch_values.83 = internal global [4 x i64] [i64 2, i64 8, i64 129, i64 131]
@__sancov_gen_cov_switch_values.84 = internal global [4 x i64] [i64 2, i64 8, i64 131, i64 135]
@__sancov_gen_cov_switch_values.85 = internal global [4 x i64] [i64 2, i64 8, i64 129, i64 131]
@__sancov_gen_cov_switch_values.86 = internal global [6 x i64] [i64 4, i64 16, i64 26112, i64 26116, i64 26117, i64 26128]
@__sancov_gen_cov_switch_values.87 = internal global [5 x i64] [i64 3, i64 8, i64 129, i64 131, i64 195]
@__sancov_gen_cov_switch_values.88 = internal global [4 x i64] [i64 2, i64 16, i64 0, i64 65281]
@__sancov_gen_cov_switch_values.89 = internal global [4 x i64] [i64 2, i64 16, i64 0, i64 65282]
@__sancov_gen_cov_switch_values.90 = internal global [4 x i64] [i64 2, i64 16, i64 0, i64 65283]
@__sancov_gen_cov_switch_values.91 = internal global [4 x i64] [i64 2, i64 16, i64 0, i64 65284]
@__sancov_gen_cov_switch_values.92 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.93 = internal global [10 x i64] [i64 8, i64 16, i64 26512, i64 26513, i64 26514, i64 26520, i64 26521, i64 26522, i64 26523, i64 26526]
@__sancov_gen_cov_switch_values.94 = internal global [8 x i64] [i64 6, i64 16, i64 26624, i64 26630, i64 26640, i64 26641, i64 26648, i64 26649]
@__sancov_gen_cov_switch_values.95 = internal global [18 x i64] [i64 16, i64 16, i64 26656, i64 26657, i64 26658, i64 26659, i64 26660, i64 26661, i64 26663, i64 26665, i64 26666, i64 26667, i64 26668, i64 26669, i64 26671, i64 26677, i64 26683, i64 26687]
@__sancov_gen_cov_switch_values.96 = internal global [14 x i64] [i64 12, i64 16, i64 26112, i64 26113, i64 26115, i64 26116, i64 26117, i64 26118, i64 26120, i64 26128, i64 26129, i64 26131, i64 26144, i64 26145]
@__sancov_gen_cov_switch_values.97 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.98 = internal global [4 x i64] [i64 2, i64 8, i64 129, i64 195]
@__sancov_gen_cov_switch_values.99 = internal global [7 x i64] [i64 5, i64 8, i64 128, i64 129, i64 131, i64 135, i64 199]
@__sancov_gen_cov_switch_values.100 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 4, i64 8]
@__sancov_gen_cov_switch_values.101 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 9, i64 10]
@__sancov_gen_cov_switch_values.102 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.103 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.104 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.105 = internal global [4 x i64] [i64 2, i64 32, i64 230, i64 231]
@__sancov_gen_cov_switch_values.106 = internal global [16 x i64] [i64 14, i64 16, i64 2600, i64 2601, i64 2602, i64 2603, i64 2604, i64 2605, i64 2606, i64 2607, i64 2608, i64 2691, i64 2731, i64 2769, i64 2773, i64 2775]
@__sancov_gen_cov_switch_values.107 = internal global [4 x i64] [i64 2, i64 16, i64 2689, i64 2690]
@__sancov_gen_cov_switch_values.108 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 9, i64 10]
@__sancov_gen_cov_switch_values.109 = internal global [6 x i64] [i64 4, i64 32, i64 10, i64 11, i64 12, i64 13]
@__sancov_gen_cov_switch_values.110 = internal global [4 x i64] [i64 2, i64 32, i64 10, i64 11]
@___asan_gen_.111 = private unnamed_addr constant [16 x i8] c"si_dpm_ip_funcs\00", align 1
@___asan_gen_.113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 8022, i32 34 }
@___asan_gen_.114 = private unnamed_addr constant [16 x i8] c"si_smu_ip_block\00", align 1
@___asan_gen_.116 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 8039, i32 38 }
@___asan_gen_.119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 8023, i32 10 }
@___asan_gen_.120 = private unnamed_addr constant [13 x i8] c"si_dpm_funcs\00", align 1
@___asan_gen_.122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 8048, i32 34 }
@___asan_gen_.125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6983, i32 3 }
@___asan_gen_.128 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6988, i32 3 }
@___asan_gen_.131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6996, i32 3 }
@___asan_gen_.134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7001, i32 3 }
@___asan_gen_.137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7006, i32 3 }
@___asan_gen_.140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7011, i32 3 }
@___asan_gen_.143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7021, i32 3 }
@___asan_gen_.146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7027, i32 4 }
@___asan_gen_.149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7033, i32 3 }
@___asan_gen_.152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7040, i32 3 }
@___asan_gen_.155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7045, i32 3 }
@___asan_gen_.158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7054, i32 3 }
@___asan_gen_.161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7070, i32 3 }
@___asan_gen_.173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7902, i32 2 }
@___asan_gen_.179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7906, i32 4 }
@___asan_gen_.185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7909, i32 4 }
@___asan_gen_.194 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7955, i32 3 }
@___asan_gen_.197 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7492, i32 17 }
@___asan_gen_.200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7495, i32 17 }
@___asan_gen_.203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7496, i32 17 }
@___asan_gen_.204 = private unnamed_addr constant [17 x i8] c"si_dpm_irq_funcs\00", align 1
@___asan_gen_.206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 8068, i32 42 }
@___asan_gen_.209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7560, i32 3 }
@___asan_gen_.212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7565, i32 3 }
@___asan_gen_.215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6386, i32 4 }
@___asan_gen_.216 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7715, i32 2 }
@___asan_gen_.222 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7724, i32 2 }
@___asan_gen_.233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7731, i32 2 }
@___asan_gen_.236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7611, i32 2 }
@___asan_gen_.239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7614, i32 15 }
@___asan_gen_.242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7620, i32 16 }
@___asan_gen_.245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7622, i32 16 }
@___asan_gen_.248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7634, i32 16 }
@___asan_gen_.251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7636, i32 16 }
@___asan_gen_.254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7646, i32 16 }
@___asan_gen_.257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7648, i32 16 }
@___asan_gen_.260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7658, i32 16 }
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7661, i32 16 }
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7663, i32 16 }
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7668, i32 37 }
@___asan_gen_.272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 7676, i32 3 }
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6339, i32 3 }
@___asan_gen_.278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6343, i32 3 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6347, i32 3 }
@___asan_gen_.282 = private unnamed_addr constant [19 x i8] c"cac_weights_tahiti\00", align 1
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 137, i32 39 }
@___asan_gen_.285 = private unnamed_addr constant [12 x i8] c"lcac_tahiti\00", align 1
@___asan_gen_.287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 202, i32 39 }
@___asan_gen_.288 = private unnamed_addr constant [20 x i8] c"cac_override_tahiti\00", align 1
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 294, i32 39 }
@___asan_gen_.291 = private unnamed_addr constant [22 x i8] c"powertune_data_tahiti\00", align 1
@___asan_gen_.293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 299, i32 39 }
@___asan_gen_.294 = private unnamed_addr constant [16 x i8] c"dte_data_tahiti\00", align 1
@___asan_gen_.296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 330, i32 33 }
@___asan_gen_.297 = private unnamed_addr constant [21 x i8] c"dte_data_new_zealand\00", align 1
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 366, i32 33 }
@___asan_gen_.300 = private unnamed_addr constant [15 x i8] c"dte_data_malta\00", align 1
@___asan_gen_.302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 402, i32 33 }
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1997, i32 5 }
@___asan_gen_.306 = private unnamed_addr constant [21 x i8] c"cac_weights_pitcairn\00", align 1
@___asan_gen_.308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 420, i32 39 }
@___asan_gen_.309 = private unnamed_addr constant [14 x i8] c"lcac_pitcairn\00", align 1
@___asan_gen_.311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 485, i32 39 }
@___asan_gen_.312 = private unnamed_addr constant [22 x i8] c"cac_override_pitcairn\00", align 1
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 576, i32 39 }
@___asan_gen_.315 = private unnamed_addr constant [24 x i8] c"powertune_data_pitcairn\00", align 1
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 581, i32 39 }
@___asan_gen_.318 = private unnamed_addr constant [16 x i8] c"lcac_cape_verde\00", align 1
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1009, i32 39 }
@___asan_gen_.321 = private unnamed_addr constant [24 x i8] c"cac_override_cape_verde\00", align 1
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1068, i32 39 }
@___asan_gen_.324 = private unnamed_addr constant [26 x i8] c"powertune_data_cape_verde\00", align 1
@___asan_gen_.326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1073, i32 39 }
@___asan_gen_.327 = private unnamed_addr constant [27 x i8] c"cac_weights_cape_verde_pro\00", align 1
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 879, i32 39 }
@___asan_gen_.330 = private unnamed_addr constant [21 x i8] c"cac_weights_heathrow\00", align 1
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 814, i32 39 }
@___asan_gen_.333 = private unnamed_addr constant [23 x i8] c"cac_weights_chelsea_xt\00", align 1
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 749, i32 39 }
@___asan_gen_.336 = private unnamed_addr constant [24 x i8] c"cac_weights_chelsea_pro\00", align 1
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 684, i32 39 }
@___asan_gen_.339 = private unnamed_addr constant [23 x i8] c"cac_weights_cape_verde\00", align 1
@___asan_gen_.341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 944, i32 39 }
@___asan_gen_.342 = private unnamed_addr constant [14 x i8] c"lcac_mars_pro\00", align 1
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1548, i32 39 }
@___asan_gen_.345 = private unnamed_addr constant [19 x i8] c"cac_override_oland\00", align 1
@___asan_gen_.347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1595, i32 39 }
@___asan_gen_.348 = private unnamed_addr constant [24 x i8] c"powertune_data_mars_pro\00", align 1
@___asan_gen_.350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1631, i32 39 }
@___asan_gen_.351 = private unnamed_addr constant [21 x i8] c"cac_weights_mars_pro\00", align 1
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1241, i32 39 }
@___asan_gen_.354 = private unnamed_addr constant [20 x i8] c"cac_weights_mars_xt\00", align 1
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1306, i32 39 }
@___asan_gen_.357 = private unnamed_addr constant [22 x i8] c"cac_weights_oland_pro\00", align 1
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1371, i32 39 }
@___asan_gen_.360 = private unnamed_addr constant [21 x i8] c"cac_weights_oland_xt\00", align 1
@___asan_gen_.362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1436, i32 39 }
@___asan_gen_.363 = private unnamed_addr constant [18 x i8] c"cac_weights_oland\00", align 1
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1176, i32 39 }
@___asan_gen_.366 = private unnamed_addr constant [11 x i8] c"lcac_oland\00", align 1
@___asan_gen_.368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1501, i32 39 }
@___asan_gen_.369 = private unnamed_addr constant [21 x i8] c"powertune_data_oland\00", align 1
@___asan_gen_.371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1600, i32 39 }
@___asan_gen_.372 = private unnamed_addr constant [19 x i8] c"cac_weights_hainan\00", align 1
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1717, i32 39 }
@___asan_gen_.375 = private unnamed_addr constant [22 x i8] c"powertune_data_hainan\00", align 1
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1782, i32 39 }
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 2125, i32 3 }
@___asan_gen_.381 = private unnamed_addr constant [19 x i8] c"dte_data_aruba_pro\00", align 1
@___asan_gen_.383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 384, i32 33 }
@___asan_gen_.384 = private unnamed_addr constant [20 x i8] c"dte_data_tahiti_pro\00", align 1
@___asan_gen_.386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 348, i32 33 }
@___asan_gen_.387 = private unnamed_addr constant [20 x i8] c"dte_data_curacao_xt\00", align 1
@___asan_gen_.389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 630, i32 33 }
@___asan_gen_.390 = private unnamed_addr constant [21 x i8] c"dte_data_curacao_pro\00", align 1
@___asan_gen_.392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 648, i32 33 }
@___asan_gen_.393 = private unnamed_addr constant [20 x i8] c"dte_data_neptune_xt\00", align 1
@___asan_gen_.395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 666, i32 33 }
@___asan_gen_.396 = private unnamed_addr constant [16 x i8] c"dte_data_sun_xt\00", align 1
@___asan_gen_.398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1698, i32 33 }
@___asan_gen_.399 = private unnamed_addr constant [19 x i8] c"dte_data_venus_xtx\00", align 1
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1122, i32 33 }
@___asan_gen_.402 = private unnamed_addr constant [18 x i8] c"dte_data_venus_xt\00", align 1
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1140, i32 33 }
@___asan_gen_.405 = private unnamed_addr constant [19 x i8] c"dte_data_venus_pro\00", align 1
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1158, i32 33 }
@___asan_gen_.408 = private unnamed_addr constant [18 x i8] c"dte_data_mars_pro\00", align 1
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1680, i32 33 }
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1935, i32 3 }
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6774, i32 4 }
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6796, i32 3 }
@___asan_gen_.422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6801, i32 3 }
@___asan_gen_.425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6806, i32 3 }
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6811, i32 3 }
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6816, i32 3 }
@___asan_gen_.434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6821, i32 3 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6827, i32 4 }
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6833, i32 3 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6838, i32 3 }
@___asan_gen_.446 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6843, i32 3 }
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6848, i32 3 }
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6853, i32 3 }
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6861, i32 3 }
@___asan_gen_.456 = private unnamed_addr constant [9 x i8] c"r600_utc\00", align 1
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 99, i32 18 }
@___asan_gen_.459 = private unnamed_addr constant [9 x i8] c"r600_dtc\00", align 1
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 118, i32 18 }
@___asan_gen_.462 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.463 = private constant [55 x i8] c"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c\00", align 1
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 6506, i32 3 }
@___asan_gen_.465 = private unnamed_addr constant [28 x i8] c"switch.table.si_dpm_sw_init\00", align 1
@___asan_gen_.466 = private unnamed_addr constant [31 x i8] c"switch.table.si_dpm_sw_init.81\00", align 1
@___asan_gen_.467 = private unnamed_addr constant [40 x i8] c"switch.table.si_dpm_pre_set_power_state\00", align 1
@___asan_gen_.468 = private unnamed_addr constant [38 x i8] c"switch.table.si_set_dpm_event_sources\00", align 1
@llvm.compiler.used = appending global [137 x ptr] [ptr @__UNIQUE_ID_firmware343, ptr @__UNIQUE_ID_firmware344, ptr @__UNIQUE_ID_firmware345, ptr @__UNIQUE_ID_firmware346, ptr @__UNIQUE_ID_firmware347, ptr @__UNIQUE_ID_firmware348, ptr @__UNIQUE_ID_firmware349, ptr @__UNIQUE_ID_firmware350, ptr @__UNIQUE_ID_firmware351, ptr @__UNIQUE_ID_firmware352, ptr @si_check_state_equal._entry, ptr @si_check_state_equal._entry_ptr, ptr @si_dpm_print_power_state._entry, ptr @si_dpm_print_power_state._entry.18, ptr @si_dpm_print_power_state._entry.21, ptr @si_dpm_print_power_state._entry_ptr, ptr @si_dpm_print_power_state._entry_ptr.20, ptr @si_dpm_print_power_state._entry_ptr.23, ptr @si_dpm_sw_init._entry, ptr @si_dpm_sw_init._entry_ptr, ptr @si_dpm_ip_funcs, ptr @si_smu_ip_block, ptr @.str, ptr @si_dpm_funcs, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.19, ptr @.str.22, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @si_dpm_irq_funcs, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @si_dpm_sw_init.__key, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @cac_weights_tahiti, ptr @lcac_tahiti, ptr @cac_override_tahiti, ptr @powertune_data_tahiti, ptr @dte_data_tahiti, ptr @dte_data_new_zealand, ptr @dte_data_malta, ptr @.str.53, ptr @cac_weights_pitcairn, ptr @lcac_pitcairn, ptr @cac_override_pitcairn, ptr @powertune_data_pitcairn, ptr @lcac_cape_verde, ptr @cac_override_cape_verde, ptr @powertune_data_cape_verde, ptr @cac_weights_cape_verde_pro, ptr @cac_weights_heathrow, ptr @cac_weights_chelsea_xt, ptr @cac_weights_chelsea_pro, ptr @cac_weights_cape_verde, ptr @lcac_mars_pro, ptr @cac_override_oland, ptr @powertune_data_mars_pro, ptr @cac_weights_mars_pro, ptr @cac_weights_mars_xt, ptr @cac_weights_oland_pro, ptr @cac_weights_oland_xt, ptr @cac_weights_oland, ptr @lcac_oland, ptr @powertune_data_oland, ptr @cac_weights_hainan, ptr @powertune_data_hainan, ptr @.str.54, ptr @dte_data_aruba_pro, ptr @dte_data_tahiti_pro, ptr @dte_data_curacao_xt, ptr @dte_data_curacao_pro, ptr @dte_data_neptune_xt, ptr @dte_data_sun_xt, ptr @dte_data_venus_xtx, ptr @dte_data_venus_xt, ptr @dte_data_venus_pro, ptr @dte_data_mars_pro, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @r600_utc, ptr @r600_dtc, ptr @.str.80, ptr @switch.table.si_dpm_sw_init, ptr @switch.table.si_dpm_sw_init.81, ptr @switch.table.si_dpm_pre_set_power_state, ptr @switch.table.si_set_dpm_event_sources], section "llvm.metadata"
@0 = internal global [122 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_ip_funcs to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.111 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_smu_ip_block to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.114 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.116 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_funcs to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.120 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_print_power_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_print_power_state._entry.18 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_print_power_state._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_check_state_equal._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_irq_funcs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_sw_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @si_dpm_sw_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_tahiti to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcac_tahiti to i32), i32 1740, i32 2176, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_override_tahiti to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @powertune_data_tahiti to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_tahiti to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_new_zealand to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_malta to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_pitcairn to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcac_pitcairn to i32), i32 1740, i32 2176, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_override_pitcairn to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @powertune_data_pitcairn to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcac_cape_verde to i32), i32 1100, i32 1376, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_override_cape_verde to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @powertune_data_cape_verde to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_cape_verde_pro to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_heathrow to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_chelsea_xt to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_chelsea_pro to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_cape_verde to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcac_mars_pro to i32), i32 860, i32 1056, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_override_oland to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @powertune_data_mars_pro to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_mars_pro to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_mars_xt to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_oland_pro to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_oland_xt to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_oland to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lcac_oland to i32), i32 860, i32 1056, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @powertune_data_oland to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cac_weights_hainan to i32), i32 1220, i32 1536, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @powertune_data_hainan to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_aruba_pro to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_tahiti_pro to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_curacao_xt to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_curacao_pro to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_neptune_xt to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_sun_xt to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_venus_xtx to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_venus_xt to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_venus_pro to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dte_data_mars_pro to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @r600_utc to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @r600_dtc to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.si_dpm_sw_init to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.si_dpm_sw_init.81 to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.si_dpm_pre_set_power_state to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.si_set_dpm_event_sources to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @si_dpm_early_init(ptr noundef %handle) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %powerplay = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 95
  %pp_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 95, i32 1
  %0 = ptrtoint ptr %pp_funcs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @si_dpm_funcs, ptr %pp_funcs, align 4
  %1 = ptrtoint ptr %powerplay to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %handle, ptr %powerplay, align 8
  %irq.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 11
  %2 = ptrtoint ptr %irq.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2, ptr %irq.i, align 4
  %funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 11, i32 2
  %3 = ptrtoint ptr %funcs.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @si_dpm_irq_funcs, ptr %funcs.i, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_late_init(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dpm_enabled = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 13
  %0 = ptrtoint ptr %dpm_enabled to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %dpm_enabled, align 8, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 450, i32 noundef 0) #14
  %or.i.i = or i32 %call.i.i, 50331648
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 450, i32 noundef %or.i.i, i32 noundef 0) #14
  %call.i17.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 450, i32 noundef 0) #14
  %and.i.i = and i32 %call.i17.i, -65281
  %or.i18.i = or i32 %and.i.i, 30720
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 450, i32 noundef %or.i18.i, i32 noundef 0) #14
  %call10.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 450, i32 noundef 0) #14
  %and11.i.i = and i32 %call10.i.i, -16711681
  %or15.i.i = or i32 %and11.i.i, 5898240
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 450, i32 noundef %or15.i.i, i32 noundef 0) #14
  %call20.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 448, i32 noundef 0) #14
  %and21.i.i = and i32 %call20.i.i, -4177921
  %or25.i.i = or i32 %and21.i.i, 1966080
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 448, i32 noundef %or25.i.i, i32 noundef 0) #14
  %min_temp28.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 1
  %2 = ptrtoint ptr %min_temp28.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 90000, ptr %min_temp28.i.i, align 4
  %max_temp32.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 2
  %3 = ptrtoint ptr %max_temp32.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 120000, ptr %max_temp32.i.i, align 4
  %call.i19.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 450, i32 noundef 0) #14
  %and.i20.i = and i32 %call.i19.i, -50331649
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 450, i32 noundef %and.i20.i, i32 noundef 0) #14
  %call1.i.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 22) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call1.i.i)
  %cmp.not.i.i = icmp eq i8 %call1.i.i, 1
  br i1 %cmp.not.i.i, label %if.end.cleanup_crit_edge, label %if.then3.i.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 4, ptr noundef nonnull @.str.31) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then3.i.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -22, %if.then3.i.i ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_sw_init(ptr noundef %handle) #1 align 64 {
entry:
  %ss.i.i = alloca %struct.amdgpu_atom_ss, align 2
  %vddc58.i.i.i = alloca i16, align 2
  %vddci59.i.i.i = alloca i16, align 2
  %mvdd.i.i.i = alloca i16, align 2
  %data_offset.i.i = alloca i16, align 2
  %frev.i.i = alloca i8, align 1
  %crev.i.i = alloca i8, align 1
  %vddc.i295.i = alloca i16, align 2
  %vddc.i.i = alloca i16, align 2
  %dividers.i = alloca %struct.atom_clock_dividers, align 4
  %fw_name.i = alloca [30 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pm = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98
  %thermal = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35
  %irq = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 11
  %call = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 0, i32 noundef 230, ptr noundef %irq) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @amdgpu_irq_add_id(ptr noundef %handle, i32 noundef 0, i32 noundef 231, ptr noundef %irq) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %state = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 9
  %0 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 3, ptr %state, align 4
  %user_state = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 10
  %1 = ptrtoint ptr %user_state to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 3, ptr %user_state, align 4
  %forced_level = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 36
  %2 = ptrtoint ptr %forced_level to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %forced_level, align 4
  %default_sclk = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 61, i32 4
  %3 = ptrtoint ptr %default_sclk to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %default_sclk, align 4
  %default_sclk16 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 3
  %5 = ptrtoint ptr %default_sclk16 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %default_sclk16, align 4
  %default_mclk = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 61, i32 3
  %6 = ptrtoint ptr %default_mclk to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %default_mclk, align 4
  %default_mclk19 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 4
  %8 = ptrtoint ptr %default_mclk19 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %default_mclk19, align 8
  %current_sclk = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 1
  %9 = ptrtoint ptr %current_sclk to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %4, ptr %current_sclk, align 4
  %current_mclk = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 2
  %10 = ptrtoint ptr %current_mclk to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %7, ptr %current_mclk, align 8
  %int_thermal_type = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 7
  %11 = ptrtoint ptr %int_thermal_type to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %int_thermal_type, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dpm to i32))
  %12 = load i32, ptr @amdgpu_dpm, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp = icmp eq i32 %12, 0
  br i1 %cmp, label %if.end8.cleanup_crit_edge, label %if.end28

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end28:                                         ; preds = %if.end8
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %fw_name.i) #14
  %13 = call ptr @memset(ptr %fw_name.i, i32 255, i32 30)
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull @.str.37) #14
  %asic_type.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 5
  %14 = ptrtoint ptr %asic_type.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %asic_type.i, align 8
  %16 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values)
  switch i32 %15, label %do.body.i [
    i32 0, label %if.end28.sw.epilog.i_crit_edge
    i32 1, label %sw.bb1.i
    i32 2, label %sw.bb12.i
    i32 3, label %sw.bb69.i
    i32 4, label %sw.bb114.i
  ]

if.end28.sw.epilog.i_crit_edge:                   ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

sw.bb1.i:                                         ; preds = %if.end28
  %pdev.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %17 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev.i, align 4
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 12
  %19 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %revision.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -127, i8 %20)
  %cmp.i = icmp eq i8 %20, -127
  br i1 %cmp.i, label %land.lhs.true.i, label %sw.bb1.i.if.else.i_crit_edge

sw.bb1.i.if.else.i_crit_edge:                     ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %sw.bb1.i
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 8
  %21 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %device.i, align 2
  %23 = and i16 %22, -2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26640, i16 %23)
  %switch.i = icmp eq i16 %23, 26640
  br i1 %switch.i, label %land.lhs.true.i.sw.epilog.i_crit_edge, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

land.lhs.true.i.sw.epilog.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %sw.bb1.i.if.else.i_crit_edge
  br label %sw.epilog.i

sw.bb12.i:                                        ; preds = %if.end28
  %pdev13.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %24 = ptrtoint ptr %pdev13.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pdev13.i, align 4
  %device14.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 8
  %26 = ptrtoint ptr %device14.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %device14.i, align 2
  %28 = zext i16 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.82)
  switch i16 %27, label %sw.bb12.i.lor.lhs.false48.i_crit_edge [
    i16 26656, label %land.lhs.true18.i
    i16 26657, label %land.lhs.true36.i
  ]

sw.bb12.i.lor.lhs.false48.i_crit_edge:            ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false48.i

land.lhs.true18.i:                                ; preds = %sw.bb12.i
  %revision20.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 12
  %29 = ptrtoint ptr %revision20.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %revision20.i, align 4
  %31 = zext i8 %30 to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.83)
  switch i8 %30, label %land.lhs.true18.i.lor.lhs.false48.i_crit_edge [
    i8 -127, label %land.lhs.true18.i.sw.epilog.i_crit_edge
    i8 -125, label %land.lhs.true18.i.sw.epilog.i_crit_edge186
  ]

land.lhs.true18.i.sw.epilog.i_crit_edge186:       ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true18.i.sw.epilog.i_crit_edge:          ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true18.i.lor.lhs.false48.i_crit_edge:    ; preds = %land.lhs.true18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false48.i

land.lhs.true36.i:                                ; preds = %sw.bb12.i
  %revision38.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 12
  %32 = ptrtoint ptr %revision38.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %revision38.i, align 4
  %34 = zext i8 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.84)
  switch i8 %33, label %land.lhs.true36.i.lor.lhs.false48.i_crit_edge [
    i8 -125, label %land.lhs.true36.i.sw.epilog.i_crit_edge
    i8 -121, label %land.lhs.true36.i.sw.epilog.i_crit_edge187
  ]

land.lhs.true36.i.sw.epilog.i_crit_edge187:       ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true36.i.sw.epilog.i_crit_edge:          ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true36.i.lor.lhs.false48.i_crit_edge:    ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false48.i

lor.lhs.false48.i:                                ; preds = %land.lhs.true36.i.lor.lhs.false48.i_crit_edge, %land.lhs.true18.i.lor.lhs.false48.i_crit_edge, %sw.bb12.i.lor.lhs.false48.i_crit_edge
  %revision50.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 12
  %35 = ptrtoint ptr %revision50.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %revision50.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -121, i8 %36)
  %cmp52.i = icmp eq i8 %36, -121
  br i1 %cmp52.i, label %land.lhs.true54.i, label %lor.lhs.false48.i.sw.epilog.i_crit_edge

lor.lhs.false48.i.sw.epilog.i_crit_edge:          ; preds = %lor.lhs.false48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true54.i:                                ; preds = %lor.lhs.false48.i
  call void @__sanitizer_cov_trace_pc() #16
  %37 = add i16 %27, -26659
  %switch.and.i = and i16 %37, -9
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %switch.and.i)
  %switch.selectcmp.i = icmp eq i16 %switch.and.i, 0
  %38 = select i1 %switch.selectcmp.i, ptr @.str.41, ptr @.str.42
  br label %sw.epilog.i

sw.bb69.i:                                        ; preds = %if.end28
  %pdev70.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %39 = ptrtoint ptr %pdev70.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pdev70.i, align 4
  %revision71.i = getelementptr inbounds %struct.pci_dev, ptr %40, i32 0, i32 12
  %41 = ptrtoint ptr %revision71.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %revision71.i, align 4
  %43 = zext i8 %42 to i64
  call void @__sanitizer_cov_trace_switch(i64 %43, ptr @__sancov_gen_cov_switch_values.85)
  switch i8 %42, label %sw.bb69.i.if.else112.i_crit_edge [
    i8 -127, label %land.lhs.true75.i
    i8 -125, label %land.lhs.true105.i
  ]

sw.bb69.i.if.else112.i_crit_edge:                 ; preds = %sw.bb69.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else112.i

land.lhs.true75.i:                                ; preds = %sw.bb69.i
  %device77.i = getelementptr inbounds %struct.pci_dev, ptr %40, i32 0, i32 8
  %44 = ptrtoint ptr %device77.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %device77.i, align 2
  %46 = zext i16 %45 to i64
  call void @__sanitizer_cov_trace_switch(i64 %46, ptr @__sancov_gen_cov_switch_values.86)
  switch i16 %45, label %land.lhs.true75.i.if.else112.i_crit_edge [
    i16 26112, label %land.lhs.true75.i.sw.epilog.i_crit_edge
    i16 26116, label %land.lhs.true75.i.sw.epilog.i_crit_edge188
    i16 26117, label %land.lhs.true75.i.sw.epilog.i_crit_edge189
    i16 26128, label %land.lhs.true75.i.sw.epilog.i_crit_edge190
  ]

land.lhs.true75.i.sw.epilog.i_crit_edge190:       ; preds = %land.lhs.true75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true75.i.sw.epilog.i_crit_edge189:       ; preds = %land.lhs.true75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true75.i.sw.epilog.i_crit_edge188:       ; preds = %land.lhs.true75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true75.i.sw.epilog.i_crit_edge:          ; preds = %land.lhs.true75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true75.i.if.else112.i_crit_edge:         ; preds = %land.lhs.true75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else112.i

land.lhs.true105.i:                               ; preds = %sw.bb69.i
  %device107.i = getelementptr inbounds %struct.pci_dev, ptr %40, i32 0, i32 8
  %47 = ptrtoint ptr %device107.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %device107.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26128, i16 %48)
  %cmp109.i = icmp eq i16 %48, 26128
  br i1 %cmp109.i, label %land.lhs.true105.i.sw.epilog.i_crit_edge, label %land.lhs.true105.i.if.else112.i_crit_edge

land.lhs.true105.i.if.else112.i_crit_edge:        ; preds = %land.lhs.true105.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else112.i

land.lhs.true105.i.sw.epilog.i_crit_edge:         ; preds = %land.lhs.true105.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

if.else112.i:                                     ; preds = %land.lhs.true105.i.if.else112.i_crit_edge, %land.lhs.true75.i.if.else112.i_crit_edge, %sw.bb69.i.if.else112.i_crit_edge
  br label %sw.epilog.i

sw.bb114.i:                                       ; preds = %if.end28
  %pdev115.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %49 = ptrtoint ptr %pdev115.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pdev115.i, align 4
  %revision116.i = getelementptr inbounds %struct.pci_dev, ptr %50, i32 0, i32 12
  %51 = ptrtoint ptr %revision116.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %revision116.i, align 4
  %53 = zext i8 %52 to i64
  call void @__sanitizer_cov_trace_switch(i64 %53, ptr @__sancov_gen_cov_switch_values.87)
  switch i8 %52, label %sw.bb114.i.if.else170.i_crit_edge [
    i8 -127, label %land.lhs.true120.i
    i8 -125, label %land.lhs.true132.i
    i8 -61, label %land.lhs.true163.i
  ]

sw.bb114.i.if.else170.i_crit_edge:                ; preds = %sw.bb114.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else170.i

land.lhs.true120.i:                               ; preds = %sw.bb114.i
  %device122.i = getelementptr inbounds %struct.pci_dev, ptr %50, i32 0, i32 8
  %54 = ptrtoint ptr %device122.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %device122.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26208, i16 %55)
  %cmp124.i = icmp eq i16 %55, 26208
  br i1 %cmp124.i, label %land.lhs.true120.i.sw.epilog.i_crit_edge, label %land.lhs.true120.i.if.else170.i_crit_edge

land.lhs.true120.i.if.else170.i_crit_edge:        ; preds = %land.lhs.true120.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else170.i

land.lhs.true120.i.sw.epilog.i_crit_edge:         ; preds = %land.lhs.true120.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

land.lhs.true132.i:                               ; preds = %sw.bb114.i
  %device134.i = getelementptr inbounds %struct.pci_dev, ptr %50, i32 0, i32 8
  %56 = ptrtoint ptr %device134.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %device134.i, align 2
  %switch.tableidx = add i16 %57, -26208
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %switch.tableidx)
  %58 = icmp ult i16 %switch.tableidx, 8
  br i1 %58, label %switch.lookup, label %land.lhs.true132.i.if.else170.i_crit_edge

land.lhs.true132.i.if.else170.i_crit_edge:        ; preds = %land.lhs.true132.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else170.i

land.lhs.true163.i:                               ; preds = %sw.bb114.i
  %device165.i = getelementptr inbounds %struct.pci_dev, ptr %50, i32 0, i32 8
  %59 = ptrtoint ptr %device165.i to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %device165.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26213, i16 %60)
  %cmp167.i = icmp eq i16 %60, 26213
  br i1 %cmp167.i, label %land.lhs.true163.i.sw.epilog.i_crit_edge, label %land.lhs.true163.i.if.else170.i_crit_edge

land.lhs.true163.i.if.else170.i_crit_edge:        ; preds = %land.lhs.true163.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else170.i

land.lhs.true163.i.sw.epilog.i_crit_edge:         ; preds = %land.lhs.true163.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog.i

if.else170.i:                                     ; preds = %land.lhs.true163.i.if.else170.i_crit_edge, %land.lhs.true132.i.if.else170.i_crit_edge, %land.lhs.true120.i.if.else170.i_crit_edge, %sw.bb114.i.if.else170.i_crit_edge
  br label %sw.epilog.i

do.body.i:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 7665, 0\0A.popsection", ""() #14, !srcloc !271
  unreachable

switch.lookup:                                    ; preds = %land.lhs.true132.i
  call void @__sanitizer_cov_trace_pc() #16
  %61 = sext i16 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [8 x ptr], ptr @switch.table.si_dpm_sw_init, i32 0, i32 %61
  %62 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %62)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %switch.lookup, %if.else170.i, %land.lhs.true163.i.sw.epilog.i_crit_edge, %land.lhs.true120.i.sw.epilog.i_crit_edge, %if.else112.i, %land.lhs.true105.i.sw.epilog.i_crit_edge, %land.lhs.true75.i.sw.epilog.i_crit_edge, %land.lhs.true75.i.sw.epilog.i_crit_edge188, %land.lhs.true75.i.sw.epilog.i_crit_edge189, %land.lhs.true75.i.sw.epilog.i_crit_edge190, %land.lhs.true54.i, %lor.lhs.false48.i.sw.epilog.i_crit_edge, %land.lhs.true36.i.sw.epilog.i_crit_edge, %land.lhs.true36.i.sw.epilog.i_crit_edge187, %land.lhs.true18.i.sw.epilog.i_crit_edge, %land.lhs.true18.i.sw.epilog.i_crit_edge186, %if.else.i, %land.lhs.true.i.sw.epilog.i_crit_edge, %if.end28.sw.epilog.i_crit_edge
  %chip_name.0.i = phi ptr [ @.str.47, %if.else170.i ], [ @.str.44, %if.else112.i ], [ @.str.40, %if.else.i ], [ @.str.38, %if.end28.sw.epilog.i_crit_edge ], [ @.str.39, %land.lhs.true.i.sw.epilog.i_crit_edge ], [ @.str.41, %land.lhs.true36.i.sw.epilog.i_crit_edge ], [ @.str.41, %land.lhs.true36.i.sw.epilog.i_crit_edge187 ], [ @.str.41, %land.lhs.true18.i.sw.epilog.i_crit_edge ], [ @.str.41, %land.lhs.true18.i.sw.epilog.i_crit_edge186 ], [ @.str.43, %land.lhs.true75.i.sw.epilog.i_crit_edge ], [ @.str.43, %land.lhs.true75.i.sw.epilog.i_crit_edge188 ], [ @.str.43, %land.lhs.true75.i.sw.epilog.i_crit_edge189 ], [ @.str.43, %land.lhs.true75.i.sw.epilog.i_crit_edge190 ], [ @.str.43, %land.lhs.true105.i.sw.epilog.i_crit_edge ], [ @.str.45, %land.lhs.true120.i.sw.epilog.i_crit_edge ], [ @.str.46, %land.lhs.true163.i.sw.epilog.i_crit_edge ], [ %38, %land.lhs.true54.i ], [ @.str.42, %lor.lhs.false48.i.sw.epilog.i_crit_edge ], [ %switch.load, %switch.lookup ]
  %call.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fw_name.i, i32 noundef 30, ptr noundef nonnull @.str.48, ptr noundef nonnull %chip_name.0.i) #14
  %fw.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 16
  %63 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %handle, align 8
  %call177.i = call i32 @request_firmware(ptr noundef %fw.i, ptr noundef nonnull %fw_name.i, ptr noundef %64) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call177.i)
  %tobool.not.i = icmp eq i32 %call177.i, 0
  br i1 %tobool.not.i, label %out.i, label %sw.epilog.i.si_dpm_init_microcode.exit_crit_edge

sw.epilog.i.si_dpm_init_microcode.exit_crit_edge: ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_init_microcode.exit

out.i:                                            ; preds = %sw.epilog.i
  %65 = ptrtoint ptr %fw.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %fw.i, align 8
  %call182.i = call i32 @amdgpu_ucode_validate(ptr noundef %66) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call182.i)
  %tobool183.not.i = icmp eq i32 %call182.i, 0
  br i1 %tobool183.not.i, label %do.body, label %out.i.si_dpm_init_microcode.exit_crit_edge

out.i.si_dpm_init_microcode.exit_crit_edge:       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_init_microcode.exit

si_dpm_init_microcode.exit:                       ; preds = %out.i.si_dpm_init_microcode.exit_crit_edge, %sw.epilog.i.si_dpm_init_microcode.exit_crit_edge
  %err.0233.i = phi i32 [ %call182.i, %out.i.si_dpm_init_microcode.exit_crit_edge ], [ %call177.i, %sw.epilog.i.si_dpm_init_microcode.exit_crit_edge ]
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.49, i32 noundef %err.0233.i, ptr noundef nonnull %fw_name.i) #14
  %67 = ptrtoint ptr %fw.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %fw.i, align 8
  call void @release_firmware(ptr noundef %68) #14
  %69 = ptrtoint ptr %fw.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %fw.i, align 8
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %fw_name.i) #14
  br label %cleanup

do.body:                                          ; preds = %out.i
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %fw_name.i) #14
  call void @__init_work(ptr noundef %thermal, i32 noundef 0) #14
  %70 = ptrtoint ptr %thermal to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 -64, ptr %thermal, align 4
  %lockdep_map = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 0, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.33, ptr noundef nonnull @si_dpm_sw_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  %entry48 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 0, i32 1
  %71 = ptrtoint ptr %entry48 to i32
  call void @__asan_store4_noabort(i32 %71)
  store volatile ptr %entry48, ptr %entry48, align 4
  %prev.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 0, i32 1, i32 1
  %72 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %entry48, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35, i32 0, i32 2
  %73 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr @amdgpu_dpm_thermal_work_handler, ptr %func, align 4
  call void @mutex_lock_nested(ptr noundef %pm, i32 noundef 0) #14
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %dividers.i) #14
  %74 = call ptr @memset(ptr %dividers.i, i32 255, i32 32)
  %call1.i.i.i.i = call noalias align 4096 ptr @kmalloc_order_trace(i32 noundef 18476, i32 noundef 3520, i32 noundef 3) #17
  %cmp.i113 = icmp eq ptr %call1.i.i.i.i, null
  br i1 %cmp.i113, label %do.body.dpm_failed_crit_edge, label %if.end.i

do.body.dpm_failed_crit_edge:                     ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %dpm_failed

if.end.i:                                         ; preds = %do.body
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %75 = ptrtoint ptr %priv.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %call1.i.i.i.i, ptr %priv.i, align 4
  %pcie_gen_mask.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 18
  %76 = ptrtoint ptr %pcie_gen_mask.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %pcie_gen_mask.i, align 8
  %and.i = and i32 %77, -65536
  %sys_pcie_mask.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 12
  %78 = ptrtoint ptr %sys_pcie_mask.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %and.i, ptr %sys_pcie_mask.i, align 4
  %force_pcie_gen.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 9
  %79 = ptrtoint ptr %force_pcie_gen.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 65535, ptr %force_pcie_gen.i, align 8
  %pciep_rreg.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 41
  %80 = ptrtoint ptr %pciep_rreg.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %pciep_rreg.i.i, align 8
  %call.i.i = call i32 %81(ptr noundef %handle, i32 noundef 164) #14
  %82 = lshr i32 %call.i.i, 13
  %conv.i.i = and i32 %82, 3
  %boot_pcie_gen.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 10
  %83 = ptrtoint ptr %boot_pcie_gen.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %conv.i.i, ptr %boot_pcie_gen.i, align 4
  %84 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %priv.i, align 4
  %86 = ptrtoint ptr %asic_type.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %asic_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %87)
  %cmp.i.i = icmp eq i32 %87, 2
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.si_set_max_cu_value.exit.i_crit_edge

if.end.i.si_set_max_cu_value.exit.i_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_set_max_cu_value.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  %pdev.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %88 = ptrtoint ptr %pdev.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %pdev.i.i, align 4
  %device.i.i = getelementptr inbounds %struct.pci_dev, ptr %89, i32 0, i32 8
  %90 = ptrtoint ptr %device.i.i to i32
  call void @__asan_load2_noabort(i32 %90)
  %91 = load i16, ptr %device.i.i, align 2
  %switch.tableidx166 = add i16 %91, -26656
  call void @__sanitizer_cov_trace_const_cmp2(i16 32, i16 %switch.tableidx166)
  %92 = icmp ult i16 %switch.tableidx166, 32
  br i1 %92, label %switch.lookup165, label %if.then.i.i.si_set_max_cu_value.exit.i_crit_edge

if.then.i.i.si_set_max_cu_value.exit.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_set_max_cu_value.exit.i

switch.lookup165:                                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %93 = sext i16 %switch.tableidx166 to i32
  %switch.gep167 = getelementptr inbounds [32 x i32], ptr @switch.table.si_dpm_sw_init.81, i32 0, i32 %93
  %94 = ptrtoint ptr %switch.gep167 to i32
  call void @__asan_load4_noabort(i32 %94)
  %switch.load168 = load i32, ptr %switch.gep167, align 4
  br label %si_set_max_cu_value.exit.i

si_set_max_cu_value.exit.i:                       ; preds = %switch.lookup165, %if.then.i.i.si_set_max_cu_value.exit.i_crit_edge, %if.end.i.si_set_max_cu_value.exit.i_crit_edge
  %.sink.i.i = phi i32 [ 0, %if.end.i.si_set_max_cu_value.exit.i_crit_edge ], [ %switch.load168, %switch.lookup165 ], [ 0, %if.then.i.i.si_set_max_cu_value.exit.i_crit_edge ]
  %max_cu.i.i = getelementptr inbounds %struct.si_power_info, ptr %85, i32 0, i32 8
  %95 = ptrtoint ptr %max_cu.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %.sink.i.i, ptr %max_cu.i.i, align 4
  %96 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %vddc.i.i) #14
  %98 = ptrtoint ptr %vddc.i.i to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 -1, ptr %vddc.i.i, align 2, !annotation !272
  %call1.i.i = call i32 @amdgpu_atombios_get_max_vddc(ptr noundef %handle, i8 noundef zeroext 0, i16 noundef zeroext 0, ptr noundef nonnull %vddc.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %si_set_max_cu_value.exit.i.rv770_get_max_vddc.exit.i_crit_edge

si_set_max_cu_value.exit.i.rv770_get_max_vddc.exit.i_crit_edge: ; preds = %si_set_max_cu_value.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rv770_get_max_vddc.exit.i

if.else.i.i:                                      ; preds = %si_set_max_cu_value.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %99 = ptrtoint ptr %vddc.i.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %vddc.i.i, align 2
  br label %rv770_get_max_vddc.exit.i

rv770_get_max_vddc.exit.i:                        ; preds = %if.else.i.i, %si_set_max_cu_value.exit.i.rv770_get_max_vddc.exit.i_crit_edge
  %.sink.i294.i = phi i16 [ %100, %if.else.i.i ], [ 0, %si_set_max_cu_value.exit.i.rv770_get_max_vddc.exit.i_crit_edge ]
  %101 = getelementptr inbounds %struct.rv7xx_power_info, ptr %97, i32 0, i32 24
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_store2_noabort(i32 %102)
  store i16 %.sink.i294.i, ptr %101, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %vddc.i.i) #14
  %103 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %vddc.i295.i) #14
  %105 = ptrtoint ptr %vddc.i295.i to i32
  call void @__asan_store2_noabort(i32 %105)
  store i16 -1, ptr %vddc.i295.i, align 2, !annotation !272
  %call1.i297.i = call i32 @amdgpu_atombios_get_leakage_vddc_based_on_leakage_idx(ptr noundef %handle, ptr noundef nonnull %vddc.i295.i, i16 noundef zeroext -255) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i297.i)
  %tobool.not.i298.i = icmp eq i32 %call1.i297.i, 0
  br i1 %tobool.not.i298.i, label %land.lhs.true.i.i, label %rv770_get_max_vddc.exit.i.for.inc.i.i_crit_edge

rv770_get_max_vddc.exit.i.for.inc.i.i_crit_edge:  ; preds = %rv770_get_max_vddc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %rv770_get_max_vddc.exit.i
  %106 = ptrtoint ptr %vddc.i295.i to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %vddc.i295.i, align 2
  %108 = zext i16 %107 to i64
  call void @__sanitizer_cov_trace_switch(i64 %108, ptr @__sancov_gen_cov_switch_values.88)
  switch i16 %107, label %if.then.i299.i [
    i16 -255, label %land.lhs.true.i.i.for.inc.i.i_crit_edge
    i16 0, label %land.lhs.true.i.i.for.inc.i.i_crit_edge191
  ]

land.lhs.true.i.i.for.inc.i.i_crit_edge191:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

if.then.i299.i:                                   ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 0
  %109 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store2_noabort(i32 %109)
  store i16 %107, ptr %arrayidx.i.i, align 2
  %leakage_index.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 0, i32 1
  %110 = ptrtoint ptr %leakage_index.i.i to i32
  call void @__asan_store2_noabort(i32 %110)
  store i16 -255, ptr %leakage_index.i.i, align 2
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i299.i, %land.lhs.true.i.i.for.inc.i.i_crit_edge, %land.lhs.true.i.i.for.inc.i.i_crit_edge191, %rv770_get_max_vddc.exit.i.for.inc.i.i_crit_edge
  %count.1.i.i = phi i16 [ 0, %rv770_get_max_vddc.exit.i.for.inc.i.i_crit_edge ], [ 1, %if.then.i299.i ], [ 0, %land.lhs.true.i.i.for.inc.i.i_crit_edge ], [ 0, %land.lhs.true.i.i.for.inc.i.i_crit_edge191 ]
  %call1.1.i.i = call i32 @amdgpu_atombios_get_leakage_vddc_based_on_leakage_idx(ptr noundef %handle, ptr noundef nonnull %vddc.i295.i, i16 noundef zeroext -254) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.1.i.i)
  %tobool.not.1.i.i = icmp eq i32 %call1.1.i.i, 0
  br i1 %tobool.not.1.i.i, label %land.lhs.true.1.i.i, label %for.inc.i.i.for.inc.1.i.i_crit_edge

for.inc.i.i.for.inc.1.i.i_crit_edge:              ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1.i.i

land.lhs.true.1.i.i:                              ; preds = %for.inc.i.i
  %111 = ptrtoint ptr %vddc.i295.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %vddc.i295.i, align 2
  %113 = zext i16 %112 to i64
  call void @__sanitizer_cov_trace_switch(i64 %113, ptr @__sancov_gen_cov_switch_values.89)
  switch i16 %112, label %if.then.1.i.i [
    i16 -254, label %land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge
    i16 0, label %land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge192
  ]

land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge192:   ; preds = %land.lhs.true.1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1.i.i

land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge:      ; preds = %land.lhs.true.1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.1.i.i

if.then.1.i.i:                                    ; preds = %land.lhs.true.1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %idxprom.1.i.i = zext i16 %count.1.i.i to i32
  %arrayidx.1.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 %idxprom.1.i.i
  %114 = ptrtoint ptr %arrayidx.1.i.i to i32
  call void @__asan_store2_noabort(i32 %114)
  store i16 %112, ptr %arrayidx.1.i.i, align 2
  %leakage_index.1.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 %idxprom.1.i.i, i32 1
  %115 = ptrtoint ptr %leakage_index.1.i.i to i32
  call void @__asan_store2_noabort(i32 %115)
  store i16 -254, ptr %leakage_index.1.i.i, align 2
  %inc.1.i.i = add nuw nsw i16 %count.1.i.i, 1
  br label %for.inc.1.i.i

for.inc.1.i.i:                                    ; preds = %if.then.1.i.i, %land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge, %land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge192, %for.inc.i.i.for.inc.1.i.i_crit_edge
  %count.1.1.i.i = phi i16 [ %count.1.i.i, %for.inc.i.i.for.inc.1.i.i_crit_edge ], [ %inc.1.i.i, %if.then.1.i.i ], [ %count.1.i.i, %land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge ], [ %count.1.i.i, %land.lhs.true.1.i.i.for.inc.1.i.i_crit_edge192 ]
  %call1.2.i.i = call i32 @amdgpu_atombios_get_leakage_vddc_based_on_leakage_idx(ptr noundef %handle, ptr noundef nonnull %vddc.i295.i, i16 noundef zeroext -253) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.2.i.i)
  %tobool.not.2.i.i = icmp eq i32 %call1.2.i.i, 0
  br i1 %tobool.not.2.i.i, label %land.lhs.true.2.i.i, label %for.inc.1.i.i.for.inc.2.i.i_crit_edge

for.inc.1.i.i.for.inc.2.i.i_crit_edge:            ; preds = %for.inc.1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.2.i.i

land.lhs.true.2.i.i:                              ; preds = %for.inc.1.i.i
  %116 = ptrtoint ptr %vddc.i295.i to i32
  call void @__asan_load2_noabort(i32 %116)
  %117 = load i16, ptr %vddc.i295.i, align 2
  %118 = zext i16 %117 to i64
  call void @__sanitizer_cov_trace_switch(i64 %118, ptr @__sancov_gen_cov_switch_values.90)
  switch i16 %117, label %if.then.2.i.i [
    i16 -253, label %land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge
    i16 0, label %land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge193
  ]

land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge193:   ; preds = %land.lhs.true.2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.2.i.i

land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge:      ; preds = %land.lhs.true.2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.2.i.i

if.then.2.i.i:                                    ; preds = %land.lhs.true.2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %idxprom.2.i.i = zext i16 %count.1.1.i.i to i32
  %arrayidx.2.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 %idxprom.2.i.i
  %119 = ptrtoint ptr %arrayidx.2.i.i to i32
  call void @__asan_store2_noabort(i32 %119)
  store i16 %117, ptr %arrayidx.2.i.i, align 2
  %leakage_index.2.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 %idxprom.2.i.i, i32 1
  %120 = ptrtoint ptr %leakage_index.2.i.i to i32
  call void @__asan_store2_noabort(i32 %120)
  store i16 -253, ptr %leakage_index.2.i.i, align 2
  %inc.2.i.i = add nuw nsw i16 %count.1.1.i.i, 1
  br label %for.inc.2.i.i

for.inc.2.i.i:                                    ; preds = %if.then.2.i.i, %land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge, %land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge193, %for.inc.1.i.i.for.inc.2.i.i_crit_edge
  %count.1.2.i.i = phi i16 [ %count.1.1.i.i, %for.inc.1.i.i.for.inc.2.i.i_crit_edge ], [ %inc.2.i.i, %if.then.2.i.i ], [ %count.1.1.i.i, %land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge ], [ %count.1.1.i.i, %land.lhs.true.2.i.i.for.inc.2.i.i_crit_edge193 ]
  %call1.3.i.i = call i32 @amdgpu_atombios_get_leakage_vddc_based_on_leakage_idx(ptr noundef %handle, ptr noundef nonnull %vddc.i295.i, i16 noundef zeroext -252) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.3.i.i)
  %tobool.not.3.i.i = icmp eq i32 %call1.3.i.i, 0
  br i1 %tobool.not.3.i.i, label %land.lhs.true.3.i.i, label %for.inc.2.i.i.si_get_leakage_vddc.exit.i_crit_edge

for.inc.2.i.i.si_get_leakage_vddc.exit.i_crit_edge: ; preds = %for.inc.2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_leakage_vddc.exit.i

land.lhs.true.3.i.i:                              ; preds = %for.inc.2.i.i
  %121 = ptrtoint ptr %vddc.i295.i to i32
  call void @__asan_load2_noabort(i32 %121)
  %122 = load i16, ptr %vddc.i295.i, align 2
  %123 = zext i16 %122 to i64
  call void @__sanitizer_cov_trace_switch(i64 %123, ptr @__sancov_gen_cov_switch_values.91)
  switch i16 %122, label %if.then.3.i.i [
    i16 -252, label %land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge
    i16 0, label %land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge194
  ]

land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge194: ; preds = %land.lhs.true.3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_leakage_vddc.exit.i

land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge: ; preds = %land.lhs.true.3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_leakage_vddc.exit.i

if.then.3.i.i:                                    ; preds = %land.lhs.true.3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %idxprom.3.i.i = zext i16 %count.1.2.i.i to i32
  %arrayidx.3.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 %idxprom.3.i.i
  %124 = ptrtoint ptr %arrayidx.3.i.i to i32
  call void @__asan_store2_noabort(i32 %124)
  store i16 %122, ptr %arrayidx.3.i.i, align 2
  %leakage_index.3.i.i = getelementptr %struct.si_power_info, ptr %104, i32 0, i32 5, i32 1, i32 %idxprom.3.i.i, i32 1
  %125 = ptrtoint ptr %leakage_index.3.i.i to i32
  call void @__asan_store2_noabort(i32 %125)
  store i16 -252, ptr %leakage_index.3.i.i, align 2
  %inc.3.i.i = add nuw nsw i16 %count.1.2.i.i, 1
  br label %si_get_leakage_vddc.exit.i

si_get_leakage_vddc.exit.i:                       ; preds = %if.then.3.i.i, %land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge, %land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge194, %for.inc.2.i.i.si_get_leakage_vddc.exit.i_crit_edge
  %count.1.3.i.i = phi i16 [ %count.1.2.i.i, %for.inc.2.i.i.si_get_leakage_vddc.exit.i_crit_edge ], [ %inc.3.i.i, %if.then.3.i.i ], [ %count.1.2.i.i, %land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge ], [ %count.1.2.i.i, %land.lhs.true.3.i.i.si_get_leakage_vddc.exit.i_crit_edge194 ]
  %leakage_voltage17.i.i = getelementptr inbounds %struct.si_power_info, ptr %104, i32 0, i32 5
  %126 = ptrtoint ptr %leakage_voltage17.i.i to i32
  call void @__asan_store2_noabort(i32 %126)
  store i16 %count.1.3.i.i, ptr %leakage_voltage17.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %vddc.i295.i) #14
  %dyn_state.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21
  %127 = ptrtoint ptr %dyn_state.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %dyn_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %128)
  %cmp67.not.i.i.i = icmp eq i32 %128, 0
  br i1 %cmp67.not.i.i.i, label %si_get_leakage_vddc.exit.i.if.end.i.i_crit_edge, label %for.body.lr.ph.i.i.i

si_get_leakage_vddc.exit.i.if.end.i.i_crit_edge:  ; preds = %si_get_leakage_vddc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

for.body.lr.ph.i.i.i:                             ; preds = %si_get_leakage_vddc.exit.i
  %entries.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %for.body.lr.ph.i.i.i
  %i.068.i.i.i = phi i32 [ 0, %for.body.lr.ph.i.i.i ], [ %inc.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ]
  %129 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %entries.i.i.i, align 4
  %v.i.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %130, i32 %i.068.i.i.i, i32 1
  %131 = ptrtoint ptr %v.i.i.i to i32
  call void @__asan_load2_noabort(i32 %131)
  %132 = load i16, ptr %v.i.i.i, align 4
  %conv.i.i.i = zext i16 %132 to i32
  %133 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %priv.i, align 4
  %and.i.i.i.i = and i32 %conv.i.i.i, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 65280, i32 %and.i.i.i.i)
  %cmp1.not.i.i.i.i = icmp ne i32 %and.i.i.i.i, 65280
  %and4.i.i.i.i = and i32 %conv.i.i.i, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and4.i.i.i.i)
  %cmp5.i.i.i.i = icmp ugt i32 %and4.i.i.i.i, 5
  %or.cond33.i.i.i.i = or i1 %cmp5.i.i.i.i, %cmp1.not.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -255, i16 %132)
  %cmp8.i.i.i.i = icmp ult i16 %132, -255
  %or.cond34.i.i.i.i = or i1 %cmp8.i.i.i.i, %or.cond33.i.i.i.i
  br i1 %or.cond34.i.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge, label %for.cond.preheader.i.i.i.i

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i.i

for.cond.preheader.i.i.i.i:                       ; preds = %for.body.i.i.i
  %leakage_voltage11.i.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %134, i32 0, i32 5
  %135 = ptrtoint ptr %leakage_voltage11.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %135)
  %136 = load i16, ptr %leakage_voltage11.i.i.i.i, align 4
  %conv.i.i.i.i = zext i16 %136 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %136)
  %cmp1236.not.i.i.i.i = icmp eq i16 %136, 0
  br i1 %cmp1236.not.i.i.i.i, label %for.cond.preheader.i.i.i.i.if.then.i300.i_crit_edge, label %for.cond.preheader.i.i.i.i.for.body.i.i.i.i_crit_edge

for.cond.preheader.i.i.i.i.for.body.i.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i.i
  br label %for.body.i.i.i.i

for.cond.preheader.i.i.i.i.if.then.i300.i_crit_edge: ; preds = %for.cond.preheader.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i300.i

for.body.i.i.i.i:                                 ; preds = %for.inc.i.i.i.i.for.body.i.i.i.i_crit_edge, %for.cond.preheader.i.i.i.i.for.body.i.i.i.i_crit_edge
  %i.037.i.i.i.i = phi i32 [ %inc.i.i.i.i, %for.inc.i.i.i.i.for.body.i.i.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.i.for.body.i.i.i.i_crit_edge ]
  %leakage_index.i.i.i.i = getelementptr %struct.si_power_info, ptr %134, i32 0, i32 5, i32 1, i32 %i.037.i.i.i.i, i32 1
  %137 = ptrtoint ptr %leakage_index.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %leakage_index.i.i.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %138, i16 %132)
  %cmp16.i.i.i.i = icmp eq i16 %138, %132
  br i1 %cmp16.i.i.i.i, label %sw.bb.i.i.i, label %for.inc.i.i.i.i

for.inc.i.i.i.i:                                  ; preds = %for.body.i.i.i.i
  %inc.i.i.i.i = add nuw nsw i32 %i.037.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i32 %inc.i.i.i.i, %conv.i.i.i.i
  br i1 %exitcond.not.i.i.i.i, label %for.inc.i.i.i.i.if.then.i300.i_crit_edge, label %for.inc.i.i.i.i.for.body.i.i.i.i_crit_edge

for.inc.i.i.i.i.for.body.i.i.i.i_crit_edge:       ; preds = %for.inc.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i.i

for.inc.i.i.i.i.if.then.i300.i_crit_edge:         ; preds = %for.inc.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i300.i

sw.bb.i.i.i:                                      ; preds = %for.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i.i.i = getelementptr %struct.si_power_info, ptr %134, i32 0, i32 5, i32 1, i32 %i.037.i.i.i.i
  %139 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %139)
  %140 = load i16, ptr %arrayidx.i.i.i.i, align 2
  %141 = ptrtoint ptr %v.i.i.i to i32
  call void @__asan_store2_noabort(i32 %141)
  store i16 %140, ptr %v.i.i.i, align 4
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %sw.bb.i.i.i, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %inc.i.i.i = add nuw i32 %i.068.i.i.i, 1
  %142 = ptrtoint ptr %dyn_state.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %dyn_state.i.i, align 4
  %cmp.i.i.i = icmp ult i32 %inc.i.i.i, %143
  br i1 %cmp.i.i.i, label %for.inc.i.i.i.for.body.i.i.i_crit_edge, label %for.end.i.i.i

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i
  %phi.bo.i.i.i = add i32 %143, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %phi.bo.i.i.i)
  %cmp869.i.i.i = icmp sgt i32 %phi.bo.i.i.i, -1
  br i1 %cmp869.i.i.i, label %for.end.i.i.i.for.body10.i.i.i_crit_edge, label %for.end.i.i.i.if.end.i.i_crit_edge

for.end.i.i.i.if.end.i.i_crit_edge:               ; preds = %for.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

for.end.i.i.i.for.body10.i.i.i_crit_edge:         ; preds = %for.end.i.i.i
  br label %for.body10.i.i.i

for.body10.i.i.i:                                 ; preds = %for.body10.i.i.i.for.body10.i.i.i_crit_edge, %for.end.i.i.i.for.body10.i.i.i_crit_edge
  %j.070.i.i.i = phi i32 [ %dec.i.i.i, %for.body10.i.i.i.for.body10.i.i.i_crit_edge ], [ %phi.bo.i.i.i, %for.end.i.i.i.for.body10.i.i.i_crit_edge ]
  %144 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %entries.i.i.i, align 4
  %v13.i.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %145, i32 %j.070.i.i.i, i32 1
  %146 = ptrtoint ptr %v13.i.i.i to i32
  call void @__asan_load2_noabort(i32 %146)
  %147 = load i16, ptr %v13.i.i.i, align 4
  %add.i.i.i = add nuw i32 %j.070.i.i.i, 1
  %v17.i.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %145, i32 %add.i.i.i, i32 1
  %148 = ptrtoint ptr %v17.i.i.i to i32
  call void @__asan_load2_noabort(i32 %148)
  %149 = load i16, ptr %v17.i.i.i, align 4
  %150 = call i16 @llvm.umin.i16(i16 %147, i16 %149) #14
  %151 = ptrtoint ptr %v13.i.i.i to i32
  call void @__asan_store2_noabort(i32 %151)
  store i16 %150, ptr %v13.i.i.i, align 4
  %dec.i.i.i = add nsw i32 %j.070.i.i.i, -1
  %cmp8.not.i.i.i = icmp eq i32 %j.070.i.i.i, 0
  br i1 %cmp8.not.i.i.i, label %for.body10.i.i.i.if.end.i.i_crit_edge, label %for.body10.i.i.i.for.body10.i.i.i_crit_edge

for.body10.i.i.i.for.body10.i.i.i_crit_edge:      ; preds = %for.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body10.i.i.i

for.body10.i.i.i.if.end.i.i_crit_edge:            ; preds = %for.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i

if.then.i300.i:                                   ; preds = %for.inc.i.i.i.i.if.then.i300.i_crit_edge, %for.cond.preheader.i.i.i.i.if.then.i300.i_crit_edge
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.50) #14
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i300.i, %for.body10.i.i.i.if.end.i.i_crit_edge, %for.end.i.i.i.if.end.i.i_crit_edge, %si_get_leakage_vddc.exit.i.if.end.i.i_crit_edge
  %vddc_dependency_on_mclk.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 2
  %152 = ptrtoint ptr %vddc_dependency_on_mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %vddc_dependency_on_mclk.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %cmp67.not.i2.i.i = icmp eq i32 %153, 0
  br i1 %cmp67.not.i2.i.i, label %if.end.i.i.if.end7.i.i_crit_edge, label %for.body.lr.ph.i6.i.i

if.end.i.i.if.end7.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7.i.i

for.body.lr.ph.i6.i.i:                            ; preds = %if.end.i.i
  %entries.i4.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 2, i32 1
  br label %for.body.i17.i.i

for.body.i17.i.i:                                 ; preds = %for.inc.i33.i.i.for.body.i17.i.i_crit_edge, %for.body.lr.ph.i6.i.i
  %i.068.i7.i.i = phi i32 [ 0, %for.body.lr.ph.i6.i.i ], [ %inc.i31.i.i, %for.inc.i33.i.i.for.body.i17.i.i_crit_edge ]
  %154 = ptrtoint ptr %entries.i4.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %entries.i4.i.i, align 4
  %v.i8.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %155, i32 %i.068.i7.i.i, i32 1
  %156 = ptrtoint ptr %v.i8.i.i to i32
  call void @__asan_load2_noabort(i32 %156)
  %157 = load i16, ptr %v.i8.i.i, align 4
  %conv.i9.i.i = zext i16 %157 to i32
  %158 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %priv.i, align 4
  %and.i.i10.i.i = and i32 %conv.i9.i.i, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 65280, i32 %and.i.i10.i.i)
  %cmp1.not.i.i11.i.i = icmp ne i32 %and.i.i10.i.i, 65280
  %and4.i.i12.i.i = and i32 %conv.i9.i.i, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and4.i.i12.i.i)
  %cmp5.i.i13.i.i = icmp ugt i32 %and4.i.i12.i.i, 5
  %or.cond33.i.i14.i.i = or i1 %cmp5.i.i13.i.i, %cmp1.not.i.i11.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -255, i16 %157)
  %cmp8.i.i15.i.i = icmp ult i16 %157, -255
  %or.cond34.i.i16.i.i = or i1 %cmp8.i.i15.i.i, %or.cond33.i.i14.i.i
  br i1 %or.cond34.i.i16.i.i, label %for.body.i17.i.i.for.inc.i33.i.i_crit_edge, label %for.cond.preheader.i.i21.i.i

for.body.i17.i.i.for.inc.i33.i.i_crit_edge:       ; preds = %for.body.i17.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i33.i.i

for.cond.preheader.i.i21.i.i:                     ; preds = %for.body.i17.i.i
  %leakage_voltage11.i.i18.i.i = getelementptr inbounds %struct.si_power_info, ptr %159, i32 0, i32 5
  %160 = ptrtoint ptr %leakage_voltage11.i.i18.i.i to i32
  call void @__asan_load2_noabort(i32 %160)
  %161 = load i16, ptr %leakage_voltage11.i.i18.i.i, align 4
  %conv.i.i19.i.i = zext i16 %161 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %161)
  %cmp1236.not.i.i20.i.i = icmp eq i16 %161, 0
  br i1 %cmp1236.not.i.i20.i.i, label %for.cond.preheader.i.i21.i.i.if.then6.i.i_crit_edge, label %for.cond.preheader.i.i21.i.i.for.body.i.i25.i.i_crit_edge

for.cond.preheader.i.i21.i.i.for.body.i.i25.i.i_crit_edge: ; preds = %for.cond.preheader.i.i21.i.i
  br label %for.body.i.i25.i.i

for.cond.preheader.i.i21.i.i.if.then6.i.i_crit_edge: ; preds = %for.cond.preheader.i.i21.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6.i.i

for.body.i.i25.i.i:                               ; preds = %for.inc.i.i28.i.i.for.body.i.i25.i.i_crit_edge, %for.cond.preheader.i.i21.i.i.for.body.i.i25.i.i_crit_edge
  %i.037.i.i22.i.i = phi i32 [ %inc.i.i26.i.i, %for.inc.i.i28.i.i.for.body.i.i25.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i21.i.i.for.body.i.i25.i.i_crit_edge ]
  %leakage_index.i.i23.i.i = getelementptr %struct.si_power_info, ptr %159, i32 0, i32 5, i32 1, i32 %i.037.i.i22.i.i, i32 1
  %162 = ptrtoint ptr %leakage_index.i.i23.i.i to i32
  call void @__asan_load2_noabort(i32 %162)
  %163 = load i16, ptr %leakage_index.i.i23.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %163, i16 %157)
  %cmp16.i.i24.i.i = icmp eq i16 %163, %157
  br i1 %cmp16.i.i24.i.i, label %sw.bb.i30.i.i, label %for.inc.i.i28.i.i

for.inc.i.i28.i.i:                                ; preds = %for.body.i.i25.i.i
  %inc.i.i26.i.i = add nuw nsw i32 %i.037.i.i22.i.i, 1
  %exitcond.not.i.i27.i.i = icmp eq i32 %inc.i.i26.i.i, %conv.i.i19.i.i
  br i1 %exitcond.not.i.i27.i.i, label %for.inc.i.i28.i.i.if.then6.i.i_crit_edge, label %for.inc.i.i28.i.i.for.body.i.i25.i.i_crit_edge

for.inc.i.i28.i.i.for.body.i.i25.i.i_crit_edge:   ; preds = %for.inc.i.i28.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i25.i.i

for.inc.i.i28.i.i.if.then6.i.i_crit_edge:         ; preds = %for.inc.i.i28.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6.i.i

sw.bb.i30.i.i:                                    ; preds = %for.body.i.i25.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i29.i.i = getelementptr %struct.si_power_info, ptr %159, i32 0, i32 5, i32 1, i32 %i.037.i.i22.i.i
  %164 = ptrtoint ptr %arrayidx.i.i29.i.i to i32
  call void @__asan_load2_noabort(i32 %164)
  %165 = load i16, ptr %arrayidx.i.i29.i.i, align 2
  %166 = ptrtoint ptr %v.i8.i.i to i32
  call void @__asan_store2_noabort(i32 %166)
  store i16 %165, ptr %v.i8.i.i, align 4
  br label %for.inc.i33.i.i

for.inc.i33.i.i:                                  ; preds = %sw.bb.i30.i.i, %for.body.i17.i.i.for.inc.i33.i.i_crit_edge
  %inc.i31.i.i = add nuw i32 %i.068.i7.i.i, 1
  %167 = ptrtoint ptr %vddc_dependency_on_mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %vddc_dependency_on_mclk.i.i, align 4
  %cmp.i32.i.i = icmp ult i32 %inc.i31.i.i, %168
  br i1 %cmp.i32.i.i, label %for.inc.i33.i.i.for.body.i17.i.i_crit_edge, label %for.end.i36.i.i

for.inc.i33.i.i.for.body.i17.i.i_crit_edge:       ; preds = %for.inc.i33.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i17.i.i

for.end.i36.i.i:                                  ; preds = %for.inc.i33.i.i
  %phi.bo.i34.i.i = add i32 %168, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %phi.bo.i34.i.i)
  %cmp869.i35.i.i = icmp sgt i32 %phi.bo.i34.i.i, -1
  br i1 %cmp869.i35.i.i, label %for.end.i36.i.i.for.body10.i45.i.i_crit_edge, label %for.end.i36.i.i.if.end7.i.i_crit_edge

for.end.i36.i.i.if.end7.i.i_crit_edge:            ; preds = %for.end.i36.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7.i.i

for.end.i36.i.i.for.body10.i45.i.i_crit_edge:     ; preds = %for.end.i36.i.i
  br label %for.body10.i45.i.i

for.body10.i45.i.i:                               ; preds = %for.body10.i45.i.i.for.body10.i45.i.i_crit_edge, %for.end.i36.i.i.for.body10.i45.i.i_crit_edge
  %j.070.i39.i.i = phi i32 [ %dec.i43.i.i, %for.body10.i45.i.i.for.body10.i45.i.i_crit_edge ], [ %phi.bo.i34.i.i, %for.end.i36.i.i.for.body10.i45.i.i_crit_edge ]
  %169 = ptrtoint ptr %entries.i4.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %entries.i4.i.i, align 4
  %v13.i40.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %170, i32 %j.070.i39.i.i, i32 1
  %171 = ptrtoint ptr %v13.i40.i.i to i32
  call void @__asan_load2_noabort(i32 %171)
  %172 = load i16, ptr %v13.i40.i.i, align 4
  %add.i41.i.i = add nuw i32 %j.070.i39.i.i, 1
  %v17.i42.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %170, i32 %add.i41.i.i, i32 1
  %173 = ptrtoint ptr %v17.i42.i.i to i32
  call void @__asan_load2_noabort(i32 %173)
  %174 = load i16, ptr %v17.i42.i.i, align 4
  %175 = call i16 @llvm.umin.i16(i16 %172, i16 %174) #14
  %176 = ptrtoint ptr %v13.i40.i.i to i32
  call void @__asan_store2_noabort(i32 %176)
  store i16 %175, ptr %v13.i40.i.i, align 4
  %dec.i43.i.i = add nsw i32 %j.070.i39.i.i, -1
  %cmp8.not.i44.i.i = icmp eq i32 %j.070.i39.i.i, 0
  br i1 %cmp8.not.i44.i.i, label %for.body10.i45.i.i.if.end7.i.i_crit_edge, label %for.body10.i45.i.i.for.body10.i45.i.i_crit_edge

for.body10.i45.i.i.for.body10.i45.i.i_crit_edge:  ; preds = %for.body10.i45.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body10.i45.i.i

for.body10.i45.i.i.if.end7.i.i_crit_edge:         ; preds = %for.body10.i45.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7.i.i

if.then6.i.i:                                     ; preds = %for.inc.i.i28.i.i.if.then6.i.i_crit_edge, %for.cond.preheader.i.i21.i.i.if.then6.i.i_crit_edge
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.51) #14
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.then6.i.i, %for.body10.i45.i.i.if.end7.i.i_crit_edge, %for.end.i36.i.i.if.end7.i.i_crit_edge, %if.end.i.i.if.end7.i.i_crit_edge
  %vddci_dependency_on_mclk.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 1
  %177 = ptrtoint ptr %vddci_dependency_on_mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %vddci_dependency_on_mclk.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %178)
  %cmp67.not.i49.i.i = icmp eq i32 %178, 0
  br i1 %cmp67.not.i49.i.i, label %if.end7.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge, label %for.body.lr.ph.i53.i.i

if.end7.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge: ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_patch_dependency_tables_based_on_leakage.exit.i

for.body.lr.ph.i53.i.i:                           ; preds = %if.end7.i.i
  %entries.i51.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 1, i32 1
  br label %for.body.i64.i.i

for.body.i64.i.i:                                 ; preds = %for.inc.i80.i.i.for.body.i64.i.i_crit_edge, %for.body.lr.ph.i53.i.i
  %i.068.i54.i.i = phi i32 [ 0, %for.body.lr.ph.i53.i.i ], [ %inc.i78.i.i, %for.inc.i80.i.i.for.body.i64.i.i_crit_edge ]
  %179 = ptrtoint ptr %entries.i51.i.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %entries.i51.i.i, align 4
  %v.i55.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %180, i32 %i.068.i54.i.i, i32 1
  %181 = ptrtoint ptr %v.i55.i.i to i32
  call void @__asan_load2_noabort(i32 %181)
  %182 = load i16, ptr %v.i55.i.i, align 4
  %conv.i56.i.i = zext i16 %182 to i32
  %183 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %priv.i, align 4
  %and.i.i57.i.i = and i32 %conv.i56.i.i, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 65280, i32 %and.i.i57.i.i)
  %cmp1.not.i.i58.i.i = icmp ne i32 %and.i.i57.i.i, 65280
  %and4.i.i59.i.i = and i32 %conv.i56.i.i, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and4.i.i59.i.i)
  %cmp5.i.i60.i.i = icmp ugt i32 %and4.i.i59.i.i, 5
  %or.cond33.i.i61.i.i = or i1 %cmp5.i.i60.i.i, %cmp1.not.i.i58.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -255, i16 %182)
  %cmp8.i.i62.i.i = icmp ult i16 %182, -255
  %or.cond34.i.i63.i.i = or i1 %cmp8.i.i62.i.i, %or.cond33.i.i61.i.i
  br i1 %or.cond34.i.i63.i.i, label %for.body.i64.i.i.for.inc.i80.i.i_crit_edge, label %for.cond.preheader.i.i68.i.i

for.body.i64.i.i.for.inc.i80.i.i_crit_edge:       ; preds = %for.body.i64.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i80.i.i

for.cond.preheader.i.i68.i.i:                     ; preds = %for.body.i64.i.i
  %leakage_voltage11.i.i65.i.i = getelementptr inbounds %struct.si_power_info, ptr %184, i32 0, i32 5
  %185 = ptrtoint ptr %leakage_voltage11.i.i65.i.i to i32
  call void @__asan_load2_noabort(i32 %185)
  %186 = load i16, ptr %leakage_voltage11.i.i65.i.i, align 4
  %conv.i.i66.i.i = zext i16 %186 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %186)
  %cmp1236.not.i.i67.i.i = icmp eq i16 %186, 0
  br i1 %cmp1236.not.i.i67.i.i, label %for.cond.preheader.i.i68.i.i.if.then13.i.i_crit_edge, label %for.cond.preheader.i.i68.i.i.for.body.i.i72.i.i_crit_edge

for.cond.preheader.i.i68.i.i.for.body.i.i72.i.i_crit_edge: ; preds = %for.cond.preheader.i.i68.i.i
  br label %for.body.i.i72.i.i

for.cond.preheader.i.i68.i.i.if.then13.i.i_crit_edge: ; preds = %for.cond.preheader.i.i68.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i.i

for.body.i.i72.i.i:                               ; preds = %for.inc.i.i75.i.i.for.body.i.i72.i.i_crit_edge, %for.cond.preheader.i.i68.i.i.for.body.i.i72.i.i_crit_edge
  %i.037.i.i69.i.i = phi i32 [ %inc.i.i73.i.i, %for.inc.i.i75.i.i.for.body.i.i72.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i68.i.i.for.body.i.i72.i.i_crit_edge ]
  %leakage_index.i.i70.i.i = getelementptr %struct.si_power_info, ptr %184, i32 0, i32 5, i32 1, i32 %i.037.i.i69.i.i, i32 1
  %187 = ptrtoint ptr %leakage_index.i.i70.i.i to i32
  call void @__asan_load2_noabort(i32 %187)
  %188 = load i16, ptr %leakage_index.i.i70.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %188, i16 %182)
  %cmp16.i.i71.i.i = icmp eq i16 %188, %182
  br i1 %cmp16.i.i71.i.i, label %sw.bb.i77.i.i, label %for.inc.i.i75.i.i

for.inc.i.i75.i.i:                                ; preds = %for.body.i.i72.i.i
  %inc.i.i73.i.i = add nuw nsw i32 %i.037.i.i69.i.i, 1
  %exitcond.not.i.i74.i.i = icmp eq i32 %inc.i.i73.i.i, %conv.i.i66.i.i
  br i1 %exitcond.not.i.i74.i.i, label %for.inc.i.i75.i.i.if.then13.i.i_crit_edge, label %for.inc.i.i75.i.i.for.body.i.i72.i.i_crit_edge

for.inc.i.i75.i.i.for.body.i.i72.i.i_crit_edge:   ; preds = %for.inc.i.i75.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i72.i.i

for.inc.i.i75.i.i.if.then13.i.i_crit_edge:        ; preds = %for.inc.i.i75.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i.i

sw.bb.i77.i.i:                                    ; preds = %for.body.i.i72.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i76.i.i = getelementptr %struct.si_power_info, ptr %184, i32 0, i32 5, i32 1, i32 %i.037.i.i69.i.i
  %189 = ptrtoint ptr %arrayidx.i.i76.i.i to i32
  call void @__asan_load2_noabort(i32 %189)
  %190 = load i16, ptr %arrayidx.i.i76.i.i, align 2
  %191 = ptrtoint ptr %v.i55.i.i to i32
  call void @__asan_store2_noabort(i32 %191)
  store i16 %190, ptr %v.i55.i.i, align 4
  br label %for.inc.i80.i.i

for.inc.i80.i.i:                                  ; preds = %sw.bb.i77.i.i, %for.body.i64.i.i.for.inc.i80.i.i_crit_edge
  %inc.i78.i.i = add nuw i32 %i.068.i54.i.i, 1
  %192 = ptrtoint ptr %vddci_dependency_on_mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %vddci_dependency_on_mclk.i.i, align 4
  %cmp.i79.i.i = icmp ult i32 %inc.i78.i.i, %193
  br i1 %cmp.i79.i.i, label %for.inc.i80.i.i.for.body.i64.i.i_crit_edge, label %for.end.i83.i.i

for.inc.i80.i.i.for.body.i64.i.i_crit_edge:       ; preds = %for.inc.i80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i64.i.i

for.end.i83.i.i:                                  ; preds = %for.inc.i80.i.i
  %phi.bo.i81.i.i = add i32 %193, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %phi.bo.i81.i.i)
  %cmp869.i82.i.i = icmp sgt i32 %phi.bo.i81.i.i, -1
  br i1 %cmp869.i82.i.i, label %for.end.i83.i.i.for.body10.i92.i.i_crit_edge, label %for.end.i83.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge

for.end.i83.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge: ; preds = %for.end.i83.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_patch_dependency_tables_based_on_leakage.exit.i

for.end.i83.i.i.for.body10.i92.i.i_crit_edge:     ; preds = %for.end.i83.i.i
  br label %for.body10.i92.i.i

for.body10.i92.i.i:                               ; preds = %for.body10.i92.i.i.for.body10.i92.i.i_crit_edge, %for.end.i83.i.i.for.body10.i92.i.i_crit_edge
  %j.070.i86.i.i = phi i32 [ %dec.i90.i.i, %for.body10.i92.i.i.for.body10.i92.i.i_crit_edge ], [ %phi.bo.i81.i.i, %for.end.i83.i.i.for.body10.i92.i.i_crit_edge ]
  %194 = ptrtoint ptr %entries.i51.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %entries.i51.i.i, align 4
  %v13.i87.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %195, i32 %j.070.i86.i.i, i32 1
  %196 = ptrtoint ptr %v13.i87.i.i to i32
  call void @__asan_load2_noabort(i32 %196)
  %197 = load i16, ptr %v13.i87.i.i, align 4
  %add.i88.i.i = add nuw i32 %j.070.i86.i.i, 1
  %v17.i89.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %195, i32 %add.i88.i.i, i32 1
  %198 = ptrtoint ptr %v17.i89.i.i to i32
  call void @__asan_load2_noabort(i32 %198)
  %199 = load i16, ptr %v17.i89.i.i, align 4
  %200 = call i16 @llvm.umin.i16(i16 %197, i16 %199) #14
  %201 = ptrtoint ptr %v13.i87.i.i to i32
  call void @__asan_store2_noabort(i32 %201)
  store i16 %200, ptr %v13.i87.i.i, align 4
  %dec.i90.i.i = add nsw i32 %j.070.i86.i.i, -1
  %cmp8.not.i91.i.i = icmp eq i32 %j.070.i86.i.i, 0
  br i1 %cmp8.not.i91.i.i, label %for.body10.i92.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge, label %for.body10.i92.i.i.for.body10.i92.i.i_crit_edge

for.body10.i92.i.i.for.body10.i92.i.i_crit_edge:  ; preds = %for.body10.i92.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body10.i92.i.i

for.body10.i92.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge: ; preds = %for.body10.i92.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_patch_dependency_tables_based_on_leakage.exit.i

if.then13.i.i:                                    ; preds = %for.inc.i.i75.i.i.if.then13.i.i_crit_edge, %for.cond.preheader.i.i68.i.i.if.then13.i.i_crit_edge
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.52) #14
  br label %si_patch_dependency_tables_based_on_leakage.exit.i

si_patch_dependency_tables_based_on_leakage.exit.i: ; preds = %if.then13.i.i, %for.body10.i92.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge, %for.end.i83.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge, %if.end7.i.i.si_patch_dependency_tables_based_on_leakage.exit.i_crit_edge
  %acpi_vddc.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 33
  %202 = ptrtoint ptr %acpi_vddc.i to i32
  call void @__asan_store2_noabort(i32 %202)
  store i16 0, ptr %acpi_vddc.i, align 8
  %acpi_vddci.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 14
  %203 = ptrtoint ptr %acpi_vddci.i to i32
  call void @__asan_store2_noabort(i32 %203)
  store i16 0, ptr %acpi_vddci.i, align 2
  %min_vddc_in_table.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 26
  %204 = ptrtoint ptr %min_vddc_in_table.i to i32
  call void @__asan_store2_noabort(i32 %204)
  store i16 0, ptr %min_vddc_in_table.i, align 4
  %max_vddc_in_table.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 25
  %205 = ptrtoint ptr %max_vddc_in_table.i to i32
  call void @__asan_store2_noabort(i32 %205)
  store i16 0, ptr %max_vddc_in_table.i, align 2
  %call4.i = call i32 @amdgpu_get_platform_caps(ptr noundef %handle) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i114 = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i114, label %if.end6.i, label %si_patch_dependency_tables_based_on_leakage.exit.i.dpm_failed_crit_edge

si_patch_dependency_tables_based_on_leakage.exit.i.dpm_failed_crit_edge: ; preds = %si_patch_dependency_tables_based_on_leakage.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dpm_failed

if.end6.i:                                        ; preds = %si_patch_dependency_tables_based_on_leakage.exit.i
  %call7.i = call i32 @amdgpu_parse_extended_power_table(ptr noundef %handle) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end10.i, label %if.end6.i.dpm_failed_crit_edge

if.end6.i.dpm_failed_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dpm_failed

if.end10.i:                                       ; preds = %if.end6.i
  %mode_info1.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 79
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %data_offset.i.i) #14
  %206 = ptrtoint ptr %data_offset.i.i to i32
  call void @__asan_store2_noabort(i32 %206)
  store i16 -1, ptr %data_offset.i.i, align 2, !annotation !272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %frev.i.i) #14
  %207 = ptrtoint ptr %frev.i.i to i32
  call void @__asan_store1_noabort(i32 %207)
  store i8 -1, ptr %frev.i.i, align 1, !annotation !272
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %crev.i.i) #14
  %208 = ptrtoint ptr %crev.i.i to i32
  call void @__asan_store1_noabort(i32 %208)
  store i8 -1, ptr %crev.i.i, align 1, !annotation !272
  %209 = ptrtoint ptr %mode_info1.i.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %mode_info1.i.i, align 4
  %call.i301.i = call zeroext i1 @amdgpu_atom_parse_data_header(ptr noundef %210, i32 noundef 15, ptr noundef null, ptr noundef nonnull %frev.i.i, ptr noundef nonnull %crev.i.i, ptr noundef nonnull %data_offset.i.i) #14
  br i1 %call.i301.i, label %if.end.i303.i, label %if.end10.i.si_parse_power_table.exit.thread.i_crit_edge

if.end10.i.si_parse_power_table.exit.thread.i_crit_edge: ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_parse_power_table.exit.thread.i

if.end.i303.i:                                    ; preds = %if.end10.i
  %211 = ptrtoint ptr %mode_info1.i.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %mode_info1.i.i, align 4
  %bios.i.i = getelementptr inbounds %struct.atom_context, ptr %212, i32 0, i32 2
  %213 = ptrtoint ptr %bios.i.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %bios.i.i, align 4
  %215 = ptrtoint ptr %data_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %215)
  %216 = load i16, ptr %data_offset.i.i, align 2
  %conv.i302.i = zext i16 %216 to i32
  %add.ptr.i.i = getelementptr i8, ptr %214, i32 %conv.i302.i
  call void @amdgpu_add_thermal_controller(ptr noundef %handle) #14
  %217 = ptrtoint ptr %mode_info1.i.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %mode_info1.i.i, align 4
  %bios4.i.i = getelementptr inbounds %struct.atom_context, ptr %218, i32 0, i32 2
  %219 = ptrtoint ptr %bios4.i.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %bios4.i.i, align 4
  %221 = ptrtoint ptr %data_offset.i.i to i32
  call void @__asan_load2_noabort(i32 %221)
  %222 = load i16, ptr %data_offset.i.i, align 2
  %conv5.i.i = zext i16 %222 to i32
  %add.ptr6.i.i = getelementptr i8, ptr %220, i32 %conv5.i.i
  %usStateArrayOffset.i.i = getelementptr inbounds %struct._ATOM_PPLIB_POWERPLAYTABLE, ptr %add.ptr.i.i, i32 0, i32 6
  %223 = ptrtoint ptr %usStateArrayOffset.i.i to i32
  call void @__asan_loadN_noabort(i32 %223, i32 2)
  %224 = load i16, ptr %usStateArrayOffset.i.i, align 1
  %225 = call i16 @llvm.bswap.i16(i16 %224) #14
  %conv7.i.i = zext i16 %225 to i32
  %add.ptr8.i.i = getelementptr i8, ptr %add.ptr6.i.i, i32 %conv7.i.i
  %usClockInfoArrayOffset.i.i = getelementptr inbounds %struct._ATOM_PPLIB_POWERPLAYTABLE, ptr %add.ptr.i.i, i32 0, i32 7
  %226 = ptrtoint ptr %usClockInfoArrayOffset.i.i to i32
  call void @__asan_loadN_noabort(i32 %226, i32 2)
  %227 = load i16, ptr %usClockInfoArrayOffset.i.i, align 1
  %228 = call i16 @llvm.bswap.i16(i16 %227) #14
  %conv13.i.i = zext i16 %228 to i32
  %add.ptr14.i.i = getelementptr i8, ptr %add.ptr6.i.i, i32 %conv13.i.i
  %usNonClockInfoArrayOffset.i.i = getelementptr inbounds %struct._ATOM_PPLIB_POWERPLAYTABLE, ptr %add.ptr.i.i, i32 0, i32 8
  %229 = ptrtoint ptr %usNonClockInfoArrayOffset.i.i to i32
  call void @__asan_loadN_noabort(i32 %229, i32 2)
  %230 = load i16, ptr %usNonClockInfoArrayOffset.i.i, align 1
  %231 = call i16 @llvm.bswap.i16(i16 %230) #14
  %conv19.i.i = zext i16 %231 to i32
  %add.ptr20.i.i = getelementptr i8, ptr %add.ptr6.i.i, i32 %conv19.i.i
  %232 = ptrtoint ptr %add.ptr8.i.i to i32
  call void @__asan_load1_noabort(i32 %232)
  %233 = load i8, ptr %add.ptr8.i.i, align 1
  %conv21.i.i = zext i8 %233 to i32
  %234 = mul nuw nsw i32 %conv21.i.i, 40
  %call8.i.i.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %234, i32 noundef 3520) #17
  %dpm.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15
  %235 = ptrtoint ptr %dpm.i.i to i32
  call void @__asan_store4_noabort(i32 %235)
  store ptr %call8.i.i.i.i, ptr %dpm.i.i, align 4
  %tobool.not.i304.i = icmp eq ptr %call8.i.i.i.i, null
  br i1 %tobool.not.i304.i, label %if.end.i303.i.si_parse_power_table.exit.thread.i_crit_edge, label %if.end28.i.i

if.end.i303.i.si_parse_power_table.exit.thread.i_crit_edge: ; preds = %if.end.i303.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_parse_power_table.exit.thread.i

if.end28.i.i:                                     ; preds = %if.end.i303.i
  %236 = ptrtoint ptr %add.ptr8.i.i to i32
  call void @__asan_load1_noabort(i32 %236)
  %237 = load i8, ptr %add.ptr8.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %237)
  %cmp222.not.i.i = icmp eq i8 %237, 0
  br i1 %cmp222.not.i.i, label %if.end28.i.i.for.end81.i.i_crit_edge, label %for.body.lr.ph.i.i

if.end28.i.i.for.end81.i.i_crit_edge:             ; preds = %if.end28.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end81.i.i

for.body.lr.ph.i.i:                               ; preds = %if.end28.i.i
  %states.i.i = getelementptr inbounds %struct._StateArray, ptr %add.ptr8.i.i, i32 0, i32 1
  %nonClockInfo.i.i = getelementptr inbounds %struct._NonClockInfoArray, ptr %add.ptr20.i.i, i32 0, i32 2
  %ucEntrySize.i.i = getelementptr inbounds %struct._NonClockInfoArray, ptr %add.ptr20.i.i, i32 0, i32 1
  %boot_ps.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 4
  %uvd_ps.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 5
  %clockInfo.i.i = getelementptr inbounds %struct._ClockInfoArray, ptr %add.ptr14.i.i, i32 0, i32 2
  %ucEntrySize68.i.i = getelementptr inbounds %struct._ClockInfoArray, ptr %add.ptr14.i.i, i32 0, i32 1
  %max_clock_voltage_on_ac.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 13
  %mclk78.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 13, i32 1
  %vddc84.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 13, i32 2
  %vddci90.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 13, i32 3
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc79.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %power_state_offset.0226.i.i = phi ptr [ %states.i.i, %for.body.lr.ph.i.i ], [ %add.ptr78.i.i, %for.inc79.i.i.for.body.i.i_crit_edge ]
  %i.0223.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc80.i.i, %for.inc79.i.i.for.body.i.i_crit_edge ]
  %nonClockInfoIndex.i.i = getelementptr inbounds %struct._ATOM_PPLIB_STATE_V2, ptr %power_state_offset.0226.i.i, i32 0, i32 1
  %238 = ptrtoint ptr %nonClockInfoIndex.i.i to i32
  call void @__asan_load1_noabort(i32 %238)
  %239 = load i8, ptr %nonClockInfoIndex.i.i, align 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %240 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %240, i32 noundef 3520, i32 noundef 324) #18
  %cmp34.i.i = icmp eq ptr %call7.i.i.i.i, null
  br i1 %cmp34.i.i, label %cleanup.thread.i.i, label %if.end40.i.i

cleanup.thread.i.i:                               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %241 = ptrtoint ptr %dpm.i.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %dpm.i.i, align 4
  call void @kfree(ptr noundef %242) #14
  br label %si_parse_power_table.exit.thread.i

if.end40.i.i:                                     ; preds = %for.body.i.i
  %conv32.i.i = zext i8 %239 to i32
  %arrayidx.i305.i = getelementptr [1 x %struct._ATOM_PPLIB_NONCLOCK_INFO], ptr %nonClockInfo.i.i, i32 0, i32 %conv32.i.i
  %243 = ptrtoint ptr %dpm.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %dpm.i.i, align 4
  %ps_priv.i.i = getelementptr %struct.amdgpu_ps, ptr %244, i32 %i.0223.i.i, i32 9
  %245 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_store4_noabort(i32 %245)
  store ptr %call7.i.i.i.i, ptr %ps_priv.i.i, align 4
  %246 = load ptr, ptr %dpm.i.i, align 4
  %arrayidx48.i.i = getelementptr %struct.amdgpu_ps, ptr %246, i32 %i.0223.i.i
  %247 = ptrtoint ptr %ucEntrySize.i.i to i32
  call void @__asan_load1_noabort(i32 %247)
  %248 = load i8, ptr %ucEntrySize.i.i, align 1
  %ulCapsAndSettings.i.i.i = getelementptr [1 x %struct._ATOM_PPLIB_NONCLOCK_INFO], ptr %nonClockInfo.i.i, i32 0, i32 %conv32.i.i, i32 3
  %249 = ptrtoint ptr %ulCapsAndSettings.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %249, i32 4)
  %250 = load i32, ptr %ulCapsAndSettings.i.i.i, align 1
  %251 = call i32 @llvm.bswap.i32(i32 %250) #14
  %252 = ptrtoint ptr %arrayidx48.i.i to i32
  call void @__asan_store4_noabort(i32 %252)
  store i32 %251, ptr %arrayidx48.i.i, align 4
  %253 = ptrtoint ptr %arrayidx.i305.i to i32
  call void @__asan_loadN_noabort(i32 %253, i32 2)
  %254 = load i16, ptr %arrayidx.i305.i, align 1
  %255 = call i16 @llvm.bswap.i16(i16 %254) #14
  %conv.i.i306.i = zext i16 %255 to i32
  %class.i.i.i = getelementptr %struct.amdgpu_ps, ptr %246, i32 %i.0223.i.i, i32 1
  %256 = ptrtoint ptr %class.i.i.i to i32
  call void @__asan_store4_noabort(i32 %256)
  store i32 %conv.i.i306.i, ptr %class.i.i.i, align 4
  %usClassification2.i.i.i = getelementptr [1 x %struct._ATOM_PPLIB_NONCLOCK_INFO], ptr %nonClockInfo.i.i, i32 0, i32 %conv32.i.i, i32 5
  %257 = ptrtoint ptr %usClassification2.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %257, i32 2)
  %258 = load i16, ptr %usClassification2.i.i.i, align 1
  %259 = call i16 @llvm.bswap.i16(i16 %258) #14
  %conv1.i.i.i = zext i16 %259 to i32
  %class2.i.i.i = getelementptr %struct.amdgpu_ps, ptr %246, i32 %i.0223.i.i, i32 2
  %260 = ptrtoint ptr %class2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %260)
  store i32 %conv1.i.i.i, ptr %class2.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %248)
  %cmp.i.i307.i = icmp ugt i8 %248, 12
  br i1 %cmp.i.i307.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.end40.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %ulVCLK.i.i.i = getelementptr [1 x %struct._ATOM_PPLIB_NONCLOCK_INFO], ptr %nonClockInfo.i.i, i32 0, i32 %conv32.i.i, i32 6
  %261 = ptrtoint ptr %ulVCLK.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %261, i32 4)
  %262 = load i32, ptr %ulVCLK.i.i.i, align 1
  %263 = call i32 @llvm.bswap.i32(i32 %262) #14
  %vclk.i.i.i = getelementptr %struct.amdgpu_ps, ptr %246, i32 %i.0223.i.i, i32 3
  %264 = ptrtoint ptr %vclk.i.i.i to i32
  call void @__asan_store4_noabort(i32 %264)
  store i32 %263, ptr %vclk.i.i.i, align 4
  %ulDCLK.i.i.i = getelementptr [1 x %struct._ATOM_PPLIB_NONCLOCK_INFO], ptr %nonClockInfo.i.i, i32 0, i32 %conv32.i.i, i32 7
  %265 = ptrtoint ptr %ulDCLK.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %265, i32 4)
  %266 = load i32, ptr %ulDCLK.i.i.i, align 1
  %267 = call i32 @llvm.bswap.i32(i32 %266) #14
  br label %if.end12.i.i.i

if.else.i.i.i:                                    ; preds = %if.end40.i.i
  %268 = and i32 %conv.i.i306.i, 58368
  %and13.i.i.i.i = and i32 %conv1.i.i.i, 4
  %269 = or i32 %and13.i.i.i.i, %268
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %269)
  %.not.i.i.i = icmp eq i32 %269, 0
  %vclk10.i.i.i = getelementptr %struct.amdgpu_ps, ptr %246, i32 %i.0223.i.i, i32 3
  br i1 %.not.i.i.i, label %if.else9.i.i.i, label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %270 = ptrtoint ptr %vclk10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %270)
  store i32 53300, ptr %vclk10.i.i.i, align 4
  br label %if.end12.i.i.i

if.else9.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %271 = ptrtoint ptr %vclk10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %271)
  store i32 0, ptr %vclk10.i.i.i, align 4
  br label %if.end12.i.i.i

if.end12.i.i.i:                                   ; preds = %if.else9.i.i.i, %if.then6.i.i.i, %if.then.i.i.i
  %.sink.i.i.i = phi i32 [ 40000, %if.then6.i.i.i ], [ 0, %if.else9.i.i.i ], [ %267, %if.then.i.i.i ]
  %dclk8.i.i.i = getelementptr %struct.amdgpu_ps, ptr %246, i32 %i.0223.i.i, i32 4
  %272 = ptrtoint ptr %dclk8.i.i.i to i32
  call void @__asan_store4_noabort(i32 %272)
  store i32 %.sink.i.i.i, ptr %dclk8.i.i.i, align 4
  %and.i.i.i = and i32 %conv.i.i306.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end12.i.i.i.if.end15.i.i.i_crit_edge, label %if.then14.i.i.i

if.end12.i.i.i.if.end15.i.i.i_crit_edge:          ; preds = %if.end12.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i.i.i

if.then14.i.i.i:                                  ; preds = %if.end12.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %273 = ptrtoint ptr %boot_ps.i.i.i to i32
  call void @__asan_store4_noabort(i32 %273)
  store ptr %arrayidx48.i.i, ptr %boot_ps.i.i.i, align 4
  br label %if.end15.i.i.i

if.end15.i.i.i:                                   ; preds = %if.then14.i.i.i, %if.end12.i.i.i.if.end15.i.i.i_crit_edge
  %274 = ptrtoint ptr %class.i.i.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %class.i.i.i, align 4
  %and17.i.i.i = and i32 %275, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i.i.i)
  %tobool18.not.i.i.i = icmp eq i32 %and17.i.i.i, 0
  br i1 %tobool18.not.i.i.i, label %if.end15.i.i.i.si_parse_pplib_non_clock_info.exit.i.i_crit_edge, label %if.then19.i.i.i

if.end15.i.i.i.si_parse_pplib_non_clock_info.exit.i.i_crit_edge: ; preds = %if.end15.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_parse_pplib_non_clock_info.exit.i.i

if.then19.i.i.i:                                  ; preds = %if.end15.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %276 = ptrtoint ptr %uvd_ps.i.i.i to i32
  call void @__asan_store4_noabort(i32 %276)
  store ptr %arrayidx48.i.i, ptr %uvd_ps.i.i.i, align 4
  br label %si_parse_pplib_non_clock_info.exit.i.i

si_parse_pplib_non_clock_info.exit.i.i:           ; preds = %if.then19.i.i.i, %if.end15.i.i.i.si_parse_pplib_non_clock_info.exit.i.i_crit_edge
  %clockInfoIndex.i.i = getelementptr inbounds %struct._ATOM_PPLIB_STATE_V2, ptr %power_state_offset.0226.i.i, i32 0, i32 2
  %277 = ptrtoint ptr %power_state_offset.0226.i.i to i32
  call void @__asan_load1_noabort(i32 %277)
  %278 = load i8, ptr %power_state_offset.0226.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %278)
  %cmp52216.not.i.i = icmp eq i8 %278, 0
  br i1 %cmp52216.not.i.i, label %si_parse_pplib_non_clock_info.exit.i.i.for.inc79.i.i_crit_edge, label %si_parse_pplib_non_clock_info.exit.i.i.for.body54.i.i_crit_edge

si_parse_pplib_non_clock_info.exit.i.i.for.body54.i.i_crit_edge: ; preds = %si_parse_pplib_non_clock_info.exit.i.i
  br label %for.body54.i.i

si_parse_pplib_non_clock_info.exit.i.i.for.inc79.i.i_crit_edge: ; preds = %si_parse_pplib_non_clock_info.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc79.i.i

for.body54.i.i:                                   ; preds = %for.inc.i327.i.for.body54.i.i_crit_edge, %si_parse_pplib_non_clock_info.exit.i.i.for.body54.i.i_crit_edge
  %279 = phi i8 [ %400, %for.inc.i327.i.for.body54.i.i_crit_edge ], [ %278, %si_parse_pplib_non_clock_info.exit.i.i.for.body54.i.i_crit_edge ]
  %k.0218.i.i = phi i32 [ %k.1.i.i, %for.inc.i327.i.for.body54.i.i_crit_edge ], [ 0, %si_parse_pplib_non_clock_info.exit.i.i.for.body54.i.i_crit_edge ]
  %j.0217.i.i = phi i32 [ %inc75.i.i, %for.inc.i327.i.for.body54.i.i_crit_edge ], [ 0, %si_parse_pplib_non_clock_info.exit.i.i.for.body54.i.i_crit_edge ]
  %arrayidx55.i.i = getelementptr i8, ptr %clockInfoIndex.i.i, i32 %j.0217.i.i
  %280 = ptrtoint ptr %arrayidx55.i.i to i32
  call void @__asan_load1_noabort(i32 %280)
  %281 = load i8, ptr %arrayidx55.i.i, align 1
  %conv56.i.i = zext i8 %281 to i32
  %282 = ptrtoint ptr %add.ptr14.i.i to i32
  call void @__asan_load1_noabort(i32 %282)
  %283 = load i8, ptr %add.ptr14.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %281, i8 %283)
  %cmp59.not.i.i = icmp ult i8 %281, %283
  br i1 %cmp59.not.i.i, label %if.end62.i.i, label %for.body54.i.i.for.inc.i327.i_crit_edge

for.body54.i.i.for.inc.i327.i_crit_edge:          ; preds = %for.body54.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i327.i

if.end62.i.i:                                     ; preds = %for.body54.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %k.0218.i.i)
  %cmp63.i.i = icmp sgt i32 %k.0218.i.i, 4
  br i1 %cmp63.i.i, label %if.end62.i.i.for.inc79.i.i_crit_edge, label %if.end66.i.i

if.end62.i.i.for.inc79.i.i_crit_edge:             ; preds = %if.end62.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc79.i.i

if.end66.i.i:                                     ; preds = %if.end62.i.i
  %284 = ptrtoint ptr %ucEntrySize68.i.i to i32
  call void @__asan_load1_noabort(i32 %284)
  %285 = load i8, ptr %ucEntrySize68.i.i, align 1
  %conv69.i.i = zext i8 %285 to i32
  %mul.i.i = mul nuw nsw i32 %conv69.i.i, %conv56.i.i
  %add.ptr70.i.i = getelementptr i8, ptr %clockInfo.i.i, i32 %mul.i.i
  %286 = ptrtoint ptr %dpm.i.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %dpm.i.i, align 4
  %288 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %priv.i, align 4
  %ps_priv.i.i.i.i = getelementptr %struct.amdgpu_ps, ptr %287, i32 %i.0223.i.i, i32 9
  %290 = ptrtoint ptr %ps_priv.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %ps_priv.i.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr %struct.si_ps, ptr %291, i32 0, i32 2, i32 %k.0218.i.i
  %292 = trunc i32 %k.0218.i.i to i16
  %conv.i195.i.i = add i16 %292, 1
  %293 = ptrtoint ptr %291 to i32
  call void @__asan_store2_noabort(i32 %293)
  store i16 %conv.i195.i.i, ptr %291, align 4
  %294 = ptrtoint ptr %add.ptr70.i.i to i32
  call void @__asan_loadN_noabort(i32 %294, i32 2)
  %295 = load i16, ptr %add.ptr70.i.i, align 1
  %296 = call i16 @llvm.bswap.i16(i16 %295) #14
  %conv4.i.i.i = zext i16 %296 to i32
  %297 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %297)
  store i32 %conv4.i.i.i, ptr %arrayidx.i.i.i, align 4
  %ucEngineClockHigh.i.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %add.ptr70.i.i, i32 0, i32 1
  %298 = ptrtoint ptr %ucEngineClockHigh.i.i.i to i32
  call void @__asan_load1_noabort(i32 %298)
  %299 = load i8, ptr %ucEngineClockHigh.i.i.i, align 1
  %conv5.i.i.i = zext i8 %299 to i32
  %shl.i.i.i = shl nuw nsw i32 %conv5.i.i.i, 16
  %or.i.i.i = or i32 %shl.i.i.i, %conv4.i.i.i
  store i32 %or.i.i.i, ptr %arrayidx.i.i.i, align 4
  %usMemoryClockLow.i.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %add.ptr70.i.i, i32 0, i32 2
  %300 = ptrtoint ptr %usMemoryClockLow.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %300, i32 2)
  %301 = load i16, ptr %usMemoryClockLow.i.i.i, align 1
  %302 = call i16 @llvm.bswap.i16(i16 %301) #14
  %conv7.i.i.i = zext i16 %302 to i32
  %mclk.i.i.i = getelementptr %struct.si_ps, ptr %291, i32 0, i32 2, i32 %k.0218.i.i, i32 1
  %303 = ptrtoint ptr %mclk.i.i.i to i32
  call void @__asan_store4_noabort(i32 %303)
  store i32 %conv7.i.i.i, ptr %mclk.i.i.i, align 4
  %ucMemoryClockHigh.i.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %add.ptr70.i.i, i32 0, i32 3
  %304 = ptrtoint ptr %ucMemoryClockHigh.i.i.i to i32
  call void @__asan_load1_noabort(i32 %304)
  %305 = load i8, ptr %ucMemoryClockHigh.i.i.i, align 1
  %conv8.i.i.i = zext i8 %305 to i32
  %shl9.i.i.i = shl nuw nsw i32 %conv8.i.i.i, 16
  %or11.i.i.i = or i32 %shl9.i.i.i, %conv7.i.i.i
  store i32 %or11.i.i.i, ptr %mclk.i.i.i, align 4
  %usVDDC.i.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %add.ptr70.i.i, i32 0, i32 4
  %306 = ptrtoint ptr %usVDDC.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %306, i32 2)
  %307 = load i16, ptr %usVDDC.i.i.i, align 1
  %308 = call i16 @llvm.bswap.i16(i16 %307) #14
  %vddc.i.i.i = getelementptr %struct.si_ps, ptr %291, i32 0, i32 2, i32 %k.0218.i.i, i32 2
  %309 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_store2_noabort(i32 %309)
  store i16 %308, ptr %vddc.i.i.i, align 4
  %usVDDCI.i.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %add.ptr70.i.i, i32 0, i32 5
  %310 = ptrtoint ptr %usVDDCI.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %310, i32 2)
  %311 = load i16, ptr %usVDDCI.i.i.i, align 1
  %312 = call i16 @llvm.bswap.i16(i16 %311) #14
  %vddci.i.i.i = getelementptr %struct.si_ps, ptr %291, i32 0, i32 2, i32 %k.0218.i.i, i32 3
  %313 = ptrtoint ptr %vddci.i.i.i to i32
  call void @__asan_store2_noabort(i32 %313)
  store i16 %312, ptr %vddci.i.i.i, align 2
  %ulFlags.i.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %add.ptr70.i.i, i32 0, i32 8
  %314 = ptrtoint ptr %ulFlags.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %314, i32 4)
  %315 = load i32, ptr %ulFlags.i.i.i, align 1
  %316 = call i32 @llvm.bswap.i32(i32 %315) #14
  %flags.i.i.i = getelementptr %struct.si_ps, ptr %291, i32 0, i32 2, i32 %k.0218.i.i, i32 4
  %317 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_store4_noabort(i32 %317)
  store i32 %316, ptr %flags.i.i.i, align 4
  %sys_pcie_mask.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 12
  %318 = ptrtoint ptr %sys_pcie_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load i32, ptr %sys_pcie_mask.i.i.i, align 4
  %boot_pcie_gen.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 10
  %320 = ptrtoint ptr %boot_pcie_gen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %boot_pcie_gen.i.i.i, align 4
  %ucPCIEGen.i.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %add.ptr70.i.i, i32 0, i32 6
  %322 = ptrtoint ptr %ucPCIEGen.i.i.i to i32
  call void @__asan_load1_noabort(i32 %322)
  %323 = load i8, ptr %ucPCIEGen.i.i.i, align 1
  %conv12.i.i.i = zext i8 %323 to i32
  %call13.i.i.i = call i32 @amdgpu_get_pcie_gen_support(ptr noundef %handle, i32 noundef %319, i32 noundef %321, i32 noundef %conv12.i.i.i) #14
  %pcie_gen.i.i.i = getelementptr %struct.si_ps, ptr %291, i32 0, i32 2, i32 %k.0218.i.i, i32 5
  %324 = ptrtoint ptr %pcie_gen.i.i.i to i32
  call void @__asan_store4_noabort(i32 %324)
  store i32 %call13.i.i.i, ptr %pcie_gen.i.i.i, align 4
  %325 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_load2_noabort(i32 %325)
  %326 = load i16, ptr %vddc.i.i.i, align 4
  %conv15.i.i.i = zext i16 %326 to i32
  %327 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load ptr, ptr %priv.i, align 4
  %and.i.i.i308.i = and i32 %conv15.i.i.i, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 65280, i32 %and.i.i.i308.i)
  %cmp1.not.i.i.i309.i = icmp ne i32 %and.i.i.i308.i, 65280
  %and4.i.i.i310.i = and i32 %conv15.i.i.i, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and4.i.i.i310.i)
  %cmp5.i.i.i311.i = icmp ugt i32 %and4.i.i.i310.i, 5
  %or.cond33.i.i.i312.i = or i1 %cmp5.i.i.i311.i, %cmp1.not.i.i.i309.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -255, i16 %326)
  %cmp8.i.i.i313.i = icmp ult i16 %326, -255
  %or.cond34.i.i.i314.i = or i1 %cmp8.i.i.i313.i, %or.cond33.i.i.i312.i
  br i1 %or.cond34.i.i.i314.i, label %if.end66.i.i.if.end.i.i.i_crit_edge, label %for.cond.preheader.i.i.i318.i

if.end66.i.i.if.end.i.i.i_crit_edge:              ; preds = %if.end66.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

for.cond.preheader.i.i.i318.i:                    ; preds = %if.end66.i.i
  %leakage_voltage11.i.i.i315.i = getelementptr inbounds %struct.si_power_info, ptr %328, i32 0, i32 5
  %329 = ptrtoint ptr %leakage_voltage11.i.i.i315.i to i32
  call void @__asan_load2_noabort(i32 %329)
  %330 = load i16, ptr %leakage_voltage11.i.i.i315.i, align 4
  %conv.i.i.i316.i = zext i16 %330 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %330)
  %cmp1236.not.i.i.i317.i = icmp eq i16 %330, 0
  br i1 %cmp1236.not.i.i.i317.i, label %for.cond.preheader.i.i.i318.i.if.end.i.i.i_crit_edge, label %for.cond.preheader.i.i.i318.i.for.body.i.i.i322.i_crit_edge

for.cond.preheader.i.i.i318.i.for.body.i.i.i322.i_crit_edge: ; preds = %for.cond.preheader.i.i.i318.i
  br label %for.body.i.i.i322.i

for.cond.preheader.i.i.i318.i.if.end.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i318.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

for.body.i.i.i322.i:                              ; preds = %for.inc.i.i.i325.i.for.body.i.i.i322.i_crit_edge, %for.cond.preheader.i.i.i318.i.for.body.i.i.i322.i_crit_edge
  %i.037.i.i.i319.i = phi i32 [ %inc.i.i.i323.i, %for.inc.i.i.i325.i.for.body.i.i.i322.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i318.i.for.body.i.i.i322.i_crit_edge ]
  %leakage_index.i.i.i320.i = getelementptr %struct.si_power_info, ptr %328, i32 0, i32 5, i32 1, i32 %i.037.i.i.i319.i, i32 1
  %331 = ptrtoint ptr %leakage_index.i.i.i320.i to i32
  call void @__asan_load2_noabort(i32 %331)
  %332 = load i16, ptr %leakage_index.i.i.i320.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %332, i16 %326)
  %cmp16.i.i.i321.i = icmp eq i16 %332, %326
  br i1 %cmp16.i.i.i321.i, label %if.then.i196.i.i, label %for.inc.i.i.i325.i

for.inc.i.i.i325.i:                               ; preds = %for.body.i.i.i322.i
  %inc.i.i.i323.i = add nuw nsw i32 %i.037.i.i.i319.i, 1
  %exitcond.not.i.i.i324.i = icmp eq i32 %inc.i.i.i323.i, %conv.i.i.i316.i
  br i1 %exitcond.not.i.i.i324.i, label %for.inc.i.i.i325.i.if.end.i.i.i_crit_edge, label %for.inc.i.i.i325.i.for.body.i.i.i322.i_crit_edge

for.inc.i.i.i325.i.for.body.i.i.i322.i_crit_edge: ; preds = %for.inc.i.i.i325.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i322.i

for.inc.i.i.i325.i.if.end.i.i.i_crit_edge:        ; preds = %for.inc.i.i.i325.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

if.then.i196.i.i:                                 ; preds = %for.body.i.i.i322.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i.i326.i = getelementptr %struct.si_power_info, ptr %328, i32 0, i32 5, i32 1, i32 %i.037.i.i.i319.i
  %333 = ptrtoint ptr %arrayidx.i.i.i326.i to i32
  call void @__asan_load2_noabort(i32 %333)
  %334 = load i16, ptr %arrayidx.i.i.i326.i, align 2
  %335 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_store2_noabort(i32 %335)
  store i16 %334, ptr %vddc.i.i.i, align 4
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i196.i.i, %for.inc.i.i.i325.i.if.end.i.i.i_crit_edge, %for.cond.preheader.i.i.i318.i.if.end.i.i.i_crit_edge, %if.end66.i.i.if.end.i.i.i_crit_edge
  %class.i197.i.i = getelementptr %struct.amdgpu_ps, ptr %287, i32 %i.0223.i.i, i32 1
  %336 = ptrtoint ptr %class.i197.i.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load i32, ptr %class.i197.i.i, align 4
  %and.i198.i.i = and i32 %337, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i198.i.i)
  %tobool.not.i199.i.i = icmp eq i32 %and.i198.i.i, 0
  br i1 %tobool.not.i199.i.i, label %if.end.i.i.i.if.end23.i.i.i_crit_edge, label %if.then19.i200.i.i

if.end.i.i.i.if.end23.i.i.i_crit_edge:            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23.i.i.i

if.then19.i200.i.i:                               ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %338 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_load2_noabort(i32 %338)
  %339 = load i16, ptr %vddc.i.i.i, align 4
  %acpi_vddc.i.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %289, i32 0, i32 33
  %340 = ptrtoint ptr %acpi_vddc.i.i.i to i32
  call void @__asan_store2_noabort(i32 %340)
  store i16 %339, ptr %acpi_vddc.i.i.i, align 4
  %341 = ptrtoint ptr %vddci.i.i.i to i32
  call void @__asan_load2_noabort(i32 %341)
  %342 = load i16, ptr %vddci.i.i.i, align 2
  %acpi_vddci.i.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %289, i32 0, i32 14
  %343 = ptrtoint ptr %acpi_vddci.i.i.i to i32
  call void @__asan_store2_noabort(i32 %343)
  store i16 %342, ptr %acpi_vddci.i.i.i, align 2
  %344 = ptrtoint ptr %pcie_gen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %pcie_gen.i.i.i, align 4
  %acpi_pcie_gen.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 11
  %346 = ptrtoint ptr %acpi_pcie_gen.i.i.i to i32
  call void @__asan_store4_noabort(i32 %346)
  store i32 %345, ptr %acpi_pcie_gen.i.i.i, align 4
  br label %if.end23.i.i.i

if.end23.i.i.i:                                   ; preds = %if.then19.i200.i.i, %if.end.i.i.i.if.end23.i.i.i_crit_edge
  %class2.i201.i.i = getelementptr %struct.amdgpu_ps, ptr %287, i32 %i.0223.i.i, i32 2
  %347 = ptrtoint ptr %class2.i201.i.i to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load i32, ptr %class2.i201.i.i, align 4
  %and24.i.i.i = and i32 %348, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24.i.i.i)
  %tobool25.not.i.i.i = icmp ne i32 %and24.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %k.0218.i.i)
  %cmp26.i.i.i = icmp eq i32 %k.0218.i.i, 0
  %or.cond.i.i.i = and i1 %cmp26.i.i.i, %tobool25.not.i.i.i
  br i1 %or.cond.i.i.i, label %if.then28.i.i.i, label %if.end23.i.i.i.if.end35.i.i.i_crit_edge

if.end23.i.i.i.if.end35.i.i.i_crit_edge:          ; preds = %if.end23.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35.i.i.i

if.then28.i.i.i:                                  ; preds = %if.end23.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %ulv.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 7
  %349 = ptrtoint ptr %ulv.i.i.i to i32
  call void @__asan_store1_noabort(i32 %349)
  store i8 0, ptr %ulv.i.i.i, align 4
  %pl30.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 7, i32 4
  %350 = call ptr @memcpy(ptr %pl30.i.i.i, ptr %arrayidx.i.i.i, i32 20)
  %one_pcie_lane_in_ulv.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 7, i32 5
  %351 = ptrtoint ptr %one_pcie_lane_in_ulv.i.i.i to i32
  call void @__asan_store1_noabort(i32 %351)
  store i8 0, ptr %one_pcie_lane_in_ulv.i.i.i, align 4
  %volt_change_delay.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 7, i32 3
  %352 = ptrtoint ptr %volt_change_delay.i.i.i to i32
  call void @__asan_store4_noabort(i32 %352)
  store i32 1687, ptr %volt_change_delay.i.i.i, align 4
  %cg_ulv_parameter.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 7, i32 2
  %353 = ptrtoint ptr %cg_ulv_parameter.i.i.i to i32
  call void @__asan_store4_noabort(i32 %353)
  store i32 262197, ptr %cg_ulv_parameter.i.i.i, align 4
  %cg_ulv_control.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 7, i32 1
  %354 = ptrtoint ptr %cg_ulv_control.i.i.i to i32
  call void @__asan_store4_noabort(i32 %354)
  store i32 520123728, ptr %cg_ulv_control.i.i.i, align 4
  br label %if.end35.i.i.i

if.end35.i.i.i:                                   ; preds = %if.then28.i.i.i, %if.end23.i.i.i.if.end35.i.i.i_crit_edge
  %min_vddc_in_table.i.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %289, i32 0, i32 26
  %355 = ptrtoint ptr %min_vddc_in_table.i.i.i to i32
  call void @__asan_load2_noabort(i32 %355)
  %356 = load i16, ptr %min_vddc_in_table.i.i.i, align 4
  %357 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_load2_noabort(i32 %357)
  %358 = load i16, ptr %vddc.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %356, i16 %358)
  %cmp39.i.i.i = icmp ugt i16 %356, %358
  br i1 %cmp39.i.i.i, label %if.then41.i.i.i, label %if.end35.i.i.i.if.end44.i.i.i_crit_edge

if.end35.i.i.i.if.end44.i.i.i_crit_edge:          ; preds = %if.end35.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i.i.i

if.then41.i.i.i:                                  ; preds = %if.end35.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %359 = ptrtoint ptr %min_vddc_in_table.i.i.i to i32
  call void @__asan_store2_noabort(i32 %359)
  store i16 %358, ptr %min_vddc_in_table.i.i.i, align 4
  br label %if.end44.i.i.i

if.end44.i.i.i:                                   ; preds = %if.then41.i.i.i, %if.end35.i.i.i.if.end44.i.i.i_crit_edge
  %max_vddc_in_table.i.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %289, i32 0, i32 25
  %360 = ptrtoint ptr %max_vddc_in_table.i.i.i to i32
  call void @__asan_load2_noabort(i32 %360)
  %361 = load i16, ptr %max_vddc_in_table.i.i.i, align 2
  %362 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_load2_noabort(i32 %362)
  %363 = load i16, ptr %vddc.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %361, i16 %363)
  %cmp48.i.i.i = icmp ult i16 %361, %363
  br i1 %cmp48.i.i.i, label %if.then50.i.i.i, label %if.end44.i.i.i.if.end53.i.i.i_crit_edge

if.end44.i.i.i.if.end53.i.i.i_crit_edge:          ; preds = %if.end44.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end53.i.i.i

if.then50.i.i.i:                                  ; preds = %if.end44.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %364 = ptrtoint ptr %max_vddc_in_table.i.i.i to i32
  call void @__asan_store2_noabort(i32 %364)
  store i16 %363, ptr %max_vddc_in_table.i.i.i, align 2
  br label %if.end53.i.i.i

if.end53.i.i.i:                                   ; preds = %if.then50.i.i.i, %if.end44.i.i.i.if.end53.i.i.i_crit_edge
  %365 = ptrtoint ptr %class.i197.i.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load i32, ptr %class.i197.i.i, align 4
  %and55.i.i.i = and i32 %366, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55.i.i.i)
  %tobool56.not.i.i.i = icmp eq i32 %and55.i.i.i, 0
  br i1 %tobool56.not.i.i.i, label %if.end53.i.i.i.if.end65.i.i.i_crit_edge, label %if.then57.i.i.i

if.end53.i.i.i.if.end65.i.i.i_crit_edge:          ; preds = %if.end53.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end65.i.i.i

if.then57.i.i.i:                                  ; preds = %if.end53.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %vddc58.i.i.i) #14
  %367 = ptrtoint ptr %vddc58.i.i.i to i32
  call void @__asan_store2_noabort(i32 %367)
  store i16 -1, ptr %vddc58.i.i.i, align 2, !annotation !272
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %vddci59.i.i.i) #14
  %368 = ptrtoint ptr %vddci59.i.i.i to i32
  call void @__asan_store2_noabort(i32 %368)
  store i16 -1, ptr %vddci59.i.i.i, align 2, !annotation !272
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mvdd.i.i.i) #14
  %369 = ptrtoint ptr %mvdd.i.i.i to i32
  call void @__asan_store2_noabort(i32 %369)
  store i16 -1, ptr %mvdd.i.i.i, align 2, !annotation !272
  call void @amdgpu_atombios_get_default_voltages(ptr noundef %handle, ptr noundef nonnull %vddc58.i.i.i, ptr noundef nonnull %vddci59.i.i.i, ptr noundef nonnull %mvdd.i.i.i) #14
  %370 = ptrtoint ptr %default_mclk to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load i32, ptr %default_mclk, align 4
  %372 = ptrtoint ptr %mclk.i.i.i to i32
  call void @__asan_store4_noabort(i32 %372)
  store i32 %371, ptr %mclk.i.i.i, align 4
  %373 = ptrtoint ptr %default_sclk to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %default_sclk, align 4
  %375 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %375)
  store i32 %374, ptr %arrayidx.i.i.i, align 4
  %376 = ptrtoint ptr %vddc58.i.i.i to i32
  call void @__asan_load2_noabort(i32 %376)
  %377 = load i16, ptr %vddc58.i.i.i, align 2
  %378 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_store2_noabort(i32 %378)
  store i16 %377, ptr %vddc.i.i.i, align 4
  %379 = ptrtoint ptr %vddci59.i.i.i to i32
  call void @__asan_load2_noabort(i32 %379)
  %380 = load i16, ptr %vddci59.i.i.i, align 2
  %381 = ptrtoint ptr %vddci.i.i.i to i32
  call void @__asan_store2_noabort(i32 %381)
  store i16 %380, ptr %vddci.i.i.i, align 2
  %382 = ptrtoint ptr %mvdd.i.i.i to i32
  call void @__asan_load2_noabort(i32 %382)
  %383 = load i16, ptr %mvdd.i.i.i, align 2
  %mvdd_bootup_value.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %289, i32 0, i32 6
  %384 = ptrtoint ptr %mvdd_bootup_value.i.i.i to i32
  call void @__asan_store2_noabort(i32 %384)
  store i16 %383, ptr %mvdd_bootup_value.i.i.i, align 2
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mvdd.i.i.i) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %vddci59.i.i.i) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %vddc58.i.i.i) #14
  br label %if.end65.i.i.i

if.end65.i.i.i:                                   ; preds = %if.then57.i.i.i, %if.end53.i.i.i.if.end65.i.i.i_crit_edge
  %385 = ptrtoint ptr %class.i197.i.i to i32
  call void @__asan_load4_noabort(i32 %385)
  %386 = load i32, ptr %class.i197.i.i, align 4
  %and67.i.i.i = and i32 %386, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and67.i.i.i)
  %cmp68.i.i.i = icmp eq i32 %and67.i.i.i, 5
  br i1 %cmp68.i.i.i, label %if.then70.i.i.i, label %if.end65.i.i.i.si_parse_pplib_clock_info.exit.i.i_crit_edge

if.end65.i.i.i.si_parse_pplib_clock_info.exit.i.i_crit_edge: ; preds = %if.end65.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_parse_pplib_clock_info.exit.i.i

if.then70.i.i.i:                                  ; preds = %if.end65.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %387 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load i32, ptr %arrayidx.i.i.i, align 4
  %389 = ptrtoint ptr %max_clock_voltage_on_ac.i.i.i to i32
  call void @__asan_store4_noabort(i32 %389)
  store i32 %388, ptr %max_clock_voltage_on_ac.i.i.i, align 4
  %390 = ptrtoint ptr %mclk.i.i.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load i32, ptr %mclk.i.i.i, align 4
  %392 = ptrtoint ptr %mclk78.i.i.i to i32
  call void @__asan_store4_noabort(i32 %392)
  store i32 %391, ptr %mclk78.i.i.i, align 4
  %393 = ptrtoint ptr %vddc.i.i.i to i32
  call void @__asan_load2_noabort(i32 %393)
  %394 = load i16, ptr %vddc.i.i.i, align 4
  %395 = ptrtoint ptr %vddc84.i.i.i to i32
  call void @__asan_store2_noabort(i32 %395)
  store i16 %394, ptr %vddc84.i.i.i, align 4
  %396 = ptrtoint ptr %vddci.i.i.i to i32
  call void @__asan_load2_noabort(i32 %396)
  %397 = load i16, ptr %vddci.i.i.i, align 2
  %398 = ptrtoint ptr %vddci90.i.i.i to i32
  call void @__asan_store2_noabort(i32 %398)
  store i16 %397, ptr %vddci90.i.i.i, align 2
  br label %si_parse_pplib_clock_info.exit.i.i

si_parse_pplib_clock_info.exit.i.i:               ; preds = %if.then70.i.i.i, %if.end65.i.i.i.si_parse_pplib_clock_info.exit.i.i_crit_edge
  %inc.i.i = add i32 %k.0218.i.i, 1
  br label %for.inc.i327.i

for.inc.i327.i:                                   ; preds = %si_parse_pplib_clock_info.exit.i.i, %for.body54.i.i.for.inc.i327.i_crit_edge
  %k.1.i.i = phi i32 [ %k.0218.i.i, %for.body54.i.i.for.inc.i327.i_crit_edge ], [ %inc.i.i, %si_parse_pplib_clock_info.exit.i.i ]
  %inc75.i.i = add nuw nsw i32 %j.0217.i.i, 1
  %399 = ptrtoint ptr %power_state_offset.0226.i.i to i32
  call void @__asan_load1_noabort(i32 %399)
  %400 = load i8, ptr %power_state_offset.0226.i.i, align 1
  %conv51.i.i = zext i8 %400 to i32
  %cmp52.i.i = icmp ult i32 %inc75.i.i, %conv51.i.i
  br i1 %cmp52.i.i, label %for.inc.i327.i.for.body54.i.i_crit_edge, label %for.inc.i327.i.for.inc79.i.i_crit_edge

for.inc.i327.i.for.inc79.i.i_crit_edge:           ; preds = %for.inc.i327.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc79.i.i

for.inc.i327.i.for.body54.i.i_crit_edge:          ; preds = %for.inc.i327.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body54.i.i

for.inc79.i.i:                                    ; preds = %for.inc.i327.i.for.inc79.i.i_crit_edge, %if.end62.i.i.for.inc79.i.i_crit_edge, %si_parse_pplib_non_clock_info.exit.i.i.for.inc79.i.i_crit_edge
  %.lcssa.i.i = phi i8 [ 0, %si_parse_pplib_non_clock_info.exit.i.i.for.inc79.i.i_crit_edge ], [ %400, %for.inc.i327.i.for.inc79.i.i_crit_edge ], [ %279, %if.end62.i.i.for.inc79.i.i_crit_edge ]
  %conv51.le.i.i = zext i8 %.lcssa.i.i to i32
  %add.i.i = add nuw nsw i32 %conv51.le.i.i, 2
  %add.ptr78.i.i = getelementptr i8, ptr %power_state_offset.0226.i.i, i32 %add.i.i
  %inc80.i.i = add nuw nsw i32 %i.0223.i.i, 1
  %401 = ptrtoint ptr %add.ptr8.i.i to i32
  call void @__asan_load1_noabort(i32 %401)
  %402 = load i8, ptr %add.ptr8.i.i, align 1
  %conv30.i.i = zext i8 %402 to i32
  %cmp.i328.i = icmp ult i32 %inc80.i.i, %conv30.i.i
  br i1 %cmp.i328.i, label %for.inc79.i.i.for.body.i.i_crit_edge, label %for.end81.i.i.loopexit

for.inc79.i.i.for.body.i.i_crit_edge:             ; preds = %for.inc79.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.end81.i.i.loopexit:                           ; preds = %for.inc79.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv30.i.i.le = zext i8 %402 to i32
  br label %for.end81.i.i

for.end81.i.i:                                    ; preds = %for.end81.i.i.loopexit, %if.end28.i.i.for.end81.i.i_crit_edge
  %.lcssa220.i.i = phi i32 [ 0, %if.end28.i.i.for.end81.i.i_crit_edge ], [ %conv30.i.i.le, %for.end81.i.i.loopexit ]
  %num_ps.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 1
  %403 = ptrtoint ptr %num_ps.i.i to i32
  call void @__asan_store4_noabort(i32 %403)
  store i32 %.lcssa220.i.i, ptr %num_ps.i.i, align 4
  %num_of_vce_states.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 6
  %404 = ptrtoint ptr %num_of_vce_states.i.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %num_of_vce_states.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %405)
  %cmp89229.not.i.i = icmp eq i32 %405, 0
  br i1 %cmp89229.not.i.i, label %for.end81.i.i.if.end14.i_crit_edge, label %for.body91.lr.ph.i.i

for.end81.i.i.if.end14.i_crit_edge:               ; preds = %for.end81.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i

for.body91.lr.ph.i.i:                             ; preds = %for.end81.i.i
  %clockInfo96.i.i = getelementptr inbounds %struct._ClockInfoArray, ptr %add.ptr14.i.i, i32 0, i32 2
  %ucEntrySize97.i.i = getelementptr inbounds %struct._ClockInfoArray, ptr %add.ptr14.i.i, i32 0, i32 1
  br label %for.body91.i.i

for.body91.i.i:                                   ; preds = %for.body91.i.i.for.body91.i.i_crit_edge, %for.body91.lr.ph.i.i
  %i.1230.i.i = phi i32 [ 0, %for.body91.lr.ph.i.i ], [ %inc118.i.i, %for.body91.i.i.for.body91.i.i_crit_edge ]
  %clk_idx.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 7, i32 %i.1230.i.i, i32 4
  %406 = ptrtoint ptr %clk_idx.i.i to i32
  call void @__asan_load1_noabort(i32 %406)
  %407 = load i8, ptr %clk_idx.i.i, align 4
  %conv95.i.i = zext i8 %407 to i32
  %408 = ptrtoint ptr %ucEntrySize97.i.i to i32
  call void @__asan_load1_noabort(i32 %408)
  %409 = load i8, ptr %ucEntrySize97.i.i, align 1
  %conv98.i.i = zext i8 %409 to i32
  %mul99.i.i = mul nuw nsw i32 %conv98.i.i, %conv95.i.i
  %arrayidx100.i.i = getelementptr [1 x i8], ptr %clockInfo96.i.i, i32 0, i32 %mul99.i.i
  %410 = ptrtoint ptr %arrayidx100.i.i to i32
  call void @__asan_loadN_noabort(i32 %410, i32 2)
  %411 = load i16, ptr %arrayidx100.i.i, align 1
  %412 = call i16 @llvm.bswap.i16(i16 %411) #14
  %conv101.i.i = zext i16 %412 to i32
  %ucEngineClockHigh.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %arrayidx100.i.i, i32 0, i32 1
  %413 = ptrtoint ptr %ucEngineClockHigh.i.i to i32
  call void @__asan_load1_noabort(i32 %413)
  %414 = load i8, ptr %ucEngineClockHigh.i.i, align 1
  %conv102.i.i = zext i8 %414 to i32
  %shl.i.i = shl nuw nsw i32 %conv102.i.i, 16
  %or.i.i = or i32 %shl.i.i, %conv101.i.i
  %usMemoryClockLow.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %arrayidx100.i.i, i32 0, i32 2
  %415 = ptrtoint ptr %usMemoryClockLow.i.i to i32
  call void @__asan_loadN_noabort(i32 %415, i32 2)
  %416 = load i16, ptr %usMemoryClockLow.i.i, align 1
  %417 = call i16 @llvm.bswap.i16(i16 %416) #14
  %conv103.i.i = zext i16 %417 to i32
  %ucMemoryClockHigh.i.i = getelementptr inbounds %struct._ATOM_PPLIB_SI_CLOCK_INFO, ptr %arrayidx100.i.i, i32 0, i32 3
  %418 = ptrtoint ptr %ucMemoryClockHigh.i.i to i32
  call void @__asan_load1_noabort(i32 %418)
  %419 = load i8, ptr %ucMemoryClockHigh.i.i, align 1
  %conv104.i.i = zext i8 %419 to i32
  %shl105.i.i = shl nuw nsw i32 %conv104.i.i, 16
  %or106.i.i = or i32 %shl105.i.i, %conv103.i.i
  %sclk111.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 7, i32 %i.1230.i.i, i32 2
  %420 = ptrtoint ptr %sclk111.i.i to i32
  call void @__asan_store4_noabort(i32 %420)
  store i32 %or.i.i, ptr %sclk111.i.i, align 4
  %mclk116.i.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 7, i32 %i.1230.i.i, i32 3
  %421 = ptrtoint ptr %mclk116.i.i to i32
  call void @__asan_store4_noabort(i32 %421)
  store i32 %or106.i.i, ptr %mclk116.i.i, align 4
  %inc118.i.i = add nuw i32 %i.1230.i.i, 1
  %422 = ptrtoint ptr %num_of_vce_states.i.i to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load i32, ptr %num_of_vce_states.i.i, align 4
  %cmp89.i.i = icmp ult i32 %inc118.i.i, %423
  br i1 %cmp89.i.i, label %for.body91.i.i.for.body91.i.i_crit_edge, label %for.body91.i.i.if.end14.i_crit_edge

for.body91.i.i.if.end14.i_crit_edge:              ; preds = %for.body91.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i

for.body91.i.i.for.body91.i.i_crit_edge:          ; preds = %for.body91.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body91.i.i

si_parse_power_table.exit.thread.i:               ; preds = %cleanup.thread.i.i, %if.end.i303.i.si_parse_power_table.exit.thread.i_crit_edge, %if.end10.i.si_parse_power_table.exit.thread.i_crit_edge
  %retval.2.i.ph.i = phi i32 [ -12, %cleanup.thread.i.i ], [ -12, %if.end.i303.i.si_parse_power_table.exit.thread.i_crit_edge ], [ -22, %if.end10.i.si_parse_power_table.exit.thread.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %crev.i.i) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %frev.i.i) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %data_offset.i.i) #14
  br label %dpm_failed

if.end14.i:                                       ; preds = %for.body91.i.i.if.end14.i_crit_edge, %for.end81.i.i.if.end14.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %crev.i.i) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %frev.i.i) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %data_offset.i.i) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %424 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i331.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %424, i32 noundef 3520, i32 noundef 32) #18
  %entries.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 4, i32 1
  %425 = ptrtoint ptr %entries.i to i32
  call void @__asan_store4_noabort(i32 %425)
  store ptr %call7.i.i.i331.i, ptr %entries.i, align 4
  %tobool23.not.i = icmp eq ptr %call7.i.i.i331.i, null
  br i1 %tobool23.not.i, label %if.then24.i, label %if.end25.i

if.then24.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @amdgpu_free_extended_power_table(ptr noundef %handle) #14
  br label %dpm_failed

if.end25.i:                                       ; preds = %if.end14.i
  %vddc_dependency_on_dispclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 4
  %426 = ptrtoint ptr %vddc_dependency_on_dispclk.i to i32
  call void @__asan_store4_noabort(i32 %426)
  store i32 4, ptr %vddc_dependency_on_dispclk.i, align 4
  %427 = ptrtoint ptr %call7.i.i.i331.i to i32
  call void @__asan_store4_noabort(i32 %427)
  store i32 0, ptr %call7.i.i.i331.i, align 8
  %v.i = getelementptr inbounds %struct.amdgpu_clock_voltage_dependency_entry, ptr %call7.i.i.i331.i, i32 0, i32 1
  %428 = ptrtoint ptr %v.i to i32
  call void @__asan_store2_noabort(i32 %428)
  store i16 0, ptr %v.i, align 4
  %arrayidx46.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %call7.i.i.i331.i, i32 1
  %429 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_store4_noabort(i32 %429)
  store i32 36000, ptr %arrayidx46.i, align 8
  %v54.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %call7.i.i.i331.i, i32 1, i32 1
  %430 = ptrtoint ptr %v54.i to i32
  call void @__asan_store2_noabort(i32 %430)
  store i16 720, ptr %v54.i, align 4
  %arrayidx60.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %call7.i.i.i331.i, i32 2
  %431 = ptrtoint ptr %arrayidx60.i to i32
  call void @__asan_store4_noabort(i32 %431)
  store i32 54000, ptr %arrayidx60.i, align 8
  %v68.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %call7.i.i.i331.i, i32 2, i32 1
  %432 = ptrtoint ptr %v68.i to i32
  call void @__asan_store2_noabort(i32 %432)
  store i16 810, ptr %v68.i, align 4
  %arrayidx74.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %call7.i.i.i331.i, i32 3
  %433 = ptrtoint ptr %arrayidx74.i to i32
  call void @__asan_store4_noabort(i32 %433)
  store i32 72000, ptr %arrayidx74.i, align 8
  %v82.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %call7.i.i.i331.i, i32 3, i32 1
  %434 = ptrtoint ptr %v82.i to i32
  call void @__asan_store2_noabort(i32 %434)
  store i16 900, ptr %v82.i, align 4
  %voltage_response_time.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 14
  %435 = ptrtoint ptr %voltage_response_time.i to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load i32, ptr %voltage_response_time.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %436)
  %cmp85.i = icmp eq i32 %436, 0
  br i1 %cmp85.i, label %if.then87.i, label %if.end25.i.if.end91.i_crit_edge

if.end25.i.if.end91.i_crit_edge:                  ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end91.i

if.then87.i:                                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  %437 = ptrtoint ptr %voltage_response_time.i to i32
  call void @__asan_store4_noabort(i32 %437)
  store i32 1000, ptr %voltage_response_time.i, align 4
  br label %if.end91.i

if.end91.i:                                       ; preds = %if.then87.i, %if.end25.i.if.end91.i_crit_edge
  %backbias_response_time.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 15
  %438 = ptrtoint ptr %backbias_response_time.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load i32, ptr %backbias_response_time.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %439)
  %cmp94.i = icmp eq i32 %439, 0
  br i1 %cmp94.i, label %if.then96.i, label %if.end91.i.if.end100.i_crit_edge

if.end91.i.if.end100.i_crit_edge:                 ; preds = %if.end91.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end100.i

if.then96.i:                                      ; preds = %if.end91.i
  call void @__sanitizer_cov_trace_pc() #16
  %440 = ptrtoint ptr %backbias_response_time.i to i32
  call void @__asan_store4_noabort(i32 %440)
  store i32 1000, ptr %backbias_response_time.i, align 4
  br label %if.end100.i

if.end100.i:                                      ; preds = %if.then96.i, %if.end91.i.if.end100.i_crit_edge
  %call101.i = call i32 @amdgpu_atombios_get_clock_dividers(ptr noundef %handle, i8 noundef zeroext 2, i32 noundef 0, i1 noundef zeroext false, ptr noundef nonnull %dividers.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call101.i)
  %tobool102.not.i = icmp eq i32 %call101.i, 0
  br i1 %tobool102.not.i, label %if.end100.i.if.end106.i_crit_edge, label %if.then103.i

if.end100.i.if.end106.i_crit_edge:                ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end106.i

if.then103.i:                                     ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #16
  %ref_div.i = getelementptr inbounds %struct.atom_clock_dividers, ptr %dividers.i, i32 0, i32 2
  %441 = ptrtoint ptr %ref_div.i to i32
  call void @__asan_load4_noabort(i32 %441)
  %442 = load i32, ptr %ref_div.i, align 4
  %add.i = add i32 %442, 1
  br label %if.end106.i

if.end106.i:                                      ; preds = %if.then103.i, %if.end100.i.if.end106.i_crit_edge
  %add.sink.i = phi i32 [ %add.i, %if.then103.i ], [ 4, %if.end100.i.if.end106.i_crit_edge ]
  %443 = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 34
  %444 = ptrtoint ptr %443 to i32
  call void @__asan_store4_noabort(i32 %444)
  store i32 %add.sink.i, ptr %443, align 4
  %smu_uvd_hs.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 12
  %445 = ptrtoint ptr %smu_uvd_hs.i to i32
  call void @__asan_store1_noabort(i32 %445)
  store i8 0, ptr %smu_uvd_hs.i, align 1
  %mclk_strobe_mode_threshold.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 37
  %446 = ptrtoint ptr %mclk_strobe_mode_threshold.i to i32
  call void @__asan_store4_noabort(i32 %446)
  store i32 40000, ptr %mclk_strobe_mode_threshold.i, align 8
  %call.i332.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 2688, i32 noundef 0) #14
  %447 = and i32 %call.i332.i, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 4864, i32 %447)
  %448 = icmp eq i32 %447, 4864
  call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 2705, i32 noundef 11, i32 noundef 0) #14
  %call10.i.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 2706, i32 noundef 0) #14
  %449 = and i32 %call10.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %449)
  %tobool13.not.i.i = icmp eq i32 %449, 0
  %cond.i.i = select i1 %tobool13.not.i.i, i32 32, i32 16
  %call14.i.i = call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 2520, i32 noundef 0) #14
  %and15.i.i = lshr i32 %call14.i.i, 3
  %shr16.i.i = and i32 %and15.i.i, 7
  %and17.i.i = lshr i32 %call14.i.i, 6
  %shr18.i.i = and i32 %and17.i.i, 3
  %and20.i.i = and i32 %call14.i.i, 3
  %add22.i.i = add nuw nsw i32 %shr16.i.i, %and20.i.i
  %add24.i.i = add nuw nsw i32 %add22.i.i, %shr18.i.i
  %mul.i333.i = shl nuw nsw i32 %cond.i.i, %add24.i.i
  %pdev.i334.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %450 = ptrtoint ptr %pdev.i334.i to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load ptr, ptr %pdev.i334.i, align 4
  %device.i335.i = getelementptr inbounds %struct.pci_dev, ptr %451, i32 0, i32 8
  %452 = ptrtoint ptr %device.i335.i to i32
  call void @__asan_load2_noabort(i32 %452)
  %453 = load i16, ptr %device.i335.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26649, i16 %453)
  %cmp26.i.i = icmp eq i16 %453, 26649
  %shr.mask.i.i = and i32 %call.i332.i, -268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 1342177280, i32 %shr.mask.i.i)
  %cmp.i336.i = icmp eq i32 %shr.mask.i.i, 1342177280
  %or.cond.i.i = select i1 %cmp26.i.i, i1 %cmp.i336.i, i1 false
  %brmerge.i.i = select i1 %or.cond.i.i, i1 %448, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %mul.i333.i)
  %cmp34.i337.i = icmp eq i32 %mul.i333.i, 1024
  %or.cond47.i.i = select i1 %brmerge.i.i, i1 %cmp34.i337.i, i1 false
  br i1 %or.cond47.i.i, label %if.end106.i.if.end112.i_crit_edge, label %if.else109.i

if.end106.i.if.end112.i_crit_edge:                ; preds = %if.end106.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end112.i

if.else109.i:                                     ; preds = %if.end106.i
  call void @__sanitizer_cov_trace_pc() #16
  %454 = ptrtoint ptr %mclk_strobe_mode_threshold.i to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load i32, ptr %mclk_strobe_mode_threshold.i, align 8
  br label %if.end112.i

if.end112.i:                                      ; preds = %if.else109.i, %if.end106.i.if.end112.i_crit_edge
  %.sink.i = phi i32 [ %455, %if.else109.i ], [ 0, %if.end106.i.if.end112.i_crit_edge ]
  %456 = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 36
  %457 = ptrtoint ptr %456 to i32
  call void @__asan_store4_noabort(i32 %457)
  store i32 %.sink.i, ptr %456, align 4
  %mclk_edc_enable_threshold.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 38
  %458 = ptrtoint ptr %mclk_edc_enable_threshold.i to i32
  call void @__asan_store4_noabort(i32 %458)
  store i32 40000, ptr %mclk_edc_enable_threshold.i, align 4
  %mclk_edc_wr_enable_threshold.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 17
  %459 = ptrtoint ptr %mclk_edc_wr_enable_threshold.i to i32
  call void @__asan_store4_noabort(i32 %459)
  store i32 40000, ptr %mclk_edc_wr_enable_threshold.i, align 4
  %mclk_rtt_mode_threshold.i = getelementptr inbounds %struct.ni_power_info, ptr %call1.i.i.i.i, i32 0, i32 3
  %460 = ptrtoint ptr %mclk_rtt_mode_threshold.i to i32
  call void @__asan_store4_noabort(i32 %460)
  store i32 40000, ptr %mclk_rtt_mode_threshold.i, align 4
  %call114.i = call zeroext i1 @amdgpu_atombios_is_voltage_gpio(ptr noundef %handle, i8 noundef zeroext 1, i8 noundef zeroext 0) #14
  %voltage_control.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 5
  %frombool.i = zext i1 %call114.i to i8
  %461 = ptrtoint ptr %voltage_control.i to i32
  call void @__asan_store1_noabort(i32 %461)
  store i8 %frombool.i, ptr %voltage_control.i, align 1
  br i1 %call114.i, label %if.end112.i.if.end125.i_crit_edge, label %if.then117.i

if.end112.i.if.end125.i_crit_edge:                ; preds = %if.end112.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end125.i

if.then117.i:                                     ; preds = %if.end112.i
  %call118.i = call zeroext i1 @amdgpu_atombios_is_voltage_gpio(ptr noundef %handle, i8 noundef zeroext 1, i8 noundef zeroext 7) #14
  %voltage_control_svi2.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 18
  %frombool119.i = zext i1 %call118.i to i8
  %462 = ptrtoint ptr %voltage_control_svi2.i to i32
  call void @__asan_store1_noabort(i32 %462)
  store i8 %frombool119.i, ptr %voltage_control_svi2.i, align 1
  br i1 %call118.i, label %if.then122.i, label %if.then117.i.if.end125.i_crit_edge

if.then117.i.if.end125.i_crit_edge:               ; preds = %if.then117.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end125.i

if.then122.i:                                     ; preds = %if.then117.i
  call void @__sanitizer_cov_trace_pc() #16
  %svd_gpio_id.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 39
  %svc_gpio_id.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 40
  %call123.i = call i32 @amdgpu_atombios_get_svi2_info(ptr noundef %handle, i8 noundef zeroext 1, ptr noundef %svd_gpio_id.i, ptr noundef %svc_gpio_id.i) #14
  br label %if.end125.i

if.end125.i:                                      ; preds = %if.then122.i, %if.then117.i.if.end125.i_crit_edge, %if.end112.i.if.end125.i_crit_edge
  %call126.i = call zeroext i1 @amdgpu_atombios_is_voltage_gpio(ptr noundef %handle, i8 noundef zeroext 2, i8 noundef zeroext 0) #14
  %mvdd_control.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 6
  %frombool127.i = zext i1 %call126.i to i8
  %463 = ptrtoint ptr %mvdd_control.i to i32
  call void @__asan_store1_noabort(i32 %463)
  store i8 %frombool127.i, ptr %mvdd_control.i, align 2
  %call128.i = call zeroext i1 @amdgpu_atombios_is_voltage_gpio(ptr noundef %handle, i8 noundef zeroext 4, i8 noundef zeroext 0) #14
  %vddci_control.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 1
  %frombool129.i = zext i1 %call128.i to i8
  %464 = ptrtoint ptr %vddci_control.i to i32
  call void @__asan_store1_noabort(i32 %464)
  store i8 %frombool129.i, ptr %vddci_control.i, align 8
  br i1 %call128.i, label %if.end125.i.if.end135.i_crit_edge, label %if.then132.i

if.end125.i.if.end135.i_crit_edge:                ; preds = %if.end125.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end135.i

if.then132.i:                                     ; preds = %if.end125.i
  call void @__sanitizer_cov_trace_pc() #16
  %call133.i = call zeroext i1 @amdgpu_atombios_is_voltage_gpio(ptr noundef %handle, i8 noundef zeroext 4, i8 noundef zeroext 7) #14
  %vddci_control_svi2.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 19
  %frombool134.i = zext i1 %call133.i to i8
  %465 = ptrtoint ptr %vddci_control_svi2.i to i32
  call void @__asan_store1_noabort(i32 %465)
  store i8 %frombool134.i, ptr %vddci_control_svi2.i, align 2
  br label %if.end135.i

if.end135.i:                                      ; preds = %if.then132.i, %if.end125.i.if.end135.i_crit_edge
  %call136.i = call zeroext i1 @amdgpu_atombios_is_voltage_gpio(ptr noundef %handle, i8 noundef zeroext 1, i8 noundef zeroext 4) #14
  %vddc_phase_shed_control.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 15
  %frombool137.i = zext i1 %call136.i to i8
  %466 = ptrtoint ptr %vddc_phase_shed_control.i to i32
  call void @__asan_store1_noabort(i32 %466)
  store i8 %frombool137.i, ptr %vddc_phase_shed_control.i, align 2
  %467 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %467)
  %468 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ss.i.i) #14
  %469 = call ptr @memset(ptr %ss.i.i, i32 255, i32 16)
  %call1.i339.i = call zeroext i1 @amdgpu_atombios_get_asic_ss_info(ptr noundef %handle, ptr noundef nonnull %ss.i.i, i32 noundef 2, i32 noundef 0) #14
  %sclk_ss.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %468, i32 0, i32 7
  %frombool.i.i = zext i1 %call1.i339.i to i8
  %470 = ptrtoint ptr %sclk_ss.i.i to i32
  call void @__asan_store1_noabort(i32 %470)
  store i8 %frombool.i.i, ptr %sclk_ss.i.i, align 1
  %call2.i.i = call zeroext i1 @amdgpu_atombios_get_asic_ss_info(ptr noundef %handle, ptr noundef nonnull %ss.i.i, i32 noundef 1, i32 noundef 0) #14
  %mclk_ss.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %468, i32 0, i32 8
  %frombool3.i.i = zext i1 %call2.i.i to i8
  %471 = ptrtoint ptr %mclk_ss.i.i to i32
  call void @__asan_store1_noabort(i32 %471)
  store i8 %frombool3.i.i, ptr %mclk_ss.i.i, align 4
  %472 = ptrtoint ptr %sclk_ss.i.i to i32
  call void @__asan_load1_noabort(i32 %472)
  %473 = load i8, ptr %sclk_ss.i.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %473)
  %tobool.not.i340.i = icmp ne i8 %473, 0
  %brmerge.i341.i = select i1 %tobool.not.i340.i, i1 true, i1 %call2.i.i
  %spec.select.i.i = zext i1 %brmerge.i341.i to i8
  %474 = getelementptr inbounds %struct.rv7xx_power_info, ptr %468, i32 0, i32 9
  %475 = ptrtoint ptr %474 to i32
  call void @__asan_store1_noabort(i32 %475)
  store i8 %spec.select.i.i, ptr %474, align 1
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ss.i.i) #14
  %asi.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 45
  %476 = ptrtoint ptr %asi.i to i32
  call void @__asan_store4_noabort(i32 %476)
  store i32 1000, ptr %asi.i, align 8
  %pasi.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 46
  %477 = ptrtoint ptr %pasi.i to i32
  call void @__asan_store4_noabort(i32 %477)
  store i32 400000, ptr %pasi.i, align 4
  %vrc.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 47
  %478 = ptrtoint ptr %vrc.i to i32
  call void @__asan_store4_noabort(i32 %478)
  store i32 12583091, ptr %vrc.i, align 16
  %gfx_clock_gating.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 10
  %479 = ptrtoint ptr %gfx_clock_gating.i to i32
  call void @__asan_store1_noabort(i32 %479)
  store i8 1, ptr %gfx_clock_gating.i, align 2
  %sclk_deep_sleep.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 9
  %480 = ptrtoint ptr %sclk_deep_sleep.i to i32
  call void @__asan_store1_noabort(i32 %480)
  store i8 1, ptr %sclk_deep_sleep.i, align 16
  %sclk_deep_sleep_above_low.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 17
  %481 = ptrtoint ptr %sclk_deep_sleep_above_low.i to i32
  call void @__asan_store1_noabort(i32 %481)
  store i8 0, ptr %sclk_deep_sleep_above_low.i, align 4
  %482 = ptrtoint ptr %int_thermal_type to i32
  call void @__asan_load4_noabort(i32 %482)
  %483 = load i32, ptr %int_thermal_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %483)
  %cmp139.not.i = icmp ne i32 %483, 0
  %spec.select.i = zext i1 %cmp139.not.i to i8
  %484 = getelementptr inbounds %struct.rv7xx_power_info, ptr %call1.i.i.i.i, i32 0, i32 14
  %485 = ptrtoint ptr %484 to i32
  call void @__asan_store1_noabort(i32 %485)
  store i8 %spec.select.i, ptr %484, align 2
  %dynamic_ac_timing.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 2
  %486 = ptrtoint ptr %dynamic_ac_timing.i to i32
  call void @__asan_store1_noabort(i32 %486)
  store i8 1, ptr %dynamic_ac_timing.i, align 1
  %light_sleep.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 5
  %487 = ptrtoint ptr %light_sleep.i to i32
  call void @__asan_store1_noabort(i32 %487)
  store i8 1, ptr %light_sleep.i, align 4
  %pcie_performance_request.i = getelementptr inbounds %struct.evergreen_power_info, ptr %call1.i.i.i.i, i32 0, i32 7
  %488 = ptrtoint ptr %pcie_performance_request.i to i32
  call void @__asan_store1_noabort(i32 %488)
  store i8 0, ptr %pcie_performance_request.i, align 2
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 20
  %489 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_store4_noabort(i32 %489)
  store i32 131072, ptr %sram_end.i, align 32
  %mclk_sclk_ratio.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 14
  %490 = ptrtoint ptr %mclk_sclk_ratio.i to i32
  call void @__asan_store4_noabort(i32 %490)
  store i32 4, ptr %mclk_sclk_ratio.i, align 4
  %sclk_mclk_delta.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 15
  %491 = ptrtoint ptr %sclk_mclk_delta.i to i32
  call void @__asan_store4_noabort(i32 %491)
  store i32 15000, ptr %sclk_mclk_delta.i, align 4
  %vddc_vddci_delta.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 16
  %492 = ptrtoint ptr %vddc_vddci_delta.i to i32
  call void @__asan_store2_noabort(i32 %492)
  store i16 200, ptr %vddc_vddci_delta.i, align 4
  %valid_sclk_values.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 10
  %493 = call ptr @memset(ptr %valid_sclk_values.i, i32 0, i32 16)
  %494 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %494)
  %495 = load ptr, ptr %priv.i, align 4
  %496 = ptrtoint ptr %asic_type.i to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load i32, ptr %asic_type.i, align 8
  %498 = zext i32 %497 to i64
  call void @__sanitizer_cov_trace_switch(i64 %498, ptr @__sancov_gen_cov_switch_values.92)
  switch i32 %497, label %if.else113.i.i [
    i32 0, label %if.then.i346.i
    i32 1, label %if.then20.i.i
    i32 2, label %if.then41.i.i
    i32 3, label %if.then80.i.i
    i32 4, label %if.then107.i.i
  ]

if.then.i346.i:                                   ; preds = %if.end135.i
  %cac_weights.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %499 = ptrtoint ptr %cac_weights.i.i to i32
  call void @__asan_store4_noabort(i32 %499)
  store ptr @cac_weights_tahiti, ptr %cac_weights.i.i, align 4
  %lcac_config.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 31
  %500 = ptrtoint ptr %lcac_config.i.i to i32
  call void @__asan_store4_noabort(i32 %500)
  store ptr @lcac_tahiti, ptr %lcac_config.i.i, align 4
  %cac_override.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 32
  %501 = ptrtoint ptr %cac_override.i.i to i32
  call void @__asan_store4_noabort(i32 %501)
  store ptr @cac_override_tahiti, ptr %cac_override.i.i, align 4
  %powertune_data.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 33
  %502 = ptrtoint ptr %powertune_data.i.i to i32
  call void @__asan_store4_noabort(i32 %502)
  store ptr @powertune_data_tahiti, ptr %powertune_data.i.i, align 4
  %dte_data.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %503 = call ptr @memcpy(ptr %dte_data.i.i, ptr @dte_data_tahiti, i32 208)
  %504 = ptrtoint ptr %pdev.i334.i to i32
  call void @__asan_load4_noabort(i32 %504)
  %505 = load ptr, ptr %pdev.i334.i, align 4
  %device.i345.i = getelementptr inbounds %struct.pci_dev, ptr %505, i32 0, i32 8
  %506 = ptrtoint ptr %device.i345.i to i32
  call void @__asan_load2_noabort(i32 %506)
  %507 = load i16, ptr %device.i345.i, align 2
  %508 = zext i16 %507 to i64
  call void @__sanitizer_cov_trace_switch(i64 %508, ptr @__sancov_gen_cov_switch_values.93)
  switch i16 %507, label %sw.default.i349.i [
    i16 26520, label %sw.bb.i.i
    i16 26521, label %sw.bb3.i.i
    i16 26512, label %if.then.i346.i.sw.bb5.i347.i_crit_edge
    i16 26513, label %if.then.i346.i.sw.bb5.i347.i_crit_edge195
    i16 26514, label %if.then.i346.i.sw.bb5.i347.i_crit_edge196
    i16 26526, label %if.then.i346.i.sw.bb5.i347.i_crit_edge197
    i16 26523, label %sw.bb7.i.i
    i16 26522, label %sw.bb9.i.i
  ]

if.then.i346.i.sw.bb5.i347.i_crit_edge197:        ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5.i347.i

if.then.i346.i.sw.bb5.i347.i_crit_edge196:        ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5.i347.i

if.then.i346.i.sw.bb5.i347.i_crit_edge195:        ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5.i347.i

if.then.i346.i.sw.bb5.i347.i_crit_edge:           ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb5.i347.i

sw.bb.i.i:                                        ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  %enable_dte_by_default.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35, i32 13
  %509 = ptrtoint ptr %enable_dte_by_default.i.i to i32
  call void @__asan_store1_noabort(i32 %509)
  store i8 1, ptr %enable_dte_by_default.i.i, align 4
  br label %if.end118.i.i

sw.bb3.i.i:                                       ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  %510 = call ptr @memcpy(ptr %dte_data.i.i, ptr @dte_data_new_zealand, i32 208)
  br label %if.end118.i.i

sw.bb5.i347.i:                                    ; preds = %if.then.i346.i.sw.bb5.i347.i_crit_edge, %if.then.i346.i.sw.bb5.i347.i_crit_edge195, %if.then.i346.i.sw.bb5.i347.i_crit_edge196, %if.then.i346.i.sw.bb5.i347.i_crit_edge197
  %511 = call ptr @memcpy(ptr %dte_data.i.i, ptr @dte_data_aruba_pro, i32 208)
  br label %if.end118.i.i

sw.bb7.i.i:                                       ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  %512 = call ptr @memcpy(ptr %dte_data.i.i, ptr @dte_data_malta, i32 208)
  br label %if.end118.i.i

sw.bb9.i.i:                                       ; preds = %if.then.i346.i
  call void @__sanitizer_cov_trace_pc() #16
  %513 = call ptr @memcpy(ptr %dte_data.i.i, ptr @dte_data_tahiti_pro, i32 208)
  br label %if.end118.i.i

sw.default.i349.i:                                ; preds = %if.then.i346.i
  %enable_dte_by_default12.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35, i32 13
  %514 = ptrtoint ptr %enable_dte_by_default12.i.i to i32
  call void @__asan_load1_noabort(i32 %514)
  %515 = load i8, ptr %enable_dte_by_default12.i.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %515)
  %tobool.not.i348.i = icmp eq i8 %515, 0
  br i1 %tobool.not.i348.i, label %sw.default.i349.i.if.end118.i.i_crit_edge, label %if.then16.i.i

sw.default.i349.i.if.end118.i.i_crit_edge:        ; preds = %sw.default.i349.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end118.i.i

if.then16.i.i:                                    ; preds = %sw.default.i349.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.53) #14
  br label %if.end118.i.i

if.then20.i.i:                                    ; preds = %if.end135.i
  %cac_weights21.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %516 = ptrtoint ptr %cac_weights21.i.i to i32
  call void @__asan_store4_noabort(i32 %516)
  store ptr @cac_weights_pitcairn, ptr %cac_weights21.i.i, align 4
  %lcac_config22.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 31
  %517 = ptrtoint ptr %lcac_config22.i.i to i32
  call void @__asan_store4_noabort(i32 %517)
  store ptr @lcac_pitcairn, ptr %lcac_config22.i.i, align 4
  %cac_override23.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 32
  %518 = ptrtoint ptr %cac_override23.i.i to i32
  call void @__asan_store4_noabort(i32 %518)
  store ptr @cac_override_pitcairn, ptr %cac_override23.i.i, align 4
  %powertune_data24.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 33
  %519 = ptrtoint ptr %powertune_data24.i.i to i32
  call void @__asan_store4_noabort(i32 %519)
  store ptr @powertune_data_pitcairn, ptr %powertune_data24.i.i, align 4
  %520 = ptrtoint ptr %pdev.i334.i to i32
  call void @__asan_load4_noabort(i32 %520)
  %521 = load ptr, ptr %pdev.i334.i, align 4
  %device26.i.i = getelementptr inbounds %struct.pci_dev, ptr %521, i32 0, i32 8
  %522 = ptrtoint ptr %device26.i.i to i32
  call void @__asan_load2_noabort(i32 %522)
  %523 = load i16, ptr %device26.i.i, align 2
  %524 = zext i16 %523 to i64
  call void @__sanitizer_cov_trace_switch(i64 %524, ptr @__sancov_gen_cov_switch_values.94)
  switch i16 %523, label %sw.default34.i.i [
    i16 26640, label %if.then20.i.i.sw.bb28.i.i_crit_edge
    i16 26648, label %if.then20.i.i.sw.bb28.i.i_crit_edge198
    i16 26649, label %if.then20.i.i.sw.bb30.i.i_crit_edge
    i16 26641, label %if.then20.i.i.sw.bb30.i.i_crit_edge199
    i16 26624, label %if.then20.i.i.sw.bb32.i.i_crit_edge
    i16 26630, label %if.then20.i.i.sw.bb32.i.i_crit_edge200
  ]

if.then20.i.i.sw.bb32.i.i_crit_edge200:           ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb32.i.i

if.then20.i.i.sw.bb32.i.i_crit_edge:              ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb32.i.i

if.then20.i.i.sw.bb30.i.i_crit_edge199:           ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb30.i.i

if.then20.i.i.sw.bb30.i.i_crit_edge:              ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb30.i.i

if.then20.i.i.sw.bb28.i.i_crit_edge198:           ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb28.i.i

if.then20.i.i.sw.bb28.i.i_crit_edge:              ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb28.i.i

sw.bb28.i.i:                                      ; preds = %if.then20.i.i.sw.bb28.i.i_crit_edge, %if.then20.i.i.sw.bb28.i.i_crit_edge198
  %dte_data29.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %525 = call ptr @memcpy(ptr %dte_data29.i.i, ptr @dte_data_curacao_xt, i32 208)
  br label %if.end118.i.i

sw.bb30.i.i:                                      ; preds = %if.then20.i.i.sw.bb30.i.i_crit_edge, %if.then20.i.i.sw.bb30.i.i_crit_edge199
  %dte_data31.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %526 = call ptr @memcpy(ptr %dte_data31.i.i, ptr @dte_data_curacao_pro, i32 208)
  br label %if.end118.i.i

sw.bb32.i.i:                                      ; preds = %if.then20.i.i.sw.bb32.i.i_crit_edge, %if.then20.i.i.sw.bb32.i.i_crit_edge200
  %dte_data33.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %527 = call ptr @memcpy(ptr %dte_data33.i.i, ptr @dte_data_neptune_xt, i32 208)
  br label %if.end118.i.i

sw.default34.i.i:                                 ; preds = %if.then20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %dte_data35.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %528 = call ptr @memset(ptr %dte_data35.i.i, i32 0, i32 208)
  br label %if.end118.i.i

if.then41.i.i:                                    ; preds = %if.end135.i
  %lcac_config42.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 31
  %529 = ptrtoint ptr %lcac_config42.i.i to i32
  call void @__asan_store4_noabort(i32 %529)
  store ptr @lcac_cape_verde, ptr %lcac_config42.i.i, align 4
  %cac_override43.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 32
  %530 = ptrtoint ptr %cac_override43.i.i to i32
  call void @__asan_store4_noabort(i32 %530)
  store ptr @cac_override_cape_verde, ptr %cac_override43.i.i, align 4
  %powertune_data44.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 33
  %531 = ptrtoint ptr %powertune_data44.i.i to i32
  call void @__asan_store4_noabort(i32 %531)
  store ptr @powertune_data_cape_verde, ptr %powertune_data44.i.i, align 4
  %532 = ptrtoint ptr %pdev.i334.i to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load ptr, ptr %pdev.i334.i, align 4
  %device46.i.i = getelementptr inbounds %struct.pci_dev, ptr %533, i32 0, i32 8
  %534 = ptrtoint ptr %device46.i.i to i32
  call void @__asan_load2_noabort(i32 %534)
  %535 = load i16, ptr %device46.i.i, align 2
  %536 = zext i16 %535 to i64
  call void @__sanitizer_cov_trace_switch(i64 %536, ptr @__sancov_gen_cov_switch_values.95)
  switch i16 %535, label %sw.default72.i.i [
    i16 26683, label %if.then41.i.i.sw.bb48.i.i_crit_edge
    i16 26687, label %if.then41.i.i.sw.bb48.i.i_crit_edge201
    i16 26665, label %if.then41.i.i.sw.bb48.i.i_crit_edge202
    i16 26677, label %if.then41.i.i.sw.bb48.i.i_crit_edge203
    i16 26668, label %sw.bb51.i.i
    i16 26661, label %if.then41.i.i.sw.bb54.i.i_crit_edge
    i16 26663, label %if.then41.i.i.sw.bb54.i.i_crit_edge204
    i16 26660, label %if.then41.i.i.sw.bb57.i.i_crit_edge
    i16 26669, label %if.then41.i.i.sw.bb57.i.i_crit_edge205
    i16 26671, label %sw.bb60.i.i
    i16 26656, label %sw.bb63.i.i
    i16 26657, label %sw.bb66.i.i
    i16 26659, label %if.then41.i.i.sw.bb69.i.i_crit_edge
    i16 26667, label %if.then41.i.i.sw.bb69.i.i_crit_edge206
    i16 26658, label %if.then41.i.i.sw.bb69.i.i_crit_edge207
    i16 26666, label %if.then41.i.i.sw.bb69.i.i_crit_edge208
  ]

if.then41.i.i.sw.bb69.i.i_crit_edge208:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb69.i.i

if.then41.i.i.sw.bb69.i.i_crit_edge207:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb69.i.i

if.then41.i.i.sw.bb69.i.i_crit_edge206:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb69.i.i

if.then41.i.i.sw.bb69.i.i_crit_edge:              ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb69.i.i

if.then41.i.i.sw.bb57.i.i_crit_edge205:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb57.i.i

if.then41.i.i.sw.bb57.i.i_crit_edge:              ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb57.i.i

if.then41.i.i.sw.bb54.i.i_crit_edge204:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb54.i.i

if.then41.i.i.sw.bb54.i.i_crit_edge:              ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb54.i.i

if.then41.i.i.sw.bb48.i.i_crit_edge203:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb48.i.i

if.then41.i.i.sw.bb48.i.i_crit_edge202:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb48.i.i

if.then41.i.i.sw.bb48.i.i_crit_edge201:           ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb48.i.i

if.then41.i.i.sw.bb48.i.i_crit_edge:              ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb48.i.i

sw.bb48.i.i:                                      ; preds = %if.then41.i.i.sw.bb48.i.i_crit_edge, %if.then41.i.i.sw.bb48.i.i_crit_edge201, %if.then41.i.i.sw.bb48.i.i_crit_edge202, %if.then41.i.i.sw.bb48.i.i_crit_edge203
  %cac_weights49.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %537 = ptrtoint ptr %cac_weights49.i.i to i32
  call void @__asan_store4_noabort(i32 %537)
  store ptr @cac_weights_cape_verde_pro, ptr %cac_weights49.i.i, align 4
  %dte_data50.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %538 = call ptr @memset(ptr %dte_data50.i.i, i32 0, i32 208)
  br label %if.end118.i.i

sw.bb51.i.i:                                      ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights52.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %539 = ptrtoint ptr %cac_weights52.i.i to i32
  call void @__asan_store4_noabort(i32 %539)
  store ptr @cac_weights_cape_verde_pro, ptr %cac_weights52.i.i, align 4
  %dte_data53.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %540 = call ptr @memcpy(ptr %dte_data53.i.i, ptr @dte_data_sun_xt, i32 208)
  br label %if.end118.i.i

sw.bb54.i.i:                                      ; preds = %if.then41.i.i.sw.bb54.i.i_crit_edge, %if.then41.i.i.sw.bb54.i.i_crit_edge204
  %cac_weights55.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %541 = ptrtoint ptr %cac_weights55.i.i to i32
  call void @__asan_store4_noabort(i32 %541)
  store ptr @cac_weights_heathrow, ptr %cac_weights55.i.i, align 4
  %dte_data56.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %542 = call ptr @memset(ptr %dte_data56.i.i, i32 0, i32 208)
  br label %if.end118.i.i

sw.bb57.i.i:                                      ; preds = %if.then41.i.i.sw.bb57.i.i_crit_edge, %if.then41.i.i.sw.bb57.i.i_crit_edge205
  %cac_weights58.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %543 = ptrtoint ptr %cac_weights58.i.i to i32
  call void @__asan_store4_noabort(i32 %543)
  store ptr @cac_weights_chelsea_xt, ptr %cac_weights58.i.i, align 4
  %dte_data59.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %544 = call ptr @memset(ptr %dte_data59.i.i, i32 0, i32 208)
  br label %if.end118.i.i

sw.bb60.i.i:                                      ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights61.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %545 = ptrtoint ptr %cac_weights61.i.i to i32
  call void @__asan_store4_noabort(i32 %545)
  store ptr @cac_weights_chelsea_pro, ptr %cac_weights61.i.i, align 4
  %dte_data62.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %546 = call ptr @memset(ptr %dte_data62.i.i, i32 0, i32 208)
  br label %if.end118.i.i

sw.bb63.i.i:                                      ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights64.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %547 = ptrtoint ptr %cac_weights64.i.i to i32
  call void @__asan_store4_noabort(i32 %547)
  store ptr @cac_weights_heathrow, ptr %cac_weights64.i.i, align 4
  %dte_data65.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %548 = call ptr @memcpy(ptr %dte_data65.i.i, ptr @dte_data_venus_xtx, i32 208)
  br label %if.end118.i.i

sw.bb66.i.i:                                      ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights67.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %549 = ptrtoint ptr %cac_weights67.i.i to i32
  call void @__asan_store4_noabort(i32 %549)
  store ptr @cac_weights_heathrow, ptr %cac_weights67.i.i, align 4
  %dte_data68.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %550 = call ptr @memcpy(ptr %dte_data68.i.i, ptr @dte_data_venus_xt, i32 208)
  br label %if.end118.i.i

sw.bb69.i.i:                                      ; preds = %if.then41.i.i.sw.bb69.i.i_crit_edge, %if.then41.i.i.sw.bb69.i.i_crit_edge206, %if.then41.i.i.sw.bb69.i.i_crit_edge207, %if.then41.i.i.sw.bb69.i.i_crit_edge208
  %cac_weights70.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %551 = ptrtoint ptr %cac_weights70.i.i to i32
  call void @__asan_store4_noabort(i32 %551)
  store ptr @cac_weights_chelsea_pro, ptr %cac_weights70.i.i, align 4
  %dte_data71.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %552 = call ptr @memcpy(ptr %dte_data71.i.i, ptr @dte_data_venus_pro, i32 208)
  br label %if.end118.i.i

sw.default72.i.i:                                 ; preds = %if.then41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights73.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %553 = ptrtoint ptr %cac_weights73.i.i to i32
  call void @__asan_store4_noabort(i32 %553)
  store ptr @cac_weights_cape_verde, ptr %cac_weights73.i.i, align 4
  %dte_data74.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %554 = call ptr @memset(ptr %dte_data74.i.i, i32 0, i32 208)
  br label %if.end118.i.i

if.then80.i.i:                                    ; preds = %if.end135.i
  %lcac_config81.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 31
  %555 = ptrtoint ptr %lcac_config81.i.i to i32
  call void @__asan_store4_noabort(i32 %555)
  store ptr @lcac_mars_pro, ptr %lcac_config81.i.i, align 4
  %cac_override82.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 32
  %556 = ptrtoint ptr %cac_override82.i.i to i32
  call void @__asan_store4_noabort(i32 %556)
  store ptr @cac_override_oland, ptr %cac_override82.i.i, align 4
  %powertune_data83.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 33
  %557 = ptrtoint ptr %powertune_data83.i.i to i32
  call void @__asan_store4_noabort(i32 %557)
  store ptr @powertune_data_mars_pro, ptr %powertune_data83.i.i, align 4
  %dte_data84.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %558 = call ptr @memcpy(ptr %dte_data84.i.i, ptr @dte_data_mars_pro, i32 208)
  %559 = ptrtoint ptr %pdev.i334.i to i32
  call void @__asan_load4_noabort(i32 %559)
  %560 = load ptr, ptr %pdev.i334.i, align 4
  %device86.i.i = getelementptr inbounds %struct.pci_dev, ptr %560, i32 0, i32 8
  %561 = ptrtoint ptr %device86.i.i to i32
  call void @__asan_load2_noabort(i32 %561)
  %562 = load i16, ptr %device86.i.i, align 2
  %563 = zext i16 %562 to i64
  call void @__sanitizer_cov_trace_switch(i64 %563, ptr @__sancov_gen_cov_switch_values.96)
  switch i16 %562, label %sw.default96.i.i [
    i16 26113, label %if.then80.i.i.sw.bb88.i.i_crit_edge
    i16 26145, label %if.then80.i.i.sw.bb88.i.i_crit_edge209
    i16 26115, label %if.then80.i.i.sw.bb88.i.i_crit_edge210
    i16 26117, label %if.then80.i.i.sw.bb88.i.i_crit_edge211
    i16 26112, label %if.then80.i.i.sw.bb90.i.i_crit_edge
    i16 26118, label %if.then80.i.i.sw.bb90.i.i_crit_edge212
    i16 26144, label %if.then80.i.i.sw.bb90.i.i_crit_edge213
    i16 26116, label %if.then80.i.i.sw.bb90.i.i_crit_edge214
    i16 26129, label %if.then80.i.i.sw.bb92.i.i_crit_edge
    i16 26131, label %if.then80.i.i.sw.bb92.i.i_crit_edge215
    i16 26120, label %if.then80.i.i.sw.bb92.i.i_crit_edge216
    i16 26128, label %sw.bb94.i.i
  ]

if.then80.i.i.sw.bb92.i.i_crit_edge216:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb92.i.i

if.then80.i.i.sw.bb92.i.i_crit_edge215:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb92.i.i

if.then80.i.i.sw.bb92.i.i_crit_edge:              ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb92.i.i

if.then80.i.i.sw.bb90.i.i_crit_edge214:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb90.i.i

if.then80.i.i.sw.bb90.i.i_crit_edge213:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb90.i.i

if.then80.i.i.sw.bb90.i.i_crit_edge212:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb90.i.i

if.then80.i.i.sw.bb90.i.i_crit_edge:              ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb90.i.i

if.then80.i.i.sw.bb88.i.i_crit_edge211:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb88.i.i

if.then80.i.i.sw.bb88.i.i_crit_edge210:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb88.i.i

if.then80.i.i.sw.bb88.i.i_crit_edge209:           ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb88.i.i

if.then80.i.i.sw.bb88.i.i_crit_edge:              ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb88.i.i

sw.bb88.i.i:                                      ; preds = %if.then80.i.i.sw.bb88.i.i_crit_edge, %if.then80.i.i.sw.bb88.i.i_crit_edge209, %if.then80.i.i.sw.bb88.i.i_crit_edge210, %if.then80.i.i.sw.bb88.i.i_crit_edge211
  %cac_weights89.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %564 = ptrtoint ptr %cac_weights89.i.i to i32
  call void @__asan_store4_noabort(i32 %564)
  store ptr @cac_weights_mars_pro, ptr %cac_weights89.i.i, align 4
  br label %if.end118.i.i

sw.bb90.i.i:                                      ; preds = %if.then80.i.i.sw.bb90.i.i_crit_edge, %if.then80.i.i.sw.bb90.i.i_crit_edge212, %if.then80.i.i.sw.bb90.i.i_crit_edge213, %if.then80.i.i.sw.bb90.i.i_crit_edge214
  %cac_weights91.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %565 = ptrtoint ptr %cac_weights91.i.i to i32
  call void @__asan_store4_noabort(i32 %565)
  store ptr @cac_weights_mars_xt, ptr %cac_weights91.i.i, align 4
  br label %if.end118.i.i

sw.bb92.i.i:                                      ; preds = %if.then80.i.i.sw.bb92.i.i_crit_edge, %if.then80.i.i.sw.bb92.i.i_crit_edge215, %if.then80.i.i.sw.bb92.i.i_crit_edge216
  %cac_weights93.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %566 = ptrtoint ptr %cac_weights93.i.i to i32
  call void @__asan_store4_noabort(i32 %566)
  store ptr @cac_weights_oland_pro, ptr %cac_weights93.i.i, align 4
  br label %if.end118.i.i

sw.bb94.i.i:                                      ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights95.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %567 = ptrtoint ptr %cac_weights95.i.i to i32
  call void @__asan_store4_noabort(i32 %567)
  store ptr @cac_weights_oland_xt, ptr %cac_weights95.i.i, align 4
  br label %if.end118.i.i

sw.default96.i.i:                                 ; preds = %if.then80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights97.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %568 = ptrtoint ptr %cac_weights97.i.i to i32
  call void @__asan_store4_noabort(i32 %568)
  store ptr @cac_weights_oland, ptr %cac_weights97.i.i, align 4
  %569 = ptrtoint ptr %lcac_config81.i.i to i32
  call void @__asan_store4_noabort(i32 %569)
  store ptr @lcac_oland, ptr %lcac_config81.i.i, align 4
  %570 = ptrtoint ptr %cac_override82.i.i to i32
  call void @__asan_store4_noabort(i32 %570)
  store ptr @cac_override_oland, ptr %cac_override82.i.i, align 4
  %571 = ptrtoint ptr %powertune_data83.i.i to i32
  call void @__asan_store4_noabort(i32 %571)
  store ptr @powertune_data_oland, ptr %powertune_data83.i.i, align 4
  %572 = call ptr @memset(ptr %dte_data84.i.i, i32 0, i32 208)
  br label %if.end118.i.i

if.then107.i.i:                                   ; preds = %if.end135.i
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights108.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 30
  %573 = ptrtoint ptr %cac_weights108.i.i to i32
  call void @__asan_store4_noabort(i32 %573)
  store ptr @cac_weights_hainan, ptr %cac_weights108.i.i, align 4
  %lcac_config109.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 31
  %574 = ptrtoint ptr %lcac_config109.i.i to i32
  call void @__asan_store4_noabort(i32 %574)
  store ptr @lcac_oland, ptr %lcac_config109.i.i, align 4
  %cac_override110.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 32
  %575 = ptrtoint ptr %cac_override110.i.i to i32
  call void @__asan_store4_noabort(i32 %575)
  store ptr @cac_override_oland, ptr %cac_override110.i.i, align 4
  %powertune_data111.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 33
  %576 = ptrtoint ptr %powertune_data111.i.i to i32
  call void @__asan_store4_noabort(i32 %576)
  store ptr @powertune_data_hainan, ptr %powertune_data111.i.i, align 4
  %dte_data112.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35
  %577 = call ptr @memcpy(ptr %dte_data112.i.i, ptr @dte_data_sun_xt, i32 208)
  br label %if.end118.i.i

if.else113.i.i:                                   ; preds = %if.end135.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.54) #14
  br label %si_initialize_powertune_defaults.exit.i

if.end118.i.i:                                    ; preds = %if.then107.i.i, %sw.default96.i.i, %sw.bb94.i.i, %sw.bb92.i.i, %sw.bb90.i.i, %sw.bb88.i.i, %sw.default72.i.i, %sw.bb69.i.i, %sw.bb66.i.i, %sw.bb63.i.i, %sw.bb60.i.i, %sw.bb57.i.i, %sw.bb54.i.i, %sw.bb51.i.i, %sw.bb48.i.i, %sw.default34.i.i, %sw.bb32.i.i, %sw.bb30.i.i, %sw.bb28.i.i, %if.then16.i.i, %sw.default.i349.i.if.end118.i.i_crit_edge, %sw.bb9.i.i, %sw.bb7.i.i, %sw.bb5.i347.i, %sw.bb3.i.i, %sw.bb.i.i
  %update_dte_from_pl2.0.off0.i.i = phi i1 [ false, %if.then16.i.i ], [ false, %sw.default.i349.i.if.end118.i.i_crit_edge ], [ true, %sw.bb9.i.i ], [ true, %sw.bb7.i.i ], [ true, %sw.bb5.i347.i ], [ false, %sw.bb3.i.i ], [ false, %sw.bb.i.i ], [ false, %sw.default34.i.i ], [ true, %sw.bb32.i.i ], [ true, %sw.bb30.i.i ], [ true, %sw.bb28.i.i ], [ false, %sw.default72.i.i ], [ false, %sw.bb69.i.i ], [ false, %sw.bb66.i.i ], [ false, %sw.bb63.i.i ], [ false, %sw.bb60.i.i ], [ false, %sw.bb57.i.i ], [ false, %sw.bb54.i.i ], [ true, %sw.bb51.i.i ], [ false, %sw.bb48.i.i ], [ false, %sw.default96.i.i ], [ true, %sw.bb94.i.i ], [ true, %sw.bb92.i.i ], [ true, %sw.bb90.i.i ], [ true, %sw.bb88.i.i ], [ true, %if.then107.i.i ]
  %enable_power_containment.i.i = getelementptr inbounds %struct.ni_power_info, ptr %495, i32 0, i32 10
  %578 = ptrtoint ptr %enable_power_containment.i.i to i32
  call void @__asan_store1_noabort(i32 %578)
  store i8 0, ptr %enable_power_containment.i.i, align 2
  %enable_cac.i.i = getelementptr inbounds %struct.ni_power_info, ptr %495, i32 0, i32 11
  %579 = ptrtoint ptr %enable_cac.i.i to i32
  call void @__asan_store1_noabort(i32 %579)
  store i8 0, ptr %enable_cac.i.i, align 1
  %enable_sq_ramping.i.i = getelementptr inbounds %struct.ni_power_info, ptr %495, i32 0, i32 12
  %580 = ptrtoint ptr %enable_sq_ramping.i.i to i32
  call void @__asan_store1_noabort(i32 %580)
  store i8 0, ptr %enable_sq_ramping.i.i, align 4
  %enable_dte.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 13
  %581 = ptrtoint ptr %enable_dte.i.i to i32
  call void @__asan_store1_noabort(i32 %581)
  store i8 0, ptr %enable_dte.i.i, align 4
  %powertune_data119.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 33
  %582 = ptrtoint ptr %powertune_data119.i.i to i32
  call void @__asan_load4_noabort(i32 %582)
  %583 = load ptr, ptr %powertune_data119.i.i, align 4
  %enable_powertune_by_default.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %583, i32 0, i32 9
  %584 = ptrtoint ptr %enable_powertune_by_default.i.i to i32
  call void @__asan_load1_noabort(i32 %584)
  %585 = load i8, ptr %enable_powertune_by_default.i.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %585)
  %tobool120.not.i.i = icmp eq i8 %585, 0
  br i1 %tobool120.not.i.i, label %if.end118.i.i.if.end135.i.i_crit_edge, label %if.then121.i.i

if.end118.i.i.if.end135.i.i_crit_edge:            ; preds = %if.end118.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end135.i.i

if.then121.i.i:                                   ; preds = %if.end118.i.i
  %586 = ptrtoint ptr %enable_power_containment.i.i to i32
  call void @__asan_store1_noabort(i32 %586)
  store i8 1, ptr %enable_power_containment.i.i, align 2
  %587 = ptrtoint ptr %enable_cac.i.i to i32
  call void @__asan_store1_noabort(i32 %587)
  store i8 1, ptr %enable_cac.i.i, align 1
  %enable_dte_by_default125.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35, i32 13
  %588 = ptrtoint ptr %enable_dte_by_default125.i.i to i32
  call void @__asan_load1_noabort(i32 %588)
  %589 = load i8, ptr %enable_dte_by_default125.i.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %589)
  %tobool126.not.i.i = icmp eq i8 %589, 0
  br i1 %tobool126.not.i.i, label %if.then121.i.i.if.end133.i.i_crit_edge, label %if.then127.i.i

if.then121.i.i.if.end133.i.i_crit_edge:           ; preds = %if.then121.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end133.i.i

if.then127.i.i:                                   ; preds = %if.then121.i.i
  %590 = ptrtoint ptr %enable_dte.i.i to i32
  call void @__asan_store1_noabort(i32 %590)
  store i8 1, ptr %enable_dte.i.i, align 4
  br i1 %update_dte_from_pl2.0.off0.i.i, label %if.then130.i.i, label %if.then127.i.i.if.end133.i.i_crit_edge

if.then127.i.i.if.end133.i.i_crit_edge:           ; preds = %if.then127.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end133.i.i

if.then130.i.i:                                   ; preds = %if.then127.i.i
  %near_tdp_limit.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 24
  %591 = ptrtoint ptr %near_tdp_limit.i.i.i to i32
  call void @__asan_load4_noabort(i32 %591)
  %592 = load i32, ptr %near_tdp_limit.i.i.i, align 4
  %k3.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35, i32 2
  %593 = ptrtoint ptr %k3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %593)
  %594 = load i32, ptr %k3.i.i.i, align 4
  %max_t.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35, i32 4
  %595 = ptrtoint ptr %max_t.i.i.i to i32
  call void @__asan_load4_noabort(i32 %595)
  %596 = load i32, ptr %max_t.i.i.i, align 4
  %t0.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35, i32 3
  %597 = ptrtoint ptr %t0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %597)
  %598 = load i32, ptr %t0.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %592)
  %cmp.not.i.i.i = icmp eq i32 %592, 0
  br i1 %cmp.not.i.i.i, label %if.then130.i.i.if.else.i.i356.i_crit_edge, label %land.lhs.true.i.i.i

if.then130.i.i.if.else.i.i356.i_crit_edge:        ; preds = %if.then130.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i.i356.i

land.lhs.true.i.i.i:                              ; preds = %if.then130.i.i
  %tdp_limit.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 23
  %599 = ptrtoint ptr %tdp_limit.i.i.i to i32
  call void @__asan_load4_noabort(i32 %599)
  %600 = load i32, ptr %tdp_limit.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %592, i32 %600)
  %cmp4.not.i.i.i = icmp ugt i32 %592, %600
  br i1 %cmp4.not.i.i.i, label %land.lhs.true.i.i.i.if.else.i.i356.i_crit_edge, label %if.then.i.i350.i

land.lhs.true.i.i.i.if.else.i.i356.i_crit_edge:   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i.i356.i

if.then.i.i350.i:                                 ; preds = %land.lhs.true.i.i.i
  %tdep_count.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 35, i32 8
  %601 = ptrtoint ptr %tdep_count.i.i.i to i32
  call void @__asan_store1_noabort(i32 %601)
  store i8 3, ptr %tdep_count.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %594)
  %cmp541.not.i.i.i = icmp eq i32 %594, 0
  br i1 %cmp541.not.i.i.i, label %if.then.i.i350.i.for.end.i.i355.i_crit_edge, label %for.body.lr.ph.i.i351.i

if.then.i.i350.i.for.end.i.i355.i_crit_edge:      ; preds = %if.then.i.i350.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i355.i

for.body.lr.ph.i.i351.i:                          ; preds = %if.then.i.i350.i
  %div.i.i.i = udiv i32 %598, 1000
  %sub.i.i.i = sub i32 %596, %div.i.i.i
  %mul.i.i.i = shl i32 %sub.i.i.i, 14
  %mul7.i.i.i = mul i32 %592, 100
  br label %for.body.i.i354.i

for.body.i.i354.i:                                ; preds = %for.body.i.i354.i.for.body.i.i354.i_crit_edge, %for.body.lr.ph.i.i351.i
  %i.042.i.i.i = phi i32 [ 0, %for.body.lr.ph.i.i351.i ], [ %inc.i.i353.i, %for.body.i.i354.i.for.body.i.i354.i_crit_edge ]
  %arrayidx.i.i352.i = getelementptr [5 x i32], ptr @__const.si_update_dte_from_pl2.t_split, i32 0, i32 %i.042.i.i.i
  %602 = ptrtoint ptr %arrayidx.i.i352.i to i32
  call void @__asan_load4_noabort(i32 %602)
  %603 = load i32, ptr %arrayidx.i.i352.i, align 4
  %mul6.i.i.i = mul i32 %mul.i.i.i, %603
  %div8.i.i.i = udiv i32 %mul6.i.i.i, %mul7.i.i.i
  %arrayidx9.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 1, i32 %i.042.i.i.i
  %604 = ptrtoint ptr %arrayidx9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %604)
  store i32 %div8.i.i.i, ptr %arrayidx9.i.i.i, align 4
  %inc.i.i353.i = add nuw i32 %i.042.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i353.i, %594
  br i1 %exitcond.not.i.i.i, label %for.body.i.i354.i.for.end.i.i355.i_crit_edge, label %for.body.i.i354.i.for.body.i.i354.i_crit_edge

for.body.i.i354.i.for.body.i.i354.i_crit_edge:    ; preds = %for.body.i.i354.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i354.i

for.body.i.i354.i.for.end.i.i355.i_crit_edge:     ; preds = %for.body.i.i354.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i355.i

for.end.i.i355.i:                                 ; preds = %for.body.i.i354.i.for.end.i.i355.i_crit_edge, %if.then.i.i350.i.for.end.i.i355.i_crit_edge
  %arrayidx11.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 1, i32 4
  %605 = ptrtoint ptr %arrayidx11.i.i.i to i32
  call void @__asan_load4_noabort(i32 %605)
  %606 = load i32, ptr %arrayidx11.i.i.i, align 4
  %mul12.i.i.i = shl i32 %606, 1
  %arrayidx13.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 1
  %607 = ptrtoint ptr %arrayidx13.i.i.i to i32
  call void @__asan_store4_noabort(i32 %607)
  store i32 %mul12.i.i.i, ptr %arrayidx13.i.i.i, align 4
  %arrayidx20.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 2
  %608 = ptrtoint ptr %arrayidx20.i.i.i to i32
  call void @__asan_store4_noabort(i32 %608)
  store i32 %606, ptr %arrayidx20.i.i.i, align 4
  %arrayidx20.1.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 3
  %609 = ptrtoint ptr %arrayidx20.1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %609)
  store i32 %606, ptr %arrayidx20.1.i.i.i, align 4
  %arrayidx20.2.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 4
  %610 = ptrtoint ptr %arrayidx20.2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %610)
  store i32 %606, ptr %arrayidx20.2.i.i.i, align 4
  %arrayidx20.3.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 5
  %611 = ptrtoint ptr %arrayidx20.3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %611)
  store i32 %606, ptr %arrayidx20.3.i.i.i, align 4
  %arrayidx20.4.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 6
  %612 = ptrtoint ptr %arrayidx20.4.i.i.i to i32
  call void @__asan_store4_noabort(i32 %612)
  store i32 %606, ptr %arrayidx20.4.i.i.i, align 4
  %arrayidx20.5.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 7
  %613 = ptrtoint ptr %arrayidx20.5.i.i.i to i32
  call void @__asan_store4_noabort(i32 %613)
  store i32 %606, ptr %arrayidx20.5.i.i.i, align 4
  %arrayidx20.6.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 8
  %614 = ptrtoint ptr %arrayidx20.6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %614)
  store i32 %606, ptr %arrayidx20.6.i.i.i, align 4
  %arrayidx20.7.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 9
  %615 = ptrtoint ptr %arrayidx20.7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %615)
  store i32 %606, ptr %arrayidx20.7.i.i.i, align 4
  %arrayidx20.8.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 10
  %616 = ptrtoint ptr %arrayidx20.8.i.i.i to i32
  call void @__asan_store4_noabort(i32 %616)
  store i32 %606, ptr %arrayidx20.8.i.i.i, align 4
  %arrayidx20.9.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 11
  %617 = ptrtoint ptr %arrayidx20.9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %617)
  store i32 %606, ptr %arrayidx20.9.i.i.i, align 4
  %arrayidx20.10.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 12
  %618 = ptrtoint ptr %arrayidx20.10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %618)
  store i32 %606, ptr %arrayidx20.10.i.i.i, align 4
  %arrayidx20.11.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 13
  %619 = ptrtoint ptr %arrayidx20.11.i.i.i to i32
  call void @__asan_store4_noabort(i32 %619)
  store i32 %606, ptr %arrayidx20.11.i.i.i, align 4
  %arrayidx20.12.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 14
  %620 = ptrtoint ptr %arrayidx20.12.i.i.i to i32
  call void @__asan_store4_noabort(i32 %620)
  store i32 %606, ptr %arrayidx20.12.i.i.i, align 4
  %arrayidx20.13.i.i.i = getelementptr %struct.si_power_info, ptr %495, i32 0, i32 35, i32 11, i32 15
  %621 = ptrtoint ptr %arrayidx20.13.i.i.i to i32
  call void @__asan_store4_noabort(i32 %621)
  store i32 %606, ptr %arrayidx20.13.i.i.i, align 4
  br label %if.end133.i.i

if.else.i.i356.i:                                 ; preds = %land.lhs.true.i.i.i.if.else.i.i356.i_crit_edge, %if.then130.i.i.if.else.i.i356.i_crit_edge
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.65) #14
  br label %if.end133.i.i

if.end133.i.i:                                    ; preds = %if.else.i.i356.i, %for.end.i.i355.i, %if.then127.i.i.if.end133.i.i_crit_edge, %if.then121.i.i.if.end133.i.i_crit_edge
  %622 = ptrtoint ptr %enable_sq_ramping.i.i to i32
  call void @__asan_store1_noabort(i32 %622)
  store i8 1, ptr %enable_sq_ramping.i.i, align 4
  br label %if.end135.i.i

if.end135.i.i:                                    ; preds = %if.end133.i.i, %if.end118.i.i.if.end135.i.i_crit_edge
  %driver_calculate_cac_leakage.i.i = getelementptr inbounds %struct.ni_power_info, ptr %495, i32 0, i32 8
  %623 = ptrtoint ptr %driver_calculate_cac_leakage.i.i to i32
  call void @__asan_store1_noabort(i32 %623)
  store i8 1, ptr %driver_calculate_cac_leakage.i.i, align 4
  %cac_configuration_required.i.i = getelementptr inbounds %struct.ni_power_info, ptr %495, i32 0, i32 7
  %624 = ptrtoint ptr %cac_configuration_required.i.i to i32
  call void @__asan_store1_noabort(i32 %624)
  store i8 1, ptr %cac_configuration_required.i.i, align 1
  %support_cac_long_term_average.i.i = getelementptr inbounds %struct.ni_power_info, ptr %495, i32 0, i32 5
  %625 = ptrtoint ptr %support_cac_long_term_average.i.i to i32
  call void @__asan_store1_noabort(i32 %625)
  store i8 1, ptr %support_cac_long_term_average.i.i, align 1
  %626 = ptrtoint ptr %powertune_data119.i.i to i32
  call void @__asan_load4_noabort(i32 %626)
  %627 = load ptr, ptr %powertune_data119.i.i, align 4
  %l2_lta_window_size_default.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %627, i32 0, i32 1
  %628 = ptrtoint ptr %l2_lta_window_size_default.i.i to i32
  call void @__asan_load4_noabort(i32 %628)
  %629 = load i32, ptr %l2_lta_window_size_default.i.i, align 4
  %l2_lta_window_size.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 34, i32 3
  %630 = ptrtoint ptr %l2_lta_window_size.i.i to i32
  call void @__asan_store4_noabort(i32 %630)
  store i32 %629, ptr %l2_lta_window_size.i.i, align 4
  %lts_truncate_default.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %627, i32 0, i32 2
  %631 = ptrtoint ptr %lts_truncate_default.i.i to i32
  call void @__asan_load1_noabort(i32 %631)
  %632 = load i8, ptr %lts_truncate_default.i.i, align 4
  %lts_truncate.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 34, i32 4
  %633 = ptrtoint ptr %lts_truncate.i.i to i32
  call void @__asan_store1_noabort(i32 %633)
  store i8 %632, ptr %lts_truncate.i.i, align 4
  %disable_uvd_powertune.i.i = getelementptr inbounds %struct.si_power_info, ptr %495, i32 0, i32 34, i32 7
  %634 = ptrtoint ptr %disable_uvd_powertune.i.i to i32
  call void @__asan_store1_noabort(i32 %634)
  store i8 0, ptr %disable_uvd_powertune.i.i, align 1
  br label %si_initialize_powertune_defaults.exit.i

si_initialize_powertune_defaults.exit.i:          ; preds = %if.end135.i.i, %if.else113.i.i
  %max_clock_voltage_on_dc.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 12
  %635 = ptrtoint ptr %max_clock_voltage_on_dc.i to i32
  call void @__asan_load4_noabort(i32 %635)
  %636 = load i32, ptr %max_clock_voltage_on_dc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %636)
  %cmp174.i = icmp eq i32 %636, 0
  br i1 %cmp174.i, label %si_initialize_powertune_defaults.exit.i.if.then182.i_crit_edge, label %lor.lhs.false.i

si_initialize_powertune_defaults.exit.i.if.then182.i_crit_edge: ; preds = %si_initialize_powertune_defaults.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then182.i

lor.lhs.false.i:                                  ; preds = %si_initialize_powertune_defaults.exit.i
  %mclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 12, i32 1
  %637 = ptrtoint ptr %mclk.i to i32
  call void @__asan_load4_noabort(i32 %637)
  %638 = load i32, ptr %mclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %638)
  %cmp180.i = icmp eq i32 %638, 0
  br i1 %cmp180.i, label %lor.lhs.false.i.if.then182.i_crit_edge, label %lor.lhs.false.i.if.end57_crit_edge

lor.lhs.false.i.if.end57_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

lor.lhs.false.i.if.then182.i_crit_edge:           ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then182.i

if.then182.i:                                     ; preds = %lor.lhs.false.i.if.then182.i_crit_edge, %si_initialize_powertune_defaults.exit.i.if.then182.i_crit_edge
  %max_clock_voltage_on_ac.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 13
  %639 = call ptr @memcpy(ptr %max_clock_voltage_on_dc.i, ptr %max_clock_voltage_on_ac.i, i32 12)
  br label %if.end57

if.end57:                                         ; preds = %if.then182.i, %lor.lhs.false.i.if.end57_crit_edge
  %fan_ctrl_is_in_default_mode.i = getelementptr inbounds %struct.si_power_info, ptr %call1.i.i.i.i, i32 0, i32 41
  %640 = ptrtoint ptr %fan_ctrl_is_in_default_mode.i to i32
  call void @__asan_store1_noabort(i32 %640)
  store i8 1, ptr %fan_ctrl_is_in_default_mode.i, align 2
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %dividers.i) #14
  %boot_ps = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 4
  %641 = ptrtoint ptr %boot_ps to i32
  call void @__asan_load4_noabort(i32 %641)
  %642 = load ptr, ptr %boot_ps, align 4
  %requested_ps = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 3
  %643 = ptrtoint ptr %requested_ps to i32
  call void @__asan_store4_noabort(i32 %643)
  store ptr %642, ptr %requested_ps, align 4
  %current_ps = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 2
  %644 = ptrtoint ptr %current_ps to i32
  call void @__asan_store4_noabort(i32 %644)
  store ptr %642, ptr %current_ps, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dpm to i32))
  %645 = load i32, ptr @amdgpu_dpm, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %645)
  %cmp64 = icmp eq i32 %645, 1
  br i1 %cmp64, label %if.then65, label %if.end57.if.end66_crit_edge

if.end57.if.end66_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end66

if.then65:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  call void @amdgpu_pm_print_power_states(ptr noundef %handle) #14
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.end57.if.end66_crit_edge
  call void @mutex_unlock(ptr noundef %pm) #14
  %call72 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34) #19
  br label %cleanup

dpm_failed:                                       ; preds = %if.then24.i, %si_parse_power_table.exit.thread.i, %if.end6.i.dpm_failed_crit_edge, %si_patch_dependency_tables_based_on_leakage.exit.i.dpm_failed_crit_edge, %do.body.dpm_failed_crit_edge
  %retval.0.i.ph = phi i32 [ %retval.2.i.ph.i, %si_parse_power_table.exit.thread.i ], [ %call7.i, %if.end6.i.dpm_failed_crit_edge ], [ %call4.i, %si_patch_dependency_tables_based_on_leakage.exit.i.dpm_failed_crit_edge ], [ -12, %do.body.dpm_failed_crit_edge ], [ -12, %if.then24.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %dividers.i) #14
  %dpm.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15
  %646 = ptrtoint ptr %dpm.i to i32
  call void @__asan_load4_noabort(i32 %646)
  %647 = load ptr, ptr %dpm.i, align 4
  %tobool.not.i115 = icmp eq ptr %647, null
  br i1 %tobool.not.i115, label %dpm_failed.si_dpm_fini.exit_crit_edge, label %for.cond.preheader.i

dpm_failed.si_dpm_fini.exit_crit_edge:            ; preds = %dpm_failed
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_fini.exit

for.cond.preheader.i:                             ; preds = %dpm_failed
  %num_ps.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 1
  %648 = ptrtoint ptr %num_ps.i to i32
  call void @__asan_load4_noabort(i32 %648)
  %649 = load i32, ptr %num_ps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %649)
  %cmp21.i = icmp sgt i32 %649, 0
  br i1 %cmp21.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.si_dpm_fini.exit_crit_edge

for.cond.preheader.i.si_dpm_fini.exit_crit_edge:  ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_fini.exit

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.022.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %650 = ptrtoint ptr %dpm.i to i32
  call void @__asan_load4_noabort(i32 %650)
  %651 = load ptr, ptr %dpm.i, align 4
  %ps_priv.i = getelementptr %struct.amdgpu_ps, ptr %651, i32 %i.022.i, i32 9
  %652 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %652)
  %653 = load ptr, ptr %ps_priv.i, align 4
  call void @kfree(ptr noundef %653) #14
  %inc.i = add nuw nsw i32 %i.022.i, 1
  %654 = ptrtoint ptr %num_ps.i to i32
  call void @__asan_load4_noabort(i32 %654)
  %655 = load i32, ptr %num_ps.i, align 4
  %cmp.i116 = icmp slt i32 %inc.i, %655
  br i1 %cmp.i116, label %for.body.i.for.body.i_crit_edge, label %for.body.i.si_dpm_fini.exit_crit_edge

for.body.i.si_dpm_fini.exit_crit_edge:            ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_fini.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

si_dpm_fini.exit:                                 ; preds = %for.body.i.si_dpm_fini.exit_crit_edge, %for.cond.preheader.i.si_dpm_fini.exit_crit_edge, %dpm_failed.si_dpm_fini.exit_crit_edge
  %656 = ptrtoint ptr %dpm.i to i32
  call void @__asan_load4_noabort(i32 %656)
  %657 = load ptr, ptr %dpm.i, align 4
  call void @kfree(ptr noundef %657) #14
  %priv.i117 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %658 = ptrtoint ptr %priv.i117 to i32
  call void @__asan_load4_noabort(i32 %658)
  %659 = load ptr, ptr %priv.i117, align 4
  call void @kfree(ptr noundef %659) #14
  %entries.i118 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 4, i32 1
  %660 = ptrtoint ptr %entries.i118 to i32
  call void @__asan_load4_noabort(i32 %660)
  %661 = load ptr, ptr %entries.i118, align 4
  call void @kfree(ptr noundef %661) #14
  call void @amdgpu_free_extended_power_table(ptr noundef %handle) #14
  call void @mutex_unlock(ptr noundef %pm) #14
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.36) #14
  br label %cleanup

cleanup:                                          ; preds = %si_dpm_fini.exit, %if.end66, %si_dpm_init_microcode.exit, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i.ph, %si_dpm_fini.exit ], [ 0, %if.end66 ], [ %call, %entry.cleanup_crit_edge ], [ %call5, %if.end.cleanup_crit_edge ], [ 0, %if.end8.cleanup_crit_edge ], [ %err.0233.i, %si_dpm_init_microcode.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_sw_fini(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pm = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98
  %thermal = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 35
  %call = tail call zeroext i1 @flush_work(ptr noundef %thermal) #14
  tail call void @mutex_lock_nested(ptr noundef %pm, i32 noundef 0) #14
  %dpm.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15
  %0 = ptrtoint ptr %dpm.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dpm.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.si_dpm_fini.exit_crit_edge, label %for.cond.preheader.i

entry.si_dpm_fini.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_fini.exit

for.cond.preheader.i:                             ; preds = %entry
  %num_ps.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 1
  %2 = ptrtoint ptr %num_ps.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_ps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp21.i = icmp sgt i32 %3, 0
  br i1 %cmp21.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.si_dpm_fini.exit_crit_edge

for.cond.preheader.i.si_dpm_fini.exit_crit_edge:  ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_fini.exit

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.022.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %dpm.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dpm.i, align 4
  %ps_priv.i = getelementptr %struct.amdgpu_ps, ptr %5, i32 %i.022.i, i32 9
  %6 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ps_priv.i, align 4
  tail call void @kfree(ptr noundef %7) #14
  %inc.i = add nuw nsw i32 %i.022.i, 1
  %8 = ptrtoint ptr %num_ps.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_ps.i, align 4
  %cmp.i = icmp slt i32 %inc.i, %9
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.si_dpm_fini.exit_crit_edge

for.body.i.si_dpm_fini.exit_crit_edge:            ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_dpm_fini.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

si_dpm_fini.exit:                                 ; preds = %for.body.i.si_dpm_fini.exit_crit_edge, %for.cond.preheader.i.si_dpm_fini.exit_crit_edge, %entry.si_dpm_fini.exit_crit_edge
  %10 = ptrtoint ptr %dpm.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dpm.i, align 4
  tail call void @kfree(ptr noundef %11) #14
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %12 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %priv.i, align 4
  tail call void @kfree(ptr noundef %13) #14
  %entries.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 4, i32 1
  %14 = ptrtoint ptr %entries.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %entries.i, align 4
  tail call void @kfree(ptr noundef %15) #14
  tail call void @amdgpu_free_extended_power_table(ptr noundef %handle) #14
  tail call void @mutex_unlock(ptr noundef %pm) #14
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_hw_init(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @amdgpu_dpm to i32))
  %0 = load i32, ptr @amdgpu_dpm, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pm = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98
  tail call void @mutex_lock_nested(ptr noundef %pm, i32 noundef 0) #14
  tail call fastcc void @si_dpm_setup_asic(ptr noundef %handle)
  %call = tail call fastcc i32 @si_dpm_enable(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  %spec.select = zext i1 %tobool1.not to i8
  %1 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 13
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %spec.select, ptr %1, align 8
  tail call void @mutex_unlock(ptr noundef %pm) #14
  tail call void @amdgpu_pm_compute_clocks(ptr noundef %handle) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_hw_fini(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dpm_enabled = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 13
  %0 = ptrtoint ptr %dpm_enabled to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %dpm_enabled, align 8, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pm = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98
  tail call void @mutex_lock_nested(ptr noundef %pm, i32 noundef 0) #14
  tail call fastcc void @si_dpm_disable(ptr noundef %handle)
  tail call void @mutex_unlock(ptr noundef %pm) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_suspend(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dpm_enabled = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 13
  %0 = ptrtoint ptr %dpm_enabled to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %dpm_enabled, align 8, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pm = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98
  tail call void @mutex_lock_nested(ptr noundef %pm, i32 noundef 0) #14
  tail call fastcc void @si_dpm_disable(ptr noundef %handle)
  %boot_ps = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 4
  %2 = ptrtoint ptr %boot_ps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %boot_ps, align 4
  %requested_ps = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 3
  %4 = ptrtoint ptr %requested_ps to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %requested_ps, align 4
  %current_ps = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 2
  %5 = ptrtoint ptr %current_ps to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %3, ptr %current_ps, align 4
  tail call void @mutex_unlock(ptr noundef %pm) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_resume(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dpm_enabled = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 13
  %0 = ptrtoint ptr %dpm_enabled to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %dpm_enabled, align 8, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end15_crit_edge, label %if.then

entry.if.end15_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then:                                          ; preds = %entry
  %pm = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98
  tail call void @mutex_lock_nested(ptr noundef %pm, i32 noundef 0) #14
  tail call fastcc void @si_dpm_setup_asic(ptr noundef %handle)
  %call = tail call fastcc i32 @si_dpm_enable(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  %. = zext i1 %tobool2.not to i8
  %2 = ptrtoint ptr %dpm_enabled to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %., ptr %dpm_enabled, align 8
  tail call void @mutex_unlock(ptr noundef %pm) #14
  %3 = ptrtoint ptr %dpm_enabled to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %dpm_enabled, align 8, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool12.not = icmp eq i8 %4, 0
  br i1 %tobool12.not, label %if.then.if.end15_crit_edge, label %if.then13

if.then.if.end15_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then13:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @amdgpu_pm_compute_clocks(ptr noundef %handle) #14
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.then.if.end15_crit_edge, %entry.if.end15_crit_edge
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @si_dpm_is_idle(ptr nocapture noundef readnone %handle) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i1 true
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @si_dpm_wait_for_idle(ptr nocapture noundef readnone %handle) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @si_dpm_soft_reset(ptr nocapture noundef readnone %handle) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @si_dpm_set_clockgating_state(ptr nocapture noundef readnone %handle, i32 noundef %state) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @si_dpm_set_powergating_state(ptr nocapture noundef readnone %handle, i32 noundef %state) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_pre_set_power_state(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %requested_ps1 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 3
  %2 = ptrtoint ptr %requested_ps1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %requested_ps1, align 4
  %requested_ps.sroa.5.0..sroa_idx = getelementptr inbounds i8, ptr %3, i32 36
  %4 = ptrtoint ptr %requested_ps.sroa.5.0..sroa_idx to i32
  call void @__asan_load4_noabort(i32 %4)
  %requested_ps.sroa.5.0.copyload = load ptr, ptr %requested_ps.sroa.5.0..sroa_idx, align 4
  %requested_rps.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27
  %5 = call ptr @memmove(ptr %requested_rps.i, ptr %3, i32 36)
  %requested_ps.sroa.5.0.requested_rps.i.sroa_idx = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 9
  %6 = ptrtoint ptr %requested_ps.sroa.5.0.requested_rps.i.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %requested_ps.sroa.5.0.copyload, ptr %requested_ps.sroa.5.0.requested_rps.i.sroa_idx, align 4
  %requested_ps.i = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 23
  %7 = call ptr @memcpy(ptr %requested_ps.i, ptr %requested_ps.sroa.5.0.copyload, i32 324)
  store ptr %requested_ps.i, ptr %requested_ps.sroa.5.0.requested_rps.i.sroa_idx, align 4
  store ptr %requested_rps.i, ptr %requested_ps1, align 4
  %8 = load ptr, ptr %requested_ps.sroa.5.0.requested_rps.i.sroa_idx, align 4
  %asic_type.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 5
  %9 = ptrtoint ptr %asic_type.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %asic_type.i, align 8
  %11 = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.97)
  switch i32 %10, label %entry.if.end87.i_crit_edge [
    i32 4, label %if.then.i
    i32 3, label %if.then42.i
  ]

entry.if.end87.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i

if.then.i:                                        ; preds = %entry
  %pdev.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %12 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev.i, align 4
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 12
  %14 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %revision.i, align 4
  %16 = zext i8 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.98)
  switch i8 %15, label %lor.lhs.false8.i [
    i8 -61, label %if.then.i.if.then37.i_crit_edge
    i8 -127, label %if.then.i.lor.lhs.false31.i_crit_edge
  ]

if.then.i.lor.lhs.false31.i_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false31.i

if.then.i.if.then37.i_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then37.i

lor.lhs.false8.i:                                 ; preds = %if.then.i
  %device.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 8
  %17 = ptrtoint ptr %device.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %device.i, align 2
  %switch.tableidx = add i16 %18, -26212
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %switch.tableidx)
  %19 = icmp ult i16 %switch.tableidx, 4
  br i1 %19, label %switch.lookup, label %lor.lhs.false8.i.lor.lhs.false31.i_crit_edge

lor.lhs.false8.i.lor.lhs.false31.i_crit_edge:     ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false31.i

switch.lookup:                                    ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #16
  %20 = sext i16 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [4 x i32], ptr @switch.table.si_dpm_pre_set_power_state, i32 0, i32 %20
  %21 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %21)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %lor.lhs.false31.i

lor.lhs.false31.i:                                ; preds = %switch.lookup, %lor.lhs.false8.i.lor.lhs.false31.i_crit_edge, %if.then.i.lor.lhs.false31.i_crit_edge
  %max_sclk.01088.i = phi i32 [ 0, %lor.lhs.false8.i.lor.lhs.false31.i_crit_edge ], [ 75000, %if.then.i.lor.lhs.false31.i_crit_edge ], [ %switch.load, %switch.lookup ]
  %device33.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 8
  %22 = ptrtoint ptr %device33.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %device33.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26213, i16 %23)
  %cmp35.i = icmp eq i16 %23, 26213
  br i1 %cmp35.i, label %lor.lhs.false31.i.if.then37.i_crit_edge, label %lor.lhs.false31.i.if.end87.i_crit_edge

lor.lhs.false31.i.if.end87.i_crit_edge:           ; preds = %lor.lhs.false31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i

lor.lhs.false31.i.if.then37.i_crit_edge:          ; preds = %lor.lhs.false31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then37.i

if.then37.i:                                      ; preds = %lor.lhs.false31.i.if.then37.i_crit_edge, %if.then.i.if.then37.i_crit_edge
  br label %if.end87.i

if.then42.i:                                      ; preds = %entry
  %pdev43.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 1
  %24 = ptrtoint ptr %pdev43.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pdev43.i, align 4
  %revision44.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 12
  %26 = ptrtoint ptr %revision44.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %revision44.i, align 4
  %28 = zext i8 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.99)
  switch i8 %27, label %lor.lhs.false72.i [
    i8 -57, label %if.then42.i.if.then84.i_crit_edge
    i8 -128, label %if.then42.i.if.then84.i_crit_edge164
    i8 -127, label %if.then42.i.if.then84.i_crit_edge165
    i8 -125, label %if.then42.i.if.then84.i_crit_edge166
    i8 -121, label %if.then42.i.if.then84.i_crit_edge167
  ]

if.then42.i.if.then84.i_crit_edge167:             ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

if.then42.i.if.then84.i_crit_edge166:             ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

if.then42.i.if.then84.i_crit_edge165:             ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

if.then42.i.if.then84.i_crit_edge164:             ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

if.then42.i.if.then84.i_crit_edge:                ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

lor.lhs.false72.i:                                ; preds = %if.then42.i
  %device74.i = getelementptr inbounds %struct.pci_dev, ptr %25, i32 0, i32 8
  %29 = ptrtoint ptr %device74.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %device74.i, align 2
  %31 = and i16 %30, -2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26116, i16 %31)
  %switch.i = icmp eq i16 %31, 26116
  br i1 %switch.i, label %lor.lhs.false72.i.if.then84.i_crit_edge, label %lor.lhs.false72.i.if.end87.i_crit_edge

lor.lhs.false72.i.if.end87.i_crit_edge:           ; preds = %lor.lhs.false72.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i

lor.lhs.false72.i.if.then84.i_crit_edge:          ; preds = %lor.lhs.false72.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

if.then84.i:                                      ; preds = %lor.lhs.false72.i.if.then84.i_crit_edge, %if.then42.i.if.then84.i_crit_edge, %if.then42.i.if.then84.i_crit_edge164, %if.then42.i.if.then84.i_crit_edge165, %if.then42.i.if.then84.i_crit_edge166, %if.then42.i.if.then84.i_crit_edge167
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.then84.i, %lor.lhs.false72.i.if.end87.i_crit_edge, %if.then37.i, %lor.lhs.false31.i.if.end87.i_crit_edge, %entry.if.end87.i_crit_edge
  %max_sclk.1.i = phi i32 [ 60000, %if.then37.i ], [ %max_sclk.01088.i, %lor.lhs.false31.i.if.end87.i_crit_edge ], [ 75000, %if.then84.i ], [ 0, %entry.if.end87.i_crit_edge ], [ 0, %lor.lhs.false72.i.if.end87.i_crit_edge ]
  %tobool274.not.i = phi i1 [ false, %if.then37.i ], [ true, %lor.lhs.false31.i.if.end87.i_crit_edge ], [ true, %if.then84.i ], [ true, %entry.if.end87.i_crit_edge ], [ true, %lor.lhs.false72.i.if.end87.i_crit_edge ]
  %max_mclk.0.i = phi i32 [ 80000, %if.then37.i ], [ 0, %lor.lhs.false31.i.if.end87.i_crit_edge ], [ 0, %if.then84.i ], [ 0, %entry.if.end87.i_crit_edge ], [ 0, %lor.lhs.false72.i.if.end87.i_crit_edge ]
  %vce_active.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 7
  %32 = ptrtoint ptr %vce_active.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %vce_active.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.not.i = icmp eq i8 %33, 0
  br i1 %tobool.not.i, label %if.else103.i, label %if.then88.i

if.then88.i:                                      ; preds = %if.end87.i
  %vce_level.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 8
  %34 = ptrtoint ptr %vce_level.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %vce_level.i, align 4
  %arrayidx.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 7, i32 %35
  %36 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx.i, align 4
  %evclk91.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 5
  %38 = ptrtoint ptr %evclk91.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %evclk91.i, align 4
  %39 = load i32, ptr %vce_level.i, align 4
  %ecclk.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 7, i32 %39, i32 1
  %40 = ptrtoint ptr %ecclk.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %ecclk.i, align 4
  %ecclk99.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 6
  %42 = ptrtoint ptr %ecclk99.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %ecclk99.i, align 4
  %43 = or i32 %41, %37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %if.then88.i.if.end106.i_crit_edge, label %lor.lhs.false.i.i

if.then88.i.if.end106.i_crit_edge:                ; preds = %if.then88.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end106.i

lor.lhs.false.i.i:                                ; preds = %if.then88.i
  %vce_clock_voltage_dependency_table.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 6
  %45 = ptrtoint ptr %vce_clock_voltage_dependency_table.i.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %vce_clock_voltage_dependency_table.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %cmp3.i.i = icmp eq i8 %46, 0
  br i1 %cmp3.i.i, label %lor.lhs.false.i.i.if.end106.i_crit_edge, label %if.end.thread.i.i

lor.lhs.false.i.i.if.end106.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end106.i

if.end.thread.i.i:                                ; preds = %lor.lhs.false.i.i
  %conv612.i.i = zext i8 %46 to i32
  %entries.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 6, i32 1
  %47 = ptrtoint ptr %entries.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %entries.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.end.thread.i.i
  %i.07.i.i = phi i32 [ 0, %if.end.thread.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %evclk9.i.i = getelementptr %struct.amdgpu_vce_clock_voltage_dependency_entry, ptr %48, i32 %i.07.i.i, i32 1
  %49 = ptrtoint ptr %evclk9.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %evclk9.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %37)
  %cmp10.not.i.i = icmp ult i32 %50, %37
  br i1 %cmp10.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %land.lhs.true12.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

land.lhs.true12.i.i:                              ; preds = %for.body.i.i
  %arrayidx.i.i = getelementptr %struct.amdgpu_vce_clock_voltage_dependency_entry, ptr %48, i32 %i.07.i.i
  %51 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %41)
  %cmp16.not.i.i = icmp ult i32 %52, %41
  br i1 %cmp16.not.i.i, label %land.lhs.true12.i.i.for.inc.i.i_crit_edge, label %land.lhs.true12.i.i.if.end29.i.i_crit_edge

land.lhs.true12.i.i.if.end29.i.i_crit_edge:       ; preds = %land.lhs.true12.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29.i.i

land.lhs.true12.i.i.for.inc.i.i_crit_edge:        ; preds = %land.lhs.true12.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true12.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %i.07.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv612.i.i
  br i1 %exitcond.not.i.i, label %if.then23.critedge.i.i, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

if.then23.critedge.i.i:                           ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add nsw i32 %conv612.i.i, -1
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %if.then23.critedge.i.i, %land.lhs.true12.i.i.if.end29.i.i_crit_edge
  %sub.i.pn.i = phi i32 [ %sub.i.i, %if.then23.critedge.i.i ], [ %i.07.i.i, %land.lhs.true12.i.i.if.end29.i.i_crit_edge ]
  %storemerge1.in.i.i = getelementptr %struct.amdgpu_vce_clock_voltage_dependency_entry, ptr %48, i32 %sub.i.pn.i, i32 2
  %53 = ptrtoint ptr %storemerge1.in.i.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %storemerge1.i.i = load i16, ptr %storemerge1.in.i.i, align 4
  %54 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %priv.i, align 4
  %leakage_voltage.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %55, i32 0, i32 5
  %56 = ptrtoint ptr %leakage_voltage.i.i.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %leakage_voltage.i.i.i, align 4
  %conv.i.i.i = zext i16 %57 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %57)
  %cmp31.not.i.i.i = icmp eq i16 %57, 0
  br i1 %cmp31.not.i.i.i, label %if.end29.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge, label %if.end29.i.i.for.body.i.i.i_crit_edge

if.end29.i.i.for.body.i.i.i_crit_edge:            ; preds = %if.end29.i.i
  br label %for.body.i.i.i

if.end29.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge: ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_lower_of_leakage_and_vce_voltage.exit.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %if.end29.i.i.for.body.i.i.i_crit_edge
  %i.033.i.i.i = phi i32 [ %inc.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %if.end29.i.i.for.body.i.i.i_crit_edge ]
  %highest_leakage.032.i.i.i = phi i16 [ %60, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %if.end29.i.i.for.body.i.i.i_crit_edge ]
  %arrayidx.i.i.i = getelementptr %struct.si_power_info, ptr %55, i32 0, i32 5, i32 1, i32 %i.033.i.i.i
  %58 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %arrayidx.i.i.i, align 2
  %60 = tail call i16 @llvm.umax.i16(i16 %highest_leakage.032.i.i.i, i16 %59) #14
  %inc.i.i.i = add nuw nsw i32 %i.033.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, %conv.i.i.i
  br i1 %exitcond.not.i.i.i, label %for.body.i.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge, label %for.body.i.i.i.for.body.i.i.i_crit_edge

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i

for.body.i.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_lower_of_leakage_and_vce_voltage.exit.i.i

si_get_lower_of_leakage_and_vce_voltage.exit.i.i: ; preds = %for.body.i.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge, %if.end29.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge
  %highest_leakage.0.lcssa.i.i.i = phi i16 [ 0, %if.end29.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge ], [ %60, %for.body.i.i.i.si_get_lower_of_leakage_and_vce_voltage.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %57)
  %tobool.not.i.i.i = icmp ne i16 %57, 0
  call void @__sanitizer_cov_trace_cmp2(i16 %highest_leakage.0.lcssa.i.i.i, i16 %storemerge1.i.i)
  %cmp16.i.i.i = icmp ult i16 %highest_leakage.0.lcssa.i.i.i, %storemerge1.i.i
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i, i1 %cmp16.i.i.i, i1 false
  %retval.0.i.i.i = select i1 %or.cond.i.i.i, i16 %highest_leakage.0.lcssa.i.i.i, i16 %storemerge1.i.i
  br label %if.end106.i

if.else103.i:                                     ; preds = %if.end87.i
  call void @__sanitizer_cov_trace_pc() #16
  %evclk104.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 5
  %61 = ptrtoint ptr %evclk104.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 0, ptr %evclk104.i, align 4
  %ecclk105.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 6
  %62 = ptrtoint ptr %ecclk105.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %ecclk105.i, align 4
  br label %if.end106.i

if.end106.i:                                      ; preds = %if.else103.i, %si_get_lower_of_leakage_and_vce_voltage.exit.i.i, %lor.lhs.false.i.i.if.end106.i_crit_edge, %if.then88.i.if.end106.i_crit_edge
  %min_vce_voltage.0.i = phi i16 [ 0, %if.else103.i ], [ %retval.0.i.i.i, %si_get_lower_of_leakage_and_vce_voltage.exit.i.i ], [ 0, %if.then88.i.if.end106.i_crit_edge ], [ 0, %lor.lhs.false.i.i.if.end106.i_crit_edge ]
  %new_active_crtc_count.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 18
  %63 = ptrtoint ptr %new_active_crtc_count.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %new_active_crtc_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %64)
  %cmp109.i = icmp sgt i32 %64, 1
  br i1 %cmp109.i, label %if.end106.i.if.then114.i_crit_edge, label %lor.lhs.false111.i

if.end106.i.if.then114.i_crit_edge:               ; preds = %if.end106.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then114.i

lor.lhs.false111.i:                               ; preds = %if.end106.i
  %call.i.i = tail call i32 @amdgpu_dpm_get_vblank_time(ptr noundef %handle) #14
  %vram_type.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 21
  %65 = ptrtoint ptr %vram_type.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %vram_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %66)
  %cmp.i.i = icmp eq i32 %66, 5
  %cond.i.i = select i1 %cmp.i.i, i32 450, i32 0
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %cond.i.i)
  %cmp1.i.i = icmp ult i32 %call.i.i, %cond.i.i
  br i1 %cmp1.i.i, label %lor.lhs.false111.i.if.then114.i_crit_edge, label %lor.lhs.false111.i.if.end115.i_crit_edge

lor.lhs.false111.i.if.end115.i_crit_edge:         ; preds = %lor.lhs.false111.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end115.i

lor.lhs.false111.i.if.then114.i_crit_edge:        ; preds = %lor.lhs.false111.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then114.i

if.then114.i:                                     ; preds = %lor.lhs.false111.i.if.then114.i_crit_edge, %if.end106.i.if.then114.i_crit_edge
  br label %if.end115.i

if.end115.i:                                      ; preds = %if.then114.i, %lor.lhs.false111.i.if.end115.i_crit_edge
  %disable_mclk_switching.0.off0.i = phi i1 [ true, %if.then114.i ], [ false, %lor.lhs.false111.i.if.end115.i_crit_edge ]
  %vclk.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 3
  %67 = ptrtoint ptr %vclk.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %vclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool116.not.i = icmp eq i32 %68, 0
  br i1 %tobool116.not.i, label %lor.lhs.false117.i, label %if.end115.i.if.then119.i_crit_edge

if.end115.i.if.then119.i_crit_edge:               ; preds = %if.end115.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then119.i

lor.lhs.false117.i:                               ; preds = %if.end115.i
  %dclk.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 4
  %69 = ptrtoint ptr %dclk.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %dclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool118.not.i = icmp eq i32 %70, 0
  br i1 %tobool118.not.i, label %lor.lhs.false117.i.if.end120.i_crit_edge, label %lor.lhs.false117.i.if.then119.i_crit_edge

lor.lhs.false117.i.if.then119.i_crit_edge:        ; preds = %lor.lhs.false117.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then119.i

lor.lhs.false117.i.if.end120.i_crit_edge:         ; preds = %lor.lhs.false117.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end120.i

if.then119.i:                                     ; preds = %lor.lhs.false117.i.if.then119.i_crit_edge, %if.end115.i.if.then119.i_crit_edge
  br label %if.end120.i

if.end120.i:                                      ; preds = %if.then119.i, %lor.lhs.false117.i.if.end120.i_crit_edge
  %disable_mclk_switching.1.off0.i = phi i1 [ true, %if.then119.i ], [ %disable_mclk_switching.0.off0.i, %lor.lhs.false117.i.if.end120.i_crit_edge ]
  %disable_sclk_switching.0.off0.i = phi i1 [ true, %if.then119.i ], [ false, %lor.lhs.false117.i.if.end120.i_crit_edge ]
  %ac_power.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 23
  %71 = ptrtoint ptr %ac_power.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %ac_power.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %72)
  %tobool122.not.i = icmp eq i8 %72, 0
  %max_clock_voltage_on_ac.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 13
  %max_clock_voltage_on_dc.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 12
  %max_limits.0.i = select i1 %tobool122.not.i, ptr %max_clock_voltage_on_dc.i, ptr %max_clock_voltage_on_ac.i
  %73 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %74)
  %cmp1321109.i = icmp ugt i16 %74, 1
  br i1 %cmp1321109.i, label %for.body.preheader.i, label %if.end120.i.for.end.i_crit_edge

if.end120.i.for.end.i_crit_edge:                  ; preds = %if.end120.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.preheader.i:                             ; preds = %if.end120.i
  %conv131.i = zext i16 %74 to i32
  %sub.i = add nsw i32 %conv131.i, -2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.01110.i = phi i32 [ %dec.i, %for.inc.i.for.body.i_crit_edge ], [ %sub.i, %for.body.preheader.i ]
  %vddc135.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.01110.i, i32 2
  %75 = ptrtoint ptr %vddc135.i to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %vddc135.i, align 4
  %add.i = add nuw nsw i32 %i.01110.i, 1
  %vddc139.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %add.i, i32 2
  %77 = ptrtoint ptr %vddc139.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %vddc139.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %76, i16 %78)
  %cmp141.i = icmp ugt i16 %76, %78
  br i1 %cmp141.i, label %if.then143.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then143.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %79 = ptrtoint ptr %vddc135.i to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 %78, ptr %vddc135.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then143.i, %for.body.i.for.inc.i_crit_edge
  %dec.i = add nsw i32 %i.01110.i, -1
  %cmp132.i = icmp sgt i32 %i.01110.i, 0
  br i1 %cmp132.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end120.i.for.end.i_crit_edge
  %80 = ptrtoint ptr %ac_power.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %ac_power.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %cmp156.i = icmp eq i8 %81, 0
  br i1 %cmp156.i, label %for.cond159.preheader.i, label %for.end.i.if.end219.i_crit_edge

for.end.i.if.end219.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.i

for.cond159.preheader.i:                          ; preds = %for.end.i
  %82 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %83)
  %cmp1621112.not.i = icmp eq i16 %83, 0
  br i1 %cmp1621112.not.i, label %for.cond159.preheader.i.if.end219.i_crit_edge, label %for.body164.lr.ph.i

for.cond159.preheader.i.if.end219.i_crit_edge:    ; preds = %for.cond159.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.i

for.body164.lr.ph.i:                              ; preds = %for.cond159.preheader.i
  %mclk168.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 1
  %vddc193.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 2
  %vddci207.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 3
  br label %for.body164.i

for.body164.i:                                    ; preds = %for.inc217.i.for.body164.i_crit_edge, %for.body164.lr.ph.i
  %i.11113.i = phi i32 [ 0, %for.body164.lr.ph.i ], [ %inc.i, %for.inc217.i.for.body164.i_crit_edge ]
  %arrayidx166.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.11113.i
  %mclk167.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.11113.i, i32 1
  %84 = ptrtoint ptr %mclk167.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %mclk167.i, align 4
  %86 = ptrtoint ptr %mclk168.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %mclk168.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %85, i32 %87)
  %cmp169.i = icmp ugt i32 %85, %87
  br i1 %cmp169.i, label %if.then171.i, label %for.body164.i.if.end176.i_crit_edge

for.body164.i.if.end176.i_crit_edge:              ; preds = %for.body164.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end176.i

if.then171.i:                                     ; preds = %for.body164.i
  call void @__sanitizer_cov_trace_pc() #16
  %88 = ptrtoint ptr %mclk167.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %87, ptr %mclk167.i, align 4
  br label %if.end176.i

if.end176.i:                                      ; preds = %if.then171.i, %for.body164.i.if.end176.i_crit_edge
  %89 = ptrtoint ptr %arrayidx166.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %arrayidx166.i, align 4
  %91 = ptrtoint ptr %max_limits.0.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %max_limits.0.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %90, i32 %92)
  %cmp181.i = icmp ugt i32 %90, %92
  br i1 %cmp181.i, label %if.then183.i, label %if.end176.i.if.end188.i_crit_edge

if.end176.i.if.end188.i_crit_edge:                ; preds = %if.end176.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end188.i

if.then183.i:                                     ; preds = %if.end176.i
  call void @__sanitizer_cov_trace_pc() #16
  %93 = ptrtoint ptr %arrayidx166.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %92, ptr %arrayidx166.i, align 4
  br label %if.end188.i

if.end188.i:                                      ; preds = %if.then183.i, %if.end176.i.if.end188.i_crit_edge
  %vddc191.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.11113.i, i32 2
  %94 = ptrtoint ptr %vddc191.i to i32
  call void @__asan_load2_noabort(i32 %94)
  %95 = load i16, ptr %vddc191.i, align 4
  %96 = ptrtoint ptr %vddc193.i to i32
  call void @__asan_load2_noabort(i32 %96)
  %97 = load i16, ptr %vddc193.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %95, i16 %97)
  %cmp195.i = icmp ugt i16 %95, %97
  br i1 %cmp195.i, label %if.then197.i, label %if.end188.i.if.end202.i_crit_edge

if.end188.i.if.end202.i_crit_edge:                ; preds = %if.end188.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end202.i

if.then197.i:                                     ; preds = %if.end188.i
  call void @__sanitizer_cov_trace_pc() #16
  %98 = ptrtoint ptr %vddc191.i to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 %97, ptr %vddc191.i, align 4
  br label %if.end202.i

if.end202.i:                                      ; preds = %if.then197.i, %if.end188.i.if.end202.i_crit_edge
  %vddci205.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.11113.i, i32 3
  %99 = ptrtoint ptr %vddci205.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %vddci205.i, align 2
  %101 = ptrtoint ptr %vddci207.i to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %vddci207.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %100, i16 %102)
  %cmp209.i = icmp ugt i16 %100, %102
  br i1 %cmp209.i, label %if.then211.i, label %if.end202.i.for.inc217.i_crit_edge

if.end202.i.for.inc217.i_crit_edge:               ; preds = %if.end202.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc217.i

if.then211.i:                                     ; preds = %if.end202.i
  call void @__sanitizer_cov_trace_pc() #16
  %103 = ptrtoint ptr %vddci205.i to i32
  call void @__asan_store2_noabort(i32 %103)
  store i16 %102, ptr %vddci205.i, align 2
  br label %for.inc217.i

for.inc217.i:                                     ; preds = %if.then211.i, %if.end202.i.for.inc217.i_crit_edge
  %inc.i = add nuw nsw i32 %i.11113.i, 1
  %104 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %8, align 4
  %conv161.i = zext i16 %105 to i32
  %cmp162.i = icmp ult i32 %inc.i, %conv161.i
  br i1 %cmp162.i, label %for.inc217.i.for.body164.i_crit_edge, label %for.inc217.i.if.end219.i_crit_edge

for.inc217.i.if.end219.i_crit_edge:               ; preds = %for.inc217.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end219.i

for.inc217.i.for.body164.i_crit_edge:             ; preds = %for.inc217.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body164.i

if.end219.i:                                      ; preds = %for.inc217.i.if.end219.i_crit_edge, %for.cond159.preheader.i.if.end219.i_crit_edge, %for.end.i.if.end219.i_crit_edge
  %dyn_state222.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21
  %106 = ptrtoint ptr %dyn_state222.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %dyn_state222.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %107)
  %cmp1.i965.i = icmp eq i32 %107, 0
  br i1 %cmp1.i965.i, label %if.end219.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge, label %for.body.preheader.i.i

if.end219.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge: ; preds = %if.end219.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_max_clock_from_voltage_dependency_table.exit.i

for.body.preheader.i.i:                           ; preds = %if.end219.i
  %entries.i967.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  %108 = ptrtoint ptr %entries.i967.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %entries.i967.i, align 4
  br label %for.body.i971.i

for.body.i971.i:                                  ; preds = %for.body.i971.i.for.body.i971.i_crit_edge, %for.body.preheader.i.i
  %clock.023.i.i = phi i32 [ %112, %for.body.i971.i.for.body.i971.i_crit_edge ], [ 0, %for.body.preheader.i.i ]
  %i.022.i.i = phi i32 [ %inc.i969.i, %for.body.i971.i.for.body.i971.i_crit_edge ], [ 0, %for.body.preheader.i.i ]
  %arrayidx.i968.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %109, i32 %i.022.i.i
  %110 = ptrtoint ptr %arrayidx.i968.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arrayidx.i968.i, align 4
  %112 = tail call i32 @llvm.umax.i32(i32 %clock.023.i.i, i32 %111) #14
  %inc.i969.i = add nuw i32 %i.022.i.i, 1
  %exitcond.not.i970.i = icmp eq i32 %inc.i969.i, %107
  br i1 %exitcond.not.i970.i, label %for.body.i971.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge, label %for.body.i971.i.for.body.i971.i_crit_edge

for.body.i971.i.for.body.i971.i_crit_edge:        ; preds = %for.body.i971.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i971.i

for.body.i971.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge: ; preds = %for.body.i971.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_max_clock_from_voltage_dependency_table.exit.i

btc_get_max_clock_from_voltage_dependency_table.exit.i: ; preds = %for.body.i971.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge, %if.end219.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge
  %storemerge.i972.i = phi i32 [ 0, %if.end219.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge ], [ %112, %for.body.i971.i.btc_get_max_clock_from_voltage_dependency_table.exit.i_crit_edge ]
  %vddci_dependency_on_mclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 1
  %113 = ptrtoint ptr %vddci_dependency_on_mclk.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %vddci_dependency_on_mclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %114)
  %cmp1.i974.i = icmp eq i32 %114, 0
  br i1 %cmp1.i974.i, label %btc_get_max_clock_from_voltage_dependency_table.exit.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge, label %for.body.preheader.i977.i

btc_get_max_clock_from_voltage_dependency_table.exit.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge: ; preds = %btc_get_max_clock_from_voltage_dependency_table.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_max_clock_from_voltage_dependency_table.exit985.i

for.body.preheader.i977.i:                        ; preds = %btc_get_max_clock_from_voltage_dependency_table.exit.i
  %entries.i976.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 1, i32 1
  %115 = ptrtoint ptr %entries.i976.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %entries.i976.i, align 4
  br label %for.body.i983.i

for.body.i983.i:                                  ; preds = %for.body.i983.i.for.body.i983.i_crit_edge, %for.body.preheader.i977.i
  %clock.023.i978.i = phi i32 [ %119, %for.body.i983.i.for.body.i983.i_crit_edge ], [ 0, %for.body.preheader.i977.i ]
  %i.022.i979.i = phi i32 [ %inc.i981.i, %for.body.i983.i.for.body.i983.i_crit_edge ], [ 0, %for.body.preheader.i977.i ]
  %arrayidx.i980.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %116, i32 %i.022.i979.i
  %117 = ptrtoint ptr %arrayidx.i980.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx.i980.i, align 4
  %119 = tail call i32 @llvm.umax.i32(i32 %clock.023.i978.i, i32 %118) #14
  %inc.i981.i = add nuw i32 %i.022.i979.i, 1
  %exitcond.not.i982.i = icmp eq i32 %inc.i981.i, %114
  br i1 %exitcond.not.i982.i, label %for.body.i983.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge, label %for.body.i983.i.for.body.i983.i_crit_edge

for.body.i983.i.for.body.i983.i_crit_edge:        ; preds = %for.body.i983.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i983.i

for.body.i983.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge: ; preds = %for.body.i983.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_max_clock_from_voltage_dependency_table.exit985.i

btc_get_max_clock_from_voltage_dependency_table.exit985.i: ; preds = %for.body.i983.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge, %btc_get_max_clock_from_voltage_dependency_table.exit.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge
  %storemerge.i984.i = phi i32 [ 0, %btc_get_max_clock_from_voltage_dependency_table.exit.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge ], [ %119, %for.body.i983.i.btc_get_max_clock_from_voltage_dependency_table.exit985.i_crit_edge ]
  %vddc_dependency_on_mclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 2
  %120 = ptrtoint ptr %vddc_dependency_on_mclk.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %vddc_dependency_on_mclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %cmp1.i987.i = icmp eq i32 %121, 0
  br i1 %cmp1.i987.i, label %btc_get_max_clock_from_voltage_dependency_table.exit985.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge, label %for.body.preheader.i990.i

btc_get_max_clock_from_voltage_dependency_table.exit985.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge: ; preds = %btc_get_max_clock_from_voltage_dependency_table.exit985.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_max_clock_from_voltage_dependency_table.exit998.i

for.body.preheader.i990.i:                        ; preds = %btc_get_max_clock_from_voltage_dependency_table.exit985.i
  %entries.i989.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 2, i32 1
  %122 = ptrtoint ptr %entries.i989.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %entries.i989.i, align 4
  br label %for.body.i996.i

for.body.i996.i:                                  ; preds = %for.body.i996.i.for.body.i996.i_crit_edge, %for.body.preheader.i990.i
  %clock.023.i991.i = phi i32 [ %126, %for.body.i996.i.for.body.i996.i_crit_edge ], [ 0, %for.body.preheader.i990.i ]
  %i.022.i992.i = phi i32 [ %inc.i994.i, %for.body.i996.i.for.body.i996.i_crit_edge ], [ 0, %for.body.preheader.i990.i ]
  %arrayidx.i993.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %123, i32 %i.022.i992.i
  %124 = ptrtoint ptr %arrayidx.i993.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %arrayidx.i993.i, align 4
  %126 = tail call i32 @llvm.umax.i32(i32 %clock.023.i991.i, i32 %125) #14
  %inc.i994.i = add nuw i32 %i.022.i992.i, 1
  %exitcond.not.i995.i = icmp eq i32 %inc.i994.i, %121
  br i1 %exitcond.not.i995.i, label %for.body.i996.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge, label %for.body.i996.i.for.body.i996.i_crit_edge

for.body.i996.i.for.body.i996.i_crit_edge:        ; preds = %for.body.i996.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i996.i

for.body.i996.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge: ; preds = %for.body.i996.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_max_clock_from_voltage_dependency_table.exit998.i

btc_get_max_clock_from_voltage_dependency_table.exit998.i: ; preds = %for.body.i996.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge, %btc_get_max_clock_from_voltage_dependency_table.exit985.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge
  %storemerge.i997.i = phi i32 [ 0, %btc_get_max_clock_from_voltage_dependency_table.exit985.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge ], [ %126, %for.body.i996.i.btc_get_max_clock_from_voltage_dependency_table.exit998.i_crit_edge ]
  %127 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %127)
  %128 = load i16, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %128)
  %cmp2321116.not.i = icmp eq i16 %128, 0
  br i1 %cmp2321116.not.i, label %btc_get_max_clock_from_voltage_dependency_table.exit998.i.for.end302.i_crit_edge, label %for.body234.lr.ph.i

btc_get_max_clock_from_voltage_dependency_table.exit998.i.for.end302.i_crit_edge: ; preds = %btc_get_max_clock_from_voltage_dependency_table.exit998.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end302.i

for.body234.lr.ph.i:                              ; preds = %btc_get_max_clock_from_voltage_dependency_table.exit998.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %storemerge.i972.i)
  %tobool235.not.i = icmp eq i32 %storemerge.i972.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %storemerge.i984.i)
  %tobool248.not.i = icmp eq i32 %storemerge.i984.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %storemerge.i997.i)
  %tobool261.not.i = icmp eq i32 %storemerge.i997.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_sclk.1.i)
  %tobool287.not.i = icmp eq i32 %max_sclk.1.i, 0
  br label %for.body234.i

for.body234.i:                                    ; preds = %for.inc300.i.for.body234.i_crit_edge, %for.body234.lr.ph.i
  %i.21117.i = phi i32 [ 0, %for.body234.lr.ph.i ], [ %inc301.i, %for.inc300.i.for.body234.i_crit_edge ]
  br i1 %tobool235.not.i, label %for.body234.i.if.end247.i_crit_edge, label %if.then236.i

for.body234.i.if.end247.i_crit_edge:              ; preds = %for.body234.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end247.i

if.then236.i:                                     ; preds = %for.body234.i
  %arrayidx238.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.21117.i
  %129 = ptrtoint ptr %arrayidx238.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %arrayidx238.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %130, i32 %storemerge.i972.i)
  %cmp240.i = icmp ugt i32 %130, %storemerge.i972.i
  br i1 %cmp240.i, label %if.then242.i, label %if.then236.i.if.end247.i_crit_edge

if.then236.i.if.end247.i_crit_edge:               ; preds = %if.then236.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end247.i

if.then242.i:                                     ; preds = %if.then236.i
  call void @__sanitizer_cov_trace_pc() #16
  %131 = ptrtoint ptr %arrayidx238.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 %storemerge.i972.i, ptr %arrayidx238.i, align 4
  br label %if.end247.i

if.end247.i:                                      ; preds = %if.then242.i, %if.then236.i.if.end247.i_crit_edge, %for.body234.i.if.end247.i_crit_edge
  br i1 %tobool248.not.i, label %if.end247.i.if.end260.i_crit_edge, label %if.then249.i

if.end247.i.if.end260.i_crit_edge:                ; preds = %if.end247.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end260.i

if.then249.i:                                     ; preds = %if.end247.i
  %mclk252.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.21117.i, i32 1
  %132 = ptrtoint ptr %mclk252.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %mclk252.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %133, i32 %storemerge.i984.i)
  %cmp253.i = icmp ugt i32 %133, %storemerge.i984.i
  br i1 %cmp253.i, label %if.then255.i, label %if.then249.i.if.end260.i_crit_edge

if.then249.i.if.end260.i_crit_edge:               ; preds = %if.then249.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end260.i

if.then255.i:                                     ; preds = %if.then249.i
  call void @__sanitizer_cov_trace_pc() #16
  %134 = ptrtoint ptr %mclk252.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %storemerge.i984.i, ptr %mclk252.i, align 4
  br label %if.end260.i

if.end260.i:                                      ; preds = %if.then255.i, %if.then249.i.if.end260.i_crit_edge, %if.end247.i.if.end260.i_crit_edge
  br i1 %tobool261.not.i, label %if.end260.i.if.end273.i_crit_edge, label %if.then262.i

if.end260.i.if.end273.i_crit_edge:                ; preds = %if.end260.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end273.i

if.then262.i:                                     ; preds = %if.end260.i
  %mclk265.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.21117.i, i32 1
  %135 = ptrtoint ptr %mclk265.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %mclk265.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %136, i32 %storemerge.i997.i)
  %cmp266.i = icmp ugt i32 %136, %storemerge.i997.i
  br i1 %cmp266.i, label %if.then268.i, label %if.then262.i.if.end273.i_crit_edge

if.then262.i.if.end273.i_crit_edge:               ; preds = %if.then262.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end273.i

if.then268.i:                                     ; preds = %if.then262.i
  call void @__sanitizer_cov_trace_pc() #16
  %137 = ptrtoint ptr %mclk265.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %storemerge.i997.i, ptr %mclk265.i, align 4
  br label %if.end273.i

if.end273.i:                                      ; preds = %if.then268.i, %if.then262.i.if.end273.i_crit_edge, %if.end260.i.if.end273.i_crit_edge
  br i1 %tobool274.not.i, label %if.end273.i.if.end286.i_crit_edge, label %if.then275.i

if.end273.i.if.end286.i_crit_edge:                ; preds = %if.end273.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end286.i

if.then275.i:                                     ; preds = %if.end273.i
  %mclk278.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.21117.i, i32 1
  %138 = ptrtoint ptr %mclk278.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %mclk278.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %139, i32 %max_mclk.0.i)
  %cmp279.i = icmp ugt i32 %139, %max_mclk.0.i
  br i1 %cmp279.i, label %if.then281.i, label %if.then275.i.if.end286.i_crit_edge

if.then275.i.if.end286.i_crit_edge:               ; preds = %if.then275.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end286.i

if.then281.i:                                     ; preds = %if.then275.i
  call void @__sanitizer_cov_trace_pc() #16
  %140 = ptrtoint ptr %mclk278.i to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 %max_mclk.0.i, ptr %mclk278.i, align 4
  br label %if.end286.i

if.end286.i:                                      ; preds = %if.then281.i, %if.then275.i.if.end286.i_crit_edge, %if.end273.i.if.end286.i_crit_edge
  br i1 %tobool287.not.i, label %if.end286.i.for.inc300.i_crit_edge, label %if.then288.i

if.end286.i.for.inc300.i_crit_edge:               ; preds = %if.end286.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc300.i

if.then288.i:                                     ; preds = %if.end286.i
  %arrayidx290.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.21117.i
  %141 = ptrtoint ptr %arrayidx290.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %arrayidx290.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %142, i32 %max_sclk.1.i)
  %cmp292.i = icmp ugt i32 %142, %max_sclk.1.i
  br i1 %cmp292.i, label %if.then294.i, label %if.then288.i.for.inc300.i_crit_edge

if.then288.i.for.inc300.i_crit_edge:              ; preds = %if.then288.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc300.i

if.then294.i:                                     ; preds = %if.then288.i
  call void @__sanitizer_cov_trace_pc() #16
  %143 = ptrtoint ptr %arrayidx290.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 %max_sclk.1.i, ptr %arrayidx290.i, align 4
  br label %for.inc300.i

for.inc300.i:                                     ; preds = %if.then294.i, %if.then288.i.for.inc300.i_crit_edge, %if.end286.i.for.inc300.i_crit_edge
  %inc301.i = add nuw nsw i32 %i.21117.i, 1
  %144 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %144)
  %145 = load i16, ptr %8, align 4
  %conv231.i = zext i16 %145 to i32
  %cmp232.i = icmp ult i32 %inc301.i, %conv231.i
  br i1 %cmp232.i, label %for.inc300.i.for.body234.i_crit_edge, label %for.inc300.i.for.end302.i_crit_edge

for.inc300.i.for.end302.i_crit_edge:              ; preds = %for.inc300.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end302.i

for.inc300.i.for.body234.i_crit_edge:             ; preds = %for.inc300.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body234.i

for.end302.i:                                     ; preds = %for.inc300.i.for.end302.i_crit_edge, %btc_get_max_clock_from_voltage_dependency_table.exit998.i.for.end302.i_crit_edge
  %.lcssa1114.i = phi i16 [ 0, %btc_get_max_clock_from_voltage_dependency_table.exit998.i.for.end302.i_crit_edge ], [ %145, %for.inc300.i.for.end302.i_crit_edge ]
  %conv231.le.i = zext i16 %.lcssa1114.i to i32
  %sub308.i = add nsw i32 %conv231.le.i, -1
  %mclk310.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub308.i, i32 1
  %vddci316.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub308.i, i32 3
  %mclk320.i = getelementptr inbounds %struct.si_ps, ptr %8, i32 0, i32 2, i32 0, i32 1
  %vddci323.i = getelementptr inbounds %struct.si_ps, ptr %8, i32 0, i32 2, i32 0, i32 3
  %mclk.0.in.i = select i1 %disable_mclk_switching.1.off0.i, ptr %mclk310.i, ptr %mclk320.i
  %vddci.0.in.i = select i1 %disable_mclk_switching.1.off0.i, ptr %vddci316.i, ptr %vddci323.i
  %146 = ptrtoint ptr %vddci.0.in.i to i32
  call void @__asan_load2_noabort(i32 %146)
  %vddci.0.i = load i16, ptr %vddci.0.in.i, align 2
  %147 = ptrtoint ptr %mclk.0.in.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %mclk.0.i = load i32, ptr %mclk.0.in.i, align 4
  %arrayidx331.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub308.i
  %vddc338.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub308.i, i32 2
  %performance_levels340.i = getelementptr inbounds %struct.si_ps, ptr %8, i32 0, i32 2
  %vddc345.i = getelementptr inbounds %struct.si_ps, ptr %8, i32 0, i32 2, i32 0, i32 2
  %sclk.0.in.i = select i1 %disable_sclk_switching.0.off0.i, ptr %arrayidx331.i, ptr %performance_levels340.i
  %vddc.0.in.i = select i1 %disable_sclk_switching.0.off0.i, ptr %vddc338.i, ptr %vddc345.i
  %148 = ptrtoint ptr %vddc.0.in.i to i32
  call void @__asan_load2_noabort(i32 %148)
  %vddc.0.i = load i16, ptr %vddc.0.in.i, align 4
  %149 = ptrtoint ptr %sclk.0.in.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %sclk.0.i = load i32, ptr %sclk.0.in.i, align 4
  %150 = ptrtoint ptr %vce_active.i to i32
  call void @__asan_load1_noabort(i32 %150)
  %151 = load i8, ptr %vce_active.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %151)
  %tobool348.not.i = icmp eq i8 %151, 0
  br i1 %tobool348.not.i, label %for.end302.i.if.end390.i_crit_edge, label %if.then349.i

for.end302.i.if.end390.i_crit_edge:               ; preds = %for.end302.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end390.i

if.then349.i:                                     ; preds = %for.end302.i
  call void @__sanitizer_cov_trace_pc() #16
  %vce_level355.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 8
  %152 = ptrtoint ptr %vce_level355.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %vce_level355.i, align 4
  %sclk357.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 7, i32 %153, i32 2
  %154 = ptrtoint ptr %sclk357.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %sclk357.i, align 4
  %156 = tail call i32 @llvm.umax.i32(i32 %sclk.0.i, i32 %155) #14
  %mclk377.i = getelementptr %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 7, i32 %153, i32 3
  %157 = ptrtoint ptr %mclk377.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %mclk377.i, align 4
  %159 = tail call i32 @llvm.umax.i32(i32 %mclk.0.i, i32 %158) #14
  br label %if.end390.i

if.end390.i:                                      ; preds = %if.then349.i, %for.end302.i.if.end390.i_crit_edge
  %mclk.1.i = phi i32 [ %mclk.0.i, %for.end302.i.if.end390.i_crit_edge ], [ %159, %if.then349.i ]
  %sclk.2.i = phi i32 [ %sclk.0.i, %for.end302.i.if.end390.i_crit_edge ], [ %156, %if.then349.i ]
  %160 = ptrtoint ptr %performance_levels340.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %sclk.2.i, ptr %performance_levels340.i, align 4
  %161 = ptrtoint ptr %mclk320.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store i32 %mclk.1.i, ptr %mclk320.i, align 4
  %162 = ptrtoint ptr %vddc345.i to i32
  call void @__asan_store2_noabort(i32 %162)
  store i16 %vddc.0.i, ptr %vddc345.i, align 4
  %163 = ptrtoint ptr %vddci323.i to i32
  call void @__asan_store2_noabort(i32 %163)
  store i16 %vddci.0.i, ptr %vddci323.i, align 2
  br i1 %disable_sclk_switching.0.off0.i, label %for.cond408.preheader.i, label %for.cond443.preheader.i

for.cond443.preheader.i:                          ; preds = %if.end390.i
  %164 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %164)
  %165 = load i16, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %165)
  %cmp4461124.i = icmp ugt i16 %165, 1
  br i1 %cmp4461124.i, label %for.cond443.preheader.i.for.body448.i_crit_edge, label %for.cond443.preheader.i.if.end490.i_crit_edge

for.cond443.preheader.i.if.end490.i_crit_edge:    ; preds = %for.cond443.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end490.i

for.cond443.preheader.i.for.body448.i_crit_edge:  ; preds = %for.cond443.preheader.i
  br label %for.body448.i

for.cond408.preheader.i:                          ; preds = %if.end390.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %.lcssa1114.i)
  %cmp4111126.i = icmp ugt i16 %.lcssa1114.i, 1
  br i1 %cmp4111126.i, label %for.cond408.preheader.i.for.body413.i_crit_edge, label %for.cond408.preheader.i.for.cond427.preheader.i_crit_edge

for.cond408.preheader.i.for.cond427.preheader.i_crit_edge: ; preds = %for.cond408.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond427.preheader.i

for.cond408.preheader.i.for.body413.i_crit_edge:  ; preds = %for.cond408.preheader.i
  br label %for.body413.i

for.cond427.preheader.i:                          ; preds = %for.body413.i.for.cond427.preheader.i_crit_edge, %for.cond408.preheader.i.for.cond427.preheader.i_crit_edge
  %sclk.3.lcssa.i = phi i32 [ %sclk.2.i, %for.cond408.preheader.i.for.cond427.preheader.i_crit_edge ], [ %170, %for.body413.i.for.cond427.preheader.i_crit_edge ]
  %166 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %166)
  %167 = load i16, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %167)
  %cmp4301131.not.i = icmp eq i16 %167, 0
  br i1 %cmp4301131.not.i, label %for.cond427.preheader.i.if.end490.i_crit_edge, label %for.cond427.preheader.i.for.body432.i_crit_edge

for.cond427.preheader.i.for.body432.i_crit_edge:  ; preds = %for.cond427.preheader.i
  br label %for.body432.i

for.cond427.preheader.i.if.end490.i_crit_edge:    ; preds = %for.cond427.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end490.i

for.body413.i:                                    ; preds = %for.body413.i.for.body413.i_crit_edge, %for.cond408.preheader.i.for.body413.i_crit_edge
  %i.31128.i = phi i32 [ %inc425.i, %for.body413.i.for.body413.i_crit_edge ], [ 1, %for.cond408.preheader.i.for.body413.i_crit_edge ]
  %sclk.31127.i = phi i32 [ %170, %for.body413.i.for.body413.i_crit_edge ], [ %sclk.2.i, %for.cond408.preheader.i.for.body413.i_crit_edge ]
  %arrayidx415.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.31128.i
  %168 = ptrtoint ptr %arrayidx415.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %arrayidx415.i, align 4
  %170 = tail call i32 @llvm.umax.i32(i32 %sclk.31127.i, i32 %169) #14
  %inc425.i = add nuw nsw i32 %i.31128.i, 1
  %exitcond.not.i = icmp eq i32 %inc425.i, %conv231.le.i
  br i1 %exitcond.not.i, label %for.body413.i.for.cond427.preheader.i_crit_edge, label %for.body413.i.for.body413.i_crit_edge

for.body413.i.for.body413.i_crit_edge:            ; preds = %for.body413.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body413.i

for.body413.i.for.cond427.preheader.i_crit_edge:  ; preds = %for.body413.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond427.preheader.i

for.body432.i:                                    ; preds = %for.body432.i.for.body432.i_crit_edge, %for.cond427.preheader.i.for.body432.i_crit_edge
  %i.41132.i = phi i32 [ %inc440.i, %for.body432.i.for.body432.i_crit_edge ], [ 0, %for.cond427.preheader.i.for.body432.i_crit_edge ]
  %arrayidx434.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.41132.i
  %171 = ptrtoint ptr %arrayidx434.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %sclk.3.lcssa.i, ptr %arrayidx434.i, align 4
  %vddc438.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.41132.i, i32 2
  %172 = ptrtoint ptr %vddc438.i to i32
  call void @__asan_store2_noabort(i32 %172)
  store i16 %vddc.0.i, ptr %vddc438.i, align 4
  %inc440.i = add nuw nsw i32 %i.41132.i, 1
  %173 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %173)
  %174 = load i16, ptr %8, align 4
  %conv429.i = zext i16 %174 to i32
  %cmp430.i = icmp ult i32 %inc440.i, %conv429.i
  br i1 %cmp430.i, label %for.body432.i.for.body432.i_crit_edge, label %for.body432.i.if.end490.i_crit_edge

for.body432.i.if.end490.i_crit_edge:              ; preds = %for.body432.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end490.i

for.body432.i.for.body432.i_crit_edge:            ; preds = %for.body432.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body432.i

for.body448.i:                                    ; preds = %for.inc487.i.for.body448.i_crit_edge, %for.cond443.preheader.i.for.body448.i_crit_edge
  %i.51125.i = phi i32 [ %inc488.i, %for.inc487.i.for.body448.i_crit_edge ], [ 1, %for.cond443.preheader.i.for.body448.i_crit_edge ]
  %arrayidx450.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.51125.i
  %175 = ptrtoint ptr %arrayidx450.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %arrayidx450.i, align 4
  %sub453.i = add nsw i32 %i.51125.i, -1
  %arrayidx454.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub453.i
  %177 = ptrtoint ptr %arrayidx454.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %arrayidx454.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %176, i32 %178)
  %cmp456.i = icmp ult i32 %176, %178
  br i1 %cmp456.i, label %if.then458.i, label %for.body448.i.if.end466.i_crit_edge

for.body448.i.if.end466.i_crit_edge:              ; preds = %for.body448.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end466.i

if.then458.i:                                     ; preds = %for.body448.i
  call void @__sanitizer_cov_trace_pc() #16
  %179 = ptrtoint ptr %arrayidx450.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %178, ptr %arrayidx450.i, align 4
  br label %if.end466.i

if.end466.i:                                      ; preds = %if.then458.i, %for.body448.i.if.end466.i_crit_edge
  %vddc469.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.51125.i, i32 2
  %180 = ptrtoint ptr %vddc469.i to i32
  call void @__asan_load2_noabort(i32 %180)
  %181 = load i16, ptr %vddc469.i, align 4
  %vddc474.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub453.i, i32 2
  %182 = ptrtoint ptr %vddc474.i to i32
  call void @__asan_load2_noabort(i32 %182)
  %183 = load i16, ptr %vddc474.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %181, i16 %183)
  %cmp476.i = icmp ult i16 %181, %183
  br i1 %cmp476.i, label %if.then478.i, label %if.end466.i.for.inc487.i_crit_edge

if.end466.i.for.inc487.i_crit_edge:               ; preds = %if.end466.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc487.i

if.then478.i:                                     ; preds = %if.end466.i
  call void @__sanitizer_cov_trace_pc() #16
  %184 = ptrtoint ptr %vddc469.i to i32
  call void @__asan_store2_noabort(i32 %184)
  store i16 %183, ptr %vddc469.i, align 4
  br label %for.inc487.i

for.inc487.i:                                     ; preds = %if.then478.i, %if.end466.i.for.inc487.i_crit_edge
  %inc488.i = add nuw nsw i32 %i.51125.i, 1
  %185 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %185)
  %186 = load i16, ptr %8, align 4
  %conv445.i = zext i16 %186 to i32
  %cmp446.i = icmp ult i32 %inc488.i, %conv445.i
  br i1 %cmp446.i, label %for.inc487.i.for.body448.i_crit_edge, label %for.inc487.i.if.end490.i_crit_edge

for.inc487.i.if.end490.i_crit_edge:               ; preds = %for.inc487.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end490.i

for.inc487.i.for.body448.i_crit_edge:             ; preds = %for.inc487.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body448.i

if.end490.i:                                      ; preds = %for.inc487.i.if.end490.i_crit_edge, %for.body432.i.if.end490.i_crit_edge, %for.cond427.preheader.i.if.end490.i_crit_edge, %for.cond443.preheader.i.if.end490.i_crit_edge
  br i1 %disable_mclk_switching.1.off0.i, label %if.then492.i, label %for.cond531.preheader.i

for.cond531.preheader.i:                          ; preds = %if.end490.i
  %187 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %187)
  %188 = load i16, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %188)
  %cmp5341134.i = icmp ugt i16 %188, 1
  br i1 %cmp5341134.i, label %for.cond531.preheader.i.for.body536.i_crit_edge, label %for.cond531.preheader.i.if.end578.i_crit_edge

for.cond531.preheader.i.if.end578.i_crit_edge:    ; preds = %for.cond531.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end578.i

for.cond531.preheader.i.for.body536.i_crit_edge:  ; preds = %for.cond531.preheader.i
  br label %for.body536.i

if.then492.i:                                     ; preds = %if.end490.i
  %189 = ptrtoint ptr %mclk320.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %mclk320.i, align 4
  %191 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %191)
  %192 = load i16, ptr %8, align 4
  %conv498.i = zext i16 %192 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %192)
  %cmp4991136.i = icmp ugt i16 %192, 1
  br i1 %cmp4991136.i, label %if.then492.i.for.body501.i_crit_edge, label %if.then492.i.for.cond515.preheader.i_crit_edge

if.then492.i.for.cond515.preheader.i_crit_edge:   ; preds = %if.then492.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond515.preheader.i

if.then492.i.for.body501.i_crit_edge:             ; preds = %if.then492.i
  br label %for.body501.i

for.cond515.preheader.i:                          ; preds = %for.body501.i.for.cond515.preheader.i_crit_edge, %if.then492.i.for.cond515.preheader.i_crit_edge
  %mclk.2.lcssa.i = phi i32 [ %190, %if.then492.i.for.cond515.preheader.i_crit_edge ], [ %195, %for.body501.i.for.cond515.preheader.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %192)
  %cmp5181141.not.i = icmp eq i16 %192, 0
  br i1 %cmp5181141.not.i, label %for.cond515.preheader.i.for.cond590.preheaderthread-pre-split.i_crit_edge, label %for.cond515.preheader.i.for.body520.i_crit_edge

for.cond515.preheader.i.for.body520.i_crit_edge:  ; preds = %for.cond515.preheader.i
  br label %for.body520.i

for.cond515.preheader.i.for.cond590.preheaderthread-pre-split.i_crit_edge: ; preds = %for.cond515.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond590.preheaderthread-pre-split.i

for.body501.i:                                    ; preds = %for.body501.i.for.body501.i_crit_edge, %if.then492.i.for.body501.i_crit_edge
  %i.61138.i = phi i32 [ %inc513.i, %for.body501.i.for.body501.i_crit_edge ], [ 1, %if.then492.i.for.body501.i_crit_edge ]
  %mclk.21137.i = phi i32 [ %195, %for.body501.i.for.body501.i_crit_edge ], [ %190, %if.then492.i.for.body501.i_crit_edge ]
  %mclk504.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.61138.i, i32 1
  %193 = ptrtoint ptr %mclk504.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %mclk504.i, align 4
  %195 = tail call i32 @llvm.umax.i32(i32 %mclk.21137.i, i32 %194) #14
  %inc513.i = add nuw nsw i32 %i.61138.i, 1
  %exitcond1178.not.i = icmp eq i32 %inc513.i, %conv498.i
  br i1 %exitcond1178.not.i, label %for.body501.i.for.cond515.preheader.i_crit_edge, label %for.body501.i.for.body501.i_crit_edge

for.body501.i.for.body501.i_crit_edge:            ; preds = %for.body501.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body501.i

for.body501.i.for.cond515.preheader.i_crit_edge:  ; preds = %for.body501.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond515.preheader.i

for.body520.i:                                    ; preds = %for.body520.i.for.body520.i_crit_edge, %for.cond515.preheader.i.for.body520.i_crit_edge
  %i.71142.i = phi i32 [ %inc528.i, %for.body520.i.for.body520.i_crit_edge ], [ 0, %for.cond515.preheader.i.for.body520.i_crit_edge ]
  %mclk523.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.71142.i, i32 1
  %196 = ptrtoint ptr %mclk523.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store i32 %mclk.2.lcssa.i, ptr %mclk523.i, align 4
  %vddci526.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.71142.i, i32 3
  %197 = ptrtoint ptr %vddci526.i to i32
  call void @__asan_store2_noabort(i32 %197)
  store i16 %vddci.0.i, ptr %vddci526.i, align 2
  %inc528.i = add nuw nsw i32 %i.71142.i, 1
  %198 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %198)
  %199 = load i16, ptr %8, align 4
  %conv517.i = zext i16 %199 to i32
  %cmp518.i = icmp ult i32 %inc528.i, %conv517.i
  br i1 %cmp518.i, label %for.body520.i.for.body520.i_crit_edge, label %for.body520.i.if.end578.i_crit_edge

for.body520.i.if.end578.i_crit_edge:              ; preds = %for.body520.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end578.i

for.body520.i.for.body520.i_crit_edge:            ; preds = %for.body520.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body520.i

for.body536.i:                                    ; preds = %for.inc575.i.for.body536.i_crit_edge, %for.cond531.preheader.i.for.body536.i_crit_edge
  %i.81135.i = phi i32 [ %inc576.i, %for.inc575.i.for.body536.i_crit_edge ], [ 1, %for.cond531.preheader.i.for.body536.i_crit_edge ]
  %mclk539.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.81135.i, i32 1
  %200 = ptrtoint ptr %mclk539.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %mclk539.i, align 4
  %sub541.i = add nsw i32 %i.81135.i, -1
  %mclk543.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub541.i, i32 1
  %202 = ptrtoint ptr %mclk543.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %mclk543.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %201, i32 %203)
  %cmp544.i = icmp ult i32 %201, %203
  br i1 %cmp544.i, label %if.then546.i, label %for.body536.i.if.end554.i_crit_edge

for.body536.i.if.end554.i_crit_edge:              ; preds = %for.body536.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end554.i

if.then546.i:                                     ; preds = %for.body536.i
  call void @__sanitizer_cov_trace_pc() #16
  %204 = ptrtoint ptr %mclk539.i to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 %203, ptr %mclk539.i, align 4
  br label %if.end554.i

if.end554.i:                                      ; preds = %if.then546.i, %for.body536.i.if.end554.i_crit_edge
  %vddci557.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.81135.i, i32 3
  %205 = ptrtoint ptr %vddci557.i to i32
  call void @__asan_load2_noabort(i32 %205)
  %206 = load i16, ptr %vddci557.i, align 2
  %vddci562.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %sub541.i, i32 3
  %207 = ptrtoint ptr %vddci562.i to i32
  call void @__asan_load2_noabort(i32 %207)
  %208 = load i16, ptr %vddci562.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %206, i16 %208)
  %cmp564.i = icmp ult i16 %206, %208
  br i1 %cmp564.i, label %if.then566.i, label %if.end554.i.for.inc575.i_crit_edge

if.end554.i.for.inc575.i_crit_edge:               ; preds = %if.end554.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc575.i

if.then566.i:                                     ; preds = %if.end554.i
  call void @__sanitizer_cov_trace_pc() #16
  %209 = ptrtoint ptr %vddci557.i to i32
  call void @__asan_store2_noabort(i32 %209)
  store i16 %208, ptr %vddci557.i, align 2
  br label %for.inc575.i

for.inc575.i:                                     ; preds = %if.then566.i, %if.end554.i.for.inc575.i_crit_edge
  %inc576.i = add nuw nsw i32 %i.81135.i, 1
  %210 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %210)
  %211 = load i16, ptr %8, align 4
  %conv533.i = zext i16 %211 to i32
  %cmp534.i = icmp ult i32 %inc576.i, %conv533.i
  br i1 %cmp534.i, label %for.inc575.i.for.body536.i_crit_edge, label %for.inc575.i.if.end578.i_crit_edge

for.inc575.i.if.end578.i_crit_edge:               ; preds = %for.inc575.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end578.i

for.inc575.i.for.body536.i_crit_edge:             ; preds = %for.inc575.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body536.i

if.end578.i:                                      ; preds = %for.inc575.i.if.end578.i_crit_edge, %for.body520.i.if.end578.i_crit_edge, %for.cond531.preheader.i.if.end578.i_crit_edge
  %212 = phi i16 [ %188, %for.cond531.preheader.i.if.end578.i_crit_edge ], [ %199, %for.body520.i.if.end578.i_crit_edge ], [ %211, %for.inc575.i.if.end578.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %212)
  %cmp5821144.not.i = icmp eq i16 %212, 0
  br i1 %cmp5821144.not.i, label %if.end578.i.for.cond590.preheaderthread-pre-split.i_crit_edge, label %for.body584.lr.ph.i

if.end578.i.for.cond590.preheaderthread-pre-split.i_crit_edge: ; preds = %if.end578.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond590.preheaderthread-pre-split.i

for.body584.lr.ph.i:                              ; preds = %if.end578.i
  %sclk_mclk_delta.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 15
  %mclk39.i.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 1
  %valid_mclk_values.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 11
  %values.i.i75.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 11, i32 1
  %mclk_sclk_ratio.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 14
  %valid_sclk_values.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 10
  %values.i.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 10, i32 1
  br label %for.body584.i

for.cond590.preheaderthread-pre-split.i:          ; preds = %if.end578.i.for.cond590.preheaderthread-pre-split.i_crit_edge, %for.cond515.preheader.i.for.cond590.preheaderthread-pre-split.i_crit_edge
  %213 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %213)
  %.pr1181.i = load i16, ptr %8, align 4
  br label %for.cond590.preheader.i

for.cond590.preheader.i:                          ; preds = %btc_adjust_clock_combinations.exit.i.for.cond590.preheader.i_crit_edge, %for.cond590.preheaderthread-pre-split.i
  %214 = phi i16 [ %.pr1181.i, %for.cond590.preheaderthread-pre-split.i ], [ %248, %btc_adjust_clock_combinations.exit.i.for.cond590.preheader.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %214)
  %cmp5931147.not.i = icmp eq i16 %214, 0
  br i1 %cmp5931147.not.i, label %for.cond651.preheaderthread-pre-split.i, label %for.body595.lr.ph.i

for.body595.lr.ph.i:                              ; preds = %for.cond590.preheader.i
  %vddc615.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 2
  %entries.i1006.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  %vddci626.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 3
  %entries.i1018.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 1, i32 1
  %entries.i1038.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 2, i32 1
  %vddc_dependency_on_dispclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 4
  %current_dispclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 61, i32 6
  %entries.i1058.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 4, i32 1
  br label %for.body595.i

for.body584.i:                                    ; preds = %btc_adjust_clock_combinations.exit.i.for.body584.i_crit_edge, %for.body584.lr.ph.i
  %i.91145.i = phi i32 [ 0, %for.body584.lr.ph.i ], [ %inc588.i, %btc_adjust_clock_combinations.exit.i.for.body584.i_crit_edge ]
  %arrayidx586.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.91145.i
  %mclk.i.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.91145.i, i32 1
  %215 = ptrtoint ptr %mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %mclk.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %216)
  %cmp.i999.i = icmp eq i32 %216, 0
  br i1 %cmp.i999.i, label %for.body584.i.btc_adjust_clock_combinations.exit.i_crit_edge, label %lor.lhs.false.i1001.i

for.body584.i.btc_adjust_clock_combinations.exit.i_crit_edge: ; preds = %for.body584.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_adjust_clock_combinations.exit.i

lor.lhs.false.i1001.i:                            ; preds = %for.body584.i
  %217 = ptrtoint ptr %arrayidx586.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %arrayidx586.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %218)
  %cmp1.i1000.i = icmp eq i32 %218, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %218, i32 %216)
  %cmp4.i.i = icmp eq i32 %218, %216
  %or.cond.i.i = select i1 %cmp1.i1000.i, i1 true, i1 %cmp4.i.i
  br i1 %or.cond.i.i, label %lor.lhs.false.i1001.i.btc_adjust_clock_combinations.exit.i_crit_edge, label %if.end6.i.i

lor.lhs.false.i1001.i.btc_adjust_clock_combinations.exit.i_crit_edge: ; preds = %lor.lhs.false.i1001.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_adjust_clock_combinations.exit.i

if.end6.i.i:                                      ; preds = %lor.lhs.false.i1001.i
  call void @__sanitizer_cov_trace_cmp4(i32 %218, i32 %216)
  %cmp9.i.i = icmp ult i32 %218, %216
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.else.i.i

if.then10.i.i:                                    ; preds = %if.end6.i.i
  %sub.i1002.i = add i32 %216, -1
  %add.i.i = add i32 %218, %sub.i1002.i
  %div.i.i = udiv i32 %add.i.i, %218
  %219 = ptrtoint ptr %mclk_sclk_ratio.i.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %mclk_sclk_ratio.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %div.i.i, i32 %220)
  %cmp14.i.i = icmp ugt i32 %div.i.i, %220
  br i1 %cmp14.i.i, label %if.then15.i.i, label %if.then10.i.i.btc_adjust_clock_combinations.exit.i_crit_edge

if.then10.i.i.btc_adjust_clock_combinations.exit.i_crit_edge: ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_adjust_clock_combinations.exit.i

if.then15.i.i:                                    ; preds = %if.then10.i.i
  %221 = ptrtoint ptr %max_limits.0.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %max_limits.0.i, align 4
  %add23.i.i = add i32 %220, %sub.i1002.i
  %div28.i.i = udiv i32 %add23.i.i, %220
  %223 = ptrtoint ptr %valid_sclk_values.i.i.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %valid_sclk_values.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %224)
  %cmp1.i.i.i.i = icmp eq i32 %224, 0
  br i1 %cmp1.i.i.i.i, label %if.then15.i.i.btc_get_valid_sclk.exit.i.i_crit_edge, label %for.body.preheader.i.i.i.i

if.then15.i.i.btc_get_valid_sclk.exit.i.i_crit_edge: ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_valid_sclk.exit.i.i

for.body.preheader.i.i.i.i:                       ; preds = %if.then15.i.i
  %225 = ptrtoint ptr %values.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %values.i.i.i.i, align 4
  br label %for.body.i.i.i.i

for.cond.i.i.i.i:                                 ; preds = %for.body.i.i.i.i
  %inc.i.i.i.i = add nuw i32 %i.053.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i32 %inc.i.i.i.i, %224
  br i1 %exitcond.not.i.i.i.i, label %for.end.i.i.i.i, label %for.cond.i.i.i.i.for.body.i.i.i.i_crit_edge

for.cond.i.i.i.i.for.body.i.i.i.i_crit_edge:      ; preds = %for.cond.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.cond.i.i.i.i.for.body.i.i.i.i_crit_edge, %for.body.preheader.i.i.i.i
  %i.053.i.i.i.i = phi i32 [ %inc.i.i.i.i, %for.cond.i.i.i.i.for.body.i.i.i.i_crit_edge ], [ 0, %for.body.preheader.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr i32, ptr %226, i32 %i.053.i.i.i.i
  %227 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %arrayidx.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %228, i32 %div28.i.i)
  %cmp5.not.i.i.i.i = icmp ult i32 %228, %div28.i.i
  br i1 %cmp5.not.i.i.i.i, label %for.cond.i.i.i.i, label %for.body.i.i.i.i.btc_get_valid_sclk.exit.i.i_crit_edge

for.body.i.i.i.i.btc_get_valid_sclk.exit.i.i_crit_edge: ; preds = %for.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_valid_sclk.exit.i.i

for.end.i.i.i.i:                                  ; preds = %for.cond.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i.i = add i32 %224, -1
  %arrayidx19.i.i.i.i = getelementptr i32, ptr %226, i32 %sub.i.i.i.i
  %229 = ptrtoint ptr %arrayidx19.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %arrayidx19.i.i.i.i, align 4
  br label %btc_get_valid_sclk.exit.i.i

btc_get_valid_sclk.exit.i.i:                      ; preds = %for.end.i.i.i.i, %for.body.i.i.i.i.btc_get_valid_sclk.exit.i.i_crit_edge, %if.then15.i.i.btc_get_valid_sclk.exit.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ %230, %for.end.i.i.i.i ], [ %div28.i.i, %if.then15.i.i.btc_get_valid_sclk.exit.i.i_crit_edge ], [ %228, %for.body.i.i.i.i.btc_get_valid_sclk.exit.i.i_crit_edge ]
  %231 = tail call i32 @llvm.umin.i32(i32 %.sink.i.i.i.i, i32 %222) #14
  %232 = ptrtoint ptr %arrayidx586.i to i32
  call void @__asan_store4_noabort(i32 %232)
  store i32 %231, ptr %arrayidx586.i, align 4
  br label %btc_adjust_clock_combinations.exit.i

if.else.i.i:                                      ; preds = %if.end6.i.i
  %sub33.i.i = sub i32 %218, %216
  %233 = ptrtoint ptr %sclk_mclk_delta.i.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %sclk_mclk_delta.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub33.i.i, i32 %234)
  %cmp37.i.i = icmp ugt i32 %sub33.i.i, %234
  br i1 %cmp37.i.i, label %if.then38.i.i, label %if.else.i.i.btc_adjust_clock_combinations.exit.i_crit_edge

if.else.i.i.btc_adjust_clock_combinations.exit.i_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_adjust_clock_combinations.exit.i

if.then38.i.i:                                    ; preds = %if.else.i.i
  %235 = ptrtoint ptr %mclk39.i.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %mclk39.i.i, align 4
  %sub45.i.i = sub i32 %218, %234
  %237 = ptrtoint ptr %valid_mclk_values.i.i.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %valid_mclk_values.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %238)
  %cmp1.i.i74.i.i = icmp eq i32 %238, 0
  br i1 %cmp1.i.i74.i.i, label %if.then38.i.i.btc_get_valid_mclk.exit.i.i_crit_edge, label %for.body.preheader.i.i76.i.i

if.then38.i.i.btc_get_valid_mclk.exit.i.i_crit_edge: ; preds = %if.then38.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_valid_mclk.exit.i.i

for.body.preheader.i.i76.i.i:                     ; preds = %if.then38.i.i
  %239 = ptrtoint ptr %values.i.i75.i.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load ptr, ptr %values.i.i75.i.i, align 4
  br label %for.body.i.i83.i.i

for.cond.i.i79.i.i:                               ; preds = %for.body.i.i83.i.i
  %inc.i.i77.i.i = add nuw i32 %i.053.i.i80.i.i, 1
  %exitcond.not.i.i78.i.i = icmp eq i32 %inc.i.i77.i.i, %238
  br i1 %exitcond.not.i.i78.i.i, label %for.end.i.i86.i.i, label %for.cond.i.i79.i.i.for.body.i.i83.i.i_crit_edge

for.cond.i.i79.i.i.for.body.i.i83.i.i_crit_edge:  ; preds = %for.cond.i.i79.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i83.i.i

for.body.i.i83.i.i:                               ; preds = %for.cond.i.i79.i.i.for.body.i.i83.i.i_crit_edge, %for.body.preheader.i.i76.i.i
  %i.053.i.i80.i.i = phi i32 [ %inc.i.i77.i.i, %for.cond.i.i79.i.i.for.body.i.i83.i.i_crit_edge ], [ 0, %for.body.preheader.i.i76.i.i ]
  %arrayidx.i.i81.i.i = getelementptr i32, ptr %240, i32 %i.053.i.i80.i.i
  %241 = ptrtoint ptr %arrayidx.i.i81.i.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %arrayidx.i.i81.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %242, i32 %sub45.i.i)
  %cmp5.not.i.i82.i.i = icmp ult i32 %242, %sub45.i.i
  br i1 %cmp5.not.i.i82.i.i, label %for.cond.i.i79.i.i, label %for.body.i.i83.i.i.btc_get_valid_mclk.exit.i.i_crit_edge

for.body.i.i83.i.i.btc_get_valid_mclk.exit.i.i_crit_edge: ; preds = %for.body.i.i83.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_get_valid_mclk.exit.i.i

for.end.i.i86.i.i:                                ; preds = %for.cond.i.i79.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i84.i.i = add i32 %238, -1
  %arrayidx19.i.i85.i.i = getelementptr i32, ptr %240, i32 %sub.i.i84.i.i
  %243 = ptrtoint ptr %arrayidx19.i.i85.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %arrayidx19.i.i85.i.i, align 4
  br label %btc_get_valid_mclk.exit.i.i

btc_get_valid_mclk.exit.i.i:                      ; preds = %for.end.i.i86.i.i, %for.body.i.i83.i.i.btc_get_valid_mclk.exit.i.i_crit_edge, %if.then38.i.i.btc_get_valid_mclk.exit.i.i_crit_edge
  %.sink.i.i87.i.i = phi i32 [ %244, %for.end.i.i86.i.i ], [ %sub45.i.i, %if.then38.i.i.btc_get_valid_mclk.exit.i.i_crit_edge ], [ %242, %for.body.i.i83.i.i.btc_get_valid_mclk.exit.i.i_crit_edge ]
  %245 = tail call i32 @llvm.umin.i32(i32 %.sink.i.i87.i.i, i32 %236) #14
  %246 = ptrtoint ptr %mclk.i.i to i32
  call void @__asan_store4_noabort(i32 %246)
  store i32 %245, ptr %mclk.i.i, align 4
  br label %btc_adjust_clock_combinations.exit.i

btc_adjust_clock_combinations.exit.i:             ; preds = %btc_get_valid_mclk.exit.i.i, %if.else.i.i.btc_adjust_clock_combinations.exit.i_crit_edge, %btc_get_valid_sclk.exit.i.i, %if.then10.i.i.btc_adjust_clock_combinations.exit.i_crit_edge, %lor.lhs.false.i1001.i.btc_adjust_clock_combinations.exit.i_crit_edge, %for.body584.i.btc_adjust_clock_combinations.exit.i_crit_edge
  %inc588.i = add nuw nsw i32 %i.91145.i, 1
  %247 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %247)
  %248 = load i16, ptr %8, align 4
  %conv581.i = zext i16 %248 to i32
  %cmp582.i = icmp ult i32 %inc588.i, %conv581.i
  br i1 %cmp582.i, label %btc_adjust_clock_combinations.exit.i.for.body584.i_crit_edge, label %btc_adjust_clock_combinations.exit.i.for.cond590.preheader.i_crit_edge

btc_adjust_clock_combinations.exit.i.for.cond590.preheader.i_crit_edge: ; preds = %btc_adjust_clock_combinations.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond590.preheader.i

btc_adjust_clock_combinations.exit.i.for.body584.i_crit_edge: ; preds = %btc_adjust_clock_combinations.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body584.i

for.cond651.preheaderthread-pre-split.i:          ; preds = %for.cond590.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  %249 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %249)
  %.pr1182.i = load i16, ptr %8, align 4
  br label %for.cond651.preheader.i

for.cond651.preheader.i:                          ; preds = %btc_apply_voltage_dependency_rules.exit1074.i.for.cond651.preheader.i_crit_edge, %for.cond651.preheaderthread-pre-split.i
  %250 = phi i16 [ %.pr1182.i, %for.cond651.preheaderthread-pre-split.i ], [ %332, %btc_apply_voltage_dependency_rules.exit1074.i.for.cond651.preheader.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %250)
  %cmp6541151.not.i = icmp eq i16 %250, 0
  br i1 %cmp6541151.not.i, label %for.end667.thread.i, label %for.body656.lr.ph.i

for.end667.thread.i:                              ; preds = %for.cond651.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  %dc_compatible1185.i = getelementptr inbounds %struct.si_ps, ptr %8, i32 0, i32 1
  %251 = ptrtoint ptr %dc_compatible1185.i to i32
  call void @__asan_store1_noabort(i32 %251)
  store i8 1, ptr %dc_compatible1185.i, align 2
  br label %si_apply_state_adjust_rules.exit

for.body656.lr.ph.i:                              ; preds = %for.cond651.preheader.i
  %vddc657.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 2
  %vddci658.i = getelementptr inbounds %struct.amdgpu_clock_and_voltage_limits, ptr %max_limits.0.i, i32 0, i32 3
  %vddc_vddci_delta39.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 16
  br label %for.body656.i

for.body595.i:                                    ; preds = %btc_apply_voltage_dependency_rules.exit1074.i.for.body595.i_crit_edge, %for.body595.lr.ph.i
  %i.101148.i = phi i32 [ 0, %for.body595.lr.ph.i ], [ %inc649.i, %btc_apply_voltage_dependency_rules.exit1074.i.for.body595.i_crit_edge ]
  %arrayidx597.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.101148.i
  %vddc598.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.101148.i, i32 2
  %252 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_load2_noabort(i32 %252)
  %253 = load i16, ptr %vddc598.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %253, i16 %min_vce_voltage.0.i)
  %cmp601.i = icmp ult i16 %253, %min_vce_voltage.0.i
  br i1 %cmp601.i, label %if.then603.i, label %for.body595.i.if.end607.i_crit_edge

for.body595.i.if.end607.i_crit_edge:              ; preds = %for.body595.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end607.i

if.then603.i:                                     ; preds = %for.body595.i
  call void @__sanitizer_cov_trace_pc() #16
  %254 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_store2_noabort(i32 %254)
  store i16 %min_vce_voltage.0.i, ptr %vddc598.i, align 4
  br label %if.end607.i

if.end607.i:                                      ; preds = %if.then603.i, %for.body595.i.if.end607.i_crit_edge
  %255 = ptrtoint ptr %arrayidx597.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load i32, ptr %arrayidx597.i, align 4
  %257 = ptrtoint ptr %vddc615.i to i32
  call void @__asan_load2_noabort(i32 %257)
  %258 = load i16, ptr %vddc615.i, align 4
  %259 = ptrtoint ptr %dyn_state222.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %dyn_state222.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %260)
  %cmp1.i1004.i = icmp eq i32 %260, 0
  br i1 %cmp1.i1004.i, label %if.end607.i.btc_apply_voltage_dependency_rules.exit.i_crit_edge, label %for.body.preheader.i1007.i

if.end607.i.btc_apply_voltage_dependency_rules.exit.i_crit_edge: ; preds = %if.end607.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit.i

for.body.preheader.i1007.i:                       ; preds = %if.end607.i
  %261 = ptrtoint ptr %entries.i1006.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %entries.i1006.i, align 4
  br label %for.body.i1009.i

for.body.i1009.i:                                 ; preds = %for.inc.i1014.i.for.body.i1009.i_crit_edge, %for.body.preheader.i1007.i
  %i.059.i.i = phi i32 [ %inc.i1012.i, %for.inc.i1014.i.for.body.i1009.i_crit_edge ], [ 0, %for.body.preheader.i1007.i ]
  %arrayidx.i1008.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %262, i32 %i.059.i.i
  %263 = ptrtoint ptr %arrayidx.i1008.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load i32, ptr %arrayidx.i1008.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %264, i32 %256)
  %cmp4.not.i.i = icmp ult i32 %264, %256
  br i1 %cmp4.not.i.i, label %for.inc.i1014.i, label %if.then5.i.i

if.then5.i.i:                                     ; preds = %for.body.i1009.i
  %265 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_load2_noabort(i32 %265)
  %266 = load i16, ptr %vddc598.i, align 2
  %v.i1010.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %262, i32 %i.059.i.i, i32 1
  %267 = ptrtoint ptr %v.i1010.i to i32
  call void @__asan_load2_noabort(i32 %267)
  %268 = load i16, ptr %v.i1010.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %266, i16 %268)
  %cmp9.i1011.i = icmp ult i16 %266, %268
  br i1 %cmp9.i1011.i, label %if.then11.i.i, label %if.then5.i.i.btc_apply_voltage_dependency_rules.exit.i_crit_edge

if.then5.i.i.btc_apply_voltage_dependency_rules.exit.i_crit_edge: ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit.i

if.then11.i.i:                                    ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %269 = tail call i16 @llvm.umin.i16(i16 %268, i16 %258) #14
  br label %cleanup.sink.split.i.i

for.inc.i1014.i:                                  ; preds = %for.body.i1009.i
  %inc.i1012.i = add nuw i32 %i.059.i.i, 1
  %exitcond.not.i1013.i = icmp eq i32 %inc.i1012.i, %260
  br i1 %exitcond.not.i1013.i, label %for.end.i.i, label %for.inc.i1014.i.for.body.i1009.i_crit_edge

for.inc.i1014.i.for.body.i1009.i_crit_edge:       ; preds = %for.inc.i1014.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i1009.i

for.end.i.i:                                      ; preds = %for.inc.i1014.i
  call void @__sanitizer_cov_trace_pc() #16
  %270 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_load2_noabort(i32 %270)
  %271 = load i16, ptr %vddc598.i, align 2
  %272 = tail call i16 @llvm.umax.i16(i16 %271, i16 %258) #14
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %for.end.i.i, %if.then11.i.i
  %.sink.i.i = phi i16 [ %269, %if.then11.i.i ], [ %272, %for.end.i.i ]
  %273 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_store2_noabort(i32 %273)
  store i16 %.sink.i.i, ptr %vddc598.i, align 2
  br label %btc_apply_voltage_dependency_rules.exit.i

btc_apply_voltage_dependency_rules.exit.i:        ; preds = %cleanup.sink.split.i.i, %if.then5.i.i.btc_apply_voltage_dependency_rules.exit.i_crit_edge, %if.end607.i.btc_apply_voltage_dependency_rules.exit.i_crit_edge
  %mclk625.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.101148.i, i32 1
  %274 = ptrtoint ptr %mclk625.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %mclk625.i, align 4
  %276 = ptrtoint ptr %vddci626.i to i32
  call void @__asan_load2_noabort(i32 %276)
  %277 = load i16, ptr %vddci626.i, align 2
  %vddci629.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.101148.i, i32 3
  %278 = ptrtoint ptr %vddci_dependency_on_mclk.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %vddci_dependency_on_mclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %279)
  %cmp1.i1016.i = icmp eq i32 %279, 0
  br i1 %cmp1.i1016.i, label %btc_apply_voltage_dependency_rules.exit.i.btc_apply_voltage_dependency_rules.exit1034.i_crit_edge, label %for.body.preheader.i1019.i

btc_apply_voltage_dependency_rules.exit.i.btc_apply_voltage_dependency_rules.exit1034.i_crit_edge: ; preds = %btc_apply_voltage_dependency_rules.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit1034.i

for.body.preheader.i1019.i:                       ; preds = %btc_apply_voltage_dependency_rules.exit.i
  %280 = ptrtoint ptr %entries.i1018.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %entries.i1018.i, align 4
  br label %for.body.i1023.i

for.body.i1023.i:                                 ; preds = %for.inc.i1030.i.for.body.i1023.i_crit_edge, %for.body.preheader.i1019.i
  %i.059.i1020.i = phi i32 [ %inc.i1028.i, %for.inc.i1030.i.for.body.i1023.i_crit_edge ], [ 0, %for.body.preheader.i1019.i ]
  %arrayidx.i1021.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %281, i32 %i.059.i1020.i
  %282 = ptrtoint ptr %arrayidx.i1021.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %arrayidx.i1021.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %283, i32 %275)
  %cmp4.not.i1022.i = icmp ult i32 %283, %275
  br i1 %cmp4.not.i1022.i, label %for.inc.i1030.i, label %if.then5.i1026.i

if.then5.i1026.i:                                 ; preds = %for.body.i1023.i
  %284 = ptrtoint ptr %vddci629.i to i32
  call void @__asan_load2_noabort(i32 %284)
  %285 = load i16, ptr %vddci629.i, align 2
  %v.i1024.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %281, i32 %i.059.i1020.i, i32 1
  %286 = ptrtoint ptr %v.i1024.i to i32
  call void @__asan_load2_noabort(i32 %286)
  %287 = load i16, ptr %v.i1024.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %285, i16 %287)
  %cmp9.i1025.i = icmp ult i16 %285, %287
  br i1 %cmp9.i1025.i, label %if.then11.i1027.i, label %if.then5.i1026.i.btc_apply_voltage_dependency_rules.exit1034.i_crit_edge

if.then5.i1026.i.btc_apply_voltage_dependency_rules.exit1034.i_crit_edge: ; preds = %if.then5.i1026.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit1034.i

if.then11.i1027.i:                                ; preds = %if.then5.i1026.i
  call void @__sanitizer_cov_trace_pc() #16
  %288 = tail call i16 @llvm.umin.i16(i16 %287, i16 %277) #14
  br label %cleanup.sink.split.i1033.i

for.inc.i1030.i:                                  ; preds = %for.body.i1023.i
  %inc.i1028.i = add nuw i32 %i.059.i1020.i, 1
  %exitcond.not.i1029.i = icmp eq i32 %inc.i1028.i, %279
  br i1 %exitcond.not.i1029.i, label %for.end.i1031.i, label %for.inc.i1030.i.for.body.i1023.i_crit_edge

for.inc.i1030.i.for.body.i1023.i_crit_edge:       ; preds = %for.inc.i1030.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i1023.i

for.end.i1031.i:                                  ; preds = %for.inc.i1030.i
  call void @__sanitizer_cov_trace_pc() #16
  %289 = ptrtoint ptr %vddci629.i to i32
  call void @__asan_load2_noabort(i32 %289)
  %290 = load i16, ptr %vddci629.i, align 2
  %291 = tail call i16 @llvm.umax.i16(i16 %290, i16 %277) #14
  br label %cleanup.sink.split.i1033.i

cleanup.sink.split.i1033.i:                       ; preds = %for.end.i1031.i, %if.then11.i1027.i
  %.sink.i1032.i = phi i16 [ %288, %if.then11.i1027.i ], [ %291, %for.end.i1031.i ]
  %292 = ptrtoint ptr %vddci629.i to i32
  call void @__asan_store2_noabort(i32 %292)
  store i16 %.sink.i1032.i, ptr %vddci629.i, align 2
  br label %btc_apply_voltage_dependency_rules.exit1034.i

btc_apply_voltage_dependency_rules.exit1034.i:    ; preds = %cleanup.sink.split.i1033.i, %if.then5.i1026.i.btc_apply_voltage_dependency_rules.exit1034.i_crit_edge, %btc_apply_voltage_dependency_rules.exit.i.btc_apply_voltage_dependency_rules.exit1034.i_crit_edge
  %293 = ptrtoint ptr %mclk625.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %mclk625.i, align 4
  %295 = ptrtoint ptr %vddc615.i to i32
  call void @__asan_load2_noabort(i32 %295)
  %296 = load i16, ptr %vddc615.i, align 4
  %297 = ptrtoint ptr %vddc_dependency_on_mclk.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %vddc_dependency_on_mclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %298)
  %cmp1.i1036.i = icmp eq i32 %298, 0
  br i1 %cmp1.i1036.i, label %btc_apply_voltage_dependency_rules.exit1034.i.btc_apply_voltage_dependency_rules.exit1054.i_crit_edge, label %for.body.preheader.i1039.i

btc_apply_voltage_dependency_rules.exit1034.i.btc_apply_voltage_dependency_rules.exit1054.i_crit_edge: ; preds = %btc_apply_voltage_dependency_rules.exit1034.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit1054.i

for.body.preheader.i1039.i:                       ; preds = %btc_apply_voltage_dependency_rules.exit1034.i
  %299 = ptrtoint ptr %entries.i1038.i to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load ptr, ptr %entries.i1038.i, align 4
  br label %for.body.i1043.i

for.body.i1043.i:                                 ; preds = %for.inc.i1050.i.for.body.i1043.i_crit_edge, %for.body.preheader.i1039.i
  %i.059.i1040.i = phi i32 [ %inc.i1048.i, %for.inc.i1050.i.for.body.i1043.i_crit_edge ], [ 0, %for.body.preheader.i1039.i ]
  %arrayidx.i1041.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %300, i32 %i.059.i1040.i
  %301 = ptrtoint ptr %arrayidx.i1041.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %arrayidx.i1041.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %302, i32 %294)
  %cmp4.not.i1042.i = icmp ult i32 %302, %294
  br i1 %cmp4.not.i1042.i, label %for.inc.i1050.i, label %if.then5.i1046.i

if.then5.i1046.i:                                 ; preds = %for.body.i1043.i
  %303 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_load2_noabort(i32 %303)
  %304 = load i16, ptr %vddc598.i, align 2
  %v.i1044.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %300, i32 %i.059.i1040.i, i32 1
  %305 = ptrtoint ptr %v.i1044.i to i32
  call void @__asan_load2_noabort(i32 %305)
  %306 = load i16, ptr %v.i1044.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %304, i16 %306)
  %cmp9.i1045.i = icmp ult i16 %304, %306
  br i1 %cmp9.i1045.i, label %if.then11.i1047.i, label %if.then5.i1046.i.btc_apply_voltage_dependency_rules.exit1054.i_crit_edge

if.then5.i1046.i.btc_apply_voltage_dependency_rules.exit1054.i_crit_edge: ; preds = %if.then5.i1046.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit1054.i

if.then11.i1047.i:                                ; preds = %if.then5.i1046.i
  call void @__sanitizer_cov_trace_pc() #16
  %307 = tail call i16 @llvm.umin.i16(i16 %306, i16 %296) #14
  br label %cleanup.sink.split.i1053.i

for.inc.i1050.i:                                  ; preds = %for.body.i1043.i
  %inc.i1048.i = add nuw i32 %i.059.i1040.i, 1
  %exitcond.not.i1049.i = icmp eq i32 %inc.i1048.i, %298
  br i1 %exitcond.not.i1049.i, label %for.end.i1051.i, label %for.inc.i1050.i.for.body.i1043.i_crit_edge

for.inc.i1050.i.for.body.i1043.i_crit_edge:       ; preds = %for.inc.i1050.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i1043.i

for.end.i1051.i:                                  ; preds = %for.inc.i1050.i
  call void @__sanitizer_cov_trace_pc() #16
  %308 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_load2_noabort(i32 %308)
  %309 = load i16, ptr %vddc598.i, align 2
  %310 = tail call i16 @llvm.umax.i16(i16 %309, i16 %296) #14
  br label %cleanup.sink.split.i1053.i

cleanup.sink.split.i1053.i:                       ; preds = %for.end.i1051.i, %if.then11.i1047.i
  %.sink.i1052.i = phi i16 [ %307, %if.then11.i1047.i ], [ %310, %for.end.i1051.i ]
  %311 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_store2_noabort(i32 %311)
  store i16 %.sink.i1052.i, ptr %vddc598.i, align 2
  br label %btc_apply_voltage_dependency_rules.exit1054.i

btc_apply_voltage_dependency_rules.exit1054.i:    ; preds = %cleanup.sink.split.i1053.i, %if.then5.i1046.i.btc_apply_voltage_dependency_rules.exit1054.i_crit_edge, %btc_apply_voltage_dependency_rules.exit1034.i.btc_apply_voltage_dependency_rules.exit1054.i_crit_edge
  %312 = ptrtoint ptr %current_dispclk.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %current_dispclk.i, align 4
  %314 = ptrtoint ptr %vddc615.i to i32
  call void @__asan_load2_noabort(i32 %314)
  %315 = load i16, ptr %vddc615.i, align 4
  %316 = ptrtoint ptr %vddc_dependency_on_dispclk.i to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %vddc_dependency_on_dispclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %317)
  %cmp1.i1056.i = icmp eq i32 %317, 0
  br i1 %cmp1.i1056.i, label %btc_apply_voltage_dependency_rules.exit1054.i.btc_apply_voltage_dependency_rules.exit1074.i_crit_edge, label %for.body.preheader.i1059.i

btc_apply_voltage_dependency_rules.exit1054.i.btc_apply_voltage_dependency_rules.exit1074.i_crit_edge: ; preds = %btc_apply_voltage_dependency_rules.exit1054.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit1074.i

for.body.preheader.i1059.i:                       ; preds = %btc_apply_voltage_dependency_rules.exit1054.i
  %318 = ptrtoint ptr %entries.i1058.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %entries.i1058.i, align 4
  br label %for.body.i1063.i

for.body.i1063.i:                                 ; preds = %for.inc.i1070.i.for.body.i1063.i_crit_edge, %for.body.preheader.i1059.i
  %i.059.i1060.i = phi i32 [ %inc.i1068.i, %for.inc.i1070.i.for.body.i1063.i_crit_edge ], [ 0, %for.body.preheader.i1059.i ]
  %arrayidx.i1061.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %319, i32 %i.059.i1060.i
  %320 = ptrtoint ptr %arrayidx.i1061.i to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %arrayidx.i1061.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %321, i32 %313)
  %cmp4.not.i1062.i = icmp ult i32 %321, %313
  br i1 %cmp4.not.i1062.i, label %for.inc.i1070.i, label %if.then5.i1066.i

if.then5.i1066.i:                                 ; preds = %for.body.i1063.i
  %322 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_load2_noabort(i32 %322)
  %323 = load i16, ptr %vddc598.i, align 2
  %v.i1064.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %319, i32 %i.059.i1060.i, i32 1
  %324 = ptrtoint ptr %v.i1064.i to i32
  call void @__asan_load2_noabort(i32 %324)
  %325 = load i16, ptr %v.i1064.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %323, i16 %325)
  %cmp9.i1065.i = icmp ult i16 %323, %325
  br i1 %cmp9.i1065.i, label %if.then11.i1067.i, label %if.then5.i1066.i.btc_apply_voltage_dependency_rules.exit1074.i_crit_edge

if.then5.i1066.i.btc_apply_voltage_dependency_rules.exit1074.i_crit_edge: ; preds = %if.then5.i1066.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_dependency_rules.exit1074.i

if.then11.i1067.i:                                ; preds = %if.then5.i1066.i
  call void @__sanitizer_cov_trace_pc() #16
  %326 = tail call i16 @llvm.umin.i16(i16 %325, i16 %315) #14
  br label %cleanup.sink.split.i1073.i

for.inc.i1070.i:                                  ; preds = %for.body.i1063.i
  %inc.i1068.i = add nuw i32 %i.059.i1060.i, 1
  %exitcond.not.i1069.i = icmp eq i32 %inc.i1068.i, %317
  br i1 %exitcond.not.i1069.i, label %for.end.i1071.i, label %for.inc.i1070.i.for.body.i1063.i_crit_edge

for.inc.i1070.i.for.body.i1063.i_crit_edge:       ; preds = %for.inc.i1070.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i1063.i

for.end.i1071.i:                                  ; preds = %for.inc.i1070.i
  call void @__sanitizer_cov_trace_pc() #16
  %327 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_load2_noabort(i32 %327)
  %328 = load i16, ptr %vddc598.i, align 2
  %329 = tail call i16 @llvm.umax.i16(i16 %328, i16 %315) #14
  br label %cleanup.sink.split.i1073.i

cleanup.sink.split.i1073.i:                       ; preds = %for.end.i1071.i, %if.then11.i1067.i
  %.sink.i1072.i = phi i16 [ %326, %if.then11.i1067.i ], [ %329, %for.end.i1071.i ]
  %330 = ptrtoint ptr %vddc598.i to i32
  call void @__asan_store2_noabort(i32 %330)
  store i16 %.sink.i1072.i, ptr %vddc598.i, align 2
  br label %btc_apply_voltage_dependency_rules.exit1074.i

btc_apply_voltage_dependency_rules.exit1074.i:    ; preds = %cleanup.sink.split.i1073.i, %if.then5.i1066.i.btc_apply_voltage_dependency_rules.exit1074.i_crit_edge, %btc_apply_voltage_dependency_rules.exit1054.i.btc_apply_voltage_dependency_rules.exit1074.i_crit_edge
  %inc649.i = add nuw nsw i32 %i.101148.i, 1
  %331 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %331)
  %332 = load i16, ptr %8, align 4
  %conv592.i = zext i16 %332 to i32
  %cmp593.i = icmp ult i32 %inc649.i, %conv592.i
  br i1 %cmp593.i, label %btc_apply_voltage_dependency_rules.exit1074.i.for.body595.i_crit_edge, label %btc_apply_voltage_dependency_rules.exit1074.i.for.cond651.preheader.i_crit_edge

btc_apply_voltage_dependency_rules.exit1074.i.for.cond651.preheader.i_crit_edge: ; preds = %btc_apply_voltage_dependency_rules.exit1074.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond651.preheader.i

btc_apply_voltage_dependency_rules.exit1074.i.for.body595.i_crit_edge: ; preds = %btc_apply_voltage_dependency_rules.exit1074.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body595.i

for.body656.i:                                    ; preds = %btc_apply_voltage_delta_rules.exit.i.for.body656.i_crit_edge, %for.body656.lr.ph.i
  %i.111152.i = phi i32 [ 0, %for.body656.lr.ph.i ], [ %inc666.i, %btc_apply_voltage_delta_rules.exit.i.for.body656.i_crit_edge ]
  %333 = ptrtoint ptr %vddc657.i to i32
  call void @__asan_load2_noabort(i32 %333)
  %334 = load i16, ptr %vddc657.i, align 4
  %335 = ptrtoint ptr %vddci658.i to i32
  call void @__asan_load2_noabort(i32 %335)
  %336 = load i16, ptr %vddci658.i, align 2
  %vddc661.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.111152.i, i32 2
  %vddci664.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.111152.i, i32 3
  %337 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %priv.i, align 4
  %339 = ptrtoint ptr %vddc661.i to i32
  call void @__asan_load2_noabort(i32 %339)
  %340 = load i16, ptr %vddc661.i, align 2
  %conv.i.i = zext i16 %340 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %340)
  %cmp.i1075.i = icmp eq i16 %340, 0
  br i1 %cmp.i1075.i, label %for.body656.i.btc_apply_voltage_delta_rules.exit.i_crit_edge, label %lor.lhs.false.i1077.i

for.body656.i.btc_apply_voltage_delta_rules.exit.i_crit_edge: ; preds = %for.body656.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_delta_rules.exit.i

lor.lhs.false.i1077.i:                            ; preds = %for.body656.i
  %341 = ptrtoint ptr %vddci664.i to i32
  call void @__asan_load2_noabort(i32 %341)
  %342 = load i16, ptr %vddci664.i, align 2
  %conv2.i.i = zext i16 %342 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %342)
  %cmp3.i1076.i = icmp eq i16 %342, 0
  br i1 %cmp3.i1076.i, label %lor.lhs.false.i1077.i.btc_apply_voltage_delta_rules.exit.i_crit_edge, label %if.end.i.i

lor.lhs.false.i1077.i.btc_apply_voltage_delta_rules.exit.i_crit_edge: ; preds = %lor.lhs.false.i1077.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_delta_rules.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i1077.i
  call void @__sanitizer_cov_trace_cmp2(i16 %340, i16 %342)
  %cmp7.i.i = icmp ugt i16 %340, %342
  br i1 %cmp7.i.i, label %if.then9.i.i, label %if.else.i1085.i

if.then9.i.i:                                     ; preds = %if.end.i.i
  %sub.i1078.i = sub nsw i32 %conv.i.i, %conv2.i.i
  %343 = ptrtoint ptr %vddc_vddci_delta39.i.i to i32
  call void @__asan_load2_noabort(i32 %343)
  %344 = load i16, ptr %vddc_vddci_delta39.i.i, align 4
  %conv12.i.i = zext i16 %344 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i1078.i, i32 %conv12.i.i)
  %cmp13.i.i = icmp sgt i32 %sub.i1078.i, %conv12.i.i
  br i1 %cmp13.i.i, label %if.then15.i1079.i, label %if.then9.i.i.btc_apply_voltage_delta_rules.exit.i_crit_edge

if.then9.i.i.btc_apply_voltage_delta_rules.exit.i_crit_edge: ; preds = %if.then9.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_delta_rules.exit.i

if.then15.i1079.i:                                ; preds = %if.then9.i.i
  %vddci_voltage_table.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %338, i32 0, i32 20
  %sub22.i.i = sub i16 %340, %344
  %345 = ptrtoint ptr %vddci_voltage_table.i.i to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load i32, ptr %vddci_voltage_table.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %346)
  %cmp20.not.i.i.i = icmp eq i32 %346, 0
  br i1 %cmp20.not.i.i.i, label %if.then15.i1079.i.for.end.i.i.i_crit_edge, label %if.then15.i1079.i.for.body.i.i1083.i_crit_edge

if.then15.i1079.i.for.body.i.i1083.i_crit_edge:   ; preds = %if.then15.i1079.i
  br label %for.body.i.i1083.i

if.then15.i1079.i.for.end.i.i.i_crit_edge:        ; preds = %if.then15.i1079.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i1083.i
  %inc.i.i1080.i = add nuw i32 %i.021.i.i.i, 1
  %exitcond.not.i.i1081.i = icmp eq i32 %inc.i.i1080.i, %346
  br i1 %exitcond.not.i.i1081.i, label %for.cond.i.i.i.for.end.i.i.i_crit_edge, label %for.cond.i.i.i.for.body.i.i1083.i_crit_edge

for.cond.i.i.i.for.body.i.i1083.i_crit_edge:      ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i1083.i

for.cond.i.i.i.for.end.i.i.i_crit_edge:           ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i.i

for.body.i.i1083.i:                               ; preds = %for.cond.i.i.i.for.body.i.i1083.i_crit_edge, %if.then15.i1079.i.for.body.i.i1083.i_crit_edge
  %i.021.i.i.i = phi i32 [ %inc.i.i1080.i, %for.cond.i.i.i.for.body.i.i1083.i_crit_edge ], [ 0, %if.then15.i1079.i.for.body.i.i1083.i_crit_edge ]
  %arrayidx.i.i1082.i = getelementptr %struct.evergreen_power_info, ptr %338, i32 0, i32 20, i32 3, i32 %i.021.i.i.i
  %347 = ptrtoint ptr %arrayidx.i.i1082.i to i32
  call void @__asan_load2_noabort(i32 %347)
  %348 = load i16, ptr %arrayidx.i.i1082.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %348, i16 %sub22.i.i)
  %cmp2.not.i.i.i = icmp ult i16 %348, %sub22.i.i
  br i1 %cmp2.not.i.i.i, label %for.cond.i.i.i, label %for.body.i.i1083.i.btc_find_voltage.exit.i.i_crit_edge

for.body.i.i1083.i.btc_find_voltage.exit.i.i_crit_edge: ; preds = %for.body.i.i1083.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_find_voltage.exit.i.i

for.end.i.i.i:                                    ; preds = %for.cond.i.i.i.for.end.i.i.i_crit_edge, %if.then15.i1079.i.for.end.i.i.i_crit_edge
  %sub.i.i.i = add i32 %346, -1
  %arrayidx9.i.i.i = getelementptr %struct.evergreen_power_info, ptr %338, i32 0, i32 20, i32 3, i32 %sub.i.i.i
  %349 = ptrtoint ptr %arrayidx9.i.i.i to i32
  call void @__asan_load2_noabort(i32 %349)
  %350 = load i16, ptr %arrayidx9.i.i.i, align 4
  br label %btc_find_voltage.exit.i.i

btc_find_voltage.exit.i.i:                        ; preds = %for.end.i.i.i, %for.body.i.i1083.i.btc_find_voltage.exit.i.i_crit_edge
  %retval.0.i.i1084.i = phi i16 [ %350, %for.end.i.i.i ], [ %348, %for.body.i.i1083.i.btc_find_voltage.exit.i.i_crit_edge ]
  %351 = tail call i16 @llvm.umin.i16(i16 %retval.0.i.i1084.i, i16 %336) #14
  %352 = ptrtoint ptr %vddci664.i to i32
  call void @__asan_store2_noabort(i32 %352)
  store i16 %351, ptr %vddci664.i, align 2
  br label %btc_apply_voltage_delta_rules.exit.i

if.else.i1085.i:                                  ; preds = %if.end.i.i
  %sub35.i.i = sub nsw i32 %conv2.i.i, %conv.i.i
  %353 = ptrtoint ptr %vddc_vddci_delta39.i.i to i32
  call void @__asan_load2_noabort(i32 %353)
  %354 = load i16, ptr %vddc_vddci_delta39.i.i, align 4
  %conv40.i.i = zext i16 %354 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub35.i.i, i32 %conv40.i.i)
  %cmp41.i.i = icmp sgt i32 %sub35.i.i, %conv40.i.i
  br i1 %cmp41.i.i, label %if.then43.i.i, label %if.else.i1085.i.btc_apply_voltage_delta_rules.exit.i_crit_edge

if.else.i1085.i.btc_apply_voltage_delta_rules.exit.i_crit_edge: ; preds = %if.else.i1085.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_apply_voltage_delta_rules.exit.i

if.then43.i.i:                                    ; preds = %if.else.i1085.i
  %vddc_voltage_table.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %338, i32 0, i32 19
  %sub50.i.i = sub i16 %342, %354
  %355 = ptrtoint ptr %vddc_voltage_table.i.i to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load i32, ptr %vddc_voltage_table.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %356)
  %cmp20.not.i87.i.i = icmp eq i32 %356, 0
  br i1 %cmp20.not.i87.i.i, label %if.then43.i.i.for.end.i97.i.i_crit_edge, label %if.then43.i.i.for.body.i94.i.i_crit_edge

if.then43.i.i.for.body.i94.i.i_crit_edge:         ; preds = %if.then43.i.i
  br label %for.body.i94.i.i

if.then43.i.i.for.end.i97.i.i_crit_edge:          ; preds = %if.then43.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i97.i.i

for.cond.i90.i.i:                                 ; preds = %for.body.i94.i.i
  %inc.i88.i.i = add nuw i32 %i.021.i91.i.i, 1
  %exitcond.not.i89.i.i = icmp eq i32 %inc.i88.i.i, %356
  br i1 %exitcond.not.i89.i.i, label %for.cond.i90.i.i.for.end.i97.i.i_crit_edge, label %for.cond.i90.i.i.for.body.i94.i.i_crit_edge

for.cond.i90.i.i.for.body.i94.i.i_crit_edge:      ; preds = %for.cond.i90.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i94.i.i

for.cond.i90.i.i.for.end.i97.i.i_crit_edge:       ; preds = %for.cond.i90.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i97.i.i

for.body.i94.i.i:                                 ; preds = %for.cond.i90.i.i.for.body.i94.i.i_crit_edge, %if.then43.i.i.for.body.i94.i.i_crit_edge
  %i.021.i91.i.i = phi i32 [ %inc.i88.i.i, %for.cond.i90.i.i.for.body.i94.i.i_crit_edge ], [ 0, %if.then43.i.i.for.body.i94.i.i_crit_edge ]
  %arrayidx.i92.i.i = getelementptr %struct.evergreen_power_info, ptr %338, i32 0, i32 19, i32 3, i32 %i.021.i91.i.i
  %357 = ptrtoint ptr %arrayidx.i92.i.i to i32
  call void @__asan_load2_noabort(i32 %357)
  %358 = load i16, ptr %arrayidx.i92.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %358, i16 %sub50.i.i)
  %cmp2.not.i93.i.i = icmp ult i16 %358, %sub50.i.i
  br i1 %cmp2.not.i93.i.i, label %for.cond.i90.i.i, label %for.body.i94.i.i.btc_find_voltage.exit99.i.i_crit_edge

for.body.i94.i.i.btc_find_voltage.exit99.i.i_crit_edge: ; preds = %for.body.i94.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btc_find_voltage.exit99.i.i

for.end.i97.i.i:                                  ; preds = %for.cond.i90.i.i.for.end.i97.i.i_crit_edge, %if.then43.i.i.for.end.i97.i.i_crit_edge
  %sub.i95.i.i = add i32 %356, -1
  %arrayidx9.i96.i.i = getelementptr %struct.evergreen_power_info, ptr %338, i32 0, i32 19, i32 3, i32 %sub.i95.i.i
  %359 = ptrtoint ptr %arrayidx9.i96.i.i to i32
  call void @__asan_load2_noabort(i32 %359)
  %360 = load i16, ptr %arrayidx9.i96.i.i, align 4
  br label %btc_find_voltage.exit99.i.i

btc_find_voltage.exit99.i.i:                      ; preds = %for.end.i97.i.i, %for.body.i94.i.i.btc_find_voltage.exit99.i.i_crit_edge
  %retval.0.i98.i.i = phi i16 [ %360, %for.end.i97.i.i ], [ %358, %for.body.i94.i.i.btc_find_voltage.exit99.i.i_crit_edge ]
  %361 = tail call i16 @llvm.umin.i16(i16 %retval.0.i98.i.i, i16 %334) #14
  %362 = ptrtoint ptr %vddc661.i to i32
  call void @__asan_store2_noabort(i32 %362)
  store i16 %361, ptr %vddc661.i, align 2
  br label %btc_apply_voltage_delta_rules.exit.i

btc_apply_voltage_delta_rules.exit.i:             ; preds = %btc_find_voltage.exit99.i.i, %if.else.i1085.i.btc_apply_voltage_delta_rules.exit.i_crit_edge, %btc_find_voltage.exit.i.i, %if.then9.i.i.btc_apply_voltage_delta_rules.exit.i_crit_edge, %lor.lhs.false.i1077.i.btc_apply_voltage_delta_rules.exit.i_crit_edge, %for.body656.i.btc_apply_voltage_delta_rules.exit.i_crit_edge
  %inc666.i = add nuw nsw i32 %i.111152.i, 1
  %363 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %363)
  %364 = load i16, ptr %8, align 4
  %conv653.i = zext i16 %364 to i32
  %cmp654.i = icmp ult i32 %inc666.i, %conv653.i
  br i1 %cmp654.i, label %btc_apply_voltage_delta_rules.exit.i.for.body656.i_crit_edge, label %for.end667.i

btc_apply_voltage_delta_rules.exit.i.for.body656.i_crit_edge: ; preds = %btc_apply_voltage_delta_rules.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body656.i

for.end667.i:                                     ; preds = %btc_apply_voltage_delta_rules.exit.i
  %conv653.i.le = zext i16 %364 to i32
  %dc_compatible.i = getelementptr inbounds %struct.si_ps, ptr %8, i32 0, i32 1
  %365 = ptrtoint ptr %dc_compatible.i to i32
  call void @__asan_store1_noabort(i32 %365)
  store i8 1, ptr %dc_compatible.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %364)
  %cmp6711154.not.i = icmp eq i16 %364, 0
  br i1 %cmp6711154.not.i, label %for.end667.i.si_apply_state_adjust_rules.exit_crit_edge, label %for.body673.lr.ph.i

for.end667.i.si_apply_state_adjust_rules.exit_crit_edge: ; preds = %for.end667.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_apply_state_adjust_rules.exit

for.body673.lr.ph.i:                              ; preds = %for.end667.i
  %vddc682.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 21, i32 12, i32 2
  br label %for.body673.i

for.body673.i:                                    ; preds = %for.inc689.i.for.body673.i_crit_edge, %for.body673.lr.ph.i
  %i.121155.i = phi i32 [ 0, %for.body673.lr.ph.i ], [ %inc690.i, %for.inc689.i.for.body673.i_crit_edge ]
  %vddc676.i = getelementptr %struct.si_ps, ptr %8, i32 0, i32 2, i32 %i.121155.i, i32 2
  %366 = ptrtoint ptr %vddc676.i to i32
  call void @__asan_load2_noabort(i32 %366)
  %367 = load i16, ptr %vddc676.i, align 4
  %368 = ptrtoint ptr %vddc682.i to i32
  call void @__asan_load2_noabort(i32 %368)
  %369 = load i16, ptr %vddc682.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %367, i16 %369)
  %cmp684.i = icmp ugt i16 %367, %369
  br i1 %cmp684.i, label %if.then686.i, label %for.body673.i.for.inc689.i_crit_edge

for.body673.i.for.inc689.i_crit_edge:             ; preds = %for.body673.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc689.i

if.then686.i:                                     ; preds = %for.body673.i
  call void @__sanitizer_cov_trace_pc() #16
  %370 = ptrtoint ptr %dc_compatible.i to i32
  call void @__asan_store1_noabort(i32 %370)
  store i8 0, ptr %dc_compatible.i, align 2
  br label %for.inc689.i

for.inc689.i:                                     ; preds = %if.then686.i, %for.body673.i.for.inc689.i_crit_edge
  %inc690.i = add nuw nsw i32 %i.121155.i, 1
  %exitcond1179.not.i = icmp eq i32 %inc690.i, %conv653.i.le
  br i1 %exitcond1179.not.i, label %for.inc689.i.si_apply_state_adjust_rules.exit_crit_edge, label %for.inc689.i.for.body673.i_crit_edge

for.inc689.i.for.body673.i_crit_edge:             ; preds = %for.inc689.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body673.i

for.inc689.i.si_apply_state_adjust_rules.exit_crit_edge: ; preds = %for.inc689.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_apply_state_adjust_rules.exit

si_apply_state_adjust_rules.exit:                 ; preds = %for.inc689.i.si_apply_state_adjust_rules.exit_crit_edge, %for.end667.i.si_apply_state_adjust_rules.exit_crit_edge, %for.end667.thread.i
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_set_power_state(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %requested_rps = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27
  %current_rps = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25
  %ulv1.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %ulv1.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %ulv1.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.then.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then.i:                                        ; preds = %entry
  %call2.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 99) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call2.i)
  %cmp.i = icmp eq i8 %call2.i, 1
  br i1 %cmp.i, label %if.then.i.if.end_crit_edge, label %if.then.i.cleanup.sink.split_crit_edge

if.then.i.cleanup.sink.split_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.then.i.if.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %if.then.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 65) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i)
  %cmp.not.i = icmp eq i8 %call.i, 1
  br i1 %cmp.not.i, label %if.end.i, label %if.end.cleanup.sink.split_crit_edge

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end.i:                                         ; preds = %if.end
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 545, i32 noundef 1, i32 noundef 0) #14
  %call.i.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 130) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i.i)
  %cmp4.i = icmp eq i8 %call.i.i, 1
  br i1 %cmp4.i, label %if.end5, label %if.end.i.cleanup.sink.split_crit_edge

if.end.i.cleanup.sink.split_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end5:                                          ; preds = %if.end.i
  %pcie_performance_request = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %pcie_performance_request to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %pcie_performance_request, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool6.not = icmp eq i8 %5, 0
  br i1 %tobool6.not, label %if.end5.if.end8_crit_edge, label %if.then7

if.end5.if.end8_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then7:                                         ; preds = %if.end5
  %6 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i, align 4
  %ps_priv.i.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 9
  %8 = ptrtoint ptr %ps_priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ps_priv.i.i.i, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %9, align 4
  %conv.i.i = zext i16 %11 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %cmp1.not.i.i = icmp eq i16 %11, 0
  br i1 %cmp1.not.i.i, label %if.then7.si_get_maximum_link_speed.exit.i_crit_edge, label %if.then7.for.body.i.i_crit_edge

if.then7.for.body.i.i_crit_edge:                  ; preds = %if.then7
  br label %for.body.i.i

if.then7.si_get_maximum_link_speed.exit.i_crit_edge: ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_maximum_link_speed.exit.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.then7.for.body.i.i_crit_edge
  %max_speed.03.i.i = phi i16 [ %spec.select.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %if.then7.for.body.i.i_crit_edge ]
  %i.02.i.i = phi i32 [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %if.then7.for.body.i.i_crit_edge ]
  %pcie_gen.i.i = getelementptr %struct.si_ps, ptr %9, i32 0, i32 2, i32 %i.02.i.i, i32 5
  %12 = ptrtoint ptr %pcie_gen.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pcie_gen.i.i, align 4
  %conv3.i.i = zext i16 %max_speed.03.i.i to i32
  %conv4.i.i = and i32 %13, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv4.i.i, i32 %conv3.i.i)
  %cmp5.i.i = icmp ugt i32 %conv4.i.i, %conv3.i.i
  %conv2.i.i = trunc i32 %13 to i16
  %spec.select.i.i = select i1 %cmp5.i.i, i16 %conv2.i.i, i16 %max_speed.03.i.i
  %inc.i.i = add nuw nsw i32 %i.02.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv.i.i
  br i1 %exitcond.not.i.i, label %for.end.loopexit.i.i, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.end.loopexit.i.i:                             ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %phi.cast.i.i = zext i16 %spec.select.i.i to i32
  br label %si_get_maximum_link_speed.exit.i

si_get_maximum_link_speed.exit.i:                 ; preds = %for.end.loopexit.i.i, %if.then7.si_get_maximum_link_speed.exit.i_crit_edge
  %max_speed.0.lcssa.i.i = phi i32 [ 0, %if.then7.si_get_maximum_link_speed.exit.i_crit_edge ], [ %phi.cast.i.i, %for.end.loopexit.i.i ]
  %force_pcie_gen.i = getelementptr inbounds %struct.si_power_info, ptr %7, i32 0, i32 9
  %14 = ptrtoint ptr %force_pcie_gen.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %force_pcie_gen.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %15)
  %cmp.i154 = icmp eq i32 %15, 65535
  br i1 %cmp.i154, label %if.then.i155, label %si_get_maximum_link_speed.exit.i.if.end.i156_crit_edge

si_get_maximum_link_speed.exit.i.if.end.i156_crit_edge: ; preds = %si_get_maximum_link_speed.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i156

if.then.i155:                                     ; preds = %si_get_maximum_link_speed.exit.i
  %ps_priv.i.i26.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 9
  %16 = ptrtoint ptr %ps_priv.i.i26.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ps_priv.i.i26.i, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %17, align 4
  %conv.i27.i = zext i16 %19 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %cmp1.not.i28.i = icmp eq i16 %19, 0
  br i1 %cmp1.not.i28.i, label %if.then.i155.if.end.i156_crit_edge, label %if.then.i155.for.body.i39.i_crit_edge

if.then.i155.for.body.i39.i_crit_edge:            ; preds = %if.then.i155
  br label %for.body.i39.i

if.then.i155.if.end.i156_crit_edge:               ; preds = %if.then.i155
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i156

for.body.i39.i:                                   ; preds = %for.body.i39.i.for.body.i39.i_crit_edge, %if.then.i155.for.body.i39.i_crit_edge
  %max_speed.03.i29.i = phi i16 [ %spec.select.i36.i, %for.body.i39.i.for.body.i39.i_crit_edge ], [ 0, %if.then.i155.for.body.i39.i_crit_edge ]
  %i.02.i30.i = phi i32 [ %inc.i37.i, %for.body.i39.i.for.body.i39.i_crit_edge ], [ 0, %if.then.i155.for.body.i39.i_crit_edge ]
  %pcie_gen.i31.i = getelementptr %struct.si_ps, ptr %17, i32 0, i32 2, i32 %i.02.i30.i, i32 5
  %20 = ptrtoint ptr %pcie_gen.i31.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %pcie_gen.i31.i, align 4
  %conv3.i32.i = zext i16 %max_speed.03.i29.i to i32
  %conv4.i33.i = and i32 %21, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv4.i33.i, i32 %conv3.i32.i)
  %cmp5.i34.i = icmp ugt i32 %conv4.i33.i, %conv3.i32.i
  %conv2.i35.i = trunc i32 %21 to i16
  %spec.select.i36.i = select i1 %cmp5.i34.i, i16 %conv2.i35.i, i16 %max_speed.03.i29.i
  %inc.i37.i = add nuw nsw i32 %i.02.i30.i, 1
  %exitcond.not.i38.i = icmp eq i32 %inc.i37.i, %conv.i27.i
  br i1 %exitcond.not.i38.i, label %for.end.loopexit.i41.i, label %for.body.i39.i.for.body.i39.i_crit_edge

for.body.i39.i.for.body.i39.i_crit_edge:          ; preds = %for.body.i39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i

for.end.loopexit.i41.i:                           ; preds = %for.body.i39.i
  call void @__sanitizer_cov_trace_pc() #16
  %phi.cast.i40.i = zext i16 %spec.select.i36.i to i32
  br label %if.end.i156

if.end.i156:                                      ; preds = %for.end.loopexit.i41.i, %if.then.i155.if.end.i156_crit_edge, %si_get_maximum_link_speed.exit.i.if.end.i156_crit_edge
  %current_link_speed.0.i = phi i32 [ %15, %si_get_maximum_link_speed.exit.i.if.end.i156_crit_edge ], [ 0, %if.then.i155.if.end.i156_crit_edge ], [ %phi.cast.i40.i, %for.end.loopexit.i41.i ]
  %22 = ptrtoint ptr %force_pcie_gen.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 65535, ptr %force_pcie_gen.i, align 4
  %pspp_notify_required.i = getelementptr inbounds %struct.si_power_info, ptr %7, i32 0, i32 16
  %23 = ptrtoint ptr %pspp_notify_required.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 0, ptr %pspp_notify_required.i, align 1
  call void @__sanitizer_cov_trace_cmp4(i32 %max_speed.0.lcssa.i.i, i32 %current_link_speed.0.i)
  %cmp5.i = icmp ugt i32 %max_speed.0.lcssa.i.i, %current_link_speed.0.i
  br i1 %cmp5.i, label %sw.default.i, label %if.else9.i

sw.default.i:                                     ; preds = %if.end.i156
  call void @__sanitizer_cov_trace_pc() #16
  %pciep_rreg.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 41
  %24 = ptrtoint ptr %pciep_rreg.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pciep_rreg.i.i, align 8
  %call.i.i157 = tail call i32 %25(ptr noundef %handle, i32 noundef 164) #14
  %26 = lshr i32 %call.i.i157, 13
  %conv.i44.i = and i32 %26, 3
  %27 = ptrtoint ptr %force_pcie_gen.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %conv.i44.i, ptr %force_pcie_gen.i, align 4
  br label %if.end8

if.else9.i:                                       ; preds = %if.end.i156
  call void @__sanitizer_cov_trace_cmp4(i32 %max_speed.0.lcssa.i.i, i32 %current_link_speed.0.i)
  %cmp10.i = icmp ult i32 %max_speed.0.lcssa.i.i, %current_link_speed.0.i
  br i1 %cmp10.i, label %if.then12.i, label %if.else9.i.if.end8_crit_edge

if.else9.i.if.end8_crit_edge:                     ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then12.i:                                      ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #16
  %28 = ptrtoint ptr %pspp_notify_required.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 1, ptr %pspp_notify_required.i, align 1
  br label %if.end8

if.end8:                                          ; preds = %if.then12.i, %if.else9.i.if.end8_crit_edge, %sw.default.i, %if.end5.if.end8_crit_edge
  %ps_priv.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 9
  %29 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ps_priv.i.i, align 4
  %ps_priv.i28.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 9
  %31 = ptrtoint ptr %ps_priv.i28.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ps_priv.i28.i, align 4
  %vclk.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 3
  %33 = ptrtoint ptr %vclk.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %vclk.i, align 4
  %vclk2.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 3
  %35 = ptrtoint ptr %vclk2.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %vclk2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %36)
  %cmp.i158 = icmp eq i32 %34, %36
  br i1 %cmp.i158, label %land.lhs.true.i, label %if.end8.if.end.i160_crit_edge

if.end8.if.end.i160_crit_edge:                    ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i160

land.lhs.true.i:                                  ; preds = %if.end8
  %dclk.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 4
  %37 = ptrtoint ptr %dclk.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %dclk.i, align 4
  %dclk3.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 4
  %39 = ptrtoint ptr %dclk3.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %dclk3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %40)
  %cmp4.i159 = icmp eq i32 %38, %40
  br i1 %cmp4.i159, label %land.lhs.true.i.ni_set_uvd_clock_before_set_eng_clock.exit_crit_edge, label %land.lhs.true.i.if.end.i160_crit_edge

land.lhs.true.i.if.end.i160_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i160

land.lhs.true.i.ni_set_uvd_clock_before_set_eng_clock.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ni_set_uvd_clock_before_set_eng_clock.exit

if.end.i160:                                      ; preds = %land.lhs.true.i.if.end.i160_crit_edge, %if.end8.if.end.i160_crit_edge
  %41 = ptrtoint ptr %30 to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %30, align 4
  %conv.i = zext i16 %42 to i32
  %sub.i = add nsw i32 %conv.i, -1
  %arrayidx.i = getelementptr %struct.si_ps, ptr %30, i32 0, i32 2, i32 %sub.i
  %43 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx.i, align 4
  %45 = ptrtoint ptr %32 to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %32, align 4
  %conv7.i = zext i16 %46 to i32
  %sub8.i = add nsw i32 %conv7.i, -1
  %arrayidx9.i = getelementptr %struct.si_ps, ptr %32, i32 0, i32 2, i32 %sub8.i
  %47 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %48)
  %cmp11.not.i = icmp ult i32 %44, %48
  br i1 %cmp11.not.i, label %if.end14.i, label %if.end.i160.ni_set_uvd_clock_before_set_eng_clock.exit_crit_edge

if.end.i160.ni_set_uvd_clock_before_set_eng_clock.exit_crit_edge: ; preds = %if.end.i160
  call void @__sanitizer_cov_trace_pc() #16
  br label %ni_set_uvd_clock_before_set_eng_clock.exit

if.end14.i:                                       ; preds = %if.end.i160
  call void @__sanitizer_cov_trace_pc() #16
  %asic_funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 12
  %49 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %asic_funcs.i, align 4
  %set_uvd_clocks.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %50, i32 0, i32 7
  %51 = ptrtoint ptr %set_uvd_clocks.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %set_uvd_clocks.i, align 4
  %dclk16.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 4
  %53 = ptrtoint ptr %dclk16.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %dclk16.i, align 4
  %call17.i = tail call i32 %52(ptr noundef %handle, i32 noundef %34, i32 noundef %54) #14
  br label %ni_set_uvd_clock_before_set_eng_clock.exit

ni_set_uvd_clock_before_set_eng_clock.exit:       ; preds = %if.end14.i, %if.end.i160.ni_set_uvd_clock_before_set_eng_clock.exit_crit_edge, %land.lhs.true.i.ni_set_uvd_clock_before_set_eng_clock.exit_crit_edge
  %55 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %priv.i, align 4
  %enable_power_containment.i = getelementptr inbounds %struct.ni_power_info, ptr %56, i32 0, i32 10
  %57 = ptrtoint ptr %enable_power_containment.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %enable_power_containment.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool.not.i162 = icmp eq i8 %58, 0
  br i1 %tobool.not.i162, label %ni_set_uvd_clock_before_set_eng_clock.exit.if.end12_crit_edge, label %if.then.i163

ni_set_uvd_clock_before_set_eng_clock.exit.if.end12_crit_edge: ; preds = %ni_set_uvd_clock_before_set_eng_clock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then.i163:                                     ; preds = %ni_set_uvd_clock_before_set_eng_clock.exit
  %call11.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 90) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call11.i)
  %cmp13.not.i = icmp eq i8 %call11.i, 1
  %pc_enabled17.i = getelementptr inbounds %struct.ni_power_info, ptr %56, i32 0, i32 9
  %59 = ptrtoint ptr %pc_enabled17.i to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 0, ptr %pc_enabled17.i, align 1
  br i1 %cmp13.not.i, label %if.then.i163.if.end12_crit_edge, label %if.then.i163.cleanup.sink.split_crit_edge

if.then.i163.cleanup.sink.split_crit_edge:        ; preds = %if.then.i163
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.then.i163.if.end12_crit_edge:                  ; preds = %if.then.i163
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.end12:                                         ; preds = %if.then.i163.if.end12_crit_edge, %ni_set_uvd_clock_before_set_eng_clock.exit.if.end12_crit_edge
  %60 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %priv.i, align 4
  %enable_cac.i = getelementptr inbounds %struct.ni_power_info, ptr %61, i32 0, i32 11
  %62 = ptrtoint ptr %enable_cac.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %enable_cac.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool.not.i165 = icmp eq i8 %63, 0
  br i1 %tobool.not.i165, label %if.end12.if.end16_crit_edge, label %if.then.i166

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then.i166:                                     ; preds = %if.end12
  %cac_enabled31.i = getelementptr inbounds %struct.ni_power_info, ptr %61, i32 0, i32 6
  %64 = ptrtoint ptr %cac_enabled31.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %cac_enabled31.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool32.not.i = icmp eq i8 %65, 0
  br i1 %tobool32.not.i, label %if.then.i166.if.end16_crit_edge, label %if.then33.i

if.then.i166.if.end16_crit_edge:                  ; preds = %if.then.i166
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then33.i:                                      ; preds = %if.then.i166
  %enable_dte34.i = getelementptr inbounds %struct.si_power_info, ptr %61, i32 0, i32 13
  %66 = ptrtoint ptr %enable_dte34.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %enable_dte34.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool35.not.i = icmp eq i8 %67, 0
  br i1 %tobool35.not.i, label %if.then33.i.if.end38.i_crit_edge, label %if.then36.i

if.then33.i.if.end38.i_crit_edge:                 ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38.i

if.then36.i:                                      ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #16
  %call37.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 136) #14
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.then36.i, %if.then33.i.if.end38.i_crit_edge
  %call39.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 84) #14
  %68 = ptrtoint ptr %cac_enabled31.i to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 0, ptr %cac_enabled31.i, align 2
  %support_cac_long_term_average41.i = getelementptr inbounds %struct.ni_power_info, ptr %61, i32 0, i32 5
  %69 = ptrtoint ptr %support_cac_long_term_average41.i to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %support_cac_long_term_average41.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool42.not.i = icmp eq i8 %70, 0
  br i1 %tobool42.not.i, label %if.end38.i.if.end16_crit_edge, label %if.then43.i

if.end38.i.if.end16_crit_edge:                    ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then43.i:                                      ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #16
  %call44.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 111) #14
  br label %if.end16

if.end16:                                         ; preds = %if.then43.i, %if.end38.i.if.end16_crit_edge, %if.then.i166.if.end16_crit_edge, %if.end12.if.end16_crit_edge
  %call17 = tail call fastcc i32 @si_halt_smc(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end20, label %if.end16.cleanup.sink.split_crit_edge

if.end16.cleanup.sink.split_crit_edge:            ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end20:                                         ; preds = %if.end16
  %call21 = tail call fastcc i32 @si_upload_sw_state(ptr noundef %handle, ptr noundef %requested_rps)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end20.cleanup.sink.split_crit_edge

if.end20.cleanup.sink.split_crit_edge:            ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end24:                                         ; preds = %if.end20
  tail call fastcc void @si_upload_smc_data(ptr noundef %handle)
  %call29 = tail call fastcc i32 @si_upload_ulv_state(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end32, label %if.end24.cleanup.sink.split_crit_edge

if.end24.cleanup.sink.split_crit_edge:            ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end32:                                         ; preds = %if.end24
  %dynamic_ac_timing = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 2
  %71 = ptrtoint ptr %dynamic_ac_timing to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %dynamic_ac_timing, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %72)
  %tobool33.not = icmp eq i8 %72, 0
  br i1 %tobool33.not, label %if.end32.if.end39_crit_edge, label %if.then34

if.end32.if.end39_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end39

if.then34:                                        ; preds = %if.end32
  %call35 = tail call fastcc i32 @si_upload_mc_reg_table(ptr noundef %handle, ptr noundef %requested_rps)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %if.then34.if.end39_crit_edge, label %if.then34.cleanup.sink.split_crit_edge

if.then34.cleanup.sink.split_crit_edge:           ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.then34.if.end39_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end39

if.end39:                                         ; preds = %if.then34.if.end39_crit_edge, %if.end32.if.end39_crit_edge
  %call.i168 = tail call fastcc i32 @si_do_program_memory_timing_parameters(ptr noundef %handle, ptr noundef %requested_rps, i32 noundef 3) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i168)
  %tobool41.not = icmp eq i32 %call.i168, 0
  br i1 %tobool41.not, label %if.end43, label %if.end39.cleanup.sink.split_crit_edge

if.end39.cleanup.sink.split_crit_edge:            ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end43:                                         ; preds = %if.end39
  tail call fastcc void @si_set_pcie_lane_width_in_smc(ptr noundef %handle, ptr noundef %requested_rps, ptr noundef %current_rps)
  %call44 = tail call fastcc i32 @si_resume_smc(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %if.end47, label %if.end43.cleanup.sink.split_crit_edge

if.end43.cleanup.sink.split_crit_edge:            ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end47:                                         ; preds = %if.end43
  %call.i169 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 32) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i169)
  %cmp.i170 = icmp eq i8 %call.i169, 1
  br i1 %cmp.i170, label %if.end51, label %if.end47.cleanup.sink.split_crit_edge

if.end47.cleanup.sink.split_crit_edge:            ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end51:                                         ; preds = %if.end47
  tail call fastcc void @ni_set_uvd_clock_after_set_eng_clock(ptr noundef %handle, ptr noundef %requested_rps, ptr noundef %current_rps)
  %73 = ptrtoint ptr %pcie_performance_request to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %pcie_performance_request, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %tobool53.not = icmp eq i8 %74, 0
  br i1 %tobool53.not, label %if.end51.if.end55_crit_edge, label %if.then54

if.end51.if.end55_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end55

if.then54:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @si_notify_link_speed_change_after_state_change(ptr noundef %handle, ptr noundef %requested_rps)
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %if.end51.if.end55_crit_edge
  %call56 = tail call fastcc i32 @si_set_power_state_conditionally_enable_ulv(ptr noundef %handle, ptr noundef %requested_rps)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %if.end59, label %if.end55.cleanup.sink.split_crit_edge

if.end55.cleanup.sink.split_crit_edge:            ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end59:                                         ; preds = %if.end55
  %call60 = tail call fastcc i32 @si_enable_smc_cac(ptr noundef %handle, ptr noundef %requested_rps, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %if.end63, label %if.end59.cleanup.sink.split_crit_edge

if.end59.cleanup.sink.split_crit_edge:            ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end63:                                         ; preds = %if.end59
  %call64 = tail call fastcc i32 @si_enable_power_containment(ptr noundef %handle, ptr noundef %requested_rps, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %if.end67, label %if.end63.cleanup.sink.split_crit_edge

if.end63.cleanup.sink.split_crit_edge:            ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end67:                                         ; preds = %if.end63
  %call68 = tail call fastcc i32 @si_power_control_set_level(ptr noundef %handle)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end67.cleanup_crit_edge, label %if.end67.cleanup.sink.split_crit_edge

if.end67.cleanup.sink.split_crit_edge:            ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end67.cleanup_crit_edge:                       ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.end67.cleanup.sink.split_crit_edge, %if.end63.cleanup.sink.split_crit_edge, %if.end59.cleanup.sink.split_crit_edge, %if.end55.cleanup.sink.split_crit_edge, %if.end47.cleanup.sink.split_crit_edge, %if.end43.cleanup.sink.split_crit_edge, %if.end39.cleanup.sink.split_crit_edge, %if.then34.cleanup.sink.split_crit_edge, %if.end24.cleanup.sink.split_crit_edge, %if.end20.cleanup.sink.split_crit_edge, %if.end16.cleanup.sink.split_crit_edge, %if.then.i163.cleanup.sink.split_crit_edge, %if.end.i.cleanup.sink.split_crit_edge, %if.end.cleanup.sink.split_crit_edge, %if.then.i.cleanup.sink.split_crit_edge
  %.str.14.sink = phi ptr [ @.str.1, %if.then.i.cleanup.sink.split_crit_edge ], [ @.str.2, %if.end.i.cleanup.sink.split_crit_edge ], [ @.str.2, %if.end.cleanup.sink.split_crit_edge ], [ @.str.3, %if.then.i163.cleanup.sink.split_crit_edge ], [ @.str.5, %if.end16.cleanup.sink.split_crit_edge ], [ @.str.6, %if.end20.cleanup.sink.split_crit_edge ], [ @.str.8, %if.end24.cleanup.sink.split_crit_edge ], [ @.str.9, %if.then34.cleanup.sink.split_crit_edge ], [ @.str.10, %if.end39.cleanup.sink.split_crit_edge ], [ @.str.11, %if.end43.cleanup.sink.split_crit_edge ], [ @.str.12, %if.end47.cleanup.sink.split_crit_edge ], [ @.str.13, %if.end55.cleanup.sink.split_crit_edge ], [ @.str.4, %if.end59.cleanup.sink.split_crit_edge ], [ @.str.3, %if.end63.cleanup.sink.split_crit_edge ], [ @.str.14, %if.end67.cleanup.sink.split_crit_edge ]
  %retval.0.ph = phi i32 [ -22, %if.then.i.cleanup.sink.split_crit_edge ], [ -22, %if.end.i.cleanup.sink.split_crit_edge ], [ -22, %if.end.cleanup.sink.split_crit_edge ], [ -22, %if.then.i163.cleanup.sink.split_crit_edge ], [ %call17, %if.end16.cleanup.sink.split_crit_edge ], [ %call21, %if.end20.cleanup.sink.split_crit_edge ], [ %call29, %if.end24.cleanup.sink.split_crit_edge ], [ %call35, %if.then34.cleanup.sink.split_crit_edge ], [ %call.i168, %if.end39.cleanup.sink.split_crit_edge ], [ %call44, %if.end43.cleanup.sink.split_crit_edge ], [ -22, %if.end47.cleanup.sink.split_crit_edge ], [ %call56, %if.end55.cleanup.sink.split_crit_edge ], [ %call60, %if.end59.cleanup.sink.split_crit_edge ], [ %call64, %if.end63.cleanup.sink.split_crit_edge ], [ %call68, %if.end67.cleanup.sink.split_crit_edge ]
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull %.str.14.sink) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end67.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end67.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @si_dpm_post_set_power_state(ptr nocapture noundef %handle) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %requested_rps = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27
  %ps_priv.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 9
  %2 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i.i, align 4
  %current_rps.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25
  %4 = call ptr @memcpy(ptr %current_rps.i, ptr %requested_rps, i32 40)
  %current_ps.i = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 22
  %5 = call ptr @memcpy(ptr %current_ps.i, ptr %3, i32 324)
  %ps_priv.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 9
  %6 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %current_ps.i, ptr %ps_priv.i, align 4
  %current_ps6.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 2
  %7 = ptrtoint ptr %current_ps6.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %current_rps.i, ptr %current_ps6.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @si_dpm_display_configuration_changed(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 522, i32 noundef 0) #14
  %and.i = and i32 %call.i, -16
  %new_active_crtc_count.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 18
  %0 = ptrtoint ptr %new_active_crtc_count.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %new_active_crtc_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i = icmp sgt i32 %1, 0
  %or1.i = or i32 %and.i, 3
  %tmp.0.i = select i1 %cmp.i, i32 %and.i, i32 %or1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp5.i = icmp sgt i32 %1, 1
  %or9.i = or i32 %tmp.0.i, 12
  %tmp.1.i = select i1 %cmp5.i, i32 %tmp.0.i, i32 %or9.i
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 522, i32 noundef %tmp.1.i, i32 noundef 0) #14
  %call11.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 319, i32 noundef 0) #14
  %2 = ptrtoint ptr %new_active_crtc_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %new_active_crtc_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp16.i = icmp sgt i32 %3, 0
  br i1 %cmp16.i, label %land.lhs.true.i, label %entry.si_program_display_gap.exit_crit_edge

entry.si_program_display_gap.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_program_display_gap.exit

land.lhs.true.i:                                  ; preds = %entry
  %and12.i = and i32 %call11.i, 7
  %new_active_crtcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 17
  %4 = ptrtoint ptr %new_active_crtcs.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %new_active_crtcs.i, align 4
  %shl.i = shl nuw nsw i32 1, %and12.i
  %and19.i = and i32 %5, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i)
  %tobool.not.i = icmp eq i32 %and19.i, 0
  br i1 %tobool.not.i, label %for.cond.preheader.i, label %land.lhs.true.i.si_program_display_gap.exit_crit_edge

land.lhs.true.i.si_program_display_gap.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_program_display_gap.exit

for.cond.preheader.i:                             ; preds = %land.lhs.true.i
  %num_crtc.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 79, i32 20
  %6 = ptrtoint ptr %num_crtc.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_crtc.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp2170.i = icmp sgt i32 %7, 0
  br i1 %cmp2170.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.for.end.i_crit_edge

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.071.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %shl25.i = shl nuw i32 1, %i.071.i
  %and26.i = and i32 %shl25.i, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i)
  %tobool27.not.i = icmp eq i32 %and26.i, 0
  br i1 %tobool27.not.i, label %for.inc.i, label %for.body.i.for.end.i_crit_edge

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.071.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %7
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %i.0.lcssa.i = phi i32 [ 0, %for.cond.preheader.i.for.end.i_crit_edge ], [ %7, %for.inc.i.for.end.i_crit_edge ], [ %i.071.i, %for.body.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa.i, i32 %7)
  %cmp32.i = icmp eq i32 %i.0.lcssa.i, %7
  %.i.0.i = select i1 %cmp32.i, i32 0, i32 %i.0.lcssa.i
  %and36.i = and i32 %call11.i, -8
  %or38.i = or i32 %.i.0.i, %and36.i
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 319, i32 noundef %or38.i, i32 noundef 0) #14
  br label %si_program_display_gap.exit

si_program_display_gap.exit:                      ; preds = %for.end.i, %land.lhs.true.i.si_program_display_gap.exit_crit_edge, %entry.si_program_display_gap.exit_crit_edge
  %8 = ptrtoint ptr %new_active_crtc_count.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %new_active_crtc_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp43.i = icmp sgt i32 %9, 0
  %conv.i.i = select i1 %cmp43.i, i16 94, i16 93
  %call.i.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext %conv.i.i) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @si_dpm_print_power_state(ptr noundef %handle, ptr noundef %current_ps) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 9
  %0 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ps_priv.i, align 4
  %class = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 1
  %2 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %class, align 4
  %class2 = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 2
  %4 = ptrtoint ptr %class2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %class2, align 4
  tail call void @amdgpu_dpm_print_class_info(i32 noundef %3, i32 noundef %5) #14
  %6 = ptrtoint ptr %current_ps to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %current_ps, align 4
  tail call void @amdgpu_dpm_print_cap_info(i32 noundef %7) #14
  %vclk = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 3
  %8 = ptrtoint ptr %vclk to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vclk, align 4
  %dclk = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 4
  %10 = ptrtoint ptr %dclk to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dclk, align 4
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, i32 noundef %9, i32 noundef %11) #19
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %cmp44.not = icmp eq i16 %13, 0
  br i1 %cmp44.not, label %entry.for.end_crit_edge, label %entry.do.end7_crit_edge

entry.do.end7_crit_edge:                          ; preds = %entry
  br label %do.end7

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

do.end7:                                          ; preds = %do.end7.do.end7_crit_edge, %entry.do.end7_crit_edge
  %i.045 = phi i32 [ %inc, %do.end7.do.end7_crit_edge ], [ 0, %entry.do.end7_crit_edge ]
  %arrayidx = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.045
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %mclk = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.045, i32 1
  %16 = ptrtoint ptr %mclk to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mclk, align 4
  %vddc = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.045, i32 2
  %18 = ptrtoint ptr %vddc to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vddc, align 4
  %conv9 = zext i16 %19 to i32
  %vddci = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.045, i32 3
  %20 = ptrtoint ptr %vddci to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vddci, align 2
  %conv10 = zext i16 %21 to i32
  %pcie_gen = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.045, i32 5
  %22 = ptrtoint ptr %pcie_gen to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pcie_gen, align 4
  %add = add i32 %23, 1
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, i32 noundef %i.045, i32 noundef %15, i32 noundef %17, i32 noundef %conv9, i32 noundef %conv10, i32 noundef %add) #19
  %inc = add nuw nsw i32 %i.045, 1
  %24 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %1, align 4
  %conv = zext i16 %25 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %do.end7.do.end7_crit_edge, label %do.end7.for.end_crit_edge

do.end7.for.end_crit_edge:                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

do.end7.do.end7_crit_edge:                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7

for.end:                                          ; preds = %do.end7.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @amdgpu_dpm_print_ps_status(ptr noundef %handle, ptr noundef %current_ps) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @si_dpm_vblank_too_short(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @amdgpu_dpm_get_vblank_time(ptr noundef %handle) #14
  %vram_type = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 62, i32 21
  %0 = ptrtoint ptr %vram_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vram_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %1)
  %cmp = icmp eq i32 %1, 5
  %cond = select i1 %cmp, i32 450, i32 0
  call void @__sanitizer_cov_trace_cmp4(i32 %call, i32 %cond)
  %cmp1 = icmp ult i32 %call, %cond
  ret i1 %cmp1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_check_state_equal(ptr noundef readnone %handle, ptr noundef readonly %current_ps, ptr noundef readonly %request_ps, ptr noundef %equal) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %handle, null
  %cmp1 = icmp eq ptr %current_ps, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq ptr %request_ps, null
  %or.cond70 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq ptr %equal, null
  %or.cond71 = or i1 %or.cond70, %cmp5
  br i1 %or.cond71, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 9
  %0 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ps_priv.i, align 4
  %ps_priv.i72 = getelementptr inbounds %struct.amdgpu_ps, ptr %request_ps, i32 0, i32 9
  %2 = ptrtoint ptr %ps_priv.i72 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i72, align 4
  %cmp7 = icmp eq ptr %1, null
  br i1 %cmp7, label %do.end, label %if.end10

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.24) #19
  br label %cleanup.sink.split

if.end10:                                         ; preds = %if.end
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %1, align 4
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %3, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %7)
  %cmp13.not = icmp eq i16 %5, %7
  br i1 %cmp13.not, label %for.cond.preheader, label %if.end10.cleanup.sink.split_crit_edge

if.end10.cleanup.sink.split_crit_edge:            ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

for.cond.preheader:                               ; preds = %if.end10
  %conv18 = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %cmp1973.not = icmp eq i16 %5, 0
  br i1 %cmp1973.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond:                                         ; preds = %si_are_power_levels_equal.exit
  %inc = add nuw nsw i32 %i.074, 1
  %exitcond.not = icmp eq i32 %inc, %conv18
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.074 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %mclk.i = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.074, i32 1
  %8 = ptrtoint ptr %mclk.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mclk.i, align 4
  %mclk1.i = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.074, i32 1
  %10 = ptrtoint ptr %mclk1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mclk1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp.i = icmp eq i32 %9, %11
  br i1 %cmp.i, label %land.lhs.true.i, label %for.body.cleanup.sink.split_crit_edge

for.body.cleanup.sink.split_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

land.lhs.true.i:                                  ; preds = %for.body
  %arrayidx22 = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.074
  %arrayidx = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.074
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %14 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx22, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp3.i = icmp eq i32 %13, %15
  br i1 %cmp3.i, label %land.lhs.true4.i, label %land.lhs.true.i.cleanup.sink.split_crit_edge

land.lhs.true.i.cleanup.sink.split_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %pcie_gen.i = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.074, i32 5
  %16 = ptrtoint ptr %pcie_gen.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pcie_gen.i, align 4
  %pcie_gen5.i = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.074, i32 5
  %18 = ptrtoint ptr %pcie_gen5.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pcie_gen5.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp6.i = icmp eq i32 %17, %19
  br i1 %cmp6.i, label %land.lhs.true7.i, label %land.lhs.true4.i.cleanup.sink.split_crit_edge

land.lhs.true4.i.cleanup.sink.split_crit_edge:    ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

land.lhs.true7.i:                                 ; preds = %land.lhs.true4.i
  %vddc.i = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.074, i32 2
  %20 = ptrtoint ptr %vddc.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vddc.i, align 4
  %vddc8.i = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.074, i32 2
  %22 = ptrtoint ptr %vddc8.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vddc8.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %21, i16 %23)
  %cmp10.i = icmp eq i16 %21, %23
  br i1 %cmp10.i, label %si_are_power_levels_equal.exit, label %land.lhs.true7.i.cleanup.sink.split_crit_edge

land.lhs.true7.i.cleanup.sink.split_crit_edge:    ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

si_are_power_levels_equal.exit:                   ; preds = %land.lhs.true7.i
  %vddci.i = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %i.074, i32 3
  %24 = ptrtoint ptr %vddci.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vddci.i, align 2
  %vddci13.i = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.074, i32 3
  %26 = ptrtoint ptr %vddci13.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %vddci13.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %25, i16 %27)
  %cmp15.i = icmp eq i16 %25, %27
  br i1 %cmp15.i, label %for.cond, label %si_are_power_levels_equal.exit.cleanup.sink.split_crit_edge

si_are_power_levels_equal.exit.cleanup.sink.split_crit_edge: ; preds = %si_are_power_levels_equal.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %vclk = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 3
  %28 = ptrtoint ptr %vclk to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %vclk, align 4
  %vclk26 = getelementptr inbounds %struct.amdgpu_ps, ptr %request_ps, i32 0, i32 3
  %30 = ptrtoint ptr %vclk26 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vclk26, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %31)
  %cmp27 = icmp eq i32 %29, %31
  br i1 %cmp27, label %land.rhs, label %for.end.land.end_crit_edge

for.end.land.end_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.end

land.rhs:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %dclk = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 4
  %32 = ptrtoint ptr %dclk to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %dclk, align 4
  %dclk29 = getelementptr inbounds %struct.amdgpu_ps, ptr %request_ps, i32 0, i32 4
  %34 = ptrtoint ptr %dclk29 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %dclk29, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %35)
  %cmp30 = icmp eq i32 %33, %35
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end.land.end_crit_edge
  %36 = phi i1 [ false, %for.end.land.end_crit_edge ], [ %cmp30, %land.rhs ]
  %frombool = zext i1 %36 to i8
  %37 = ptrtoint ptr %equal to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %frombool, ptr %equal, align 1
  %evclk = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 5
  %38 = ptrtoint ptr %evclk to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %evclk, align 4
  %evclk32 = getelementptr inbounds %struct.amdgpu_ps, ptr %request_ps, i32 0, i32 5
  %40 = ptrtoint ptr %evclk32 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %evclk32, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %39, i32 %41)
  %cmp33 = icmp eq i32 %39, %41
  br i1 %cmp33, label %land.rhs35, label %land.end.land.end39_crit_edge

land.end.land.end39_crit_edge:                    ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.end39

land.rhs35:                                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #16
  %ecclk = getelementptr inbounds %struct.amdgpu_ps, ptr %current_ps, i32 0, i32 6
  %42 = ptrtoint ptr %ecclk to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %ecclk, align 4
  %ecclk36 = getelementptr inbounds %struct.amdgpu_ps, ptr %request_ps, i32 0, i32 6
  %44 = ptrtoint ptr %ecclk36 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %ecclk36, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %45)
  %cmp37 = icmp eq i32 %43, %45
  %phi.cast = zext i1 %cmp37 to i8
  br label %land.end39

land.end39:                                       ; preds = %land.rhs35, %land.end.land.end39_crit_edge
  %46 = phi i8 [ 0, %land.end.land.end39_crit_edge ], [ %phi.cast, %land.rhs35 ]
  %and = and i8 %46, %frombool
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %land.end39, %si_are_power_levels_equal.exit.cleanup.sink.split_crit_edge, %land.lhs.true7.i.cleanup.sink.split_crit_edge, %land.lhs.true4.i.cleanup.sink.split_crit_edge, %land.lhs.true.i.cleanup.sink.split_crit_edge, %for.body.cleanup.sink.split_crit_edge, %if.end10.cleanup.sink.split_crit_edge, %do.end
  %and.sink = phi i8 [ %and, %land.end39 ], [ 0, %do.end ], [ 0, %if.end10.cleanup.sink.split_crit_edge ], [ 0, %for.body.cleanup.sink.split_crit_edge ], [ 0, %land.lhs.true.i.cleanup.sink.split_crit_edge ], [ 0, %land.lhs.true4.i.cleanup.sink.split_crit_edge ], [ 0, %land.lhs.true7.i.cleanup.sink.split_crit_edge ], [ 0, %si_are_power_levels_equal.exit.cleanup.sink.split_crit_edge ]
  %47 = ptrtoint ptr %equal to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %and.sink, ptr %equal, align 1
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @si_dpm_set_fan_control_mode(ptr noundef %handle, i32 noundef %mode) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mode)
  %tobool.not = icmp eq i32 %mode, 0
  %ucode_fan_control6 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 22, i32 13
  %0 = ptrtoint ptr %ucode_fan_control6 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ucode_fan_control6, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool7.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  br i1 %tobool7.not, label %if.then.if.end_crit_edge, label %if.then2

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then2:                                         ; preds = %if.then
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %2 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i.i, align 4
  %call1.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 92) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call1.i)
  %cmp.i = icmp eq i8 %call1.i, 1
  br i1 %cmp.i, label %if.then.i, label %if.then2.if.end_crit_edge

if.then2.if.end_crit_edge:                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then.i:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  %fan_is_controlled_by_smc.i = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 44
  %4 = ptrtoint ptr %fan_is_controlled_by_smc.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %fan_is_controlled_by_smc.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then2.if.end_crit_edge, %if.then.if.end_crit_edge
  tail call fastcc void @si_fan_ctrl_set_static_mode(ptr noundef %handle, i32 noundef %mode)
  br label %if.end11

if.else:                                          ; preds = %entry
  %priv.i.i19 = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %5 = ptrtoint ptr %priv.i.i19 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %priv.i.i19, align 4
  br i1 %tobool7.not, label %if.else9, label %if.then.i18

if.then.i18:                                      ; preds = %if.else
  %call1.i.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 91) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call1.i.i)
  %cmp.i.i = icmp eq i8 %call1.i.i, 1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then.i18.si_thermal_start_smc_fan_control.exit_crit_edge

if.then.i18.si_thermal_start_smc_fan_control.exit_crit_edge: ; preds = %if.then.i18
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_thermal_start_smc_fan_control.exit

if.then.i.i:                                      ; preds = %if.then.i18
  call void @__sanitizer_cov_trace_pc() #16
  %fan_is_controlled_by_smc.i.i = getelementptr inbounds %struct.si_power_info, ptr %6, i32 0, i32 44
  %7 = ptrtoint ptr %fan_is_controlled_by_smc.i.i to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 1, ptr %fan_is_controlled_by_smc.i.i, align 4
  br label %si_thermal_start_smc_fan_control.exit

si_thermal_start_smc_fan_control.exit:            ; preds = %if.then.i.i, %if.then.i18.si_thermal_start_smc_fan_control.exit_crit_edge
  tail call fastcc void @si_fan_ctrl_set_static_mode(ptr noundef %handle, i32 noundef 1) #14
  br label %if.end11

if.else9:                                         ; preds = %if.else
  %fan_ctrl_is_in_default_mode.i = getelementptr inbounds %struct.si_power_info, ptr %6, i32 0, i32 41
  %8 = ptrtoint ptr %fan_ctrl_is_in_default_mode.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %fan_ctrl_is_in_default_mode.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i20 = icmp eq i8 %9, 0
  br i1 %tobool.not.i20, label %if.then.i22, label %if.else9.if.end11_crit_edge

if.else9.if.end11_crit_edge:                      ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then.i22:                                      ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i21 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 471, i32 noundef 0) #14
  %and.i = and i32 %call1.i21, -14337
  %fan_ctrl_default_mode.i = getelementptr inbounds %struct.si_power_info, ptr %6, i32 0, i32 43
  %10 = ptrtoint ptr %fan_ctrl_default_mode.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %fan_ctrl_default_mode.i, align 4
  %shl.i = shl i32 %11, 11
  %or.i = or i32 %shl.i, %and.i
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 471, i32 noundef %or.i, i32 noundef 0) #14
  %call2.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 471, i32 noundef 0) #14
  %and3.i = and i32 %call2.i, -256
  %t_min.i = getelementptr inbounds %struct.si_power_info, ptr %6, i32 0, i32 42
  %12 = ptrtoint ptr %t_min.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %t_min.i, align 4
  %or5.i = or i32 %and3.i, %13
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 471, i32 noundef %or5.i, i32 noundef 0) #14
  %14 = ptrtoint ptr %fan_ctrl_is_in_default_mode.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %fan_ctrl_is_in_default_mode.i, align 2
  br label %if.end11

if.end11:                                         ; preds = %if.then.i22, %if.else9.if.end11_crit_edge, %si_thermal_start_smc_fan_control.exit, %if.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_get_fan_control_mode(ptr noundef %handle) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %fan_is_controlled_by_smc = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 44
  %2 = ptrtoint ptr %fan_is_controlled_by_smc to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %fan_is_controlled_by_smc, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 471, i32 noundef 0) #14
  %and = lshr i32 %call1, 11
  %shr = and i32 %and, 7
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %shr, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_set_fan_speed_pwm(ptr noundef %handle, i32 noundef %speed) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %no_fan = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 9
  %0 = ptrtoint ptr %no_fan to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %no_fan, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 4
  %fan_is_controlled_by_smc = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 44
  %4 = ptrtoint ptr %fan_is_controlled_by_smc to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %fan_is_controlled_by_smc, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not = icmp ne i8 %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %speed)
  %cmp = icmp ugt i32 %speed, 255
  %or.cond = or i1 %cmp, %tobool1.not
  br i1 %or.cond, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 470, i32 noundef 0) #14
  %and = and i32 %call6, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp7 = icmp eq i32 %and, 0
  br i1 %cmp7, label %if.end5.cleanup_crit_edge, label %if.end199

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end199:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i32 %speed to i64
  %conv10 = zext i32 %and to i64
  %mul = mul nuw nsw i64 %conv10, %conv
  %6 = tail call i64 asm "umlal\09${0:Q}, ${0:R}, ${1:Q}, ${2:Q}\0A\09mov\09${0:Q}, #0", "=&r,r,r,0,~{cc}"(i64 72340172838076673, i64 %mul, i64 72340172838076673) #20, !srcloc !273
  %7 = tail call i64 asm "umlal\09${0:R}, ${0:Q}, ${1:R}, ${2:Q}\0A\09umlal\09${0:R}, ${0:Q}, ${1:Q}, ${2:R}\0A\09mov\09${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${1:R}, ${2:R}", "=&r,r,r,0,~{cc}"(i64 72340172838076673, i64 %mul, i64 %6) #20, !srcloc !274
  %extract.t297 = trunc i64 %7 to i32
  %call202 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 469, i32 noundef 0) #14
  %and203 = and i32 %call202, -256
  %or205 = or i32 %and203, %extract.t297
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 469, i32 noundef %or205, i32 noundef 0) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end199, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end199 ], [ -2, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end5.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_get_fan_speed_pwm(ptr noundef %handle, ptr nocapture noundef writeonly %speed) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %no_fan = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 9
  %0 = ptrtoint ptr %no_fan to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %no_fan, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 470, i32 noundef 0) #14
  %and = and i32 %call, 255
  %call1 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 449, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end193

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end193:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %and2 = lshr i32 %call1, 9
  %2 = trunc i32 %and2 to i16
  %3 = and i16 %2, 255
  %div187.lhs.trunc = mul nuw i16 %3, 255
  %div187.rhs.trunc = trunc i32 %and to i16
  %div187314 = udiv i16 %div187.lhs.trunc, %div187.rhs.trunc
  %4 = call i16 @llvm.umin.i16(i16 %div187314, i16 255)
  %5 = zext i16 %4 to i32
  %6 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %speed, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end193, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end193 ], [ -2, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_force_performance_level(ptr noundef %handle, i32 noundef %level) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %current_ps = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 2
  %0 = ptrtoint ptr %current_ps to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %current_ps, align 4
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 4
  %conv = zext i16 %5 to i32
  %6 = zext i32 %level to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.100)
  switch i32 %level, label %entry.if.end46_crit_edge [
    i32 8, label %if.then
    i32 4, label %if.then15
    i32 1, label %if.then31
  ]

entry.if.end46_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.then:                                          ; preds = %entry
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 545, i32 noundef %conv, i32 noundef 0) #14
  %call.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 130) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i)
  %cmp4.not = icmp eq i8 %call.i, 1
  br i1 %cmp4.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %if.then
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 545, i32 noundef 1, i32 noundef 0) #14
  %call.i63 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 131) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i63)
  %cmp9.not = icmp eq i8 %call.i63, 1
  br i1 %cmp9.not, label %if.end.if.end46_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.if.end46_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.then15:                                        ; preds = %entry
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 545, i32 noundef 0, i32 noundef 0) #14
  %call.i64 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 131) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i64)
  %cmp18.not = icmp eq i8 %call.i64, 1
  br i1 %cmp18.not, label %if.end21, label %if.then15.cleanup_crit_edge

if.then15.cleanup_crit_edge:                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end21:                                         ; preds = %if.then15
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 545, i32 noundef 1, i32 noundef 0) #14
  %call.i65 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 130) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i65)
  %cmp24.not = icmp eq i8 %call.i65, 1
  br i1 %cmp24.not, label %if.end21.if.end46_crit_edge, label %if.end21.cleanup_crit_edge

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end21.if.end46_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.then31:                                        ; preds = %entry
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 545, i32 noundef 0, i32 noundef 0) #14
  %call.i66 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 131) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i66)
  %cmp34.not = icmp eq i8 %call.i66, 1
  br i1 %cmp34.not, label %if.end37, label %if.then31.cleanup_crit_edge

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end37:                                         ; preds = %if.then31
  tail call void @amdgpu_device_wreg(ptr noundef %handle, i32 noundef 545, i32 noundef %conv, i32 noundef 0) #14
  %call.i67 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %handle, i16 noundef zeroext 130) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i67)
  %cmp40.not = icmp eq i8 %call.i67, 1
  br i1 %cmp40.not, label %if.end37.if.end46_crit_edge, label %if.end37.cleanup_crit_edge

if.end37.cleanup_crit_edge:                       ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end37.if.end46_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.end46:                                         ; preds = %if.end37.if.end46_crit_edge, %if.end21.if.end46_crit_edge, %if.end.if.end46_crit_edge, %entry.if.end46_crit_edge
  %forced_level = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 36
  %7 = ptrtoint ptr %forced_level to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %level, ptr %forced_level, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %if.end37.cleanup_crit_edge, %if.then31.cleanup_crit_edge, %if.end21.cleanup_crit_edge, %if.then15.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end46 ], [ -22, %if.then.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.then15.cleanup_crit_edge ], [ -22, %if.end21.cleanup_crit_edge ], [ -22, %if.then31.cleanup_crit_edge ], [ -22, %if.end37.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_read_sensor(ptr noundef %handle, i32 noundef %idx, ptr nocapture noundef writeonly %value, ptr nocapture noundef %size) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ps_priv.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 9
  %2 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i, align 4
  %call2 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 486, i32 noundef 0) #14
  %and = lshr i32 %call2, 4
  %shr = and i32 %and, 15
  %4 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %5)
  %cmp = icmp slt i32 %5, 4
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = zext i32 %idx to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.101)
  switch i32 %idx, label %if.end.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 9, label %sw.bb8
    i32 10, label %sw.bb18
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb:                                            ; preds = %if.end
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %3, align 4
  %conv = zext i16 %8 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %conv)
  %cmp3 = icmp ult i32 %shr, %conv
  br i1 %cmp3, label %if.then5, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then5:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %shr
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  br label %cleanup.sink.split

sw.bb8:                                           ; preds = %if.end
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %3, align 4
  %conv10 = zext i16 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %conv10)
  %cmp11 = icmp ult i32 %shr, %conv10
  br i1 %cmp11, label %if.then13, label %sw.bb8.cleanup_crit_edge

sw.bb8.cleanup_crit_edge:                         ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then13:                                        ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #16
  %mclk16 = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %shr, i32 1
  %13 = ptrtoint ptr %mclk16 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mclk16, align 4
  br label %cleanup.sink.split

sw.bb18:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 453, i32 noundef 0) #14
  %and.i = lshr i32 %call.i, 9
  %shr.i = and i32 %and.i, 511
  %phi.bo.i = mul nuw nsw i32 %shr.i, 1000
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %sw.bb18, %if.then13, %if.then5
  %phi.bo.i.sink = phi i32 [ %phi.bo.i, %sw.bb18 ], [ %14, %if.then13 ], [ %10, %if.then5 ]
  %15 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %phi.bo.i.sink, ptr %value, align 4
  %16 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 4, ptr %size, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %sw.bb8.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -22, %sw.bb.cleanup_crit_edge ], [ -22, %sw.bb8.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ 0, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @si_dpm_debugfs_print_current_performance_level(ptr noundef %handle, ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ps_priv.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 9
  %2 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i, align 4
  %call2 = tail call i32 @amdgpu_device_rreg(ptr noundef %handle, i32 noundef 486, i32 noundef 0) #14
  %and = lshr i32 %call2, 4
  %shr = and i32 %and, 15
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 4
  %conv = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %conv)
  %cmp.not = icmp ult i32 %shr, %conv
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.26, i32 noundef %shr) #14
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %shr
  %vclk = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 3
  %6 = ptrtoint ptr %vclk to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vclk, align 4
  %dclk = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 25, i32 4
  %8 = ptrtoint ptr %dclk to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dclk, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.27, i32 noundef %7, i32 noundef %9) #14
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %mclk = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %shr, i32 1
  %12 = ptrtoint ptr %mclk to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %mclk, align 4
  %vddc = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %shr, i32 2
  %14 = ptrtoint ptr %vddc to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vddc, align 4
  %conv4 = zext i16 %15 to i32
  %vddci = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %shr, i32 3
  %16 = ptrtoint ptr %vddci to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vddci, align 2
  %conv5 = zext i16 %17 to i32
  %pcie_gen = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %shr, i32 5
  %18 = ptrtoint ptr %pcie_gen to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pcie_gen, align 4
  %add = add i32 %19, 1
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.28, i32 noundef %shr, i32 noundef %11, i32 noundef %13, i32 noundef %conv4, i32 noundef %conv5, i32 noundef %add) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @amdgpu_get_vce_clock_state(ptr noundef, i32 noundef) #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @si_dpm_get_sclk(ptr nocapture noundef readonly %handle, i1 noundef zeroext %low) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ps_priv.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 9
  %2 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i, align 4
  br i1 %low, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %performance_levels = getelementptr inbounds %struct.si_ps, ptr %3, i32 0, i32 2
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 4
  %conv = zext i16 %5 to i32
  %sub = add nsw i32 %conv, -1
  %arrayidx3 = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %sub
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0.in = phi ptr [ %performance_levels, %if.then ], [ %arrayidx3, %if.else ]
  %6 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %retval.0 = load i32, ptr %retval.0.in, align 4
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @si_dpm_get_mclk(ptr nocapture noundef readonly %handle, i1 noundef zeroext %low) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %handle, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ps_priv.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 27, i32 9
  %2 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i, align 4
  br i1 %low, label %entry.cleanup_crit_edge, label %if.else

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 4
  %conv = zext i16 %5 to i32
  %sub = add nsw i32 %conv, -1
  br label %cleanup

cleanup:                                          ; preds = %if.else, %entry.cleanup_crit_edge
  %sub.sink = phi i32 [ %sub, %if.else ], [ 0, %entry.cleanup_crit_edge ]
  %mclk4 = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %sub.sink, i32 1
  %6 = ptrtoint ptr %mclk4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %retval.0 = load i32, ptr %mclk4, align 4
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_err(ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_enable_power_containment(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_new_state, i1 noundef zeroext %enable) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %enable_power_containment = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %enable_power_containment to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %enable_power_containment, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end19_crit_edge, label %if.then

entry.if.end19_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then:                                          ; preds = %entry
  br i1 %enable, label %if.then2, label %if.else10

if.then2:                                         ; preds = %if.then
  %disable_uvd_powertune.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 7
  %4 = ptrtoint ptr %disable_uvd_powertune.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %disable_uvd_powertune.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.then2.if.then4_crit_edge, label %land.lhs.true.i

if.then2.if.then4_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then4

land.lhs.true.i:                                  ; preds = %if.then2
  %vclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 3
  %6 = ptrtoint ptr %vclk.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool1.not.i = icmp eq i32 %7, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.then4_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.if.then4_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then4

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %dclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 4
  %8 = ptrtoint ptr %dclk.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool3.not.i = icmp eq i32 %9, 0
  br i1 %tobool3.not.i, label %land.lhs.true2.i.if.then4_crit_edge, label %land.lhs.true2.i.if.end19_crit_edge

land.lhs.true2.i.if.end19_crit_edge:              ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

land.lhs.true2.i.if.then4_crit_edge:              ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then4

if.then4:                                         ; preds = %land.lhs.true2.i.if.then4_crit_edge, %land.lhs.true.i.if.then4_crit_edge, %if.then2.if.then4_crit_edge
  %call5 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 89) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call5)
  %cmp.not = icmp eq i8 %call5, 1
  %pc_enabled8 = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 9
  br i1 %cmp.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %pc_enabled8 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %pc_enabled8, align 1
  br label %if.end19

if.else:                                          ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %pc_enabled8 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 1, ptr %pc_enabled8, align 1
  br label %if.end19

if.else10:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %call11 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 90) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call11)
  %cmp13.not = icmp eq i8 %call11, 1
  %spec.select = select i1 %cmp13.not, i32 0, i32 -22
  %pc_enabled17 = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 9
  %12 = ptrtoint ptr %pc_enabled17 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %pc_enabled17, align 1
  br label %if.end19

if.end19:                                         ; preds = %if.else10, %if.else, %if.then7, %land.lhs.true2.i.if.end19_crit_edge, %entry.if.end19_crit_edge
  %ret.1 = phi i32 [ -22, %if.then7 ], [ 0, %if.else ], [ %spec.select, %if.else10 ], [ 0, %entry.if.end19_crit_edge ], [ 0, %land.lhs.true2.i.if.end19_crit_edge ]
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_enable_smc_cac(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_new_state, i1 noundef zeroext %enable) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %enable_cac = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %enable_cac to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %enable_cac, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end48_crit_edge, label %if.then

entry.if.end48_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then:                                          ; preds = %entry
  br i1 %enable, label %if.then3, label %if.else30

if.then3:                                         ; preds = %if.then
  %disable_uvd_powertune.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 7
  %4 = ptrtoint ptr %disable_uvd_powertune.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %disable_uvd_powertune.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.then3.if.then5_crit_edge, label %land.lhs.true.i

if.then3.if.then5_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5

land.lhs.true.i:                                  ; preds = %if.then3
  %vclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 3
  %6 = ptrtoint ptr %vclk.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool1.not.i = icmp eq i32 %7, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.then5_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.if.then5_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %dclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 4
  %8 = ptrtoint ptr %dclk.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool3.not.i = icmp eq i32 %9, 0
  br i1 %tobool3.not.i, label %land.lhs.true2.i.if.then5_crit_edge, label %land.lhs.true2.i.if.end48_crit_edge

land.lhs.true2.i.if.end48_crit_edge:              ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

land.lhs.true2.i.if.then5_crit_edge:              ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5

if.then5:                                         ; preds = %land.lhs.true2.i.if.then5_crit_edge, %land.lhs.true.i.if.then5_crit_edge, %if.then3.if.then5_crit_edge
  %support_cac_long_term_average = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %support_cac_long_term_average to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %support_cac_long_term_average, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool6.not = icmp eq i8 %11, 0
  br i1 %tobool6.not, label %if.then5.if.end12_crit_edge, label %if.then7

if.then5.if.end12_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then7:                                         ; preds = %if.then5
  %call8 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 110) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call8)
  %cmp.not = icmp eq i8 %call8, 1
  br i1 %cmp.not, label %if.then7.if.end12_crit_edge, label %if.then10

if.then7.if.end12_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then10:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %support_cac_long_term_average to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %support_cac_long_term_average, align 1
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.then7.if.end12_crit_edge, %if.then5.if.end12_crit_edge
  %call13 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 83) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call13)
  %cmp15.not = icmp eq i8 %call13, 1
  %spec.select69 = zext i1 %cmp15.not to i8
  %spec.select70 = select i1 %cmp15.not, i32 0, i32 -22
  %13 = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %spec.select69, ptr %13, align 2
  %enable_dte = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 13
  %15 = ptrtoint ptr %enable_dte to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %enable_dte, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool20.not = icmp eq i8 %16, 0
  br i1 %tobool20.not, label %if.end12.if.end48_crit_edge, label %if.then21

if.end12.if.end48_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then21:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %call22 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 135) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call22)
  %cmp24.not = icmp eq i8 %call22, 1
  %spec.select = select i1 %cmp24.not, i32 %spec.select70, i32 -22
  br label %if.end48

if.else30:                                        ; preds = %if.then
  %cac_enabled31 = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 6
  %17 = ptrtoint ptr %cac_enabled31 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %cac_enabled31, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool32.not = icmp eq i8 %18, 0
  br i1 %tobool32.not, label %if.else30.if.end48_crit_edge, label %if.then33

if.else30.if.end48_crit_edge:                     ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then33:                                        ; preds = %if.else30
  %enable_dte34 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 13
  %19 = ptrtoint ptr %enable_dte34 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %enable_dte34, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool35.not = icmp eq i8 %20, 0
  br i1 %tobool35.not, label %if.then33.if.end38_crit_edge, label %if.then36

if.then33.if.end38_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

if.then36:                                        ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #16
  %call37 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 136) #14
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.then33.if.end38_crit_edge
  %call39 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 84) #14
  %21 = ptrtoint ptr %cac_enabled31 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %cac_enabled31, align 2
  %support_cac_long_term_average41 = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 5
  %22 = ptrtoint ptr %support_cac_long_term_average41 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %support_cac_long_term_average41, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool42.not = icmp eq i8 %23, 0
  br i1 %tobool42.not, label %if.end38.if.end48_crit_edge, label %if.then43

if.end38.if.end48_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then43:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  %call44 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 111) #14
  br label %if.end48

if.end48:                                         ; preds = %if.then43, %if.end38.if.end48_crit_edge, %if.else30.if.end48_crit_edge, %if.then21, %if.end12.if.end48_crit_edge, %land.lhs.true2.i.if.end48_crit_edge, %entry.if.end48_crit_edge
  %ret.1 = phi i32 [ %spec.select70, %if.end12.if.end48_crit_edge ], [ 0, %if.then43 ], [ 0, %if.end38.if.end48_crit_edge ], [ 0, %if.else30.if.end48_crit_edge ], [ 0, %entry.if.end48_crit_edge ], [ %spec.select, %if.then21 ], [ 0, %land.lhs.true2.i.if.end48_crit_edge ]
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_halt_smc(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 16) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call)
  %cmp.not = icmp eq i8 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call2 = tail call zeroext i8 @amdgpu_si_wait_for_smc_inactive(ptr noundef %adev) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call2)
  %cmp4 = icmp eq i8 %call2, 1
  %cond = select i1 %cmp4, i32 0, i32 -22
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %cond, %if.end ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_upload_sw_state(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_new_state) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 9
  %2 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i, align 4
  %state_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 21
  %4 = ptrtoint ptr %state_table_start to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state_table_start, align 4
  %driverState = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %3, align 4
  %conv = zext i16 %7 to i32
  %8 = mul nuw nsw i32 %conv, 148
  %9 = add nuw nsw i32 %8, 4
  %10 = call ptr @memset(ptr %driverState, i32 0, i32 %9)
  %11 = load ptr, ptr %priv.i, align 4
  %12 = load ptr, ptr %ps_priv.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %12, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %14)
  %cmp.i = icmp ugt i16 %14, 5
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %conv.i = zext i16 %14 to i32
  %sub.i = add nsw i32 %conv.i, -1
  %arrayidx.i = getelementptr %struct.si_ps, ptr %12, i32 0, i32 2, i32 %sub.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %mul.i = mul i32 %16, 100
  %div.i = udiv i32 %mul.i, 100
  %vclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 3
  %17 = ptrtoint ptr %vclk.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %vclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i, label %if.end.i.if.else.i_crit_edge, label %land.lhs.true.i

if.end.i.if.else.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %dclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 4
  %19 = ptrtoint ptr %dclk.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %dclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool7.not.i = icmp eq i32 %20, 0
  br i1 %tobool7.not.i, label %land.lhs.true.i.if.else.i_crit_edge, label %if.then8.i

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

if.then8.i:                                       ; preds = %land.lhs.true.i
  %uvd_enabled.i = getelementptr inbounds %struct.evergreen_power_info, ptr %11, i32 0, i32 13
  %21 = ptrtoint ptr %uvd_enabled.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 1, ptr %uvd_enabled.i, align 4
  %smu_uvd_hs.i = getelementptr inbounds %struct.evergreen_power_info, ptr %11, i32 0, i32 12
  %22 = ptrtoint ptr %smu_uvd_hs.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %smu_uvd_hs.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool9.not.i = icmp eq i8 %23, 0
  br i1 %tobool9.not.i, label %if.then8.i.if.end15.i_crit_edge, label %if.then10.i

if.then8.i.if.end15.i_crit_edge:                  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.then10.i:                                      ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %driverState to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %driverState, align 1
  %26 = or i8 %25, 2
  store i8 %26, ptr %driverState, align 1
  br label %if.end15.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.end.i.if.else.i_crit_edge
  %uvd_enabled14.i = getelementptr inbounds %struct.evergreen_power_info, ptr %11, i32 0, i32 13
  %27 = ptrtoint ptr %uvd_enabled14.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %uvd_enabled14.i, align 4
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.else.i, %if.then10.i, %if.then8.i.if.end15.i_crit_edge
  %dc_compatible.i = getelementptr inbounds %struct.si_ps, ptr %12, i32 0, i32 1
  %28 = ptrtoint ptr %dc_compatible.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %dc_compatible.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool16.not.i = icmp eq i8 %29, 0
  br i1 %tobool16.not.i, label %if.end15.i.if.end22.i_crit_edge, label %if.then17.i

if.end15.i.if.end22.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i

if.then17.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %driverState to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %driverState, align 1
  %32 = or i8 %31, 1
  store i8 %32, ptr %driverState, align 1
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then17.i, %if.end15.i.if.end22.i_crit_edge
  %levelCount.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 1
  %33 = ptrtoint ptr %levelCount.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 0, ptr %levelCount.i, align 1
  %34 = ptrtoint ptr %12 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %12, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %35)
  %cmp25224.not.i = icmp eq i16 %35, 0
  br i1 %cmp25224.not.i, label %if.end22.i.for.end.i_crit_edge, label %for.body.lr.ph.i

if.end22.i.for.end.i_crit_edge:                   ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end22.i
  %sclk_deep_sleep.i = getelementptr inbounds %struct.evergreen_power_info, ptr %11, i32 0, i32 9
  %sclk_deep_sleep_above_low.i = getelementptr inbounds %struct.si_power_info, ptr %11, i32 0, i32 17
  %enable_power_containment.i = getelementptr inbounds %struct.ni_power_info, ptr %11, i32 0, i32 10
  %dynamic_ac_timing.i = getelementptr inbounds %struct.evergreen_power_info, ptr %11, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %if.end80.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0225.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc93.i, %if.end80.i.for.body.i_crit_edge ]
  %36 = ptrtoint ptr %sclk_deep_sleep.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %sclk_deep_sleep.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool27.not.i = icmp eq i8 %37, 0
  br i1 %tobool27.not.i, label %for.body.i.if.end50.i_crit_edge, label %if.then28.i

for.body.i.if.end50.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.i

if.then28.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0225.i)
  %cmp29.i = icmp eq i32 %i.0225.i, 0
  br i1 %cmp29.i, label %if.then28.i.if.then36.i_crit_edge, label %lor.lhs.false.i

if.then28.i.if.then36.i_crit_edge:                ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then36.i

lor.lhs.false.i:                                  ; preds = %if.then28.i
  %38 = ptrtoint ptr %sclk_deep_sleep_above_low.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %sclk_deep_sleep_above_low.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool31.not.i = icmp eq i8 %39, 0
  br i1 %tobool31.not.i, label %lor.lhs.false.i.if.end50.i_crit_edge, label %lor.lhs.false.i.if.then36.i_crit_edge

lor.lhs.false.i.if.then36.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then36.i

lor.lhs.false.i.if.end50.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.i

if.then36.i:                                      ; preds = %lor.lhs.false.i.if.then36.i_crit_edge, %if.then28.i.if.then36.i_crit_edge
  %stateFlags.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0225.i, i32 18
  %40 = ptrtoint ptr %stateFlags.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %stateFlags.i, align 1
  %42 = or i8 %41, 64
  store i8 %42, ptr %stateFlags.i, align 1
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.then36.i, %lor.lhs.false.i.if.end50.i_crit_edge, %for.body.i.if.end50.i_crit_edge
  %arrayidx52.i = getelementptr %struct.si_ps, ptr %12, i32 0, i32 2, i32 %i.0225.i
  %arrayidx54.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0225.i
  %call55.i = tail call fastcc i32 @si_convert_power_level_to_smc(ptr noundef %adev, ptr noundef %arrayidx52.i, ptr noundef %arrayidx54.i) #14
  %43 = trunc i32 %i.0225.i to i8
  %conv56.i = add i8 %43, 3
  %arbRefreshState.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0225.i, i32 19
  %44 = ptrtoint ptr %arbRefreshState.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %conv56.i, ptr %arbRefreshState.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55.i)
  %tobool59.not.i = icmp eq i32 %call55.i, 0
  br i1 %tobool59.not.i, label %if.end61.i, label %if.end50.i.cleanup_crit_edge

if.end50.i.cleanup_crit_edge:                     ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end61.i:                                       ; preds = %if.end50.i
  %45 = ptrtoint ptr %enable_power_containment.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %enable_power_containment.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool62.not.i = icmp eq i8 %46, 0
  br i1 %tobool62.not.i, label %if.else72.i, label %if.then63.i

if.then63.i:                                      ; preds = %if.end61.i
  call void @__sanitizer_cov_trace_pc() #16
  %47 = ptrtoint ptr %arrayidx52.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx52.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %div.i)
  %cmp67.i = icmp uge i32 %48, %div.i
  br label %if.end80.i

if.else72.i:                                      ; preds = %if.end61.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %i.0225.i)
  %cmp73.i = icmp ugt i32 %i.0225.i, 1
  br label %if.end80.i

if.end80.i:                                       ; preds = %if.else72.i, %if.then63.i
  %conv69.sink.in.i = phi i1 [ %cmp73.i, %if.else72.i ], [ %cmp67.i, %if.then63.i ]
  %conv69.sink.i = zext i1 %conv69.sink.in.i to i8
  %49 = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0225.i, i32 1
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %conv69.sink.i, ptr %49, align 1
  %51 = ptrtoint ptr %dynamic_ac_timing.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %dynamic_ac_timing.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool81.not.i = icmp eq i8 %52, 0
  %.conv56.i = select i1 %tobool81.not.i, i8 0, i8 %conv56.i
  %53 = ptrtoint ptr %arrayidx54.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %.conv56.i, ptr %arrayidx54.i, align 1
  %54 = ptrtoint ptr %levelCount.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %levelCount.i, align 1
  %inc.i = add i8 %55, 1
  store i8 %inc.i, ptr %levelCount.i, align 1
  %inc93.i = add nuw nsw i32 %i.0225.i, 1
  %56 = ptrtoint ptr %12 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %12, align 4
  %conv24.i = zext i16 %57 to i32
  %cmp25.i = icmp ult i32 %inc93.i, %conv24.i
  br i1 %cmp25.i, label %if.end80.i.for.body.i_crit_edge, label %if.end80.i.for.end.i_crit_edge

if.end80.i.for.end.i_crit_edge:                   ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

if.end80.i.for.body.i_crit_edge:                  ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.end.i:                                        ; preds = %if.end80.i.for.end.i_crit_edge, %if.end22.i.for.end.i_crit_edge
  %div94.i = udiv i32 %mul.i, 51200
  %58 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i.i = getelementptr inbounds %struct.si_power_info, ptr %59, i32 0, i32 22
  %60 = ptrtoint ptr %soft_regs_start.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %soft_regs_start.i.i, align 4
  %add.i.i = add i32 %61, 120
  %sram_end.i.i = getelementptr inbounds %struct.si_power_info, ptr %59, i32 0, i32 20
  %62 = ptrtoint ptr %sram_end.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %sram_end.i.i, align 4
  %call1.i.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i.i, i32 noundef %div94.i, i32 noundef %63) #14
  %64 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %ps_priv.i, align 4
  %66 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %priv.i, align 4
  %68 = ptrtoint ptr %65 to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %65, align 4
  %conv14.i.i = zext i16 %69 to i32
  %sub15.i.i = add nsw i32 %conv14.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %69)
  %cmp16.i.i = icmp ugt i16 %69, 1
  br i1 %cmp16.i.i, label %for.body.lr.ph.i.i, label %for.end.i.si_populate_smc_sp.exit.i_crit_edge

for.end.i.si_populate_smc_sp.exit.i_crit_edge:    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_smc_sp.exit.i

for.body.lr.ph.i.i:                               ; preds = %for.end.i
  %dsp.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %67, i32 0, i32 43
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.017.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ]
  %70 = ptrtoint ptr %dsp.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %dsp.i.i, align 4
  %bSP.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.017.i.i, i32 9
  %72 = ptrtoint ptr %bSP.i.i to i32
  call void @__asan_storeN_noabort(i32 %72, i32 4)
  store i32 %71, ptr %bSP.i.i, align 1
  %inc.i.i = add nuw nsw i32 %i.017.i.i, 1
  %73 = ptrtoint ptr %65 to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %65, align 4
  %conv.i.i = zext i16 %74 to i32
  %sub.i.i = add nsw i32 %conv.i.i, -1
  %cmp.i.i = icmp slt i32 %inc.i.i, %sub.i.i
  br i1 %cmp.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %for.body.i.i.si_populate_smc_sp.exit.i_crit_edge

for.body.i.i.si_populate_smc_sp.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_smc_sp.exit.i

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

si_populate_smc_sp.exit.i:                        ; preds = %for.body.i.i.si_populate_smc_sp.exit.i_crit_edge, %for.end.i.si_populate_smc_sp.exit.i_crit_edge
  %sub.lcssa.i.i = phi i32 [ %sub15.i.i, %for.end.i.si_populate_smc_sp.exit.i_crit_edge ], [ %sub.i.i, %for.body.i.i.si_populate_smc_sp.exit.i_crit_edge ]
  %psp.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %67, i32 0, i32 44
  %75 = ptrtoint ptr %psp.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %psp.i.i, align 4
  %bSP8.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %sub.lcssa.i.i, i32 9
  %77 = ptrtoint ptr %bSP8.i.i to i32
  call void @__asan_storeN_noabort(i32 %77, i32 4)
  store i32 %76, ptr %bSP8.i.i, align 1
  %78 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %priv.i, align 4
  %80 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ps_priv.i, align 4
  %enable_power_containment.i.i = getelementptr inbounds %struct.ni_power_info, ptr %79, i32 0, i32 10
  %82 = ptrtoint ptr %enable_power_containment.i.i to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %enable_power_containment.i.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %83)
  %cmp.i178.i = icmp eq i8 %83, 0
  br i1 %cmp.i178.i, label %si_populate_smc_sp.exit.i.if.end100.i_crit_edge, label %if.end.i.i

si_populate_smc_sp.exit.i.if.end100.i_crit_edge:  ; preds = %si_populate_smc_sp.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end100.i

if.end.i.i:                                       ; preds = %si_populate_smc_sp.exit.i
  %84 = ptrtoint ptr %81 to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %81, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %85)
  %cmp5.i.i = icmp eq i16 %85, 0
  br i1 %cmp5.i.i, label %if.end.i.i.if.then98.i_crit_edge, label %if.end8.i.i

if.end.i.i.if.then98.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

if.end8.i.i:                                      ; preds = %if.end.i.i
  %86 = ptrtoint ptr %levelCount.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %levelCount.i, align 1
  %88 = zext i8 %87 to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %85, i16 %88)
  %cmp12.not.i.i = icmp eq i16 %85, %88
  br i1 %cmp12.not.i.i, label %if.end15.i.i, label %if.end8.i.i.if.then98.i_crit_edge

if.end8.i.i.if.then98.i_crit_edge:                ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

if.end15.i.i:                                     ; preds = %if.end8.i.i
  %disable_uvd_powertune.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %79, i32 0, i32 34, i32 7
  %89 = ptrtoint ptr %disable_uvd_powertune.i.i.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %disable_uvd_powertune.i.i.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool.not.i.i.i = icmp eq i8 %90, 0
  br i1 %tobool.not.i.i.i, label %if.end15.i.i.if.end.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end15.i.i.if.end.i.i.i_crit_edge:              ; preds = %if.end15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end15.i.i
  %91 = ptrtoint ptr %vclk.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %vclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %tobool1.not.i.i.i = icmp eq i32 %92, 0
  br i1 %tobool1.not.i.i.i, label %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %dclk.i.i.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 4
  %93 = ptrtoint ptr %dclk.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %dclk.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %tobool3.not.i.i.i = icmp eq i32 %94, 0
  br i1 %tobool3.not.i.i.i, label %land.lhs.true2.i.i.i.if.end.i.i.i_crit_edge, label %land.lhs.true2.i.i.i.si_should_disable_uvd_powertune.exit.i.i_crit_edge

land.lhs.true2.i.i.i.si_should_disable_uvd_powertune.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_should_disable_uvd_powertune.exit.i.i

land.lhs.true2.i.i.i.if.end.i.i.i_crit_edge:      ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true2.i.i.i.if.end.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, %if.end15.i.i.if.end.i.i.i_crit_edge
  br label %si_should_disable_uvd_powertune.exit.i.i

si_should_disable_uvd_powertune.exit.i.i:         ; preds = %if.end.i.i.i, %land.lhs.true2.i.i.i.si_should_disable_uvd_powertune.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i1 [ false, %if.end.i.i.i ], [ true, %land.lhs.true2.i.i.i.si_should_disable_uvd_powertune.exit.i.i_crit_edge ]
  %dpm2.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 12, i32 0, i32 26
  %95 = ptrtoint ptr %dpm2.i.i to i32
  call void @__asan_store1_noabort(i32 %95)
  store i8 0, ptr %dpm2.i.i, align 1
  %NearTDPDec.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 12, i32 0, i32 26, i32 5
  %96 = ptrtoint ptr %NearTDPDec.i.i to i32
  call void @__asan_store1_noabort(i32 %96)
  store i8 0, ptr %NearTDPDec.i.i, align 1
  %AboveSafeInc.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 12, i32 0, i32 26, i32 6
  %97 = ptrtoint ptr %AboveSafeInc.i.i to i32
  call void @__asan_store1_noabort(i32 %97)
  store i8 0, ptr %AboveSafeInc.i.i, align 1
  %BelowSafeInc.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 12, i32 0, i32 26, i32 7
  %98 = ptrtoint ptr %BelowSafeInc.i.i to i32
  call void @__asan_store1_noabort(i32 %98)
  store i8 0, ptr %BelowSafeInc.i.i, align 1
  %PwrEfficiencyRatio.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 12, i32 0, i32 26, i32 10
  %99 = ptrtoint ptr %PwrEfficiencyRatio.i.i to i32
  call void @__asan_storeN_noabort(i32 %99, i32 2)
  store i16 0, ptr %PwrEfficiencyRatio.i.i, align 1
  %100 = ptrtoint ptr %81 to i32
  call void @__asan_load2_noabort(i32 %100)
  %101 = load i16, ptr %81, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %101)
  %cmp31311.i.i = icmp ugt i16 %101, 1
  br i1 %cmp31311.i.i, label %for.body.lr.ph.i179.i, label %si_should_disable_uvd_powertune.exit.i.i.if.end100.i_crit_edge

si_should_disable_uvd_powertune.exit.i.i.if.end100.i_crit_edge: ; preds = %si_should_disable_uvd_powertune.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end100.i

for.body.lr.ph.i179.i:                            ; preds = %si_should_disable_uvd_powertune.exit.i.i
  %performance_levels.i.i = getelementptr inbounds %struct.si_ps, ptr %81, i32 0, i32 2
  %vddc_voltage_table.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %79, i32 0, i32 19
  %dyn_state.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21
  %cac_leakage_table.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18
  %entries.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18, i32 1
  %platform_caps.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 13
  %entries8.i.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  br label %for.body.i181.i

for.body.i181.i:                                  ; preds = %si_calculate_power_efficiency_ratio.exit.i.i.for.body.i181.i_crit_edge, %for.body.lr.ph.i179.i
  %i.0314.i.i = phi i32 [ 1, %for.body.lr.ph.i179.i ], [ %inc.i182.i, %si_calculate_power_efficiency_ratio.exit.i.i.for.body.i181.i_crit_edge ]
  %vddc.sroa.0.0313.i.i = phi i16 [ -1, %for.body.lr.ph.i179.i ], [ %138, %si_calculate_power_efficiency_ratio.exit.i.i.for.body.i181.i_crit_edge ]
  %vddc.sroa.11.0312.i.i = phi i32 [ 255, %for.body.lr.ph.i179.i ], [ %i.04.i206.i.i, %si_calculate_power_efficiency_ratio.exit.i.i.for.body.i181.i_crit_edge ]
  %sub.i180.i = add nsw i32 %i.0314.i.i, -1
  %arrayidx33.i.i = getelementptr %struct.si_ps, ptr %81, i32 0, i32 2, i32 %sub.i180.i
  %102 = ptrtoint ptr %arrayidx33.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %arrayidx33.i.i, align 4
  %arrayidx35.i.i = getelementptr %struct.si_ps, ptr %81, i32 0, i32 2, i32 %i.0314.i.i
  %104 = ptrtoint ptr %arrayidx35.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx35.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %103, i32 %105)
  %cmp41.i.i = icmp ugt i32 %103, %105
  br i1 %cmp41.i.i, label %for.body.i181.i.if.then98.i_crit_edge, label %lor.lhs.false.i.i

for.body.i181.i.if.then98.i_crit_edge:            ; preds = %for.body.i181.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

lor.lhs.false.i.i:                                ; preds = %for.body.i181.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %i.0314.i.i)
  %cmp37.i.i = icmp eq i32 %i.0314.i.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %103, i32 %105)
  %cmp48.i.i = icmp eq i32 %103, %105
  %brmerge.i.i = or i1 %retval.0.i.i.i, %cmp48.i.i
  %brmerge196.i.i = select i1 %brmerge.i.i, i1 true, i1 %cmp37.i.i
  %.mux.i.i = select i1 %brmerge.i.i, i32 %105, i32 %103
  %mul.i.i = mul i32 %103, 99
  %div.i.i = udiv i32 %mul.i.i, 100
  %min_sclk.0.i.i = select i1 %brmerge196.i.i, i32 %.mux.i.i, i32 %div.i.i
  %106 = ptrtoint ptr %performance_levels.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %performance_levels.i.i, align 4
  %108 = tail call i32 @llvm.umax.i32(i32 %min_sclk.0.i.i, i32 %107) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %108)
  %cmp72.i.i = icmp eq i32 %108, 0
  br i1 %cmp72.i.i, label %lor.lhs.false.i.i.if.then98.i_crit_edge, label %if.end75.i.i

lor.lhs.false.i.i.if.then98.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

if.end75.i.i:                                     ; preds = %lor.lhs.false.i.i
  %vddc79.i.i = getelementptr %struct.si_ps, ptr %81, i32 0, i32 2, i32 %sub.i180.i, i32 2
  %109 = ptrtoint ptr %vddc79.i.i to i32
  call void @__asan_load2_noabort(i32 %109)
  %110 = load i16, ptr %vddc79.i.i, align 4
  %111 = ptrtoint ptr %vddc_voltage_table.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %vddc_voltage_table.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %cmp3.not5.i.i.i = icmp eq i32 %112, 0
  br i1 %cmp3.not5.i.i.i, label %if.end75.i.i.si_populate_voltage_value.exit.i.i_crit_edge, label %if.end75.i.i.for.body.i.i.i_crit_edge

if.end75.i.i.for.body.i.i.i_crit_edge:            ; preds = %if.end75.i.i
  br label %for.body.i.i.i

if.end75.i.i.si_populate_voltage_value.exit.i.i_crit_edge: ; preds = %if.end75.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.end75.i.i.for.body.i.i.i_crit_edge
  %i.04.i.i.i = phi i32 [ %inc.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %if.end75.i.i.for.body.i.i.i_crit_edge ]
  %arrayidx.i.i.i = getelementptr %struct.evergreen_power_info, ptr %79, i32 0, i32 19, i32 3, i32 %i.04.i.i.i
  %113 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %113)
  %114 = load i16, ptr %arrayidx.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %114, i16 %110)
  %cmp3.not.i.i.i = icmp ult i16 %114, %110
  br i1 %cmp3.not.i.i.i, label %for.inc.i.i.i, label %for.body.i.i.i.si_populate_voltage_value.exit.i.i_crit_edge

for.body.i.i.i.si_populate_voltage_value.exit.i.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit.i.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %inc.i.i.i = add nuw i32 %i.04.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, %112
  br i1 %exitcond.not.i.i.i, label %for.inc.i.i.i.if.then98.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i

for.inc.i.i.i.if.then98.i_crit_edge:              ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

si_populate_voltage_value.exit.i.i:               ; preds = %for.body.i.i.i.si_populate_voltage_value.exit.i.i_crit_edge, %if.end75.i.i.si_populate_voltage_value.exit.i.i_crit_edge
  %vddc.sroa.11.1.i.i = phi i32 [ %vddc.sroa.11.0312.i.i, %if.end75.i.i.si_populate_voltage_value.exit.i.i_crit_edge ], [ %i.04.i.i.i, %for.body.i.i.i.si_populate_voltage_value.exit.i.i_crit_edge ]
  %vddc.sroa.0.1.i.i = phi i16 [ %vddc.sroa.0.0313.i.i, %if.end75.i.i.si_populate_voltage_value.exit.i.i_crit_edge ], [ %114, %for.body.i.i.i.si_populate_voltage_value.exit.i.i_crit_edge ]
  %i.02.i.i.i = phi i32 [ 0, %if.end75.i.i.si_populate_voltage_value.exit.i.i_crit_edge ], [ %i.04.i.i.i, %for.body.i.i.i.si_populate_voltage_value.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.02.i.i.i, i32 %112)
  %cmp11.not.i.i.i = icmp ult i32 %i.02.i.i.i, %112
  br i1 %cmp11.not.i.i.i, label %if.end83.i.i, label %si_populate_voltage_value.exit.i.i.if.then98.i_crit_edge

si_populate_voltage_value.exit.i.i.if.then98.i_crit_edge: ; preds = %si_populate_voltage_value.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

if.end83.i.i:                                     ; preds = %si_populate_voltage_value.exit.i.i
  %115 = ptrtoint ptr %entries.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %entries.i.i.i, align 4
  %tobool.not.i198.i.i = icmp eq ptr %116, null
  br i1 %tobool.not.i198.i.i, label %if.end83.i.i.if.end87.i.i_crit_edge, label %if.then.i200.i.i

if.end83.i.i.if.end87.i.i_crit_edge:              ; preds = %if.end83.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i.i

if.then.i200.i.i:                                 ; preds = %if.end83.i.i
  %117 = ptrtoint ptr %platform_caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %platform_caps.i.i.i, align 4
  %and.i.i.i = and i32 %118, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool3.not.i199.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool3.not.i199.i.i, label %if.else120.i.i.i, label %if.then4.i.i.i

if.then4.i.i.i:                                   ; preds = %if.then.i200.i.i
  %119 = ptrtoint ptr %entries8.i.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %entries8.i.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %120, null
  br i1 %cmp.i.i.i, label %if.then4.i.i.i.if.then98.i_crit_edge, label %for.cond.preheader.i.i.i

if.then4.i.i.i.if.then98.i_crit_edge:             ; preds = %if.then4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

for.cond.preheader.i.i.i:                         ; preds = %if.then4.i.i.i
  %121 = ptrtoint ptr %dyn_state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %dyn_state.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %122)
  %cmp14183.not.i.i.i = icmp eq i32 %122, 0
  br i1 %cmp14183.not.i.i.i, label %for.cond.preheader.i.i.i.if.end87.i.i_crit_edge, label %for.cond.preheader.i.i.i.for.body.i202.i.i_crit_edge

for.cond.preheader.i.i.i.for.body.i202.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  br label %for.body.i202.i.i

for.cond.preheader.i.i.i.if.end87.i.i_crit_edge:  ; preds = %for.cond.preheader.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i202.i.i
  %inc.i201.i.i = add i16 %v_index.0184.i.i.i, 1
  %conv.i.i.i = zext i16 %inc.i201.i.i to i32
  %cmp14.i.i.i = icmp ugt i32 %122, %conv.i.i.i
  br i1 %cmp14.i.i.i, label %for.cond.i.i.i.for.body.i202.i.i_crit_edge, label %for.cond.i.i.i.for.body68.i.i.i_crit_edge

for.cond.i.i.i.for.body68.i.i.i_crit_edge:        ; preds = %for.cond.i.i.i
  br label %for.body68.i.i.i

for.cond.i.i.i.for.body.i202.i.i_crit_edge:       ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i202.i.i

for.body.i202.i.i:                                ; preds = %for.cond.i.i.i.for.body.i202.i.i_crit_edge, %for.cond.preheader.i.i.i.for.body.i202.i.i_crit_edge
  %conv185.i.i.i = phi i32 [ %conv.i.i.i, %for.cond.i.i.i.for.body.i202.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i202.i.i_crit_edge ]
  %v_index.0184.i.i.i = phi i16 [ %inc.i201.i.i, %for.cond.i.i.i.for.body.i202.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i202.i.i_crit_edge ]
  %v.i.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %120, i32 %conv185.i.i.i, i32 1
  %123 = ptrtoint ptr %v.i.i.i to i32
  call void @__asan_load2_noabort(i32 %123)
  %124 = load i16, ptr %v.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %vddc.sroa.0.1.i.i, i16 %124)
  %cmp24.i.i.i = icmp eq i16 %vddc.sroa.0.1.i.i, %124
  br i1 %cmp24.i.i.i, label %if.then26.i.i.i, label %for.cond.i.i.i

if.then26.i.i.i:                                  ; preds = %for.body.i202.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %125 = ptrtoint ptr %cac_leakage_table.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %cac_leakage_table.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %126, i32 %conv185.i.i.i)
  %cmp33.i.i.i = icmp ugt i32 %126, %conv185.i.i.i
  %sub.i.i.i = add i32 %126, -1
  %spec.select.i.i.i = select i1 %cmp33.i.i.i, i32 %conv185.i.i.i, i32 %sub.i.i.i
  br label %cleanup.sink.split.i.i.i

for.cond59.i.i.i:                                 ; preds = %for.body68.i.i.i
  %inc117.i.i.i = add i16 %v_index.1187.i.i.i, 1
  %conv60.i.i.i = zext i16 %inc117.i.i.i to i32
  %cmp66.i.i.i = icmp ugt i32 %122, %conv60.i.i.i
  br i1 %cmp66.i.i.i, label %for.cond59.i.i.i.for.body68.i.i.i_crit_edge, label %for.cond59.i.i.i.if.end87.i.i_crit_edge

for.cond59.i.i.i.if.end87.i.i_crit_edge:          ; preds = %for.cond59.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i.i

for.cond59.i.i.i.for.body68.i.i.i_crit_edge:      ; preds = %for.cond59.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body68.i.i.i

for.body68.i.i.i:                                 ; preds = %for.cond59.i.i.i.for.body68.i.i.i_crit_edge, %for.cond.i.i.i.for.body68.i.i.i_crit_edge
  %conv60188.i.i.i = phi i32 [ %conv60.i.i.i, %for.cond59.i.i.i.for.body68.i.i.i_crit_edge ], [ 0, %for.cond.i.i.i.for.body68.i.i.i_crit_edge ]
  %v_index.1187.i.i.i = phi i16 [ %inc117.i.i.i, %for.cond59.i.i.i.for.body68.i.i.i_crit_edge ], [ 0, %for.cond.i.i.i.for.body68.i.i.i_crit_edge ]
  %v78.i.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %120, i32 %conv60188.i.i.i, i32 1
  %127 = ptrtoint ptr %v78.i.i.i to i32
  call void @__asan_load2_noabort(i32 %127)
  %128 = load i16, ptr %v78.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %vddc.sroa.0.1.i.i, i16 %128)
  %cmp80.not.i.i.i = icmp ugt i16 %vddc.sroa.0.1.i.i, %128
  br i1 %cmp80.not.i.i.i, label %for.cond59.i.i.i, label %if.then82.i.i.i

if.then82.i.i.i:                                  ; preds = %for.body68.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %129 = ptrtoint ptr %cac_leakage_table.i.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %cac_leakage_table.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %130, i32 %conv60188.i.i.i)
  %cmp89.i.i.i = icmp ugt i32 %130, %conv60188.i.i.i
  %sub111.i.i.i = add i32 %130, -1
  %spec.select193.i.i.i = select i1 %cmp89.i.i.i, i32 %conv60188.i.i.i, i32 %sub111.i.i.i
  br label %cleanup.sink.split.i.i.i

if.else120.i.i.i:                                 ; preds = %if.then.i200.i.i
  %conv121.i.i.i = and i32 %vddc.sroa.11.1.i.i, 255
  %131 = ptrtoint ptr %cac_leakage_table.i.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %cac_leakage_table.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %132, i32 %conv121.i.i.i)
  %cmp127.i.i.i = icmp ugt i32 %132, %conv121.i.i.i
  br i1 %cmp127.i.i.i, label %if.else120.i.i.i.cleanup.sink.split.i.i.i_crit_edge, label %if.else120.i.i.i.if.end87.i.i_crit_edge

if.else120.i.i.i.if.end87.i.i_crit_edge:          ; preds = %if.else120.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end87.i.i

if.else120.i.i.i.cleanup.sink.split.i.i.i_crit_edge: ; preds = %if.else120.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i.i

cleanup.sink.split.i.i.i:                         ; preds = %if.else120.i.i.i.cleanup.sink.split.i.i.i_crit_edge, %if.then82.i.i.i, %if.then26.i.i.i
  %conv121.sink.i.i.i = phi i32 [ %conv121.i.i.i, %if.else120.i.i.i.cleanup.sink.split.i.i.i_crit_edge ], [ %spec.select.i.i.i, %if.then26.i.i.i ], [ %spec.select193.i.i.i, %if.then82.i.i.i ]
  %arrayidx137.i.i.i = getelementptr %union.amdgpu_cac_leakage_entry, ptr %116, i32 %conv121.sink.i.i.i
  %133 = ptrtoint ptr %arrayidx137.i.i.i to i32
  call void @__asan_load2_noabort(i32 %133)
  %134 = load i16, ptr %arrayidx137.i.i.i, align 4
  br label %if.end87.i.i

if.end87.i.i:                                     ; preds = %cleanup.sink.split.i.i.i, %if.else120.i.i.i.if.end87.i.i_crit_edge, %for.cond59.i.i.i.if.end87.i.i_crit_edge, %for.cond.preheader.i.i.i.if.end87.i.i_crit_edge, %if.end83.i.i.if.end87.i.i_crit_edge
  %prev_std_vddc.0.ph.i.i = phi i16 [ %vddc.sroa.0.1.i.i, %for.cond.preheader.i.i.i.if.end87.i.i_crit_edge ], [ %vddc.sroa.0.1.i.i, %if.else120.i.i.i.if.end87.i.i_crit_edge ], [ %134, %cleanup.sink.split.i.i.i ], [ %vddc.sroa.0.1.i.i, %if.end83.i.i.if.end87.i.i_crit_edge ], [ %vddc.sroa.0.1.i.i, %for.cond59.i.i.i.if.end87.i.i_crit_edge ]
  %vddc91.i.i = getelementptr %struct.si_ps, ptr %81, i32 0, i32 2, i32 %i.0314.i.i, i32 2
  %135 = ptrtoint ptr %vddc91.i.i to i32
  call void @__asan_load2_noabort(i32 %135)
  %136 = load i16, ptr %vddc91.i.i, align 4
  br label %for.body.i209.i.i

for.body.i209.i.i:                                ; preds = %for.inc.i215.i.i.for.body.i209.i.i_crit_edge, %if.end87.i.i
  %i.04.i206.i.i = phi i32 [ %inc.i213.i.i, %for.inc.i215.i.i.for.body.i209.i.i_crit_edge ], [ 0, %if.end87.i.i ]
  %arrayidx.i207.i.i = getelementptr %struct.evergreen_power_info, ptr %79, i32 0, i32 19, i32 3, i32 %i.04.i206.i.i
  %137 = ptrtoint ptr %arrayidx.i207.i.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %arrayidx.i207.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %138, i16 %136)
  %cmp3.not.i208.i.i = icmp ult i16 %138, %136
  br i1 %cmp3.not.i208.i.i, label %for.inc.i215.i.i, label %si_populate_voltage_value.exit219.i.i

for.inc.i215.i.i:                                 ; preds = %for.body.i209.i.i
  %inc.i213.i.i = add nuw i32 %i.04.i206.i.i, 1
  %exitcond.not.i214.i.i = icmp eq i32 %inc.i213.i.i, %112
  br i1 %exitcond.not.i214.i.i, label %for.inc.i215.i.i.if.then98.i_crit_edge, label %for.inc.i215.i.i.for.body.i209.i.i_crit_edge

for.inc.i215.i.i.for.body.i209.i.i_crit_edge:     ; preds = %for.inc.i215.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i209.i.i

for.inc.i215.i.i.if.then98.i_crit_edge:           ; preds = %for.inc.i215.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

si_populate_voltage_value.exit219.i.i:            ; preds = %for.body.i209.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %i.04.i206.i.i, i32 %112)
  %cmp11.not.i217.i.i = icmp ult i32 %i.04.i206.i.i, %112
  br i1 %cmp11.not.i217.i.i, label %if.end95.i.i, label %si_populate_voltage_value.exit219.i.i.if.then98.i_crit_edge

si_populate_voltage_value.exit219.i.i.if.then98.i_crit_edge: ; preds = %si_populate_voltage_value.exit219.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

if.end95.i.i:                                     ; preds = %si_populate_voltage_value.exit219.i.i
  br i1 %tobool.not.i198.i.i, label %if.end95.i.i.if.end99.i.i_crit_edge, label %if.then.i227.i.i

if.end95.i.i.if.end99.i.i_crit_edge:              ; preds = %if.end95.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end99.i.i

if.then.i227.i.i:                                 ; preds = %if.end95.i.i
  %139 = ptrtoint ptr %platform_caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %platform_caps.i.i.i, align 4
  %and.i225.i.i = and i32 %140, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i225.i.i)
  %tobool3.not.i226.i.i = icmp eq i32 %and.i225.i.i, 0
  br i1 %tobool3.not.i226.i.i, label %if.else120.i264.i.i, label %if.then4.i230.i.i

if.then4.i230.i.i:                                ; preds = %if.then.i227.i.i
  %141 = ptrtoint ptr %entries8.i.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %entries8.i.i.i, align 4
  %cmp.i229.i.i = icmp eq ptr %142, null
  br i1 %cmp.i229.i.i, label %if.then4.i230.i.i.if.then98.i_crit_edge, label %for.cond.preheader.i232.i.i

if.then4.i230.i.i.if.then98.i_crit_edge:          ; preds = %if.then4.i230.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then98.i

for.cond.preheader.i232.i.i:                      ; preds = %if.then4.i230.i.i
  %143 = ptrtoint ptr %dyn_state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %dyn_state.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %144)
  %cmp14183.not.i231.i.i = icmp eq i32 %144, 0
  br i1 %cmp14183.not.i231.i.i, label %for.cond.preheader.i232.i.i.if.end99.i.i_crit_edge, label %for.cond.preheader.i232.i.i.for.body.i243.i.i_crit_edge

for.cond.preheader.i232.i.i.for.body.i243.i.i_crit_edge: ; preds = %for.cond.preheader.i232.i.i
  br label %for.body.i243.i.i

for.cond.preheader.i232.i.i.if.end99.i.i_crit_edge: ; preds = %for.cond.preheader.i232.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end99.i.i

for.cond.i237.i.i:                                ; preds = %for.body.i243.i.i
  %inc.i234.i.i = add i16 %v_index.0184.i240.i.i, 1
  %conv.i235.i.i = zext i16 %inc.i234.i.i to i32
  %cmp14.i236.i.i = icmp ugt i32 %144, %conv.i235.i.i
  br i1 %cmp14.i236.i.i, label %for.cond.i237.i.i.for.body.i243.i.i_crit_edge, label %for.cond.i237.i.i.for.body68.i256.i.i_crit_edge

for.cond.i237.i.i.for.body68.i256.i.i_crit_edge:  ; preds = %for.cond.i237.i.i
  br label %for.body68.i256.i.i

for.cond.i237.i.i.for.body.i243.i.i_crit_edge:    ; preds = %for.cond.i237.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i243.i.i

for.body.i243.i.i:                                ; preds = %for.cond.i237.i.i.for.body.i243.i.i_crit_edge, %for.cond.preheader.i232.i.i.for.body.i243.i.i_crit_edge
  %conv185.i239.i.i = phi i32 [ %conv.i235.i.i, %for.cond.i237.i.i.for.body.i243.i.i_crit_edge ], [ 0, %for.cond.preheader.i232.i.i.for.body.i243.i.i_crit_edge ]
  %v_index.0184.i240.i.i = phi i16 [ %inc.i234.i.i, %for.cond.i237.i.i.for.body.i243.i.i_crit_edge ], [ 0, %for.cond.preheader.i232.i.i.for.body.i243.i.i_crit_edge ]
  %v.i241.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %142, i32 %conv185.i239.i.i, i32 1
  %145 = ptrtoint ptr %v.i241.i.i to i32
  call void @__asan_load2_noabort(i32 %145)
  %146 = load i16, ptr %v.i241.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %138, i16 %146)
  %cmp24.i242.i.i = icmp eq i16 %138, %146
  br i1 %cmp24.i242.i.i, label %if.then26.i247.i.i, label %for.cond.i237.i.i

if.then26.i247.i.i:                               ; preds = %for.body.i243.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %147 = ptrtoint ptr %cac_leakage_table.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %cac_leakage_table.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %148, i32 %conv185.i239.i.i)
  %cmp33.i244.i.i = icmp ugt i32 %148, %conv185.i239.i.i
  %sub.i245.i.i = add i32 %148, -1
  %spec.select.i246.i.i = select i1 %cmp33.i244.i.i, i32 %conv185.i239.i.i, i32 %sub.i245.i.i
  br label %cleanup.sink.split.i267.i.i

for.cond59.i251.i.i:                              ; preds = %for.body68.i256.i.i
  %inc117.i248.i.i = add i16 %v_index.1187.i253.i.i, 1
  %conv60.i249.i.i = zext i16 %inc117.i248.i.i to i32
  %cmp66.i250.i.i = icmp ugt i32 %144, %conv60.i249.i.i
  br i1 %cmp66.i250.i.i, label %for.cond59.i251.i.i.for.body68.i256.i.i_crit_edge, label %for.cond59.i251.i.i.if.end99.i.i_crit_edge

for.cond59.i251.i.i.if.end99.i.i_crit_edge:       ; preds = %for.cond59.i251.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end99.i.i

for.cond59.i251.i.i.for.body68.i256.i.i_crit_edge: ; preds = %for.cond59.i251.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body68.i256.i.i

for.body68.i256.i.i:                              ; preds = %for.cond59.i251.i.i.for.body68.i256.i.i_crit_edge, %for.cond.i237.i.i.for.body68.i256.i.i_crit_edge
  %conv60188.i252.i.i = phi i32 [ %conv60.i249.i.i, %for.cond59.i251.i.i.for.body68.i256.i.i_crit_edge ], [ 0, %for.cond.i237.i.i.for.body68.i256.i.i_crit_edge ]
  %v_index.1187.i253.i.i = phi i16 [ %inc117.i248.i.i, %for.cond59.i251.i.i.for.body68.i256.i.i_crit_edge ], [ 0, %for.cond.i237.i.i.for.body68.i256.i.i_crit_edge ]
  %v78.i254.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %142, i32 %conv60188.i252.i.i, i32 1
  %149 = ptrtoint ptr %v78.i254.i.i to i32
  call void @__asan_load2_noabort(i32 %149)
  %150 = load i16, ptr %v78.i254.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %138, i16 %150)
  %cmp80.not.i255.i.i = icmp ugt i16 %138, %150
  br i1 %cmp80.not.i255.i.i, label %for.cond59.i251.i.i, label %if.then82.i260.i.i

if.then82.i260.i.i:                               ; preds = %for.body68.i256.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %151 = ptrtoint ptr %cac_leakage_table.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %cac_leakage_table.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %152, i32 %conv60188.i252.i.i)
  %cmp89.i257.i.i = icmp ugt i32 %152, %conv60188.i252.i.i
  %sub111.i258.i.i = add i32 %152, -1
  %spec.select193.i259.i.i = select i1 %cmp89.i257.i.i, i32 %conv60188.i252.i.i, i32 %sub111.i258.i.i
  br label %cleanup.sink.split.i267.i.i

if.else120.i264.i.i:                              ; preds = %if.then.i227.i.i
  %conv121.i262.i.i = and i32 %i.04.i206.i.i, 255
  %153 = ptrtoint ptr %cac_leakage_table.i.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %cac_leakage_table.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %154, i32 %conv121.i262.i.i)
  %cmp127.i263.i.i = icmp ugt i32 %154, %conv121.i262.i.i
  br i1 %cmp127.i263.i.i, label %if.else120.i264.i.i.cleanup.sink.split.i267.i.i_crit_edge, label %if.else120.i264.i.i.if.end99.i.i_crit_edge

if.else120.i264.i.i.if.end99.i.i_crit_edge:       ; preds = %if.else120.i264.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end99.i.i

if.else120.i264.i.i.cleanup.sink.split.i267.i.i_crit_edge: ; preds = %if.else120.i264.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i267.i.i

cleanup.sink.split.i267.i.i:                      ; preds = %if.else120.i264.i.i.cleanup.sink.split.i267.i.i_crit_edge, %if.then82.i260.i.i, %if.then26.i247.i.i
  %conv121.sink.i265.i.i = phi i32 [ %conv121.i262.i.i, %if.else120.i264.i.i.cleanup.sink.split.i267.i.i_crit_edge ], [ %spec.select.i246.i.i, %if.then26.i247.i.i ], [ %spec.select193.i259.i.i, %if.then82.i260.i.i ]
  %arrayidx137.i266.i.i = getelementptr %union.amdgpu_cac_leakage_entry, ptr %116, i32 %conv121.sink.i265.i.i
  %155 = ptrtoint ptr %arrayidx137.i266.i.i to i32
  call void @__asan_load2_noabort(i32 %155)
  %156 = load i16, ptr %arrayidx137.i266.i.i, align 4
  br label %if.end99.i.i

if.end99.i.i:                                     ; preds = %cleanup.sink.split.i267.i.i, %if.else120.i264.i.i.if.end99.i.i_crit_edge, %for.cond59.i251.i.i.if.end99.i.i_crit_edge, %for.cond.preheader.i232.i.i.if.end99.i.i_crit_edge, %if.end95.i.i.if.end99.i.i_crit_edge
  %curr_std_vddc.0.ph.i.i = phi i16 [ %138, %for.cond.preheader.i232.i.i.if.end99.i.i_crit_edge ], [ %138, %if.else120.i264.i.i.if.end99.i.i_crit_edge ], [ %156, %cleanup.sink.split.i267.i.i ], [ %138, %if.end95.i.i.if.end99.i.i_crit_edge ], [ %138, %for.cond59.i251.i.i.if.end99.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %prev_std_vddc.0.ph.i.i)
  %cmp.i270.i.i = icmp eq i16 %prev_std_vddc.0.ph.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %curr_std_vddc.0.ph.i.i)
  %cmp3.i.i.i = icmp eq i16 %curr_std_vddc.0.ph.i.i, 0
  %or.cond.i.i.i = or i1 %cmp.i270.i.i, %cmp3.i.i.i
  br i1 %or.cond.i.i.i, label %if.end99.i.i.si_calculate_power_efficiency_ratio.exit.i.i_crit_edge, label %if.end.i273.i.i

if.end99.i.i.si_calculate_power_efficiency_ratio.exit.i.i_crit_edge: ; preds = %if.end99.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_calculate_power_efficiency_ratio.exit.i.i

if.end.i273.i.i:                                  ; preds = %if.end99.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv1.i.i.i = zext i16 %curr_std_vddc.0.ph.i.i to i64
  %conv.i271.i.i = zext i16 %prev_std_vddc.0.ph.i.i to i64
  %mul5.i.i.i = mul nuw nsw i64 %conv1.i.i.i, 1034240
  %mul6.i.i.i = mul nuw nsw i64 %mul5.i.i.i, %conv1.i.i.i
  %call.i.i.i = tail call i64 @div64_u64(i64 noundef %mul6.i.i.i, i64 noundef 1000) #14
  %mul7.i.i.i = mul nuw nsw i64 %conv.i271.i.i, %conv.i271.i.i
  %call8.i.i.i = tail call i64 @div64_u64(i64 noundef %call.i.i.i, i64 noundef %mul7.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 65535, i64 %call8.i.i.i)
  %cmp9.i.i.i = icmp ugt i64 %call8.i.i.i, 65535
  %conv13.i.i.i = trunc i64 %call8.i.i.i to i16
  %spec.select.i272.i.i = select i1 %cmp9.i.i.i, i16 0, i16 %conv13.i.i.i
  br label %si_calculate_power_efficiency_ratio.exit.i.i

si_calculate_power_efficiency_ratio.exit.i.i:     ; preds = %if.end.i273.i.i, %if.end99.i.i.si_calculate_power_efficiency_ratio.exit.i.i_crit_edge
  %retval.0.i274.i.i = phi i16 [ 0, %if.end99.i.i.si_calculate_power_efficiency_ratio.exit.i.i_crit_edge ], [ %spec.select.i272.i.i, %if.end.i273.i.i ]
  %sub101.i.i = sub i32 %105, %108
  %mul102.i.i = shl i32 %sub101.i.i, 8
  %div103.i.i = udiv i32 %mul102.i.i, %105
  %conv104.i.i = trunc i32 %div103.i.i to i8
  %dpm2107.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0314.i.i, i32 26
  %157 = ptrtoint ptr %dpm2107.i.i to i32
  call void @__asan_store1_noabort(i32 %157)
  store i8 %conv104.i.i, ptr %dpm2107.i.i, align 1
  %NearTDPDec112.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0314.i.i, i32 26, i32 5
  %158 = ptrtoint ptr %NearTDPDec112.i.i to i32
  call void @__asan_store1_noabort(i32 %158)
  store i8 10, ptr %NearTDPDec112.i.i, align 1
  %AboveSafeInc116.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0314.i.i, i32 26, i32 6
  %159 = ptrtoint ptr %AboveSafeInc116.i.i to i32
  call void @__asan_store1_noabort(i32 %159)
  store i8 5, ptr %AboveSafeInc116.i.i, align 1
  %BelowSafeInc120.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0314.i.i, i32 26, i32 7
  %160 = ptrtoint ptr %BelowSafeInc120.i.i to i32
  call void @__asan_store1_noabort(i32 %160)
  store i8 20, ptr %BelowSafeInc120.i.i, align 1
  %PwrEfficiencyRatio124.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.0314.i.i, i32 26, i32 10
  %161 = ptrtoint ptr %PwrEfficiencyRatio124.i.i to i32
  call void @__asan_storeN_noabort(i32 %161, i32 2)
  store i16 %retval.0.i274.i.i, ptr %PwrEfficiencyRatio124.i.i, align 1
  %inc.i182.i = add nuw nsw i32 %i.0314.i.i, 1
  %162 = ptrtoint ptr %81 to i32
  call void @__asan_load2_noabort(i32 %162)
  %163 = load i16, ptr %81, align 4
  %conv30.i.i = zext i16 %163 to i32
  %cmp31.i.i = icmp ult i32 %inc.i182.i, %conv30.i.i
  br i1 %cmp31.i.i, label %si_calculate_power_efficiency_ratio.exit.i.i.for.body.i181.i_crit_edge, label %si_calculate_power_efficiency_ratio.exit.i.i.if.end100.i_crit_edge

si_calculate_power_efficiency_ratio.exit.i.i.if.end100.i_crit_edge: ; preds = %si_calculate_power_efficiency_ratio.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end100.i

si_calculate_power_efficiency_ratio.exit.i.i.for.body.i181.i_crit_edge: ; preds = %si_calculate_power_efficiency_ratio.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i181.i

if.then98.i:                                      ; preds = %if.then4.i230.i.i.if.then98.i_crit_edge, %si_populate_voltage_value.exit219.i.i.if.then98.i_crit_edge, %for.inc.i215.i.i.if.then98.i_crit_edge, %if.then4.i.i.i.if.then98.i_crit_edge, %si_populate_voltage_value.exit.i.i.if.then98.i_crit_edge, %for.inc.i.i.i.if.then98.i_crit_edge, %lor.lhs.false.i.i.if.then98.i_crit_edge, %for.body.i181.i.if.then98.i_crit_edge, %if.end8.i.i.if.then98.i_crit_edge, %if.end.i.i.if.then98.i_crit_edge
  %enable_power_containment99.i = getelementptr inbounds %struct.ni_power_info, ptr %11, i32 0, i32 10
  %164 = ptrtoint ptr %enable_power_containment99.i to i32
  call void @__asan_store1_noabort(i32 %164)
  store i8 0, ptr %enable_power_containment99.i, align 2
  br label %if.end100.i

if.end100.i:                                      ; preds = %if.then98.i, %si_calculate_power_efficiency_ratio.exit.i.i.if.end100.i_crit_edge, %si_should_disable_uvd_powertune.exit.i.i.if.end100.i_crit_edge, %si_populate_smc_sp.exit.i.if.end100.i_crit_edge
  %165 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %priv.i, align 4
  %167 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %ps_priv.i, align 4
  %enable_sq_ramping2.i.i = getelementptr inbounds %struct.ni_power_info, ptr %166, i32 0, i32 12
  %169 = ptrtoint ptr %enable_sq_ramping2.i.i to i32
  call void @__asan_load1_noabort(i32 %169)
  %170 = load i8, ptr %enable_sq_ramping2.i.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %170)
  %tobool.not.i.i = icmp eq i8 %170, 0
  %171 = ptrtoint ptr %168 to i32
  call void @__asan_load2_noabort(i32 %171)
  %172 = load i16, ptr %168, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %172)
  %cmp.i185.i = icmp eq i16 %172, 0
  br i1 %cmp.i185.i, label %if.end100.i.if.then103.i_crit_edge, label %if.end.i187.i

if.end100.i.if.then103.i_crit_edge:               ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then103.i

if.end.i187.i:                                    ; preds = %if.end100.i
  %173 = ptrtoint ptr %levelCount.i to i32
  call void @__asan_load1_noabort(i32 %173)
  %174 = load i8, ptr %levelCount.i, align 1
  %175 = zext i8 %174 to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %172, i16 %175)
  %cmp7.not.i.i = icmp eq i16 %172, %175
  br i1 %cmp7.not.i.i, label %if.end10.i.i, label %if.end.i187.i.if.then103.i_crit_edge

if.end.i187.i.if.then103.i_crit_edge:             ; preds = %if.end.i187.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then103.i

if.end10.i.i:                                     ; preds = %if.end.i187.i
  %sq_ramping_threshold.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 26
  %176 = ptrtoint ptr %sq_ramping_threshold.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %sq_ramping_threshold.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %177)
  %cmp11.i.i = icmp eq i32 %177, 0
  br i1 %cmp11.i.i, label %if.end10.i.i.if.then103.i_crit_edge, label %if.end10.i.i.for.body.i190.i_crit_edge

if.end10.i.i.for.body.i190.i_crit_edge:           ; preds = %if.end10.i.i
  br label %for.body.i190.i

if.end10.i.i.if.then103.i_crit_edge:              ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then103.i

for.body.i190.i:                                  ; preds = %for.body.i190.i.for.body.i190.i_crit_edge, %if.end10.i.i.for.body.i190.i_crit_edge
  %i.062.i.i = phi i32 [ %inc.i189.i, %for.body.i190.i.for.body.i190.i_crit_edge ], [ 0, %if.end10.i.i.for.body.i190.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.si_ps, ptr %168, i32 0, i32 2, i32 %i.062.i.i
  %178 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %arrayidx.i.i, align 4
  %180 = ptrtoint ptr %sq_ramping_threshold.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %sq_ramping_threshold.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %179, i32 %181)
  %cmp22.not.i.i = icmp ult i32 %179, %181
  %brmerge.i188.i = select i1 %cmp22.not.i.i, i1 true, i1 %tobool.not.i.i
  %sq_power_throttle.0.i.i = select i1 %brmerge.i188.i, i32 1073692671, i32 1073676306
  %sq_power_throttle2.0.i.i = select i1 %brmerge.i188.i, i32 2080325631, i32 2015232021
  %SQPowerThrottle.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.062.i.i, i32 20
  %182 = ptrtoint ptr %SQPowerThrottle.i.i to i32
  call void @__asan_storeN_noabort(i32 %182, i32 4)
  store i32 %sq_power_throttle.0.i.i, ptr %SQPowerThrottle.i.i, align 1
  %SQPowerThrottle_2.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.062.i.i, i32 21
  %183 = ptrtoint ptr %SQPowerThrottle_2.i.i to i32
  call void @__asan_storeN_noabort(i32 %183, i32 4)
  store i32 %sq_power_throttle2.0.i.i, ptr %SQPowerThrottle_2.i.i, align 1
  %inc.i189.i = add nuw nsw i32 %i.062.i.i, 1
  %184 = ptrtoint ptr %168 to i32
  call void @__asan_load2_noabort(i32 %184)
  %185 = load i16, ptr %168, align 4
  %conv16.i.i = zext i16 %185 to i32
  %cmp17.i.i = icmp ult i32 %inc.i189.i, %conv16.i.i
  br i1 %cmp17.i.i, label %for.body.i190.i.for.body.i190.i_crit_edge, label %for.body.i190.i.if.end104.i_crit_edge

for.body.i190.i.if.end104.i_crit_edge:            ; preds = %for.body.i190.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end104.i

for.body.i190.i.for.body.i190.i_crit_edge:        ; preds = %for.body.i190.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i190.i

if.then103.i:                                     ; preds = %if.end10.i.i.if.then103.i_crit_edge, %if.end.i187.i.if.then103.i_crit_edge, %if.end100.i.if.then103.i_crit_edge
  %enable_sq_ramping.i = getelementptr inbounds %struct.ni_power_info, ptr %11, i32 0, i32 12
  %186 = ptrtoint ptr %enable_sq_ramping.i to i32
  call void @__asan_store1_noabort(i32 %186)
  store i8 0, ptr %enable_sq_ramping.i, align 4
  br label %if.end104.i

if.end104.i:                                      ; preds = %if.then103.i, %for.body.i190.i.if.end104.i_crit_edge
  %187 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %priv.i, align 4
  %189 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %ps_priv.i, align 4
  %191 = ptrtoint ptr %190 to i32
  call void @__asan_load2_noabort(i32 %191)
  %192 = load i16, ptr %190, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %192)
  %cmp.i194.i = icmp ugt i16 %192, 8
  br i1 %cmp.i194.i, label %if.end104.i.cleanup_crit_edge, label %if.end.i196.i

if.end104.i.cleanup_crit_edge:                    ; preds = %if.end104.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i196.i:                                    ; preds = %if.end104.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %192)
  %cmp5.i195.i = icmp ult i16 %192, 2
  %aT.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 12, i32 0, i32 8
  br i1 %cmp5.i195.i, label %if.then7.i.i, label %if.end8.i197.i

if.then7.i.i:                                     ; preds = %if.end.i196.i
  call void @__sanitizer_cov_trace_pc() #16
  %193 = ptrtoint ptr %aT.i.i to i32
  call void @__asan_storeN_noabort(i32 %193, i32 4)
  store i32 65535, ptr %aT.i.i, align 1
  br label %if.end

if.end8.i197.i:                                   ; preds = %if.end.i196.i
  %194 = ptrtoint ptr %aT.i.i to i32
  call void @__asan_storeN_noabort(i32 %194, i32 4)
  store i32 0, ptr %aT.i.i, align 1
  %195 = ptrtoint ptr %190 to i32
  call void @__asan_load2_noabort(i32 %195)
  %196 = load i16, ptr %190, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %196)
  %cmp14.not88.i.i = icmp ult i16 %196, 2
  br i1 %cmp14.not88.i.i, label %if.end8.i197.i.if.end_crit_edge, label %for.body.lr.ph.i198.i

if.end8.i197.i.if.end_crit_edge:                  ; preds = %if.end8.i197.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.lr.ph.i198.i:                            ; preds = %if.end8.i197.i
  %bsp.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %188, i32 0, i32 39
  %pbsp.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %188, i32 0, i32 41
  br label %for.body.i201.i

for.body.i201.i:                                  ; preds = %if.end29.i.i.for.body.i201.i_crit_edge, %for.body.lr.ph.i198.i
  %i.089.i.i = phi i32 [ 0, %for.body.lr.ph.i198.i ], [ %add.i199.i, %if.end29.i.i.for.body.i201.i_crit_edge ]
  %add.i199.i = add nuw nsw i32 %i.089.i.i, 1
  %mul.i200.i = mul nuw nsw i32 %add.i199.i, 1000
  %arrayidx17.i.i = getelementptr %struct.si_ps, ptr %190, i32 0, i32 2, i32 %add.i199.i
  %197 = ptrtoint ptr %arrayidx17.i.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %arrayidx17.i.i, align 4
  %arrayidx19.i.i = getelementptr %struct.si_ps, ptr %190, i32 0, i32 2, i32 %i.089.i.i
  %199 = ptrtoint ptr %arrayidx19.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %arrayidx19.i.i, align 4
  %201 = add i32 %200, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %201, i32 %198)
  %.not.i.i.i = icmp ult i32 %201, %198
  br i1 %.not.i.i.i, label %r600_calculate_at.exit.thread.i.i, label %if.then22.i.i

r600_calculate_at.exit.thread.i.i:                ; preds = %for.body.i201.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul.i.i.i = mul i32 %198, 100
  %div.i.i.i = udiv i32 %mul.i.i.i, %200
  %sub.i.i202.i = add i32 %div.i.i.i, -100
  %mul4.i.i.i = mul i32 %sub.i.i202.i, %mul.i200.i
  %202 = mul i32 %mul4.i.i.i, 1000
  %mul6.i.i203.i = add i32 %202, 50000000
  %div7.i.i.i = udiv i32 %mul4.i.i.i, 100
  %add8.i.i.i = add nuw nsw i32 %div7.i.i.i, 10000
  %div9.i.i.i = udiv i32 %mul6.i.i203.i, %add8.i.i.i
  %add10.i.i.i = add nuw nsw i32 %div9.i.i.i, 5
  %div11.i.i.i = udiv i32 %add10.i.i.i, 10
  %mul12.i.i.i = mul i32 %div11.i.i.i, %mul.i200.i
  %add13.i.i.i = add i32 %mul12.i.i.i, 5000
  %div14.i.i.i = udiv i32 %add13.i.i.i, 10000
  %sub16.i.i.i = sub nsw i32 %mul.i200.i, %div14.i.i.i
  %sub15.i.i.i = add nuw i32 %div11.i.i.i, %mul.i200.i
  %add17.i.i.i = sub i32 %sub15.i.i.i, %div14.i.i.i
  br label %if.end29.i.i

if.then22.i.i:                                    ; preds = %for.body.i201.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub25.i.i = add nsw i32 %mul.i200.i, -250
  %add28.i.i = add nuw nsw i32 %mul.i200.i, 250
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %if.then22.i.i, %r600_calculate_at.exit.thread.i.i
  %t_l.2.i.i = phi i32 [ %add28.i.i, %if.then22.i.i ], [ %add17.i.i.i, %r600_calculate_at.exit.thread.i.i ]
  %t_h.2.i.i = phi i32 [ %sub25.i.i, %if.then22.i.i ], [ %sub16.i.i.i, %r600_calculate_at.exit.thread.i.i ]
  %aT32.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %i.089.i.i, i32 8
  %203 = ptrtoint ptr %aT32.i.i to i32
  call void @__asan_loadN_noabort(i32 %203, i32 4)
  %204 = load i32, ptr %aT32.i.i, align 1
  %and.i.i = and i32 %204, -65536
  %205 = ptrtoint ptr %bsp.i.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %bsp.i.i, align 4
  %mul33.i.i = mul i32 %206, %t_l.2.i.i
  %div.i204.i = udiv i32 %mul33.i.i, 20000
  %or.i.i = or i32 %div.i204.i, %and.i.i
  store i32 %or.i.i, ptr %aT32.i.i, align 1
  %207 = ptrtoint ptr %190 to i32
  call void @__asan_load2_noabort(i32 %207)
  %208 = load i16, ptr %190, align 4
  %conv38.i.i = zext i16 %208 to i32
  %sub39.i.i = add nsw i32 %conv38.i.i, -2
  call void @__sanitizer_cov_trace_cmp4(i32 %i.089.i.i, i32 %sub39.i.i)
  %cmp40.i.i = icmp eq i32 %i.089.i.i, %sub39.i.i
  %cond.in.i.i = select i1 %cmp40.i.i, ptr %pbsp.i.i, ptr %bsp.i.i
  %209 = ptrtoint ptr %cond.in.i.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %cond.i.i = load i32, ptr %cond.in.i.i, align 4
  %mul43.i.i = mul i32 %cond.i.i, %t_h.2.i.i
  %div44.i.i = udiv i32 %mul43.i.i, 20000
  %shl45.i.i = shl i32 %div44.i.i, 16
  %or46.i.i = or i32 %shl45.i.i, 65535
  %aT50.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 4, i32 %add.i199.i, i32 8
  %210 = ptrtoint ptr %aT50.i.i to i32
  call void @__asan_storeN_noabort(i32 %210, i32 4)
  store i32 %or46.i.i, ptr %aT50.i.i, align 1
  %211 = ptrtoint ptr %190 to i32
  call void @__asan_load2_noabort(i32 %211)
  %212 = load i16, ptr %190, align 4
  %conv13.i.i = zext i16 %212 to i32
  %sub.i205.i = add nsw i32 %conv13.i.i, -2
  %cmp14.not.not.i.i = icmp slt i32 %i.089.i.i, %sub.i205.i
  br i1 %cmp14.not.not.i.i, label %if.end29.i.i.for.body.i201.i_crit_edge, label %if.end29.i.i.if.end_crit_edge

if.end29.i.i.if.end_crit_edge:                    ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end29.i.i.for.body.i201.i_crit_edge:           ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i201.i

if.end:                                           ; preds = %if.end29.i.i.if.end_crit_edge, %if.end8.i197.i.if.end_crit_edge, %if.then7.i.i
  %add = add i32 %5, 640
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %213 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %sram_end, align 4
  %call4 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add, ptr noundef %driverState, i32 noundef %9, i32 noundef %214) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end104.i.cleanup_crit_edge, %if.end50.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end104.i.cleanup_crit_edge ], [ %call55.i, %if.end50.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_upload_smc_data(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %new_active_crtc_count = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 18
  %0 = ptrtoint ptr %new_active_crtc_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %new_active_crtc_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %num_crtc = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 79, i32 20
  %2 = ptrtoint ptr %num_crtc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_crtc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp114 = icmp sgt i32 %3, 0
  br i1 %cmp114, label %for.body.lr.ph, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %new_active_crtcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 17
  %4 = ptrtoint ptr %new_active_crtcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %new_active_crtcs, align 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.015 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %shl = shl nuw i32 1, %i.015
  %and = and i32 %5, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.inc, label %for.end

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.015, 1
  %exitcond.not = icmp eq i32 %inc, %3
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.end:                                          ; preds = %for.body
  %arrayidx = getelementptr %struct.amdgpu_device, ptr %adev, i32 0, i32 79, i32 3, i32 %i.015
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %cmp7 = icmp eq ptr %7, null
  br i1 %cmp7, label %for.end.cleanup_crit_edge, label %if.end9

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %for.end
  %line_time = getelementptr inbounds %struct.amdgpu_crtc, ptr %7, i32 0, i32 35
  %8 = ptrtoint ptr %line_time to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %line_time, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp10 = icmp eq i32 %9, 0
  br i1 %cmp10, label %if.end9.cleanup_crit_edge, label %if.end12

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end12:                                         ; preds = %if.end9
  %crtc_id = getelementptr inbounds %struct.amdgpu_crtc, ptr %7, i32 0, i32 1
  %10 = ptrtoint ptr %crtc_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %crtc_id, align 8
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %12 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i = getelementptr inbounds %struct.si_power_info, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %soft_regs_start.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %soft_regs_start.i, align 4
  %add.i = add i32 %15, 196
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %13, i32 0, i32 20
  %16 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sram_end.i, align 4
  %call1.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i, i32 noundef %11, i32 noundef %17) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call1.i)
  %cmp13.not = icmp eq i32 %call1.i, 1
  br i1 %cmp13.not, label %if.end15, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15:                                         ; preds = %if.end12
  %wm_high = getelementptr inbounds %struct.amdgpu_crtc, ptr %7, i32 0, i32 37
  %18 = ptrtoint ptr %wm_high to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %wm_high, align 8
  %20 = ptrtoint ptr %line_time to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %line_time, align 8
  %div = udiv i32 %19, %21
  %22 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i2 = getelementptr inbounds %struct.si_power_info, ptr %23, i32 0, i32 22
  %24 = ptrtoint ptr %soft_regs_start.i2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %soft_regs_start.i2, align 4
  %add.i3 = add i32 %25, 200
  %sram_end.i4 = getelementptr inbounds %struct.si_power_info, ptr %23, i32 0, i32 20
  %26 = ptrtoint ptr %sram_end.i4 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sram_end.i4, align 4
  %call1.i5 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i3, i32 noundef %div, i32 noundef %27) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call1.i5)
  %cmp18.not = icmp eq i32 %call1.i5, 1
  br i1 %cmp18.not, label %if.end20, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end20:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  %wm_low = getelementptr inbounds %struct.amdgpu_crtc, ptr %7, i32 0, i32 36
  %28 = ptrtoint ptr %wm_low to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %wm_low, align 4
  %30 = ptrtoint ptr %line_time to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %line_time, align 8
  %div22 = udiv i32 %29, %31
  %32 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i7 = getelementptr inbounds %struct.si_power_info, ptr %33, i32 0, i32 22
  %34 = ptrtoint ptr %soft_regs_start.i7 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %soft_regs_start.i7, align 4
  %add.i8 = add i32 %35, 204
  %sram_end.i9 = getelementptr inbounds %struct.si_power_info, ptr %33, i32 0, i32 20
  %36 = ptrtoint ptr %sram_end.i9 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %sram_end.i9, align 4
  %call1.i10 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i8, i32 noundef %div22, i32 noundef %37) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.end15.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %for.end.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_upload_ulv_state(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ulv1 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %ulv1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %ulv1, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %land.lhs.true

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

land.lhs.true:                                    ; preds = %entry
  %vddc = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7, i32 4, i32 2
  %4 = ptrtoint ptr %vddc to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vddc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool2.not = icmp eq i16 %5, 0
  br i1 %tobool2.not, label %land.lhs.true.if.end7_crit_edge, label %if.then

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then:                                          ; preds = %land.lhs.true
  %state_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 21
  %6 = ptrtoint ptr %state_table_start to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %state_table_start, align 4
  %ULVState = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10
  %8 = call ptr @memset(ptr %ULVState, i32 0, i32 152)
  %9 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %priv.i, align 4
  %pl.i = getelementptr inbounds %struct.si_power_info, ptr %10, i32 0, i32 7, i32 4
  %level.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4
  %call3.i = tail call fastcc i32 @si_convert_power_level_to_smc(ptr noundef %adev, ptr noundef %pl.i, ptr noundef %level.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then.if.end7_crit_edge

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then.i:                                        ; preds = %if.then
  %sclk_deep_sleep.i = getelementptr inbounds %struct.evergreen_power_info, ptr %10, i32 0, i32 9
  %11 = ptrtoint ptr %sclk_deep_sleep.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %sclk_deep_sleep.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool4.not.i = icmp eq i8 %12, 0
  br i1 %tobool4.not.i, label %if.then.i.if.end14.i_crit_edge, label %if.then6.i

if.then.i.if.end14.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i

if.then6.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %stateFlags.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 18
  %13 = ptrtoint ptr %stateFlags.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %stateFlags.i, align 1
  %15 = or i8 %14, 64
  store i8 %15, ptr %stateFlags.i, align 1
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then6.i, %if.then.i.if.end14.i_crit_edge
  %one_pcie_lane_in_ulv.i = getelementptr inbounds %struct.si_power_info, ptr %10, i32 0, i32 7, i32 5
  %16 = ptrtoint ptr %one_pcie_lane_in_ulv.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %one_pcie_lane_in_ulv.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool15.not.i = icmp eq i8 %17, 0
  br i1 %tobool15.not.i, label %if.end14.i.if.then5_crit_edge, label %if.then16.i

if.end14.i.if.then5_crit_edge:                    ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5

if.then16.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %ULVState to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %ULVState, align 1
  %20 = or i8 %19, 8
  store i8 %20, ptr %ULVState, align 1
  br label %if.then5

if.then5:                                         ; preds = %if.then16.i, %if.end14.i.if.then5_crit_edge
  %arbRefreshState.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 19
  %21 = ptrtoint ptr %arbRefreshState.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 2, ptr %arbRefreshState.i, align 1
  %22 = ptrtoint ptr %level.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 1, ptr %level.i, align 1
  %std_vddc.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 15
  %vddc.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 12
  %23 = ptrtoint ptr %vddc.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %24 = load i32, ptr %vddc.i, align 1
  %25 = ptrtoint ptr %std_vddc.i to i32
  call void @__asan_storeN_noabort(i32 %25, i32 4)
  store i32 %24, ptr %std_vddc.i, align 1
  %levelCount.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 1
  %26 = ptrtoint ptr %levelCount.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 1, ptr %levelCount.i, align 1
  %27 = ptrtoint ptr %ULVState to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %ULVState, align 1
  %29 = or i8 %28, 1
  store i8 %29, ptr %ULVState, align 1
  %add = add i32 %7, 488
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %30 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sram_end, align 4
  %call6 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add, ptr noundef %ULVState, i32 noundef 152, i32 noundef %31) #14
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.then.if.end7_crit_edge, %land.lhs.true.if.end7_crit_edge, %entry.if.end7_crit_edge
  %ret.1 = phi i32 [ 0, %land.lhs.true.if.end7_crit_edge ], [ 0, %entry.if.end7_crit_edge ], [ %call6, %if.then5 ], [ %call3.i, %if.then.if.end7_crit_edge ]
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_upload_mc_reg_table(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_new_state) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 9
  %0 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ps_priv.i, align 4
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 4
  %mc_reg_table_start = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 23
  %4 = ptrtoint ptr %mc_reg_table_start to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mc_reg_table_start, align 4
  %smc_mc_reg_table2 = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 36
  %6 = call ptr @memset(ptr %smc_mc_reg_table2, i32 0, i32 1348)
  %7 = load ptr, ptr %ps_priv.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %cmp8.not.i = icmp eq i16 %9, 0
  br i1 %cmp8.not.i, label %entry.si_convert_mc_reg_table_to_smc.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.si_convert_mc_reg_table_to_smc.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_to_smc.exit

for.body.i:                                       ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %i.09.i = phi i32 [ %inc.i, %si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i_crit_edge ], [ 0, %entry.for.body.i_crit_edge ]
  %add.i = add nuw nsw i32 %i.09.i, 3
  %arrayidx2.i = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 3, i32 %add.i
  %10 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv.i, align 4
  %num_entries.i.i = getelementptr inbounds %struct.si_power_info, ptr %11, i32 0, i32 2, i32 1
  %12 = ptrtoint ptr %num_entries.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %num_entries.i.i, align 1
  %conv.i.i = zext i8 %13 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %cmp32.not.i.i = icmp eq i8 %13, 0
  br i1 %cmp32.not.i.i, label %for.body.i.for.end.thread.i.i_crit_edge, label %for.body.lr.ph.i.i

for.body.i.for.end.thread.i.i_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i.i

for.body.lr.ph.i.i:                               ; preds = %for.body.i
  %mclk.i.i = getelementptr %struct.si_ps, ptr %7, i32 0, i32 2, i32 %i.09.i, i32 1
  %14 = ptrtoint ptr %mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mclk.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.033.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.si_power_info, ptr %11, i32 0, i32 2, i32 3, i32 %i.033.i.i
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %17)
  %cmp3.not.i.i = icmp ugt i32 %15, %17
  br i1 %cmp3.not.i.i, label %for.inc.i.i, label %for.body.i.i.for.end.i.i_crit_edge

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.033.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv.i.i
  br i1 %exitcond.not.i.i, label %for.inc.i.i.for.end.i.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.inc.i.i.for.end.i.i_crit_edge:                ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i.for.end.i.i_crit_edge, %for.body.i.i.for.end.i.i_crit_edge
  %i.0.lcssa.i.i = phi i32 [ %conv.i.i, %for.inc.i.i.for.end.i.i_crit_edge ], [ %i.033.i.i, %for.body.i.i.for.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa.i.i, i32 %conv.i.i)
  %cmp8.i.i = icmp eq i32 %i.0.lcssa.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0.lcssa.i.i)
  %cmp10.not.i.i = icmp eq i32 %i.0.lcssa.i.i, 0
  %dec.i.i = add nsw i32 %i.0.lcssa.i.i, -1
  br i1 %cmp10.not.i.i, label %for.end.i.i.for.end.thread.i.i_crit_edge, label %for.end.i.i._crit_edge

for.end.i.i._crit_edge:                           ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %18

for.end.i.i.for.end.thread.i.i_crit_edge:         ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i.i

for.end.thread.i.i:                               ; preds = %for.end.i.i.for.end.thread.i.i_crit_edge, %for.body.i.for.end.thread.i.i_crit_edge
  %cmp844.i.i = phi i1 [ %cmp8.i.i, %for.end.i.i.for.end.thread.i.i_crit_edge ], [ true, %for.body.i.for.end.thread.i.i_crit_edge ]
  br label %18

18:                                               ; preds = %for.end.thread.i.i, %for.end.i.i._crit_edge
  %cmp843.i.i = phi i1 [ %cmp844.i.i, %for.end.thread.i.i ], [ %cmp8.i.i, %for.end.i.i._crit_edge ]
  %i.0.lcssa41.i.i = phi i32 [ 0, %for.end.thread.i.i ], [ %i.0.lcssa.i.i, %for.end.i.i._crit_edge ]
  %19 = phi i32 [ 0, %for.end.thread.i.i ], [ %dec.i.i, %for.end.i.i._crit_edge ]
  %i.1.i.i = select i1 %cmp843.i.i, i32 %19, i32 %i.0.lcssa41.i.i
  %mc_reg_table.i.i = getelementptr inbounds %struct.si_power_info, ptr %11, i32 0, i32 2
  %20 = ptrtoint ptr %mc_reg_table.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %mc_reg_table.i.i, align 4
  %conv18.i.i = zext i8 %21 to i32
  %valid_flag.i.i = getelementptr inbounds %struct.si_power_info, ptr %11, i32 0, i32 2, i32 2
  %22 = ptrtoint ptr %valid_flag.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %valid_flag.i.i, align 2
  %conv20.i.i = zext i16 %23 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %cmp8.not.i.i.i = icmp eq i8 %21, 0
  br i1 %cmp8.not.i.i.i, label %.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge, label %.for.body.i.i.i_crit_edge

.for.body.i.i.i_crit_edge:                        ; preds = %18
  br label %for.body.i.i.i

.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge: ; preds = %18
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_entry_to_smc.exit.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %.for.body.i.i.i_crit_edge
  %j.010.i.i.i = phi i32 [ %inc3.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %.for.body.i.i.i_crit_edge ]
  %i.09.i.i.i = phi i32 [ %i.1.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %.for.body.i.i.i_crit_edge ]
  %shl.i.i.i = shl nuw i32 1, %j.010.i.i.i
  %and.i.i.i = and i32 %shl.i.i.i, %conv20.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge, label %if.then.i.i.i

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i.i = getelementptr %struct.si_power_info, ptr %11, i32 0, i32 2, i32 3, i32 %i.1.i.i, i32 1, i32 %j.010.i.i.i
  %24 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i.i.i, align 4
  %arrayidx2.i.i.i = getelementptr [16 x i32], ptr %arrayidx2.i, i32 0, i32 %i.09.i.i.i
  %26 = ptrtoint ptr %arrayidx2.i.i.i to i32
  call void @__asan_storeN_noabort(i32 %26, i32 4)
  store i32 %25, ptr %arrayidx2.i.i.i, align 1
  %inc.i.i.i = add i32 %i.09.i.i.i, 1
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %if.then.i.i.i, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %i.1.i.i.i = phi i32 [ %inc.i.i.i, %if.then.i.i.i ], [ %i.09.i.i.i, %for.body.i.i.i.for.inc.i.i.i_crit_edge ]
  %inc3.i.i.i = add nuw nsw i32 %j.010.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc3.i.i.i, %conv18.i.i
  br i1 %exitcond.not.i.i.i, label %for.inc.i.i.i.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i

for.inc.i.i.i.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_entry_to_smc.exit.i

si_convert_mc_reg_table_entry_to_smc.exit.i:      ; preds = %for.inc.i.i.i.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge, %.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge
  %inc.i = add nuw nsw i32 %i.09.i, 1
  %27 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %7, align 4
  %conv.i = zext i16 %28 to i32
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  br i1 %cmp.i, label %si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i_crit_edge, label %si_convert_mc_reg_table_entry_to_smc.exit.i.si_convert_mc_reg_table_to_smc.exit_crit_edge

si_convert_mc_reg_table_entry_to_smc.exit.i.si_convert_mc_reg_table_to_smc.exit_crit_edge: ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_to_smc.exit

si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i_crit_edge: ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

si_convert_mc_reg_table_to_smc.exit:              ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i.si_convert_mc_reg_table_to_smc.exit_crit_edge, %entry.si_convert_mc_reg_table_to_smc.exit_crit_edge
  %add = add i32 %5, 260
  %arrayidx = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 3, i32 3
  %29 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %1, align 4
  %conv = zext i16 %30 to i32
  %mul = shl nuw nsw i32 %conv, 6
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 20
  %31 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sram_end, align 4
  %call3 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add, ptr noundef %arrayidx, i32 noundef %mul, i32 noundef %32) #14
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_set_pcie_lane_width_in_smc(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_new_state, ptr nocapture noundef readonly %amdgpu_current_state) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %amdgpu_new_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %amdgpu_new_state, align 4
  %and = lshr i32 %1, 3
  %shr = and i32 %and, 31
  %2 = ptrtoint ptr %amdgpu_current_state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %amdgpu_current_state, align 4
  %and2 = lshr i32 %3, 3
  %shr3 = and i32 %and2, 31
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %shr3)
  %cmp.not = icmp eq i32 %shr, %shr3
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %add = add nuw nsw i32 %shr, 1
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %4 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %asic_funcs, align 4
  %set_pcie_lanes = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %set_pcie_lanes to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %set_pcie_lanes, align 4
  tail call void %7(ptr noundef %adev, i32 noundef %add) #14
  %8 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %asic_funcs, align 4
  %get_pcie_lanes = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %9, i32 0, i32 9
  %10 = ptrtoint ptr %get_pcie_lanes to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %get_pcie_lanes, align 4
  %call = tail call i32 %11(ptr noundef %adev) #14
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %12 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i = getelementptr inbounds %struct.si_power_info, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %soft_regs_start.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %soft_regs_start.i, align 4
  %add.i = add i32 %15, 244
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %13, i32 0, i32 20
  %16 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sram_end.i, align 4
  %call1.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i, i32 noundef %call, i32 noundef %17) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_resume_smc(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 128) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call)
  %cmp.not = icmp eq i8 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call2 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 17) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call2)
  %cmp4 = icmp eq i8 %call2, 1
  %cond = select i1 %cmp4, i32 0, i32 -22
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %cond, %if.end ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ni_set_uvd_clock_after_set_eng_clock(ptr noundef %adev, ptr nocapture noundef readonly %new_ps, ptr nocapture noundef readonly %old_ps) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %new_ps, i32 0, i32 9
  %0 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ps_priv.i, align 4
  %ps_priv.i28 = getelementptr inbounds %struct.amdgpu_ps, ptr %old_ps, i32 0, i32 9
  %2 = ptrtoint ptr %ps_priv.i28 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i28, align 4
  %vclk = getelementptr inbounds %struct.amdgpu_ps, ptr %new_ps, i32 0, i32 3
  %4 = ptrtoint ptr %vclk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vclk, align 4
  %vclk2 = getelementptr inbounds %struct.amdgpu_ps, ptr %old_ps, i32 0, i32 3
  %6 = ptrtoint ptr %vclk2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vclk2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp = icmp eq i32 %5, %7
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %dclk = getelementptr inbounds %struct.amdgpu_ps, ptr %new_ps, i32 0, i32 4
  %8 = ptrtoint ptr %dclk to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dclk, align 4
  %dclk3 = getelementptr inbounds %struct.amdgpu_ps, ptr %old_ps, i32 0, i32 4
  %10 = ptrtoint ptr %dclk3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dclk3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp4 = icmp eq i32 %9, %11
  br i1 %cmp4, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %1, align 4
  %conv = zext i16 %13 to i32
  %sub = add nsw i32 %conv, -1
  %arrayidx = getelementptr %struct.si_ps, ptr %1, i32 0, i32 2, i32 %sub
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %16 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %3, align 4
  %conv7 = zext i16 %17 to i32
  %sub8 = add nsw i32 %conv7, -1
  %arrayidx9 = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %sub8
  %18 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx9, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %19)
  %cmp11 = icmp ult i32 %15, %19
  br i1 %cmp11, label %if.end.cleanup_crit_edge, label %if.end14

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end14:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %20 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %asic_funcs, align 4
  %set_uvd_clocks = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %21, i32 0, i32 7
  %22 = ptrtoint ptr %set_uvd_clocks to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %set_uvd_clocks, align 4
  %dclk16 = getelementptr inbounds %struct.amdgpu_ps, ptr %new_ps, i32 0, i32 4
  %24 = ptrtoint ptr %dclk16 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %dclk16, align 4
  %call17 = tail call i32 %23(ptr noundef %adev, i32 noundef %5, i32 noundef %25) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_notify_link_speed_change_after_state_change(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_new_state) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ps_priv.i.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 9
  %2 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %3, align 4
  %conv.i = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %cmp1.not.i = icmp eq i16 %5, 0
  br i1 %cmp1.not.i, label %entry.si_get_maximum_link_speed.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.si_get_maximum_link_speed.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_maximum_link_speed.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %max_speed.03.i = phi i16 [ %spec.select.i, %for.body.i.for.body.i_crit_edge ], [ 0, %entry.for.body.i_crit_edge ]
  %i.02.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %entry.for.body.i_crit_edge ]
  %pcie_gen.i = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.02.i, i32 5
  %6 = ptrtoint ptr %pcie_gen.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pcie_gen.i, align 4
  %conv3.i = zext i16 %max_speed.03.i to i32
  %conv4.i = and i32 %7, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv4.i, i32 %conv3.i)
  %cmp5.i = icmp ugt i32 %conv4.i, %conv3.i
  %conv2.i = trunc i32 %7 to i16
  %spec.select.i = select i1 %cmp5.i, i16 %conv2.i, i16 %max_speed.03.i
  %inc.i = add nuw nsw i32 %i.02.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.end.loopexit.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.end.loopexit.i:                               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %phi.cast.i = zext i16 %spec.select.i to i32
  %phi.bo = add nsw i32 %phi.cast.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %phi.bo)
  %phi.cmp = icmp ult i32 %phi.bo, 2
  br label %si_get_maximum_link_speed.exit

si_get_maximum_link_speed.exit:                   ; preds = %for.end.loopexit.i, %entry.si_get_maximum_link_speed.exit_crit_edge
  %max_speed.0.lcssa.i = phi i1 [ false, %entry.si_get_maximum_link_speed.exit_crit_edge ], [ %phi.cmp, %for.end.loopexit.i ]
  %pspp_notify_required = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 16
  %8 = ptrtoint ptr %pspp_notify_required to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %pspp_notify_required, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %max_speed.0.lcssa.i
  br i1 %or.cond, label %si_get_maximum_link_speed.exit.cleanup_crit_edge, label %land.lhs.true.critedge

si_get_maximum_link_speed.exit.cleanup_crit_edge: ; preds = %si_get_maximum_link_speed.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.critedge:                           ; preds = %si_get_maximum_link_speed.exit
  call void @__sanitizer_cov_trace_pc() #16
  %pciep_rreg.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 41
  %10 = ptrtoint ptr %pciep_rreg.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pciep_rreg.i, align 8
  %call.i = tail call i32 %11(ptr noundef %adev, i32 noundef 164) #14
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true.critedge, %si_get_maximum_link_speed.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_set_power_state_conditionally_enable_ulv(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_new_state) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ulv1 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %ulv1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %ulv1, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then:                                          ; preds = %entry
  %ps_priv.i.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 9
  %4 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ps_priv.i.i, align 4
  %mclk.i = getelementptr inbounds %struct.si_ps, ptr %5, i32 0, i32 2, i32 0, i32 1
  %6 = ptrtoint ptr %mclk.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mclk.i, align 4
  %mclk3.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7, i32 4, i32 1
  %8 = ptrtoint ptr %mclk3.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mclk3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp.not.i = icmp eq i32 %7, %9
  br i1 %cmp.not.i, label %for.cond.preheader.i, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader.i:                             ; preds = %if.then
  %vddc_dependency_on_dispclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 4
  %10 = ptrtoint ptr %vddc_dependency_on_dispclk.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vddc_dependency_on_dispclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp444.not.i = icmp eq i32 %11, 0
  br i1 %cmp444.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %current_dispclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 61, i32 6
  %12 = ptrtoint ptr %current_dispclk.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %current_dispclk.i, align 4
  %entries.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 4, i32 1
  %14 = ptrtoint ptr %entries.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %entries.i, align 4
  %vddc.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7, i32 4, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.045.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx9.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %15, i32 %i.045.i
  %16 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx9.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %17)
  %cmp10.not.i = icmp ugt i32 %13, %17
  br i1 %cmp10.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then11.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then11.i:                                      ; preds = %for.body.i
  %18 = ptrtoint ptr %vddc.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vddc.i, align 4
  %v.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %15, i32 %i.045.i, i32 1
  %20 = ptrtoint ptr %v.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %v.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %19, i16 %21)
  %cmp20.i = icmp ult i16 %19, %21
  br i1 %cmp20.i, label %if.then11.i.cleanup_crit_edge, label %if.then11.i.for.inc.i_crit_edge

if.then11.i.for.inc.i_crit_edge:                  ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then11.i.cleanup_crit_edge:                    ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.i:                                        ; preds = %if.then11.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.045.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %11
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %vclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 3
  %22 = ptrtoint ptr %vclk.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp25.not.i = icmp eq i32 %23, 0
  br i1 %cmp25.not.i, label %si_is_state_ulv_compatible.exit, label %for.end.i.cleanup_crit_edge

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

si_is_state_ulv_compatible.exit:                  ; preds = %for.end.i
  %dclk.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_new_state, i32 0, i32 4
  %24 = ptrtoint ptr %dclk.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %dclk.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp27.not.i = icmp eq i32 %25, 0
  br i1 %cmp27.not.i, label %if.then3, label %si_is_state_ulv_compatible.exit.cleanup_crit_edge

si_is_state_ulv_compatible.exit.cleanup_crit_edge: ; preds = %si_is_state_ulv_compatible.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3:                                         ; preds = %si_is_state_ulv_compatible.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 98) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call4)
  %cmp = icmp eq i8 %call4, 1
  %cond = select i1 %cmp, i32 0, i32 -22
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %si_is_state_ulv_compatible.exit.cleanup_crit_edge, %for.end.i.cleanup_crit_edge, %if.then11.i.cleanup_crit_edge, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond, %if.then3 ], [ 0, %si_is_state_ulv_compatible.exit.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.then.cleanup_crit_edge ], [ 0, %for.end.i.cleanup_crit_edge ], [ 0, %if.then11.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_power_control_set_level(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 65) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i)
  %cmp.not.i = icmp eq i8 %call.i, 1
  br i1 %cmp.not.i, label %if.end.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %entry
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 545, i32 noundef 1, i32 noundef 0) #14
  %call.i.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 130) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i.i)
  %cmp4.i = icmp eq i8 %call.i.i, 1
  br i1 %cmp4.i, label %if.end, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %if.end.i
  %call.i40 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 16) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i40)
  %cmp.not.i41 = icmp eq i8 %call.i40, 1
  br i1 %cmp.not.i41, label %if.end.i44, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i44:                                       ; preds = %if.end
  %call2.i = tail call zeroext i8 @amdgpu_si_wait_for_smc_inactive(ptr noundef %adev) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call2.i)
  %cmp4.i42 = icmp eq i8 %call2.i, 1
  br i1 %cmp4.i42, label %if.end4, label %if.end.i44.cleanup_crit_edge

if.end.i44.cleanup_crit_edge:                     ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end.i44
  %call5 = tail call fastcc i32 @si_populate_smc_tdp_limits(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i.i, align 4
  %enable_power_containment.i = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %enable_power_containment.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %enable_power_containment.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %if.end8.if.end12_crit_edge, label %if.then.i

if.end8.if.end12_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then.i:                                        ; preds = %if.end8
  %smc_statetable.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37
  %4 = call ptr @memset(ptr %smc_statetable.i, i32 0, i32 3012)
  %near_tdp_limit_adjusted.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 25
  %5 = ptrtoint ptr %near_tdp_limit_adjusted.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %near_tdp_limit_adjusted.i, align 4
  %mul.i = mul i32 %6, 1000
  %NearTDPLimit.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 7, i32 1
  %7 = ptrtoint ptr %NearTDPLimit.i to i32
  call void @__asan_storeN_noabort(i32 %7, i32 4)
  store i32 %mul.i, ptr %NearTDPLimit.i, align 1
  %8 = load i32, ptr %near_tdp_limit_adjusted.i, align 4
  %mul7.i = mul i32 %8, 80
  %div.i = udiv i32 %mul7.i, 100
  %mul9.i = mul i32 %div.i, 1000
  %SafePowerLimit.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 7, i32 2
  %9 = ptrtoint ptr %SafePowerLimit.i to i32
  call void @__asan_storeN_noabort(i32 %9, i32 4)
  store i32 %mul9.i, ptr %SafePowerLimit.i, align 1
  %state_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 21
  %10 = ptrtoint ptr %state_table_start.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state_table_start.i, align 4
  %add11.i = add i32 %11, 168
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %12 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sram_end.i, align 4
  %call14.i = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add11.i, ptr noundef %NearTDPLimit.i, i32 noundef 8, i32 noundef %13) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.then.i.if.end12_crit_edge, label %if.then.i.cleanup_crit_edge

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i.if.end12_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.end12:                                         ; preds = %if.then.i.if.end12_crit_edge, %if.end8.if.end12_crit_edge
  %call.i46 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 128) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i46)
  %cmp.not.i47 = icmp eq i8 %call.i46, 1
  br i1 %cmp.not.i47, label %if.end.i51, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i51:                                       ; preds = %if.end12
  %call2.i48 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 17) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call2.i48)
  %cmp4.i49 = icmp eq i8 %call2.i48, 1
  br i1 %cmp4.i49, label %if.end16, label %if.end.i51.cleanup_crit_edge

if.end.i51.cleanup_crit_edge:                     ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #16
  %call.i53 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 32) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i53)
  %cmp.i = icmp eq i8 %call.i53, 1
  %.call17 = select i1 %cmp.i, i32 0, i32 -22
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.i51.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.i44.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end4.cleanup_crit_edge ], [ %.call17, %if.end16 ], [ %call14.i, %if.then.i.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.i44.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %if.end.i51.cleanup_crit_edge ], [ -22, %if.end12.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef, i16 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_device_wreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @amdgpu_si_wait_for_smc_inactive(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_convert_power_level_to_smc(ptr noundef %adev, ptr nocapture noundef readonly %pl, ptr nocapture noundef %level) unnamed_addr #1 align 64 {
entry:
  %mpll_param.i = alloca %struct.atom_mpll_param, align 4
  %ss.i = alloca %struct.amdgpu_atom_ss, align 2
  %sclk_tmp.i = alloca %struct.SISLANDS_SMC_SCLK_VALUE, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %pcie_performance_request = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %pcie_performance_request to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %pcie_performance_request, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %force_pcie_gen = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 9
  %4 = ptrtoint ptr %force_pcie_gen to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %force_pcie_gen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %5)
  %cmp.not = icmp eq i32 %5, 65535
  br i1 %cmp.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %pcie_gen = getelementptr inbounds %struct.rv7xx_pl, ptr %pl, i32 0, i32 5
  %6 = ptrtoint ptr %pcie_gen to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pcie_gen, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %land.lhs.true.if.end_crit_edge
  %.sink = phi i32 [ %7, %if.else ], [ %5, %land.lhs.true.if.end_crit_edge ]
  %conv4 = trunc i32 %.sink to i8
  %gen2PCIE5 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 2
  %8 = ptrtoint ptr %gen2PCIE5 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv4, ptr %gen2PCIE5, align 1
  %9 = ptrtoint ptr %pl to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pl, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %sclk_tmp.i) #14
  %11 = call ptr @memset(ptr %sclk_tmp.i, i32 255, i32 28)
  %call.i = call fastcc i32 @si_calculate_sclk_params(ptr noundef %adev, i32 noundef %10, ptr noundef nonnull %sclk_tmp.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end10, label %si_populate_sclk_value.exit

si_populate_sclk_value.exit:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %sclk_tmp.i) #14
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %sclk6 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 10
  %12 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_tmp.i, i32 0, i32 6
  %13 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_tmp.i, i32 0, i32 5
  %14 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_tmp.i, i32 0, i32 4
  %15 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_tmp.i, i32 0, i32 3
  %16 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_tmp.i, i32 0, i32 2
  %17 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_tmp.i, i32 0, i32 1
  %18 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %12, align 4
  %sclk_value1.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 10, i32 6
  %20 = ptrtoint ptr %sclk_value1.i to i32
  call void @__asan_storeN_noabort(i32 %20, i32 4)
  store i32 %19, ptr %sclk_value1.i, align 1
  %21 = ptrtoint ptr %sclk_tmp.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sclk_tmp.i, align 4
  %23 = ptrtoint ptr %sclk6 to i32
  call void @__asan_storeN_noabort(i32 %23, i32 4)
  store i32 %22, ptr %sclk6, align 1
  %24 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %17, align 4
  %vCG_SPLL_FUNC_CNTL_23.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 10, i32 1
  %26 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_23.i to i32
  call void @__asan_storeN_noabort(i32 %26, i32 4)
  store i32 %25, ptr %vCG_SPLL_FUNC_CNTL_23.i, align 1
  %27 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %16, align 4
  %vCG_SPLL_FUNC_CNTL_34.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 10, i32 2
  %29 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_34.i to i32
  call void @__asan_storeN_noabort(i32 %29, i32 4)
  store i32 %28, ptr %vCG_SPLL_FUNC_CNTL_34.i, align 1
  %30 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %15, align 4
  %vCG_SPLL_FUNC_CNTL_45.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 10, i32 3
  %32 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_45.i to i32
  call void @__asan_storeN_noabort(i32 %32, i32 4)
  store i32 %31, ptr %vCG_SPLL_FUNC_CNTL_45.i, align 1
  %33 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %14, align 4
  %vCG_SPLL_SPREAD_SPECTRUM6.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 10, i32 4
  %35 = ptrtoint ptr %vCG_SPLL_SPREAD_SPECTRUM6.i to i32
  call void @__asan_storeN_noabort(i32 %35, i32 4)
  store i32 %34, ptr %vCG_SPLL_SPREAD_SPECTRUM6.i, align 1
  %36 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %13, align 4
  %vCG_SPLL_SPREAD_SPECTRUM_27.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 10, i32 5
  %38 = ptrtoint ptr %vCG_SPLL_SPREAD_SPECTRUM_27.i to i32
  call void @__asan_storeN_noabort(i32 %38, i32 4)
  store i32 %37, ptr %vCG_SPLL_SPREAD_SPECTRUM_27.i, align 1
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %sclk_tmp.i) #14
  %mcFlags = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 6
  %39 = ptrtoint ptr %mcFlags to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 0, ptr %mcFlags, align 1
  %mclk_stutter_mode_threshold = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 36
  %40 = ptrtoint ptr %mclk_stutter_mode_threshold to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %mclk_stutter_mode_threshold, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool11.not = icmp eq i32 %41, 0
  br i1 %tobool11.not, label %if.end10.if.end35_crit_edge, label %land.lhs.true12

if.end10.if.end35_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

land.lhs.true12:                                  ; preds = %if.end10
  %mclk = getelementptr inbounds %struct.rv7xx_pl, ptr %pl, i32 0, i32 1
  %42 = ptrtoint ptr %mclk to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %mclk, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %41)
  %cmp14.not = icmp ugt i32 %43, %41
  br i1 %cmp14.not, label %land.lhs.true12.if.end35_crit_edge, label %land.lhs.true16

land.lhs.true12.if.end35_crit_edge:               ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

land.lhs.true16:                                  ; preds = %land.lhs.true12
  %uvd_enabled = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 13
  %44 = ptrtoint ptr %uvd_enabled to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %uvd_enabled, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool17.not = icmp eq i8 %45, 0
  br i1 %tobool17.not, label %land.lhs.true18, label %land.lhs.true16.if.end35_crit_edge

land.lhs.true16.if.end35_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

land.lhs.true18:                                  ; preds = %land.lhs.true16
  %call19 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 6965, i32 noundef 0) #14
  %and = and i32 %call19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool20.not = icmp eq i32 %and, 0
  br i1 %tobool20.not, label %land.lhs.true18.if.end35_crit_edge, label %land.lhs.true21

land.lhs.true18.if.end35_crit_edge:               ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %new_active_crtc_count = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 18
  %46 = ptrtoint ptr %new_active_crtc_count to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %new_active_crtc_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %47)
  %cmp22 = icmp slt i32 %47, 3
  br i1 %cmp22, label %if.then24, label %land.lhs.true21.if.end35_crit_edge

land.lhs.true21.if.end35_crit_edge:               ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.then24:                                        ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #16
  %48 = ptrtoint ptr %mcFlags to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %mcFlags, align 1
  %50 = or i8 %49, 8
  store i8 %50, ptr %mcFlags, align 1
  br label %if.end35

if.end35:                                         ; preds = %if.then24, %land.lhs.true21.if.end35_crit_edge, %land.lhs.true18.if.end35_crit_edge, %land.lhs.true16.if.end35_crit_edge, %land.lhs.true12.if.end35_crit_edge, %if.end10.if.end35_crit_edge
  %vram_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 21
  %51 = ptrtoint ptr %vram_type to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %vram_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %52)
  %cmp36 = icmp eq i32 %52, 5
  %mclk39 = getelementptr inbounds %struct.rv7xx_pl, ptr %pl, i32 0, i32 1
  %53 = ptrtoint ptr %mclk39 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %mclk39, align 4
  br i1 %cmp36, label %if.then38, label %if.else.i267

if.then38:                                        ; preds = %if.end35
  %mclk_edc_enable_threshold = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 38
  %55 = ptrtoint ptr %mclk_edc_enable_threshold to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %mclk_edc_enable_threshold, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %56)
  %cmp40 = icmp ugt i32 %54, %56
  br i1 %cmp40, label %if.then42, label %if.then38.if.end47_crit_edge

if.then38.if.end47_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end47

if.then42:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #16
  %57 = ptrtoint ptr %mcFlags to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %mcFlags, align 1
  %59 = or i8 %58, 1
  store i8 %59, ptr %mcFlags, align 1
  br label %if.end47

if.end47:                                         ; preds = %if.then42, %if.then38.if.end47_crit_edge
  %60 = ptrtoint ptr %mclk39 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %mclk39, align 4
  %mclk_edc_wr_enable_threshold = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 17
  %62 = ptrtoint ptr %mclk_edc_wr_enable_threshold to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %mclk_edc_wr_enable_threshold, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %63)
  %cmp49 = icmp ugt i32 %61, %63
  br i1 %cmp49, label %if.then51, label %if.end47.if.end56_crit_edge

if.end47.if.end56_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end56

if.then51:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #16
  %64 = ptrtoint ptr %mcFlags to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %mcFlags, align 1
  %66 = or i8 %65, 2
  store i8 %66, ptr %mcFlags, align 1
  %67 = ptrtoint ptr %mclk39 to i32
  call void @__asan_load4_noabort(i32 %67)
  %.pr = load i32, ptr %mclk39, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then51, %if.end47.if.end56_crit_edge
  %68 = phi i32 [ %.pr, %if.then51 ], [ %61, %if.end47.if.end56_crit_edge ]
  %69 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %priv.i, align 4
  %mclk_strobe_mode_threshold.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %70, i32 0, i32 37
  %71 = ptrtoint ptr %mclk_strobe_mode_threshold.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %mclk_strobe_mode_threshold.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %72, i32 %68)
  %cmp.not.i = icmp ult i32 %72, %68
  %73 = ptrtoint ptr %vram_type to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %vram_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %74)
  %cmp1.i = icmp eq i32 %74, 5
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %if.end56
  br i1 %cmp.not.i, label %if.else6.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 12500, i32 %68)
  %cmp.i.i = icmp ult i32 %68, 12500
  br i1 %cmp.i.i, label %if.then.i.i.si_get_strobe_mode_settings.exit_crit_edge, label %if.else.i.i

if.then.i.i.si_get_strobe_mode_settings.exit_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit

if.else.i.i:                                      ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 47500, i32 %68)
  %cmp2.i.i = icmp ugt i32 %68, 47500
  br i1 %cmp2.i.i, label %if.else.i.i.si_get_strobe_mode_settings.exit_crit_edge, label %if.else4.i.i

if.else.i.i.si_get_strobe_mode_settings.exit_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit

if.else4.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %75 = trunc i32 %68 to i16
  %div.lhs.trunc.i.i = add i16 %75, -10000
  %div26.i.i = udiv i16 %div.lhs.trunc.i.i, 2500
  %conv.i.i = trunc i16 %div26.i.i to i8
  br label %si_get_strobe_mode_settings.exit

if.else6.i.i:                                     ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 65000, i32 %68)
  %cmp7.i.i = icmp ult i32 %68, 65000
  br i1 %cmp7.i.i, label %if.else6.i.i.si_get_strobe_mode_settings.exit_crit_edge, label %if.else10.i.i

if.else6.i.i.si_get_strobe_mode_settings.exit_crit_edge: ; preds = %if.else6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit

if.else10.i.i:                                    ; preds = %if.else6.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 135000, i32 %68)
  %cmp11.i.i = icmp ugt i32 %68, 135000
  br i1 %cmp11.i.i, label %if.else10.i.i.si_get_strobe_mode_settings.exit_crit_edge, label %if.else14.i.i

if.else10.i.i.si_get_strobe_mode_settings.exit_crit_edge: ; preds = %if.else10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit

if.else14.i.i:                                    ; preds = %if.else10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub15.i.i = add nsw i32 %68, -60000
  %div16.i.i = udiv i32 %sub15.i.i, 5000
  %conv17.i.i = trunc i32 %div16.i.i to i8
  br label %si_get_strobe_mode_settings.exit

if.else.i:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_const_cmp4(i32 10000, i32 %68)
  %cmp.i15.i = icmp ult i32 %68, 10000
  br i1 %cmp.i15.i, label %if.else.i.si_get_strobe_mode_settings.exit_crit_edge, label %if.else.i16.i

if.else.i.si_get_strobe_mode_settings.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit

if.else.i16.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 79999, i32 %68)
  %cmp1.i.i = icmp ugt i32 %68, 79999
  br i1 %cmp1.i.i, label %if.else.i16.i.si_get_strobe_mode_settings.exit_crit_edge, label %if.else3.i.i

if.else.i16.i.si_get_strobe_mode_settings.exit_crit_edge: ; preds = %if.else.i16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit

if.else3.i.i:                                     ; preds = %if.else.i16.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add nsw i32 %68, -10000
  %div.i.i = udiv i32 %sub.i.i, 5000
  %76 = trunc i32 %div.i.i to i8
  %conv.i17.i = add nuw nsw i8 %76, 1
  br label %si_get_strobe_mode_settings.exit

si_get_strobe_mode_settings.exit:                 ; preds = %if.else3.i.i, %if.else.i16.i.si_get_strobe_mode_settings.exit_crit_edge, %if.else.i.si_get_strobe_mode_settings.exit_crit_edge, %if.else14.i.i, %if.else10.i.i.si_get_strobe_mode_settings.exit_crit_edge, %if.else6.i.i.si_get_strobe_mode_settings.exit_crit_edge, %if.else4.i.i, %if.else.i.i.si_get_strobe_mode_settings.exit_crit_edge, %if.then.i.i.si_get_strobe_mode_settings.exit_crit_edge
  %result.0.i = phi i8 [ %conv.i.i, %if.else4.i.i ], [ %conv17.i.i, %if.else14.i.i ], [ 0, %if.then.i.i.si_get_strobe_mode_settings.exit_crit_edge ], [ 15, %if.else.i.i.si_get_strobe_mode_settings.exit_crit_edge ], [ 0, %if.else6.i.i.si_get_strobe_mode_settings.exit_crit_edge ], [ 15, %if.else10.i.i.si_get_strobe_mode_settings.exit_crit_edge ], [ %conv.i17.i, %if.else3.i.i ], [ 0, %if.else.i.si_get_strobe_mode_settings.exit_crit_edge ], [ 15, %if.else.i16.i.si_get_strobe_mode_settings.exit_crit_edge ]
  %77 = or i8 %result.0.i, 16
  %spec.select.i = select i1 %cmp.not.i, i8 %result.0.i, i8 %77
  %strobeMode = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 5
  %78 = ptrtoint ptr %strobeMode to i32
  call void @__asan_store1_noabort(i32 %78)
  store i8 %spec.select.i, ptr %strobeMode, align 1
  %79 = and i8 %spec.select.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %tobool62.not = icmp eq i8 %79, 0
  br i1 %tobool62.not, label %si_get_strobe_mode_settings.exit.if.end99_crit_edge, label %if.then63

si_get_strobe_mode_settings.exit.if.end99_crit_edge: ; preds = %si_get_strobe_mode_settings.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end99

if.then63:                                        ; preds = %si_get_strobe_mode_settings.exit
  %80 = ptrtoint ptr %mclk39 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %mclk39, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12500, i32 %81)
  %cmp.i = icmp ult i32 %81, 12500
  br i1 %cmp.i, label %if.then63.si_get_mclk_frequency_ratio.exit_crit_edge, label %if.else.i243

if.then63.si_get_mclk_frequency_ratio.exit_crit_edge: ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_mclk_frequency_ratio.exit

if.else.i243:                                     ; preds = %if.then63
  call void @__sanitizer_cov_trace_const_cmp4(i32 47500, i32 %81)
  %cmp2.i = icmp ugt i32 %81, 47500
  br i1 %cmp2.i, label %if.else.i243.si_get_mclk_frequency_ratio.exit_crit_edge, label %if.else4.i

if.else.i243.si_get_mclk_frequency_ratio.exit_crit_edge: ; preds = %if.else.i243
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_mclk_frequency_ratio.exit

if.else4.i:                                       ; preds = %if.else.i243
  call void @__sanitizer_cov_trace_pc() #16
  %82 = trunc i32 %81 to i16
  %div.lhs.trunc.i = add i16 %82, -10000
  %div26.i = udiv i16 %div.lhs.trunc.i, 2500
  %conv.i = zext i16 %div26.i to i32
  br label %si_get_mclk_frequency_ratio.exit

si_get_mclk_frequency_ratio.exit:                 ; preds = %if.else4.i, %if.else.i243.si_get_mclk_frequency_ratio.exit_crit_edge, %if.then63.si_get_mclk_frequency_ratio.exit_crit_edge
  %mc_para_index.0.i = phi i32 [ %conv.i, %if.else4.i ], [ 0, %if.then63.si_get_mclk_frequency_ratio.exit_crit_edge ], [ 15, %if.else.i243.si_get_mclk_frequency_ratio.exit_crit_edge ]
  %call67 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2713, i32 noundef 0) #14
  %shr = lshr i32 %call67, 16
  %and68 = and i32 %shr, 15
  call void @__sanitizer_cov_trace_cmp4(i32 %and68, i32 %mc_para_index.0.i)
  %cmp69.not = icmp ugt i32 %and68, %mc_para_index.0.i
  %. = select i1 %cmp69.not, i32 2710, i32 2709
  br label %if.end99.sink.split

if.else.i267:                                     ; preds = %if.end35
  %83 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %priv.i, align 4
  %mclk_strobe_mode_threshold.i245 = getelementptr inbounds %struct.rv7xx_power_info, ptr %84, i32 0, i32 37
  %85 = ptrtoint ptr %mclk_strobe_mode_threshold.i245 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %mclk_strobe_mode_threshold.i245, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %86, i32 %54)
  %cmp.not.i246 = icmp ult i32 %86, %54
  call void @__sanitizer_cov_trace_const_cmp4(i32 10000, i32 %54)
  %cmp.i15.i266 = icmp ult i32 %54, 10000
  br i1 %cmp.i15.i266, label %if.else.i267.si_get_strobe_mode_settings.exit276_crit_edge, label %if.else.i16.i269

if.else.i267.si_get_strobe_mode_settings.exit276_crit_edge: ; preds = %if.else.i267
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit276

if.else.i16.i269:                                 ; preds = %if.else.i267
  call void @__sanitizer_cov_trace_const_cmp4(i32 79999, i32 %54)
  %cmp1.i.i268 = icmp ugt i32 %54, 79999
  br i1 %cmp1.i.i268, label %if.else.i16.i269.si_get_strobe_mode_settings.exit276_crit_edge, label %if.else3.i.i273

if.else.i16.i269.si_get_strobe_mode_settings.exit276_crit_edge: ; preds = %if.else.i16.i269
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit276

if.else3.i.i273:                                  ; preds = %if.else.i16.i269
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i270 = add nsw i32 %54, -10000
  %div.i.i271 = udiv i32 %sub.i.i270, 5000
  %87 = trunc i32 %div.i.i271 to i8
  %conv.i17.i272 = add nuw nsw i8 %87, 1
  br label %si_get_strobe_mode_settings.exit276

si_get_strobe_mode_settings.exit276:              ; preds = %if.else3.i.i273, %if.else.i16.i269.si_get_strobe_mode_settings.exit276_crit_edge, %if.else.i267.si_get_strobe_mode_settings.exit276_crit_edge
  %result.0.i274 = phi i8 [ %conv.i17.i272, %if.else3.i.i273 ], [ 0, %if.else.i267.si_get_strobe_mode_settings.exit276_crit_edge ], [ 15, %if.else.i16.i269.si_get_strobe_mode_settings.exit276_crit_edge ]
  %88 = or i8 %result.0.i274, 16
  %spec.select.i275 = select i1 %cmp.not.i246, i8 %result.0.i274, i8 %88
  %strobeMode91 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 5
  %89 = ptrtoint ptr %strobeMode91 to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 %spec.select.i275, ptr %strobeMode91, align 1
  br label %if.end99.sink.split

if.end99.sink.split:                              ; preds = %si_get_strobe_mode_settings.exit276, %si_get_mclk_frequency_ratio.exit
  %.sink336 = phi i32 [ 2709, %si_get_strobe_mode_settings.exit276 ], [ %., %si_get_mclk_frequency_ratio.exit ]
  %call78 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %.sink336, i32 noundef 0) #14
  %90 = and i32 %call78, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool81.not = icmp eq i32 %90, 0
  %phi.sel = select i1 %tobool81.not, i32 0, i32 768
  br label %if.end99

if.end99:                                         ; preds = %if.end99.sink.split, %si_get_strobe_mode_settings.exit.if.end99_crit_edge
  %dll_state_on.0.off0 = phi i32 [ 0, %si_get_strobe_mode_settings.exit.if.end99_crit_edge ], [ %phi.sel, %if.end99.sink.split ]
  %mclk101 = getelementptr inbounds %struct.rv7xx_pl, ptr %pl, i32 0, i32 1
  %91 = ptrtoint ptr %mclk101 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %mclk101, align 4
  %mclk102 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11
  %strobeMode103 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 5
  %93 = ptrtoint ptr %strobeMode103 to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load i8, ptr %strobeMode103, align 1
  %95 = and i8 %94, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %95)
  %cmp106 = icmp ne i8 %95, 0
  %96 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %priv.i, align 4
  %dll_cntl3.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 6
  %98 = ptrtoint ptr %dll_cntl3.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %dll_cntl3.i, align 4
  %mclk_pwrmgt_cntl5.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 7
  %100 = ptrtoint ptr %mclk_pwrmgt_cntl5.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %mclk_pwrmgt_cntl5.i, align 4
  %mpll_ad_func_cntl7.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 8
  %102 = ptrtoint ptr %mpll_ad_func_cntl7.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %mpll_ad_func_cntl7.i, align 4
  %mpll_dq_func_cntl9.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 9
  %104 = ptrtoint ptr %mpll_dq_func_cntl9.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %mpll_dq_func_cntl9.i, align 4
  %mpll_func_cntl11.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 10
  %106 = ptrtoint ptr %mpll_func_cntl11.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %mpll_func_cntl11.i, align 4
  %mpll_func_cntl_113.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 11
  %108 = ptrtoint ptr %mpll_func_cntl_113.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %mpll_func_cntl_113.i, align 4
  %mpll_func_cntl_215.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 12
  %110 = ptrtoint ptr %mpll_func_cntl_215.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %mpll_func_cntl_215.i, align 4
  %mpll_ss117.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 13
  %112 = ptrtoint ptr %mpll_ss117.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %mpll_ss117.i, align 4
  %mpll_ss219.i = getelementptr inbounds %struct.si_power_info, ptr %97, i32 0, i32 1, i32 14
  %114 = ptrtoint ptr %mpll_ss219.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %mpll_ss219.i, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %mpll_param.i) #14
  %116 = getelementptr inbounds %struct.atom_mpll_param, ptr %mpll_param.i, i32 0, i32 3
  %117 = getelementptr inbounds %struct.atom_mpll_param, ptr %mpll_param.i, i32 0, i32 5
  %118 = call ptr @memset(ptr %mpll_param.i, i32 255, i32 32)
  %call20.i = call i32 @amdgpu_atombios_get_memory_pll_dividers(ptr noundef %adev, i32 noundef %92, i1 noundef zeroext %cmp106, ptr noundef nonnull %mpll_param.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %tobool21.not.i = icmp eq i32 %call20.i, 0
  br i1 %tobool21.not.i, label %if.end.i, label %si_populate_mclk_value.exit

if.end.i:                                         ; preds = %if.end99
  %119 = getelementptr inbounds %struct.atom_mpll_param, ptr %mpll_param.i, i32 0, i32 4
  %120 = getelementptr inbounds %struct.atom_mpll_param, ptr %mpll_param.i, i32 0, i32 2
  %121 = getelementptr inbounds %struct.atom_mpll_param, ptr %mpll_param.i, i32 0, i32 1
  %and.i = and i32 %107, -267386881
  %122 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %120, align 4
  %shl.i = shl i32 %123, 20
  %or.i = or i32 %shl.i, %and.i
  %and22.i = and i32 %109, -268435444
  %124 = ptrtoint ptr %mpll_param.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %bf.load.i = load i32, ptr %mpll_param.i, align 4
  %bf.clear.i = shl i32 %bf.load.i, 16
  %shl23.i = and i32 %bf.clear.i, 268369920
  %125 = lshr i32 %bf.load.i, 8
  %shl26.i = and i32 %125, 65520
  %126 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %119, align 4
  %or27.i = or i32 %127, %and22.i
  %or29.i = or i32 %or27.i, %shl26.i
  %or30.i = or i32 %or29.i, %shl23.i
  %and31.i = and i32 %103, -8
  %128 = ptrtoint ptr %121 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %121, align 4
  %or33.i = or i32 %129, %and31.i
  %130 = ptrtoint ptr %vram_type to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %vram_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %131)
  %cmp.i279 = icmp eq i32 %131, 5
  br i1 %cmp.i279, label %if.then34.i, label %if.end.i.if.end41.i_crit_edge

if.end.i.if.end41.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41.i

if.then34.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %and35.i = and i32 %105, -24
  %132 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %117, align 4
  %shl36.i = shl i32 %133, 4
  %or39.i = or i32 %129, %and35.i
  %or40.i = or i32 %or39.i, %shl36.i
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then34.i, %if.end.i.if.end41.i_crit_edge
  %mpll_dq_func_cntl.0.i = phi i32 [ %or40.i, %if.then34.i ], [ %105, %if.end.i.if.end41.i_crit_edge ]
  %mclk_ss.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %97, i32 0, i32 8
  %134 = ptrtoint ptr %mclk_ss.i to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %mclk_ss.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %135)
  %tobool42.not.i = icmp eq i8 %135, 0
  br i1 %tobool42.not.i, label %if.end41.i.if.end112_crit_edge, label %if.then43.i

if.end41.i.if.end112_crit_edge:                   ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end112

if.then43.i:                                      ; preds = %if.end41.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ss.i) #14
  %136 = call ptr @memset(ptr %ss.i, i32 255, i32 16)
  %mpll.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 61, i32 2
  %137 = ptrtoint ptr %mpll.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %mpll.i, align 4
  %freq_nom.0.v.i = select i1 %cmp.i279, i32 2, i32 1
  %freq_nom.0.i = shl i32 %92, %freq_nom.0.v.i
  %call51.i = call zeroext i1 @amdgpu_atombios_get_asic_ss_info(ptr noundef %adev, ptr noundef nonnull %ss.i, i32 noundef 1, i32 noundef %freq_nom.0.i) #14
  br i1 %call51.i, label %if.then52.i, label %if.then43.i.if.end69.i_crit_edge

if.then43.i.if.end69.i_crit_edge:                 ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69.i

if.then52.i:                                      ; preds = %if.then43.i
  call void @__sanitizer_cov_trace_pc() #16
  %div.i = udiv i32 %freq_nom.0.i, %138
  %mul50.i = mul i32 %div.i, %div.i
  %mul53.i = mul i32 %138, 5
  %rate.i = getelementptr inbounds %struct.amdgpu_atom_ss, ptr %ss.i, i32 0, i32 7
  %139 = ptrtoint ptr %rate.i to i32
  call void @__asan_load2_noabort(i32 %139)
  %140 = load i16, ptr %rate.i, align 2
  %conv.i280 = zext i16 %140 to i32
  %div54.i = udiv i32 %mul53.i, %conv.i280
  %141 = ptrtoint ptr %ss.i to i32
  call void @__asan_load2_noabort(i32 %141)
  %142 = load i16, ptr %ss.i, align 2
  %conv55.i = zext i16 %142 to i32
  %mul56.i = mul nuw nsw i32 %conv.i280, 131
  %mul59.i = mul i32 %mul56.i, %conv55.i
  %div60.i = sdiv i32 %mul59.i, 100
  %mul61.i = mul i32 %mul50.i, %div60.i
  %div62.i = udiv i32 %mul61.i, %freq_nom.0.i
  %and63.i = and i32 %113, -67108864
  %or65.i = or i32 %div62.i, %and63.i
  %and66.i = and i32 %115, -4096
  %or68.i = or i32 %div54.i, %and66.i
  br label %if.end69.i

if.end69.i:                                       ; preds = %if.then52.i, %if.then43.i.if.end69.i_crit_edge
  %mpll_ss1.0.i = phi i32 [ %or65.i, %if.then52.i ], [ %113, %if.then43.i.if.end69.i_crit_edge ]
  %mpll_ss2.0.i = phi i32 [ %or68.i, %if.then52.i ], [ %115, %if.then43.i.if.end69.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ss.i) #14
  br label %if.end112

si_populate_mclk_value.exit:                      ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %mpll_param.i) #14
  br label %cleanup

if.end112:                                        ; preds = %if.end69.i, %if.end41.i.if.end112_crit_edge
  %mpll_ss1.1.i = phi i32 [ %mpll_ss1.0.i, %if.end69.i ], [ %113, %if.end41.i.if.end112_crit_edge ]
  %mpll_ss2.1.i = phi i32 [ %mpll_ss2.0.i, %if.end69.i ], [ %115, %if.end41.i.if.end112_crit_edge ]
  %and71.i = and i32 %101, -800
  %143 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %116, align 4
  %.masked.i = and i32 %144, -769
  %and78.i = or i32 %and71.i, %dll_state_on.0.off0
  %mclk_pwrmgt_cntl.0.i = or i32 %and78.i, %.masked.i
  %mclk_value.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 9
  %145 = ptrtoint ptr %mclk_value.i to i32
  call void @__asan_storeN_noabort(i32 %145, i32 4)
  store i32 %92, ptr %mclk_value.i, align 1
  %146 = ptrtoint ptr %mclk102 to i32
  call void @__asan_storeN_noabort(i32 %146, i32 4)
  store i32 %or.i, ptr %mclk102, align 1
  %vMPLL_FUNC_CNTL_1.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 1
  %147 = ptrtoint ptr %vMPLL_FUNC_CNTL_1.i to i32
  call void @__asan_storeN_noabort(i32 %147, i32 4)
  store i32 %or30.i, ptr %vMPLL_FUNC_CNTL_1.i, align 1
  %vMPLL_FUNC_CNTL_2.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 2
  %148 = ptrtoint ptr %vMPLL_FUNC_CNTL_2.i to i32
  call void @__asan_storeN_noabort(i32 %148, i32 4)
  store i32 %111, ptr %vMPLL_FUNC_CNTL_2.i, align 1
  %vMPLL_AD_FUNC_CNTL.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 3
  %149 = ptrtoint ptr %vMPLL_AD_FUNC_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %149, i32 4)
  store i32 %or33.i, ptr %vMPLL_AD_FUNC_CNTL.i, align 1
  %vMPLL_DQ_FUNC_CNTL.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 4
  %150 = ptrtoint ptr %vMPLL_DQ_FUNC_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %150, i32 4)
  store i32 %mpll_dq_func_cntl.0.i, ptr %vMPLL_DQ_FUNC_CNTL.i, align 1
  %vMCLK_PWRMGT_CNTL.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 5
  %151 = ptrtoint ptr %vMCLK_PWRMGT_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %151, i32 4)
  store i32 %mclk_pwrmgt_cntl.0.i, ptr %vMCLK_PWRMGT_CNTL.i, align 1
  %vDLL_CNTL.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 6
  %152 = ptrtoint ptr %vDLL_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %152, i32 4)
  store i32 %99, ptr %vDLL_CNTL.i, align 1
  %vMPLL_SS.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 7
  %153 = ptrtoint ptr %vMPLL_SS.i to i32
  call void @__asan_storeN_noabort(i32 %153, i32 4)
  store i32 %mpll_ss1.1.i, ptr %vMPLL_SS.i, align 1
  %vMPLL_SS2.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 11, i32 8
  %154 = ptrtoint ptr %vMPLL_SS2.i to i32
  call void @__asan_storeN_noabort(i32 %154, i32 4)
  store i32 %mpll_ss2.1.i, ptr %vMPLL_SS2.i, align 1
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %mpll_param.i) #14
  %vddc_voltage_table = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 19
  %vddc = getelementptr inbounds %struct.rv7xx_pl, ptr %pl, i32 0, i32 2
  %155 = ptrtoint ptr %vddc to i32
  call void @__asan_load2_noabort(i32 %155)
  %156 = load i16, ptr %vddc, align 4
  %vddc113 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 12
  %157 = ptrtoint ptr %vddc_voltage_table to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %vddc_voltage_table, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %158)
  %cmp3.not5.i = icmp eq i32 %158, 0
  br i1 %cmp3.not5.i, label %if.end112.si_populate_voltage_value.exit_crit_edge, label %if.end112.for.body.i_crit_edge

if.end112.for.body.i_crit_edge:                   ; preds = %if.end112
  br label %for.body.i

if.end112.si_populate_voltage_value.exit_crit_edge: ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end112.for.body.i_crit_edge
  %i.04.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end112.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.evergreen_power_info, ptr %1, i32 0, i32 19, i32 3, i32 %i.04.i
  %159 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %159)
  %160 = load i16, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %160, i16 %156)
  %cmp3.not.i = icmp ult i16 %160, %156
  br i1 %cmp3.not.i, label %for.inc.i, label %if.then.i281

if.then.i281:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i = trunc i32 %i.04.i to i8
  %index.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 12, i32 1
  %161 = ptrtoint ptr %index.i to i32
  call void @__asan_store1_noabort(i32 %161)
  store i8 %conv5.i, ptr %index.i, align 1
  %162 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %162)
  %163 = load i16, ptr %arrayidx.i, align 4
  %164 = ptrtoint ptr %vddc113 to i32
  call void @__asan_storeN_noabort(i32 %164, i32 2)
  store i16 %163, ptr %vddc113, align 1
  br label %si_populate_voltage_value.exit

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.04.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %158
  br i1 %exitcond.not.i, label %for.inc.i.si_populate_voltage_value.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.si_populate_voltage_value.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit

si_populate_voltage_value.exit:                   ; preds = %for.inc.i.si_populate_voltage_value.exit_crit_edge, %if.then.i281, %if.end112.si_populate_voltage_value.exit_crit_edge
  %i.02.i = phi i32 [ %i.04.i, %if.then.i281 ], [ 0, %if.end112.si_populate_voltage_value.exit_crit_edge ], [ %158, %for.inc.i.si_populate_voltage_value.exit_crit_edge ]
  %165 = ptrtoint ptr %vddc_voltage_table to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %vddc_voltage_table, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.02.i, i32 %166)
  %cmp11.not.i = icmp ult i32 %i.02.i, %166
  br i1 %cmp11.not.i, label %if.end117, label %si_populate_voltage_value.exit.cleanup_crit_edge

si_populate_voltage_value.exit.cleanup_crit_edge: ; preds = %si_populate_voltage_value.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end117:                                        ; preds = %si_populate_voltage_value.exit
  %167 = ptrtoint ptr %vddc113 to i32
  call void @__asan_loadN_noabort(i32 %167, i32 2)
  %168 = load i16, ptr %vddc113, align 1
  %dyn_state.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21
  %cac_leakage_table.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18
  %entries.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18, i32 1
  %169 = ptrtoint ptr %entries.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %entries.i, align 4
  %tobool.not.i282 = icmp eq ptr %170, null
  br i1 %tobool.not.i282, label %if.end117.if.end122_crit_edge, label %if.then.i284

if.end117.if.end122_crit_edge:                    ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end122

if.then.i284:                                     ; preds = %if.end117
  %platform_caps.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 13
  %171 = ptrtoint ptr %platform_caps.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %platform_caps.i, align 4
  %and.i283 = and i32 %172, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i283)
  %tobool3.not.i = icmp eq i32 %and.i283, 0
  br i1 %tobool3.not.i, label %if.else120.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i284
  %entries8.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  %173 = ptrtoint ptr %entries8.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %entries8.i, align 4
  %cmp.i285 = icmp eq ptr %174, null
  br i1 %cmp.i285, label %if.then4.i.cleanup_crit_edge, label %for.cond.preheader.i

if.then4.i.cleanup_crit_edge:                     ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader.i:                             ; preds = %if.then4.i
  %175 = ptrtoint ptr %dyn_state.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %dyn_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %176)
  %cmp14183.not.i = icmp eq i32 %176, 0
  br i1 %cmp14183.not.i, label %for.cond.preheader.i.if.end122_crit_edge, label %for.cond.preheader.i.for.body.i288_crit_edge

for.cond.preheader.i.for.body.i288_crit_edge:     ; preds = %for.cond.preheader.i
  br label %for.body.i288

for.cond.preheader.i.if.end122_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end122

for.cond.i:                                       ; preds = %for.body.i288
  %inc.i286 = add i16 %v_index.0184.i, 1
  %conv.i287 = zext i16 %inc.i286 to i32
  %cmp14.i = icmp ugt i32 %176, %conv.i287
  br i1 %cmp14.i, label %for.cond.i.for.body.i288_crit_edge, label %for.cond.i.for.body68.i_crit_edge

for.cond.i.for.body68.i_crit_edge:                ; preds = %for.cond.i
  br label %for.body68.i

for.cond.i.for.body.i288_crit_edge:               ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i288

for.body.i288:                                    ; preds = %for.cond.i.for.body.i288_crit_edge, %for.cond.preheader.i.for.body.i288_crit_edge
  %conv185.i = phi i32 [ %conv.i287, %for.cond.i.for.body.i288_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i288_crit_edge ]
  %v_index.0184.i = phi i16 [ %inc.i286, %for.cond.i.for.body.i288_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i288_crit_edge ]
  %v.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %174, i32 %conv185.i, i32 1
  %177 = ptrtoint ptr %v.i to i32
  call void @__asan_load2_noabort(i32 %177)
  %178 = load i16, ptr %v.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %168, i16 %178)
  %cmp24.i = icmp eq i16 %168, %178
  br i1 %cmp24.i, label %if.then26.i, label %for.cond.i

if.then26.i:                                      ; preds = %for.body.i288
  call void @__sanitizer_cov_trace_pc() #16
  %179 = ptrtoint ptr %cac_leakage_table.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %cac_leakage_table.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %180, i32 %conv185.i)
  %cmp33.i = icmp ugt i32 %180, %conv185.i
  %sub.i = add i32 %180, -1
  %spec.select.i289 = select i1 %cmp33.i, i32 %conv185.i, i32 %sub.i
  br label %cleanup.sink.split.i

for.cond59.i:                                     ; preds = %for.body68.i
  %inc117.i = add i16 %v_index.1187.i, 1
  %conv60.i = zext i16 %inc117.i to i32
  %cmp66.i = icmp ugt i32 %176, %conv60.i
  br i1 %cmp66.i, label %for.cond59.i.for.body68.i_crit_edge, label %for.cond59.i.if.end122_crit_edge

for.cond59.i.if.end122_crit_edge:                 ; preds = %for.cond59.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end122

for.cond59.i.for.body68.i_crit_edge:              ; preds = %for.cond59.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body68.i

for.body68.i:                                     ; preds = %for.cond59.i.for.body68.i_crit_edge, %for.cond.i.for.body68.i_crit_edge
  %conv60188.i = phi i32 [ %conv60.i, %for.cond59.i.for.body68.i_crit_edge ], [ 0, %for.cond.i.for.body68.i_crit_edge ]
  %v_index.1187.i = phi i16 [ %inc117.i, %for.cond59.i.for.body68.i_crit_edge ], [ 0, %for.cond.i.for.body68.i_crit_edge ]
  %v78.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %174, i32 %conv60188.i, i32 1
  %181 = ptrtoint ptr %v78.i to i32
  call void @__asan_load2_noabort(i32 %181)
  %182 = load i16, ptr %v78.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %168, i16 %182)
  %cmp80.not.i = icmp ugt i16 %168, %182
  br i1 %cmp80.not.i, label %for.cond59.i, label %if.then82.i

if.then82.i:                                      ; preds = %for.body68.i
  call void @__sanitizer_cov_trace_pc() #16
  %183 = ptrtoint ptr %cac_leakage_table.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %cac_leakage_table.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %184, i32 %conv60188.i)
  %cmp89.i = icmp ugt i32 %184, %conv60188.i
  %sub111.i = add i32 %184, -1
  %spec.select193.i = select i1 %cmp89.i, i32 %conv60188.i, i32 %sub111.i
  br label %cleanup.sink.split.i

if.else120.i:                                     ; preds = %if.then.i284
  %index.i290 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 12, i32 1
  %185 = ptrtoint ptr %index.i290 to i32
  call void @__asan_load1_noabort(i32 %185)
  %186 = load i8, ptr %index.i290, align 1
  %conv121.i = zext i8 %186 to i32
  %187 = ptrtoint ptr %cac_leakage_table.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %cac_leakage_table.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %188, i32 %conv121.i)
  %cmp127.i = icmp ugt i32 %188, %conv121.i
  br i1 %cmp127.i, label %if.else120.i.cleanup.sink.split.i_crit_edge, label %if.else120.i.if.end122_crit_edge

if.else120.i.if.end122_crit_edge:                 ; preds = %if.else120.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end122

if.else120.i.cleanup.sink.split.i_crit_edge:      ; preds = %if.else120.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.else120.i.cleanup.sink.split.i_crit_edge, %if.then82.i, %if.then26.i
  %conv121.sink.i = phi i32 [ %conv121.i, %if.else120.i.cleanup.sink.split.i_crit_edge ], [ %spec.select.i289, %if.then26.i ], [ %spec.select193.i, %if.then82.i ]
  %arrayidx137.i = getelementptr %union.amdgpu_cac_leakage_entry, ptr %170, i32 %conv121.sink.i
  %189 = ptrtoint ptr %arrayidx137.i to i32
  call void @__asan_load2_noabort(i32 %189)
  %190 = load i16, ptr %arrayidx137.i, align 4
  br label %if.end122

if.end122:                                        ; preds = %cleanup.sink.split.i, %if.else120.i.if.end122_crit_edge, %for.cond59.i.if.end122_crit_edge, %for.cond.preheader.i.if.end122_crit_edge, %if.end117.if.end122_crit_edge
  %std_vddc.0.ph = phi i16 [ %168, %for.cond.preheader.i.if.end122_crit_edge ], [ %168, %if.else120.i.if.end122_crit_edge ], [ %190, %cleanup.sink.split.i ], [ %168, %if.end117.if.end122_crit_edge ], [ %168, %for.cond59.i.if.end122_crit_edge ]
  %index = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 12, i32 1
  %191 = ptrtoint ptr %index to i32
  call void @__asan_load1_noabort(i32 %191)
  %192 = load i8, ptr %index, align 1
  %std_vddc124 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 15
  %index1.i = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 15, i32 1
  %193 = ptrtoint ptr %index1.i to i32
  call void @__asan_store1_noabort(i32 %193)
  store i8 %192, ptr %index1.i, align 1
  %194 = ptrtoint ptr %std_vddc124 to i32
  call void @__asan_storeN_noabort(i32 %194, i32 2)
  store i16 %std_vddc.0.ph, ptr %std_vddc124, align 1
  %vddci_control = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 1
  %195 = ptrtoint ptr %vddci_control to i32
  call void @__asan_load1_noabort(i32 %195)
  %196 = load i8, ptr %vddci_control, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %196)
  %tobool129.not = icmp eq i8 %196, 0
  br i1 %tobool129.not, label %if.end122.if.end136_crit_edge, label %if.then130

if.end122.if.end136_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end136

if.then130:                                       ; preds = %if.end122
  %vddci_voltage_table = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 20
  %vddci = getelementptr inbounds %struct.rv7xx_pl, ptr %pl, i32 0, i32 3
  %197 = ptrtoint ptr %vddci to i32
  call void @__asan_load2_noabort(i32 %197)
  %198 = load i16, ptr %vddci, align 2
  %vddci131 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 14
  %199 = ptrtoint ptr %vddci_voltage_table to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %vddci_voltage_table, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %200)
  %cmp3.not5.i291 = icmp eq i32 %200, 0
  br i1 %cmp3.not5.i291, label %if.then130.si_populate_voltage_value.exit305_crit_edge, label %if.then130.for.body.i295_crit_edge

if.then130.for.body.i295_crit_edge:               ; preds = %if.then130
  br label %for.body.i295

if.then130.si_populate_voltage_value.exit305_crit_edge: ; preds = %if.then130
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit305

for.body.i295:                                    ; preds = %for.inc.i301.for.body.i295_crit_edge, %if.then130.for.body.i295_crit_edge
  %i.04.i292 = phi i32 [ %inc.i299, %for.inc.i301.for.body.i295_crit_edge ], [ 0, %if.then130.for.body.i295_crit_edge ]
  %arrayidx.i293 = getelementptr %struct.evergreen_power_info, ptr %1, i32 0, i32 20, i32 3, i32 %i.04.i292
  %201 = ptrtoint ptr %arrayidx.i293 to i32
  call void @__asan_load2_noabort(i32 %201)
  %202 = load i16, ptr %arrayidx.i293, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %202, i16 %198)
  %cmp3.not.i294 = icmp ult i16 %202, %198
  br i1 %cmp3.not.i294, label %for.inc.i301, label %if.then.i298

if.then.i298:                                     ; preds = %for.body.i295
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i296 = trunc i32 %i.04.i292 to i8
  %index.i297 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 14, i32 1
  %203 = ptrtoint ptr %index.i297 to i32
  call void @__asan_store1_noabort(i32 %203)
  store i8 %conv5.i296, ptr %index.i297, align 1
  %204 = ptrtoint ptr %arrayidx.i293 to i32
  call void @__asan_load2_noabort(i32 %204)
  %205 = load i16, ptr %arrayidx.i293, align 4
  %206 = ptrtoint ptr %vddci131 to i32
  call void @__asan_storeN_noabort(i32 %206, i32 2)
  store i16 %205, ptr %vddci131, align 1
  br label %si_populate_voltage_value.exit305

for.inc.i301:                                     ; preds = %for.body.i295
  %inc.i299 = add nuw i32 %i.04.i292, 1
  %exitcond.not.i300 = icmp eq i32 %inc.i299, %200
  br i1 %exitcond.not.i300, label %for.inc.i301.si_populate_voltage_value.exit305_crit_edge, label %for.inc.i301.for.body.i295_crit_edge

for.inc.i301.for.body.i295_crit_edge:             ; preds = %for.inc.i301
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i295

for.inc.i301.si_populate_voltage_value.exit305_crit_edge: ; preds = %for.inc.i301
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit305

si_populate_voltage_value.exit305:                ; preds = %for.inc.i301.si_populate_voltage_value.exit305_crit_edge, %if.then.i298, %if.then130.si_populate_voltage_value.exit305_crit_edge
  %i.02.i302 = phi i32 [ %i.04.i292, %if.then.i298 ], [ 0, %if.then130.si_populate_voltage_value.exit305_crit_edge ], [ %200, %for.inc.i301.si_populate_voltage_value.exit305_crit_edge ]
  %207 = ptrtoint ptr %vddci_voltage_table to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %vddci_voltage_table, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.02.i302, i32 %208)
  %cmp11.not.i303 = icmp ult i32 %i.02.i302, %208
  br i1 %cmp11.not.i303, label %si_populate_voltage_value.exit305.if.end136_crit_edge, label %si_populate_voltage_value.exit305.cleanup_crit_edge

si_populate_voltage_value.exit305.cleanup_crit_edge: ; preds = %si_populate_voltage_value.exit305
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

si_populate_voltage_value.exit305.if.end136_crit_edge: ; preds = %si_populate_voltage_value.exit305
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end136

if.end136:                                        ; preds = %si_populate_voltage_value.exit305.if.end136_crit_edge, %if.end122.if.end136_crit_edge
  %vddc_phase_shed_control = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 15
  %209 = ptrtoint ptr %vddc_phase_shed_control to i32
  call void @__asan_load1_noabort(i32 %209)
  %210 = load i8, ptr %vddc_phase_shed_control, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %210)
  %tobool137.not = icmp eq i8 %210, 0
  br i1 %tobool137.not, label %if.end136.if.end149_crit_edge, label %if.then138

if.end136.if.end149_crit_edge:                    ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end149

if.then138:                                       ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #16
  %phase_shedding_limits_table = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19
  %211 = ptrtoint ptr %vddc to i32
  call void @__asan_load2_noabort(i32 %211)
  %212 = load i16, ptr %vddc, align 4
  %213 = ptrtoint ptr %pl to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %pl, align 4
  %215 = ptrtoint ptr %mclk101 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %mclk101, align 4
  call fastcc void @si_populate_phase_shedding_value(ptr noundef %phase_shedding_limits_table, i16 noundef zeroext %212, i32 noundef %214, i32 noundef %216, ptr noundef %vddc113)
  br label %if.end149

if.end149:                                        ; preds = %if.then138, %if.end136.if.end149_crit_edge
  %max_cu = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 8
  %217 = ptrtoint ptr %max_cu to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %max_cu, align 4
  %MaxPoweredUpCU = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 22
  %219 = ptrtoint ptr %MaxPoweredUpCU to i32
  call void @__asan_storeN_noabort(i32 %219, i32 4)
  store i32 %218, ptr %MaxPoweredUpCU, align 1
  %mvdd = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 13
  %220 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %priv.i, align 4
  %mvdd_control.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %221, i32 0, i32 6
  %222 = ptrtoint ptr %mvdd_control.i to i32
  call void @__asan_load1_noabort(i32 %222)
  %223 = load i8, ptr %mvdd_control.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %223)
  %tobool.not.i307 = icmp eq i8 %223, 0
  br i1 %tobool.not.i307, label %if.end149.cleanup_crit_edge, label %if.then.i309

if.end149.cleanup_crit_edge:                      ; preds = %if.end149
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i309:                                     ; preds = %if.end149
  %224 = ptrtoint ptr %mclk101 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %mclk101, align 4
  %mvdd_split_frequency.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %221, i32 0, i32 22
  %226 = ptrtoint ptr %mvdd_split_frequency.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %mvdd_split_frequency.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %227, i32 %225)
  %cmp.not.i308 = icmp ult i32 %227, %225
  br i1 %cmp.not.i308, label %if.else.i310, label %if.then.i309.if.end.i312_crit_edge

if.then.i309.if.end.i312_crit_edge:               ; preds = %if.then.i309
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i312

if.else.i310:                                     ; preds = %if.then.i309
  call void @__sanitizer_cov_trace_pc() #16
  %mvdd_voltage_table.i = getelementptr inbounds %struct.si_power_info, ptr %221, i32 0, i32 3
  %228 = ptrtoint ptr %mvdd_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %mvdd_voltage_table.i, align 4
  %230 = trunc i32 %229 to i8
  %conv4.i = add i8 %230, -1
  br label %if.end.i312

if.end.i312:                                      ; preds = %if.else.i310, %if.then.i309.if.end.i312_crit_edge
  %.sink.i = phi i8 [ %conv4.i, %if.else.i310 ], [ 0, %if.then.i309.if.end.i312_crit_edge ]
  %231 = getelementptr inbounds %struct.SISLANDS_SMC_HW_PERFORMANCE_LEVEL, ptr %level, i32 0, i32 13, i32 1
  %232 = ptrtoint ptr %231 to i32
  call void @__asan_store1_noabort(i32 %232)
  store i8 %.sink.i, ptr %231, align 1
  %idxprom.i = zext i8 %.sink.i to i32
  %arrayidx.i311 = getelementptr %struct.si_power_info, ptr %221, i32 0, i32 3, i32 3, i32 %idxprom.i
  %233 = ptrtoint ptr %arrayidx.i311 to i32
  call void @__asan_load2_noabort(i32 %233)
  %234 = load i16, ptr %arrayidx.i311, align 4
  %235 = ptrtoint ptr %mvdd to i32
  call void @__asan_storeN_noabort(i32 %235, i32 2)
  store i16 %234, ptr %mvdd, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end.i312, %if.end149.cleanup_crit_edge, %si_populate_voltage_value.exit305.cleanup_crit_edge, %if.then4.i.cleanup_crit_edge, %si_populate_voltage_value.exit.cleanup_crit_edge, %si_populate_mclk_value.exit, %si_populate_sclk_value.exit
  %retval.0 = phi i32 [ %call.i, %si_populate_sclk_value.exit ], [ %call20.i, %si_populate_mclk_value.exit ], [ -22, %si_populate_voltage_value.exit.cleanup_crit_edge ], [ -22, %si_populate_voltage_value.exit305.cleanup_crit_edge ], [ -22, %if.then4.i.cleanup_crit_edge ], [ 0, %if.end149.cleanup_crit_edge ], [ 0, %if.end.i312 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_device_rreg(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_populate_phase_shedding_value(ptr nocapture noundef readonly %limits, i16 noundef zeroext %voltage, i32 noundef %sclk, i32 noundef %mclk, ptr nocapture noundef writeonly %smc_voltage) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %limits to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %limits, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp1.not = icmp eq i32 %1, 0
  br i1 %cmp1.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %entries = getelementptr inbounds %struct.amdgpu_phase_shedding_limits_table, ptr %limits, i32 0, i32 1
  %2 = ptrtoint ptr %entries to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %entries, align 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.02 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %3, i32 %i.02
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %voltage)
  %cmp3.not = icmp ult i16 %5, %voltage
  br i1 %cmp3.not, label %for.body.for.inc_crit_edge, label %land.lhs.true

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %sclk7 = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %3, i32 %i.02, i32 1
  %6 = ptrtoint ptr %sclk7 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sclk7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %sclk)
  %cmp8.not = icmp ult i32 %7, %sclk
  br i1 %cmp8.not, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true10

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

land.lhs.true10:                                  ; preds = %land.lhs.true
  %mclk13 = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %3, i32 %i.02, i32 2
  %8 = ptrtoint ptr %mclk13 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mclk13, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %mclk)
  %cmp14.not = icmp ult i32 %9, %mclk
  br i1 %cmp14.not, label %land.lhs.true10.for.inc_crit_edge, label %land.lhs.true10.for.end_crit_edge

land.lhs.true10.for.end_crit_edge:                ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

land.lhs.true10.for.inc_crit_edge:                ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true10.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.02, 1
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %land.lhs.true10.for.end_crit_edge, %entry.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %i.02, %land.lhs.true10.for.end_crit_edge ], [ %1, %for.inc.for.end_crit_edge ]
  %conv16 = trunc i32 %i.0.lcssa to i8
  %phase_settings = getelementptr inbounds %struct.SISLANDS_SMC_VOLTAGE_VALUE, ptr %smc_voltage, i32 0, i32 2
  %10 = ptrtoint ptr %phase_settings to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %conv16, ptr %phase_settings, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_calculate_sclk_params(ptr noundef %adev, i32 noundef %engine_clock, ptr nocapture noundef writeonly %sclk) unnamed_addr #1 align 64 {
entry:
  %dividers = alloca %struct.atom_clock_dividers, align 4
  %ss = alloca %struct.amdgpu_atom_ss, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %dividers) #14
  %2 = call ptr @memset(ptr %dividers, i32 255, i32 32)
  %clock_registers = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %clock_registers to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %clock_registers, align 4
  %cg_spll_func_cntl_2 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %cg_spll_func_cntl_2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cg_spll_func_cntl_2, align 4
  %cg_spll_func_cntl_3 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 2
  %7 = ptrtoint ptr %cg_spll_func_cntl_3 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cg_spll_func_cntl_3, align 4
  %cg_spll_func_cntl_4 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 3
  %9 = ptrtoint ptr %cg_spll_func_cntl_4 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cg_spll_func_cntl_4, align 4
  %cg_spll_spread_spectrum6 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %cg_spll_spread_spectrum6 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cg_spll_spread_spectrum6, align 4
  %cg_spll_spread_spectrum_28 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 5
  %13 = ptrtoint ptr %cg_spll_spread_spectrum_28 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cg_spll_spread_spectrum_28, align 4
  %spll = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 61, i32 1
  %15 = ptrtoint ptr %spll to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %spll, align 4
  %call9 = call i32 @amdgpu_atombios_get_clock_dividers(ptr noundef %adev, i8 noundef zeroext 2, i32 noundef %engine_clock, i1 noundef zeroext false, ptr noundef nonnull %dividers) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %ref_div = getelementptr inbounds %struct.atom_clock_dividers, ptr %dividers, i32 0, i32 2
  %17 = ptrtoint ptr %ref_div to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ref_div, align 4
  %add = add i32 %18, 1
  %conv = zext i32 %engine_clock to i64
  %conv10 = zext i32 %add to i64
  %19 = ptrtoint ptr %dividers to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %dividers, align 4
  %conv11 = zext i32 %20 to i64
  %mul = shl nuw nsw i64 %conv, 14
  %mul12 = mul i64 %mul, %conv10
  %mul13 = mul i64 %mul12, %conv11
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %mul13)
  %cmp186 = icmp ult i64 %mul13, 4294967296
  br i1 %cmp186, label %if.then190, label %if.else196, !prof !275

if.then190:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %conv191 = trunc i64 %mul13 to i32
  %div194 = udiv i32 %conv191, %16
  br label %if.end200

if.else196:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %21 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %16, i64 %mul13) #20, !srcloc !276
  %asmresult1.i = extractvalue { i64, i64 } %21, 1
  %extract.t394 = trunc i64 %asmresult1.i to i32
  br label %if.end200

if.end200:                                        ; preds = %if.else196, %if.then190
  %tmp.0.off0 = phi i32 [ %div194, %if.then190 ], [ %extract.t394, %if.else196 ]
  %and203 = and i32 %4, -133170161
  %shl205 = shl i32 %18, 4
  %or206 = or i32 %shl205, %and203
  %shl208 = shl i32 %20, 20
  %or209 = or i32 %or206, %shl208
  %and210 = and i32 %6, -512
  %or211 = or i32 %and210, 2
  %and212 = and i32 %8, -335544320
  %or214 = or i32 %and212, %tmp.0.off0
  %or215 = or i32 %or214, 268435456
  %sclk_ss = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 7
  %22 = ptrtoint ptr %sclk_ss to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %sclk_ss, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool216.not = icmp eq i8 %23, 0
  br i1 %tobool216.not, label %if.end200.if.end239_crit_edge, label %if.then217

if.end200.if.end239_crit_edge:                    ; preds = %if.end200
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end239

if.then217:                                       ; preds = %if.end200
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ss) #14
  %24 = call ptr @memset(ptr %ss, i32 255, i32 16)
  %mul219 = mul i32 %20, %engine_clock
  %call220 = call zeroext i1 @amdgpu_atombios_get_asic_ss_info(ptr noundef %adev, ptr noundef nonnull %ss, i32 noundef 2, i32 noundef %mul219) #14
  br i1 %call220, label %if.then221, label %if.then217.if.end238_crit_edge

if.then217.if.end238_crit_edge:                   ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end238

if.then221:                                       ; preds = %if.then217
  call void @__sanitizer_cov_trace_pc() #16
  %mul222 = mul i32 %16, 5
  %rate = getelementptr inbounds %struct.amdgpu_atom_ss, ptr %ss, i32 0, i32 7
  %25 = ptrtoint ptr %rate to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %rate, align 2
  %conv223 = zext i16 %26 to i32
  %mul224 = mul i32 %add, %conv223
  %div225 = udiv i32 %mul222, %mul224
  %27 = ptrtoint ptr %ss to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %ss, align 2
  %conv226 = zext i16 %28 to i32
  %mul227 = shl i32 %tmp.0.off0, 2
  %mul228 = mul i32 %mul227, %conv226
  %mul229 = mul i32 %div225, 10000
  %div230 = udiv i32 %mul228, %mul229
  %and231 = and i32 %12, -65522
  %shl232 = shl i32 %div225, 4
  %or233 = or i32 %and231, %shl232
  %or234 = or i32 %or233, 1
  %and235 = and i32 %14, -67108864
  %or237 = or i32 %div230, %and235
  br label %if.end238

if.end238:                                        ; preds = %if.then221, %if.then217.if.end238_crit_edge
  %cg_spll_spread_spectrum.0 = phi i32 [ %or234, %if.then221 ], [ %12, %if.then217.if.end238_crit_edge ]
  %cg_spll_spread_spectrum_2.0 = phi i32 [ %or237, %if.then221 ], [ %14, %if.then217.if.end238_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ss) #14
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %if.end200.if.end239_crit_edge
  %cg_spll_spread_spectrum.1 = phi i32 [ %cg_spll_spread_spectrum.0, %if.end238 ], [ %12, %if.end200.if.end239_crit_edge ]
  %cg_spll_spread_spectrum_2.1 = phi i32 [ %cg_spll_spread_spectrum_2.0, %if.end238 ], [ %14, %if.end200.if.end239_crit_edge ]
  %sclk_value = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk, i32 0, i32 6
  %29 = ptrtoint ptr %sclk_value to i32
  call void @__asan_storeN_noabort(i32 %29, i32 4)
  store i32 %engine_clock, ptr %sclk_value, align 1
  %30 = ptrtoint ptr %sclk to i32
  call void @__asan_storeN_noabort(i32 %30, i32 4)
  store i32 %or209, ptr %sclk, align 1
  %vCG_SPLL_FUNC_CNTL_2 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk, i32 0, i32 1
  %31 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_2 to i32
  call void @__asan_storeN_noabort(i32 %31, i32 4)
  store i32 %or211, ptr %vCG_SPLL_FUNC_CNTL_2, align 1
  %vCG_SPLL_FUNC_CNTL_3 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk, i32 0, i32 2
  %32 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_3 to i32
  call void @__asan_storeN_noabort(i32 %32, i32 4)
  store i32 %or215, ptr %vCG_SPLL_FUNC_CNTL_3, align 1
  %vCG_SPLL_FUNC_CNTL_4 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk, i32 0, i32 3
  %33 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_4 to i32
  call void @__asan_storeN_noabort(i32 %33, i32 4)
  store i32 %10, ptr %vCG_SPLL_FUNC_CNTL_4, align 1
  %vCG_SPLL_SPREAD_SPECTRUM = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk, i32 0, i32 4
  %34 = ptrtoint ptr %vCG_SPLL_SPREAD_SPECTRUM to i32
  call void @__asan_storeN_noabort(i32 %34, i32 4)
  store i32 %cg_spll_spread_spectrum.1, ptr %vCG_SPLL_SPREAD_SPECTRUM, align 1
  %vCG_SPLL_SPREAD_SPECTRUM_2 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk, i32 0, i32 5
  %35 = ptrtoint ptr %vCG_SPLL_SPREAD_SPECTRUM_2 to i32
  call void @__asan_storeN_noabort(i32 %35, i32 4)
  store i32 %cg_spll_spread_spectrum_2.1, ptr %vCG_SPLL_SPREAD_SPECTRUM_2, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end239, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %dividers) #14
  ret i32 %call9
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_get_clock_dividers(ptr noundef, i8 noundef zeroext, i32 noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_atombios_get_asic_ss_info(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_get_memory_pll_dividers(ptr noundef, i32 noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_si_write_smc_sram_dword(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @div64_u64(i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_do_program_memory_timing_parameters(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_state, i32 noundef %first_arb_set) unnamed_addr #1 align 64 {
entry:
  %arb_regs = alloca %struct.SMC_SIslands_MCArbDramTimingRegisterSet, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_state, i32 0, i32 9
  %2 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ps_priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %arb_regs) #14
  %4 = call ptr @memset(ptr %arb_regs, i32 0, i32 12)
  %5 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %cmp20.not = icmp eq i16 %6, 0
  br i1 %cmp20.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %mc_arb_rfsh_rate.i = getelementptr inbounds %struct.SMC_SIslands_MCArbDramTimingRegisterSet, ptr %arb_regs, i32 0, i32 2
  %mc_arb_dram_timing2.i = getelementptr inbounds %struct.SMC_SIslands_MCArbDramTimingRegisterSet, ptr %arb_regs, i32 0, i32 1
  %mc_arb_burst_time.i = getelementptr inbounds %struct.SMC_SIslands_MCArbDramTimingRegisterSet, ptr %arb_regs, i32 0, i32 3
  %arb_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 24
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.021, 1
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %3, align 4
  %conv = zext i16 %8 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.lr.ph
  %i.021 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.cond.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.021
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %call.i.i = call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2520, i32 noundef 0) #14
  %and.i.i = lshr i32 %call.i.i, 3
  %shr.i.i = and i32 %and.i.i, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %shr.i.i)
  %cmp.i.i = icmp ugt i32 %shr.i.i, 3
  %call1.i.i = call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2688, i32 noundef 0) #14
  %and2.i.i = and i32 %call1.i.i, 3
  %shl4.i.i = shl nuw nsw i32 8, %and2.i.i
  %mul.i.i = mul i32 %10, 10
  %mul5.i.i = mul i32 %mul.i.i, %shl4.i.i
  %11 = add nuw nsw i32 %shr.i.i, 10
  %12 = select i1 %cmp.i.i, i32 14, i32 %11
  %div10.i.i = lshr i32 %mul5.i.i, %12
  %sub.i.i = add nuw nsw i32 %div10.i.i, 16352
  %div69.i.i = lshr i32 %sub.i.i, 6
  %conv.i = trunc i32 %div69.i.i to i8
  %13 = ptrtoint ptr %mc_arb_rfsh_rate.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %conv.i, ptr %mc_arb_rfsh_rate.i, align 4
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %mclk.i = getelementptr %struct.si_ps, ptr %3, i32 0, i32 2, i32 %i.021, i32 1
  %16 = ptrtoint ptr %mclk.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mclk.i, align 4
  call void @amdgpu_atombios_set_engine_dram_timings(ptr noundef %adev, i32 noundef %15, i32 noundef %17) #14
  %call2.i = call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2525, i32 noundef 0) #14
  %call3.i = call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2526, i32 noundef 0) #14
  %call4.i = call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  %18 = ptrtoint ptr %arb_regs to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %call2.i, ptr %arb_regs, align 4
  %19 = ptrtoint ptr %mc_arb_dram_timing2.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %call3.i, ptr %mc_arb_dram_timing2.i, align 4
  %20 = trunc i32 %call4.i to i8
  %conv5.i = and i8 %20, 31
  %21 = ptrtoint ptr %mc_arb_burst_time.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv5.i, ptr %mc_arb_burst_time.i, align 1
  %22 = ptrtoint ptr %arb_table_start to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arb_table_start, align 4
  %add4 = add i32 %i.021, %first_arb_set
  %mul = mul i32 %add4, 12
  %add = add i32 %mul, 4
  %add5 = add i32 %add, %23
  %24 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sram_end, align 4
  %call6 = call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add5, ptr noundef nonnull %arb_regs, i32 noundef 12, i32 noundef %25) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %for.cond, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.for.end_crit_edge, %entry.for.end_crit_edge
  %ret.1 = phi i32 [ 0, %entry.for.end_crit_edge ], [ %call6, %for.body.for.end_crit_edge ], [ 0, %for.cond.for.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %arb_regs) #14
  ret i32 %ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_atombios_set_engine_dram_timings(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_populate_smc_tdp_limits(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %enable_power_containment = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %enable_power_containment to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %enable_power_containment, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.cleanup41_crit_edge, label %if.then

entry.cleanup41_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup41

if.then:                                          ; preds = %entry
  %ppm_table = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 20
  %4 = ptrtoint ptr %ppm_table to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ppm_table, align 4
  %smc_statetable = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37
  %6 = call ptr @memset(ptr %smc_statetable, i32 0, i32 3012)
  %tdp_adjustment = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 29
  %7 = ptrtoint ptr %tdp_adjustment to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tdp_adjustment, align 4
  %tdp_od_limit.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 28
  %9 = ptrtoint ptr %tdp_od_limit.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %tdp_od_limit.i, align 4
  %conv.i = zext i16 %10 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv.i)
  %cmp.i = icmp ugt i32 %8, %conv.i
  br i1 %cmp.i, label %if.then.cleanup.thread_crit_edge, label %if.end.i

if.then.cleanup.thread_crit_edge:                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end.i:                                         ; preds = %if.then
  %tdp_limit4.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 23
  %11 = ptrtoint ptr %tdp_limit4.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %tdp_limit4.i, align 4
  %mul.i = mul i32 %12, 200
  %div.i = udiv i32 %mul.i, 100
  %sub17.i = sub i32 100, %8
  %mul21.i = mul i32 %12, %sub17.i
  %div22.i = udiv i32 %mul21.i, 100
  %sub26.i = sub i32 %12, %div22.i
  %near_tdp_limit_adjusted29.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 25
  %13 = ptrtoint ptr %near_tdp_limit_adjusted29.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %near_tdp_limit_adjusted29.i, align 4
  %15 = tail call i32 @llvm.usub.sat.i32(i32 %14, i32 %sub26.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %mul21.i)
  %16 = icmp ult i32 %mul21.i, 100
  call void @__sanitizer_cov_trace_cmp4(i32 %div22.i, i32 %div.i)
  %cmp42.i = icmp ugt i32 %div22.i, %div.i
  %or.cond.i = select i1 %16, i1 true, i1 %cmp42.i
  br i1 %or.cond.i, label %if.end.i.cleanup.thread_crit_edge, label %if.end45.i

if.end.i.cleanup.thread_crit_edge:                ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end45.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %sub26.i)
  %cmp46.i = icmp ule i32 %14, %sub26.i
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %div22.i)
  %cmp49.i = icmp ugt i32 %15, %div22.i
  %or.cond1.i = select i1 %cmp46.i, i1 true, i1 %cmp49.i
  br i1 %or.cond1.i, label %if.end45.i.cleanup.thread_crit_edge, label %if.end9

if.end45.i.cleanup.thread_crit_edge:              ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end9:                                          ; preds = %if.end45.i
  %mul = mul i32 %div22.i, 1000
  %dpm2Params = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 7
  %17 = ptrtoint ptr %dpm2Params to i32
  call void @__asan_storeN_noabort(i32 %17, i32 4)
  store i32 %mul, ptr %dpm2Params, align 1
  %mul12 = mul i32 %15, 1000
  %NearTDPLimit = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 7, i32 1
  %18 = ptrtoint ptr %NearTDPLimit to i32
  call void @__asan_storeN_noabort(i32 %18, i32 4)
  store i32 %mul12, ptr %NearTDPLimit, align 1
  %mul14 = mul i32 %15, 80
  %div = udiv i32 %mul14, 100
  %mul16 = mul i32 %div, 1000
  %SafePowerLimit = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 7, i32 2
  %19 = ptrtoint ptr %SafePowerLimit to i32
  call void @__asan_storeN_noabort(i32 %19, i32 4)
  store i32 %mul16, ptr %SafePowerLimit, align 1
  %state_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 21
  %20 = ptrtoint ptr %state_table_start to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %state_table_start, align 4
  %add = add i32 %21, 164
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %22 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sram_end, align 4
  %call21 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add, ptr noundef %dpm2Params, i32 noundef 12, i32 noundef %23) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end9.cleanup.thread_crit_edge

if.end9.cleanup.thread_crit_edge:                 ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end24:                                         ; preds = %if.end9
  %enable_ppm = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 14
  %24 = ptrtoint ptr %enable_ppm to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %enable_ppm, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool25.not = icmp eq i8 %25, 0
  br i1 %tobool25.not, label %if.end24.cleanup41_crit_edge, label %if.then26

if.end24.cleanup41_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup41

if.then26:                                        ; preds = %if.end24
  %papm_parm27 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 38
  %26 = call ptr @memset(ptr %papm_parm27, i32 0, i32 24)
  %dgpu_tdp = getelementptr inbounds %struct.amdgpu_ppm_table, ptr %5, i32 0, i32 7
  %27 = ptrtoint ptr %dgpu_tdp to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %dgpu_tdp, align 4
  %29 = ptrtoint ptr %papm_parm27 to i32
  call void @__asan_storeN_noabort(i32 %29, i32 4)
  store i32 %28, ptr %papm_parm27, align 1
  %tj_max = getelementptr inbounds %struct.amdgpu_ppm_table, ptr %5, i32 0, i32 9
  %30 = ptrtoint ptr %tj_max to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %tj_max, align 4
  %dGPU_T_Limit = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 38, i32 3
  %32 = ptrtoint ptr %dGPU_T_Limit to i32
  call void @__asan_storeN_noabort(i32 %32, i32 4)
  store i32 %31, ptr %dGPU_T_Limit, align 1
  %dGPU_T_Warning = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 38, i32 4
  %33 = ptrtoint ptr %dGPU_T_Warning to i32
  call void @__asan_storeN_noabort(i32 %33, i32 4)
  store i32 95, ptr %dGPU_T_Warning, align 1
  %dGPU_T_Hysteresis = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 38, i32 5
  %34 = ptrtoint ptr %dGPU_T_Hysteresis to i32
  call void @__asan_storeN_noabort(i32 %34, i32 4)
  store i32 5, ptr %dGPU_T_Hysteresis, align 1
  %PlatformPowerLimit = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 38, i32 2
  %35 = ptrtoint ptr %PlatformPowerLimit to i32
  call void @__asan_storeN_noabort(i32 %35, i32 4)
  store i32 -1, ptr %PlatformPowerLimit, align 1
  %NearTDPLimitPAPM = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 38, i32 1
  %36 = ptrtoint ptr %NearTDPLimitPAPM to i32
  call void @__asan_storeN_noabort(i32 %36, i32 4)
  store i32 -1, ptr %NearTDPLimitPAPM, align 1
  %papm_cfg_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 28
  %37 = ptrtoint ptr %papm_cfg_table_start to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %papm_cfg_table_start, align 4
  %39 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sram_end, align 4
  %call29 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %38, ptr noundef %papm_parm27, i32 noundef 24, i32 noundef %40) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then26.cleanup41_crit_edge, label %if.then26.cleanup.thread_crit_edge

if.then26.cleanup.thread_crit_edge:               ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.then26.cleanup41_crit_edge:                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup41

cleanup.thread:                                   ; preds = %if.then26.cleanup.thread_crit_edge, %if.end9.cleanup.thread_crit_edge, %if.end45.i.cleanup.thread_crit_edge, %if.end.i.cleanup.thread_crit_edge, %if.then.cleanup.thread_crit_edge
  %retval.0.ph = phi i32 [ %call29, %if.then26.cleanup.thread_crit_edge ], [ %call21, %if.end9.cleanup.thread_crit_edge ], [ -22, %if.then.cleanup.thread_crit_edge ], [ -22, %if.end.i.cleanup.thread_crit_edge ], [ -22, %if.end45.i.cleanup.thread_crit_edge ]
  br label %cleanup41

cleanup41:                                        ; preds = %cleanup.thread, %if.then26.cleanup41_crit_edge, %if.end24.cleanup41_crit_edge, %entry.cleanup41_crit_edge
  %retval.1 = phi i32 [ %retval.0.ph, %cleanup.thread ], [ 0, %if.then26.cleanup41_crit_edge ], [ 0, %if.end24.cleanup41_crit_edge ], [ 0, %entry.cleanup41_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_populate_smc_tdp_limits_2(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %enable_power_containment = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %enable_power_containment to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %enable_power_containment, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end19_crit_edge, label %if.then

entry.if.end19_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then:                                          ; preds = %entry
  %smc_statetable = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37
  %4 = call ptr @memset(ptr %smc_statetable, i32 0, i32 3012)
  %near_tdp_limit_adjusted = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 25
  %5 = ptrtoint ptr %near_tdp_limit_adjusted to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %near_tdp_limit_adjusted, align 4
  %mul = mul i32 %6, 1000
  %NearTDPLimit = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 7, i32 1
  %7 = ptrtoint ptr %NearTDPLimit to i32
  call void @__asan_storeN_noabort(i32 %7, i32 4)
  store i32 %mul, ptr %NearTDPLimit, align 1
  %8 = load i32, ptr %near_tdp_limit_adjusted, align 4
  %mul7 = mul i32 %8, 80
  %div = udiv i32 %mul7, 100
  %mul9 = mul i32 %div, 1000
  %SafePowerLimit = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 7, i32 2
  %9 = ptrtoint ptr %SafePowerLimit to i32
  call void @__asan_storeN_noabort(i32 %9, i32 4)
  store i32 %mul9, ptr %SafePowerLimit, align 1
  %state_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 21
  %10 = ptrtoint ptr %state_table_start to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state_table_start, align 4
  %add11 = add i32 %11, 168
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %12 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sram_end, align 4
  %call14 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add11, ptr noundef %NearTDPLimit, i32 noundef 8, i32 noundef %13) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then.if.end19_crit_edge, label %if.then.cleanup20_crit_edge

if.then.cleanup20_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup20

if.then.if.end19_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.end19:                                         ; preds = %if.then.if.end19_crit_edge, %entry.if.end19_crit_edge
  br label %cleanup20

cleanup20:                                        ; preds = %if.end19, %if.then.cleanup20_crit_edge
  %retval.1 = phi i32 [ 0, %if.end19 ], [ %call14, %if.then.cleanup20_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_dpm_print_class_info(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_dpm_print_cap_info(i32 noundef) local_unnamed_addr #5

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_dpm_print_ps_status(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_dpm_get_vblank_time(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_fan_ctrl_set_static_mode(ptr noundef %adev, i32 noundef %mode) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %fan_ctrl_is_in_default_mode = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 41
  %2 = ptrtoint ptr %fan_ctrl_is_in_default_mode to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %fan_ctrl_is_in_default_mode, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 471, i32 noundef 0) #14
  %and = lshr i32 %call1, 11
  %shr = and i32 %and, 7
  %fan_ctrl_default_mode = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 43
  %4 = ptrtoint ptr %fan_ctrl_default_mode to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %shr, ptr %fan_ctrl_default_mode, align 4
  %call2 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 471, i32 noundef 0) #14
  %and3 = and i32 %call2, 255
  %t_min = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 42
  %5 = ptrtoint ptr %t_min to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %and3, ptr %t_min, align 4
  %6 = ptrtoint ptr %fan_ctrl_is_in_default_mode to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %fan_ctrl_is_in_default_mode, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %call6 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 471, i32 noundef 0) #14
  %and7 = and i32 %call6, -256
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 471, i32 noundef %and7, i32 noundef 0) #14
  %call8 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 471, i32 noundef 0) #14
  %and9 = and i32 %call8, -14337
  %shl = shl i32 %mode, 11
  %or10 = or i32 %and9, %shl
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 471, i32 noundef %or10, i32 noundef 0) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_thermal_start_smc_fan_control(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ucode_fan_control = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 13
  %0 = ptrtoint ptr %ucode_fan_control to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ucode_fan_control, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %2 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i.i, align 4
  %call1.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 91) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call1.i)
  %cmp.i = icmp eq i8 %call1.i, 1
  br i1 %cmp.i, label %if.then.i, label %if.then.si_fan_ctrl_start_smc_fan_control.exit_crit_edge

if.then.si_fan_ctrl_start_smc_fan_control.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_fan_ctrl_start_smc_fan_control.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %fan_is_controlled_by_smc.i = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 44
  %4 = ptrtoint ptr %fan_is_controlled_by_smc.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %fan_is_controlled_by_smc.i, align 4
  br label %si_fan_ctrl_start_smc_fan_control.exit

si_fan_ctrl_start_smc_fan_control.exit:           ; preds = %if.then.i, %if.then.si_fan_ctrl_start_smc_fan_control.exit_crit_edge
  tail call fastcc void @si_fan_ctrl_set_static_mode(ptr noundef %adev, i32 noundef 1)
  br label %if.end

if.end:                                           ; preds = %si_fan_ctrl_start_smc_fan_control.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_set_interrupt_state(ptr noundef %adev, ptr nocapture noundef readnone %source, i32 noundef %type, i32 noundef %state) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.102)
  switch i32 %type, label %entry.sw.epilog20_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

entry.sw.epilog20_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog20

sw.bb:                                            ; preds = %entry
  %1 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.103)
  switch i32 %state, label %sw.bb.sw.epilog20_crit_edge [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ]

sw.bb.sw.epilog20_crit_edge:                      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog20

sw.bb1:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %smc_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 36
  %2 = ptrtoint ptr %smc_rreg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %smc_rreg, align 4
  %call = tail call i32 %3(ptr noundef %adev, i32 noundef 450) #14
  %or = or i32 %call, 16777216
  br label %sw.epilog20.sink.split

sw.bb2:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %smc_rreg3 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 36
  %4 = ptrtoint ptr %smc_rreg3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %smc_rreg3, align 4
  %call4 = tail call i32 %5(ptr noundef %adev, i32 noundef 450) #14
  %and = and i32 %call4, -16777217
  br label %sw.epilog20.sink.split

sw.bb6:                                           ; preds = %entry
  %6 = zext i32 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.104)
  switch i32 %state, label %sw.bb6.sw.epilog20_crit_edge [
    i32 0, label %sw.bb7
    i32 1, label %sw.bb12
  ]

sw.bb6.sw.epilog20_crit_edge:                     ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog20

sw.bb7:                                           ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #16
  %smc_rreg8 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 36
  %7 = ptrtoint ptr %smc_rreg8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %smc_rreg8, align 4
  %call9 = tail call i32 %8(ptr noundef %adev, i32 noundef 450) #14
  %or10 = or i32 %call9, 33554432
  br label %sw.epilog20.sink.split

sw.bb12:                                          ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #16
  %smc_rreg13 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 36
  %9 = ptrtoint ptr %smc_rreg13 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %smc_rreg13, align 4
  %call14 = tail call i32 %10(ptr noundef %adev, i32 noundef 450) #14
  %and15 = and i32 %call14, -33554433
  br label %sw.epilog20.sink.split

sw.epilog20.sink.split:                           ; preds = %sw.bb12, %sw.bb7, %sw.bb2, %sw.bb1
  %or10.sink = phi i32 [ %or10, %sw.bb7 ], [ %and15, %sw.bb12 ], [ %or, %sw.bb1 ], [ %and, %sw.bb2 ]
  %smc_wreg11 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 37
  %11 = ptrtoint ptr %smc_wreg11 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %smc_wreg11, align 8
  tail call void %12(ptr noundef %adev, i32 noundef 450, i32 noundef %or10.sink) #14
  br label %sw.epilog20

sw.epilog20:                                      ; preds = %sw.epilog20.sink.split, %sw.bb6.sw.epilog20_crit_edge, %sw.bb.sw.epilog20_crit_edge, %entry.sw.epilog20_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @si_dpm_process_interrupt(ptr noundef %adev, ptr nocapture noundef readnone %source, ptr noundef readonly %entry1) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %entry1, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %src_id = getelementptr inbounds %struct.amdgpu_iv_entry, ptr %entry1, i32 0, i32 2
  %0 = ptrtoint ptr %src_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %src_id, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.105)
  switch i32 %1, label %if.end.cleanup_crit_edge [
    i32 230, label %if.end.if.then7_crit_edge
    i32 231, label %sw.bb2
  ]

if.end.if.then7_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb2:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then7

if.then7:                                         ; preds = %sw.bb2, %if.end.if.then7_crit_edge
  %.str.29.sink = phi ptr [ @.str.30, %sw.bb2 ], [ @.str.29, %if.end.if.then7_crit_edge ]
  %.sink = phi i8 [ 1, %sw.bb2 ], [ 0, %if.end.if.then7_crit_edge ]
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 1, ptr noundef nonnull %.str.29.sink) #14
  %high_to_low = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 35, i32 10
  %3 = ptrtoint ptr %high_to_low to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %.sink, ptr %high_to_low, align 4
  %thermal10 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %4 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %4, ptr noundef %thermal10) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.then7 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__drm_dbg(i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_irq_add_id(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_dpm_thermal_work_handler(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_pm_print_power_states(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_firmware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_ucode_validate(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_firmware(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_get_platform_caps(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_parse_extended_power_table(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_free_extended_power_table(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_atombios_is_voltage_gpio(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_get_svi2_info(ptr noundef, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kmalloc_order_trace(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_get_max_vddc(ptr noundef, i8 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_get_leakage_vddc_based_on_leakage_idx(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_atom_parse_data_header(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_add_thermal_controller(ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_get_pcie_gen_support(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_atombios_get_default_voltages(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_dpm_setup_asic(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i.i, align 4
  %call1.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 384, i32 noundef 0) #14
  %clock_registers.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %clock_registers.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %call1.i, ptr %clock_registers.i, align 4
  %call2.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 385, i32 noundef 0) #14
  %cg_spll_func_cntl_2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 1
  %3 = ptrtoint ptr %cg_spll_func_cntl_2.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call2.i, ptr %cg_spll_func_cntl_2.i, align 4
  %call4.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 386, i32 noundef 0) #14
  %cg_spll_func_cntl_3.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 2
  %4 = ptrtoint ptr %cg_spll_func_cntl_3.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call4.i, ptr %cg_spll_func_cntl_3.i, align 4
  %call6.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 387, i32 noundef 0) #14
  %cg_spll_func_cntl_4.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 3
  %5 = ptrtoint ptr %cg_spll_func_cntl_4.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %call6.i, ptr %cg_spll_func_cntl_4.i, align 4
  %call8.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 392, i32 noundef 0) #14
  %cg_spll_spread_spectrum.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 4
  %6 = ptrtoint ptr %cg_spll_spread_spectrum.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call8.i, ptr %cg_spll_spread_spectrum.i, align 4
  %call10.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 393, i32 noundef 0) #14
  %cg_spll_spread_spectrum_2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 5
  %7 = ptrtoint ptr %cg_spll_spread_spectrum_2.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call10.i, ptr %cg_spll_spread_spectrum_2.i, align 4
  %call12.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2793, i32 noundef 0) #14
  %dll_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 6
  %8 = ptrtoint ptr %dll_cntl.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call12.i, ptr %dll_cntl.i, align 4
  %call14.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2792, i32 noundef 0) #14
  %mclk_pwrmgt_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 7
  %9 = ptrtoint ptr %mclk_pwrmgt_cntl.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call14.i, ptr %mclk_pwrmgt_cntl.i, align 4
  %call16.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2800, i32 noundef 0) #14
  %mpll_ad_func_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 8
  %10 = ptrtoint ptr %mpll_ad_func_cntl.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %call16.i, ptr %mpll_ad_func_cntl.i, align 4
  %call18.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2801, i32 noundef 0) #14
  %mpll_dq_func_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 9
  %11 = ptrtoint ptr %mpll_dq_func_cntl.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call18.i, ptr %mpll_dq_func_cntl.i, align 4
  %call20.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2797, i32 noundef 0) #14
  %mpll_func_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 10
  %12 = ptrtoint ptr %mpll_func_cntl.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %call20.i, ptr %mpll_func_cntl.i, align 4
  %call22.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2798, i32 noundef 0) #14
  %mpll_func_cntl_1.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 11
  %13 = ptrtoint ptr %mpll_func_cntl_1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call22.i, ptr %mpll_func_cntl_1.i, align 4
  %call24.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2799, i32 noundef 0) #14
  %mpll_func_cntl_2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 12
  %14 = ptrtoint ptr %mpll_func_cntl_2.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call24.i, ptr %mpll_func_cntl_2.i, align 4
  %call26.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2803, i32 noundef 0) #14
  %mpll_ss1.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 13
  %15 = ptrtoint ptr %mpll_ss1.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %call26.i, ptr %mpll_ss1.i, align 4
  %call28.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2804, i32 noundef 0) #14
  %mpll_ss2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 1, i32 14
  %16 = ptrtoint ptr %mpll_ss2.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %call28.i, ptr %mpll_ss2.i, align 4
  %call.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %or.i = or i32 %call.i, 2
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %or.i, i32 noundef 0) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_dpm_enable(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  %tmp.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %boot_ps3 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 4
  %2 = ptrtoint ptr %boot_ps3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %boot_ps3, align 4
  %call4 = tail call zeroext i1 @amdgpu_si_is_smc_running(ptr noundef %adev) #14
  br i1 %call4, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %voltage_control = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %voltage_control to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %voltage_control, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %lor.lhs.false, label %if.end.if.then6_crit_edge

if.end.if.then6_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6

lor.lhs.false:                                    ; preds = %if.end
  %voltage_control_svi2 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 18
  %6 = ptrtoint ptr %voltage_control_svi2 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %voltage_control_svi2, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool5.not = icmp eq i8 %7, 0
  br i1 %tobool5.not, label %lor.lhs.false.if.end7_crit_edge, label %lor.lhs.false.if.then6_crit_edge

lor.lhs.false.if.then6_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6

lor.lhs.false.if.end7_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then6:                                         ; preds = %lor.lhs.false.if.then6_crit_edge, %if.end.if.then6_crit_edge
  %call.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %or.i = or i32 %call.i, 1024
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %or.i, i32 noundef 0) #14
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %lor.lhs.false.if.end7_crit_edge
  %mvdd_control = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 6
  %8 = ptrtoint ptr %mvdd_control to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %mvdd_control, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool8.not = icmp eq i8 %9, 0
  br i1 %tobool8.not, label %if.end7.if.end10_crit_edge, label %if.then9

if.end7.if.end10_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv.i, align 4
  %mvdd_split_frequency.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %11, i32 0, i32 22
  %12 = ptrtoint ptr %mvdd_split_frequency.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 30000, ptr %mvdd_split_frequency.i, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end7.if.end10_crit_edge
  %13 = ptrtoint ptr %voltage_control to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %voltage_control, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool12.not = icmp eq i8 %14, 0
  br i1 %tobool12.not, label %lor.lhs.false13, label %if.end10.if.then16_crit_edge

if.end10.if.then16_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then16

lor.lhs.false13:                                  ; preds = %if.end10
  %voltage_control_svi214 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 18
  %15 = ptrtoint ptr %voltage_control_svi214 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %voltage_control_svi214, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool15.not = icmp eq i8 %16, 0
  br i1 %tobool15.not, label %lor.lhs.false13.if.end21_crit_edge, label %lor.lhs.false13.if.then16_crit_edge

lor.lhs.false13.if.then16_crit_edge:              ; preds = %lor.lhs.false13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then16

lor.lhs.false13.if.end21_crit_edge:               ; preds = %lor.lhs.false13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

if.then16:                                        ; preds = %lor.lhs.false13.if.then16_crit_edge, %if.end10.if.then16_crit_edge
  %17 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %priv.i, align 4
  %voltage_control.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %voltage_control.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %voltage_control.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i = icmp eq i8 %20, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then16
  %vddc_voltage_table.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 19
  %call3.i = tail call i32 @amdgpu_atombios_get_voltage_table(ptr noundef %adev, i8 noundef zeroext 1, i8 noundef zeroext 0, ptr noundef %vddc_voltage_table.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end.i, label %if.then.i.if.then19_crit_edge

if.then.i.if.then19_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then19

if.end.i:                                         ; preds = %if.then.i
  %21 = ptrtoint ptr %vddc_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %vddc_voltage_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %22)
  %cmp.i = icmp ugt i32 %22, 32
  br i1 %cmp.i, label %if.end.i.i, label %if.end.i.if.end19.i_crit_edge

if.end.i.if.end19.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

if.end.i.i:                                       ; preds = %if.end.i
  %sub.i.i = add i32 %22, -32
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.end.i.i
  %i.01.i.i = phi i32 [ 0, %if.end.i.i ], [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 19, i32 3, i32 %i.01.i.i
  %add.i.i = add i32 %sub.i.i, %i.01.i.i
  %arrayidx4.i.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 19, i32 3, i32 %add.i.i
  %23 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %arrayidx4.i.i, align 4
  %25 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_storeN_noabort(i32 %25, i32 8)
  store i64 %24, ptr %arrayidx.i.i, align 4
  %inc.i.i = add nuw nsw i32 %i.01.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 32
  br i1 %exitcond.not.i.i, label %si_trim_voltage_table_to_fit_state_table.exit.i, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

si_trim_voltage_table_to_fit_state_table.exit.i:  ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %vddc_voltage_table.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 32, ptr %vddc_voltage_table.i, align 4
  br label %if.end19.i

if.else.i:                                        ; preds = %if.then16
  %voltage_control_svi2.i = getelementptr inbounds %struct.si_power_info, ptr %18, i32 0, i32 18
  %27 = ptrtoint ptr %voltage_control_svi2.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %voltage_control_svi2.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool10.not.i = icmp eq i8 %28, 0
  br i1 %tobool10.not.i, label %if.else.i.if.then19_crit_edge, label %if.then11.i

if.else.i.if.then19_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then19

if.then11.i:                                      ; preds = %if.else.i
  %vddc_dependency_on_mclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 2
  %vddc_voltage_table12.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 19
  %mask_low.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 19, i32 1
  %29 = ptrtoint ptr %mask_low.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %mask_low.i.i, align 4
  %phase_delay.i.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 19, i32 2
  %30 = ptrtoint ptr %phase_delay.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %phase_delay.i.i, align 4
  %31 = ptrtoint ptr %vddc_dependency_on_mclk.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %vddc_dependency_on_mclk.i, align 4
  %33 = ptrtoint ptr %vddc_voltage_table12.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %vddc_voltage_table12.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp31.not.i.i = icmp eq i32 %32, 0
  br i1 %cmp31.not.i.i, label %if.then11.i.if.end19.i_crit_edge, label %for.body.lr.ph.i.i

if.then11.i.if.end19.i_crit_edge:                 ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

for.body.lr.ph.i.i:                               ; preds = %if.then11.i
  %entries.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 2, i32 1
  br label %for.body.i135.i

for.body.i135.i:                                  ; preds = %for.body.i135.i.for.body.i135.i_crit_edge, %for.body.lr.ph.i.i
  %i.02.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i134.i, %for.body.i135.i.for.body.i135.i_crit_edge ]
  %34 = ptrtoint ptr %entries.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %entries.i.i, align 4
  %v.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %35, i32 %i.02.i.i, i32 1
  %36 = ptrtoint ptr %v.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %v.i.i, align 4
  %arrayidx5.i.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 19, i32 3, i32 %i.02.i.i
  %38 = ptrtoint ptr %arrayidx5.i.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %arrayidx5.i.i, align 4
  %smio_low.i.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 19, i32 3, i32 %i.02.i.i, i32 1
  %39 = ptrtoint ptr %smio_low.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %smio_low.i.i, align 4
  %inc.i134.i = add nuw i32 %i.02.i.i, 1
  %40 = ptrtoint ptr %vddc_voltage_table12.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %vddc_voltage_table12.i, align 4
  %cmp3.i.i = icmp ult i32 %inc.i134.i, %41
  br i1 %cmp3.i.i, label %for.body.i135.i.for.body.i135.i_crit_edge, label %for.body.i135.i.if.end19.i_crit_edge

for.body.i135.i.if.end19.i_crit_edge:             ; preds = %for.body.i135.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

for.body.i135.i.for.body.i135.i_crit_edge:        ; preds = %for.body.i135.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i135.i

if.end19.i:                                       ; preds = %for.body.i135.i.if.end19.i_crit_edge, %if.then11.i.if.end19.i_crit_edge, %si_trim_voltage_table_to_fit_state_table.exit.i, %if.end.i.if.end19.i_crit_edge
  %vddci_control.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 1
  %42 = ptrtoint ptr %vddci_control.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %vddci_control.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool20.not.i = icmp eq i8 %43, 0
  br i1 %tobool20.not.i, label %if.end19.i.if.end32.i_crit_edge, label %if.then21.i

if.end19.i.if.end32.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32.i

if.then21.i:                                      ; preds = %if.end19.i
  %vddci_voltage_table.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 20
  %call22.i = tail call i32 @amdgpu_atombios_get_voltage_table(ptr noundef %adev, i8 noundef zeroext 4, i8 noundef zeroext 0, ptr noundef %vddci_voltage_table.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22.i)
  %tobool23.not.i = icmp eq i32 %call22.i, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %if.then21.i.if.then19_crit_edge

if.then21.i.if.then19_crit_edge:                  ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then19

if.end25.i:                                       ; preds = %if.then21.i
  %44 = ptrtoint ptr %vddci_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %vddci_voltage_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %45)
  %cmp28.i = icmp ugt i32 %45, 32
  br i1 %cmp28.i, label %if.end.i138.i, label %if.end25.i.if.end32.i_crit_edge

if.end25.i.if.end32.i_crit_edge:                  ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32.i

if.end.i138.i:                                    ; preds = %if.end25.i
  %sub.i137.i = add i32 %45, -32
  br label %for.body.i145.i

for.body.i145.i:                                  ; preds = %for.body.i145.i.for.body.i145.i_crit_edge, %if.end.i138.i
  %i.01.i139.i = phi i32 [ 0, %if.end.i138.i ], [ %inc.i143.i, %for.body.i145.i.for.body.i145.i_crit_edge ]
  %arrayidx.i140.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 20, i32 3, i32 %i.01.i139.i
  %add.i141.i = add i32 %sub.i137.i, %i.01.i139.i
  %arrayidx4.i142.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 20, i32 3, i32 %add.i141.i
  %46 = ptrtoint ptr %arrayidx4.i142.i to i32
  call void @__asan_loadN_noabort(i32 %46, i32 8)
  %47 = load i64, ptr %arrayidx4.i142.i, align 4
  %48 = ptrtoint ptr %arrayidx.i140.i to i32
  call void @__asan_storeN_noabort(i32 %48, i32 8)
  store i64 %47, ptr %arrayidx.i140.i, align 4
  %inc.i143.i = add nuw nsw i32 %i.01.i139.i, 1
  %exitcond.not.i144.i = icmp eq i32 %inc.i143.i, 32
  br i1 %exitcond.not.i144.i, label %si_trim_voltage_table_to_fit_state_table.exit147.i, label %for.body.i145.i.for.body.i145.i_crit_edge

for.body.i145.i.for.body.i145.i_crit_edge:        ; preds = %for.body.i145.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i145.i

si_trim_voltage_table_to_fit_state_table.exit147.i: ; preds = %for.body.i145.i
  call void @__sanitizer_cov_trace_pc() #16
  %49 = ptrtoint ptr %vddci_voltage_table.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 32, ptr %vddci_voltage_table.i, align 4
  br label %if.end32.i

if.end32.i:                                       ; preds = %si_trim_voltage_table_to_fit_state_table.exit147.i, %if.end25.i.if.end32.i_crit_edge, %if.end19.i.if.end32.i_crit_edge
  %vddci_control_svi2.i = getelementptr inbounds %struct.si_power_info, ptr %18, i32 0, i32 19
  %50 = ptrtoint ptr %vddci_control_svi2.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %vddci_control_svi2.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool33.not.i = icmp eq i8 %51, 0
  br i1 %tobool33.not.i, label %if.end32.i.if.end43.i_crit_edge, label %if.then34.i

if.end32.i.if.end43.i_crit_edge:                  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

if.then34.i:                                      ; preds = %if.end32.i
  %vddci_dependency_on_mclk.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 1
  %vddci_voltage_table38.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 20
  %mask_low.i149.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 20, i32 1
  %52 = ptrtoint ptr %mask_low.i149.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 0, ptr %mask_low.i149.i, align 4
  %phase_delay.i150.i = getelementptr inbounds %struct.evergreen_power_info, ptr %18, i32 0, i32 20, i32 2
  %53 = ptrtoint ptr %phase_delay.i150.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %phase_delay.i150.i, align 4
  %54 = ptrtoint ptr %vddci_dependency_on_mclk.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %vddci_dependency_on_mclk.i, align 4
  %56 = ptrtoint ptr %vddci_voltage_table38.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %vddci_voltage_table38.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %cmp31.not.i151.i = icmp eq i32 %55, 0
  br i1 %cmp31.not.i151.i, label %if.then34.i.if.end43.i_crit_edge, label %for.body.lr.ph.i154.i

if.then34.i.if.end43.i_crit_edge:                 ; preds = %if.then34.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

for.body.lr.ph.i154.i:                            ; preds = %if.then34.i
  %entries.i153.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 1, i32 1
  br label %for.body.i161.i

for.body.i161.i:                                  ; preds = %for.body.i161.i.for.body.i161.i_crit_edge, %for.body.lr.ph.i154.i
  %i.02.i155.i = phi i32 [ 0, %for.body.lr.ph.i154.i ], [ %inc.i159.i, %for.body.i161.i.for.body.i161.i_crit_edge ]
  %57 = ptrtoint ptr %entries.i153.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %entries.i153.i, align 4
  %v.i156.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %58, i32 %i.02.i155.i, i32 1
  %59 = ptrtoint ptr %v.i156.i to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %v.i156.i, align 4
  %arrayidx5.i157.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 20, i32 3, i32 %i.02.i155.i
  %61 = ptrtoint ptr %arrayidx5.i157.i to i32
  call void @__asan_store2_noabort(i32 %61)
  store i16 %60, ptr %arrayidx5.i157.i, align 4
  %smio_low.i158.i = getelementptr %struct.evergreen_power_info, ptr %18, i32 0, i32 20, i32 3, i32 %i.02.i155.i, i32 1
  %62 = ptrtoint ptr %smio_low.i158.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %smio_low.i158.i, align 4
  %inc.i159.i = add nuw i32 %i.02.i155.i, 1
  %63 = ptrtoint ptr %vddci_voltage_table38.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %vddci_voltage_table38.i, align 4
  %cmp3.i160.i = icmp ult i32 %inc.i159.i, %64
  br i1 %cmp3.i160.i, label %for.body.i161.i.for.body.i161.i_crit_edge, label %for.body.i161.i.if.end43.i_crit_edge

for.body.i161.i.if.end43.i_crit_edge:             ; preds = %for.body.i161.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

for.body.i161.i.for.body.i161.i_crit_edge:        ; preds = %for.body.i161.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i161.i

if.end43.i:                                       ; preds = %for.body.i161.i.if.end43.i_crit_edge, %if.then34.i.if.end43.i_crit_edge, %if.end32.i.if.end43.i_crit_edge
  %mvdd_control.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %18, i32 0, i32 6
  %65 = ptrtoint ptr %mvdd_control.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %mvdd_control.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %tobool44.not.i = icmp eq i8 %66, 0
  br i1 %tobool44.not.i, label %if.end43.i.if.end63.i_crit_edge, label %if.then45.i

if.end43.i.if.end63.i_crit_edge:                  ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63.i

if.then45.i:                                      ; preds = %if.end43.i
  %mvdd_voltage_table.i = getelementptr inbounds %struct.si_power_info, ptr %18, i32 0, i32 3
  %call46.i = tail call i32 @amdgpu_atombios_get_voltage_table(ptr noundef %adev, i8 noundef zeroext 2, i8 noundef zeroext 0, ptr noundef %mvdd_voltage_table.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46.i)
  %tobool47.not.i = icmp eq i32 %call46.i, 0
  br i1 %tobool47.not.i, label %if.end50.i, label %if.then45.i.si_construct_voltage_tables.exit.thread237_crit_edge

if.then45.i.si_construct_voltage_tables.exit.thread237_crit_edge: ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_construct_voltage_tables.exit.thread237

if.end50.i:                                       ; preds = %if.then45.i
  %67 = ptrtoint ptr %mvdd_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %mvdd_voltage_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %cmp53.i = icmp eq i32 %68, 0
  br i1 %cmp53.i, label %if.end50.i.si_construct_voltage_tables.exit.thread237_crit_edge, label %if.end56.i

if.end50.i.si_construct_voltage_tables.exit.thread237_crit_edge: ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_construct_voltage_tables.exit.thread237

if.end56.i:                                       ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %68)
  %cmp59.i = icmp ugt i32 %68, 32
  br i1 %cmp59.i, label %if.end.i166.i, label %if.end56.i.if.end63.i_crit_edge

if.end56.i.if.end63.i_crit_edge:                  ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63.i

if.end.i166.i:                                    ; preds = %if.end56.i
  %sub.i165.i = add i32 %68, -32
  br label %for.body.i173.i

for.body.i173.i:                                  ; preds = %for.body.i173.i.for.body.i173.i_crit_edge, %if.end.i166.i
  %i.01.i167.i = phi i32 [ 0, %if.end.i166.i ], [ %inc.i171.i, %for.body.i173.i.for.body.i173.i_crit_edge ]
  %arrayidx.i168.i = getelementptr %struct.si_power_info, ptr %18, i32 0, i32 3, i32 3, i32 %i.01.i167.i
  %add.i169.i = add i32 %sub.i165.i, %i.01.i167.i
  %arrayidx4.i170.i = getelementptr %struct.si_power_info, ptr %18, i32 0, i32 3, i32 3, i32 %add.i169.i
  %69 = ptrtoint ptr %arrayidx4.i170.i to i32
  call void @__asan_loadN_noabort(i32 %69, i32 8)
  %70 = load i64, ptr %arrayidx4.i170.i, align 4
  %71 = ptrtoint ptr %arrayidx.i168.i to i32
  call void @__asan_storeN_noabort(i32 %71, i32 8)
  store i64 %70, ptr %arrayidx.i168.i, align 4
  %inc.i171.i = add nuw nsw i32 %i.01.i167.i, 1
  %exitcond.not.i172.i = icmp eq i32 %inc.i171.i, 32
  br i1 %exitcond.not.i172.i, label %si_trim_voltage_table_to_fit_state_table.exit175.i, label %for.body.i173.i.for.body.i173.i_crit_edge

for.body.i173.i.for.body.i173.i_crit_edge:        ; preds = %for.body.i173.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i173.i

si_trim_voltage_table_to_fit_state_table.exit175.i: ; preds = %for.body.i173.i
  call void @__sanitizer_cov_trace_pc() #16
  %72 = ptrtoint ptr %mvdd_voltage_table.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 32, ptr %mvdd_voltage_table.i, align 4
  br label %if.end63.i

if.end63.i:                                       ; preds = %si_trim_voltage_table_to_fit_state_table.exit175.i, %if.end56.i.if.end63.i_crit_edge, %if.end43.i.if.end63.i_crit_edge
  %vddc_phase_shed_control.i = getelementptr inbounds %struct.si_power_info, ptr %18, i32 0, i32 15
  %73 = ptrtoint ptr %vddc_phase_shed_control.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %vddc_phase_shed_control.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %tobool64.not.i = icmp eq i8 %74, 0
  br i1 %tobool64.not.i, label %if.end63.i.if.end21_crit_edge, label %if.then65.i

if.end63.i.if.end21_crit_edge:                    ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

if.then65.i:                                      ; preds = %if.end63.i
  %vddc_phase_shed_table.i = getelementptr inbounds %struct.si_power_info, ptr %18, i32 0, i32 4
  %call66.i = tail call i32 @amdgpu_atombios_get_voltage_table(ptr noundef %adev, i8 noundef zeroext 1, i8 noundef zeroext 4, ptr noundef %vddc_phase_shed_table.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66.i)
  %tobool67.not.i = icmp eq i32 %call66.i, 0
  br i1 %tobool67.not.i, label %if.then65.i.if.end70.i_crit_edge, label %if.then68.i

if.then65.i.if.end70.i_crit_edge:                 ; preds = %if.then65.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70.i

if.then68.i:                                      ; preds = %if.then65.i
  call void @__sanitizer_cov_trace_pc() #16
  %75 = ptrtoint ptr %vddc_phase_shed_control.i to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 0, ptr %vddc_phase_shed_control.i, align 2
  br label %if.end70.i

if.end70.i:                                       ; preds = %if.then68.i, %if.then65.i.if.end70.i_crit_edge
  %76 = ptrtoint ptr %vddc_phase_shed_table.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %vddc_phase_shed_table.i, align 4
  %78 = add i32 %77, -33
  call void @__sanitizer_cov_trace_const_cmp4(i32 -32, i32 %78)
  %79 = icmp ult i32 %78, -32
  br i1 %79, label %si_construct_voltage_tables.exit, label %if.end70.i.if.end21_crit_edge

if.end70.i.if.end21_crit_edge:                    ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

si_construct_voltage_tables.exit.thread237:       ; preds = %if.end50.i.si_construct_voltage_tables.exit.thread237_crit_edge, %if.then45.i.si_construct_voltage_tables.exit.thread237_crit_edge
  %retval.0.ph.i.ph = phi i32 [ -22, %if.end50.i.si_construct_voltage_tables.exit.thread237_crit_edge ], [ %call46.i, %if.then45.i.si_construct_voltage_tables.exit.thread237_crit_edge ]
  %80 = ptrtoint ptr %mvdd_control.i to i32
  call void @__asan_store1_noabort(i32 %80)
  store i8 0, ptr %mvdd_control.i, align 2
  br label %if.then19

si_construct_voltage_tables.exit:                 ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #16
  %81 = ptrtoint ptr %vddc_phase_shed_control.i to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 0, ptr %vddc_phase_shed_control.i, align 2
  br label %if.end21

if.then19:                                        ; preds = %si_construct_voltage_tables.exit.thread237, %if.then21.i.if.then19_crit_edge, %if.else.i.if.then19_crit_edge, %if.then.i.if.then19_crit_edge
  %retval.0.i231 = phi i32 [ %retval.0.ph.i.ph, %si_construct_voltage_tables.exit.thread237 ], [ %call22.i, %if.then21.i.if.then19_crit_edge ], [ -22, %if.else.i.if.then19_crit_edge ], [ %call3.i, %if.then.i.if.then19_crit_edge ]
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.66) #14
  br label %cleanup

if.end21:                                         ; preds = %si_construct_voltage_tables.exit, %if.end70.i.if.end21_crit_edge, %if.end63.i.if.end21_crit_edge, %lor.lhs.false13.if.end21_crit_edge
  %dynamic_ac_timing = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 2
  %82 = ptrtoint ptr %dynamic_ac_timing to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %dynamic_ac_timing, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %83)
  %tobool22.not = icmp eq i8 %83, 0
  br i1 %tobool22.not, label %if.end21.if.end29_crit_edge, label %if.then23

if.end21.if.end29_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then23:                                        ; preds = %if.end21
  %84 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %priv.i, align 4
  %mc_reg_table.i = getelementptr inbounds %struct.si_power_info, ptr %85, i32 0, i32 2
  %call.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 1485, i32 noundef 0) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %86 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %86, i32 noundef 3520, i32 noundef 2772) #18
  %tobool.not.i177 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i177, label %if.then23.if.then26_crit_edge, label %if.end.i179

if.then23.if.then26_crit_edge:                    ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then26

if.end.i179:                                      ; preds = %if.then23
  %shr.i.i = lshr i32 %call.i.i, 16
  %conv.i.i = trunc i32 %shr.i.i to i8
  %call3.i178 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2600, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2715, i32 noundef %call3.i178, i32 noundef 0) #14
  %call4.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2601, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2716, i32 noundef %call4.i, i32 noundef 0) #14
  %call5.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2602, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2717, i32 noundef %call5.i, i32 noundef 0) #14
  %call6.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2603, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2718, i32 noundef %call6.i, i32 noundef 0) #14
  %call7.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2691, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2721, i32 noundef %call7.i, i32 noundef 0) #14
  %call8.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2731, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2722, i32 noundef %call8.i, i32 noundef 0) #14
  %call9.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2769, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2770, i32 noundef %call9.i, i32 noundef 0) #14
  %call10.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2607, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2719, i32 noundef %call10.i, i32 noundef 0) #14
  %call11.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2608, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2720, i32 noundef %call11.i, i32 noundef 0) #14
  %call12.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2605, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2759, i32 noundef %call12.i, i32 noundef 0) #14
  %call13.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2606, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2760, i32 noundef %call13.i, i32 noundef 0) #14
  %call14.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2604, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2771, i32 noundef %call14.i, i32 noundef 0) #14
  %call15.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2775, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2776, i32 noundef %call15.i, i32 noundef 0) #14
  %call16.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2773, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2774, i32 noundef %call16.i, i32 noundef 0) #14
  %call17.i = tail call i32 @amdgpu_atombios_init_mc_reg_table(ptr noundef %adev, i8 noundef zeroext %conv.i.i, ptr noundef nonnull %call7.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i)
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %if.end20.i, label %if.end.i179.si_initialize_mc_reg_table.exit.thread243_crit_edge

if.end.i179.si_initialize_mc_reg_table.exit.thread243_crit_edge: ; preds = %if.end.i179
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit.thread243

if.end20.i:                                       ; preds = %if.end.i179
  %87 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %call7.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %88)
  %cmp.i.i = icmp ugt i8 %88, 16
  br i1 %cmp.i.i, label %if.end20.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, label %if.end.i.i181

if.end20.i.si_initialize_mc_reg_table.exit.thread243_crit_edge: ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit.thread243

if.end.i.i181:                                    ; preds = %if.end20.i
  %num_entries.i.i = getelementptr inbounds %struct.atom_mc_reg_table, ptr %call7.i.i.i, i32 0, i32 1
  %89 = ptrtoint ptr %num_entries.i.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %num_entries.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %90)
  %cmp3.i.i180 = icmp ugt i8 %90, 16
  br i1 %cmp3.i.i180, label %if.end.i.i181.si_initialize_mc_reg_table.exit.thread243_crit_edge, label %for.cond.preheader.i.i

if.end.i.i181.si_initialize_mc_reg_table.exit.thread243_crit_edge: ; preds = %if.end.i.i181
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit.thread243

for.cond.preheader.i.i:                           ; preds = %if.end.i.i181
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %88)
  %cmp1084.not.i.i = icmp eq i8 %88, 0
  br i1 %cmp1084.not.i.i, label %for.cond.preheader.i.i.for.end.i.i_crit_edge, label %for.cond.preheader.i.i.for.body.i.i183_crit_edge

for.cond.preheader.i.i.for.body.i.i183_crit_edge: ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i183

for.cond.preheader.i.i.for.end.i.i_crit_edge:     ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i183:                                  ; preds = %for.body.i.i183.for.body.i.i183_crit_edge, %for.cond.preheader.i.i.for.body.i.i183_crit_edge
  %indvars.iv.i.i = phi i32 [ %indvars.iv.next.i.i, %for.body.i.i183.for.body.i.i183_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i183_crit_edge ]
  %arrayidx.i.i182 = getelementptr %struct.atom_mc_reg_table, ptr %call7.i.i.i, i32 0, i32 3, i32 %indvars.iv.i.i
  %91 = ptrtoint ptr %arrayidx.i.i182 to i32
  call void @__asan_load2_noabort(i32 %91)
  %92 = load i16, ptr %arrayidx.i.i182, align 4
  %s115.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %indvars.iv.i.i, i32 1
  %93 = ptrtoint ptr %s115.i.i to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 %92, ptr %s115.i.i, align 2
  %indvars.iv.next.i.i = add nuw nsw i32 %indvars.iv.i.i, 1
  %94 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %call7.i.i.i, align 8
  %96 = zext i8 %95 to i32
  %cmp10.i.i = icmp ult i32 %indvars.iv.next.i.i, %96
  br i1 %cmp10.i.i, label %for.body.i.i183.for.body.i.i183_crit_edge, label %for.body.i.i183.for.end.i.i_crit_edge

for.body.i.i183.for.end.i.i_crit_edge:            ; preds = %for.body.i.i183
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i183.for.body.i.i183_crit_edge:        ; preds = %for.body.i.i183
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i183

for.end.i.i:                                      ; preds = %for.body.i.i183.for.end.i.i_crit_edge, %for.cond.preheader.i.i.for.end.i.i_crit_edge
  %.lcssa83.i.i = phi i8 [ 0, %for.cond.preheader.i.i.for.end.i.i_crit_edge ], [ %95, %for.body.i.i183.for.end.i.i_crit_edge ]
  %97 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_store1_noabort(i32 %97)
  store i8 %.lcssa83.i.i, ptr %mc_reg_table.i, align 4
  %98 = ptrtoint ptr %num_entries.i.i to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %num_entries.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %99)
  %cmp2288.not.i.i = icmp eq i8 %99, 0
  br i1 %cmp2288.not.i.i, label %for.end.i.i.if.end24.i_crit_edge, label %for.end.i.i.for.body24.i.i_crit_edge

for.end.i.i.for.body24.i.i_crit_edge:             ; preds = %for.end.i.i
  br label %for.body24.i.i

for.end.i.i.if.end24.i_crit_edge:                 ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24.i

for.body24.i.i:                                   ; preds = %for.inc52.i.i.for.body24.i.i_crit_edge, %for.end.i.i.for.body24.i.i_crit_edge
  %indvars.iv95.i.i = phi i32 [ %indvars.iv.next96.i.i, %for.inc52.i.i.for.body24.i.i_crit_edge ], [ 0, %for.end.i.i.for.body24.i.i_crit_edge ]
  %arrayidx26.i.i = getelementptr %struct.atom_mc_reg_table, ptr %call7.i.i.i, i32 0, i32 2, i32 %indvars.iv95.i.i
  %100 = ptrtoint ptr %arrayidx26.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx26.i.i, align 4
  %arrayidx29.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv95.i.i
  %102 = ptrtoint ptr %arrayidx29.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %101, ptr %arrayidx29.i.i, align 4
  %103 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %call7.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %104)
  %cmp3586.not.i.i = icmp eq i8 %104, 0
  br i1 %cmp3586.not.i.i, label %for.body24.i.i.for.inc52.i.i_crit_edge, label %for.body24.i.i.for.body37.i.i_crit_edge

for.body24.i.i.for.body37.i.i_crit_edge:          ; preds = %for.body24.i.i
  br label %for.body37.i.i

for.body24.i.i.for.inc52.i.i_crit_edge:           ; preds = %for.body24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc52.i.i

for.body37.i.i:                                   ; preds = %for.body37.i.i.for.body37.i.i_crit_edge, %for.body24.i.i.for.body37.i.i_crit_edge
  %indvars.iv93.i.i = phi i32 [ %indvars.iv.next94.i.i, %for.body37.i.i.for.body37.i.i_crit_edge ], [ 0, %for.body24.i.i.for.body37.i.i_crit_edge ]
  %arrayidx42.i.i = getelementptr %struct.atom_mc_reg_table, ptr %call7.i.i.i, i32 0, i32 2, i32 %indvars.iv95.i.i, i32 1, i32 %indvars.iv93.i.i
  %105 = ptrtoint ptr %arrayidx42.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %arrayidx42.i.i, align 4
  %arrayidx48.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv95.i.i, i32 1, i32 %indvars.iv93.i.i
  %107 = ptrtoint ptr %arrayidx48.i.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %106, ptr %arrayidx48.i.i, align 4
  %indvars.iv.next94.i.i = add nuw nsw i32 %indvars.iv93.i.i, 1
  %108 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %call7.i.i.i, align 8
  %110 = zext i8 %109 to i32
  %cmp35.i.i = icmp ult i32 %indvars.iv.next94.i.i, %110
  br i1 %cmp35.i.i, label %for.body37.i.i.for.body37.i.i_crit_edge, label %for.body37.i.i.for.inc52.i.i_crit_edge

for.body37.i.i.for.inc52.i.i_crit_edge:           ; preds = %for.body37.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc52.i.i

for.body37.i.i.for.body37.i.i_crit_edge:          ; preds = %for.body37.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body37.i.i

for.inc52.i.i:                                    ; preds = %for.body37.i.i.for.inc52.i.i_crit_edge, %for.body24.i.i.for.inc52.i.i_crit_edge
  %indvars.iv.next96.i.i = add nuw nsw i32 %indvars.iv95.i.i, 1
  %111 = ptrtoint ptr %num_entries.i.i to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %num_entries.i.i, align 1
  %113 = zext i8 %112 to i32
  %cmp22.i.i = icmp ult i32 %indvars.iv.next96.i.i, %113
  br i1 %cmp22.i.i, label %for.inc52.i.i.for.body24.i.i_crit_edge, label %if.end24thread-pre-split.i

for.inc52.i.i.for.body24.i.i_crit_edge:           ; preds = %for.inc52.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body24.i.i

if.end24thread-pre-split.i:                       ; preds = %for.inc52.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %114 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_load1_noabort(i32 %114)
  %.pr.i = load i8, ptr %mc_reg_table.i, align 4
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.end24thread-pre-split.i, %for.end.i.i.if.end24.i_crit_edge
  %115 = phi i8 [ %.pr.i, %if.end24thread-pre-split.i ], [ %.lcssa83.i.i, %for.end.i.i.if.end24.i_crit_edge ]
  %.lcssa.i.i = phi i8 [ %112, %if.end24thread-pre-split.i ], [ 0, %for.end.i.i.if.end24.i_crit_edge ]
  %num_entries56.i.i = getelementptr inbounds %struct.si_power_info, ptr %85, i32 0, i32 2, i32 1
  %116 = ptrtoint ptr %num_entries56.i.i to i32
  call void @__asan_store1_noabort(i32 %116)
  store i8 %.lcssa.i.i, ptr %num_entries56.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %115)
  %cmp21.not.i.i = icmp eq i8 %115, 0
  br i1 %cmp21.not.i.i, label %si_set_s0_mc_reg_index.exitthread-pre-split.i, label %if.end24.i.for.body.i74.i_crit_edge

if.end24.i.for.body.i74.i_crit_edge:              ; preds = %if.end24.i
  br label %for.body.i74.i

for.body.i74.i:                                   ; preds = %si_check_s0_mc_reg_index.exit.i.i.for.body.i74.i_crit_edge, %if.end24.i.for.body.i74.i_crit_edge
  %i.022.i.i = phi i32 [ %inc.i.i184, %si_check_s0_mc_reg_index.exit.i.i.for.body.i74.i_crit_edge ], [ 0, %if.end24.i.for.body.i74.i_crit_edge ]
  %arrayidx.i73.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %i.022.i.i
  %s1.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %i.022.i.i, i32 1
  %117 = ptrtoint ptr %s1.i.i to i32
  call void @__asan_load2_noabort(i32 %117)
  %118 = load i16, ptr %s1.i.i, align 2
  %119 = zext i16 %118 to i64
  call void @__sanitizer_cov_trace_switch(i64 %119, ptr @__sancov_gen_cov_switch_values.106)
  switch i16 %118, label %for.body.i74.i.si_check_s0_mc_reg_index.exit.i.i_crit_edge [
    i16 2600, label %for.body.i74.i._crit_edge
    i16 2601, label %sw.bb1.i.i.i
    i16 2602, label %sw.bb2.i.i.i
    i16 2603, label %sw.bb3.i.i.i
    i16 2605, label %sw.bb4.i.i.i
    i16 2606, label %sw.bb5.i.i.i
    i16 2607, label %sw.bb6.i.i.i
    i16 2608, label %sw.bb7.i.i.i
    i16 2691, label %sw.bb8.i.i.i
    i16 2731, label %sw.bb9.i.i.i
    i16 2769, label %sw.bb10.i.i.i
    i16 2604, label %sw.bb11.i.i.i
    i16 2775, label %sw.bb12.i.i.i
    i16 2773, label %sw.bb13.i.i.i
  ]

for.body.i74.i._crit_edge:                        ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

for.body.i74.i.si_check_s0_mc_reg_index.exit.i.i_crit_edge: ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_check_s0_mc_reg_index.exit.i.i

sw.bb1.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb2.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb3.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb4.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb5.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb6.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb7.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb8.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb9.i.i.i:                                     ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb10.i.i.i:                                    ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb11.i.i.i:                                    ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb12.i.i.i:                                    ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

sw.bb13.i.i.i:                                    ; preds = %for.body.i74.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %120

120:                                              ; preds = %sw.bb13.i.i.i, %sw.bb12.i.i.i, %sw.bb11.i.i.i, %sw.bb10.i.i.i, %sw.bb9.i.i.i, %sw.bb8.i.i.i, %sw.bb7.i.i.i, %sw.bb6.i.i.i, %sw.bb5.i.i.i, %sw.bb4.i.i.i, %sw.bb3.i.i.i, %sw.bb2.i.i.i, %sw.bb1.i.i.i, %for.body.i74.i._crit_edge
  %.sink.i.i.i = phi i16 [ 2774, %sw.bb13.i.i.i ], [ 2776, %sw.bb12.i.i.i ], [ 2771, %sw.bb11.i.i.i ], [ 2770, %sw.bb10.i.i.i ], [ 2722, %sw.bb9.i.i.i ], [ 2721, %sw.bb8.i.i.i ], [ 2720, %sw.bb7.i.i.i ], [ 2719, %sw.bb6.i.i.i ], [ 2760, %sw.bb5.i.i.i ], [ 2759, %sw.bb4.i.i.i ], [ 2718, %sw.bb3.i.i.i ], [ 2717, %sw.bb2.i.i.i ], [ 2716, %sw.bb1.i.i.i ], [ 2715, %for.body.i74.i._crit_edge ]
  br label %si_check_s0_mc_reg_index.exit.i.i

si_check_s0_mc_reg_index.exit.i.i:                ; preds = %120, %for.body.i74.i.si_check_s0_mc_reg_index.exit.i.i_crit_edge
  %.sroa.speculated.i.i = phi i16 [ %.sink.i.i.i, %120 ], [ %118, %for.body.i74.i.si_check_s0_mc_reg_index.exit.i.i_crit_edge ]
  %121 = ptrtoint ptr %arrayidx.i73.i to i32
  call void @__asan_store2_noabort(i32 %121)
  store i16 %.sroa.speculated.i.i, ptr %arrayidx.i73.i, align 4
  %inc.i.i184 = add nuw nsw i32 %i.022.i.i, 1
  %122 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %mc_reg_table.i, align 4
  %conv.i75.i = zext i8 %123 to i32
  %cmp.i76.i = icmp ult i32 %inc.i.i184, %conv.i75.i
  br i1 %cmp.i76.i, label %si_check_s0_mc_reg_index.exit.i.i.for.body.i74.i_crit_edge, label %si_check_s0_mc_reg_index.exit.i.i.si_set_s0_mc_reg_index.exit.i_crit_edge

si_check_s0_mc_reg_index.exit.i.i.si_set_s0_mc_reg_index.exit.i_crit_edge: ; preds = %si_check_s0_mc_reg_index.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_set_s0_mc_reg_index.exit.i

si_check_s0_mc_reg_index.exit.i.i.for.body.i74.i_crit_edge: ; preds = %si_check_s0_mc_reg_index.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i74.i

si_set_s0_mc_reg_index.exitthread-pre-split.i:    ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %124 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_load1_noabort(i32 %124)
  %.pr97.i = load i8, ptr %mc_reg_table.i, align 4
  br label %si_set_s0_mc_reg_index.exit.i

si_set_s0_mc_reg_index.exit.i:                    ; preds = %si_set_s0_mc_reg_index.exitthread-pre-split.i, %si_check_s0_mc_reg_index.exit.i.i.si_set_s0_mc_reg_index.exit.i_crit_edge
  %125 = phi i8 [ %.pr97.i, %si_set_s0_mc_reg_index.exitthread-pre-split.i ], [ %123, %si_check_s0_mc_reg_index.exit.i.i.si_set_s0_mc_reg_index.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %125)
  %cmp252.not.i.i = icmp eq i8 %125, 0
  br i1 %cmp252.not.i.i, label %if.end28.thread.i, label %for.body.lr.ph.i.i185

if.end28.thread.i:                                ; preds = %si_set_s0_mc_reg_index.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %126 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_store1_noabort(i32 %126)
  store i8 0, ptr %mc_reg_table.i, align 4
  br label %si_initialize_mc_reg_table.exit

for.body.lr.ph.i.i185:                            ; preds = %si_set_s0_mc_reg_index.exit.i
  %vram_type.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 21
  br label %for.body.i78.i

for.body.i78.i:                                   ; preds = %for.inc164.i.i.for.body.i78.i_crit_edge, %for.body.lr.ph.i.i185
  %indvars.iv270.i.i = phi i32 [ 0, %for.body.lr.ph.i.i185 ], [ %indvars.iv.next271.i.i, %for.inc164.i.i.for.body.i78.i_crit_edge ]
  %j.0254.i.i = phi i8 [ %125, %for.body.lr.ph.i.i185 ], [ %j.1.i.i, %for.inc164.i.i.for.body.i78.i_crit_edge ]
  %conv4.i.i = zext i8 %j.0254.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %j.0254.i.i)
  %cmp5.i.i = icmp ugt i8 %j.0254.i.i, 15
  br i1 %cmp5.i.i, label %for.body.i78.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, label %if.end.i80.i

for.body.i78.i.si_initialize_mc_reg_table.exit.thread243_crit_edge: ; preds = %for.body.i78.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit.thread243

if.end.i80.i:                                     ; preds = %for.body.i78.i
  %s1.i79.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %indvars.iv270.i.i, i32 1
  %127 = ptrtoint ptr %s1.i79.i to i32
  call void @__asan_load2_noabort(i32 %127)
  %128 = load i16, ptr %s1.i79.i, align 2
  %129 = zext i16 %128 to i64
  call void @__sanitizer_cov_trace_switch(i64 %129, ptr @__sancov_gen_cov_switch_values.107)
  switch i16 %128, label %if.end.i80.i.for.inc164.i.i_crit_edge [
    i16 2689, label %sw.bb.i.i
    i16 2690, label %sw.bb128.i.i
  ]

if.end.i80.i.for.inc164.i.i_crit_edge:            ; preds = %if.end.i80.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc164.i.i

sw.bb.i.i:                                        ; preds = %if.end.i80.i
  %call.i81.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2691, i32 noundef 0) #14
  %arrayidx10.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv4.i.i
  %s111.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv4.i.i, i32 1
  %130 = ptrtoint ptr %s111.i.i to i32
  call void @__asan_store2_noabort(i32 %130)
  store i16 2691, ptr %s111.i.i, align 2
  %131 = ptrtoint ptr %arrayidx10.i.i to i32
  call void @__asan_store2_noabort(i32 %131)
  store i16 2721, ptr %arrayidx10.i.i, align 4
  %132 = ptrtoint ptr %num_entries56.i.i to i32
  call void @__asan_load1_noabort(i32 %132)
  %133 = load i8, ptr %num_entries56.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %133)
  %cmp18246.not.i.i = icmp eq i8 %133, 0
  br i1 %cmp18246.not.i.i, label %sw.bb.i.i.for.end.i83.i_crit_edge, label %for.body20.lr.ph.i.i

sw.bb.i.i.for.end.i83.i_crit_edge:                ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i83.i

for.body20.lr.ph.i.i:                             ; preds = %sw.bb.i.i
  %and.i.i = and i32 %call.i81.i, -65536
  %wide.trip.count260.i.i = zext i8 %133 to i32
  br label %for.body20.i.i

for.body20.i.i:                                   ; preds = %for.body20.i.i.for.body20.i.i_crit_edge, %for.body20.lr.ph.i.i
  %indvars.iv258.i.i = phi i32 [ 0, %for.body20.lr.ph.i.i ], [ %indvars.iv.next259.i.i, %for.body20.i.i.for.body20.i.i_crit_edge ]
  %arrayidx24.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv258.i.i, i32 1, i32 %indvars.iv270.i.i
  %134 = ptrtoint ptr %arrayidx24.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %arrayidx24.i.i, align 4
  %shr.i82.i = lshr i32 %135, 16
  %or.i.i = or i32 %shr.i82.i, %and.i.i
  %arrayidx31.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv258.i.i, i32 1, i32 %conv4.i.i
  %136 = ptrtoint ptr %arrayidx31.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 %or.i.i, ptr %arrayidx31.i.i, align 4
  %indvars.iv.next259.i.i = add nuw nsw i32 %indvars.iv258.i.i, 1
  %exitcond261.not.i.i = icmp eq i32 %indvars.iv.next259.i.i, %wide.trip.count260.i.i
  br i1 %exitcond261.not.i.i, label %for.body20.i.i.for.end.i83.i_crit_edge, label %for.body20.i.i.for.body20.i.i_crit_edge

for.body20.i.i.for.body20.i.i_crit_edge:          ; preds = %for.body20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body20.i.i

for.body20.i.i.for.end.i83.i_crit_edge:           ; preds = %for.body20.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i83.i

for.end.i83.i:                                    ; preds = %for.body20.i.i.for.end.i83.i_crit_edge, %sw.bb.i.i.for.end.i83.i_crit_edge
  %inc32.i.i = add i8 %j.0254.i.i, 1
  %conv33.i.i = zext i8 %inc32.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %inc32.i.i)
  %cmp34.i.i = icmp ugt i8 %inc32.i.i, 15
  br i1 %cmp34.i.i, label %for.end.i83.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, label %if.end37.i.i

for.end.i83.i.si_initialize_mc_reg_table.exit.thread243_crit_edge: ; preds = %for.end.i83.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit.thread243

if.end37.i.i:                                     ; preds = %for.end.i83.i
  %call38.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2731, i32 noundef 0) #14
  %arrayidx41.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv33.i.i
  %s142.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv33.i.i, i32 1
  %137 = ptrtoint ptr %s142.i.i to i32
  call void @__asan_store2_noabort(i32 %137)
  store i16 2731, ptr %s142.i.i, align 2
  %138 = ptrtoint ptr %arrayidx41.i.i to i32
  call void @__asan_store2_noabort(i32 %138)
  store i16 2722, ptr %arrayidx41.i.i, align 4
  %139 = ptrtoint ptr %num_entries56.i.i to i32
  call void @__asan_load1_noabort(i32 %139)
  %140 = load i8, ptr %num_entries56.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %140)
  %cmp51248.not.i.i = icmp eq i8 %140, 0
  br i1 %cmp51248.not.i.i, label %if.end37.i.i.for.end82.i.i_crit_edge, label %for.body53.lr.ph.i.i

if.end37.i.i.for.end82.i.i_crit_edge:             ; preds = %if.end37.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end82.i.i

for.body53.lr.ph.i.i:                             ; preds = %if.end37.i.i
  %and54.i.i = and i32 %call38.i.i, -65536
  %wide.trip.count264.i.i = zext i8 %140 to i32
  br label %for.body53.i.i

for.body53.i.i:                                   ; preds = %for.inc80.i.i.for.body53.i.i_crit_edge, %for.body53.lr.ph.i.i
  %indvars.iv262.i.i = phi i32 [ 0, %for.body53.lr.ph.i.i ], [ %indvars.iv.next263.i.i, %for.inc80.i.i.for.body53.i.i_crit_edge ]
  %arrayidx60.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv262.i.i, i32 1, i32 %indvars.iv270.i.i
  %141 = ptrtoint ptr %arrayidx60.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %arrayidx60.i.i, align 4
  %and61.i.i = and i32 %142, 65535
  %or62.i.i = or i32 %and61.i.i, %and54.i.i
  %arrayidx68.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv262.i.i, i32 1, i32 %conv33.i.i
  %143 = ptrtoint ptr %arrayidx68.i.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 %or62.i.i, ptr %arrayidx68.i.i, align 4
  %144 = ptrtoint ptr %vram_type.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %vram_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %145)
  %cmp69.not.i.i = icmp eq i32 %145, 5
  br i1 %cmp69.not.i.i, label %for.body53.i.i.for.inc80.i.i_crit_edge, label %if.then71.i.i

for.body53.i.i.for.inc80.i.i_crit_edge:           ; preds = %for.body53.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc80.i.i

if.then71.i.i:                                    ; preds = %for.body53.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %or78.i.i = or i32 %or62.i.i, 256
  %146 = ptrtoint ptr %arrayidx68.i.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 %or78.i.i, ptr %arrayidx68.i.i, align 4
  br label %for.inc80.i.i

for.inc80.i.i:                                    ; preds = %if.then71.i.i, %for.body53.i.i.for.inc80.i.i_crit_edge
  %indvars.iv.next263.i.i = add nuw nsw i32 %indvars.iv262.i.i, 1
  %exitcond265.not.i.i = icmp eq i32 %indvars.iv.next263.i.i, %wide.trip.count264.i.i
  br i1 %exitcond265.not.i.i, label %for.inc80.i.i.for.end82.i.i_crit_edge, label %for.inc80.i.i.for.body53.i.i_crit_edge

for.inc80.i.i.for.body53.i.i_crit_edge:           ; preds = %for.inc80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body53.i.i

for.inc80.i.i.for.end82.i.i_crit_edge:            ; preds = %for.inc80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end82.i.i

for.end82.i.i:                                    ; preds = %for.inc80.i.i.for.end82.i.i_crit_edge, %if.end37.i.i.for.end82.i.i_crit_edge
  %inc83.i.i = add i8 %j.0254.i.i, 2
  %147 = ptrtoint ptr %vram_type.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %vram_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %148)
  %cmp86.not.i.i = icmp eq i32 %148, 5
  br i1 %cmp86.not.i.i, label %for.end82.i.i.for.inc164.i.i_crit_edge, label %if.then88.i.i

for.end82.i.i.for.inc164.i.i_crit_edge:           ; preds = %for.end82.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc164.i.i

if.then88.i.i:                                    ; preds = %for.end82.i.i
  %conv89.i.i = zext i8 %inc83.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %inc83.i.i)
  %cmp90.i.i = icmp ugt i8 %inc83.i.i, 15
  br i1 %cmp90.i.i, label %if.then88.i.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, label %if.end93.i.i

if.then88.i.i.si_initialize_mc_reg_table.exit.thread243_crit_edge: ; preds = %if.then88.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit.thread243

if.end93.i.i:                                     ; preds = %if.then88.i.i
  %arrayidx96.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv89.i.i
  %s197.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv89.i.i, i32 1
  %149 = ptrtoint ptr %s197.i.i to i32
  call void @__asan_store2_noabort(i32 %149)
  store i16 2612, ptr %s197.i.i, align 2
  %150 = ptrtoint ptr %arrayidx96.i.i to i32
  call void @__asan_store2_noabort(i32 %150)
  store i16 2612, ptr %arrayidx96.i.i, align 4
  br i1 %cmp51248.not.i.i, label %if.end93.i.i.for.end125.i.i_crit_edge, label %for.body108.preheader.i.i

if.end93.i.i.for.end125.i.i_crit_edge:            ; preds = %if.end93.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end125.i.i

for.body108.preheader.i.i:                        ; preds = %if.end93.i.i
  %wide.trip.count268.i.i = zext i8 %140 to i32
  br label %for.body108.i.i

for.body108.i.i:                                  ; preds = %for.body108.i.i.for.body108.i.i_crit_edge, %for.body108.preheader.i.i
  %indvars.iv266.i.i = phi i32 [ 0, %for.body108.preheader.i.i ], [ %indvars.iv.next267.i.i, %for.body108.i.i.for.body108.i.i_crit_edge ]
  %arrayidx114.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv266.i.i, i32 1, i32 %indvars.iv270.i.i
  %151 = ptrtoint ptr %arrayidx114.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %arrayidx114.i.i, align 4
  %shr116.i.i = lshr i32 %152, 16
  %arrayidx122.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv266.i.i, i32 1, i32 %conv89.i.i
  %153 = ptrtoint ptr %arrayidx122.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %shr116.i.i, ptr %arrayidx122.i.i, align 4
  %indvars.iv.next267.i.i = add nuw nsw i32 %indvars.iv266.i.i, 1
  %exitcond269.not.i.i = icmp eq i32 %indvars.iv.next267.i.i, %wide.trip.count268.i.i
  br i1 %exitcond269.not.i.i, label %for.body108.i.i.for.end125.i.i_crit_edge, label %for.body108.i.i.for.body108.i.i_crit_edge

for.body108.i.i.for.body108.i.i_crit_edge:        ; preds = %for.body108.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body108.i.i

for.body108.i.i.for.end125.i.i_crit_edge:         ; preds = %for.body108.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end125.i.i

for.end125.i.i:                                   ; preds = %for.body108.i.i.for.end125.i.i_crit_edge, %if.end93.i.i.for.end125.i.i_crit_edge
  %inc126.i.i = add i8 %j.0254.i.i, 3
  br label %for.inc164.i.i

sw.bb128.i.i:                                     ; preds = %if.end.i80.i
  %call129.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2769, i32 noundef 0) #14
  %arrayidx132.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv4.i.i
  %s1133.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 4, i32 %conv4.i.i, i32 1
  %154 = ptrtoint ptr %s1133.i.i to i32
  call void @__asan_store2_noabort(i32 %154)
  store i16 2769, ptr %s1133.i.i, align 2
  %155 = ptrtoint ptr %arrayidx132.i.i to i32
  call void @__asan_store2_noabort(i32 %155)
  store i16 2770, ptr %arrayidx132.i.i, align 4
  %156 = ptrtoint ptr %num_entries56.i.i to i32
  call void @__asan_load1_noabort(i32 %156)
  %157 = load i8, ptr %num_entries56.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %157)
  %cmp142244.not.i.i = icmp eq i8 %157, 0
  br i1 %cmp142244.not.i.i, label %sw.bb128.i.i.for.end162.i.i_crit_edge, label %for.body144.lr.ph.i.i

sw.bb128.i.i.for.end162.i.i_crit_edge:            ; preds = %sw.bb128.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end162.i.i

for.body144.lr.ph.i.i:                            ; preds = %sw.bb128.i.i
  %and145.i.i = and i32 %call129.i.i, -65536
  %wide.trip.count.i.i = zext i8 %157 to i32
  br label %for.body144.i.i

for.body144.i.i:                                  ; preds = %for.body144.i.i.for.body144.i.i_crit_edge, %for.body144.lr.ph.i.i
  %indvars.iv.i85.i = phi i32 [ 0, %for.body144.lr.ph.i.i ], [ %indvars.iv.next.i86.i, %for.body144.i.i.for.body144.i.i_crit_edge ]
  %arrayidx151.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv.i85.i, i32 1, i32 %indvars.iv270.i.i
  %158 = ptrtoint ptr %arrayidx151.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %arrayidx151.i.i, align 4
  %and152.i.i = and i32 %159, 65535
  %or153.i.i = or i32 %and152.i.i, %and145.i.i
  %arrayidx159.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv.i85.i, i32 1, i32 %conv4.i.i
  %160 = ptrtoint ptr %arrayidx159.i.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %or153.i.i, ptr %arrayidx159.i.i, align 4
  %indvars.iv.next.i86.i = add nuw nsw i32 %indvars.iv.i85.i, 1
  %exitcond.not.i.i186 = icmp eq i32 %indvars.iv.next.i86.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i186, label %for.body144.i.i.for.end162.i.i_crit_edge, label %for.body144.i.i.for.body144.i.i_crit_edge

for.body144.i.i.for.body144.i.i_crit_edge:        ; preds = %for.body144.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body144.i.i

for.body144.i.i.for.end162.i.i_crit_edge:         ; preds = %for.body144.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end162.i.i

for.end162.i.i:                                   ; preds = %for.body144.i.i.for.end162.i.i_crit_edge, %sw.bb128.i.i.for.end162.i.i_crit_edge
  %inc163.i.i = add i8 %j.0254.i.i, 1
  br label %for.inc164.i.i

for.inc164.i.i:                                   ; preds = %for.end162.i.i, %for.end125.i.i, %for.end82.i.i.for.inc164.i.i_crit_edge, %if.end.i80.i.for.inc164.i.i_crit_edge
  %j.1.i.i = phi i8 [ %j.0254.i.i, %if.end.i80.i.for.inc164.i.i_crit_edge ], [ %inc163.i.i, %for.end162.i.i ], [ %inc126.i.i, %for.end125.i.i ], [ %inc83.i.i, %for.end82.i.i.for.inc164.i.i_crit_edge ]
  %indvars.iv.next271.i.i = add nuw nsw i32 %indvars.iv270.i.i, 1
  %161 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_load1_noabort(i32 %161)
  %162 = load i8, ptr %mc_reg_table.i, align 4
  %163 = zext i8 %162 to i32
  %cmp.i87.i = icmp ult i32 %indvars.iv.next271.i.i, %163
  br i1 %cmp.i87.i, label %for.inc164.i.i.for.body.i78.i_crit_edge, label %if.end28.i

for.inc164.i.i.for.body.i78.i_crit_edge:          ; preds = %for.inc164.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i78.i

if.end28.i:                                       ; preds = %for.inc164.i.i
  %164 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_store1_noabort(i32 %164)
  store i8 %j.1.i.i, ptr %mc_reg_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %j.1.i.i)
  %cmp38.not.i.i = icmp eq i8 %j.1.i.i, 0
  br i1 %cmp38.not.i.i, label %if.end28.i.si_initialize_mc_reg_table.exit_crit_edge, label %for.cond3.preheader.lr.ph.i.i

if.end28.i.si_initialize_mc_reg_table.exit_crit_edge: ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit

for.cond3.preheader.lr.ph.i.i:                    ; preds = %if.end28.i
  %165 = ptrtoint ptr %num_entries56.i.i to i32
  call void @__asan_load1_noabort(i32 %165)
  %166 = load i8, ptr %num_entries56.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %166)
  %cmp636.i.i = icmp ugt i8 %166, 1
  %valid_flag.i.i = getelementptr inbounds %struct.si_power_info, ptr %85, i32 0, i32 2, i32 2
  %wide.trip.count43.i.i = zext i8 %j.1.i.i to i32
  %wide.trip.count.i90.i = zext i8 %166 to i32
  br label %for.cond3.preheader.i.i

for.cond3.preheader.i.i:                          ; preds = %for.inc22.i.i.for.cond3.preheader.i.i_crit_edge, %for.cond3.preheader.lr.ph.i.i
  %indvars.iv41.i.i = phi i32 [ 0, %for.cond3.preheader.lr.ph.i.i ], [ %indvars.iv.next42.i.i, %for.inc22.i.i.for.cond3.preheader.i.i_crit_edge ]
  br i1 %cmp636.i.i, label %for.cond3.preheader.i.i.for.body8.i.i_crit_edge, label %for.cond3.preheader.i.i.for.inc22.i.i_crit_edge

for.cond3.preheader.i.i.for.inc22.i.i_crit_edge:  ; preds = %for.cond3.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc22.i.i

for.cond3.preheader.i.i.for.body8.i.i_crit_edge:  ; preds = %for.cond3.preheader.i.i
  br label %for.body8.i.i

for.cond3.i.i:                                    ; preds = %for.body8.i.i
  %indvars.iv.next.i91.i = add nuw nsw i32 %indvars.iv.i93.i, 1
  %exitcond.not.i92.i = icmp eq i32 %indvars.iv.next.i91.i, %wide.trip.count.i90.i
  br i1 %exitcond.not.i92.i, label %for.cond3.i.i.for.inc22.i.i_crit_edge, label %for.cond3.i.i.for.body8.i.i_crit_edge

for.cond3.i.i.for.body8.i.i_crit_edge:            ; preds = %for.cond3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body8.i.i

for.cond3.i.i.for.inc22.i.i_crit_edge:            ; preds = %for.cond3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc22.i.i

for.body8.i.i:                                    ; preds = %for.cond3.i.i.for.body8.i.i_crit_edge, %for.cond3.preheader.i.i.for.body8.i.i_crit_edge
  %indvars.iv.i93.i = phi i32 [ %indvars.iv.next.i91.i, %for.cond3.i.i.for.body8.i.i_crit_edge ], [ 1, %for.cond3.preheader.i.i.for.body8.i.i_crit_edge ]
  %sub.i.i187 = add nsw i32 %indvars.iv.i93.i, -1
  %arrayidx10.i94.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %sub.i.i187, i32 1, i32 %indvars.iv41.i.i
  %167 = ptrtoint ptr %arrayidx10.i94.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %arrayidx10.i94.i, align 4
  %arrayidx16.i.i = getelementptr %struct.si_power_info, ptr %85, i32 0, i32 2, i32 3, i32 %indvars.iv.i93.i, i32 1, i32 %indvars.iv41.i.i
  %169 = ptrtoint ptr %arrayidx16.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %arrayidx16.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %168, i32 %170)
  %cmp17.not.i.i = icmp eq i32 %168, %170
  br i1 %cmp17.not.i.i, label %for.cond3.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %shl.i.i = shl nuw i32 1, %indvars.iv41.i.i
  %171 = ptrtoint ptr %valid_flag.i.i to i32
  call void @__asan_load2_noabort(i32 %171)
  %172 = load i16, ptr %valid_flag.i.i, align 2
  %173 = trunc i32 %shl.i.i to i16
  %conv21.i.i = or i16 %172, %173
  store i16 %conv21.i.i, ptr %valid_flag.i.i, align 2
  br label %for.inc22.i.i

for.inc22.i.i:                                    ; preds = %if.then.i.i, %for.cond3.i.i.for.inc22.i.i_crit_edge, %for.cond3.preheader.i.i.for.inc22.i.i_crit_edge
  %indvars.iv.next42.i.i = add nuw nsw i32 %indvars.iv41.i.i, 1
  %exitcond44.not.i.i = icmp eq i32 %indvars.iv.next42.i.i, %wide.trip.count43.i.i
  br i1 %exitcond44.not.i.i, label %for.inc22.i.i.si_initialize_mc_reg_table.exit_crit_edge, label %for.inc22.i.i.for.cond3.preheader.i.i_crit_edge

for.inc22.i.i.for.cond3.preheader.i.i_crit_edge:  ; preds = %for.inc22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond3.preheader.i.i

for.inc22.i.i.si_initialize_mc_reg_table.exit_crit_edge: ; preds = %for.inc22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_initialize_mc_reg_table.exit

si_initialize_mc_reg_table.exit.thread243:        ; preds = %if.then88.i.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, %for.end.i83.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, %for.body.i78.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, %if.end.i.i181.si_initialize_mc_reg_table.exit.thread243_crit_edge, %if.end20.i.si_initialize_mc_reg_table.exit.thread243_crit_edge, %if.end.i179.si_initialize_mc_reg_table.exit.thread243_crit_edge
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #14
  br label %if.then26

si_initialize_mc_reg_table.exit:                  ; preds = %for.inc22.i.i.si_initialize_mc_reg_table.exit_crit_edge, %if.end28.i.si_initialize_mc_reg_table.exit_crit_edge, %if.end28.thread.i
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #14
  br label %if.end29

if.then26:                                        ; preds = %si_initialize_mc_reg_table.exit.thread243, %if.then23.if.then26_crit_edge
  %174 = ptrtoint ptr %dynamic_ac_timing to i32
  call void @__asan_store1_noabort(i32 %174)
  store i8 0, ptr %dynamic_ac_timing, align 1
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %si_initialize_mc_reg_table.exit, %if.end21.if.end29_crit_edge
  %dynamic_ss = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 9
  %175 = ptrtoint ptr %dynamic_ss to i32
  call void @__asan_load1_noabort(i32 %175)
  %176 = load i8, ptr %dynamic_ss, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %176)
  %tobool30.not = icmp eq i8 %176, 0
  br i1 %tobool30.not, label %if.end29.if.end32_crit_edge, label %if.then31

if.end29.if.end32_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

if.then31:                                        ; preds = %if.end29
  %177 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %priv.i, align 4
  %sclk_ss.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %178, i32 0, i32 7
  %179 = ptrtoint ptr %sclk_ss.i to i32
  call void @__asan_load1_noabort(i32 %179)
  %180 = load i8, ptr %sclk_ss.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %180)
  %tobool1.not.i = icmp eq i8 %180, 0
  br i1 %tobool1.not.i, label %if.then31.if.end32_crit_edge, label %do.body.i

if.then31.if.end32_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

do.body.i:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i191 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %or.i192 = or i32 %call3.i191, 8388608
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %or.i192, i32 noundef 0) #14
  br label %if.end32

if.end32:                                         ; preds = %do.body.i, %if.then31.if.end32_crit_edge, %if.end29.if.end32_crit_edge
  %thermal_protection = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 14
  %181 = ptrtoint ptr %thermal_protection to i32
  call void @__asan_load1_noabort(i32 %181)
  %182 = load i8, ptr %thermal_protection, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %182)
  %tobool33.not = icmp eq i8 %182, 0
  br i1 %tobool33.not, label %if.end32.if.end35_crit_edge, label %if.then34

if.end32.if.end35_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.then34:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  %call.i193 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %and.i = and i32 %call.i193, -5
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %and.i, i32 noundef 0) #14
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end32.if.end35_crit_edge
  %183 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %priv.i, align 4
  %asic_funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %185 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %asic_funcs.i, align 4
  %get_xclk.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %186, i32 0, i32 6
  %187 = ptrtoint ptr %get_xclk.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %get_xclk.i, align 4
  %call1.i = tail call i32 %188(ptr noundef %adev) #14
  %asi.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 45
  %189 = ptrtoint ptr %asi.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %asi.i, align 4
  %bsp.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 39
  %bsu.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 40
  %mul.i.i = mul i32 %190, %call1.i
  %div.i.i = udiv i32 %mul.i.i, 100
  call void @__sanitizer_cov_trace_const_cmp4(i32 6553600, i32 %mul.i.i)
  %tobool.not3.i.i = icmp ult i32 %mul.i.i, 6553600
  br i1 %tobool.not3.i.i, label %if.end35.r600_calculate_u_and_p.exit.i_crit_edge, label %while.body.preheader.i.i

if.end35.r600_calculate_u_and_p.exit.i_crit_edge: ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %r600_calculate_u_and_p.exit.i

while.body.preheader.i.i:                         ; preds = %if.end35
  %shr.i.i195 = lshr i32 %div.i.i, 16
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %while.body.preheader.i.i
  %tmp.05.i.i = phi i32 [ %shr1.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ %shr.i.i195, %while.body.preheader.i.i ]
  %b_c.04.i.i = phi i32 [ %phi.bo.i.i, %while.body.i.i.while.body.i.i_crit_edge ], [ 1, %while.body.preheader.i.i ]
  %shr1.i.i = lshr i32 %tmp.05.i.i, 1
  %phi.bo.i.i = add nuw nsw i32 %b_c.04.i.i, 1
  %tobool.not.i.i = icmp ult i32 %tmp.05.i.i, 2
  br i1 %tobool.not.i.i, label %while.body.i.i.r600_calculate_u_and_p.exit.i_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

while.body.i.i.r600_calculate_u_and_p.exit.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %r600_calculate_u_and_p.exit.i

r600_calculate_u_and_p.exit.i:                    ; preds = %while.body.i.i.r600_calculate_u_and_p.exit.i_crit_edge, %if.end35.r600_calculate_u_and_p.exit.i_crit_edge
  %b_c.0.lcssa.i.i = phi i32 [ 1, %if.end35.r600_calculate_u_and_p.exit.i_crit_edge ], [ %phi.bo.i.i, %while.body.i.i.r600_calculate_u_and_p.exit.i_crit_edge ]
  %div21.i.i = lshr i32 %b_c.0.lcssa.i.i, 1
  %191 = ptrtoint ptr %bsu.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 %div21.i.i, ptr %bsu.i, align 4
  %mul3.i.i = and i32 %b_c.0.lcssa.i.i, -2
  %div42.i.i = lshr i32 %div.i.i, %mul3.i.i
  %192 = ptrtoint ptr %bsp.i to i32
  call void @__asan_store4_noabort(i32 %192)
  store i32 %div42.i.i, ptr %bsp.i, align 4
  %pasi.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 46
  %193 = ptrtoint ptr %pasi.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %pasi.i, align 4
  %mul.i27.i = mul i32 %194, %call1.i
  %div.i28.i = udiv i32 %mul.i27.i, 100
  call void @__sanitizer_cov_trace_const_cmp4(i32 6553600, i32 %mul.i27.i)
  %tobool.not3.i29.i = icmp ult i32 %mul.i27.i, 6553600
  br i1 %tobool.not3.i29.i, label %r600_calculate_u_and_p.exit.i.si_setup_bsp.exit_crit_edge, label %while.body.preheader.i31.i

r600_calculate_u_and_p.exit.i.si_setup_bsp.exit_crit_edge: ; preds = %r600_calculate_u_and_p.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_setup_bsp.exit

while.body.preheader.i31.i:                       ; preds = %r600_calculate_u_and_p.exit.i
  %shr.i30.i = lshr i32 %div.i28.i, 16
  br label %while.body.i37.i

while.body.i37.i:                                 ; preds = %while.body.i37.i.while.body.i37.i_crit_edge, %while.body.preheader.i31.i
  %tmp.05.i32.i = phi i32 [ %shr1.i34.i, %while.body.i37.i.while.body.i37.i_crit_edge ], [ %shr.i30.i, %while.body.preheader.i31.i ]
  %b_c.04.i33.i = phi i32 [ %phi.bo.i35.i, %while.body.i37.i.while.body.i37.i_crit_edge ], [ 1, %while.body.preheader.i31.i ]
  %shr1.i34.i = lshr i32 %tmp.05.i32.i, 1
  %phi.bo.i35.i = add nuw nsw i32 %b_c.04.i33.i, 1
  %tobool.not.i36.i = icmp ult i32 %tmp.05.i32.i, 2
  br i1 %tobool.not.i36.i, label %while.body.i37.i.si_setup_bsp.exit_crit_edge, label %while.body.i37.i.while.body.i37.i_crit_edge

while.body.i37.i.while.body.i37.i_crit_edge:      ; preds = %while.body.i37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i37.i

while.body.i37.i.si_setup_bsp.exit_crit_edge:     ; preds = %while.body.i37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_setup_bsp.exit

si_setup_bsp.exit:                                ; preds = %while.body.i37.i.si_setup_bsp.exit_crit_edge, %r600_calculate_u_and_p.exit.i.si_setup_bsp.exit_crit_edge
  %b_c.0.lcssa.i38.i = phi i32 [ 1, %r600_calculate_u_and_p.exit.i.si_setup_bsp.exit_crit_edge ], [ %phi.bo.i35.i, %while.body.i37.i.si_setup_bsp.exit_crit_edge ]
  %pbsu.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 42
  %pbsp.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 41
  %div21.i39.i = lshr i32 %b_c.0.lcssa.i38.i, 1
  %195 = ptrtoint ptr %pbsu.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %div21.i39.i, ptr %pbsu.i, align 4
  %mul3.i40.i = and i32 %b_c.0.lcssa.i38.i, -2
  %div42.i41.i = lshr i32 %div.i28.i, %mul3.i40.i
  %196 = ptrtoint ptr %pbsp.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store i32 %div42.i41.i, ptr %pbsp.i, align 4
  %shl4.i = shl i32 %div21.i.i, 16
  %or.i196 = or i32 %div42.i.i, %shl4.i
  %dsp.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 43
  %197 = ptrtoint ptr %dsp.i to i32
  call void @__asan_store4_noabort(i32 %197)
  store i32 %or.i196, ptr %dsp.i, align 4
  %shl8.i = shl i32 %div21.i39.i, 16
  %or9.i = or i32 %div42.i41.i, %shl8.i
  %psp.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %184, i32 0, i32 44
  %198 = ptrtoint ptr %psp.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %or9.i, ptr %psp.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 511, i32 noundef %or.i196, i32 noundef 0) #14
  %call.i197 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 513, i32 noundef 0) #14
  %and.i198 = and i32 %call.i197, -65536
  %or.i199 = or i32 %and.i198, 512
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 513, i32 noundef %or.i199, i32 noundef 0) #14
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %si_setup_bsp.exit
  %i.054.i = phi i32 [ 0, %si_setup_bsp.exit ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %add.i = add nuw nsw i32 %i.054.i, 496
  %arrayidx.i = getelementptr [15 x i32], ptr @r600_utc, i32 0, i32 %i.054.i
  %199 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %arrayidx.i, align 4
  %arrayidx1.i = getelementptr [15 x i32], ptr @r600_dtc, i32 0, i32 %i.054.i
  %201 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %arrayidx1.i, align 4
  %shl2.i = shl i32 %202, 10
  %or.i200 = or i32 %shl2.i, %200
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %add.i, i32 noundef %or.i200, i32 noundef 0) #14
  %inc.i = add nuw nsw i32 %i.054.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 15
  br i1 %exitcond.not.i, label %si_program_tp.exit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

si_program_tp.exit:                               ; preds = %for.body.i
  %call.i201 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 482, i32 noundef 0) #14
  %and.i202 = and i32 %call.i201, -33
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 482, i32 noundef %and.i202, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 481, i32 noundef 512, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 515, i32 noundef 200, i32 noundef 0) #14
  %call.i204 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 522, i32 noundef 0) #14
  %or.i205 = and i32 %call.i204, -251658256
  %or2.i = or i32 %or.i205, 218103823
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 522, i32 noundef %or2.i, i32 noundef 0) #14
  %203 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %priv.i, align 4
  %vrc.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %204, i32 0, i32 47
  %205 = ptrtoint ptr %vrc.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %vrc.i, align 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 495, i32 noundef %206, i32 noundef 0) #14
  %207 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %priv.i, align 4
  tail call void @amdgpu_si_reset_smc(ptr noundef %adev) #14
  tail call void @amdgpu_si_smc_clock(ptr noundef %adev, i1 noundef zeroext false) #14
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %208, i32 0, i32 20
  %209 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %sram_end.i, align 4
  %call1.i208 = tail call i32 @amdgpu_si_load_smc_ucode(ptr noundef %adev, i32 noundef %210) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i208)
  %tobool37.not = icmp eq i32 %call1.i208, 0
  br i1 %tobool37.not, label %if.end39, label %if.then38

if.then38:                                        ; preds = %si_program_tp.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.67) #14
  br label %cleanup

if.end39:                                         ; preds = %si_program_tp.exit
  %211 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #14
  %213 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 -1, ptr %tmp.i, align 4, !annotation !272
  %sram_end.i210 = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 20
  %214 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %sram_end.i210, align 4
  %call1.i211 = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65552, ptr noundef nonnull %tmp.i, i32 noundef %215) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i211)
  %tobool.not.i212 = icmp eq i32 %call1.i211, 0
  br i1 %tobool.not.i212, label %if.end.i215, label %if.end39.if.then42_crit_edge

if.end39.if.then42_crit_edge:                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end.i215:                                      ; preds = %if.end39
  %216 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %tmp.i, align 4
  %state_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 21
  %218 = ptrtoint ptr %state_table_start.i to i32
  call void @__asan_store4_noabort(i32 %218)
  store i32 %217, ptr %state_table_start.i, align 4
  %219 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %sram_end.i210, align 4
  %call3.i213 = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65548, ptr noundef nonnull %tmp.i, i32 noundef %220) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i213)
  %tobool4.not.i214 = icmp eq i32 %call3.i213, 0
  br i1 %tobool4.not.i214, label %if.end6.i, label %if.end.i215.if.then42_crit_edge

if.end.i215.if.then42_crit_edge:                  ; preds = %if.end.i215
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end6.i:                                        ; preds = %if.end.i215
  %221 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %tmp.i, align 4
  %soft_regs_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 22
  %223 = ptrtoint ptr %soft_regs_start.i to i32
  call void @__asan_store4_noabort(i32 %223)
  store i32 %222, ptr %soft_regs_start.i, align 4
  %224 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %sram_end.i210, align 4
  %call8.i216 = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65572, ptr noundef nonnull %tmp.i, i32 noundef %225) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i216)
  %tobool9.not.i = icmp eq i32 %call8.i216, 0
  br i1 %tobool9.not.i, label %if.end11.i, label %if.end6.i.if.then42_crit_edge

if.end6.i.if.then42_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end11.i:                                       ; preds = %if.end6.i
  %226 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %tmp.i, align 4
  %mc_reg_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 23
  %228 = ptrtoint ptr %mc_reg_table_start.i to i32
  call void @__asan_store4_noabort(i32 %228)
  store i32 %227, ptr %mc_reg_table_start.i, align 4
  %229 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %sram_end.i210, align 4
  %call13.i217 = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65556, ptr noundef nonnull %tmp.i, i32 noundef %230) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i217)
  %tobool14.not.i = icmp eq i32 %call13.i217, 0
  br i1 %tobool14.not.i, label %if.end16.i, label %if.end11.i.if.then42_crit_edge

if.end11.i.if.then42_crit_edge:                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end16.i:                                       ; preds = %if.end11.i
  %231 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %tmp.i, align 4
  %fan_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 29
  %233 = ptrtoint ptr %fan_table_start.i to i32
  call void @__asan_store4_noabort(i32 %233)
  store i32 %232, ptr %fan_table_start.i, align 4
  %234 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %sram_end.i210, align 4
  %call18.i = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65584, ptr noundef nonnull %tmp.i, i32 noundef %235) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i)
  %tobool19.not.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.not.i, label %if.end21.i, label %if.end16.i.if.then42_crit_edge

if.end16.i.if.then42_crit_edge:                   ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end21.i:                                       ; preds = %if.end16.i
  %236 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %tmp.i, align 4
  %arb_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 24
  %238 = ptrtoint ptr %arb_table_start.i to i32
  call void @__asan_store4_noabort(i32 %238)
  store i32 %237, ptr %arb_table_start.i, align 4
  %239 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %sram_end.i210, align 4
  %call23.i = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65560, ptr noundef nonnull %tmp.i, i32 noundef %240) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %tobool24.not.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.not.i, label %if.end26.i, label %if.end21.i.if.then42_crit_edge

if.end21.i.if.then42_crit_edge:                   ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end26.i:                                       ; preds = %if.end21.i
  %241 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %tmp.i, align 4
  %cac_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 25
  %243 = ptrtoint ptr %cac_table_start.i to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 %242, ptr %cac_table_start.i, align 4
  %244 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %sram_end.i210, align 4
  %call28.i = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65600, ptr noundef nonnull %tmp.i, i32 noundef %245) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i)
  %tobool29.not.i = icmp eq i32 %call28.i, 0
  br i1 %tobool29.not.i, label %if.end31.i, label %if.end26.i.if.then42_crit_edge

if.end26.i.if.then42_crit_edge:                   ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end31.i:                                       ; preds = %if.end26.i
  %246 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %tmp.i, align 4
  %dte_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 26
  %248 = ptrtoint ptr %dte_table_start.i to i32
  call void @__asan_store4_noabort(i32 %248)
  store i32 %247, ptr %dte_table_start.i, align 4
  %249 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %sram_end.i210, align 4
  %call33.i = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65592, ptr noundef nonnull %tmp.i, i32 noundef %250) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %tobool34.not.i = icmp eq i32 %call33.i, 0
  br i1 %tobool34.not.i, label %if.end36.i, label %if.end31.i.if.then42_crit_edge

if.end31.i.if.then42_crit_edge:                   ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.end36.i:                                       ; preds = %if.end31.i
  %251 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %tmp.i, align 4
  %spll_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 27
  %253 = ptrtoint ptr %spll_table_start.i to i32
  call void @__asan_store4_noabort(i32 %253)
  store i32 %252, ptr %spll_table_start.i, align 4
  %254 = ptrtoint ptr %sram_end.i210 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %sram_end.i210, align 4
  %call38.i = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef 65608, ptr noundef nonnull %tmp.i, i32 noundef %255) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38.i)
  %tobool39.not.i = icmp eq i32 %call38.i, 0
  br i1 %tobool39.not.i, label %if.end43, label %if.end36.i.if.then42_crit_edge

if.end36.i.if.then42_crit_edge:                   ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

if.then42:                                        ; preds = %if.end36.i.if.then42_crit_edge, %if.end31.i.if.then42_crit_edge, %if.end26.i.if.then42_crit_edge, %if.end21.i.if.then42_crit_edge, %if.end16.i.if.then42_crit_edge, %if.end11.i.if.then42_crit_edge, %if.end6.i.if.then42_crit_edge, %if.end.i215.if.then42_crit_edge, %if.end39.if.then42_crit_edge
  %retval.0.i218.ph = phi i32 [ %call38.i, %if.end36.i.if.then42_crit_edge ], [ %call33.i, %if.end31.i.if.then42_crit_edge ], [ %call28.i, %if.end26.i.if.then42_crit_edge ], [ %call23.i, %if.end21.i.if.then42_crit_edge ], [ %call18.i, %if.end16.i.if.then42_crit_edge ], [ %call13.i217, %if.end11.i.if.then42_crit_edge ], [ %call8.i216, %if.end6.i.if.then42_crit_edge ], [ %call3.i213, %if.end.i215.if.then42_crit_edge ], [ %call1.i211, %if.end39.if.then42_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #14
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.68) #14
  br label %cleanup

if.end43:                                         ; preds = %if.end36.i
  %256 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %tmp.i, align 4
  %papm_cfg_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %212, i32 0, i32 28
  %258 = ptrtoint ptr %papm_cfg_table_start.i to i32
  call void @__asan_store4_noabort(i32 %258)
  store i32 %257, ptr %papm_cfg_table_start.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #14
  %call.i219 = call fastcc i32 @ni_copy_and_switch_arb_sets(ptr noundef %adev, i32 noundef 10, i32 noundef 11) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i219)
  %tobool45.not = icmp eq i32 %call.i219, 0
  br i1 %tobool45.not, label %if.end47, label %if.then46

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.69) #14
  br label %cleanup

if.end47:                                         ; preds = %if.end43
  %call48 = call fastcc i32 @si_init_smc_table(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.end51, label %if.then50

if.then50:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.70) #14
  br label %cleanup

if.end51:                                         ; preds = %if.end47
  %call52 = call fastcc i32 @si_init_smc_spll_table(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end55, label %if.then54

if.then54:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.71) #14
  br label %cleanup

if.end55:                                         ; preds = %if.end51
  %call56 = call fastcc i32 @si_init_arb_table_index(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %if.end59, label %if.then58

if.then58:                                        ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.72) #14
  br label %cleanup

if.end59:                                         ; preds = %if.end55
  %259 = ptrtoint ptr %dynamic_ac_timing to i32
  call void @__asan_load1_noabort(i32 %259)
  %260 = load i8, ptr %dynamic_ac_timing, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %260)
  %tobool61.not = icmp eq i8 %260, 0
  br i1 %tobool61.not, label %if.end59.if.end67_crit_edge, label %if.then62

if.end59.if.end67_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.then62:                                        ; preds = %if.end59
  %call63 = call fastcc i32 @si_populate_mc_reg_table(ptr noundef %adev, ptr noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.then62.if.end67_crit_edge, label %if.then65

if.then62.if.end67_crit_edge:                     ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.then65:                                        ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.73) #14
  br label %cleanup

if.end67:                                         ; preds = %if.then62.if.end67_crit_edge, %if.end59.if.end67_crit_edge
  %call68 = call fastcc i32 @si_initialize_smc_cac_tables(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end71, label %if.then70

if.then70:                                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.74) #14
  br label %cleanup

if.end71:                                         ; preds = %if.end67
  %call72 = call fastcc i32 @si_initialize_hardware_cac_manager(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.end75, label %if.then74

if.then74:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.75) #14
  br label %cleanup

if.end75:                                         ; preds = %if.end71
  %call76 = call fastcc i32 @si_initialize_smc_dte_tables(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call76)
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %if.end79, label %if.then78

if.then78:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.76) #14
  br label %cleanup

if.end79:                                         ; preds = %if.end75
  %call80 = call fastcc i32 @si_populate_smc_tdp_limits(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80)
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %if.end83, label %if.then82

if.then82:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.77) #14
  br label %cleanup

if.end83:                                         ; preds = %if.end79
  %call84 = call fastcc i32 @si_populate_smc_tdp_limits_2(ptr noundef %adev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call84)
  %tobool85.not = icmp eq i32 %call84, 0
  br i1 %tobool85.not, label %if.end87, label %if.then86

if.then86:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.78) #14
  br label %cleanup

if.end87:                                         ; preds = %if.end83
  call fastcc void @si_program_response_times(ptr noundef %adev)
  call fastcc void @si_program_ds_registers(ptr noundef %adev)
  call fastcc void @si_dpm_start_smc(ptr noundef %adev)
  %call.i220 = call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 93) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i220)
  %cmp.i221 = icmp eq i8 %call.i220, 1
  br i1 %cmp.i221, label %if.end91, label %if.then90

if.then90:                                        ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.79) #14
  br label %cleanup

if.end91:                                         ; preds = %if.end87
  call fastcc void @si_enable_sclk_control(ptr noundef %adev)
  call fastcc void @si_start_dpm(ptr noundef %adev)
  %261 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load ptr, ptr %priv.i, align 4
  %active_auto_throttle_sources.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %262, i32 0, i32 35
  %263 = ptrtoint ptr %active_auto_throttle_sources.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load i32, ptr %active_auto_throttle_sources.i, align 4
  %and.i223 = and i32 %264, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i223)
  %tobool1.not.i224 = icmp eq i32 %and.i223, 0
  br i1 %tobool1.not.i224, label %if.then2.i, label %if.end91.si_enable_auto_throttle_source.exit_crit_edge

if.end91.si_enable_auto_throttle_source.exit_crit_edge: ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_enable_auto_throttle_source.exit

if.then2.i:                                       ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  %or.i226 = or i32 %264, 1
  %265 = ptrtoint ptr %active_auto_throttle_sources.i to i32
  call void @__asan_store4_noabort(i32 %265)
  store i32 %or.i226, ptr %active_auto_throttle_sources.i, align 4
  call fastcc void @si_set_dpm_event_sources(ptr noundef %adev, i32 noundef %or.i226) #14
  br label %si_enable_auto_throttle_source.exit

si_enable_auto_throttle_source.exit:              ; preds = %if.then2.i, %if.end91.si_enable_auto_throttle_source.exit_crit_edge
  call fastcc void @si_thermal_start_thermal_controller(ptr noundef %adev)
  %ps_priv.i.i = getelementptr inbounds %struct.amdgpu_ps, ptr %3, i32 0, i32 9
  %266 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %ps_priv.i.i, align 4
  %268 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load ptr, ptr %priv.i, align 4
  %current_rps.i = getelementptr inbounds %struct.evergreen_power_info, ptr %269, i32 0, i32 25
  %270 = call ptr @memcpy(ptr %current_rps.i, ptr %3, i32 40)
  %current_ps.i = getelementptr inbounds %struct.ni_power_info, ptr %269, i32 0, i32 22
  %271 = call ptr @memcpy(ptr %current_ps.i, ptr %267, i32 324)
  %ps_priv.i = getelementptr inbounds %struct.evergreen_power_info, ptr %269, i32 0, i32 25, i32 9
  %272 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_store4_noabort(i32 %272)
  store ptr %current_ps.i, ptr %ps_priv.i, align 4
  %current_ps6.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 2
  %273 = ptrtoint ptr %current_ps6.i to i32
  call void @__asan_store4_noabort(i32 %273)
  store ptr %current_rps.i, ptr %current_ps6.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %si_enable_auto_throttle_source.exit, %if.then90, %if.then86, %if.then82, %if.then78, %if.then74, %if.then70, %if.then65, %if.then58, %if.then54, %if.then50, %if.then46, %if.then42, %if.then38, %if.then19, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i231, %if.then19 ], [ %call1.i208, %if.then38 ], [ %retval.0.i218.ph, %if.then42 ], [ %call.i219, %if.then46 ], [ %call48, %if.then50 ], [ %call52, %if.then54 ], [ %call56, %if.then58 ], [ %call63, %if.then65 ], [ %call68, %if.then70 ], [ %call72, %if.then74 ], [ %call76, %if.then78 ], [ %call80, %if.then82 ], [ %call84, %if.then86 ], [ -22, %if.then90 ], [ 0, %si_enable_auto_throttle_source.exit ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_pm_compute_clocks(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @amdgpu_si_is_smc_running(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_init_smc_table(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  %arb_regs.i = alloca %struct.SMC_SIslands_MCArbDramTimingRegisterSet, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %boot_ps = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 4
  %2 = ptrtoint ptr %boot_ps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %boot_ps, align 4
  %ulv1 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7
  %smc_statetable = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37
  %voltage_control_svi2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 18
  %4 = ptrtoint ptr %voltage_control_svi2.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %voltage_control_svi2.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %svc_gpio_id.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 40
  %6 = ptrtoint ptr %svc_gpio_id.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %svc_gpio_id.i, align 1
  %conv.i = zext i8 %7 to i32
  %soft_regs_start.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 22
  %8 = ptrtoint ptr %soft_regs_start.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %soft_regs_start.i.i, align 4
  %add.i.i = add i32 %9, 288
  %sram_end.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %10 = ptrtoint ptr %sram_end.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sram_end.i.i, align 4
  %call1.i.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i.i, i32 noundef %conv.i, i32 noundef %11) #14
  %svd_gpio_id.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 39
  %12 = ptrtoint ptr %svd_gpio_id.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %svd_gpio_id.i, align 4
  %conv4.i = zext i8 %13 to i32
  %14 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i4.i = getelementptr inbounds %struct.si_power_info, ptr %15, i32 0, i32 22
  %16 = ptrtoint ptr %soft_regs_start.i4.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %soft_regs_start.i4.i, align 4
  %add.i5.i = add i32 %17, 284
  %sram_end.i6.i = getelementptr inbounds %struct.si_power_info, ptr %15, i32 0, i32 20
  %18 = ptrtoint ptr %sram_end.i6.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sram_end.i6.i, align 4
  %call1.i7.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i5.i, i32 noundef %conv4.i, i32 noundef %19) #14
  %20 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i9.i = getelementptr inbounds %struct.si_power_info, ptr %21, i32 0, i32 22
  %22 = ptrtoint ptr %soft_regs_start.i9.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %soft_regs_start.i9.i, align 4
  %add.i10.i = add i32 %23, 280
  %sram_end.i11.i = getelementptr inbounds %struct.si_power_info, ptr %21, i32 0, i32 20
  %24 = ptrtoint ptr %sram_end.i11.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sram_end.i11.i, align 4
  %call1.i12.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i10.i, i32 noundef 2, i32 noundef %25) #14
  br label %si_populate_smc_voltage_tables.exit

if.else.i:                                        ; preds = %entry
  %vddc_voltage_table.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 19
  %26 = ptrtoint ptr %vddc_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %vddc_voltage_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool7.not.i = icmp eq i32 %27, 0
  br i1 %tobool7.not.i, label %if.else.i.if.end22.i_crit_edge, label %if.else.i.for.body.i.i_crit_edge

if.else.i.for.body.i.i_crit_edge:                 ; preds = %if.else.i
  br label %for.body.i.i

if.else.i.if.end22.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.else.i.for.body.i.i_crit_edge
  %i.02.i.i = phi i32 [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %if.else.i.for.body.i.i_crit_edge ]
  %smio_low.i.i = getelementptr %struct.evergreen_power_info, ptr %1, i32 0, i32 19, i32 3, i32 %i.02.i.i, i32 1
  %28 = ptrtoint ptr %smio_low.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %smio_low.i.i, align 4
  %arrayidx1.i.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 4, i32 %i.02.i.i
  %30 = ptrtoint ptr %arrayidx1.i.i to i32
  call void @__asan_loadN_noabort(i32 %30, i32 4)
  %31 = load i32, ptr %arrayidx1.i.i, align 1
  %or.i.i = or i32 %31, %29
  store i32 %or.i.i, ptr %arrayidx1.i.i, align 1
  %inc.i.i = add nuw i32 %i.02.i.i, 1
  %32 = ptrtoint ptr %vddc_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %vddc_voltage_table.i, align 4
  %cmp.i.i = icmp ult i32 %inc.i.i, %33
  br i1 %cmp.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %si_populate_smc_voltage_table.exit.i

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

si_populate_smc_voltage_table.exit.i:             ; preds = %for.body.i.i
  %mask_low.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 19, i32 1
  %34 = ptrtoint ptr %mask_low.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %mask_low.i, align 4
  %voltageMaskTable.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 5
  %36 = ptrtoint ptr %voltageMaskTable.i to i32
  call void @__asan_storeN_noabort(i32 %36, i32 4)
  store i32 %35, ptr %voltageMaskTable.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp49.not.i = icmp eq i32 %33, 0
  br i1 %cmp49.not.i, label %si_populate_smc_voltage_table.exit.i.if.end22.i_crit_edge, label %for.body.lr.ph.i

si_populate_smc_voltage_table.exit.i.if.end22.i_crit_edge: ; preds = %si_populate_smc_voltage_table.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i

for.body.lr.ph.i:                                 ; preds = %si_populate_smc_voltage_table.exit.i
  %max_vddc_in_table.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 25
  %37 = ptrtoint ptr %max_vddc_in_table.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %max_vddc_in_table.i, align 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %conv1151.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %conv11.i, %for.inc.i.for.body.i_crit_edge ]
  %i.050.i = phi i8 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx17.i = getelementptr %struct.evergreen_power_info, ptr %1, i32 0, i32 19, i32 3, i32 %conv1151.i
  %39 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %arrayidx17.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %38, i16 %40)
  %cmp19.not.i = icmp ugt i16 %38, %40
  br i1 %cmp19.not.i, label %for.inc.i, label %if.then21.i

if.then21.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %maxVDDCIndexInPPTable.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 2
  %41 = ptrtoint ptr %maxVDDCIndexInPPTable.i to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %i.050.i, ptr %maxVDDCIndexInPPTable.i, align 1
  br label %if.end22.i

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add i8 %i.050.i, 1
  %conv11.i = zext i8 %inc.i to i32
  %cmp.i = icmp ugt i32 %33, %conv11.i
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.if.end22.i_crit_edge

for.inc.i.if.end22.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

if.end22.i:                                       ; preds = %for.inc.i.if.end22.i_crit_edge, %if.then21.i, %si_populate_smc_voltage_table.exit.i.if.end22.i_crit_edge, %if.else.i.if.end22.i_crit_edge
  %vddci_voltage_table.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 20
  %42 = ptrtoint ptr %vddci_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %vddci_voltage_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool24.not.i = icmp eq i32 %43, 0
  br i1 %tobool24.not.i, label %if.end22.i.if.end32.i_crit_edge, label %if.end22.i.for.body.i20.i_crit_edge

if.end22.i.for.body.i20.i_crit_edge:              ; preds = %if.end22.i
  br label %for.body.i20.i

if.end22.i.if.end32.i_crit_edge:                  ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32.i

for.body.i20.i:                                   ; preds = %for.body.i20.i.for.body.i20.i_crit_edge, %if.end22.i.for.body.i20.i_crit_edge
  %i.02.i14.i = phi i32 [ %inc.i18.i, %for.body.i20.i.for.body.i20.i_crit_edge ], [ 0, %if.end22.i.for.body.i20.i_crit_edge ]
  %smio_low.i15.i = getelementptr %struct.evergreen_power_info, ptr %1, i32 0, i32 20, i32 3, i32 %i.02.i14.i, i32 1
  %44 = ptrtoint ptr %smio_low.i15.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %smio_low.i15.i, align 4
  %arrayidx1.i16.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 4, i32 %i.02.i14.i
  %46 = ptrtoint ptr %arrayidx1.i16.i to i32
  call void @__asan_loadN_noabort(i32 %46, i32 4)
  %47 = load i32, ptr %arrayidx1.i16.i, align 1
  %or.i17.i = or i32 %47, %45
  store i32 %or.i17.i, ptr %arrayidx1.i16.i, align 1
  %inc.i18.i = add nuw i32 %i.02.i14.i, 1
  %48 = ptrtoint ptr %vddci_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %vddci_voltage_table.i, align 4
  %cmp.i19.i = icmp ult i32 %inc.i18.i, %49
  br i1 %cmp.i19.i, label %for.body.i20.i.for.body.i20.i_crit_edge, label %si_populate_smc_voltage_table.exit21.i

for.body.i20.i.for.body.i20.i_crit_edge:          ; preds = %for.body.i20.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i20.i

si_populate_smc_voltage_table.exit21.i:           ; preds = %for.body.i20.i
  call void @__sanitizer_cov_trace_pc() #16
  %mask_low28.i = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 20, i32 1
  %50 = ptrtoint ptr %mask_low28.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %mask_low28.i, align 4
  %arrayidx31.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 5, i32 0, i32 2
  %52 = ptrtoint ptr %arrayidx31.i to i32
  call void @__asan_storeN_noabort(i32 %52, i32 4)
  store i32 %51, ptr %arrayidx31.i, align 1
  br label %if.end32.i

if.end32.i:                                       ; preds = %si_populate_smc_voltage_table.exit21.i, %if.end22.i.if.end32.i_crit_edge
  %mvdd_voltage_table.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 3
  %53 = ptrtoint ptr %mvdd_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %mvdd_voltage_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool34.not.i = icmp eq i32 %54, 0
  br i1 %tobool34.not.i, label %if.end32.i.if.end42.i_crit_edge, label %if.end32.i.for.body.i29.i_crit_edge

if.end32.i.for.body.i29.i_crit_edge:              ; preds = %if.end32.i
  br label %for.body.i29.i

if.end32.i.if.end42.i_crit_edge:                  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42.i

for.body.i29.i:                                   ; preds = %for.body.i29.i.for.body.i29.i_crit_edge, %if.end32.i.for.body.i29.i_crit_edge
  %i.02.i23.i = phi i32 [ %inc.i27.i, %for.body.i29.i.for.body.i29.i_crit_edge ], [ 0, %if.end32.i.for.body.i29.i_crit_edge ]
  %smio_low.i24.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 3, i32 3, i32 %i.02.i23.i, i32 1
  %55 = ptrtoint ptr %smio_low.i24.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %smio_low.i24.i, align 4
  %arrayidx1.i25.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 4, i32 %i.02.i23.i
  %57 = ptrtoint ptr %arrayidx1.i25.i to i32
  call void @__asan_loadN_noabort(i32 %57, i32 4)
  %58 = load i32, ptr %arrayidx1.i25.i, align 1
  %or.i26.i = or i32 %58, %56
  store i32 %or.i26.i, ptr %arrayidx1.i25.i, align 1
  %inc.i27.i = add nuw i32 %i.02.i23.i, 1
  %59 = ptrtoint ptr %mvdd_voltage_table.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %mvdd_voltage_table.i, align 4
  %cmp.i28.i = icmp ult i32 %inc.i27.i, %60
  br i1 %cmp.i28.i, label %for.body.i29.i.for.body.i29.i_crit_edge, label %si_populate_smc_voltage_table.exit30.i

for.body.i29.i.for.body.i29.i_crit_edge:          ; preds = %for.body.i29.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i29.i

si_populate_smc_voltage_table.exit30.i:           ; preds = %for.body.i29.i
  call void @__sanitizer_cov_trace_pc() #16
  %mask_low38.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 3, i32 1
  %61 = ptrtoint ptr %mask_low38.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %mask_low38.i, align 4
  %arrayidx41.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 5, i32 0, i32 1
  %63 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_storeN_noabort(i32 %63, i32 4)
  store i32 %62, ptr %arrayidx41.i, align 1
  br label %if.end42.i

if.end42.i:                                       ; preds = %si_populate_smc_voltage_table.exit30.i, %if.end32.i.if.end42.i_crit_edge
  %vddc_phase_shed_control.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 15
  %64 = ptrtoint ptr %vddc_phase_shed_control.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %vddc_phase_shed_control.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool43.not.i = icmp eq i8 %65, 0
  br i1 %tobool43.not.i, label %if.end42.i.si_populate_smc_voltage_tables.exit_crit_edge, label %if.then44.i

if.end42.i.si_populate_smc_voltage_tables.exit_crit_edge: ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_smc_voltage_tables.exit

if.then44.i:                                      ; preds = %if.end42.i
  %vddc_phase_shed_table.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 4
  %phase_shedding_limits_table.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19
  %mask_low.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 4, i32 1
  %66 = ptrtoint ptr %mask_low.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %mask_low.i.i, align 4
  %call.i.i.i = tail call i32 @__sw_hweight32(i32 noundef %67) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp281.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp281.i.i, label %if.then44.i.if.else54.i_crit_edge, label %if.end284.i.i

if.then44.i.if.else54.i_crit_edge:                ; preds = %if.then44.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else54.i

if.end284.i.i:                                    ; preds = %if.then44.i
  %shl.i.i = shl nuw i32 1, %call.i.i.i
  %68 = ptrtoint ptr %vddc_phase_shed_table.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %vddc_phase_shed_table.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %69, i32 %shl.i.i)
  %cmp285.not.i.i = icmp eq i32 %69, %shl.i.i
  br i1 %cmp285.not.i.i, label %si_validate_phase_shedding_tables.exit.i, label %if.end284.i.i.if.else54.i_crit_edge

if.end284.i.i.if.else54.i_crit_edge:              ; preds = %if.end284.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else54.i

si_validate_phase_shedding_tables.exit.i:         ; preds = %if.end284.i.i
  %70 = ptrtoint ptr %phase_shedding_limits_table.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %phase_shedding_limits_table.i, align 4
  %sub.i.i = add i32 %shl.i.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %sub.i.i)
  %cmp290.not.i.i = icmp eq i32 %71, %sub.i.i
  br i1 %cmp290.not.i.i, label %si_validate_phase_shedding_tables.exit.i.for.body.i40.i_crit_edge, label %si_validate_phase_shedding_tables.exit.i.if.else54.i_crit_edge

si_validate_phase_shedding_tables.exit.i.if.else54.i_crit_edge: ; preds = %si_validate_phase_shedding_tables.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else54.i

si_validate_phase_shedding_tables.exit.i.for.body.i40.i_crit_edge: ; preds = %si_validate_phase_shedding_tables.exit.i
  br label %for.body.i40.i

for.body.i40.i:                                   ; preds = %for.body.i40.i.for.body.i40.i_crit_edge, %si_validate_phase_shedding_tables.exit.i.for.body.i40.i_crit_edge
  %i.02.i34.i = phi i32 [ %inc.i38.i, %for.body.i40.i.for.body.i40.i_crit_edge ], [ 0, %si_validate_phase_shedding_tables.exit.i.for.body.i40.i_crit_edge ]
  %smio_low.i35.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 4, i32 3, i32 %i.02.i34.i, i32 1
  %72 = ptrtoint ptr %smio_low.i35.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %smio_low.i35.i, align 4
  %arrayidx1.i36.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 4, i32 %i.02.i34.i
  %74 = ptrtoint ptr %arrayidx1.i36.i to i32
  call void @__asan_loadN_noabort(i32 %74, i32 4)
  %75 = load i32, ptr %arrayidx1.i36.i, align 1
  %or.i37.i = or i32 %75, %73
  store i32 %or.i37.i, ptr %arrayidx1.i36.i, align 1
  %inc.i38.i = add nuw i32 %i.02.i34.i, 1
  %76 = ptrtoint ptr %vddc_phase_shed_table.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %vddc_phase_shed_table.i, align 4
  %cmp.i39.i = icmp ult i32 %inc.i38.i, %77
  br i1 %cmp.i39.i, label %for.body.i40.i.for.body.i40.i_crit_edge, label %si_populate_smc_voltage_table.exit41.i

for.body.i40.i.for.body.i40.i_crit_edge:          ; preds = %for.body.i40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i40.i

si_populate_smc_voltage_table.exit41.i:           ; preds = %for.body.i40.i
  call void @__sanitizer_cov_trace_pc() #16
  %78 = ptrtoint ptr %mask_low.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %mask_low.i.i, align 4
  %arrayidx51.i = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 37, i32 6, i32 0, i32 3
  %80 = ptrtoint ptr %arrayidx51.i to i32
  call void @__asan_storeN_noabort(i32 %80, i32 4)
  store i32 %79, ptr %arrayidx51.i, align 1
  %phase_delay.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 4, i32 2
  %81 = ptrtoint ptr %phase_delay.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %phase_delay.i, align 4
  %83 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i43.i = getelementptr inbounds %struct.si_power_info, ptr %84, i32 0, i32 22
  %85 = ptrtoint ptr %soft_regs_start.i43.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %soft_regs_start.i43.i, align 4
  %add.i44.i = add i32 %86, 136
  %sram_end.i45.i = getelementptr inbounds %struct.si_power_info, ptr %84, i32 0, i32 20
  %87 = ptrtoint ptr %sram_end.i45.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %sram_end.i45.i, align 4
  %call1.i46.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i44.i, i32 noundef %82, i32 noundef %88) #14
  br label %si_populate_smc_voltage_tables.exit

if.else54.i:                                      ; preds = %si_validate_phase_shedding_tables.exit.i.if.else54.i_crit_edge, %if.end284.i.i.if.else54.i_crit_edge, %if.then44.i.if.else54.i_crit_edge
  %89 = ptrtoint ptr %vddc_phase_shed_control.i to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 0, ptr %vddc_phase_shed_control.i, align 2
  br label %si_populate_smc_voltage_tables.exit

si_populate_smc_voltage_tables.exit:              ; preds = %if.else54.i, %si_populate_smc_voltage_table.exit41.i, %if.end42.i.si_populate_smc_voltage_tables.exit_crit_edge, %if.then.i
  %int_thermal_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 7
  %90 = ptrtoint ptr %int_thermal_type to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %int_thermal_type, align 4
  %92 = zext i32 %91 to i64
  call void @__sanitizer_cov_trace_switch(i64 %92, ptr @__sancov_gen_cov_switch_values.108)
  switch i32 %91, label %sw.default [
    i32 9, label %si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge
    i32 10, label %si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge447
    i32 0, label %sw.bb4
  ]

si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge447: ; preds = %si_populate_smc_voltage_tables.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge: ; preds = %si_populate_smc_voltage_tables.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb4:                                           ; preds = %si_populate_smc_voltage_tables.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.default:                                       ; preds = %si_populate_smc_voltage_tables.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge, %si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge447
  %.sink = phi i8 [ 1, %sw.default ], [ -1, %sw.bb4 ], [ 0, %si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge ], [ 0, %si_populate_smc_voltage_tables.exit.sw.epilog_crit_edge447 ]
  %93 = ptrtoint ptr %smc_statetable to i32
  call void @__asan_store1_noabort(i32 %93)
  store i8 %.sink, ptr %smc_statetable, align 1
  %platform_caps = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 13
  %94 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %platform_caps, align 4
  %and = and i32 %95, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.epilog.if.end_crit_edge, label %if.then

sw.epilog.if.end_crit_edge:                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %systemFlags = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 1
  %96 = ptrtoint ptr %systemFlags to i32
  call void @__asan_load1_noabort(i32 %96)
  %97 = load i8, ptr %systemFlags, align 1
  %98 = or i8 %97, 1
  store i8 %98, ptr %systemFlags, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog.if.end_crit_edge
  %99 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %platform_caps, align 4
  %and13 = and i32 %100, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  br i1 %tobool14.not, label %if.end.if.end29_crit_edge, label %if.then15

if.end.if.end29_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then15:                                        ; preds = %if.end
  %pdev = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 1
  %101 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %pdev, align 4
  %device = getelementptr inbounds %struct.pci_dev, ptr %102, i32 0, i32 8
  %103 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %103)
  %104 = load i16, ptr %device, align 2
  %105 = and i16 %104, -2
  call void @__sanitizer_cov_trace_const_cmp2(i16 26648, i16 %105)
  %switch = icmp eq i16 %105, 26648
  br i1 %switch, label %if.then15.if.end29_crit_edge, label %if.then23

if.then15.if.end29_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then23:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  %systemFlags24 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 1
  %106 = ptrtoint ptr %systemFlags24 to i32
  call void @__asan_load1_noabort(i32 %106)
  %107 = load i8, ptr %systemFlags24, align 1
  %108 = or i8 %107, 16
  store i8 %108, ptr %systemFlags24, align 1
  br label %if.end29

if.end29:                                         ; preds = %if.then23, %if.then15.if.end29_crit_edge, %if.end.if.end29_crit_edge
  %109 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %platform_caps, align 4
  %and33 = and i32 %110, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %tobool34.not = icmp eq i32 %and33, 0
  br i1 %tobool34.not, label %if.end29.if.end40_crit_edge, label %if.then35

if.end29.if.end40_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then35:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %systemFlags36 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 1
  %111 = ptrtoint ptr %systemFlags36 to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %systemFlags36, align 1
  %113 = or i8 %112, 2
  store i8 %113, ptr %systemFlags36, align 1
  br label %if.end40

if.end40:                                         ; preds = %if.then35, %if.end29.if.end40_crit_edge
  %vram_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 62, i32 21
  %114 = ptrtoint ptr %vram_type to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %vram_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %115)
  %cmp41 = icmp eq i32 %115, 5
  br i1 %cmp41, label %if.then43, label %if.end40.if.end48_crit_edge

if.end40.if.end48_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then43:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  %systemFlags44 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 1
  %116 = ptrtoint ptr %systemFlags44 to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %systemFlags44, align 1
  %118 = or i8 %117, 4
  store i8 %118, ptr %systemFlags44, align 1
  br label %if.end48

if.end48:                                         ; preds = %if.then43, %if.end40.if.end48_crit_edge
  %119 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %platform_caps, align 4
  %and52 = and i32 %120, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.end48.if.end58_crit_edge, label %if.then54

if.end48.if.end58_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

if.then54:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  %extraFlags = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 3
  %121 = ptrtoint ptr %extraFlags to i32
  call void @__asan_load1_noabort(i32 %121)
  %122 = load i8, ptr %extraFlags, align 1
  %123 = or i8 %122, 2
  store i8 %123, ptr %extraFlags, align 1
  br label %if.end58

if.end58:                                         ; preds = %if.then54, %if.end48.if.end58_crit_edge
  %124 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %platform_caps, align 4
  %and62 = and i32 %125, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62)
  %tobool63.not = icmp eq i32 %and62, 0
  br i1 %tobool63.not, label %if.end58.if.end72_crit_edge, label %if.then64

if.end58.if.end72_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end72

if.then64:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #16
  %systemFlags65 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 1
  %126 = ptrtoint ptr %systemFlags65 to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %systemFlags65, align 1
  %128 = or i8 %127, 64
  store i8 %128, ptr %systemFlags65, align 1
  %backbias_response_time = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 15
  %129 = ptrtoint ptr %backbias_response_time to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %backbias_response_time, align 4
  %131 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i = getelementptr inbounds %struct.si_power_info, ptr %132, i32 0, i32 22
  %133 = ptrtoint ptr %soft_regs_start.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %soft_regs_start.i, align 4
  %add.i = add i32 %134, 256
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %132, i32 0, i32 20
  %135 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %sram_end.i, align 4
  %call1.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i, i32 noundef %130, i32 noundef %136) #14
  br label %if.end72

if.end72:                                         ; preds = %if.then64, %if.end58.if.end72_crit_edge
  %ps_priv.i.i = getelementptr inbounds %struct.amdgpu_ps, ptr %3, i32 0, i32 9
  %137 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %ps_priv.i.i, align 4
  %139 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %priv.i, align 4
  %clock_registers.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1
  %dll_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 6
  %141 = ptrtoint ptr %dll_cntl.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %dll_cntl.i, align 4
  %level.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4
  %mclk.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11
  %vDLL_CNTL.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 6
  %143 = ptrtoint ptr %vDLL_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %143, i32 4)
  store i32 %142, ptr %vDLL_CNTL.i, align 1
  %mclk_pwrmgt_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 7
  %144 = ptrtoint ptr %mclk_pwrmgt_cntl.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %mclk_pwrmgt_cntl.i, align 4
  %vMCLK_PWRMGT_CNTL.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 5
  %146 = ptrtoint ptr %vMCLK_PWRMGT_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %146, i32 4)
  store i32 %145, ptr %vMCLK_PWRMGT_CNTL.i, align 1
  %mpll_ad_func_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 8
  %147 = ptrtoint ptr %mpll_ad_func_cntl.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %mpll_ad_func_cntl.i, align 4
  %vMPLL_AD_FUNC_CNTL.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 3
  %149 = ptrtoint ptr %vMPLL_AD_FUNC_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %149, i32 4)
  store i32 %148, ptr %vMPLL_AD_FUNC_CNTL.i, align 1
  %mpll_dq_func_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 9
  %150 = ptrtoint ptr %mpll_dq_func_cntl.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %mpll_dq_func_cntl.i, align 4
  %vMPLL_DQ_FUNC_CNTL.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 4
  %152 = ptrtoint ptr %vMPLL_DQ_FUNC_CNTL.i to i32
  call void @__asan_storeN_noabort(i32 %152, i32 4)
  store i32 %151, ptr %vMPLL_DQ_FUNC_CNTL.i, align 1
  %mpll_func_cntl.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 10
  %153 = ptrtoint ptr %mpll_func_cntl.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %mpll_func_cntl.i, align 4
  %155 = ptrtoint ptr %mclk.i to i32
  call void @__asan_storeN_noabort(i32 %155, i32 4)
  store i32 %154, ptr %mclk.i, align 1
  %mpll_func_cntl_1.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 11
  %156 = ptrtoint ptr %mpll_func_cntl_1.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %mpll_func_cntl_1.i, align 4
  %vMPLL_FUNC_CNTL_1.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 1
  %158 = ptrtoint ptr %vMPLL_FUNC_CNTL_1.i to i32
  call void @__asan_storeN_noabort(i32 %158, i32 4)
  store i32 %157, ptr %vMPLL_FUNC_CNTL_1.i, align 1
  %mpll_func_cntl_2.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 12
  %159 = ptrtoint ptr %mpll_func_cntl_2.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %mpll_func_cntl_2.i, align 4
  %vMPLL_FUNC_CNTL_2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 2
  %161 = ptrtoint ptr %vMPLL_FUNC_CNTL_2.i to i32
  call void @__asan_storeN_noabort(i32 %161, i32 4)
  store i32 %160, ptr %vMPLL_FUNC_CNTL_2.i, align 1
  %mpll_ss1.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 13
  %162 = ptrtoint ptr %mpll_ss1.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %mpll_ss1.i, align 4
  %vMPLL_SS.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 7
  %164 = ptrtoint ptr %vMPLL_SS.i to i32
  call void @__asan_storeN_noabort(i32 %164, i32 4)
  store i32 %163, ptr %vMPLL_SS.i, align 1
  %mpll_ss2.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 14
  %165 = ptrtoint ptr %mpll_ss2.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %mpll_ss2.i, align 4
  %vMPLL_SS2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 8
  %167 = ptrtoint ptr %vMPLL_SS2.i to i32
  call void @__asan_storeN_noabort(i32 %167, i32 4)
  store i32 %166, ptr %vMPLL_SS2.i, align 1
  %performance_levels.i = getelementptr inbounds %struct.si_ps, ptr %138, i32 0, i32 2
  %mclk36.i = getelementptr inbounds %struct.si_ps, ptr %138, i32 0, i32 2, i32 0, i32 1
  %168 = ptrtoint ptr %mclk36.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %mclk36.i, align 4
  %mclk_value.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 11, i32 9
  %170 = ptrtoint ptr %mclk_value.i to i32
  call void @__asan_storeN_noabort(i32 %170, i32 4)
  store i32 %169, ptr %mclk_value.i, align 1
  %171 = ptrtoint ptr %clock_registers.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %clock_registers.i, align 4
  %sclk.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 10
  %173 = ptrtoint ptr %sclk.i to i32
  call void @__asan_storeN_noabort(i32 %173, i32 4)
  store i32 %172, ptr %sclk.i, align 1
  %cg_spll_func_cntl_2.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 1
  %174 = ptrtoint ptr %cg_spll_func_cntl_2.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %cg_spll_func_cntl_2.i, align 4
  %vCG_SPLL_FUNC_CNTL_2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 10, i32 1
  %176 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_2.i to i32
  call void @__asan_storeN_noabort(i32 %176, i32 4)
  store i32 %175, ptr %vCG_SPLL_FUNC_CNTL_2.i, align 1
  %cg_spll_func_cntl_3.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 2
  %177 = ptrtoint ptr %cg_spll_func_cntl_3.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %cg_spll_func_cntl_3.i, align 4
  %vCG_SPLL_FUNC_CNTL_3.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 10, i32 2
  %179 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_3.i to i32
  call void @__asan_storeN_noabort(i32 %179, i32 4)
  store i32 %178, ptr %vCG_SPLL_FUNC_CNTL_3.i, align 1
  %cg_spll_func_cntl_4.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 3
  %180 = ptrtoint ptr %cg_spll_func_cntl_4.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %cg_spll_func_cntl_4.i, align 4
  %vCG_SPLL_FUNC_CNTL_4.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 10, i32 3
  %182 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_4.i to i32
  call void @__asan_storeN_noabort(i32 %182, i32 4)
  store i32 %181, ptr %vCG_SPLL_FUNC_CNTL_4.i, align 1
  %cg_spll_spread_spectrum.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 4
  %183 = ptrtoint ptr %cg_spll_spread_spectrum.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %cg_spll_spread_spectrum.i, align 4
  %vCG_SPLL_SPREAD_SPECTRUM.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 10, i32 4
  %185 = ptrtoint ptr %vCG_SPLL_SPREAD_SPECTRUM.i to i32
  call void @__asan_storeN_noabort(i32 %185, i32 4)
  store i32 %184, ptr %vCG_SPLL_SPREAD_SPECTRUM.i, align 1
  %cg_spll_spread_spectrum_2.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 1, i32 5
  %186 = ptrtoint ptr %cg_spll_spread_spectrum_2.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %cg_spll_spread_spectrum_2.i, align 4
  %vCG_SPLL_SPREAD_SPECTRUM_2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 10, i32 5
  %188 = ptrtoint ptr %vCG_SPLL_SPREAD_SPECTRUM_2.i to i32
  call void @__asan_storeN_noabort(i32 %188, i32 4)
  store i32 %187, ptr %vCG_SPLL_SPREAD_SPECTRUM_2.i, align 1
  %189 = ptrtoint ptr %performance_levels.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %performance_levels.i, align 4
  %sclk_value.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 10, i32 6
  %191 = ptrtoint ptr %sclk_value.i to i32
  call void @__asan_storeN_noabort(i32 %191, i32 4)
  store i32 %190, ptr %sclk_value.i, align 1
  %arbRefreshState.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 19
  %192 = ptrtoint ptr %arbRefreshState.i to i32
  call void @__asan_store1_noabort(i32 %192)
  store i8 0, ptr %arbRefreshState.i, align 1
  %193 = ptrtoint ptr %level.i to i32
  call void @__asan_store1_noabort(i32 %193)
  store i8 0, ptr %level.i, align 1
  %vddc_voltage_table.i180 = getelementptr inbounds %struct.evergreen_power_info, ptr %140, i32 0, i32 19
  %vddc.i = getelementptr inbounds %struct.si_ps, ptr %138, i32 0, i32 2, i32 0, i32 2
  %194 = ptrtoint ptr %vddc.i to i32
  call void @__asan_load2_noabort(i32 %194)
  %195 = load i16, ptr %vddc.i, align 4
  %vddc77.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 12
  %196 = ptrtoint ptr %vddc_voltage_table.i180 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %vddc_voltage_table.i180, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %197)
  %cmp3.not5.i.i = icmp eq i32 %197, 0
  br i1 %cmp3.not5.i.i, label %if.end72.si_populate_voltage_value.exit.i_crit_edge, label %if.end72.for.body.i.i181_crit_edge

if.end72.for.body.i.i181_crit_edge:               ; preds = %if.end72
  br label %for.body.i.i181

if.end72.si_populate_voltage_value.exit.i_crit_edge: ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit.i

for.body.i.i181:                                  ; preds = %for.inc.i.i.for.body.i.i181_crit_edge, %if.end72.for.body.i.i181_crit_edge
  %i.04.i.i = phi i32 [ %inc.i.i182, %for.inc.i.i.for.body.i.i181_crit_edge ], [ 0, %if.end72.for.body.i.i181_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.evergreen_power_info, ptr %140, i32 0, i32 19, i32 3, i32 %i.04.i.i
  %198 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %198)
  %199 = load i16, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %199, i16 %195)
  %cmp3.not.i.i = icmp ult i16 %199, %195
  br i1 %cmp3.not.i.i, label %for.inc.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body.i.i181
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i.i = trunc i32 %i.04.i.i to i8
  %index.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 12, i32 1
  %200 = ptrtoint ptr %index.i.i to i32
  call void @__asan_store1_noabort(i32 %200)
  store i8 %conv5.i.i, ptr %index.i.i, align 1
  %201 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %201)
  %202 = load i16, ptr %arrayidx.i.i, align 4
  %203 = ptrtoint ptr %vddc77.i to i32
  call void @__asan_storeN_noabort(i32 %203, i32 2)
  store i16 %202, ptr %vddc77.i, align 1
  br label %si_populate_voltage_value.exit.i

for.inc.i.i:                                      ; preds = %for.body.i.i181
  %inc.i.i182 = add nuw i32 %i.04.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i182, %197
  br i1 %exitcond.not.i.i, label %for.inc.i.i.si_populate_voltage_value.exit.i_crit_edge, label %for.inc.i.i.for.body.i.i181_crit_edge

for.inc.i.i.for.body.i.i181_crit_edge:            ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i181

for.inc.i.i.si_populate_voltage_value.exit.i_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit.i

si_populate_voltage_value.exit.i:                 ; preds = %for.inc.i.i.si_populate_voltage_value.exit.i_crit_edge, %if.then.i.i, %if.end72.si_populate_voltage_value.exit.i_crit_edge
  %i.02.i.i183 = phi i32 [ %i.04.i.i, %if.then.i.i ], [ 0, %if.end72.si_populate_voltage_value.exit.i_crit_edge ], [ %197, %for.inc.i.i.si_populate_voltage_value.exit.i_crit_edge ]
  %204 = ptrtoint ptr %vddc_voltage_table.i180 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %vddc_voltage_table.i180, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.02.i.i183, i32 %205)
  %cmp11.not.i.i = icmp ult i32 %i.02.i.i183, %205
  br i1 %cmp11.not.i.i, label %if.then.i184, label %si_populate_voltage_value.exit.i.if.end92.i_crit_edge

si_populate_voltage_value.exit.i.if.end92.i_crit_edge: ; preds = %si_populate_voltage_value.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end92.i

if.then.i184:                                     ; preds = %si_populate_voltage_value.exit.i
  %206 = ptrtoint ptr %vddc77.i to i32
  call void @__asan_loadN_noabort(i32 %206, i32 2)
  %207 = load i16, ptr %vddc77.i, align 1
  %dyn_state.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21
  %cac_leakage_table.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18
  %entries.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18, i32 1
  %208 = ptrtoint ptr %entries.i.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %entries.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %209, null
  br i1 %tobool.not.i.i, label %if.then.i184.if.then84.i_crit_edge, label %if.then.i3.i

if.then.i184.if.then84.i_crit_edge:               ; preds = %if.then.i184
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

if.then.i3.i:                                     ; preds = %if.then.i184
  %210 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %platform_caps, align 4
  %and.i.i185 = and i32 %211, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i185)
  %tobool3.not.i.i = icmp eq i32 %and.i.i185, 0
  br i1 %tobool3.not.i.i, label %if.else120.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i3.i
  %entries8.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  %212 = ptrtoint ptr %entries8.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %entries8.i.i, align 4
  %cmp.i.i186 = icmp eq ptr %213, null
  br i1 %cmp.i.i186, label %if.then4.i.i.if.end92.i_crit_edge, label %for.cond.preheader.i.i

if.then4.i.i.if.end92.i_crit_edge:                ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end92.i

for.cond.preheader.i.i:                           ; preds = %if.then4.i.i
  %214 = ptrtoint ptr %dyn_state.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %dyn_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %215)
  %cmp14183.not.i.i = icmp eq i32 %215, 0
  br i1 %cmp14183.not.i.i, label %for.cond.preheader.i.i.if.then84.i_crit_edge, label %for.cond.preheader.i.i.for.body.i5.i_crit_edge

for.cond.preheader.i.i.for.body.i5.i_crit_edge:   ; preds = %for.cond.preheader.i.i
  br label %for.body.i5.i

for.cond.preheader.i.i.if.then84.i_crit_edge:     ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

for.cond.i.i:                                     ; preds = %for.body.i5.i
  %inc.i4.i = add i16 %v_index.0184.i.i, 1
  %conv.i.i = zext i16 %inc.i4.i to i32
  %cmp14.i.i = icmp ugt i32 %215, %conv.i.i
  br i1 %cmp14.i.i, label %for.cond.i.i.for.body.i5.i_crit_edge, label %for.cond.i.i.for.body68.i.i_crit_edge

for.cond.i.i.for.body68.i.i_crit_edge:            ; preds = %for.cond.i.i
  br label %for.body68.i.i

for.cond.i.i.for.body.i5.i_crit_edge:             ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i5.i

for.body.i5.i:                                    ; preds = %for.cond.i.i.for.body.i5.i_crit_edge, %for.cond.preheader.i.i.for.body.i5.i_crit_edge
  %conv185.i.i = phi i32 [ %conv.i.i, %for.cond.i.i.for.body.i5.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i5.i_crit_edge ]
  %v_index.0184.i.i = phi i16 [ %inc.i4.i, %for.cond.i.i.for.body.i5.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i5.i_crit_edge ]
  %v.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %213, i32 %conv185.i.i, i32 1
  %216 = ptrtoint ptr %v.i.i to i32
  call void @__asan_load2_noabort(i32 %216)
  %217 = load i16, ptr %v.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %207, i16 %217)
  %cmp24.i.i = icmp eq i16 %207, %217
  br i1 %cmp24.i.i, label %if.then26.i.i, label %for.cond.i.i

if.then26.i.i:                                    ; preds = %for.body.i5.i
  call void @__sanitizer_cov_trace_pc() #16
  %218 = ptrtoint ptr %cac_leakage_table.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %cac_leakage_table.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %219, i32 %conv185.i.i)
  %cmp33.i.i = icmp ugt i32 %219, %conv185.i.i
  %sub.i.i187 = add i32 %219, -1
  %spec.select.i.i = select i1 %cmp33.i.i, i32 %conv185.i.i, i32 %sub.i.i187
  br label %cleanup.sink.split.i.i

for.cond59.i.i:                                   ; preds = %for.body68.i.i
  %inc117.i.i = add i16 %v_index.1187.i.i, 1
  %conv60.i.i = zext i16 %inc117.i.i to i32
  %cmp66.i.i = icmp ugt i32 %215, %conv60.i.i
  br i1 %cmp66.i.i, label %for.cond59.i.i.for.body68.i.i_crit_edge, label %for.cond59.i.i.if.then84.i_crit_edge

for.cond59.i.i.if.then84.i_crit_edge:             ; preds = %for.cond59.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

for.cond59.i.i.for.body68.i.i_crit_edge:          ; preds = %for.cond59.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body68.i.i

for.body68.i.i:                                   ; preds = %for.cond59.i.i.for.body68.i.i_crit_edge, %for.cond.i.i.for.body68.i.i_crit_edge
  %conv60188.i.i = phi i32 [ %conv60.i.i, %for.cond59.i.i.for.body68.i.i_crit_edge ], [ 0, %for.cond.i.i.for.body68.i.i_crit_edge ]
  %v_index.1187.i.i = phi i16 [ %inc117.i.i, %for.cond59.i.i.for.body68.i.i_crit_edge ], [ 0, %for.cond.i.i.for.body68.i.i_crit_edge ]
  %v78.i.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %213, i32 %conv60188.i.i, i32 1
  %220 = ptrtoint ptr %v78.i.i to i32
  call void @__asan_load2_noabort(i32 %220)
  %221 = load i16, ptr %v78.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %207, i16 %221)
  %cmp80.not.i.i = icmp ugt i16 %207, %221
  br i1 %cmp80.not.i.i, label %for.cond59.i.i, label %if.then82.i.i

if.then82.i.i:                                    ; preds = %for.body68.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %222 = ptrtoint ptr %cac_leakage_table.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %cac_leakage_table.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %223, i32 %conv60188.i.i)
  %cmp89.i.i = icmp ugt i32 %223, %conv60188.i.i
  %sub111.i.i = add i32 %223, -1
  %spec.select193.i.i = select i1 %cmp89.i.i, i32 %conv60188.i.i, i32 %sub111.i.i
  br label %cleanup.sink.split.i.i

if.else120.i.i:                                   ; preds = %if.then.i3.i
  %index.i6.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 12, i32 1
  %224 = ptrtoint ptr %index.i6.i to i32
  call void @__asan_load1_noabort(i32 %224)
  %225 = load i8, ptr %index.i6.i, align 1
  %conv121.i.i = zext i8 %225 to i32
  %226 = ptrtoint ptr %cac_leakage_table.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %cac_leakage_table.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %227, i32 %conv121.i.i)
  %cmp127.i.i = icmp ugt i32 %227, %conv121.i.i
  br i1 %cmp127.i.i, label %if.else120.i.i.cleanup.sink.split.i.i_crit_edge, label %if.else120.i.i.if.then84.i_crit_edge

if.else120.i.i.if.then84.i_crit_edge:             ; preds = %if.else120.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then84.i

if.else120.i.i.cleanup.sink.split.i.i_crit_edge:  ; preds = %if.else120.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

cleanup.sink.split.i.i:                           ; preds = %if.else120.i.i.cleanup.sink.split.i.i_crit_edge, %if.then82.i.i, %if.then26.i.i
  %conv121.sink.i.i = phi i32 [ %conv121.i.i, %if.else120.i.i.cleanup.sink.split.i.i_crit_edge ], [ %spec.select.i.i, %if.then26.i.i ], [ %spec.select193.i.i, %if.then82.i.i ]
  %arrayidx137.i.i = getelementptr %union.amdgpu_cac_leakage_entry, ptr %209, i32 %conv121.sink.i.i
  %228 = ptrtoint ptr %arrayidx137.i.i to i32
  call void @__asan_load2_noabort(i32 %228)
  %229 = load i16, ptr %arrayidx137.i.i, align 4
  br label %if.then84.i

if.then84.i:                                      ; preds = %cleanup.sink.split.i.i, %if.else120.i.i.if.then84.i_crit_edge, %for.cond59.i.i.if.then84.i_crit_edge, %for.cond.preheader.i.i.if.then84.i_crit_edge, %if.then.i184.if.then84.i_crit_edge
  %std_vddc.0.ph.i = phi i16 [ %207, %for.cond.preheader.i.i.if.then84.i_crit_edge ], [ %207, %if.else120.i.i.if.then84.i_crit_edge ], [ %229, %cleanup.sink.split.i.i ], [ %207, %if.then.i184.if.then84.i_crit_edge ], [ %207, %for.cond59.i.i.if.then84.i_crit_edge ]
  %index.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 12, i32 1
  %230 = ptrtoint ptr %index.i to i32
  call void @__asan_load1_noabort(i32 %230)
  %231 = load i8, ptr %index.i, align 1
  %std_vddc90.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 15
  %index1.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 15, i32 1
  %232 = ptrtoint ptr %index1.i.i to i32
  call void @__asan_store1_noabort(i32 %232)
  store i8 %231, ptr %index1.i.i, align 1
  %233 = ptrtoint ptr %std_vddc90.i to i32
  call void @__asan_storeN_noabort(i32 %233, i32 2)
  store i16 %std_vddc.0.ph.i, ptr %std_vddc90.i, align 1
  br label %if.end92.i

if.end92.i:                                       ; preds = %if.then84.i, %if.then4.i.i.if.end92.i_crit_edge, %si_populate_voltage_value.exit.i.if.end92.i_crit_edge
  %vddci_control.i = getelementptr inbounds %struct.evergreen_power_info, ptr %140, i32 0, i32 1
  %234 = ptrtoint ptr %vddci_control.i to i32
  call void @__asan_load1_noabort(i32 %234)
  %235 = load i8, ptr %vddci_control.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %235)
  %tobool93.not.i = icmp eq i8 %235, 0
  br i1 %tobool93.not.i, label %if.end92.i.if.end101.i_crit_edge, label %if.then94.i

if.end92.i.if.end101.i_crit_edge:                 ; preds = %if.end92.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end101.i

if.then94.i:                                      ; preds = %if.end92.i
  %vddci_voltage_table.i188 = getelementptr inbounds %struct.evergreen_power_info, ptr %140, i32 0, i32 20
  %vddci.i = getelementptr inbounds %struct.si_ps, ptr %138, i32 0, i32 2, i32 0, i32 3
  %236 = ptrtoint ptr %vddci.i to i32
  call void @__asan_load2_noabort(i32 %236)
  %237 = load i16, ptr %vddci.i, align 2
  %vddci99.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 14
  %238 = ptrtoint ptr %vddci_voltage_table.i188 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %vddci_voltage_table.i188, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %239)
  %cmp3.not5.i7.i = icmp eq i32 %239, 0
  br i1 %cmp3.not5.i7.i, label %if.then94.i.if.end101.i_crit_edge, label %if.then94.i.for.body.i11.i_crit_edge

if.then94.i.for.body.i11.i_crit_edge:             ; preds = %if.then94.i
  br label %for.body.i11.i

if.then94.i.if.end101.i_crit_edge:                ; preds = %if.then94.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end101.i

for.body.i11.i:                                   ; preds = %for.inc.i17.i.for.body.i11.i_crit_edge, %if.then94.i.for.body.i11.i_crit_edge
  %i.04.i8.i = phi i32 [ %inc.i15.i, %for.inc.i17.i.for.body.i11.i_crit_edge ], [ 0, %if.then94.i.for.body.i11.i_crit_edge ]
  %arrayidx.i9.i = getelementptr %struct.evergreen_power_info, ptr %140, i32 0, i32 20, i32 3, i32 %i.04.i8.i
  %240 = ptrtoint ptr %arrayidx.i9.i to i32
  call void @__asan_load2_noabort(i32 %240)
  %241 = load i16, ptr %arrayidx.i9.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %241, i16 %237)
  %cmp3.not.i10.i = icmp ult i16 %241, %237
  br i1 %cmp3.not.i10.i, label %for.inc.i17.i, label %if.then.i14.i

if.then.i14.i:                                    ; preds = %for.body.i11.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i12.i = trunc i32 %i.04.i8.i to i8
  %index.i13.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 14, i32 1
  %242 = ptrtoint ptr %index.i13.i to i32
  call void @__asan_store1_noabort(i32 %242)
  store i8 %conv5.i12.i, ptr %index.i13.i, align 1
  %243 = ptrtoint ptr %arrayidx.i9.i to i32
  call void @__asan_load2_noabort(i32 %243)
  %244 = load i16, ptr %arrayidx.i9.i, align 4
  %245 = ptrtoint ptr %vddci99.i to i32
  call void @__asan_storeN_noabort(i32 %245, i32 2)
  store i16 %244, ptr %vddci99.i, align 1
  br label %if.end101.i

for.inc.i17.i:                                    ; preds = %for.body.i11.i
  %inc.i15.i = add nuw i32 %i.04.i8.i, 1
  %exitcond.not.i16.i = icmp eq i32 %inc.i15.i, %239
  br i1 %exitcond.not.i16.i, label %for.inc.i17.i.if.end101.i_crit_edge, label %for.inc.i17.i.for.body.i11.i_crit_edge

for.inc.i17.i.for.body.i11.i_crit_edge:           ; preds = %for.inc.i17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i11.i

for.inc.i17.i.if.end101.i_crit_edge:              ; preds = %for.inc.i17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end101.i

if.end101.i:                                      ; preds = %for.inc.i17.i.if.end101.i_crit_edge, %if.then.i14.i, %if.then94.i.if.end101.i_crit_edge, %if.end92.i.if.end101.i_crit_edge
  %vddc_phase_shed_control.i189 = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 15
  %246 = ptrtoint ptr %vddc_phase_shed_control.i189 to i32
  call void @__asan_load1_noabort(i32 %246)
  %247 = load i8, ptr %vddc_phase_shed_control.i189, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %247)
  %tobool102.not.i = icmp eq i8 %247, 0
  br i1 %tobool102.not.i, label %if.end101.i.if.end117.i_crit_edge, label %if.then103.i

if.end101.i.if.end117.i_crit_edge:                ; preds = %if.end101.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end117.i

if.then103.i:                                     ; preds = %if.end101.i
  %phase_shedding_limits_table.i190 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19
  %248 = ptrtoint ptr %vddc.i to i32
  call void @__asan_load2_noabort(i32 %248)
  %249 = load i16, ptr %vddc.i, align 4
  %250 = ptrtoint ptr %performance_levels.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %performance_levels.i, align 4
  %252 = ptrtoint ptr %mclk36.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %mclk36.i, align 4
  %254 = ptrtoint ptr %phase_shedding_limits_table.i190 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %phase_shedding_limits_table.i190, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %255)
  %cmp1.not.i.i = icmp eq i32 %255, 0
  br i1 %cmp1.not.i.i, label %if.then103.i.si_populate_phase_shedding_value.exit.i_crit_edge, label %for.body.lr.ph.i23.i

if.then103.i.si_populate_phase_shedding_value.exit.i_crit_edge: ; preds = %if.then103.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_phase_shedding_value.exit.i

for.body.lr.ph.i23.i:                             ; preds = %if.then103.i
  %entries.i22.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19, i32 1
  %256 = ptrtoint ptr %entries.i22.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %entries.i22.i, align 4
  br label %for.body.i27.i

for.body.i27.i:                                   ; preds = %for.inc.i30.i.for.body.i27.i_crit_edge, %for.body.lr.ph.i23.i
  %i.02.i24.i = phi i32 [ 0, %for.body.lr.ph.i23.i ], [ %inc.i28.i, %for.inc.i30.i.for.body.i27.i_crit_edge ]
  %arrayidx.i25.i = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %257, i32 %i.02.i24.i
  %258 = ptrtoint ptr %arrayidx.i25.i to i32
  call void @__asan_load2_noabort(i32 %258)
  %259 = load i16, ptr %arrayidx.i25.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %259, i16 %249)
  %cmp3.not.i26.i = icmp ult i16 %259, %249
  br i1 %cmp3.not.i26.i, label %for.body.i27.i.for.inc.i30.i_crit_edge, label %land.lhs.true.i.i

for.body.i27.i.for.inc.i30.i_crit_edge:           ; preds = %for.body.i27.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i30.i

land.lhs.true.i.i:                                ; preds = %for.body.i27.i
  %sclk7.i.i = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %257, i32 %i.02.i24.i, i32 1
  %260 = ptrtoint ptr %sclk7.i.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %sclk7.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %261, i32 %251)
  %cmp8.not.i.i = icmp ult i32 %261, %251
  br i1 %cmp8.not.i.i, label %land.lhs.true.i.i.for.inc.i30.i_crit_edge, label %land.lhs.true10.i.i

land.lhs.true.i.i.for.inc.i30.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i30.i

land.lhs.true10.i.i:                              ; preds = %land.lhs.true.i.i
  %mclk13.i.i = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %257, i32 %i.02.i24.i, i32 2
  %262 = ptrtoint ptr %mclk13.i.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %mclk13.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %263, i32 %253)
  %cmp14.not.i.i = icmp ult i32 %263, %253
  br i1 %cmp14.not.i.i, label %land.lhs.true10.i.i.for.inc.i30.i_crit_edge, label %land.lhs.true10.i.i.si_populate_phase_shedding_value.exit.i_crit_edge

land.lhs.true10.i.i.si_populate_phase_shedding_value.exit.i_crit_edge: ; preds = %land.lhs.true10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_phase_shedding_value.exit.i

land.lhs.true10.i.i.for.inc.i30.i_crit_edge:      ; preds = %land.lhs.true10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i30.i

for.inc.i30.i:                                    ; preds = %land.lhs.true10.i.i.for.inc.i30.i_crit_edge, %land.lhs.true.i.i.for.inc.i30.i_crit_edge, %for.body.i27.i.for.inc.i30.i_crit_edge
  %inc.i28.i = add nuw i32 %i.02.i24.i, 1
  %exitcond.not.i29.i = icmp eq i32 %inc.i28.i, %255
  br i1 %exitcond.not.i29.i, label %for.inc.i30.i.si_populate_phase_shedding_value.exit.i_crit_edge, label %for.inc.i30.i.for.body.i27.i_crit_edge

for.inc.i30.i.for.body.i27.i_crit_edge:           ; preds = %for.inc.i30.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i27.i

for.inc.i30.i.si_populate_phase_shedding_value.exit.i_crit_edge: ; preds = %for.inc.i30.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_phase_shedding_value.exit.i

si_populate_phase_shedding_value.exit.i:          ; preds = %for.inc.i30.i.si_populate_phase_shedding_value.exit.i_crit_edge, %land.lhs.true10.i.i.si_populate_phase_shedding_value.exit.i_crit_edge, %if.then103.i.si_populate_phase_shedding_value.exit.i_crit_edge
  %i.0.lcssa.i.i = phi i32 [ 0, %if.then103.i.si_populate_phase_shedding_value.exit.i_crit_edge ], [ %i.02.i24.i, %land.lhs.true10.i.i.si_populate_phase_shedding_value.exit.i_crit_edge ], [ %255, %for.inc.i30.i.si_populate_phase_shedding_value.exit.i_crit_edge ]
  %conv16.i.i = trunc i32 %i.0.lcssa.i.i to i8
  %phase_settings.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 12, i32 2
  %264 = ptrtoint ptr %phase_settings.i.i to i32
  call void @__asan_store1_noabort(i32 %264)
  store i8 %conv16.i.i, ptr %phase_settings.i.i, align 1
  br label %if.end117.i

if.end117.i:                                      ; preds = %si_populate_phase_shedding_value.exit.i, %if.end101.i.if.end117.i_crit_edge
  %mvdd.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 13
  %265 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %priv.i, align 4
  %mvdd_control.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %266, i32 0, i32 6
  %267 = ptrtoint ptr %mvdd_control.i.i to i32
  call void @__asan_load1_noabort(i32 %267)
  %268 = load i8, ptr %mvdd_control.i.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %268)
  %tobool.not.i31.i = icmp eq i8 %268, 0
  br i1 %tobool.not.i31.i, label %if.end117.i.si_populate_initial_mvdd_value.exit.i_crit_edge, label %if.then.i32.i

if.end117.i.si_populate_initial_mvdd_value.exit.i_crit_edge: ; preds = %if.end117.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_initial_mvdd_value.exit.i

if.then.i32.i:                                    ; preds = %if.end117.i
  %mvdd_voltage_table.i.i = getelementptr inbounds %struct.si_power_info, ptr %266, i32 0, i32 3
  %mvdd_bootup_value.i.i = getelementptr inbounds %struct.si_power_info, ptr %266, i32 0, i32 6
  %269 = ptrtoint ptr %mvdd_bootup_value.i.i to i32
  call void @__asan_load2_noabort(i32 %269)
  %270 = load i16, ptr %mvdd_bootup_value.i.i, align 2
  %271 = ptrtoint ptr %mvdd_voltage_table.i.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %mvdd_voltage_table.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %272)
  %cmp3.not5.i.i.i = icmp eq i32 %272, 0
  br i1 %cmp3.not5.i.i.i, label %if.then.i32.i.si_populate_initial_mvdd_value.exit.i_crit_edge, label %if.then.i32.i.for.body.i.i.i_crit_edge

if.then.i32.i.for.body.i.i.i_crit_edge:           ; preds = %if.then.i32.i
  br label %for.body.i.i.i

if.then.i32.i.si_populate_initial_mvdd_value.exit.i_crit_edge: ; preds = %if.then.i32.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_initial_mvdd_value.exit.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.then.i32.i.for.body.i.i.i_crit_edge
  %i.04.i.i.i = phi i32 [ %inc.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %if.then.i32.i.for.body.i.i.i_crit_edge ]
  %arrayidx.i.i.i = getelementptr %struct.si_power_info, ptr %266, i32 0, i32 3, i32 3, i32 %i.04.i.i.i
  %273 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %273)
  %274 = load i16, ptr %arrayidx.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %274, i16 %270)
  %cmp3.not.i.i.i = icmp ult i16 %274, %270
  br i1 %cmp3.not.i.i.i, label %for.inc.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i.i.i = trunc i32 %i.04.i.i.i to i8
  %index.i.i.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 13, i32 1
  %275 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_store1_noabort(i32 %275)
  store i8 %conv5.i.i.i, ptr %index.i.i.i, align 1
  %276 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %276)
  %277 = load i16, ptr %arrayidx.i.i.i, align 4
  %278 = ptrtoint ptr %mvdd.i to i32
  call void @__asan_storeN_noabort(i32 %278, i32 2)
  store i16 %277, ptr %mvdd.i, align 1
  br label %si_populate_initial_mvdd_value.exit.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %inc.i.i.i = add nuw i32 %i.04.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, %272
  br i1 %exitcond.not.i.i.i, label %for.inc.i.i.i.si_populate_initial_mvdd_value.exit.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i

for.inc.i.i.i.si_populate_initial_mvdd_value.exit.i_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_initial_mvdd_value.exit.i

si_populate_initial_mvdd_value.exit.i:            ; preds = %for.inc.i.i.i.si_populate_initial_mvdd_value.exit.i_crit_edge, %if.then.i.i.i, %if.then.i32.i.si_populate_initial_mvdd_value.exit.i_crit_edge, %if.end117.i.si_populate_initial_mvdd_value.exit.i_crit_edge
  %aT.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 8
  %279 = ptrtoint ptr %aT.i to i32
  call void @__asan_storeN_noabort(i32 %279, i32 4)
  store i32 65535, ptr %aT.i, align 1
  %dsp.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %140, i32 0, i32 43
  %280 = ptrtoint ptr %dsp.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %dsp.i, align 4
  %bSP.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 9
  %282 = ptrtoint ptr %bSP.i to i32
  call void @__asan_storeN_noabort(i32 %282, i32 4)
  store i32 %281, ptr %bSP.i, align 1
  %boot_pcie_gen.i = getelementptr inbounds %struct.si_power_info, ptr %140, i32 0, i32 10
  %283 = ptrtoint ptr %boot_pcie_gen.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load i32, ptr %boot_pcie_gen.i, align 4
  %conv.i191 = trunc i32 %284 to i8
  %gen2PCIE.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 2
  %285 = ptrtoint ptr %gen2PCIE.i to i32
  call void @__asan_store1_noabort(i32 %285)
  store i8 %conv.i191, ptr %gen2PCIE.i, align 1
  %286 = ptrtoint ptr %vram_type to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %vram_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %287)
  %cmp.i192 = icmp eq i32 %287, 5
  br i1 %cmp.i192, label %if.then2.i.i, label %si_populate_initial_mvdd_value.exit.i.si_populate_smc_initial_state.exit_crit_edge

si_populate_initial_mvdd_value.exit.i.si_populate_smc_initial_state.exit_crit_edge: ; preds = %si_populate_initial_mvdd_value.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_smc_initial_state.exit

if.then2.i.i:                                     ; preds = %si_populate_initial_mvdd_value.exit.i
  %288 = ptrtoint ptr %mclk36.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %mclk36.i, align 4
  %290 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load ptr, ptr %priv.i, align 4
  %mclk_strobe_mode_threshold.i.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %291, i32 0, i32 37
  %292 = ptrtoint ptr %mclk_strobe_mode_threshold.i.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %mclk_strobe_mode_threshold.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %293, i32 %289)
  %cmp.not.i.i = icmp ult i32 %293, %289
  br i1 %cmp.not.i.i, label %if.else6.i.i.i, label %if.then.i.i34.i

if.then.i.i34.i:                                  ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 12500, i32 %289)
  %cmp.i.i.i = icmp ult i32 %289, 12500
  br i1 %cmp.i.i.i, label %if.then.i.i34.i.si_get_strobe_mode_settings.exit.i_crit_edge, label %if.else.i.i.i

if.then.i.i34.i.si_get_strobe_mode_settings.exit.i_crit_edge: ; preds = %if.then.i.i34.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit.i

if.else.i.i.i:                                    ; preds = %if.then.i.i34.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 47500, i32 %289)
  %cmp2.i.i.i = icmp ugt i32 %289, 47500
  br i1 %cmp2.i.i.i, label %if.else.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge, label %if.else4.i.i.i

if.else.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit.i

if.else4.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %294 = trunc i32 %289 to i16
  %div.lhs.trunc.i.i.i = add i16 %294, -10000
  %div26.i.i.i = udiv i16 %div.lhs.trunc.i.i.i, 2500
  %conv.i.i.i = trunc i16 %div26.i.i.i to i8
  br label %si_get_strobe_mode_settings.exit.i

if.else6.i.i.i:                                   ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 65000, i32 %289)
  %cmp7.i.i.i = icmp ult i32 %289, 65000
  br i1 %cmp7.i.i.i, label %if.else6.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge, label %if.else10.i.i.i

if.else6.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge: ; preds = %if.else6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit.i

if.else10.i.i.i:                                  ; preds = %if.else6.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 135000, i32 %289)
  %cmp11.i.i.i = icmp ugt i32 %289, 135000
  br i1 %cmp11.i.i.i, label %if.else10.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge, label %if.else14.i.i.i

if.else10.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge: ; preds = %if.else10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_get_strobe_mode_settings.exit.i

if.else14.i.i.i:                                  ; preds = %if.else10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub15.i.i.i = add nsw i32 %289, -60000
  %div16.i.i.i = udiv i32 %sub15.i.i.i, 5000
  %conv17.i.i.i = trunc i32 %div16.i.i.i to i8
  br label %si_get_strobe_mode_settings.exit.i

si_get_strobe_mode_settings.exit.i:               ; preds = %if.else14.i.i.i, %if.else10.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge, %if.else6.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge, %if.else4.i.i.i, %if.else.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge, %if.then.i.i34.i.si_get_strobe_mode_settings.exit.i_crit_edge
  %result.0.i.i = phi i8 [ %conv.i.i.i, %if.else4.i.i.i ], [ %conv17.i.i.i, %if.else14.i.i.i ], [ 0, %if.then.i.i34.i.si_get_strobe_mode_settings.exit.i_crit_edge ], [ 15, %if.else.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge ], [ 0, %if.else6.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge ], [ 15, %if.else10.i.i.i.si_get_strobe_mode_settings.exit.i_crit_edge ]
  %295 = or i8 %result.0.i.i, 16
  %spec.select.i35.i = select i1 %cmp.not.i.i, i8 %result.0.i.i, i8 %295
  %strobeMode.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 5
  %296 = ptrtoint ptr %strobeMode.i to i32
  call void @__asan_store1_noabort(i32 %296)
  store i8 %spec.select.i35.i, ptr %strobeMode.i, align 1
  %297 = ptrtoint ptr %mclk36.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %mclk36.i, align 4
  %mclk_edc_enable_threshold.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %140, i32 0, i32 38
  %299 = ptrtoint ptr %mclk_edc_enable_threshold.i to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load i32, ptr %mclk_edc_enable_threshold.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %298, i32 %300)
  %cmp138.i = icmp ugt i32 %298, %300
  %mcFlags.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 6
  %..i = select i1 %cmp138.i, i8 3, i8 0
  %301 = ptrtoint ptr %mcFlags.i to i32
  call void @__asan_store1_noabort(i32 %301)
  store i8 %..i, ptr %mcFlags.i, align 1
  br label %si_populate_smc_initial_state.exit

si_populate_smc_initial_state.exit:               ; preds = %si_get_strobe_mode_settings.exit.i, %si_populate_initial_mvdd_value.exit.i.si_populate_smc_initial_state.exit_crit_edge
  %initialState.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8
  %levelCount.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 1
  %302 = ptrtoint ptr %levelCount.i to i32
  call void @__asan_store1_noabort(i32 %302)
  store i8 1, ptr %levelCount.i, align 1
  %303 = ptrtoint ptr %initialState.i to i32
  call void @__asan_load1_noabort(i32 %303)
  %304 = load i8, ptr %initialState.i, align 1
  %305 = or i8 %304, 1
  store i8 %305, ptr %initialState.i, align 1
  %dpm2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 26
  %306 = ptrtoint ptr %dpm2.i to i32
  call void @__asan_store1_noabort(i32 %306)
  store i8 0, ptr %dpm2.i, align 1
  %NearTDPDec.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 26, i32 5
  %307 = ptrtoint ptr %NearTDPDec.i to i32
  call void @__asan_store1_noabort(i32 %307)
  store i8 0, ptr %NearTDPDec.i, align 1
  %AboveSafeInc.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 26, i32 6
  %308 = ptrtoint ptr %AboveSafeInc.i to i32
  call void @__asan_store1_noabort(i32 %308)
  store i8 0, ptr %AboveSafeInc.i, align 1
  %BelowSafeInc.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 26, i32 7
  %309 = ptrtoint ptr %BelowSafeInc.i to i32
  call void @__asan_store1_noabort(i32 %309)
  store i8 0, ptr %BelowSafeInc.i, align 1
  %PwrEfficiencyRatio.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 26, i32 10
  %310 = ptrtoint ptr %PwrEfficiencyRatio.i to i32
  call void @__asan_storeN_noabort(i32 %310, i32 2)
  store i16 0, ptr %PwrEfficiencyRatio.i, align 1
  %SQPowerThrottle.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 20
  %311 = ptrtoint ptr %SQPowerThrottle.i to i32
  call void @__asan_storeN_noabort(i32 %311, i32 4)
  store i32 1073692671, ptr %SQPowerThrottle.i, align 1
  %SQPowerThrottle_2.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 8, i32 4, i32 21
  %312 = ptrtoint ptr %SQPowerThrottle_2.i to i32
  call void @__asan_storeN_noabort(i32 %312, i32 4)
  store i32 2080325631, ptr %SQPowerThrottle_2.i, align 1
  %313 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %priv.i, align 4
  %clock_registers.i194 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1
  %315 = ptrtoint ptr %clock_registers.i194 to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %clock_registers.i194, align 4
  %cg_spll_func_cntl_2.i195 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 1
  %317 = ptrtoint ptr %cg_spll_func_cntl_2.i195 to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %cg_spll_func_cntl_2.i195, align 4
  %cg_spll_func_cntl_3.i196 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 2
  %319 = ptrtoint ptr %cg_spll_func_cntl_3.i196 to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load i32, ptr %cg_spll_func_cntl_3.i196, align 4
  %cg_spll_func_cntl_4.i197 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 3
  %321 = ptrtoint ptr %cg_spll_func_cntl_4.i197 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %cg_spll_func_cntl_4.i197, align 4
  %dll_cntl7.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 6
  %323 = ptrtoint ptr %dll_cntl7.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %dll_cntl7.i, align 4
  %mclk_pwrmgt_cntl9.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 7
  %325 = ptrtoint ptr %mclk_pwrmgt_cntl9.i to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load i32, ptr %mclk_pwrmgt_cntl9.i, align 4
  %mpll_ad_func_cntl11.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 8
  %327 = ptrtoint ptr %mpll_ad_func_cntl11.i to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %mpll_ad_func_cntl11.i, align 4
  %mpll_dq_func_cntl13.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 9
  %329 = ptrtoint ptr %mpll_dq_func_cntl13.i to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %mpll_dq_func_cntl13.i, align 4
  %mpll_func_cntl15.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 10
  %331 = ptrtoint ptr %mpll_func_cntl15.i to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load i32, ptr %mpll_func_cntl15.i, align 4
  %mpll_func_cntl_117.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 11
  %333 = ptrtoint ptr %mpll_func_cntl_117.i to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load i32, ptr %mpll_func_cntl_117.i, align 4
  %mpll_func_cntl_219.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 12
  %335 = ptrtoint ptr %mpll_func_cntl_219.i to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load i32, ptr %mpll_func_cntl_219.i, align 4
  %ACPIState.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9
  %337 = call ptr @memcpy(ptr %ACPIState.i, ptr %initialState.i, i32 152)
  %338 = ptrtoint ptr %ACPIState.i to i32
  call void @__asan_load1_noabort(i32 %338)
  %339 = load i8, ptr %ACPIState.i, align 1
  %340 = and i8 %339, -2
  store i8 %340, ptr %ACPIState.i, align 1
  %acpi_vddc.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %314, i32 0, i32 33
  %341 = ptrtoint ptr %acpi_vddc.i to i32
  call void @__asan_load2_noabort(i32 %341)
  %342 = load i16, ptr %acpi_vddc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %342)
  %tobool.not.i199 = icmp eq i16 %342, 0
  %vddc_voltage_table52.i = getelementptr inbounds %struct.evergreen_power_info, ptr %314, i32 0, i32 19
  br i1 %tobool.not.i199, label %if.else.i269, label %if.then.i202

if.then.i202:                                     ; preds = %si_populate_smc_initial_state.exit
  %vddc.i200 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12
  %343 = ptrtoint ptr %vddc_voltage_table52.i to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load i32, ptr %vddc_voltage_table52.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %344)
  %cmp3.not5.i.i201 = icmp eq i32 %344, 0
  br i1 %cmp3.not5.i.i201, label %if.then.i202.si_populate_voltage_value.exit.i215_crit_edge, label %if.then.i202.for.body.i.i206_crit_edge

if.then.i202.for.body.i.i206_crit_edge:           ; preds = %if.then.i202
  br label %for.body.i.i206

if.then.i202.si_populate_voltage_value.exit.i215_crit_edge: ; preds = %if.then.i202
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit.i215

for.body.i.i206:                                  ; preds = %for.inc.i.i212.for.body.i.i206_crit_edge, %if.then.i202.for.body.i.i206_crit_edge
  %i.04.i.i203 = phi i32 [ %inc.i.i210, %for.inc.i.i212.for.body.i.i206_crit_edge ], [ 0, %if.then.i202.for.body.i.i206_crit_edge ]
  %arrayidx.i.i204 = getelementptr %struct.evergreen_power_info, ptr %314, i32 0, i32 19, i32 3, i32 %i.04.i.i203
  %345 = ptrtoint ptr %arrayidx.i.i204 to i32
  call void @__asan_load2_noabort(i32 %345)
  %346 = load i16, ptr %arrayidx.i.i204, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %346, i16 %342)
  %cmp3.not.i.i205 = icmp ult i16 %346, %342
  br i1 %cmp3.not.i.i205, label %for.inc.i.i212, label %if.then.i.i209

if.then.i.i209:                                   ; preds = %for.body.i.i206
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i.i207 = trunc i32 %i.04.i.i203 to i8
  %index.i.i208 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12, i32 1
  %347 = ptrtoint ptr %index.i.i208 to i32
  call void @__asan_store1_noabort(i32 %347)
  store i8 %conv5.i.i207, ptr %index.i.i208, align 1
  %348 = ptrtoint ptr %arrayidx.i.i204 to i32
  call void @__asan_load2_noabort(i32 %348)
  %349 = load i16, ptr %arrayidx.i.i204, align 4
  %350 = ptrtoint ptr %vddc.i200 to i32
  call void @__asan_storeN_noabort(i32 %350, i32 2)
  store i16 %349, ptr %vddc.i200, align 1
  br label %si_populate_voltage_value.exit.i215

for.inc.i.i212:                                   ; preds = %for.body.i.i206
  %inc.i.i210 = add nuw i32 %i.04.i.i203, 1
  %exitcond.not.i.i211 = icmp eq i32 %inc.i.i210, %344
  br i1 %exitcond.not.i.i211, label %for.inc.i.i212.si_populate_voltage_value.exit.i215_crit_edge, label %for.inc.i.i212.for.body.i.i206_crit_edge

for.inc.i.i212.for.body.i.i206_crit_edge:         ; preds = %for.inc.i.i212
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i206

for.inc.i.i212.si_populate_voltage_value.exit.i215_crit_edge: ; preds = %for.inc.i.i212
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit.i215

si_populate_voltage_value.exit.i215:              ; preds = %for.inc.i.i212.si_populate_voltage_value.exit.i215_crit_edge, %if.then.i.i209, %if.then.i202.si_populate_voltage_value.exit.i215_crit_edge
  %i.02.i.i213 = phi i32 [ %i.04.i.i203, %if.then.i.i209 ], [ 0, %if.then.i202.si_populate_voltage_value.exit.i215_crit_edge ], [ %344, %for.inc.i.i212.si_populate_voltage_value.exit.i215_crit_edge ]
  %351 = ptrtoint ptr %vddc_voltage_table52.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load i32, ptr %vddc_voltage_table52.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.02.i.i213, i32 %352)
  %cmp11.not.i.i214 = icmp ult i32 %i.02.i.i213, %352
  br i1 %cmp11.not.i.i214, label %if.then26.i, label %si_populate_voltage_value.exit.i215.if.end40.i_crit_edge

si_populate_voltage_value.exit.i215.if.end40.i_crit_edge: ; preds = %si_populate_voltage_value.exit.i215
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40.i

if.then26.i:                                      ; preds = %si_populate_voltage_value.exit.i215
  %353 = ptrtoint ptr %vddc.i200 to i32
  call void @__asan_loadN_noabort(i32 %353, i32 2)
  %354 = load i16, ptr %vddc.i200, align 1
  %dyn_state.i.i216 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21
  %cac_leakage_table.i.i217 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18
  %entries.i.i218 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18, i32 1
  %355 = ptrtoint ptr %entries.i.i218 to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load ptr, ptr %entries.i.i218, align 4
  %tobool.not.i.i219 = icmp eq ptr %356, null
  br i1 %tobool.not.i.i219, label %if.then26.i.if.then32.i_crit_edge, label %if.then.i3.i223

if.then26.i.if.then32.i_crit_edge:                ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then32.i

if.then.i3.i223:                                  ; preds = %if.then26.i
  %357 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %platform_caps, align 4
  %and.i.i221 = and i32 %358, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i221)
  %tobool3.not.i.i222 = icmp eq i32 %and.i.i221, 0
  br i1 %tobool3.not.i.i222, label %if.else120.i.i258, label %if.then4.i.i226

if.then4.i.i226:                                  ; preds = %if.then.i3.i223
  %entries8.i.i224 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  %359 = ptrtoint ptr %entries8.i.i224 to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load ptr, ptr %entries8.i.i224, align 4
  %cmp.i.i225 = icmp eq ptr %360, null
  br i1 %cmp.i.i225, label %if.then4.i.i226.if.end40.i_crit_edge, label %for.cond.preheader.i.i228

if.then4.i.i226.if.end40.i_crit_edge:             ; preds = %if.then4.i.i226
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40.i

for.cond.preheader.i.i228:                        ; preds = %if.then4.i.i226
  %361 = ptrtoint ptr %dyn_state.i.i216 to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load i32, ptr %dyn_state.i.i216, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %362)
  %cmp14183.not.i.i227 = icmp eq i32 %362, 0
  br i1 %cmp14183.not.i.i227, label %for.cond.preheader.i.i228.if.then32.i_crit_edge, label %for.cond.preheader.i.i228.for.body.i5.i237_crit_edge

for.cond.preheader.i.i228.for.body.i5.i237_crit_edge: ; preds = %for.cond.preheader.i.i228
  br label %for.body.i5.i237

for.cond.preheader.i.i228.if.then32.i_crit_edge:  ; preds = %for.cond.preheader.i.i228
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then32.i

for.cond.i.i232:                                  ; preds = %for.body.i5.i237
  %inc.i4.i229 = add i16 %v_index.0184.i.i234, 1
  %conv.i.i230 = zext i16 %inc.i4.i229 to i32
  %cmp14.i.i231 = icmp ugt i32 %362, %conv.i.i230
  br i1 %cmp14.i.i231, label %for.cond.i.i232.for.body.i5.i237_crit_edge, label %for.cond.i.i232.for.body68.i.i250_crit_edge

for.cond.i.i232.for.body68.i.i250_crit_edge:      ; preds = %for.cond.i.i232
  br label %for.body68.i.i250

for.cond.i.i232.for.body.i5.i237_crit_edge:       ; preds = %for.cond.i.i232
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i5.i237

for.body.i5.i237:                                 ; preds = %for.cond.i.i232.for.body.i5.i237_crit_edge, %for.cond.preheader.i.i228.for.body.i5.i237_crit_edge
  %conv185.i.i233 = phi i32 [ %conv.i.i230, %for.cond.i.i232.for.body.i5.i237_crit_edge ], [ 0, %for.cond.preheader.i.i228.for.body.i5.i237_crit_edge ]
  %v_index.0184.i.i234 = phi i16 [ %inc.i4.i229, %for.cond.i.i232.for.body.i5.i237_crit_edge ], [ 0, %for.cond.preheader.i.i228.for.body.i5.i237_crit_edge ]
  %v.i.i235 = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %360, i32 %conv185.i.i233, i32 1
  %363 = ptrtoint ptr %v.i.i235 to i32
  call void @__asan_load2_noabort(i32 %363)
  %364 = load i16, ptr %v.i.i235, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %354, i16 %364)
  %cmp24.i.i236 = icmp eq i16 %354, %364
  br i1 %cmp24.i.i236, label %if.then26.i.i241, label %for.cond.i.i232

if.then26.i.i241:                                 ; preds = %for.body.i5.i237
  call void @__sanitizer_cov_trace_pc() #16
  %365 = ptrtoint ptr %cac_leakage_table.i.i217 to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load i32, ptr %cac_leakage_table.i.i217, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %366, i32 %conv185.i.i233)
  %cmp33.i.i238 = icmp ugt i32 %366, %conv185.i.i233
  %sub.i.i239 = add i32 %366, -1
  %spec.select.i.i240 = select i1 %cmp33.i.i238, i32 %conv185.i.i233, i32 %sub.i.i239
  br label %cleanup.sink.split.i.i261

for.cond59.i.i245:                                ; preds = %for.body68.i.i250
  %inc117.i.i242 = add i16 %v_index.1187.i.i247, 1
  %conv60.i.i243 = zext i16 %inc117.i.i242 to i32
  %cmp66.i.i244 = icmp ugt i32 %362, %conv60.i.i243
  br i1 %cmp66.i.i244, label %for.cond59.i.i245.for.body68.i.i250_crit_edge, label %for.cond59.i.i245.if.then32.i_crit_edge

for.cond59.i.i245.if.then32.i_crit_edge:          ; preds = %for.cond59.i.i245
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then32.i

for.cond59.i.i245.for.body68.i.i250_crit_edge:    ; preds = %for.cond59.i.i245
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body68.i.i250

for.body68.i.i250:                                ; preds = %for.cond59.i.i245.for.body68.i.i250_crit_edge, %for.cond.i.i232.for.body68.i.i250_crit_edge
  %conv60188.i.i246 = phi i32 [ %conv60.i.i243, %for.cond59.i.i245.for.body68.i.i250_crit_edge ], [ 0, %for.cond.i.i232.for.body68.i.i250_crit_edge ]
  %v_index.1187.i.i247 = phi i16 [ %inc117.i.i242, %for.cond59.i.i245.for.body68.i.i250_crit_edge ], [ 0, %for.cond.i.i232.for.body68.i.i250_crit_edge ]
  %v78.i.i248 = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %360, i32 %conv60188.i.i246, i32 1
  %367 = ptrtoint ptr %v78.i.i248 to i32
  call void @__asan_load2_noabort(i32 %367)
  %368 = load i16, ptr %v78.i.i248, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %354, i16 %368)
  %cmp80.not.i.i249 = icmp ugt i16 %354, %368
  br i1 %cmp80.not.i.i249, label %for.cond59.i.i245, label %if.then82.i.i254

if.then82.i.i254:                                 ; preds = %for.body68.i.i250
  call void @__sanitizer_cov_trace_pc() #16
  %369 = ptrtoint ptr %cac_leakage_table.i.i217 to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load i32, ptr %cac_leakage_table.i.i217, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %370, i32 %conv60188.i.i246)
  %cmp89.i.i251 = icmp ugt i32 %370, %conv60188.i.i246
  %sub111.i.i252 = add i32 %370, -1
  %spec.select193.i.i253 = select i1 %cmp89.i.i251, i32 %conv60188.i.i246, i32 %sub111.i.i252
  br label %cleanup.sink.split.i.i261

if.else120.i.i258:                                ; preds = %if.then.i3.i223
  %index.i6.i255 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12, i32 1
  %371 = ptrtoint ptr %index.i6.i255 to i32
  call void @__asan_load1_noabort(i32 %371)
  %372 = load i8, ptr %index.i6.i255, align 1
  %conv121.i.i256 = zext i8 %372 to i32
  %373 = ptrtoint ptr %cac_leakage_table.i.i217 to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %cac_leakage_table.i.i217, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %374, i32 %conv121.i.i256)
  %cmp127.i.i257 = icmp ugt i32 %374, %conv121.i.i256
  br i1 %cmp127.i.i257, label %if.else120.i.i258.cleanup.sink.split.i.i261_crit_edge, label %if.else120.i.i258.if.then32.i_crit_edge

if.else120.i.i258.if.then32.i_crit_edge:          ; preds = %if.else120.i.i258
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then32.i

if.else120.i.i258.cleanup.sink.split.i.i261_crit_edge: ; preds = %if.else120.i.i258
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i261

cleanup.sink.split.i.i261:                        ; preds = %if.else120.i.i258.cleanup.sink.split.i.i261_crit_edge, %if.then82.i.i254, %if.then26.i.i241
  %conv121.sink.i.i259 = phi i32 [ %conv121.i.i256, %if.else120.i.i258.cleanup.sink.split.i.i261_crit_edge ], [ %spec.select.i.i240, %if.then26.i.i241 ], [ %spec.select193.i.i253, %if.then82.i.i254 ]
  %arrayidx137.i.i260 = getelementptr %union.amdgpu_cac_leakage_entry, ptr %356, i32 %conv121.sink.i.i259
  %375 = ptrtoint ptr %arrayidx137.i.i260 to i32
  call void @__asan_load2_noabort(i32 %375)
  %376 = load i16, ptr %arrayidx137.i.i260, align 4
  br label %if.then32.i

if.then32.i:                                      ; preds = %cleanup.sink.split.i.i261, %if.else120.i.i258.if.then32.i_crit_edge, %for.cond59.i.i245.if.then32.i_crit_edge, %for.cond.preheader.i.i228.if.then32.i_crit_edge, %if.then26.i.if.then32.i_crit_edge
  %std_vddc.0.ph.i262 = phi i16 [ %354, %for.cond.preheader.i.i228.if.then32.i_crit_edge ], [ %354, %if.else120.i.i258.if.then32.i_crit_edge ], [ %376, %cleanup.sink.split.i.i261 ], [ %354, %if.then26.i.if.then32.i_crit_edge ], [ %354, %for.cond59.i.i245.if.then32.i_crit_edge ]
  %index.i263 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12, i32 1
  %377 = ptrtoint ptr %index.i263 to i32
  call void @__asan_load1_noabort(i32 %377)
  %378 = load i8, ptr %index.i263, align 1
  %std_vddc38.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 15
  %index1.i.i264 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 15, i32 1
  %379 = ptrtoint ptr %index1.i.i264 to i32
  call void @__asan_store1_noabort(i32 %379)
  store i8 %378, ptr %index1.i.i264, align 1
  %380 = ptrtoint ptr %std_vddc38.i to i32
  call void @__asan_storeN_noabort(i32 %380, i32 2)
  store i16 %std_vddc.0.ph.i262, ptr %std_vddc38.i, align 1
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.then32.i, %if.then4.i.i226.if.end40.i_crit_edge, %si_populate_voltage_value.exit.i215.if.end40.i_crit_edge
  %acpi_pcie_gen.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 11
  %381 = ptrtoint ptr %acpi_pcie_gen.i to i32
  call void @__asan_load4_noabort(i32 %381)
  %382 = load i32, ptr %acpi_pcie_gen.i, align 4
  %conv41.i = trunc i32 %382 to i8
  %gen2PCIE.i265 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 2
  %383 = ptrtoint ptr %gen2PCIE.i265 to i32
  call void @__asan_store1_noabort(i32 %383)
  store i8 %conv41.i, ptr %gen2PCIE.i265, align 1
  %vddc_phase_shed_control.i266 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 15
  %384 = ptrtoint ptr %vddc_phase_shed_control.i266 to i32
  call void @__asan_load1_noabort(i32 %384)
  %385 = load i8, ptr %vddc_phase_shed_control.i266, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %385)
  %tobool44.not.i = icmp eq i8 %385, 0
  br i1 %tobool44.not.i, label %if.end40.i.if.end94.i_crit_edge, label %if.then45.i

if.end40.i.if.end94.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.i

if.then45.i:                                      ; preds = %if.end40.i
  %phase_shedding_limits_table.i267 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19
  %386 = ptrtoint ptr %acpi_vddc.i to i32
  call void @__asan_load2_noabort(i32 %386)
  %387 = load i16, ptr %acpi_vddc.i, align 4
  %388 = ptrtoint ptr %phase_shedding_limits_table.i267 to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %phase_shedding_limits_table.i267, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %389)
  %cmp1.not.i.i268 = icmp eq i32 %389, 0
  br i1 %cmp1.not.i.i268, label %if.then45.i.if.end94.sink.split.i_crit_edge, label %for.body.lr.ph.i8.i

if.then45.i.if.end94.sink.split.i_crit_edge:      ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.sink.split.i

for.body.lr.ph.i8.i:                              ; preds = %if.then45.i
  %entries.i7.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19, i32 1
  %390 = ptrtoint ptr %entries.i7.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %entries.i7.i, align 4
  br label %for.body.i12.i

for.body.i12.i:                                   ; preds = %for.inc.i15.i.for.body.i12.i_crit_edge, %for.body.lr.ph.i8.i
  %i.02.i9.i = phi i32 [ 0, %for.body.lr.ph.i8.i ], [ %inc.i13.i, %for.inc.i15.i.for.body.i12.i_crit_edge ]
  %arrayidx.i10.i = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %391, i32 %i.02.i9.i
  %392 = ptrtoint ptr %arrayidx.i10.i to i32
  call void @__asan_load2_noabort(i32 %392)
  %393 = load i16, ptr %arrayidx.i10.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %393, i16 %387)
  %cmp3.not.i11.i = icmp ult i16 %393, %387
  br i1 %cmp3.not.i11.i, label %for.inc.i15.i, label %for.body.i12.i.if.end94.sink.split.i_crit_edge

for.body.i12.i.if.end94.sink.split.i_crit_edge:   ; preds = %for.body.i12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.sink.split.i

for.inc.i15.i:                                    ; preds = %for.body.i12.i
  %inc.i13.i = add nuw i32 %i.02.i9.i, 1
  %exitcond.not.i14.i = icmp eq i32 %inc.i13.i, %389
  br i1 %exitcond.not.i14.i, label %for.inc.i15.i.if.end94.sink.split.i_crit_edge, label %for.inc.i15.i.for.body.i12.i_crit_edge

for.inc.i15.i.for.body.i12.i_crit_edge:           ; preds = %for.inc.i15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i12.i

for.inc.i15.i.if.end94.sink.split.i_crit_edge:    ; preds = %for.inc.i15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.sink.split.i

if.else.i269:                                     ; preds = %si_populate_smc_initial_state.exit
  %min_vddc_in_table.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %314, i32 0, i32 26
  %394 = ptrtoint ptr %min_vddc_in_table.i to i32
  call void @__asan_load2_noabort(i32 %394)
  %395 = load i16, ptr %min_vddc_in_table.i, align 4
  %vddc55.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12
  %396 = ptrtoint ptr %vddc_voltage_table52.i to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load i32, ptr %vddc_voltage_table52.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %397)
  %cmp3.not5.i16.i = icmp eq i32 %397, 0
  br i1 %cmp3.not5.i16.i, label %if.else.i269.si_populate_voltage_value.exit30.i_crit_edge, label %if.else.i269.for.body.i20.i270_crit_edge

if.else.i269.for.body.i20.i270_crit_edge:         ; preds = %if.else.i269
  br label %for.body.i20.i270

if.else.i269.si_populate_voltage_value.exit30.i_crit_edge: ; preds = %if.else.i269
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit30.i

for.body.i20.i270:                                ; preds = %for.inc.i26.i.for.body.i20.i270_crit_edge, %if.else.i269.for.body.i20.i270_crit_edge
  %i.04.i17.i = phi i32 [ %inc.i24.i, %for.inc.i26.i.for.body.i20.i270_crit_edge ], [ 0, %if.else.i269.for.body.i20.i270_crit_edge ]
  %arrayidx.i18.i = getelementptr %struct.evergreen_power_info, ptr %314, i32 0, i32 19, i32 3, i32 %i.04.i17.i
  %398 = ptrtoint ptr %arrayidx.i18.i to i32
  call void @__asan_load2_noabort(i32 %398)
  %399 = load i16, ptr %arrayidx.i18.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %399, i16 %395)
  %cmp3.not.i19.i = icmp ult i16 %399, %395
  br i1 %cmp3.not.i19.i, label %for.inc.i26.i, label %if.then.i23.i

if.then.i23.i:                                    ; preds = %for.body.i20.i270
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i21.i = trunc i32 %i.04.i17.i to i8
  %index.i22.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12, i32 1
  %400 = ptrtoint ptr %index.i22.i to i32
  call void @__asan_store1_noabort(i32 %400)
  store i8 %conv5.i21.i, ptr %index.i22.i, align 1
  %401 = ptrtoint ptr %arrayidx.i18.i to i32
  call void @__asan_load2_noabort(i32 %401)
  %402 = load i16, ptr %arrayidx.i18.i, align 4
  %403 = ptrtoint ptr %vddc55.i to i32
  call void @__asan_storeN_noabort(i32 %403, i32 2)
  store i16 %402, ptr %vddc55.i, align 1
  br label %si_populate_voltage_value.exit30.i

for.inc.i26.i:                                    ; preds = %for.body.i20.i270
  %inc.i24.i = add nuw i32 %i.04.i17.i, 1
  %exitcond.not.i25.i = icmp eq i32 %inc.i24.i, %397
  br i1 %exitcond.not.i25.i, label %for.inc.i26.i.si_populate_voltage_value.exit30.i_crit_edge, label %for.inc.i26.i.for.body.i20.i270_crit_edge

for.inc.i26.i.for.body.i20.i270_crit_edge:        ; preds = %for.inc.i26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i20.i270

for.inc.i26.i.si_populate_voltage_value.exit30.i_crit_edge: ; preds = %for.inc.i26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_voltage_value.exit30.i

si_populate_voltage_value.exit30.i:               ; preds = %for.inc.i26.i.si_populate_voltage_value.exit30.i_crit_edge, %if.then.i23.i, %if.else.i269.si_populate_voltage_value.exit30.i_crit_edge
  %i.02.i27.i = phi i32 [ %i.04.i17.i, %if.then.i23.i ], [ 0, %if.else.i269.si_populate_voltage_value.exit30.i_crit_edge ], [ %397, %for.inc.i26.i.si_populate_voltage_value.exit30.i_crit_edge ]
  %404 = ptrtoint ptr %vddc_voltage_table52.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %vddc_voltage_table52.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.02.i27.i, i32 %405)
  %cmp11.not.i28.i = icmp ult i32 %i.02.i27.i, %405
  br i1 %cmp11.not.i28.i, label %if.then58.i, label %si_populate_voltage_value.exit30.i.if.end75.i_crit_edge

si_populate_voltage_value.exit30.i.if.end75.i_crit_edge: ; preds = %si_populate_voltage_value.exit30.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75.i

if.then58.i:                                      ; preds = %si_populate_voltage_value.exit30.i
  %406 = ptrtoint ptr %vddc55.i to i32
  call void @__asan_loadN_noabort(i32 %406, i32 2)
  %407 = load i16, ptr %vddc55.i, align 1
  %dyn_state.i31.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21
  %cac_leakage_table.i32.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18
  %entries.i33.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18, i32 1
  %408 = ptrtoint ptr %entries.i33.i to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %entries.i33.i, align 4
  %tobool.not.i34.i = icmp eq ptr %409, null
  br i1 %tobool.not.i34.i, label %if.then58.i.if.then65.i_crit_edge, label %if.then.i38.i

if.then58.i.if.then65.i_crit_edge:                ; preds = %if.then58.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then65.i

if.then.i38.i:                                    ; preds = %if.then58.i
  %410 = ptrtoint ptr %platform_caps to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load i32, ptr %platform_caps, align 4
  %and.i36.i = and i32 %411, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i36.i)
  %tobool3.not.i37.i = icmp eq i32 %and.i36.i, 0
  br i1 %tobool3.not.i37.i, label %if.else120.i75.i, label %if.then4.i41.i

if.then4.i41.i:                                   ; preds = %if.then.i38.i
  %entries8.i39.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 0, i32 1
  %412 = ptrtoint ptr %entries8.i39.i to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load ptr, ptr %entries8.i39.i, align 4
  %cmp.i40.i = icmp eq ptr %413, null
  br i1 %cmp.i40.i, label %if.then4.i41.i.if.end75.i_crit_edge, label %for.cond.preheader.i43.i

if.then4.i41.i.if.end75.i_crit_edge:              ; preds = %if.then4.i41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75.i

for.cond.preheader.i43.i:                         ; preds = %if.then4.i41.i
  %414 = ptrtoint ptr %dyn_state.i31.i to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load i32, ptr %dyn_state.i31.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %415)
  %cmp14183.not.i42.i = icmp eq i32 %415, 0
  br i1 %cmp14183.not.i42.i, label %for.cond.preheader.i43.i.if.then65.i_crit_edge, label %for.cond.preheader.i43.i.for.body.i54.i_crit_edge

for.cond.preheader.i43.i.for.body.i54.i_crit_edge: ; preds = %for.cond.preheader.i43.i
  br label %for.body.i54.i

for.cond.preheader.i43.i.if.then65.i_crit_edge:   ; preds = %for.cond.preheader.i43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then65.i

for.cond.i48.i:                                   ; preds = %for.body.i54.i
  %inc.i45.i = add i16 %v_index.0184.i51.i, 1
  %conv.i46.i = zext i16 %inc.i45.i to i32
  %cmp14.i47.i = icmp ugt i32 %415, %conv.i46.i
  br i1 %cmp14.i47.i, label %for.cond.i48.i.for.body.i54.i_crit_edge, label %for.cond.i48.i.for.body68.i67.i_crit_edge

for.cond.i48.i.for.body68.i67.i_crit_edge:        ; preds = %for.cond.i48.i
  br label %for.body68.i67.i

for.cond.i48.i.for.body.i54.i_crit_edge:          ; preds = %for.cond.i48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i54.i

for.body.i54.i:                                   ; preds = %for.cond.i48.i.for.body.i54.i_crit_edge, %for.cond.preheader.i43.i.for.body.i54.i_crit_edge
  %conv185.i50.i = phi i32 [ %conv.i46.i, %for.cond.i48.i.for.body.i54.i_crit_edge ], [ 0, %for.cond.preheader.i43.i.for.body.i54.i_crit_edge ]
  %v_index.0184.i51.i = phi i16 [ %inc.i45.i, %for.cond.i48.i.for.body.i54.i_crit_edge ], [ 0, %for.cond.preheader.i43.i.for.body.i54.i_crit_edge ]
  %v.i52.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %413, i32 %conv185.i50.i, i32 1
  %416 = ptrtoint ptr %v.i52.i to i32
  call void @__asan_load2_noabort(i32 %416)
  %417 = load i16, ptr %v.i52.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %407, i16 %417)
  %cmp24.i53.i = icmp eq i16 %407, %417
  br i1 %cmp24.i53.i, label %if.then26.i58.i, label %for.cond.i48.i

if.then26.i58.i:                                  ; preds = %for.body.i54.i
  call void @__sanitizer_cov_trace_pc() #16
  %418 = ptrtoint ptr %cac_leakage_table.i32.i to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load i32, ptr %cac_leakage_table.i32.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %419, i32 %conv185.i50.i)
  %cmp33.i55.i = icmp ugt i32 %419, %conv185.i50.i
  %sub.i56.i = add i32 %419, -1
  %spec.select.i57.i = select i1 %cmp33.i55.i, i32 %conv185.i50.i, i32 %sub.i56.i
  br label %cleanup.sink.split.i78.i

for.cond59.i62.i:                                 ; preds = %for.body68.i67.i
  %inc117.i59.i = add i16 %v_index.1187.i64.i, 1
  %conv60.i60.i = zext i16 %inc117.i59.i to i32
  %cmp66.i61.i = icmp ugt i32 %415, %conv60.i60.i
  br i1 %cmp66.i61.i, label %for.cond59.i62.i.for.body68.i67.i_crit_edge, label %for.cond59.i62.i.if.then65.i_crit_edge

for.cond59.i62.i.if.then65.i_crit_edge:           ; preds = %for.cond59.i62.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then65.i

for.cond59.i62.i.for.body68.i67.i_crit_edge:      ; preds = %for.cond59.i62.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body68.i67.i

for.body68.i67.i:                                 ; preds = %for.cond59.i62.i.for.body68.i67.i_crit_edge, %for.cond.i48.i.for.body68.i67.i_crit_edge
  %conv60188.i63.i = phi i32 [ %conv60.i60.i, %for.cond59.i62.i.for.body68.i67.i_crit_edge ], [ 0, %for.cond.i48.i.for.body68.i67.i_crit_edge ]
  %v_index.1187.i64.i = phi i16 [ %inc117.i59.i, %for.cond59.i62.i.for.body68.i67.i_crit_edge ], [ 0, %for.cond.i48.i.for.body68.i67.i_crit_edge ]
  %v78.i65.i = getelementptr %struct.amdgpu_clock_voltage_dependency_entry, ptr %413, i32 %conv60188.i63.i, i32 1
  %420 = ptrtoint ptr %v78.i65.i to i32
  call void @__asan_load2_noabort(i32 %420)
  %421 = load i16, ptr %v78.i65.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %407, i16 %421)
  %cmp80.not.i66.i = icmp ugt i16 %407, %421
  br i1 %cmp80.not.i66.i, label %for.cond59.i62.i, label %if.then82.i71.i

if.then82.i71.i:                                  ; preds = %for.body68.i67.i
  call void @__sanitizer_cov_trace_pc() #16
  %422 = ptrtoint ptr %cac_leakage_table.i32.i to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load i32, ptr %cac_leakage_table.i32.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %423, i32 %conv60188.i63.i)
  %cmp89.i68.i = icmp ugt i32 %423, %conv60188.i63.i
  %sub111.i69.i = add i32 %423, -1
  %spec.select193.i70.i = select i1 %cmp89.i68.i, i32 %conv60188.i63.i, i32 %sub111.i69.i
  br label %cleanup.sink.split.i78.i

if.else120.i75.i:                                 ; preds = %if.then.i38.i
  %index.i72.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12, i32 1
  %424 = ptrtoint ptr %index.i72.i to i32
  call void @__asan_load1_noabort(i32 %424)
  %425 = load i8, ptr %index.i72.i, align 1
  %conv121.i73.i = zext i8 %425 to i32
  %426 = ptrtoint ptr %cac_leakage_table.i32.i to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load i32, ptr %cac_leakage_table.i32.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %427, i32 %conv121.i73.i)
  %cmp127.i74.i = icmp ugt i32 %427, %conv121.i73.i
  br i1 %cmp127.i74.i, label %if.else120.i75.i.cleanup.sink.split.i78.i_crit_edge, label %if.else120.i75.i.if.then65.i_crit_edge

if.else120.i75.i.if.then65.i_crit_edge:           ; preds = %if.else120.i75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then65.i

if.else120.i75.i.cleanup.sink.split.i78.i_crit_edge: ; preds = %if.else120.i75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i78.i

cleanup.sink.split.i78.i:                         ; preds = %if.else120.i75.i.cleanup.sink.split.i78.i_crit_edge, %if.then82.i71.i, %if.then26.i58.i
  %conv121.sink.i76.i = phi i32 [ %conv121.i73.i, %if.else120.i75.i.cleanup.sink.split.i78.i_crit_edge ], [ %spec.select.i57.i, %if.then26.i58.i ], [ %spec.select193.i70.i, %if.then82.i71.i ]
  %arrayidx137.i77.i = getelementptr %union.amdgpu_cac_leakage_entry, ptr %409, i32 %conv121.sink.i76.i
  %428 = ptrtoint ptr %arrayidx137.i77.i to i32
  call void @__asan_load2_noabort(i32 %428)
  %429 = load i16, ptr %arrayidx137.i77.i, align 4
  br label %if.then65.i

if.then65.i:                                      ; preds = %cleanup.sink.split.i78.i, %if.else120.i75.i.if.then65.i_crit_edge, %for.cond59.i62.i.if.then65.i_crit_edge, %for.cond.preheader.i43.i.if.then65.i_crit_edge, %if.then58.i.if.then65.i_crit_edge
  %std_vddc59.0.ph.i = phi i16 [ %407, %for.cond.preheader.i43.i.if.then65.i_crit_edge ], [ %407, %if.else120.i75.i.if.then65.i_crit_edge ], [ %429, %cleanup.sink.split.i78.i ], [ %407, %if.then58.i.if.then65.i_crit_edge ], [ %407, %for.cond59.i62.i.if.then65.i_crit_edge ]
  %index69.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12, i32 1
  %430 = ptrtoint ptr %index69.i to i32
  call void @__asan_load1_noabort(i32 %430)
  %431 = load i8, ptr %index69.i, align 1
  %std_vddc72.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 15
  %index1.i81.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 15, i32 1
  %432 = ptrtoint ptr %index1.i81.i to i32
  call void @__asan_store1_noabort(i32 %432)
  store i8 %431, ptr %index1.i81.i, align 1
  %433 = ptrtoint ptr %std_vddc72.i to i32
  call void @__asan_storeN_noabort(i32 %433, i32 2)
  store i16 %std_vddc59.0.ph.i, ptr %std_vddc72.i, align 1
  br label %if.end75.i

if.end75.i:                                       ; preds = %if.then65.i, %if.then4.i41.i.if.end75.i_crit_edge, %si_populate_voltage_value.exit30.i.if.end75.i_crit_edge
  %sys_pcie_mask.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 12
  %434 = ptrtoint ptr %sys_pcie_mask.i to i32
  call void @__asan_load4_noabort(i32 %434)
  %435 = load i32, ptr %sys_pcie_mask.i, align 4
  %boot_pcie_gen.i271 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 10
  %436 = ptrtoint ptr %boot_pcie_gen.i271 to i32
  call void @__asan_load4_noabort(i32 %436)
  %437 = load i32, ptr %boot_pcie_gen.i271, align 4
  %call76.i = tail call i32 @amdgpu_get_pcie_gen_support(ptr noundef %adev, i32 noundef %435, i32 noundef %437, i32 noundef 0) #14
  %conv77.i = trunc i32 %call76.i to i8
  %gen2PCIE80.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 2
  %438 = ptrtoint ptr %gen2PCIE80.i to i32
  call void @__asan_store1_noabort(i32 %438)
  store i8 %conv77.i, ptr %gen2PCIE80.i, align 1
  %vddc_phase_shed_control81.i = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 15
  %439 = ptrtoint ptr %vddc_phase_shed_control81.i to i32
  call void @__asan_load1_noabort(i32 %439)
  %440 = load i8, ptr %vddc_phase_shed_control81.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %440)
  %tobool82.not.i = icmp eq i8 %440, 0
  br i1 %tobool82.not.i, label %if.end75.i.if.end94.i_crit_edge, label %if.then83.i

if.end75.i.if.end94.i_crit_edge:                  ; preds = %if.end75.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.i

if.then83.i:                                      ; preds = %if.end75.i
  %phase_shedding_limits_table87.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19
  %441 = ptrtoint ptr %min_vddc_in_table.i to i32
  call void @__asan_load2_noabort(i32 %441)
  %442 = load i16, ptr %min_vddc_in_table.i, align 4
  %443 = ptrtoint ptr %phase_shedding_limits_table87.i to i32
  call void @__asan_load4_noabort(i32 %443)
  %444 = load i32, ptr %phase_shedding_limits_table87.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %444)
  %cmp1.not.i82.i = icmp eq i32 %444, 0
  br i1 %cmp1.not.i82.i, label %if.then83.i.if.end94.sink.split.i_crit_edge, label %for.body.lr.ph.i84.i

if.then83.i.if.end94.sink.split.i_crit_edge:      ; preds = %if.then83.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.sink.split.i

for.body.lr.ph.i84.i:                             ; preds = %if.then83.i
  %entries.i83.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 19, i32 1
  %445 = ptrtoint ptr %entries.i83.i to i32
  call void @__asan_load4_noabort(i32 %445)
  %446 = load ptr, ptr %entries.i83.i, align 4
  br label %for.body.i88.i

for.body.i88.i:                                   ; preds = %for.inc.i94.i.for.body.i88.i_crit_edge, %for.body.lr.ph.i84.i
  %i.02.i85.i = phi i32 [ 0, %for.body.lr.ph.i84.i ], [ %inc.i92.i, %for.inc.i94.i.for.body.i88.i_crit_edge ]
  %arrayidx.i86.i = getelementptr %struct.amdgpu_phase_shedding_limits_entry, ptr %446, i32 %i.02.i85.i
  %447 = ptrtoint ptr %arrayidx.i86.i to i32
  call void @__asan_load2_noabort(i32 %447)
  %448 = load i16, ptr %arrayidx.i86.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %448, i16 %442)
  %cmp3.not.i87.i = icmp ult i16 %448, %442
  br i1 %cmp3.not.i87.i, label %for.inc.i94.i, label %for.body.i88.i.if.end94.sink.split.i_crit_edge

for.body.i88.i.if.end94.sink.split.i_crit_edge:   ; preds = %for.body.i88.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.sink.split.i

for.inc.i94.i:                                    ; preds = %for.body.i88.i
  %inc.i92.i = add nuw i32 %i.02.i85.i, 1
  %exitcond.not.i93.i = icmp eq i32 %inc.i92.i, %444
  br i1 %exitcond.not.i93.i, label %for.inc.i94.i.if.end94.sink.split.i_crit_edge, label %for.inc.i94.i.for.body.i88.i_crit_edge

for.inc.i94.i.for.body.i88.i_crit_edge:           ; preds = %for.inc.i94.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i88.i

for.inc.i94.i.if.end94.sink.split.i_crit_edge:    ; preds = %for.inc.i94.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end94.sink.split.i

if.end94.sink.split.i:                            ; preds = %for.inc.i94.i.if.end94.sink.split.i_crit_edge, %for.body.i88.i.if.end94.sink.split.i_crit_edge, %if.then83.i.if.end94.sink.split.i_crit_edge, %for.inc.i15.i.if.end94.sink.split.i_crit_edge, %for.body.i12.i.if.end94.sink.split.i_crit_edge, %if.then45.i.if.end94.sink.split.i_crit_edge
  %i.0.lcssa.i95.sink.i = phi i32 [ 0, %if.then45.i.if.end94.sink.split.i_crit_edge ], [ 0, %if.then83.i.if.end94.sink.split.i_crit_edge ], [ %444, %for.inc.i94.i.if.end94.sink.split.i_crit_edge ], [ %i.02.i85.i, %for.body.i88.i.if.end94.sink.split.i_crit_edge ], [ %389, %for.inc.i15.i.if.end94.sink.split.i_crit_edge ], [ %i.02.i9.i, %for.body.i12.i.if.end94.sink.split.i_crit_edge ]
  %conv16.i96.i = trunc i32 %i.0.lcssa.i95.sink.i to i8
  %phase_settings.i97.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 12, i32 2
  %449 = ptrtoint ptr %phase_settings.i97.i to i32
  call void @__asan_store1_noabort(i32 %449)
  store i8 %conv16.i96.i, ptr %phase_settings.i97.i, align 1
  br label %if.end94.i

if.end94.i:                                       ; preds = %if.end94.sink.split.i, %if.end75.i.if.end94.i_crit_edge, %if.end40.i.if.end94.i_crit_edge
  %450 = ptrtoint ptr %acpi_vddc.i to i32
  call void @__asan_load2_noabort(i32 %450)
  %451 = load i16, ptr %acpi_vddc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %451)
  %tobool96.not.i = icmp eq i16 %451, 0
  br i1 %tobool96.not.i, label %if.end94.i.if.end105.i_crit_edge, label %if.then97.i

if.end94.i.if.end105.i_crit_edge:                 ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end105.i

if.then97.i:                                      ; preds = %if.end94.i
  %acpi_vddci.i = getelementptr inbounds %struct.evergreen_power_info, ptr %314, i32 0, i32 14
  %452 = ptrtoint ptr %acpi_vddci.i to i32
  call void @__asan_load2_noabort(i32 %452)
  %453 = load i16, ptr %acpi_vddci.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %453)
  %tobool98.not.i = icmp eq i16 %453, 0
  br i1 %tobool98.not.i, label %if.then97.i.if.end105.i_crit_edge, label %if.then99.i

if.then97.i.if.end105.i_crit_edge:                ; preds = %if.then97.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end105.i

if.then99.i:                                      ; preds = %if.then97.i
  %vddci_voltage_table.i272 = getelementptr inbounds %struct.evergreen_power_info, ptr %314, i32 0, i32 20
  %vddci.i273 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 14
  %454 = ptrtoint ptr %vddci_voltage_table.i272 to i32
  call void @__asan_load4_noabort(i32 %454)
  %455 = load i32, ptr %vddci_voltage_table.i272, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %455)
  %cmp3.not5.i99.i = icmp eq i32 %455, 0
  br i1 %cmp3.not5.i99.i, label %if.then99.i.if.end105.i_crit_edge, label %if.then99.i.for.body.i103.i_crit_edge

if.then99.i.for.body.i103.i_crit_edge:            ; preds = %if.then99.i
  br label %for.body.i103.i

if.then99.i.if.end105.i_crit_edge:                ; preds = %if.then99.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end105.i

for.body.i103.i:                                  ; preds = %for.inc.i109.i.for.body.i103.i_crit_edge, %if.then99.i.for.body.i103.i_crit_edge
  %i.04.i100.i = phi i32 [ %inc.i107.i, %for.inc.i109.i.for.body.i103.i_crit_edge ], [ 0, %if.then99.i.for.body.i103.i_crit_edge ]
  %arrayidx.i101.i = getelementptr %struct.evergreen_power_info, ptr %314, i32 0, i32 20, i32 3, i32 %i.04.i100.i
  %456 = ptrtoint ptr %arrayidx.i101.i to i32
  call void @__asan_load2_noabort(i32 %456)
  %457 = load i16, ptr %arrayidx.i101.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %457, i16 %453)
  %cmp3.not.i102.i = icmp ult i16 %457, %453
  br i1 %cmp3.not.i102.i, label %for.inc.i109.i, label %if.then.i106.i

if.then.i106.i:                                   ; preds = %for.body.i103.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv5.i104.i = trunc i32 %i.04.i100.i to i8
  %index.i105.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 14, i32 1
  %458 = ptrtoint ptr %index.i105.i to i32
  call void @__asan_store1_noabort(i32 %458)
  store i8 %conv5.i104.i, ptr %index.i105.i, align 1
  %459 = ptrtoint ptr %arrayidx.i101.i to i32
  call void @__asan_load2_noabort(i32 %459)
  %460 = load i16, ptr %arrayidx.i101.i, align 4
  %461 = ptrtoint ptr %vddci.i273 to i32
  call void @__asan_storeN_noabort(i32 %461, i32 2)
  store i16 %460, ptr %vddci.i273, align 1
  br label %if.end105.i

for.inc.i109.i:                                   ; preds = %for.body.i103.i
  %inc.i107.i = add nuw i32 %i.04.i100.i, 1
  %exitcond.not.i108.i = icmp eq i32 %inc.i107.i, %455
  br i1 %exitcond.not.i108.i, label %for.inc.i109.i.if.end105.i_crit_edge, label %for.inc.i109.i.for.body.i103.i_crit_edge

for.inc.i109.i.for.body.i103.i_crit_edge:         ; preds = %for.inc.i109.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i103.i

for.inc.i109.i.if.end105.i_crit_edge:             ; preds = %for.inc.i109.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end105.i

if.end105.i:                                      ; preds = %for.inc.i109.i.if.end105.i_crit_edge, %if.then.i106.i, %if.then99.i.if.end105.i_crit_edge, %if.then97.i.if.end105.i_crit_edge, %if.end94.i.if.end105.i_crit_edge
  %or.i = and i32 %326, -197377
  %and106.i = or i32 %or.i, 196608
  %and107.i = and i32 %324, -50331649
  %and108.i = and i32 %318, -512
  %or109.i = or i32 %and108.i, 4
  %mclk.i274 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11
  %vDLL_CNTL.i275 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 6
  %462 = ptrtoint ptr %vDLL_CNTL.i275 to i32
  call void @__asan_storeN_noabort(i32 %462, i32 4)
  store i32 %and107.i, ptr %vDLL_CNTL.i275, align 1
  %vMCLK_PWRMGT_CNTL.i276 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 5
  %463 = ptrtoint ptr %vMCLK_PWRMGT_CNTL.i276 to i32
  call void @__asan_storeN_noabort(i32 %463, i32 4)
  store i32 %and106.i, ptr %vMCLK_PWRMGT_CNTL.i276, align 1
  %vMPLL_AD_FUNC_CNTL.i277 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 3
  %464 = ptrtoint ptr %vMPLL_AD_FUNC_CNTL.i277 to i32
  call void @__asan_storeN_noabort(i32 %464, i32 4)
  store i32 %328, ptr %vMPLL_AD_FUNC_CNTL.i277, align 1
  %vMPLL_DQ_FUNC_CNTL.i278 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 4
  %465 = ptrtoint ptr %vMPLL_DQ_FUNC_CNTL.i278 to i32
  call void @__asan_storeN_noabort(i32 %465, i32 4)
  store i32 %330, ptr %vMPLL_DQ_FUNC_CNTL.i278, align 1
  %466 = ptrtoint ptr %mclk.i274 to i32
  call void @__asan_storeN_noabort(i32 %466, i32 4)
  store i32 %332, ptr %mclk.i274, align 1
  %vMPLL_FUNC_CNTL_1.i279 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 1
  %467 = ptrtoint ptr %vMPLL_FUNC_CNTL_1.i279 to i32
  call void @__asan_storeN_noabort(i32 %467, i32 4)
  store i32 %334, ptr %vMPLL_FUNC_CNTL_1.i279, align 1
  %vMPLL_FUNC_CNTL_2.i280 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 2
  %468 = ptrtoint ptr %vMPLL_FUNC_CNTL_2.i280 to i32
  call void @__asan_storeN_noabort(i32 %468, i32 4)
  store i32 %336, ptr %vMPLL_FUNC_CNTL_2.i280, align 1
  %mpll_ss1.i281 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 13
  %469 = ptrtoint ptr %mpll_ss1.i281 to i32
  call void @__asan_load4_noabort(i32 %469)
  %470 = load i32, ptr %mpll_ss1.i281, align 4
  %vMPLL_SS.i282 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 7
  %471 = ptrtoint ptr %vMPLL_SS.i282 to i32
  call void @__asan_storeN_noabort(i32 %471, i32 4)
  store i32 %470, ptr %vMPLL_SS.i282, align 1
  %mpll_ss2.i283 = getelementptr inbounds %struct.si_power_info, ptr %314, i32 0, i32 1, i32 14
  %472 = ptrtoint ptr %mpll_ss2.i283 to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %mpll_ss2.i283, align 4
  %vMPLL_SS2.i284 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 8
  %474 = ptrtoint ptr %vMPLL_SS2.i284 to i32
  call void @__asan_storeN_noabort(i32 %474, i32 4)
  store i32 %473, ptr %vMPLL_SS2.i284, align 1
  %sclk.i285 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 10
  %475 = ptrtoint ptr %sclk.i285 to i32
  call void @__asan_storeN_noabort(i32 %475, i32 4)
  store i32 %316, ptr %sclk.i285, align 1
  %vCG_SPLL_FUNC_CNTL_2.i286 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 10, i32 1
  %476 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_2.i286 to i32
  call void @__asan_storeN_noabort(i32 %476, i32 4)
  store i32 %or109.i, ptr %vCG_SPLL_FUNC_CNTL_2.i286, align 1
  %vCG_SPLL_FUNC_CNTL_3.i287 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 10, i32 2
  %477 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_3.i287 to i32
  call void @__asan_storeN_noabort(i32 %477, i32 4)
  store i32 %320, ptr %vCG_SPLL_FUNC_CNTL_3.i287, align 1
  %vCG_SPLL_FUNC_CNTL_4.i288 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 10, i32 3
  %478 = ptrtoint ptr %vCG_SPLL_FUNC_CNTL_4.i288 to i32
  call void @__asan_storeN_noabort(i32 %478, i32 4)
  store i32 %322, ptr %vCG_SPLL_FUNC_CNTL_4.i288, align 1
  %mclk_value.i289 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 11, i32 9
  %479 = ptrtoint ptr %mclk_value.i289 to i32
  call void @__asan_storeN_noabort(i32 %479, i32 4)
  store i32 0, ptr %mclk_value.i289, align 1
  %sclk_value.i290 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 10, i32 6
  %480 = ptrtoint ptr %sclk_value.i290 to i32
  call void @__asan_storeN_noabort(i32 %480, i32 4)
  store i32 0, ptr %sclk_value.i290, align 1
  %481 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load ptr, ptr %priv.i, align 4
  %mvdd_control.i.i291 = getelementptr inbounds %struct.rv7xx_power_info, ptr %482, i32 0, i32 6
  %483 = ptrtoint ptr %mvdd_control.i.i291 to i32
  call void @__asan_load1_noabort(i32 %483)
  %484 = load i8, ptr %mvdd_control.i.i291, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %484)
  %tobool.not.i114.i = icmp eq i8 %484, 0
  br i1 %tobool.not.i114.i, label %if.end105.i.si_populate_mvdd_value.exit.i_crit_edge, label %if.then.i115.i

if.end105.i.si_populate_mvdd_value.exit.i_crit_edge: ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_mvdd_value.exit.i

if.then.i115.i:                                   ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #16
  %mvdd.i292 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 13
  %485 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 13, i32 1
  %486 = ptrtoint ptr %485 to i32
  call void @__asan_store1_noabort(i32 %486)
  store i8 0, ptr %485, align 1
  %arrayidx.i116.i = getelementptr %struct.si_power_info, ptr %482, i32 0, i32 3, i32 3, i32 0
  %487 = ptrtoint ptr %arrayidx.i116.i to i32
  call void @__asan_load2_noabort(i32 %487)
  %488 = load i16, ptr %arrayidx.i116.i, align 4
  %489 = ptrtoint ptr %mvdd.i292 to i32
  call void @__asan_storeN_noabort(i32 %489, i32 2)
  store i16 %488, ptr %mvdd.i292, align 1
  br label %si_populate_mvdd_value.exit.i

si_populate_mvdd_value.exit.i:                    ; preds = %if.then.i115.i, %if.end105.i.si_populate_mvdd_value.exit.i_crit_edge
  %dynamic_ac_timing.i = getelementptr inbounds %struct.evergreen_power_info, ptr %314, i32 0, i32 2
  %490 = ptrtoint ptr %dynamic_ac_timing.i to i32
  call void @__asan_load1_noabort(i32 %490)
  %491 = load i8, ptr %dynamic_ac_timing.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %491)
  %tobool158.not.i = icmp eq i8 %491, 0
  br i1 %tobool158.not.i, label %si_populate_mvdd_value.exit.i.si_populate_smc_acpi_state.exit_crit_edge, label %if.then159.i

si_populate_mvdd_value.exit.i.si_populate_smc_acpi_state.exit_crit_edge: ; preds = %si_populate_mvdd_value.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_smc_acpi_state.exit

if.then159.i:                                     ; preds = %si_populate_mvdd_value.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %level111.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4
  %492 = ptrtoint ptr %level111.i to i32
  call void @__asan_store1_noabort(i32 %492)
  store i8 0, ptr %level111.i, align 1
  br label %si_populate_smc_acpi_state.exit

si_populate_smc_acpi_state.exit:                  ; preds = %if.then159.i, %si_populate_mvdd_value.exit.i.si_populate_smc_acpi_state.exit_crit_edge
  %dpm2.i293 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 26
  %493 = ptrtoint ptr %dpm2.i293 to i32
  call void @__asan_store1_noabort(i32 %493)
  store i8 0, ptr %dpm2.i293, align 1
  %NearTDPDec.i294 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 26, i32 5
  %494 = ptrtoint ptr %NearTDPDec.i294 to i32
  call void @__asan_store1_noabort(i32 %494)
  store i8 0, ptr %NearTDPDec.i294, align 1
  %AboveSafeInc.i295 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 26, i32 6
  %495 = ptrtoint ptr %AboveSafeInc.i295 to i32
  call void @__asan_store1_noabort(i32 %495)
  store i8 0, ptr %AboveSafeInc.i295, align 1
  %BelowSafeInc.i296 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 26, i32 7
  %496 = ptrtoint ptr %BelowSafeInc.i296 to i32
  call void @__asan_store1_noabort(i32 %496)
  store i8 0, ptr %BelowSafeInc.i296, align 1
  %PwrEfficiencyRatio.i297 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 26, i32 10
  %497 = ptrtoint ptr %PwrEfficiencyRatio.i297 to i32
  call void @__asan_storeN_noabort(i32 %497, i32 2)
  store i16 0, ptr %PwrEfficiencyRatio.i297, align 1
  %SQPowerThrottle.i298 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 20
  %498 = ptrtoint ptr %SQPowerThrottle.i298 to i32
  call void @__asan_storeN_noabort(i32 %498, i32 4)
  store i32 1073692671, ptr %SQPowerThrottle.i298, align 1
  %SQPowerThrottle_2.i299 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 9, i32 4, i32 21
  %499 = ptrtoint ptr %SQPowerThrottle_2.i299 to i32
  call void @__asan_storeN_noabort(i32 %499, i32 4)
  store i32 2080325631, ptr %SQPowerThrottle_2.i299, align 1
  %500 = ptrtoint ptr %initialState.i to i32
  call void @__asan_load1_noabort(i32 %500)
  %501 = load i8, ptr %initialState.i, align 1
  %driverState = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11
  %502 = ptrtoint ptr %driverState to i32
  call void @__asan_store1_noabort(i32 %502)
  store i8 %501, ptr %driverState, align 1
  %503 = ptrtoint ptr %levelCount.i to i32
  call void @__asan_load1_noabort(i32 %503)
  %504 = load i8, ptr %levelCount.i, align 1
  %levelCount84 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 11, i32 1
  %505 = ptrtoint ptr %levelCount84 to i32
  call void @__asan_store1_noabort(i32 %505)
  store i8 %504, ptr %levelCount84, align 1
  %levels = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 12
  %506 = call ptr @memcpy(ptr %levels, ptr %level.i, i32 148)
  %call87 = tail call fastcc i32 @si_do_program_memory_timing_parameters(ptr noundef %adev, ptr noundef %3, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call87)
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %if.end90, label %si_populate_smc_acpi_state.exit.cleanup_crit_edge

si_populate_smc_acpi_state.exit.cleanup_crit_edge: ; preds = %si_populate_smc_acpi_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end90:                                         ; preds = %si_populate_smc_acpi_state.exit
  %507 = ptrtoint ptr %ulv1 to i32
  call void @__asan_load1_noabort(i32 %507)
  %508 = load i8, ptr %ulv1, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %508)
  %tobool91.not = icmp eq i8 %508, 0
  br i1 %tobool91.not, label %if.end90.if.else_crit_edge, label %land.lhs.true93

if.end90.if.else_crit_edge:                       ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true93:                                  ; preds = %if.end90
  %vddc = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7, i32 4, i32 2
  %509 = ptrtoint ptr %vddc to i32
  call void @__asan_load2_noabort(i32 %509)
  %510 = load i16, ptr %vddc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %510)
  %tobool95.not = icmp eq i16 %510, 0
  br i1 %tobool95.not, label %land.lhs.true93.if.else_crit_edge, label %if.then96

land.lhs.true93.if.else_crit_edge:                ; preds = %land.lhs.true93
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then96:                                        ; preds = %land.lhs.true93
  %ULVState = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10
  %511 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %511)
  %512 = load ptr, ptr %priv.i, align 4
  %pl.i = getelementptr inbounds %struct.si_power_info, ptr %512, i32 0, i32 7, i32 4
  %level.i301 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4
  %call3.i = tail call fastcc i32 @si_convert_power_level_to_smc(ptr noundef %adev, ptr noundef %pl.i, ptr noundef %level.i301) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool.not.i302 = icmp eq i32 %call3.i, 0
  br i1 %tobool.not.i302, label %if.then.i303, label %if.then96.cleanup_crit_edge

if.then96.cleanup_crit_edge:                      ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i303:                                     ; preds = %if.then96
  %sclk_deep_sleep.i = getelementptr inbounds %struct.evergreen_power_info, ptr %512, i32 0, i32 9
  %513 = ptrtoint ptr %sclk_deep_sleep.i to i32
  call void @__asan_load1_noabort(i32 %513)
  %514 = load i8, ptr %sclk_deep_sleep.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %514)
  %tobool4.not.i = icmp eq i8 %514, 0
  br i1 %tobool4.not.i, label %if.then.i303.if.end14.i_crit_edge, label %if.then6.i

if.then.i303.if.end14.i_crit_edge:                ; preds = %if.then.i303
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i

if.then6.i:                                       ; preds = %if.then.i303
  call void @__sanitizer_cov_trace_pc() #16
  %stateFlags.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 18
  %515 = ptrtoint ptr %stateFlags.i to i32
  call void @__asan_load1_noabort(i32 %515)
  %516 = load i8, ptr %stateFlags.i, align 1
  %517 = or i8 %516, 64
  store i8 %517, ptr %stateFlags.i, align 1
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then6.i, %if.then.i303.if.end14.i_crit_edge
  %one_pcie_lane_in_ulv.i = getelementptr inbounds %struct.si_power_info, ptr %512, i32 0, i32 7, i32 5
  %518 = ptrtoint ptr %one_pcie_lane_in_ulv.i to i32
  call void @__asan_load1_noabort(i32 %518)
  %519 = load i8, ptr %one_pcie_lane_in_ulv.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %519)
  %tobool15.not.i = icmp eq i8 %519, 0
  br i1 %tobool15.not.i, label %if.end14.i.if.end100_crit_edge, label %if.then16.i

if.end14.i.if.end100_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end100

if.then16.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  %520 = ptrtoint ptr %ULVState to i32
  call void @__asan_load1_noabort(i32 %520)
  %521 = load i8, ptr %ULVState, align 1
  %522 = or i8 %521, 8
  store i8 %522, ptr %ULVState, align 1
  br label %if.end100

if.end100:                                        ; preds = %if.then16.i, %if.end14.i.if.end100_crit_edge
  %arbRefreshState.i304 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 19
  %523 = ptrtoint ptr %arbRefreshState.i304 to i32
  call void @__asan_store1_noabort(i32 %523)
  store i8 2, ptr %arbRefreshState.i304, align 1
  %524 = ptrtoint ptr %level.i301 to i32
  call void @__asan_store1_noabort(i32 %524)
  store i8 1, ptr %level.i301, align 1
  %std_vddc.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 15
  %vddc.i305 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 4, i32 12
  %525 = ptrtoint ptr %vddc.i305 to i32
  call void @__asan_loadN_noabort(i32 %525, i32 4)
  %526 = load i32, ptr %vddc.i305, align 1
  %527 = ptrtoint ptr %std_vddc.i to i32
  call void @__asan_storeN_noabort(i32 %527, i32 4)
  store i32 %526, ptr %std_vddc.i, align 1
  %levelCount.i306 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10, i32 1
  %528 = ptrtoint ptr %levelCount.i306 to i32
  call void @__asan_store1_noabort(i32 %528)
  store i8 1, ptr %levelCount.i306, align 1
  %529 = ptrtoint ptr %ULVState to i32
  call void @__asan_load1_noabort(i32 %529)
  %530 = load i8, ptr %ULVState, align 1
  %531 = or i8 %530, 1
  store i8 %531, ptr %ULVState, align 1
  %532 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %arb_regs.i) #14
  %534 = getelementptr inbounds i8, ptr %arb_regs.i, i32 8
  %535 = ptrtoint ptr %534 to i32
  call void @__asan_store4_noabort(i32 %535)
  store i32 0, ptr %534, align 4
  %pl.i308 = getelementptr inbounds %struct.si_power_info, ptr %533, i32 0, i32 7, i32 4
  %536 = ptrtoint ptr %pl.i308 to i32
  call void @__asan_load4_noabort(i32 %536)
  %537 = load i32, ptr %pl.i308, align 4
  %call.i.i.i309 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2520, i32 noundef 0) #14
  %and.i.i.i = lshr i32 %call.i.i.i309, 3
  %shr.i.i.i = and i32 %and.i.i.i, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %shr.i.i.i)
  %cmp.i.i.i310 = icmp ugt i32 %shr.i.i.i, 3
  %call1.i.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2688, i32 noundef 0) #14
  %and2.i.i.i = and i32 %call1.i.i.i, 3
  %shl4.i.i.i = shl nuw nsw i32 8, %and2.i.i.i
  %mul.i.i.i = mul i32 %537, 10
  %mul5.i.i.i = mul i32 %mul.i.i.i, %shl4.i.i.i
  %538 = add nuw nsw i32 %shr.i.i.i, 10
  %539 = select i1 %cmp.i.i.i310, i32 14, i32 %538
  %div10.i.i.i = lshr i32 %mul5.i.i.i, %539
  %sub.i.i.i = add nuw nsw i32 %div10.i.i.i, 16352
  %div69.i.i.i = lshr i32 %sub.i.i.i, 6
  %conv.i.i311 = trunc i32 %div69.i.i.i to i8
  %540 = ptrtoint ptr %534 to i32
  call void @__asan_store1_noabort(i32 %540)
  store i8 %conv.i.i311, ptr %534, align 4
  %541 = ptrtoint ptr %pl.i308 to i32
  call void @__asan_load4_noabort(i32 %541)
  %542 = load i32, ptr %pl.i308, align 4
  %mclk.i.i = getelementptr inbounds %struct.si_power_info, ptr %533, i32 0, i32 7, i32 4, i32 1
  %543 = ptrtoint ptr %mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %543)
  %544 = load i32, ptr %mclk.i.i, align 4
  tail call void @amdgpu_atombios_set_engine_dram_timings(ptr noundef %adev, i32 noundef %542, i32 noundef %544) #14
  %call2.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2525, i32 noundef 0) #14
  %call3.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2526, i32 noundef 0) #14
  %call4.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  %545 = ptrtoint ptr %arb_regs.i to i32
  call void @__asan_store4_noabort(i32 %545)
  store i32 %call2.i.i, ptr %arb_regs.i, align 4
  %mc_arb_dram_timing2.i.i = getelementptr inbounds %struct.SMC_SIslands_MCArbDramTimingRegisterSet, ptr %arb_regs.i, i32 0, i32 1
  %546 = ptrtoint ptr %mc_arb_dram_timing2.i.i to i32
  call void @__asan_store4_noabort(i32 %546)
  store i32 %call3.i.i, ptr %mc_arb_dram_timing2.i.i, align 4
  %547 = trunc i32 %call4.i.i to i8
  %conv5.i.i312 = and i8 %547, 31
  %mc_arb_burst_time.i.i = getelementptr inbounds %struct.SMC_SIslands_MCArbDramTimingRegisterSet, ptr %arb_regs.i, i32 0, i32 3
  %548 = ptrtoint ptr %mc_arb_burst_time.i.i to i32
  call void @__asan_store1_noabort(i32 %548)
  store i8 %conv5.i.i312, ptr %mc_arb_burst_time.i.i, align 1
  %volt_change_delay.i = getelementptr inbounds %struct.si_power_info, ptr %533, i32 0, i32 7, i32 3
  %549 = ptrtoint ptr %volt_change_delay.i to i32
  call void @__asan_load4_noabort(i32 %549)
  %550 = load i32, ptr %volt_change_delay.i, align 4
  %551 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %551)
  %552 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i.i313 = getelementptr inbounds %struct.si_power_info, ptr %552, i32 0, i32 22
  %553 = ptrtoint ptr %soft_regs_start.i.i313 to i32
  call void @__asan_load4_noabort(i32 %553)
  %554 = load i32, ptr %soft_regs_start.i.i313, align 4
  %add.i.i314 = add i32 %554, 140
  %sram_end.i.i315 = getelementptr inbounds %struct.si_power_info, ptr %552, i32 0, i32 20
  %555 = ptrtoint ptr %sram_end.i.i315 to i32
  call void @__asan_load4_noabort(i32 %555)
  %556 = load i32, ptr %sram_end.i.i315, align 4
  %call1.i.i316 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i.i314, i32 noundef %550, i32 noundef %556) #14
  %arb_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %533, i32 0, i32 24
  %557 = ptrtoint ptr %arb_table_start.i to i32
  call void @__asan_load4_noabort(i32 %557)
  %558 = load i32, ptr %arb_table_start.i, align 4
  %add4.i = add i32 %558, 28
  %sram_end.i317 = getelementptr inbounds %struct.si_power_info, ptr %533, i32 0, i32 20
  %559 = ptrtoint ptr %sram_end.i317 to i32
  call void @__asan_load4_noabort(i32 %559)
  %560 = load i32, ptr %sram_end.i317, align 4
  %call5.i = call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %add4.i, ptr noundef nonnull %arb_regs.i, i32 noundef 12, i32 noundef %560) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %arb_regs.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool102.not = icmp eq i32 %call5.i, 0
  br i1 %tobool102.not, label %if.end104, label %if.end100.cleanup_crit_edge

if.end100.cleanup_crit_edge:                      ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end104:                                        ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #16
  %cg_ulv_control = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7, i32 1
  %561 = ptrtoint ptr %cg_ulv_control to i32
  call void @__asan_load4_noabort(i32 %561)
  %562 = load i32, ptr %cg_ulv_control, align 4
  call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 542, i32 noundef %562, i32 noundef 0) #14
  %cg_ulv_parameter = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 7, i32 2
  %563 = ptrtoint ptr %cg_ulv_parameter to i32
  call void @__asan_load4_noabort(i32 %563)
  %564 = load i32, ptr %cg_ulv_parameter, align 4
  call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 543, i32 noundef %564, i32 noundef 0) #14
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %565 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %565)
  %566 = load ptr, ptr %asic_funcs, align 4
  %get_pcie_lanes = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %566, i32 0, i32 9
  %567 = ptrtoint ptr %get_pcie_lanes to i32
  call void @__asan_load4_noabort(i32 %567)
  %568 = load ptr, ptr %get_pcie_lanes, align 4
  %call105 = call i32 %568(ptr noundef %adev) #14
  %569 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %569)
  %570 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i319 = getelementptr inbounds %struct.si_power_info, ptr %570, i32 0, i32 22
  %571 = ptrtoint ptr %soft_regs_start.i319 to i32
  call void @__asan_load4_noabort(i32 %571)
  %572 = load i32, ptr %soft_regs_start.i319, align 4
  %add.i320 = add i32 %572, 244
  %sram_end.i321 = getelementptr inbounds %struct.si_power_info, ptr %570, i32 0, i32 20
  %573 = ptrtoint ptr %sram_end.i321 to i32
  call void @__asan_load4_noabort(i32 %573)
  %574 = load i32, ptr %sram_end.i321, align 4
  %call1.i322 = call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i320, i32 noundef %call105, i32 noundef %574) #14
  br label %if.end109

if.else:                                          ; preds = %land.lhs.true93.if.else_crit_edge, %if.end90.if.else_crit_edge
  %ULVState107 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 37, i32 10
  %575 = call ptr @memcpy(ptr %ULVState107, ptr %initialState.i, i32 152)
  br label %if.end109

if.end109:                                        ; preds = %if.else, %if.end104
  %state_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 21
  %576 = ptrtoint ptr %state_table_start to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load i32, ptr %state_table_start, align 4
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %578 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %578)
  %579 = load i32, ptr %sram_end, align 4
  %call110 = call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %577, ptr noundef %smc_statetable, i32 noundef 3012, i32 noundef %579) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end109, %if.end100.cleanup_crit_edge, %if.then96.cleanup_crit_edge, %si_populate_smc_acpi_state.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call110, %if.end109 ], [ %call87, %si_populate_smc_acpi_state.exit.cleanup_crit_edge ], [ %call5.i, %if.end100.cleanup_crit_edge ], [ %call3.i, %if.then96.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_init_smc_spll_table(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  %sclk_params = alloca %struct.SISLANDS_SMC_SCLK_VALUE, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %sclk_params) #14
  %2 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_params, i32 0, i32 2
  %3 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_params, i32 0, i32 4
  %4 = getelementptr inbounds %struct.SISLANDS_SMC_SCLK_VALUE, ptr %sclk_params, i32 0, i32 5
  %spll_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 27
  %5 = call ptr @memset(ptr %sclk_params, i32 255, i32 28)
  %6 = ptrtoint ptr %spll_table_start to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %spll_table_start, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp = icmp eq i32 %7, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 2048) #18
  %cmp3 = icmp eq ptr %call7.i.i, null
  br i1 %cmp3, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %if.end37.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.099 = phi i32 [ %inc, %if.end37.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %sclk.098 = phi i32 [ %add, %if.end37.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %call7 = call fastcc i32 @si_calculate_sclk_params(ptr noundef %adev, i32 noundef %sclk.098, ptr noundef nonnull %sclk_params)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %if.end37, label %for.body.if.then53_crit_edge

for.body.if.then53_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then53

if.end37:                                         ; preds = %for.body
  %9 = ptrtoint ptr %sclk_params to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sclk_params, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %2, align 4
  %13 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %3, align 4
  %15 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %4, align 4
  %and16 = lshr i32 %12, 1
  %shr17 = and i32 %and16, 33550336
  %and14 = lshr i32 %16, 6
  %shr18 = and i32 %and14, 1048575
  %17 = shl i32 %10, 5
  %shl39 = and i32 %17, -33554432
  %or = or i32 %shr17, %shl39
  %arrayidx = getelementptr [256 x i32], ptr %call7.i.i, i32 0, i32 %i.099
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %or, ptr %arrayidx, align 4
  %19 = shl i32 %14, 16
  %shl43 = and i32 %19, -1048576
  %or45 = or i32 %shr18, %shl43
  %arrayidx46 = getelementptr %struct.SMC_SISLANDS_SPLL_DIV_TABLE, ptr %call7.i.i, i32 0, i32 1, i32 %i.099
  %20 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or45, ptr %arrayidx46, align 4
  %add = add nuw nsw i32 %sclk.098, 512
  %inc = add nuw nsw i32 %i.099, 1
  %exitcond.not = icmp eq i32 %inc, 256
  br i1 %exitcond.not, label %if.end51, label %if.end37.for.body_crit_edge

if.end37.for.body_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end51:                                         ; preds = %if.end37
  %21 = ptrtoint ptr %spll_table_start to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %spll_table_start, align 4
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %23 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sram_end, align 4
  %call50 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %22, ptr noundef nonnull %call7.i.i, i32 noundef 2048, i32 noundef %24) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %tobool52.not = icmp eq i32 %call50, 0
  br i1 %tobool52.not, label %if.end51.if.end54_crit_edge, label %if.end51.if.then53_crit_edge

if.end51.if.then53_crit_edge:                     ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then53

if.end51.if.end54_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54

if.then53:                                        ; preds = %if.end51.if.then53_crit_edge, %for.body.if.then53_crit_edge
  %ret.696 = phi i32 [ %call50, %if.end51.if.then53_crit_edge ], [ %call7, %for.body.if.then53_crit_edge ]
  %enable_power_containment = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 10
  %25 = ptrtoint ptr %enable_power_containment to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %enable_power_containment, align 2
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end51.if.end54_crit_edge
  %ret.697 = phi i32 [ %ret.696, %if.then53 ], [ 0, %if.end51.if.end54_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end54, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.697, %if.end54 ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %sclk_params) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_init_arb_table_index(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  %tmp = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp) #14
  %2 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %tmp, align 4, !annotation !272
  %arb_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 24
  %3 = ptrtoint ptr %arb_table_start to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arb_table_start, align 4
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %5 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sram_end, align 4
  %call1 = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef %4, ptr noundef nonnull %tmp, i32 noundef %6) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %tmp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tmp, align 4
  %and = and i32 %8, 16777215
  %or = or i32 %and, 184549376
  store i32 %or, ptr %tmp, align 4
  %9 = ptrtoint ptr %arb_table_start to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arb_table_start, align 4
  %11 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sram_end, align 4
  %call4 = call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %10, i32 noundef %or, i32 noundef %12) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call1, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_populate_mc_reg_table(ptr noundef %adev, ptr nocapture noundef readonly %amdgpu_boot_state) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ps_priv.i = getelementptr inbounds %struct.amdgpu_ps, ptr %amdgpu_boot_state, i32 0, i32 9
  %0 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ps_priv.i, align 4
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 4
  %ulv2 = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 7
  %smc_mc_reg_table3 = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 36
  %4 = call ptr @memset(ptr %smc_mc_reg_table3, i32 0, i32 1348)
  %5 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i = getelementptr inbounds %struct.si_power_info, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %soft_regs_start.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %soft_regs_start.i, align 4
  %add.i = add i32 %7, 92
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %5, i32 0, i32 20
  %8 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sram_end.i, align 4
  %call1.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i, i32 noundef 1, i32 noundef %9) #14
  %10 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv.i, align 4
  %mc_reg_table1.i = getelementptr inbounds %struct.si_power_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %mc_reg_table1.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %mc_reg_table1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %cmp35.not.i = icmp eq i8 %13, 0
  br i1 %cmp35.not.i, label %entry.si_populate_mc_reg_addresses.exit_crit_edge, label %for.body.lr.ph.i

entry.si_populate_mc_reg_addresses.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_mc_reg_addresses.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %valid_flag.i = getelementptr inbounds %struct.si_power_info, ptr %11, i32 0, i32 2, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %j.037.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc18.i, %for.inc.i.for.body.i_crit_edge ]
  %i.036.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %i.1.i, %for.inc.i.for.body.i_crit_edge ]
  %14 = ptrtoint ptr %valid_flag.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %valid_flag.i, align 2
  %conv4.i = zext i16 %15 to i32
  %shl.i = shl nuw i32 1, %j.037.i
  %and.i = and i32 %shl.i, %conv4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %i.036.i)
  %cmp5.i = icmp ugt i32 %i.036.i, 15
  br i1 %cmp5.i, label %if.then.i.si_populate_mc_reg_addresses.exit_crit_edge, label %if.end.i

if.then.i.si_populate_mc_reg_addresses.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_mc_reg_addresses.exit

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.si_power_info, ptr %11, i32 0, i32 2, i32 4, i32 %j.037.i
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %arrayidx.i, align 4
  %arrayidx9.i = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 2, i32 %i.036.i
  %18 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_storeN_noabort(i32 %18, i32 2)
  store i16 %17, ptr %arrayidx9.i, align 1
  %s1.i = getelementptr %struct.si_power_info, ptr %11, i32 0, i32 2, i32 4, i32 %j.037.i, i32 1
  %19 = ptrtoint ptr %s1.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %s1.i, align 2
  %s116.i = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 2, i32 %i.036.i, i32 1
  %21 = ptrtoint ptr %s116.i to i32
  call void @__asan_storeN_noabort(i32 %21, i32 2)
  store i16 %20, ptr %s116.i, align 1
  %inc.i = add nuw nsw i32 %i.036.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %for.body.i.for.inc.i_crit_edge
  %i.1.i = phi i32 [ %inc.i, %if.end.i ], [ %i.036.i, %for.body.i.for.inc.i_crit_edge ]
  %inc18.i = add nuw nsw i32 %j.037.i, 1
  %22 = ptrtoint ptr %mc_reg_table1.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %mc_reg_table1.i, align 4
  %conv.i = zext i8 %23 to i32
  %cmp.i = icmp ult i32 %inc18.i, %conv.i
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.si_populate_mc_reg_addresses.exit_crit_edge

for.inc.i.si_populate_mc_reg_addresses.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_populate_mc_reg_addresses.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

si_populate_mc_reg_addresses.exit:                ; preds = %for.inc.i.si_populate_mc_reg_addresses.exit_crit_edge, %if.then.i.si_populate_mc_reg_addresses.exit_crit_edge, %entry.si_populate_mc_reg_addresses.exit_crit_edge
  %i.0.lcssa.i = phi i32 [ 0, %entry.si_populate_mc_reg_addresses.exit_crit_edge ], [ %i.1.i, %for.inc.i.si_populate_mc_reg_addresses.exit_crit_edge ], [ %i.036.i, %if.then.i.si_populate_mc_reg_addresses.exit_crit_edge ]
  %conv19.i = trunc i32 %i.0.lcssa.i to i8
  %24 = ptrtoint ptr %smc_mc_reg_table3 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %conv19.i, ptr %smc_mc_reg_table3, align 1
  %data = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 36, i32 3
  %25 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %priv.i, align 4
  %num_entries.i = getelementptr inbounds %struct.si_power_info, ptr %26, i32 0, i32 2, i32 1
  %27 = ptrtoint ptr %num_entries.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %num_entries.i, align 1
  %conv.i57 = zext i8 %28 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %cmp32.not.i = icmp eq i8 %28, 0
  br i1 %cmp32.not.i, label %si_populate_mc_reg_addresses.exit.for.end.thread.i_crit_edge, label %for.body.lr.ph.i58

si_populate_mc_reg_addresses.exit.for.end.thread.i_crit_edge: ; preds = %si_populate_mc_reg_addresses.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i

for.body.lr.ph.i58:                               ; preds = %si_populate_mc_reg_addresses.exit
  %mclk.i = getelementptr inbounds %struct.si_ps, ptr %1, i32 0, i32 2, i32 0, i32 1
  %29 = ptrtoint ptr %mclk.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mclk.i, align 4
  br label %for.body.i60

for.body.i60:                                     ; preds = %for.inc.i62.for.body.i60_crit_edge, %for.body.lr.ph.i58
  %i.033.i = phi i32 [ 0, %for.body.lr.ph.i58 ], [ %inc.i61, %for.inc.i62.for.body.i60_crit_edge ]
  %arrayidx.i59 = getelementptr %struct.si_power_info, ptr %26, i32 0, i32 2, i32 3, i32 %i.033.i
  %31 = ptrtoint ptr %arrayidx.i59 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i59, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %32)
  %cmp3.not.i = icmp ugt i32 %30, %32
  br i1 %cmp3.not.i, label %for.inc.i62, label %for.body.i60.for.end.i_crit_edge

for.body.i60.for.end.i_crit_edge:                 ; preds = %for.body.i60
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.inc.i62:                                      ; preds = %for.body.i60
  %inc.i61 = add nuw nsw i32 %i.033.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i61, %conv.i57
  br i1 %exitcond.not.i, label %for.inc.i62.for.end.i_crit_edge, label %for.inc.i62.for.body.i60_crit_edge

for.inc.i62.for.body.i60_crit_edge:               ; preds = %for.inc.i62
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i60

for.inc.i62.for.end.i_crit_edge:                  ; preds = %for.inc.i62
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i62.for.end.i_crit_edge, %for.body.i60.for.end.i_crit_edge
  %i.0.lcssa.i63 = phi i32 [ %conv.i57, %for.inc.i62.for.end.i_crit_edge ], [ %i.033.i, %for.body.i60.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa.i63, i32 %conv.i57)
  %cmp8.i = icmp eq i32 %i.0.lcssa.i63, %conv.i57
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0.lcssa.i63)
  %cmp10.not.i = icmp eq i32 %i.0.lcssa.i63, 0
  %dec.i = add nsw i32 %i.0.lcssa.i63, -1
  br i1 %cmp10.not.i, label %for.end.i.for.end.thread.i_crit_edge, label %for.end.i._crit_edge

for.end.i._crit_edge:                             ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %33

for.end.i.for.end.thread.i_crit_edge:             ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i

for.end.thread.i:                                 ; preds = %for.end.i.for.end.thread.i_crit_edge, %si_populate_mc_reg_addresses.exit.for.end.thread.i_crit_edge
  %cmp844.i = phi i1 [ %cmp8.i, %for.end.i.for.end.thread.i_crit_edge ], [ true, %si_populate_mc_reg_addresses.exit.for.end.thread.i_crit_edge ]
  br label %33

33:                                               ; preds = %for.end.thread.i, %for.end.i._crit_edge
  %cmp843.i = phi i1 [ %cmp844.i, %for.end.thread.i ], [ %cmp8.i, %for.end.i._crit_edge ]
  %i.0.lcssa41.i = phi i32 [ 0, %for.end.thread.i ], [ %i.0.lcssa.i63, %for.end.i._crit_edge ]
  %34 = phi i32 [ 0, %for.end.thread.i ], [ %dec.i, %for.end.i._crit_edge ]
  %i.1.i64 = select i1 %cmp843.i, i32 %34, i32 %i.0.lcssa41.i
  %mc_reg_table.i = getelementptr inbounds %struct.si_power_info, ptr %26, i32 0, i32 2
  %35 = ptrtoint ptr %mc_reg_table.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %mc_reg_table.i, align 4
  %conv18.i = zext i8 %36 to i32
  %valid_flag.i65 = getelementptr inbounds %struct.si_power_info, ptr %26, i32 0, i32 2, i32 2
  %37 = ptrtoint ptr %valid_flag.i65 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %valid_flag.i65, align 2
  %conv20.i = zext i16 %38 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %cmp8.not.i.i = icmp eq i8 %36, 0
  br i1 %cmp8.not.i.i, label %.si_convert_mc_reg_table_entry_to_smc.exit_crit_edge, label %.for.body.i.i_crit_edge

.for.body.i.i_crit_edge:                          ; preds = %33
  br label %for.body.i.i

.si_convert_mc_reg_table_entry_to_smc.exit_crit_edge: ; preds = %33
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_entry_to_smc.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %.for.body.i.i_crit_edge
  %j.010.i.i = phi i32 [ %inc3.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %.for.body.i.i_crit_edge ]
  %i.09.i.i = phi i32 [ %i.1.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %.for.body.i.i_crit_edge ]
  %shl.i.i = shl nuw i32 1, %j.010.i.i
  %and.i.i = and i32 %shl.i.i, %conv20.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.then.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i = getelementptr %struct.si_power_info, ptr %26, i32 0, i32 2, i32 3, i32 %i.1.i64, i32 1, i32 %j.010.i.i
  %39 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i.i, align 4
  %arrayidx2.i.i = getelementptr [16 x i32], ptr %data, i32 0, i32 %i.09.i.i
  %41 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_storeN_noabort(i32 %41, i32 4)
  store i32 %40, ptr %arrayidx2.i.i, align 1
  %inc.i.i = add i32 %i.09.i.i, 1
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %i.1.i.i = phi i32 [ %inc.i.i, %if.then.i.i ], [ %i.09.i.i, %for.body.i.i.for.inc.i.i_crit_edge ]
  %inc3.i.i = add nuw nsw i32 %j.010.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc3.i.i, %conv18.i
  br i1 %exitcond.not.i.i, label %for.inc.i.i.si_convert_mc_reg_table_entry_to_smc.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.inc.i.i.si_convert_mc_reg_table_entry_to_smc.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_entry_to_smc.exit

si_convert_mc_reg_table_entry_to_smc.exit:        ; preds = %for.inc.i.i.si_convert_mc_reg_table_entry_to_smc.exit_crit_edge, %.si_convert_mc_reg_table_entry_to_smc.exit_crit_edge
  %mc_reg_table = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 2
  %mc_reg_table_entry = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 2, i32 3
  %arrayidx8 = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 3, i32 1
  %42 = ptrtoint ptr %mc_reg_table to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %mc_reg_table, align 4
  %conv = zext i8 %43 to i32
  %valid_flag = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 2, i32 2
  %44 = ptrtoint ptr %valid_flag to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %valid_flag, align 2
  %conv11 = zext i16 %45 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %cmp8.not.i = icmp eq i8 %43, 0
  br i1 %cmp8.not.i, label %si_convert_mc_reg_table_entry_to_smc.exit.si_convert_mc_registers.exit_crit_edge, label %si_convert_mc_reg_table_entry_to_smc.exit.for.body.i69_crit_edge

si_convert_mc_reg_table_entry_to_smc.exit.for.body.i69_crit_edge: ; preds = %si_convert_mc_reg_table_entry_to_smc.exit
  br label %for.body.i69

si_convert_mc_reg_table_entry_to_smc.exit.si_convert_mc_registers.exit_crit_edge: ; preds = %si_convert_mc_reg_table_entry_to_smc.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_registers.exit

for.body.i69:                                     ; preds = %for.inc.i75.for.body.i69_crit_edge, %si_convert_mc_reg_table_entry_to_smc.exit.for.body.i69_crit_edge
  %j.010.i = phi i32 [ %inc3.i, %for.inc.i75.for.body.i69_crit_edge ], [ 0, %si_convert_mc_reg_table_entry_to_smc.exit.for.body.i69_crit_edge ]
  %i.09.i = phi i32 [ %i.1.i73, %for.inc.i75.for.body.i69_crit_edge ], [ 0, %si_convert_mc_reg_table_entry_to_smc.exit.for.body.i69_crit_edge ]
  %shl.i66 = shl nuw i32 1, %j.010.i
  %and.i67 = and i32 %shl.i66, %conv11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i67)
  %tobool.not.i68 = icmp eq i32 %and.i67, 0
  br i1 %tobool.not.i68, label %for.body.i69.for.inc.i75_crit_edge, label %if.then.i72

for.body.i69.for.inc.i75_crit_edge:               ; preds = %for.body.i69
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i75

if.then.i72:                                      ; preds = %for.body.i69
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i70 = getelementptr %struct.si_mc_reg_entry, ptr %mc_reg_table_entry, i32 0, i32 1, i32 %j.010.i
  %46 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx.i70, align 4
  %arrayidx2.i = getelementptr [16 x i32], ptr %arrayidx8, i32 0, i32 %i.09.i
  %48 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_storeN_noabort(i32 %48, i32 4)
  store i32 %47, ptr %arrayidx2.i, align 1
  %inc.i71 = add i32 %i.09.i, 1
  br label %for.inc.i75

for.inc.i75:                                      ; preds = %if.then.i72, %for.body.i69.for.inc.i75_crit_edge
  %i.1.i73 = phi i32 [ %inc.i71, %if.then.i72 ], [ %i.09.i, %for.body.i69.for.inc.i75_crit_edge ]
  %inc3.i = add nuw nsw i32 %j.010.i, 1
  %exitcond.not.i74 = icmp eq i32 %inc3.i, %conv
  br i1 %exitcond.not.i74, label %for.inc.i75.si_convert_mc_registers.exit_crit_edge, label %for.inc.i75.for.body.i69_crit_edge

for.inc.i75.for.body.i69_crit_edge:               ; preds = %for.inc.i75
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i69

for.inc.i75.si_convert_mc_registers.exit_crit_edge: ; preds = %for.inc.i75
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_registers.exit

si_convert_mc_registers.exit:                     ; preds = %for.inc.i75.si_convert_mc_registers.exit_crit_edge, %si_convert_mc_reg_table_entry_to_smc.exit.si_convert_mc_registers.exit_crit_edge
  %49 = ptrtoint ptr %ulv2 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %ulv2, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool.not = icmp eq i8 %50, 0
  br i1 %tobool.not, label %si_convert_mc_registers.exit.if.else_crit_edge, label %land.lhs.true

si_convert_mc_registers.exit.if.else_crit_edge:   ; preds = %si_convert_mc_registers.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %si_convert_mc_registers.exit
  %vddc = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 7, i32 4, i32 2
  %51 = ptrtoint ptr %vddc to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %vddc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %52)
  %cmp.not = icmp eq i16 %52, 0
  br i1 %cmp.not, label %land.lhs.true.if.else_crit_edge, label %if.then

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  %arrayidx17 = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 3, i32 2
  %53 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %priv.i, align 4
  %num_entries.i78 = getelementptr inbounds %struct.si_power_info, ptr %54, i32 0, i32 2, i32 1
  %55 = ptrtoint ptr %num_entries.i78 to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %num_entries.i78, align 1
  %conv.i79 = zext i8 %56 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %cmp32.not.i80 = icmp eq i8 %56, 0
  br i1 %cmp32.not.i80, label %if.then.for.end.thread.i81_crit_edge, label %for.body.lr.ph.i83

if.then.for.end.thread.i81_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i81

for.body.lr.ph.i83:                               ; preds = %if.then
  %mclk.i82 = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 7, i32 4, i32 1
  %57 = ptrtoint ptr %mclk.i82 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %mclk.i82, align 4
  br label %for.body.i87

for.body.i87:                                     ; preds = %for.inc.i90.for.body.i87_crit_edge, %for.body.lr.ph.i83
  %i.033.i84 = phi i32 [ 0, %for.body.lr.ph.i83 ], [ %inc.i88, %for.inc.i90.for.body.i87_crit_edge ]
  %arrayidx.i85 = getelementptr %struct.si_power_info, ptr %54, i32 0, i32 2, i32 3, i32 %i.033.i84
  %59 = ptrtoint ptr %arrayidx.i85 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx.i85, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %58, i32 %60)
  %cmp3.not.i86 = icmp ugt i32 %58, %60
  br i1 %cmp3.not.i86, label %for.inc.i90, label %for.body.i87.for.end.i95_crit_edge

for.body.i87.for.end.i95_crit_edge:               ; preds = %for.body.i87
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i95

for.inc.i90:                                      ; preds = %for.body.i87
  %inc.i88 = add nuw nsw i32 %i.033.i84, 1
  %exitcond.not.i89 = icmp eq i32 %inc.i88, %conv.i79
  br i1 %exitcond.not.i89, label %for.inc.i90.for.end.i95_crit_edge, label %for.inc.i90.for.body.i87_crit_edge

for.inc.i90.for.body.i87_crit_edge:               ; preds = %for.inc.i90
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i87

for.inc.i90.for.end.i95_crit_edge:                ; preds = %for.inc.i90
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i95

for.end.i95:                                      ; preds = %for.inc.i90.for.end.i95_crit_edge, %for.body.i87.for.end.i95_crit_edge
  %i.0.lcssa.i91 = phi i32 [ %conv.i79, %for.inc.i90.for.end.i95_crit_edge ], [ %i.033.i84, %for.body.i87.for.end.i95_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa.i91, i32 %conv.i79)
  %cmp8.i92 = icmp eq i32 %i.0.lcssa.i91, %conv.i79
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0.lcssa.i91)
  %cmp10.not.i93 = icmp eq i32 %i.0.lcssa.i91, 0
  %dec.i94 = add nsw i32 %i.0.lcssa.i91, -1
  br i1 %cmp10.not.i93, label %for.end.i95.for.end.thread.i81_crit_edge, label %for.end.i95._crit_edge

for.end.i95._crit_edge:                           ; preds = %for.end.i95
  call void @__sanitizer_cov_trace_pc() #16
  br label %61

for.end.i95.for.end.thread.i81_crit_edge:         ; preds = %for.end.i95
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i81

for.end.thread.i81:                               ; preds = %for.end.i95.for.end.thread.i81_crit_edge, %if.then.for.end.thread.i81_crit_edge
  %cmp844.i96 = phi i1 [ %cmp8.i92, %for.end.i95.for.end.thread.i81_crit_edge ], [ true, %if.then.for.end.thread.i81_crit_edge ]
  br label %61

61:                                               ; preds = %for.end.thread.i81, %for.end.i95._crit_edge
  %cmp843.i97 = phi i1 [ %cmp844.i96, %for.end.thread.i81 ], [ %cmp8.i92, %for.end.i95._crit_edge ]
  %i.0.lcssa41.i98 = phi i32 [ 0, %for.end.thread.i81 ], [ %i.0.lcssa.i91, %for.end.i95._crit_edge ]
  %62 = phi i32 [ 0, %for.end.thread.i81 ], [ %dec.i94, %for.end.i95._crit_edge ]
  %i.1.i99 = select i1 %cmp843.i97, i32 %62, i32 %i.0.lcssa41.i98
  %mc_reg_table.i100 = getelementptr inbounds %struct.si_power_info, ptr %54, i32 0, i32 2
  %63 = ptrtoint ptr %mc_reg_table.i100 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %mc_reg_table.i100, align 4
  %conv18.i101 = zext i8 %64 to i32
  %valid_flag.i102 = getelementptr inbounds %struct.si_power_info, ptr %54, i32 0, i32 2, i32 2
  %65 = ptrtoint ptr %valid_flag.i102 to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %valid_flag.i102, align 2
  %conv20.i103 = zext i16 %66 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %cmp8.not.i.i104 = icmp eq i8 %64, 0
  br i1 %cmp8.not.i.i104, label %.if.end_crit_edge, label %.for.body.i.i110_crit_edge

.for.body.i.i110_crit_edge:                       ; preds = %61
  br label %for.body.i.i110

.if.end_crit_edge:                                ; preds = %61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.i.i110:                                  ; preds = %for.inc.i.i118.for.body.i.i110_crit_edge, %.for.body.i.i110_crit_edge
  %j.010.i.i105 = phi i32 [ %inc3.i.i116, %for.inc.i.i118.for.body.i.i110_crit_edge ], [ 0, %.for.body.i.i110_crit_edge ]
  %i.09.i.i106 = phi i32 [ %i.1.i.i115, %for.inc.i.i118.for.body.i.i110_crit_edge ], [ 0, %.for.body.i.i110_crit_edge ]
  %shl.i.i107 = shl nuw i32 1, %j.010.i.i105
  %and.i.i108 = and i32 %shl.i.i107, %conv20.i103
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i108)
  %tobool.not.i.i109 = icmp eq i32 %and.i.i108, 0
  br i1 %tobool.not.i.i109, label %for.body.i.i110.for.inc.i.i118_crit_edge, label %if.then.i.i114

for.body.i.i110.for.inc.i.i118_crit_edge:         ; preds = %for.body.i.i110
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i118

if.then.i.i114:                                   ; preds = %for.body.i.i110
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i111 = getelementptr %struct.si_power_info, ptr %54, i32 0, i32 2, i32 3, i32 %i.1.i99, i32 1, i32 %j.010.i.i105
  %67 = ptrtoint ptr %arrayidx.i.i111 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx.i.i111, align 4
  %arrayidx2.i.i112 = getelementptr [16 x i32], ptr %arrayidx17, i32 0, i32 %i.09.i.i106
  %69 = ptrtoint ptr %arrayidx2.i.i112 to i32
  call void @__asan_storeN_noabort(i32 %69, i32 4)
  store i32 %68, ptr %arrayidx2.i.i112, align 1
  %inc.i.i113 = add i32 %i.09.i.i106, 1
  br label %for.inc.i.i118

for.inc.i.i118:                                   ; preds = %if.then.i.i114, %for.body.i.i110.for.inc.i.i118_crit_edge
  %i.1.i.i115 = phi i32 [ %inc.i.i113, %if.then.i.i114 ], [ %i.09.i.i106, %for.body.i.i110.for.inc.i.i118_crit_edge ]
  %inc3.i.i116 = add nuw nsw i32 %j.010.i.i105, 1
  %exitcond.not.i.i117 = icmp eq i32 %inc3.i.i116, %conv18.i101
  br i1 %exitcond.not.i.i117, label %for.inc.i.i118.if.end_crit_edge, label %for.inc.i.i118.for.body.i.i110_crit_edge

for.inc.i.i118.for.body.i.i110_crit_edge:         ; preds = %for.inc.i.i118
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i110

for.inc.i.i118.if.end_crit_edge:                  ; preds = %for.inc.i.i118
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %si_convert_mc_registers.exit.if.else_crit_edge
  %arrayidx22 = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 3, i32 2
  %70 = ptrtoint ptr %mc_reg_table to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %mc_reg_table, align 4
  %conv25 = zext i8 %71 to i32
  %72 = ptrtoint ptr %valid_flag to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %valid_flag, align 2
  %conv28 = zext i16 %73 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %71)
  %cmp8.not.i120 = icmp eq i8 %71, 0
  br i1 %cmp8.not.i120, label %if.else.if.end_crit_edge, label %if.else.for.body.i126_crit_edge

if.else.for.body.i126_crit_edge:                  ; preds = %if.else
  br label %for.body.i126

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.i126:                                    ; preds = %for.inc.i134.for.body.i126_crit_edge, %if.else.for.body.i126_crit_edge
  %j.010.i121 = phi i32 [ %inc3.i132, %for.inc.i134.for.body.i126_crit_edge ], [ 0, %if.else.for.body.i126_crit_edge ]
  %i.09.i122 = phi i32 [ %i.1.i131, %for.inc.i134.for.body.i126_crit_edge ], [ 0, %if.else.for.body.i126_crit_edge ]
  %shl.i123 = shl nuw i32 1, %j.010.i121
  %and.i124 = and i32 %shl.i123, %conv28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i124)
  %tobool.not.i125 = icmp eq i32 %and.i124, 0
  br i1 %tobool.not.i125, label %for.body.i126.for.inc.i134_crit_edge, label %if.then.i130

for.body.i126.for.inc.i134_crit_edge:             ; preds = %for.body.i126
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i134

if.then.i130:                                     ; preds = %for.body.i126
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i127 = getelementptr %struct.si_mc_reg_entry, ptr %mc_reg_table_entry, i32 0, i32 1, i32 %j.010.i121
  %74 = ptrtoint ptr %arrayidx.i127 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx.i127, align 4
  %arrayidx2.i128 = getelementptr [16 x i32], ptr %arrayidx22, i32 0, i32 %i.09.i122
  %76 = ptrtoint ptr %arrayidx2.i128 to i32
  call void @__asan_storeN_noabort(i32 %76, i32 4)
  store i32 %75, ptr %arrayidx2.i128, align 1
  %inc.i129 = add i32 %i.09.i122, 1
  br label %for.inc.i134

for.inc.i134:                                     ; preds = %if.then.i130, %for.body.i126.for.inc.i134_crit_edge
  %i.1.i131 = phi i32 [ %inc.i129, %if.then.i130 ], [ %i.09.i122, %for.body.i126.for.inc.i134_crit_edge ]
  %inc3.i132 = add nuw nsw i32 %j.010.i121, 1
  %exitcond.not.i133 = icmp eq i32 %inc3.i132, %conv25
  br i1 %exitcond.not.i133, label %for.inc.i134.if.end_crit_edge, label %for.inc.i134.for.body.i126_crit_edge

for.inc.i134.for.body.i126_crit_edge:             ; preds = %for.inc.i134
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i126

for.inc.i134.if.end_crit_edge:                    ; preds = %for.inc.i134
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %for.inc.i134.if.end_crit_edge, %if.else.if.end_crit_edge, %for.inc.i.i118.if.end_crit_edge, %.if.end_crit_edge
  %77 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %ps_priv.i, align 4
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %78, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %80)
  %cmp8.not.i137 = icmp eq i16 %80, 0
  br i1 %cmp8.not.i137, label %if.end.si_convert_mc_reg_table_to_smc.exit_crit_edge, label %if.end.for.body.i142_crit_edge

if.end.for.body.i142_crit_edge:                   ; preds = %if.end
  br label %for.body.i142

if.end.si_convert_mc_reg_table_to_smc.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_to_smc.exit

for.body.i142:                                    ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i142_crit_edge, %if.end.for.body.i142_crit_edge
  %i.09.i139 = phi i32 [ %inc.i149, %si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i142_crit_edge ], [ 0, %if.end.for.body.i142_crit_edge ]
  %add.i140 = add nuw nsw i32 %i.09.i139, 3
  %arrayidx2.i141 = getelementptr %struct.si_power_info, ptr %3, i32 0, i32 36, i32 3, i32 %add.i140
  %81 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %priv.i, align 4
  %num_entries.i.i = getelementptr inbounds %struct.si_power_info, ptr %82, i32 0, i32 2, i32 1
  %83 = ptrtoint ptr %num_entries.i.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %num_entries.i.i, align 1
  %conv.i.i = zext i8 %84 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %84)
  %cmp32.not.i.i = icmp eq i8 %84, 0
  br i1 %cmp32.not.i.i, label %for.body.i142.for.end.thread.i.i_crit_edge, label %for.body.lr.ph.i.i

for.body.i142.for.end.thread.i.i_crit_edge:       ; preds = %for.body.i142
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i.i

for.body.lr.ph.i.i:                               ; preds = %for.body.i142
  %mclk.i.i = getelementptr %struct.si_ps, ptr %78, i32 0, i32 2, i32 %i.09.i139, i32 1
  %85 = ptrtoint ptr %mclk.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %mclk.i.i, align 4
  br label %for.body.i.i144

for.body.i.i144:                                  ; preds = %for.inc.i.i147.for.body.i.i144_crit_edge, %for.body.lr.ph.i.i
  %i.033.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i145, %for.inc.i.i147.for.body.i.i144_crit_edge ]
  %arrayidx.i.i143 = getelementptr %struct.si_power_info, ptr %82, i32 0, i32 2, i32 3, i32 %i.033.i.i
  %87 = ptrtoint ptr %arrayidx.i.i143 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx.i.i143, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %86, i32 %88)
  %cmp3.not.i.i = icmp ugt i32 %86, %88
  br i1 %cmp3.not.i.i, label %for.inc.i.i147, label %for.body.i.i144.for.end.i.i_crit_edge

for.body.i.i144.for.end.i.i_crit_edge:            ; preds = %for.body.i.i144
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.inc.i.i147:                                   ; preds = %for.body.i.i144
  %inc.i.i145 = add nuw nsw i32 %i.033.i.i, 1
  %exitcond.not.i.i146 = icmp eq i32 %inc.i.i145, %conv.i.i
  br i1 %exitcond.not.i.i146, label %for.inc.i.i147.for.end.i.i_crit_edge, label %for.inc.i.i147.for.body.i.i144_crit_edge

for.inc.i.i147.for.body.i.i144_crit_edge:         ; preds = %for.inc.i.i147
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i144

for.inc.i.i147.for.end.i.i_crit_edge:             ; preds = %for.inc.i.i147
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i147.for.end.i.i_crit_edge, %for.body.i.i144.for.end.i.i_crit_edge
  %i.0.lcssa.i.i = phi i32 [ %conv.i.i, %for.inc.i.i147.for.end.i.i_crit_edge ], [ %i.033.i.i, %for.body.i.i144.for.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0.lcssa.i.i, i32 %conv.i.i)
  %cmp8.i.i = icmp eq i32 %i.0.lcssa.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0.lcssa.i.i)
  %cmp10.not.i.i = icmp eq i32 %i.0.lcssa.i.i, 0
  %dec.i.i = add nsw i32 %i.0.lcssa.i.i, -1
  br i1 %cmp10.not.i.i, label %for.end.i.i.for.end.thread.i.i_crit_edge, label %for.end.i.i._crit_edge

for.end.i.i._crit_edge:                           ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %89

for.end.i.i.for.end.thread.i.i_crit_edge:         ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.thread.i.i

for.end.thread.i.i:                               ; preds = %for.end.i.i.for.end.thread.i.i_crit_edge, %for.body.i142.for.end.thread.i.i_crit_edge
  %cmp844.i.i = phi i1 [ %cmp8.i.i, %for.end.i.i.for.end.thread.i.i_crit_edge ], [ true, %for.body.i142.for.end.thread.i.i_crit_edge ]
  br label %89

89:                                               ; preds = %for.end.thread.i.i, %for.end.i.i._crit_edge
  %cmp843.i.i = phi i1 [ %cmp844.i.i, %for.end.thread.i.i ], [ %cmp8.i.i, %for.end.i.i._crit_edge ]
  %i.0.lcssa41.i.i = phi i32 [ 0, %for.end.thread.i.i ], [ %i.0.lcssa.i.i, %for.end.i.i._crit_edge ]
  %90 = phi i32 [ 0, %for.end.thread.i.i ], [ %dec.i.i, %for.end.i.i._crit_edge ]
  %i.1.i.i148 = select i1 %cmp843.i.i, i32 %90, i32 %i.0.lcssa41.i.i
  %mc_reg_table.i.i = getelementptr inbounds %struct.si_power_info, ptr %82, i32 0, i32 2
  %91 = ptrtoint ptr %mc_reg_table.i.i to i32
  call void @__asan_load1_noabort(i32 %91)
  %92 = load i8, ptr %mc_reg_table.i.i, align 4
  %conv18.i.i = zext i8 %92 to i32
  %valid_flag.i.i = getelementptr inbounds %struct.si_power_info, ptr %82, i32 0, i32 2, i32 2
  %93 = ptrtoint ptr %valid_flag.i.i to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %valid_flag.i.i, align 2
  %conv20.i.i = zext i16 %94 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %92)
  %cmp8.not.i.i.i = icmp eq i8 %92, 0
  br i1 %cmp8.not.i.i.i, label %.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge, label %.for.body.i.i.i_crit_edge

.for.body.i.i.i_crit_edge:                        ; preds = %89
  br label %for.body.i.i.i

.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge: ; preds = %89
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_entry_to_smc.exit.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %.for.body.i.i.i_crit_edge
  %j.010.i.i.i = phi i32 [ %inc3.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %.for.body.i.i.i_crit_edge ]
  %i.09.i.i.i = phi i32 [ %i.1.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %.for.body.i.i.i_crit_edge ]
  %shl.i.i.i = shl nuw i32 1, %j.010.i.i.i
  %and.i.i.i = and i32 %shl.i.i.i, %conv20.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge, label %if.then.i.i.i

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i.i.i = getelementptr %struct.si_power_info, ptr %82, i32 0, i32 2, i32 3, i32 %i.1.i.i148, i32 1, i32 %j.010.i.i.i
  %95 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %arrayidx.i.i.i, align 4
  %arrayidx2.i.i.i = getelementptr [16 x i32], ptr %arrayidx2.i141, i32 0, i32 %i.09.i.i.i
  %97 = ptrtoint ptr %arrayidx2.i.i.i to i32
  call void @__asan_storeN_noabort(i32 %97, i32 4)
  store i32 %96, ptr %arrayidx2.i.i.i, align 1
  %inc.i.i.i = add i32 %i.09.i.i.i, 1
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %if.then.i.i.i, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %i.1.i.i.i = phi i32 [ %inc.i.i.i, %if.then.i.i.i ], [ %i.09.i.i.i, %for.body.i.i.i.for.inc.i.i.i_crit_edge ]
  %inc3.i.i.i = add nuw nsw i32 %j.010.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc3.i.i.i, %conv18.i.i
  br i1 %exitcond.not.i.i.i, label %for.inc.i.i.i.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i

for.inc.i.i.i.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_entry_to_smc.exit.i

si_convert_mc_reg_table_entry_to_smc.exit.i:      ; preds = %for.inc.i.i.i.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge, %.si_convert_mc_reg_table_entry_to_smc.exit.i_crit_edge
  %inc.i149 = add nuw nsw i32 %i.09.i139, 1
  %98 = ptrtoint ptr %78 to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %78, align 4
  %conv.i150 = zext i16 %99 to i32
  %cmp.i151 = icmp ult i32 %inc.i149, %conv.i150
  br i1 %cmp.i151, label %si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i142_crit_edge, label %si_convert_mc_reg_table_entry_to_smc.exit.i.si_convert_mc_reg_table_to_smc.exit_crit_edge

si_convert_mc_reg_table_entry_to_smc.exit.i.si_convert_mc_reg_table_to_smc.exit_crit_edge: ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_convert_mc_reg_table_to_smc.exit

si_convert_mc_reg_table_entry_to_smc.exit.i.for.body.i142_crit_edge: ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i142

si_convert_mc_reg_table_to_smc.exit:              ; preds = %si_convert_mc_reg_table_entry_to_smc.exit.i.si_convert_mc_reg_table_to_smc.exit_crit_edge, %if.end.si_convert_mc_reg_table_to_smc.exit_crit_edge
  %mc_reg_table_start = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 23
  %100 = ptrtoint ptr %mc_reg_table_start to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %mc_reg_table_start, align 4
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %3, i32 0, i32 20
  %102 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %sram_end, align 4
  %call29 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %101, ptr noundef %smc_mc_reg_table3, i32 noundef 1348, i32 noundef %103) #14
  ret i32 %call29
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_initialize_smc_cac_tables(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %2 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %asic_funcs, align 4
  %get_xclk = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %get_xclk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %get_xclk, align 4
  %call2 = tail call i32 %5(ptr noundef %adev) #14
  %div = udiv i32 %call2, 100
  %enable_cac = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 11
  %6 = ptrtoint ptr %enable_cac to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %enable_cac, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp = icmp eq i8 %7, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 1064) #18
  %tobool5.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %call8 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 558, i32 noundef 0) #14
  %and = and i32 %call8, -16777216
  %powertune_data = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 33
  %9 = ptrtoint ptr %powertune_data to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %powertune_data, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %or = or i32 %12, %and
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 558, i32 noundef %or, i32 noundef 0) #14
  %cac_leakage = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 27
  %13 = ptrtoint ptr %cac_leakage to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cac_leakage, align 4
  %dyn_powertune_data = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34
  %15 = ptrtoint ptr %dyn_powertune_data to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %dyn_powertune_data, align 4
  %16 = ptrtoint ptr %powertune_data to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %powertune_data, align 4
  %dc_cac = getelementptr inbounds %struct.si_powertune_data, ptr %17, i32 0, i32 8
  %18 = ptrtoint ptr %dc_cac to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %dc_cac, align 4
  %dc_pwr_value = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 6
  %20 = ptrtoint ptr %dc_pwr_value to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %dc_pwr_value, align 2
  %21 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %asic_funcs, align 4
  %get_xclk.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %22, i32 0, i32 6
  %23 = ptrtoint ptr %get_xclk.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %get_xclk.i, align 4
  %call.i = tail call i32 %24(ptr noundef %adev) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp eq i32 %call.i, 0
  br i1 %cmp.i, label %if.end7.si_calculate_cac_wintime.exit_crit_edge, label %if.end.i

if.end7.si_calculate_cac_wintime.exit_crit_edge:  ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_calculate_cac_wintime.exit

if.end.i:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 558, i32 noundef 0) #14
  %and2.i = lshr i32 %call1.i, 16
  %shr.i = and i32 %and2.i, 255
  %and3.i = and i32 %call1.i, 65535
  %mul.i = mul nuw nsw i32 %and3.i, 100
  %mul4.i = mul nuw nsw i32 %mul.i, %shr.i
  %div.i = udiv i32 %mul4.i, %call.i
  br label %si_calculate_cac_wintime.exit

si_calculate_cac_wintime.exit:                    ; preds = %if.end.i, %if.end7.si_calculate_cac_wintime.exit_crit_edge
  %retval.0.i = phi i32 [ %div.i, %if.end.i ], [ 0, %if.end7.si_calculate_cac_wintime.exit_crit_edge ]
  %wintime = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 2
  %25 = ptrtoint ptr %wintime to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %retval.0.i, ptr %wintime, align 4
  %26 = ptrtoint ptr %powertune_data to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %powertune_data, align 4
  %shift_n_default = getelementptr inbounds %struct.si_powertune_data, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %shift_n_default to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %shift_n_default, align 1
  %shift_n = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 5
  %30 = ptrtoint ptr %shift_n to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %shift_n, align 1
  %leakage_minimum_temperature = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 1
  %31 = ptrtoint ptr %leakage_minimum_temperature to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 80000, ptr %leakage_minimum_temperature, align 4
  %32 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %priv.i, align 4
  %cac_leakage_table.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18
  %34 = ptrtoint ptr %cac_leakage_table.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cac_leakage_table.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp174.not.i = icmp eq i32 %35, 0
  br i1 %cmp174.not.i, label %si_calculate_cac_wintime.exit.for.end.i_crit_edge, label %for.body.lr.ph.i

si_calculate_cac_wintime.exit.for.end.i_crit_edge: ; preds = %si_calculate_cac_wintime.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %si_calculate_cac_wintime.exit
  %entries.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 21, i32 18, i32 1
  %36 = ptrtoint ptr %entries.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %entries.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %vddc_max.0 = phi i16 [ 0, %for.body.lr.ph.i ], [ %40, %for.body.i.for.body.i_crit_edge ]
  %vddc_min.0 = phi i16 [ -1, %for.body.lr.ph.i ], [ %41, %for.body.i.for.body.i_crit_edge ]
  %i.075.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %union.amdgpu_cac_leakage_entry, ptr %37, i32 %i.075.i
  %38 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %arrayidx.i, align 4
  %40 = tail call i16 @llvm.umax.i16(i16 %39, i16 %vddc_max.0)
  %41 = tail call i16 @llvm.umin.i16(i16 %39, i16 %vddc_min.0)
  %inc.i = add nuw i32 %i.075.i, 1
  %exitcond.not = icmp eq i32 %inc.i, %35
  br i1 %exitcond.not, label %for.end.i.loopexit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.end.i.loopexit:                               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %phi.cast = zext i16 %41 to i32
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.i.loopexit, %si_calculate_cac_wintime.exit.for.end.i_crit_edge
  %vddc_max.2 = phi i16 [ 0, %si_calculate_cac_wintime.exit.for.end.i_crit_edge ], [ %40, %for.end.i.loopexit ]
  %vddc_min.2 = phi i32 [ 65535, %si_calculate_cac_wintime.exit.for.end.i_crit_edge ], [ %phi.cast, %for.end.i.loopexit ]
  %powertune_data.i = getelementptr inbounds %struct.si_power_info, ptr %33, i32 0, i32 33
  %42 = ptrtoint ptr %powertune_data.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %powertune_data.i, align 4
  %lkge_lut_v0_percent.i = getelementptr inbounds %struct.si_powertune_data, ptr %43, i32 0, i32 7
  %44 = ptrtoint ptr %lkge_lut_v0_percent.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %lkge_lut_v0_percent.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %45)
  %cmp22.i = icmp ugt i32 %45, 100
  br i1 %cmp22.i, label %for.end.i.if.then60_crit_edge, label %if.end32.i

for.end.i.if.then60_crit_edge:                    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then60

if.end32.i:                                       ; preds = %for.end.i
  %sub.i = sub nuw nsw i32 100, %45
  %mul.i134 = mul nuw nsw i32 %sub.i, %vddc_min.2
  %div.i135 = udiv i32 %mul.i134, 100
  %conv35.i = zext i16 %vddc_max.2 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %div.i135, i32 %conv35.i)
  %cmp36.i = icmp ugt i32 %div.i135, %conv35.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vddc_max.2)
  %cmp39.i = icmp eq i16 %vddc_max.2, 0
  %or.cond.i = or i1 %cmp39.i, %cmp36.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %mul.i134)
  %46 = icmp ult i32 %mul.i134, 100
  %or.cond73.i = or i1 %46, %or.cond.i
  br i1 %or.cond73.i, label %if.end32.i.if.then60_crit_edge, label %if.end20

if.end32.i.if.then60_crit_edge:                   ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then60

if.end20:                                         ; preds = %if.end32.i
  %sub.i137 = add nuw nsw i32 %conv35.i, 31
  %add.i = sub nsw i32 %sub.i137, %div.i135
  %div.i138 = sdiv i32 %add.i, 32
  %conv2.i = trunc i32 %div.i138 to i16
  %conv23 = and i32 %div.i138, 65535
  %mul.neg = mul i16 %conv2.i, -31
  %sub = add i16 %mul.neg, %vddc_max.2
  %enable_dte = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 13
  %47 = ptrtoint ptr %enable_dte to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %enable_dte, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool25.not = icmp eq i8 %48, 0
  br i1 %tobool25.not, label %lor.lhs.false, label %if.end20.if.then29_crit_edge

if.end20.if.then29_crit_edge:                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then29

lor.lhs.false:                                    ; preds = %if.end20
  %driver_calculate_cac_leakage = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 8
  %49 = ptrtoint ptr %driver_calculate_cac_leakage to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %driver_calculate_cac_leakage, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool27.not = icmp eq i8 %50, 0
  br i1 %tobool27.not, label %if.else, label %lor.lhs.false.if.then29_crit_edge

lor.lhs.false.if.then29_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then29

if.then29:                                        ; preds = %lor.lhs.false.if.then29_crit_edge, %if.end20.if.then29_crit_edge
  %dyn_powertune_data.i = getelementptr inbounds %struct.si_power_info, ptr %33, i32 0, i32 34
  br label %for.body.i141

for.body.i141:                                    ; preds = %for.inc18.i.for.body.i141_crit_edge, %if.then29
  %i.04.i = phi i32 [ 0, %if.then29 ], [ %inc19.i, %for.inc18.i.for.body.i141_crit_edge ]
  %51 = mul nuw nsw i32 %i.04.i, 4000
  %mul3.i = add nuw nsw i32 %51, 60000
  %conv1.i43.i.i.i = zext i32 %mul3.i to i64
  %shl.i44.i.i.i = shl nuw nsw i64 %conv1.i43.i.i.i, 32
  br label %for.body7.i

for.body7.i:                                      ; preds = %si_calculate_leakage_for_v_and_t.exit.i.for.body7.i_crit_edge, %for.body.i141
  %j.03.i = phi i32 [ 0, %for.body.i141 ], [ %inc.i142, %si_calculate_leakage_for_v_and_t.exit.i.for.body7.i_crit_edge ]
  %52 = trunc i32 %j.03.i to i16
  %53 = mul i16 %52, %conv2.i
  %conv11.i = sub i16 %vddc_max.2, %53
  %54 = ptrtoint ptr %powertune_data.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %powertune_data.i, align 4
  %56 = ptrtoint ptr %dyn_powertune_data.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %dyn_powertune_data.i, align 4
  %conv1.i.i.i.i = zext i32 %57 to i64
  %shl.i.i.i.i = shl nuw i64 %conv1.i.i.i.i, 32
  %call1.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i.i.i.i, i64 noundef 100) #14
  %conv1.i41.i.i.i = zext i16 %conv11.i to i64
  %shl.i42.i.i.i = shl nuw nsw i64 %conv1.i41.i.i.i, 32
  %call3.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i42.i.i.i, i64 noundef 1000) #14
  %call5.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i44.i.i.i, i64 noundef 1000) #14
  %t_slope6.i.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %55, i32 0, i32 5, i32 4
  %58 = ptrtoint ptr %t_slope6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %t_slope6.i.i.i, align 4
  %conv1.i45.i.i.i = zext i32 %59 to i64
  %shl.i46.i.i.i = shl nuw i64 %conv1.i45.i.i.i, 32
  %call8.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i46.i.i.i, i64 noundef 100000000) #14
  %t_intercept9.i.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %55, i32 0, i32 5, i32 5
  %60 = ptrtoint ptr %t_intercept9.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %t_intercept9.i.i.i, align 4
  %conv1.i47.i.i.i = zext i32 %61 to i64
  %shl.i48.i.i.i = shl nuw i64 %conv1.i47.i.i.i, 32
  %call11.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i48.i.i.i, i64 noundef 100000000) #14
  %av12.i.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %55, i32 0, i32 5, i32 2
  %62 = ptrtoint ptr %av12.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %av12.i.i.i, align 4
  %conv1.i49.i.i.i = zext i32 %63 to i64
  %shl.i50.i.i.i = shl nuw i64 %conv1.i49.i.i.i, 32
  %call14.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i50.i.i.i, i64 noundef 100000000) #14
  %bv15.i.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %55, i32 0, i32 5, i32 3
  %64 = ptrtoint ptr %bv15.i.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %bv15.i.i.i, align 4
  %conv1.i51.i.i.i = zext i32 %65 to i64
  %shl.i52.i.i.i = shl nuw i64 %conv1.i51.i.i.i, 32
  %call17.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i52.i.i.i, i64 noundef 100000000) #14
  %t_ref18.i.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %55, i32 0, i32 5, i32 6
  %66 = ptrtoint ptr %t_ref18.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %t_ref18.i.i.i, align 4
  %conv1.i53.i.i.i = zext i32 %67 to i64
  %shl.i54.i.i.i = shl nuw i64 %conv1.i53.i.i.i, 32
  %shr12.i.i.i.i.i = lshr i64 %call8.i.i.i, 63
  br label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge, %for.body7.i
  %shift.014.i.i.i.i.i = phi i32 [ 62, %for.body7.i ], [ %dec.i.i.i.i.i, %for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge ]
  %sh_prom.i.i.i.i.i = zext i32 %shift.014.i.i.i.i.i to i64
  %shr213.i.i.i.i.i = lshr i64 %call8.i.i.i, %sh_prom.i.i.i.i.i
  %and3.i.i.i.i.i = and i64 %shr213.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i.i.i.i, i64 %shr12.i.i.i.i.i)
  %cmp5.not.i.i.i.i.i = icmp eq i64 %and3.i.i.i.i.i, %shr12.i.i.i.i.i
  br i1 %cmp5.not.i.i.i.i.i, label %for.inc.i.i.i.i.i, label %for.body.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge

for.body.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge: ; preds = %for.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i.i.i.i

for.inc.i.i.i.i.i:                                ; preds = %for.body.i.i.i.i.i
  %dec.i.i.i.i.i = add nsw i32 %shift.014.i.i.i.i.i, -1
  %cmp.not.i.i.i.i.i = icmp eq i32 %dec.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %for.inc.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge, label %for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge

for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge:   ; preds = %for.inc.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i.i.i

for.inc.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge: ; preds = %for.inc.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i.i.i.i

drm_fixp_msbset.exit.i.i.i.i:                     ; preds = %for.inc.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge, %for.body.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge
  %shift.0.lcssa.i.i.i.i.i = phi i32 [ 0, %for.inc.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge ], [ %shift.014.i.i.i.i.i, %for.body.i.i.i.i.i.drm_fixp_msbset.exit.i.i.i.i_crit_edge ]
  %shr12.i33.i.i.i.i = lshr i64 %call3.i.i.i, 63
  br label %for.body.i39.i.i.i.i

for.body.i39.i.i.i.i:                             ; preds = %for.inc.i42.i.i.i.i.for.body.i39.i.i.i.i_crit_edge, %drm_fixp_msbset.exit.i.i.i.i
  %shift.014.i34.i.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i.i.i.i ], [ %dec.i40.i.i.i.i, %for.inc.i42.i.i.i.i.for.body.i39.i.i.i.i_crit_edge ]
  %sh_prom.i35.i.i.i.i = zext i32 %shift.014.i34.i.i.i.i to i64
  %shr213.i36.i.i.i.i = lshr i64 %call3.i.i.i, %sh_prom.i35.i.i.i.i
  %and3.i37.i.i.i.i = and i64 %shr213.i36.i.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i.i.i.i, i64 %shr12.i33.i.i.i.i)
  %cmp5.not.i38.i.i.i.i = icmp eq i64 %and3.i37.i.i.i.i, %shr12.i33.i.i.i.i
  br i1 %cmp5.not.i38.i.i.i.i, label %for.inc.i42.i.i.i.i, label %for.body.i39.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge

for.body.i39.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge: ; preds = %for.body.i39.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i.i.i.i

for.inc.i42.i.i.i.i:                              ; preds = %for.body.i39.i.i.i.i
  %dec.i40.i.i.i.i = add nsw i32 %shift.014.i34.i.i.i.i, -1
  %cmp.not.i41.i.i.i.i = icmp eq i32 %dec.i40.i.i.i.i, 0
  br i1 %cmp.not.i41.i.i.i.i, label %for.inc.i42.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge, label %for.inc.i42.i.i.i.i.for.body.i39.i.i.i.i_crit_edge

for.inc.i42.i.i.i.i.for.body.i39.i.i.i.i_crit_edge: ; preds = %for.inc.i42.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i.i.i.i

for.inc.i42.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge: ; preds = %for.inc.i42.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i.i.i.i

drm_fixp_msbset.exit44.i.i.i.i:                   ; preds = %for.inc.i42.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge, %for.body.i39.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge
  %shift.0.lcssa.i43.i.i.i.i = phi i32 [ 0, %for.inc.i42.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge ], [ %shift.014.i34.i.i.i.i, %for.body.i39.i.i.i.i.drm_fixp_msbset.exit44.i.i.i.i_crit_edge ]
  %add.i.i.i.i = add i32 %shift.0.lcssa.i43.i.i.i.i, %shift.0.lcssa.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i.i.i.i)
  %cmp.i.i.i.i = icmp ugt i32 %add.i.i.i.i, 61
  br i1 %cmp.i.i.i.i, label %if.end.i.i.i.i, label %if.end11.thread.i.i.i.i

if.end11.thread.i.i.i.i:                          ; preds = %drm_fixp_msbset.exit44.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i.i.i.i = mul i64 %call8.i.i.i, %call3.i.i.i
  br label %if.then13.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %drm_fixp_msbset.exit44.i.i.i.i
  %sub.i.i.i.i = add i32 %add.i.i.i.i, -61
  %shr.i.i.i.i = lshr i32 %sub.i.i.i.i, 1
  %and.i.i.i.i = and i32 %sub.i.i.i.i, 1
  %add2.i.i.i.i = add nuw nsw i32 %shr.i.i.i.i, %and.i.i.i.i
  %sh_prom.i.i.i.i = zext i32 %add2.i.i.i.i to i64
  %shr3.i.i.i.i = ashr i64 %call8.i.i.i, %sh_prom.i.i.i.i
  %sh_prom5.i.i.i.i = zext i32 %shr.i.i.i.i to i64
  %shr6.i.i.i.i = ashr i64 %call3.i.i.i, %sh_prom5.i.i.i.i
  %mul.i.i.i.i = mul i64 %shr3.i.i.i.i, %shr6.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i.i.i.i)
  %cmp7.i.i.i.i = icmp ugt i32 %sub.i.i.i.i, 32
  br i1 %cmp7.i.i.i.i, label %if.then8.i.i.i.i, label %if.end11.i.i.i.i

if.then8.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i.i.i.i = add i32 %add.i.i.i.i, -93
  %sh_prom10.i.i.i.i = zext i32 %sub9.i.i.i.i to i64
  %shl.i55.i.i.i = shl i64 %mul.i.i.i.i, %sh_prom10.i.i.i.i
  br label %drm_fixp_mul.exit.i.i.i

if.end11.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i.i.i.i)
  %cmp12.not.i.i.i.i = icmp eq i32 %sub.i.i.i.i, 32
  br i1 %cmp12.not.i.i.i.i, label %if.end11.i.i.i.i.drm_fixp_mul.exit.i.i.i_crit_edge, label %if.end11.i.i.i.i.if.then13.i.i.i.i_crit_edge

if.end11.i.i.i.i.if.then13.i.i.i.i_crit_edge:     ; preds = %if.end11.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i.i.i.i

if.end11.i.i.i.i.drm_fixp_mul.exit.i.i.i_crit_edge: ; preds = %if.end11.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit.i.i.i

if.then13.i.i.i.i:                                ; preds = %if.end11.i.i.i.i.if.then13.i.i.i.i_crit_edge, %if.end11.thread.i.i.i.i
  %shift.05056.i.i.i.i = phi i32 [ 0, %if.end11.thread.i.i.i.i ], [ %sub.i.i.i.i, %if.end11.i.i.i.i.if.then13.i.i.i.i_crit_edge ]
  %mul5155.i.i.i.i = phi i64 [ %mul48.i.i.i.i, %if.end11.thread.i.i.i.i ], [ %mul.i.i.i.i, %if.end11.i.i.i.i.if.then13.i.i.i.i_crit_edge ]
  %sub14.i.i.i.i = sub nuw nsw i32 32, %shift.05056.i.i.i.i
  %sh_prom15.i.i.i.i = zext i32 %sub14.i.i.i.i to i64
  %shr16.i.i.i.i = ashr i64 %mul5155.i.i.i.i, %sh_prom15.i.i.i.i
  br label %drm_fixp_mul.exit.i.i.i

drm_fixp_mul.exit.i.i.i:                          ; preds = %if.then13.i.i.i.i, %if.end11.i.i.i.i.drm_fixp_mul.exit.i.i.i_crit_edge, %if.then8.i.i.i.i
  %retval.0.i.i.i.i = phi i64 [ %shl.i55.i.i.i, %if.then8.i.i.i.i ], [ %shr16.i.i.i.i, %if.then13.i.i.i.i ], [ %mul.i.i.i.i, %if.end11.i.i.i.i.drm_fixp_mul.exit.i.i.i_crit_edge ]
  %add.i.i.i = add i64 %retval.0.i.i.i.i, %call11.i.i.i
  %shr12.i.i56.i.i.i = lshr i64 %add.i.i.i, 63
  br label %for.body.i.i62.i.i.i

for.body.i.i62.i.i.i:                             ; preds = %for.inc.i.i65.i.i.i.for.body.i.i62.i.i.i_crit_edge, %drm_fixp_mul.exit.i.i.i
  %shift.014.i.i57.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit.i.i.i ], [ %dec.i.i63.i.i.i, %for.inc.i.i65.i.i.i.for.body.i.i62.i.i.i_crit_edge ]
  %sh_prom.i.i58.i.i.i = zext i32 %shift.014.i.i57.i.i.i to i64
  %shr213.i.i59.i.i.i = lshr i64 %add.i.i.i, %sh_prom.i.i58.i.i.i
  %and3.i.i60.i.i.i = and i64 %shr213.i.i59.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i60.i.i.i, i64 %shr12.i.i56.i.i.i)
  %cmp5.not.i.i61.i.i.i = icmp eq i64 %and3.i.i60.i.i.i, %shr12.i.i56.i.i.i
  br i1 %cmp5.not.i.i61.i.i.i, label %for.inc.i.i65.i.i.i, label %for.body.i.i62.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge

for.body.i.i62.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge: ; preds = %for.body.i.i62.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i68.i.i.i

for.inc.i.i65.i.i.i:                              ; preds = %for.body.i.i62.i.i.i
  %dec.i.i63.i.i.i = add nsw i32 %shift.014.i.i57.i.i.i, -1
  %cmp.not.i.i64.i.i.i = icmp eq i32 %dec.i.i63.i.i.i, 0
  br i1 %cmp.not.i.i64.i.i.i, label %for.inc.i.i65.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge, label %for.inc.i.i65.i.i.i.for.body.i.i62.i.i.i_crit_edge

for.inc.i.i65.i.i.i.for.body.i.i62.i.i.i_crit_edge: ; preds = %for.inc.i.i65.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i62.i.i.i

for.inc.i.i65.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge: ; preds = %for.inc.i.i65.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i68.i.i.i

drm_fixp_msbset.exit.i68.i.i.i:                   ; preds = %for.inc.i.i65.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge, %for.body.i.i62.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge
  %shift.0.lcssa.i.i66.i.i.i = phi i32 [ 0, %for.inc.i.i65.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge ], [ %shift.014.i.i57.i.i.i, %for.body.i.i62.i.i.i.drm_fixp_msbset.exit.i68.i.i.i_crit_edge ]
  %shr12.i33.i67.i.i.i = lshr i64 %call5.i.i.i, 63
  br label %for.body.i39.i74.i.i.i

for.body.i39.i74.i.i.i:                           ; preds = %for.inc.i42.i77.i.i.i.for.body.i39.i74.i.i.i_crit_edge, %drm_fixp_msbset.exit.i68.i.i.i
  %shift.014.i34.i69.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i68.i.i.i ], [ %dec.i40.i75.i.i.i, %for.inc.i42.i77.i.i.i.for.body.i39.i74.i.i.i_crit_edge ]
  %sh_prom.i35.i70.i.i.i = zext i32 %shift.014.i34.i69.i.i.i to i64
  %shr213.i36.i71.i.i.i = lshr i64 %call5.i.i.i, %sh_prom.i35.i70.i.i.i
  %and3.i37.i72.i.i.i = and i64 %shr213.i36.i71.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i72.i.i.i, i64 %shr12.i33.i67.i.i.i)
  %cmp5.not.i38.i73.i.i.i = icmp eq i64 %and3.i37.i72.i.i.i, %shr12.i33.i67.i.i.i
  br i1 %cmp5.not.i38.i73.i.i.i, label %for.inc.i42.i77.i.i.i, label %for.body.i39.i74.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge

for.body.i39.i74.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge: ; preds = %for.body.i39.i74.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i81.i.i.i

for.inc.i42.i77.i.i.i:                            ; preds = %for.body.i39.i74.i.i.i
  %dec.i40.i75.i.i.i = add nsw i32 %shift.014.i34.i69.i.i.i, -1
  %cmp.not.i41.i76.i.i.i = icmp eq i32 %dec.i40.i75.i.i.i, 0
  br i1 %cmp.not.i41.i76.i.i.i, label %for.inc.i42.i77.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge, label %for.inc.i42.i77.i.i.i.for.body.i39.i74.i.i.i_crit_edge

for.inc.i42.i77.i.i.i.for.body.i39.i74.i.i.i_crit_edge: ; preds = %for.inc.i42.i77.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i74.i.i.i

for.inc.i42.i77.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge: ; preds = %for.inc.i42.i77.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i81.i.i.i

drm_fixp_msbset.exit44.i81.i.i.i:                 ; preds = %for.inc.i42.i77.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge, %for.body.i39.i74.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge
  %shift.0.lcssa.i43.i78.i.i.i = phi i32 [ 0, %for.inc.i42.i77.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge ], [ %shift.014.i34.i69.i.i.i, %for.body.i39.i74.i.i.i.drm_fixp_msbset.exit44.i81.i.i.i_crit_edge ]
  %add.i79.i.i.i = add i32 %shift.0.lcssa.i43.i78.i.i.i, %shift.0.lcssa.i.i66.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i79.i.i.i)
  %cmp.i80.i.i.i = icmp ugt i32 %add.i79.i.i.i, 61
  br i1 %cmp.i80.i.i.i, label %if.end.i94.i.i.i, label %if.end11.thread.i83.i.i.i

if.end11.thread.i83.i.i.i:                        ; preds = %drm_fixp_msbset.exit44.i81.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i82.i.i.i = mul i64 %add.i.i.i, %call5.i.i.i
  br label %if.then13.i106.i.i.i

if.end.i94.i.i.i:                                 ; preds = %drm_fixp_msbset.exit44.i81.i.i.i
  %sub.i84.i.i.i = add i32 %add.i79.i.i.i, -61
  %shr.i85.i.i.i = lshr i32 %sub.i84.i.i.i, 1
  %and.i86.i.i.i = and i32 %sub.i84.i.i.i, 1
  %add2.i87.i.i.i = add nuw nsw i32 %shr.i85.i.i.i, %and.i86.i.i.i
  %sh_prom.i88.i.i.i = zext i32 %add2.i87.i.i.i to i64
  %shr3.i89.i.i.i = ashr i64 %add.i.i.i, %sh_prom.i88.i.i.i
  %sh_prom5.i90.i.i.i = zext i32 %shr.i85.i.i.i to i64
  %shr6.i91.i.i.i = ashr i64 %call5.i.i.i, %sh_prom5.i90.i.i.i
  %mul.i92.i.i.i = mul i64 %shr3.i89.i.i.i, %shr6.i91.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i84.i.i.i)
  %cmp7.i93.i.i.i = icmp ugt i32 %sub.i84.i.i.i, 32
  br i1 %cmp7.i93.i.i.i, label %if.then8.i98.i.i.i, label %if.end11.i100.i.i.i

if.then8.i98.i.i.i:                               ; preds = %if.end.i94.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i95.i.i.i = add i32 %add.i79.i.i.i, -93
  %sh_prom10.i96.i.i.i = zext i32 %sub9.i95.i.i.i to i64
  %shl.i97.i.i.i = shl i64 %mul.i92.i.i.i, %sh_prom10.i96.i.i.i
  br label %drm_fixp_mul.exit108.i.i.i

if.end11.i100.i.i.i:                              ; preds = %if.end.i94.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i84.i.i.i)
  %cmp12.not.i99.i.i.i = icmp eq i32 %sub.i84.i.i.i, 32
  br i1 %cmp12.not.i99.i.i.i, label %if.end11.i100.i.i.i.drm_fixp_mul.exit108.i.i.i_crit_edge, label %if.end11.i100.i.i.i.if.then13.i106.i.i.i_crit_edge

if.end11.i100.i.i.i.if.then13.i106.i.i.i_crit_edge: ; preds = %if.end11.i100.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i106.i.i.i

if.end11.i100.i.i.i.drm_fixp_mul.exit108.i.i.i_crit_edge: ; preds = %if.end11.i100.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit108.i.i.i

if.then13.i106.i.i.i:                             ; preds = %if.end11.i100.i.i.i.if.then13.i106.i.i.i_crit_edge, %if.end11.thread.i83.i.i.i
  %shift.05056.i101.i.i.i = phi i32 [ 0, %if.end11.thread.i83.i.i.i ], [ %sub.i84.i.i.i, %if.end11.i100.i.i.i.if.then13.i106.i.i.i_crit_edge ]
  %mul5155.i102.i.i.i = phi i64 [ %mul48.i82.i.i.i, %if.end11.thread.i83.i.i.i ], [ %mul.i92.i.i.i, %if.end11.i100.i.i.i.if.then13.i106.i.i.i_crit_edge ]
  %sub14.i103.i.i.i = sub nuw nsw i32 32, %shift.05056.i101.i.i.i
  %sh_prom15.i104.i.i.i = zext i32 %sub14.i103.i.i.i to i64
  %shr16.i105.i.i.i = ashr i64 %mul5155.i102.i.i.i, %sh_prom15.i104.i.i.i
  br label %drm_fixp_mul.exit108.i.i.i

drm_fixp_mul.exit108.i.i.i:                       ; preds = %if.then13.i106.i.i.i, %if.end11.i100.i.i.i.drm_fixp_mul.exit108.i.i.i_crit_edge, %if.then8.i98.i.i.i
  %retval.0.i107.i.i.i = phi i64 [ %shl.i97.i.i.i, %if.then8.i98.i.i.i ], [ %shr16.i105.i.i.i, %if.then13.i106.i.i.i ], [ %mul.i92.i.i.i, %if.end11.i100.i.i.i.drm_fixp_mul.exit108.i.i.i_crit_edge ]
  %call22.i.i.i = tail call fastcc i64 @drm_fixp_exp(i64 noundef %retval.0.i107.i.i.i) #14
  br label %for.body.i.i115.i.i.i

for.body.i.i115.i.i.i:                            ; preds = %for.inc.i.i118.i.i.i.for.body.i.i115.i.i.i_crit_edge, %drm_fixp_mul.exit108.i.i.i
  %shift.014.i.i110.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit108.i.i.i ], [ %dec.i.i116.i.i.i, %for.inc.i.i118.i.i.i.for.body.i.i115.i.i.i_crit_edge ]
  %sh_prom.i.i111.i.i.i = zext i32 %shift.014.i.i110.i.i.i to i64
  %shr213.i.i112.i.i.i = lshr i64 %add.i.i.i, %sh_prom.i.i111.i.i.i
  %and3.i.i113.i.i.i = and i64 %shr213.i.i112.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i113.i.i.i, i64 %shr12.i.i56.i.i.i)
  %cmp5.not.i.i114.i.i.i = icmp eq i64 %and3.i.i113.i.i.i, %shr12.i.i56.i.i.i
  br i1 %cmp5.not.i.i114.i.i.i, label %for.inc.i.i118.i.i.i, label %for.body.i.i115.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge

for.body.i.i115.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge: ; preds = %for.body.i.i115.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i121.i.i.i

for.inc.i.i118.i.i.i:                             ; preds = %for.body.i.i115.i.i.i
  %dec.i.i116.i.i.i = add nsw i32 %shift.014.i.i110.i.i.i, -1
  %cmp.not.i.i117.i.i.i = icmp eq i32 %dec.i.i116.i.i.i, 0
  br i1 %cmp.not.i.i117.i.i.i, label %for.inc.i.i118.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge, label %for.inc.i.i118.i.i.i.for.body.i.i115.i.i.i_crit_edge

for.inc.i.i118.i.i.i.for.body.i.i115.i.i.i_crit_edge: ; preds = %for.inc.i.i118.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i115.i.i.i

for.inc.i.i118.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge: ; preds = %for.inc.i.i118.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i121.i.i.i

drm_fixp_msbset.exit.i121.i.i.i:                  ; preds = %for.inc.i.i118.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge, %for.body.i.i115.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge
  %shift.0.lcssa.i.i119.i.i.i = phi i32 [ 0, %for.inc.i.i118.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge ], [ %shift.014.i.i110.i.i.i, %for.body.i.i115.i.i.i.drm_fixp_msbset.exit.i121.i.i.i_crit_edge ]
  %shr12.i33.i120.i.i.i = lshr i64 %conv1.i53.i.i.i, 31
  br label %for.body.i39.i127.i.i.i

for.body.i39.i127.i.i.i:                          ; preds = %for.inc.i42.i130.i.i.i.for.body.i39.i127.i.i.i_crit_edge, %drm_fixp_msbset.exit.i121.i.i.i
  %shift.014.i34.i122.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i121.i.i.i ], [ %dec.i40.i128.i.i.i, %for.inc.i42.i130.i.i.i.for.body.i39.i127.i.i.i_crit_edge ]
  %sh_prom.i35.i123.i.i.i = zext i32 %shift.014.i34.i122.i.i.i to i64
  %shr213.i36.i124.i.i.i = lshr i64 %shl.i54.i.i.i, %sh_prom.i35.i123.i.i.i
  %and3.i37.i125.i.i.i = and i64 %shr213.i36.i124.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i125.i.i.i, i64 %shr12.i33.i120.i.i.i)
  %cmp5.not.i38.i126.i.i.i = icmp eq i64 %and3.i37.i125.i.i.i, %shr12.i33.i120.i.i.i
  br i1 %cmp5.not.i38.i126.i.i.i, label %for.inc.i42.i130.i.i.i, label %for.body.i39.i127.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge

for.body.i39.i127.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge: ; preds = %for.body.i39.i127.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i134.i.i.i

for.inc.i42.i130.i.i.i:                           ; preds = %for.body.i39.i127.i.i.i
  %dec.i40.i128.i.i.i = add nsw i32 %shift.014.i34.i122.i.i.i, -1
  %cmp.not.i41.i129.i.i.i = icmp eq i32 %dec.i40.i128.i.i.i, 0
  br i1 %cmp.not.i41.i129.i.i.i, label %for.inc.i42.i130.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge, label %for.inc.i42.i130.i.i.i.for.body.i39.i127.i.i.i_crit_edge

for.inc.i42.i130.i.i.i.for.body.i39.i127.i.i.i_crit_edge: ; preds = %for.inc.i42.i130.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i127.i.i.i

for.inc.i42.i130.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge: ; preds = %for.inc.i42.i130.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i134.i.i.i

drm_fixp_msbset.exit44.i134.i.i.i:                ; preds = %for.inc.i42.i130.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge, %for.body.i39.i127.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge
  %shift.0.lcssa.i43.i131.i.i.i = phi i32 [ 0, %for.inc.i42.i130.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge ], [ %shift.014.i34.i122.i.i.i, %for.body.i39.i127.i.i.i.drm_fixp_msbset.exit44.i134.i.i.i_crit_edge ]
  %add.i132.i.i.i = add i32 %shift.0.lcssa.i43.i131.i.i.i, %shift.0.lcssa.i.i119.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i132.i.i.i)
  %cmp.i133.i.i.i = icmp ugt i32 %add.i132.i.i.i, 61
  br i1 %cmp.i133.i.i.i, label %if.end.i147.i.i.i, label %if.end11.thread.i136.i.i.i

if.end11.thread.i136.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i134.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i135.i.i.i = mul i64 %add.i.i.i, %shl.i54.i.i.i
  br label %if.then13.i159.i.i.i

if.end.i147.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i134.i.i.i
  %sub.i137.i.i.i = add i32 %add.i132.i.i.i, -61
  %shr.i138.i.i.i = lshr i32 %sub.i137.i.i.i, 1
  %and.i139.i.i.i = and i32 %sub.i137.i.i.i, 1
  %add2.i140.i.i.i = add nuw nsw i32 %shr.i138.i.i.i, %and.i139.i.i.i
  %sh_prom.i141.i.i.i = zext i32 %add2.i140.i.i.i to i64
  %shr3.i142.i.i.i = ashr i64 %add.i.i.i, %sh_prom.i141.i.i.i
  %sh_prom5.i143.i.i.i = zext i32 %shr.i138.i.i.i to i64
  %shr6.i144.i.i.i = ashr i64 %shl.i54.i.i.i, %sh_prom5.i143.i.i.i
  %mul.i145.i.i.i = mul i64 %shr3.i142.i.i.i, %shr6.i144.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i137.i.i.i)
  %cmp7.i146.i.i.i = icmp ugt i32 %sub.i137.i.i.i, 32
  br i1 %cmp7.i146.i.i.i, label %if.then8.i151.i.i.i, label %if.end11.i153.i.i.i

if.then8.i151.i.i.i:                              ; preds = %if.end.i147.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i148.i.i.i = add i32 %add.i132.i.i.i, -93
  %sh_prom10.i149.i.i.i = zext i32 %sub9.i148.i.i.i to i64
  %shl.i150.i.i.i = shl i64 %mul.i145.i.i.i, %sh_prom10.i149.i.i.i
  br label %drm_fixp_mul.exit161.i.i.i

if.end11.i153.i.i.i:                              ; preds = %if.end.i147.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i137.i.i.i)
  %cmp12.not.i152.i.i.i = icmp eq i32 %sub.i137.i.i.i, 32
  br i1 %cmp12.not.i152.i.i.i, label %if.end11.i153.i.i.i.drm_fixp_mul.exit161.i.i.i_crit_edge, label %if.end11.i153.i.i.i.if.then13.i159.i.i.i_crit_edge

if.end11.i153.i.i.i.if.then13.i159.i.i.i_crit_edge: ; preds = %if.end11.i153.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i159.i.i.i

if.end11.i153.i.i.i.drm_fixp_mul.exit161.i.i.i_crit_edge: ; preds = %if.end11.i153.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit161.i.i.i

if.then13.i159.i.i.i:                             ; preds = %if.end11.i153.i.i.i.if.then13.i159.i.i.i_crit_edge, %if.end11.thread.i136.i.i.i
  %shift.05056.i154.i.i.i = phi i32 [ 0, %if.end11.thread.i136.i.i.i ], [ %sub.i137.i.i.i, %if.end11.i153.i.i.i.if.then13.i159.i.i.i_crit_edge ]
  %mul5155.i155.i.i.i = phi i64 [ %mul48.i135.i.i.i, %if.end11.thread.i136.i.i.i ], [ %mul.i145.i.i.i, %if.end11.i153.i.i.i.if.then13.i159.i.i.i_crit_edge ]
  %sub14.i156.i.i.i = sub nuw nsw i32 32, %shift.05056.i154.i.i.i
  %sh_prom15.i157.i.i.i = zext i32 %sub14.i156.i.i.i to i64
  %shr16.i158.i.i.i = ashr i64 %mul5155.i155.i.i.i, %sh_prom15.i157.i.i.i
  br label %drm_fixp_mul.exit161.i.i.i

drm_fixp_mul.exit161.i.i.i:                       ; preds = %if.then13.i159.i.i.i, %if.end11.i153.i.i.i.drm_fixp_mul.exit161.i.i.i_crit_edge, %if.then8.i151.i.i.i
  %retval.0.i160.i.i.i = phi i64 [ %shl.i150.i.i.i, %if.then8.i151.i.i.i ], [ %shr16.i158.i.i.i, %if.then13.i159.i.i.i ], [ %mul.i145.i.i.i, %if.end11.i153.i.i.i.drm_fixp_mul.exit161.i.i.i_crit_edge ]
  %call24.i.i.i = tail call fastcc i64 @drm_fixp_exp(i64 noundef %retval.0.i160.i.i.i) #14
  %shr12.i.i162.i.i.i = lshr i64 %call22.i.i.i, 63
  br label %for.body.i.i168.i.i.i

for.body.i.i168.i.i.i:                            ; preds = %for.inc.i.i171.i.i.i.for.body.i.i168.i.i.i_crit_edge, %drm_fixp_mul.exit161.i.i.i
  %shift.014.i.i163.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit161.i.i.i ], [ %dec.i.i169.i.i.i, %for.inc.i.i171.i.i.i.for.body.i.i168.i.i.i_crit_edge ]
  %sh_prom.i.i164.i.i.i = zext i32 %shift.014.i.i163.i.i.i to i64
  %shr213.i.i165.i.i.i = lshr i64 %call22.i.i.i, %sh_prom.i.i164.i.i.i
  %and3.i.i166.i.i.i = and i64 %shr213.i.i165.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i166.i.i.i, i64 %shr12.i.i162.i.i.i)
  %cmp5.not.i.i167.i.i.i = icmp eq i64 %and3.i.i166.i.i.i, %shr12.i.i162.i.i.i
  br i1 %cmp5.not.i.i167.i.i.i, label %for.inc.i.i171.i.i.i, label %for.body.i.i168.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge

for.body.i.i168.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge: ; preds = %for.body.i.i168.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_div.exit.i.i.i

for.inc.i.i171.i.i.i:                             ; preds = %for.body.i.i168.i.i.i
  %dec.i.i169.i.i.i = add nsw i32 %shift.014.i.i163.i.i.i, -1
  %cmp.not.i.i170.i.i.i = icmp eq i32 %dec.i.i169.i.i.i, 0
  br i1 %cmp.not.i.i170.i.i.i, label %for.inc.i.i171.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge, label %for.inc.i.i171.i.i.i.for.body.i.i168.i.i.i_crit_edge

for.inc.i.i171.i.i.i.for.body.i.i168.i.i.i_crit_edge: ; preds = %for.inc.i.i171.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i168.i.i.i

for.inc.i.i171.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge: ; preds = %for.inc.i.i171.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_div.exit.i.i.i

drm_fixp_div.exit.i.i.i:                          ; preds = %for.inc.i.i171.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge, %for.body.i.i168.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge
  %shift.0.lcssa.i.i172.i.i.i = phi i32 [ 0, %for.inc.i.i171.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge ], [ %shift.014.i.i163.i.i.i, %for.body.i.i168.i.i.i.drm_fixp_div.exit.i.i.i_crit_edge ]
  %sub.i173.i.i.i = sub i32 62, %shift.0.lcssa.i.i172.i.i.i
  %sh_prom.i174.i.i.i = zext i32 %sub.i173.i.i.i to i64
  %shl.i175.i.i.i = shl i64 %call22.i.i.i, %sh_prom.i174.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i173.i.i.i)
  %cmp.i176.i.i.i = icmp ult i32 %sub.i173.i.i.i, 32
  %sub1.i.i.i.i = add i32 %shift.0.lcssa.i.i172.i.i.i, -30
  %narrow.i.i.i.i = select i1 %cmp.i176.i.i.i, i32 %sub1.i.i.i.i, i32 0
  %shr.i177.i.i.i = zext i32 %narrow.i.i.i.i to i64
  %b.addr.0.i.i.i.i = ashr i64 %call24.i.i.i, %shr.i177.i.i.i
  %call3.i.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i175.i.i.i, i64 noundef %b.addr.0.i.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i173.i.i.i)
  %cmp4.i.i.i.i = icmp ugt i32 %sub.i173.i.i.i, 32
  %sub6.i.i.i.i = sub i32 30, %shift.0.lcssa.i.i172.i.i.i
  %narrow19.i.i.i.i = select i1 %cmp4.i.i.i.i, i32 %sub6.i.i.i.i, i32 0
  %shr8.i.i.i.i = zext i32 %narrow19.i.i.i.i to i64
  %retval.0.i178.i.i.i = ashr i64 %call3.i.i.i.i, %shr8.i.i.i.i
  %shr12.i.i180.i.i.i = lshr i64 %call17.i.i.i, 63
  br label %for.body.i.i186.i.i.i

for.body.i.i186.i.i.i:                            ; preds = %for.inc.i.i189.i.i.i.for.body.i.i186.i.i.i_crit_edge, %drm_fixp_div.exit.i.i.i
  %shift.014.i.i181.i.i.i = phi i32 [ 62, %drm_fixp_div.exit.i.i.i ], [ %dec.i.i187.i.i.i, %for.inc.i.i189.i.i.i.for.body.i.i186.i.i.i_crit_edge ]
  %sh_prom.i.i182.i.i.i = zext i32 %shift.014.i.i181.i.i.i to i64
  %shr213.i.i183.i.i.i = lshr i64 %call17.i.i.i, %sh_prom.i.i182.i.i.i
  %and3.i.i184.i.i.i = and i64 %shr213.i.i183.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i184.i.i.i, i64 %shr12.i.i180.i.i.i)
  %cmp5.not.i.i185.i.i.i = icmp eq i64 %and3.i.i184.i.i.i, %shr12.i.i180.i.i.i
  br i1 %cmp5.not.i.i185.i.i.i, label %for.inc.i.i189.i.i.i, label %for.body.i.i186.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge

for.body.i.i186.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge: ; preds = %for.body.i.i186.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i192.i.i.i

for.inc.i.i189.i.i.i:                             ; preds = %for.body.i.i186.i.i.i
  %dec.i.i187.i.i.i = add nsw i32 %shift.014.i.i181.i.i.i, -1
  %cmp.not.i.i188.i.i.i = icmp eq i32 %dec.i.i187.i.i.i, 0
  br i1 %cmp.not.i.i188.i.i.i, label %for.inc.i.i189.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge, label %for.inc.i.i189.i.i.i.for.body.i.i186.i.i.i_crit_edge

for.inc.i.i189.i.i.i.for.body.i.i186.i.i.i_crit_edge: ; preds = %for.inc.i.i189.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i186.i.i.i

for.inc.i.i189.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge: ; preds = %for.inc.i.i189.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i192.i.i.i

drm_fixp_msbset.exit.i192.i.i.i:                  ; preds = %for.inc.i.i189.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge, %for.body.i.i186.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge
  %shift.0.lcssa.i.i190.i.i.i = phi i32 [ 0, %for.inc.i.i189.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge ], [ %shift.014.i.i181.i.i.i, %for.body.i.i186.i.i.i.drm_fixp_msbset.exit.i192.i.i.i_crit_edge ]
  br label %for.body.i39.i198.i.i.i

for.body.i39.i198.i.i.i:                          ; preds = %for.inc.i42.i201.i.i.i.for.body.i39.i198.i.i.i_crit_edge, %drm_fixp_msbset.exit.i192.i.i.i
  %shift.014.i34.i193.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i192.i.i.i ], [ %dec.i40.i199.i.i.i, %for.inc.i42.i201.i.i.i.for.body.i39.i198.i.i.i_crit_edge ]
  %sh_prom.i35.i194.i.i.i = zext i32 %shift.014.i34.i193.i.i.i to i64
  %shr213.i36.i195.i.i.i = lshr i64 %call3.i.i.i, %sh_prom.i35.i194.i.i.i
  %and3.i37.i196.i.i.i = and i64 %shr213.i36.i195.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i196.i.i.i, i64 %shr12.i33.i.i.i.i)
  %cmp5.not.i38.i197.i.i.i = icmp eq i64 %and3.i37.i196.i.i.i, %shr12.i33.i.i.i.i
  br i1 %cmp5.not.i38.i197.i.i.i, label %for.inc.i42.i201.i.i.i, label %for.body.i39.i198.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge

for.body.i39.i198.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge: ; preds = %for.body.i39.i198.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i205.i.i.i

for.inc.i42.i201.i.i.i:                           ; preds = %for.body.i39.i198.i.i.i
  %dec.i40.i199.i.i.i = add nsw i32 %shift.014.i34.i193.i.i.i, -1
  %cmp.not.i41.i200.i.i.i = icmp eq i32 %dec.i40.i199.i.i.i, 0
  br i1 %cmp.not.i41.i200.i.i.i, label %for.inc.i42.i201.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge, label %for.inc.i42.i201.i.i.i.for.body.i39.i198.i.i.i_crit_edge

for.inc.i42.i201.i.i.i.for.body.i39.i198.i.i.i_crit_edge: ; preds = %for.inc.i42.i201.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i198.i.i.i

for.inc.i42.i201.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge: ; preds = %for.inc.i42.i201.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i205.i.i.i

drm_fixp_msbset.exit44.i205.i.i.i:                ; preds = %for.inc.i42.i201.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge, %for.body.i39.i198.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge
  %shift.0.lcssa.i43.i202.i.i.i = phi i32 [ 0, %for.inc.i42.i201.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge ], [ %shift.014.i34.i193.i.i.i, %for.body.i39.i198.i.i.i.drm_fixp_msbset.exit44.i205.i.i.i_crit_edge ]
  %add.i203.i.i.i = add i32 %shift.0.lcssa.i43.i202.i.i.i, %shift.0.lcssa.i.i190.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i203.i.i.i)
  %cmp.i204.i.i.i = icmp ugt i32 %add.i203.i.i.i, 61
  br i1 %cmp.i204.i.i.i, label %if.end.i218.i.i.i, label %if.end11.thread.i207.i.i.i

if.end11.thread.i207.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i205.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i206.i.i.i = mul i64 %call17.i.i.i, %call3.i.i.i
  br label %if.then13.i230.i.i.i

if.end.i218.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i205.i.i.i
  %sub.i208.i.i.i = add i32 %add.i203.i.i.i, -61
  %shr.i209.i.i.i = lshr i32 %sub.i208.i.i.i, 1
  %and.i210.i.i.i = and i32 %sub.i208.i.i.i, 1
  %add2.i211.i.i.i = add nuw nsw i32 %shr.i209.i.i.i, %and.i210.i.i.i
  %sh_prom.i212.i.i.i = zext i32 %add2.i211.i.i.i to i64
  %shr3.i213.i.i.i = ashr i64 %call17.i.i.i, %sh_prom.i212.i.i.i
  %sh_prom5.i214.i.i.i = zext i32 %shr.i209.i.i.i to i64
  %shr6.i215.i.i.i = ashr i64 %call3.i.i.i, %sh_prom5.i214.i.i.i
  %mul.i216.i.i.i = mul i64 %shr3.i213.i.i.i, %shr6.i215.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i208.i.i.i)
  %cmp7.i217.i.i.i = icmp ugt i32 %sub.i208.i.i.i, 32
  br i1 %cmp7.i217.i.i.i, label %if.then8.i222.i.i.i, label %if.end11.i224.i.i.i

if.then8.i222.i.i.i:                              ; preds = %if.end.i218.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i219.i.i.i = add i32 %add.i203.i.i.i, -93
  %sh_prom10.i220.i.i.i = zext i32 %sub9.i219.i.i.i to i64
  %shl.i221.i.i.i = shl i64 %mul.i216.i.i.i, %sh_prom10.i220.i.i.i
  br label %drm_fixp_mul.exit232.i.i.i

if.end11.i224.i.i.i:                              ; preds = %if.end.i218.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i208.i.i.i)
  %cmp12.not.i223.i.i.i = icmp eq i32 %sub.i208.i.i.i, 32
  br i1 %cmp12.not.i223.i.i.i, label %if.end11.i224.i.i.i.drm_fixp_mul.exit232.i.i.i_crit_edge, label %if.end11.i224.i.i.i.if.then13.i230.i.i.i_crit_edge

if.end11.i224.i.i.i.if.then13.i230.i.i.i_crit_edge: ; preds = %if.end11.i224.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i230.i.i.i

if.end11.i224.i.i.i.drm_fixp_mul.exit232.i.i.i_crit_edge: ; preds = %if.end11.i224.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit232.i.i.i

if.then13.i230.i.i.i:                             ; preds = %if.end11.i224.i.i.i.if.then13.i230.i.i.i_crit_edge, %if.end11.thread.i207.i.i.i
  %shift.05056.i225.i.i.i = phi i32 [ 0, %if.end11.thread.i207.i.i.i ], [ %sub.i208.i.i.i, %if.end11.i224.i.i.i.if.then13.i230.i.i.i_crit_edge ]
  %mul5155.i226.i.i.i = phi i64 [ %mul48.i206.i.i.i, %if.end11.thread.i207.i.i.i ], [ %mul.i216.i.i.i, %if.end11.i224.i.i.i.if.then13.i230.i.i.i_crit_edge ]
  %sub14.i227.i.i.i = sub nuw nsw i32 32, %shift.05056.i225.i.i.i
  %sh_prom15.i228.i.i.i = zext i32 %sub14.i227.i.i.i to i64
  %shr16.i229.i.i.i = ashr i64 %mul5155.i226.i.i.i, %sh_prom15.i228.i.i.i
  br label %drm_fixp_mul.exit232.i.i.i

drm_fixp_mul.exit232.i.i.i:                       ; preds = %if.then13.i230.i.i.i, %if.end11.i224.i.i.i.drm_fixp_mul.exit232.i.i.i_crit_edge, %if.then8.i222.i.i.i
  %retval.0.i231.i.i.i = phi i64 [ %shl.i221.i.i.i, %if.then8.i222.i.i.i ], [ %shr16.i229.i.i.i, %if.then13.i230.i.i.i ], [ %mul.i216.i.i.i, %if.end11.i224.i.i.i.drm_fixp_mul.exit232.i.i.i_crit_edge ]
  %call27.i.i.i = tail call fastcc i64 @drm_fixp_exp(i64 noundef %retval.0.i231.i.i.i) #14
  %shr12.i.i233.i.i.i = lshr i64 %call14.i.i.i, 63
  br label %for.body.i.i239.i.i.i

for.body.i.i239.i.i.i:                            ; preds = %for.inc.i.i242.i.i.i.for.body.i.i239.i.i.i_crit_edge, %drm_fixp_mul.exit232.i.i.i
  %shift.014.i.i234.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit232.i.i.i ], [ %dec.i.i240.i.i.i, %for.inc.i.i242.i.i.i.for.body.i.i239.i.i.i_crit_edge ]
  %sh_prom.i.i235.i.i.i = zext i32 %shift.014.i.i234.i.i.i to i64
  %shr213.i.i236.i.i.i = lshr i64 %call14.i.i.i, %sh_prom.i.i235.i.i.i
  %and3.i.i237.i.i.i = and i64 %shr213.i.i236.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i237.i.i.i, i64 %shr12.i.i233.i.i.i)
  %cmp5.not.i.i238.i.i.i = icmp eq i64 %and3.i.i237.i.i.i, %shr12.i.i233.i.i.i
  br i1 %cmp5.not.i.i238.i.i.i, label %for.inc.i.i242.i.i.i, label %for.body.i.i239.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge

for.body.i.i239.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge: ; preds = %for.body.i.i239.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i245.i.i.i

for.inc.i.i242.i.i.i:                             ; preds = %for.body.i.i239.i.i.i
  %dec.i.i240.i.i.i = add nsw i32 %shift.014.i.i234.i.i.i, -1
  %cmp.not.i.i241.i.i.i = icmp eq i32 %dec.i.i240.i.i.i, 0
  br i1 %cmp.not.i.i241.i.i.i, label %for.inc.i.i242.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge, label %for.inc.i.i242.i.i.i.for.body.i.i239.i.i.i_crit_edge

for.inc.i.i242.i.i.i.for.body.i.i239.i.i.i_crit_edge: ; preds = %for.inc.i.i242.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i239.i.i.i

for.inc.i.i242.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge: ; preds = %for.inc.i.i242.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i245.i.i.i

drm_fixp_msbset.exit.i245.i.i.i:                  ; preds = %for.inc.i.i242.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge, %for.body.i.i239.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge
  %shift.0.lcssa.i.i243.i.i.i = phi i32 [ 0, %for.inc.i.i242.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge ], [ %shift.014.i.i234.i.i.i, %for.body.i.i239.i.i.i.drm_fixp_msbset.exit.i245.i.i.i_crit_edge ]
  %shr12.i33.i244.i.i.i = lshr i64 %call27.i.i.i, 63
  br label %for.body.i39.i251.i.i.i

for.body.i39.i251.i.i.i:                          ; preds = %for.inc.i42.i254.i.i.i.for.body.i39.i251.i.i.i_crit_edge, %drm_fixp_msbset.exit.i245.i.i.i
  %shift.014.i34.i246.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i245.i.i.i ], [ %dec.i40.i252.i.i.i, %for.inc.i42.i254.i.i.i.for.body.i39.i251.i.i.i_crit_edge ]
  %sh_prom.i35.i247.i.i.i = zext i32 %shift.014.i34.i246.i.i.i to i64
  %shr213.i36.i248.i.i.i = lshr i64 %call27.i.i.i, %sh_prom.i35.i247.i.i.i
  %and3.i37.i249.i.i.i = and i64 %shr213.i36.i248.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i249.i.i.i, i64 %shr12.i33.i244.i.i.i)
  %cmp5.not.i38.i250.i.i.i = icmp eq i64 %and3.i37.i249.i.i.i, %shr12.i33.i244.i.i.i
  br i1 %cmp5.not.i38.i250.i.i.i, label %for.inc.i42.i254.i.i.i, label %for.body.i39.i251.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge

for.body.i39.i251.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge: ; preds = %for.body.i39.i251.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i258.i.i.i

for.inc.i42.i254.i.i.i:                           ; preds = %for.body.i39.i251.i.i.i
  %dec.i40.i252.i.i.i = add nsw i32 %shift.014.i34.i246.i.i.i, -1
  %cmp.not.i41.i253.i.i.i = icmp eq i32 %dec.i40.i252.i.i.i, 0
  br i1 %cmp.not.i41.i253.i.i.i, label %for.inc.i42.i254.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge, label %for.inc.i42.i254.i.i.i.for.body.i39.i251.i.i.i_crit_edge

for.inc.i42.i254.i.i.i.for.body.i39.i251.i.i.i_crit_edge: ; preds = %for.inc.i42.i254.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i251.i.i.i

for.inc.i42.i254.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge: ; preds = %for.inc.i42.i254.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i258.i.i.i

drm_fixp_msbset.exit44.i258.i.i.i:                ; preds = %for.inc.i42.i254.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge, %for.body.i39.i251.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge
  %shift.0.lcssa.i43.i255.i.i.i = phi i32 [ 0, %for.inc.i42.i254.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge ], [ %shift.014.i34.i246.i.i.i, %for.body.i39.i251.i.i.i.drm_fixp_msbset.exit44.i258.i.i.i_crit_edge ]
  %add.i256.i.i.i = add i32 %shift.0.lcssa.i43.i255.i.i.i, %shift.0.lcssa.i.i243.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i256.i.i.i)
  %cmp.i257.i.i.i = icmp ugt i32 %add.i256.i.i.i, 61
  br i1 %cmp.i257.i.i.i, label %if.end.i271.i.i.i, label %if.end11.thread.i260.i.i.i

if.end11.thread.i260.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i258.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i259.i.i.i = mul i64 %call27.i.i.i, %call14.i.i.i
  br label %if.then13.i283.i.i.i

if.end.i271.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i258.i.i.i
  %sub.i261.i.i.i = add i32 %add.i256.i.i.i, -61
  %shr.i262.i.i.i = lshr i32 %sub.i261.i.i.i, 1
  %and.i263.i.i.i = and i32 %sub.i261.i.i.i, 1
  %add2.i264.i.i.i = add nuw nsw i32 %shr.i262.i.i.i, %and.i263.i.i.i
  %sh_prom.i265.i.i.i = zext i32 %add2.i264.i.i.i to i64
  %shr3.i266.i.i.i = ashr i64 %call14.i.i.i, %sh_prom.i265.i.i.i
  %sh_prom5.i267.i.i.i = zext i32 %shr.i262.i.i.i to i64
  %shr6.i268.i.i.i = ashr i64 %call27.i.i.i, %sh_prom5.i267.i.i.i
  %mul.i269.i.i.i = mul i64 %shr3.i266.i.i.i, %shr6.i268.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i261.i.i.i)
  %cmp7.i270.i.i.i = icmp ugt i32 %sub.i261.i.i.i, 32
  br i1 %cmp7.i270.i.i.i, label %if.then8.i275.i.i.i, label %if.end11.i277.i.i.i

if.then8.i275.i.i.i:                              ; preds = %if.end.i271.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i272.i.i.i = add i32 %add.i256.i.i.i, -93
  %sh_prom10.i273.i.i.i = zext i32 %sub9.i272.i.i.i to i64
  %shl.i274.i.i.i = shl i64 %mul.i269.i.i.i, %sh_prom10.i273.i.i.i
  br label %drm_fixp_mul.exit285.i.i.i

if.end11.i277.i.i.i:                              ; preds = %if.end.i271.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i261.i.i.i)
  %cmp12.not.i276.i.i.i = icmp eq i32 %sub.i261.i.i.i, 32
  br i1 %cmp12.not.i276.i.i.i, label %if.end11.i277.i.i.i.drm_fixp_mul.exit285.i.i.i_crit_edge, label %if.end11.i277.i.i.i.if.then13.i283.i.i.i_crit_edge

if.end11.i277.i.i.i.if.then13.i283.i.i.i_crit_edge: ; preds = %if.end11.i277.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i283.i.i.i

if.end11.i277.i.i.i.drm_fixp_mul.exit285.i.i.i_crit_edge: ; preds = %if.end11.i277.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit285.i.i.i

if.then13.i283.i.i.i:                             ; preds = %if.end11.i277.i.i.i.if.then13.i283.i.i.i_crit_edge, %if.end11.thread.i260.i.i.i
  %shift.05056.i278.i.i.i = phi i32 [ 0, %if.end11.thread.i260.i.i.i ], [ %sub.i261.i.i.i, %if.end11.i277.i.i.i.if.then13.i283.i.i.i_crit_edge ]
  %mul5155.i279.i.i.i = phi i64 [ %mul48.i259.i.i.i, %if.end11.thread.i260.i.i.i ], [ %mul.i269.i.i.i, %if.end11.i277.i.i.i.if.then13.i283.i.i.i_crit_edge ]
  %sub14.i280.i.i.i = sub nuw nsw i32 32, %shift.05056.i278.i.i.i
  %sh_prom15.i281.i.i.i = zext i32 %sub14.i280.i.i.i to i64
  %shr16.i282.i.i.i = ashr i64 %mul5155.i279.i.i.i, %sh_prom15.i281.i.i.i
  br label %drm_fixp_mul.exit285.i.i.i

drm_fixp_mul.exit285.i.i.i:                       ; preds = %if.then13.i283.i.i.i, %if.end11.i277.i.i.i.drm_fixp_mul.exit285.i.i.i_crit_edge, %if.then8.i275.i.i.i
  %retval.0.i284.i.i.i = phi i64 [ %shl.i274.i.i.i, %if.then8.i275.i.i.i ], [ %shr16.i282.i.i.i, %if.then13.i283.i.i.i ], [ %mul.i269.i.i.i, %if.end11.i277.i.i.i.drm_fixp_mul.exit285.i.i.i_crit_edge ]
  %shr12.i.i286.i.i.i = lshr i64 %call1.i.i.i, 63
  br label %for.body.i.i292.i.i.i

for.body.i.i292.i.i.i:                            ; preds = %for.inc.i.i295.i.i.i.for.body.i.i292.i.i.i_crit_edge, %drm_fixp_mul.exit285.i.i.i
  %shift.014.i.i287.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit285.i.i.i ], [ %dec.i.i293.i.i.i, %for.inc.i.i295.i.i.i.for.body.i.i292.i.i.i_crit_edge ]
  %sh_prom.i.i288.i.i.i = zext i32 %shift.014.i.i287.i.i.i to i64
  %shr213.i.i289.i.i.i = lshr i64 %call1.i.i.i, %sh_prom.i.i288.i.i.i
  %and3.i.i290.i.i.i = and i64 %shr213.i.i289.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i290.i.i.i, i64 %shr12.i.i286.i.i.i)
  %cmp5.not.i.i291.i.i.i = icmp eq i64 %and3.i.i290.i.i.i, %shr12.i.i286.i.i.i
  br i1 %cmp5.not.i.i291.i.i.i, label %for.inc.i.i295.i.i.i, label %for.body.i.i292.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge

for.body.i.i292.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge: ; preds = %for.body.i.i292.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i298.i.i.i

for.inc.i.i295.i.i.i:                             ; preds = %for.body.i.i292.i.i.i
  %dec.i.i293.i.i.i = add nsw i32 %shift.014.i.i287.i.i.i, -1
  %cmp.not.i.i294.i.i.i = icmp eq i32 %dec.i.i293.i.i.i, 0
  br i1 %cmp.not.i.i294.i.i.i, label %for.inc.i.i295.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge, label %for.inc.i.i295.i.i.i.for.body.i.i292.i.i.i_crit_edge

for.inc.i.i295.i.i.i.for.body.i.i292.i.i.i_crit_edge: ; preds = %for.inc.i.i295.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i292.i.i.i

for.inc.i.i295.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge: ; preds = %for.inc.i.i295.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i298.i.i.i

drm_fixp_msbset.exit.i298.i.i.i:                  ; preds = %for.inc.i.i295.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge, %for.body.i.i292.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge
  %shift.0.lcssa.i.i296.i.i.i = phi i32 [ 0, %for.inc.i.i295.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge ], [ %shift.014.i.i287.i.i.i, %for.body.i.i292.i.i.i.drm_fixp_msbset.exit.i298.i.i.i_crit_edge ]
  %shr12.i33.i297.i.i.i = lshr i64 %retval.0.i178.i.i.i, 63
  br label %for.body.i39.i304.i.i.i

for.body.i39.i304.i.i.i:                          ; preds = %for.inc.i42.i307.i.i.i.for.body.i39.i304.i.i.i_crit_edge, %drm_fixp_msbset.exit.i298.i.i.i
  %shift.014.i34.i299.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i298.i.i.i ], [ %dec.i40.i305.i.i.i, %for.inc.i42.i307.i.i.i.for.body.i39.i304.i.i.i_crit_edge ]
  %sh_prom.i35.i300.i.i.i = zext i32 %shift.014.i34.i299.i.i.i to i64
  %shr213.i36.i301.i.i.i = lshr i64 %retval.0.i178.i.i.i, %sh_prom.i35.i300.i.i.i
  %and3.i37.i302.i.i.i = and i64 %shr213.i36.i301.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i302.i.i.i, i64 %shr12.i33.i297.i.i.i)
  %cmp5.not.i38.i303.i.i.i = icmp eq i64 %and3.i37.i302.i.i.i, %shr12.i33.i297.i.i.i
  br i1 %cmp5.not.i38.i303.i.i.i, label %for.inc.i42.i307.i.i.i, label %for.body.i39.i304.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge

for.body.i39.i304.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge: ; preds = %for.body.i39.i304.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i311.i.i.i

for.inc.i42.i307.i.i.i:                           ; preds = %for.body.i39.i304.i.i.i
  %dec.i40.i305.i.i.i = add nsw i32 %shift.014.i34.i299.i.i.i, -1
  %cmp.not.i41.i306.i.i.i = icmp eq i32 %dec.i40.i305.i.i.i, 0
  br i1 %cmp.not.i41.i306.i.i.i, label %for.inc.i42.i307.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge, label %for.inc.i42.i307.i.i.i.for.body.i39.i304.i.i.i_crit_edge

for.inc.i42.i307.i.i.i.for.body.i39.i304.i.i.i_crit_edge: ; preds = %for.inc.i42.i307.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i304.i.i.i

for.inc.i42.i307.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge: ; preds = %for.inc.i42.i307.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i311.i.i.i

drm_fixp_msbset.exit44.i311.i.i.i:                ; preds = %for.inc.i42.i307.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge, %for.body.i39.i304.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge
  %shift.0.lcssa.i43.i308.i.i.i = phi i32 [ 0, %for.inc.i42.i307.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge ], [ %shift.014.i34.i299.i.i.i, %for.body.i39.i304.i.i.i.drm_fixp_msbset.exit44.i311.i.i.i_crit_edge ]
  %add.i309.i.i.i = add i32 %shift.0.lcssa.i43.i308.i.i.i, %shift.0.lcssa.i.i296.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i309.i.i.i)
  %cmp.i310.i.i.i = icmp ugt i32 %add.i309.i.i.i, 61
  br i1 %cmp.i310.i.i.i, label %if.end.i324.i.i.i, label %if.end11.thread.i313.i.i.i

if.end11.thread.i313.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i311.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i312.i.i.i = mul i64 %retval.0.i178.i.i.i, %call1.i.i.i
  br label %if.then13.i336.i.i.i

if.end.i324.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i311.i.i.i
  %sub.i314.i.i.i = add i32 %add.i309.i.i.i, -61
  %shr.i315.i.i.i = lshr i32 %sub.i314.i.i.i, 1
  %and.i316.i.i.i = and i32 %sub.i314.i.i.i, 1
  %add2.i317.i.i.i = add nuw nsw i32 %shr.i315.i.i.i, %and.i316.i.i.i
  %sh_prom.i318.i.i.i = zext i32 %add2.i317.i.i.i to i64
  %shr3.i319.i.i.i = ashr i64 %call1.i.i.i, %sh_prom.i318.i.i.i
  %sh_prom5.i320.i.i.i = zext i32 %shr.i315.i.i.i to i64
  %shr6.i321.i.i.i = ashr i64 %retval.0.i178.i.i.i, %sh_prom5.i320.i.i.i
  %mul.i322.i.i.i = mul i64 %shr3.i319.i.i.i, %shr6.i321.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i314.i.i.i)
  %cmp7.i323.i.i.i = icmp ugt i32 %sub.i314.i.i.i, 32
  br i1 %cmp7.i323.i.i.i, label %if.then8.i328.i.i.i, label %if.end11.i330.i.i.i

if.then8.i328.i.i.i:                              ; preds = %if.end.i324.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i325.i.i.i = add i32 %add.i309.i.i.i, -93
  %sh_prom10.i326.i.i.i = zext i32 %sub9.i325.i.i.i to i64
  %shl.i327.i.i.i = shl i64 %mul.i322.i.i.i, %sh_prom10.i326.i.i.i
  br label %drm_fixp_mul.exit338.i.i.i

if.end11.i330.i.i.i:                              ; preds = %if.end.i324.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i314.i.i.i)
  %cmp12.not.i329.i.i.i = icmp eq i32 %sub.i314.i.i.i, 32
  br i1 %cmp12.not.i329.i.i.i, label %if.end11.i330.i.i.i.drm_fixp_mul.exit338.i.i.i_crit_edge, label %if.end11.i330.i.i.i.if.then13.i336.i.i.i_crit_edge

if.end11.i330.i.i.i.if.then13.i336.i.i.i_crit_edge: ; preds = %if.end11.i330.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i336.i.i.i

if.end11.i330.i.i.i.drm_fixp_mul.exit338.i.i.i_crit_edge: ; preds = %if.end11.i330.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit338.i.i.i

if.then13.i336.i.i.i:                             ; preds = %if.end11.i330.i.i.i.if.then13.i336.i.i.i_crit_edge, %if.end11.thread.i313.i.i.i
  %shift.05056.i331.i.i.i = phi i32 [ 0, %if.end11.thread.i313.i.i.i ], [ %sub.i314.i.i.i, %if.end11.i330.i.i.i.if.then13.i336.i.i.i_crit_edge ]
  %mul5155.i332.i.i.i = phi i64 [ %mul48.i312.i.i.i, %if.end11.thread.i313.i.i.i ], [ %mul.i322.i.i.i, %if.end11.i330.i.i.i.if.then13.i336.i.i.i_crit_edge ]
  %sub14.i333.i.i.i = sub nuw nsw i32 32, %shift.05056.i331.i.i.i
  %sh_prom15.i334.i.i.i = zext i32 %sub14.i333.i.i.i to i64
  %shr16.i335.i.i.i = ashr i64 %mul5155.i332.i.i.i, %sh_prom15.i334.i.i.i
  br label %drm_fixp_mul.exit338.i.i.i

drm_fixp_mul.exit338.i.i.i:                       ; preds = %if.then13.i336.i.i.i, %if.end11.i330.i.i.i.drm_fixp_mul.exit338.i.i.i_crit_edge, %if.then8.i328.i.i.i
  %retval.0.i337.i.i.i = phi i64 [ %shl.i327.i.i.i, %if.then8.i328.i.i.i ], [ %shr16.i335.i.i.i, %if.then13.i336.i.i.i ], [ %mul.i322.i.i.i, %if.end11.i330.i.i.i.drm_fixp_mul.exit338.i.i.i_crit_edge ]
  %shr12.i.i339.i.i.i = lshr i64 %retval.0.i337.i.i.i, 63
  br label %for.body.i.i345.i.i.i

for.body.i.i345.i.i.i:                            ; preds = %for.inc.i.i348.i.i.i.for.body.i.i345.i.i.i_crit_edge, %drm_fixp_mul.exit338.i.i.i
  %shift.014.i.i340.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit338.i.i.i ], [ %dec.i.i346.i.i.i, %for.inc.i.i348.i.i.i.for.body.i.i345.i.i.i_crit_edge ]
  %sh_prom.i.i341.i.i.i = zext i32 %shift.014.i.i340.i.i.i to i64
  %shr213.i.i342.i.i.i = lshr i64 %retval.0.i337.i.i.i, %sh_prom.i.i341.i.i.i
  %and3.i.i343.i.i.i = and i64 %shr213.i.i342.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i343.i.i.i, i64 %shr12.i.i339.i.i.i)
  %cmp5.not.i.i344.i.i.i = icmp eq i64 %and3.i.i343.i.i.i, %shr12.i.i339.i.i.i
  br i1 %cmp5.not.i.i344.i.i.i, label %for.inc.i.i348.i.i.i, label %for.body.i.i345.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge

for.body.i.i345.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge: ; preds = %for.body.i.i345.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i351.i.i.i

for.inc.i.i348.i.i.i:                             ; preds = %for.body.i.i345.i.i.i
  %dec.i.i346.i.i.i = add nsw i32 %shift.014.i.i340.i.i.i, -1
  %cmp.not.i.i347.i.i.i = icmp eq i32 %dec.i.i346.i.i.i, 0
  br i1 %cmp.not.i.i347.i.i.i, label %for.inc.i.i348.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge, label %for.inc.i.i348.i.i.i.for.body.i.i345.i.i.i_crit_edge

for.inc.i.i348.i.i.i.for.body.i.i345.i.i.i_crit_edge: ; preds = %for.inc.i.i348.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i345.i.i.i

for.inc.i.i348.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge: ; preds = %for.inc.i.i348.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i351.i.i.i

drm_fixp_msbset.exit.i351.i.i.i:                  ; preds = %for.inc.i.i348.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge, %for.body.i.i345.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge
  %shift.0.lcssa.i.i349.i.i.i = phi i32 [ 0, %for.inc.i.i348.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge ], [ %shift.014.i.i340.i.i.i, %for.body.i.i345.i.i.i.drm_fixp_msbset.exit.i351.i.i.i_crit_edge ]
  %shr12.i33.i350.i.i.i = lshr i64 %retval.0.i284.i.i.i, 63
  br label %for.body.i39.i357.i.i.i

for.body.i39.i357.i.i.i:                          ; preds = %for.inc.i42.i360.i.i.i.for.body.i39.i357.i.i.i_crit_edge, %drm_fixp_msbset.exit.i351.i.i.i
  %shift.014.i34.i352.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i351.i.i.i ], [ %dec.i40.i358.i.i.i, %for.inc.i42.i360.i.i.i.for.body.i39.i357.i.i.i_crit_edge ]
  %sh_prom.i35.i353.i.i.i = zext i32 %shift.014.i34.i352.i.i.i to i64
  %shr213.i36.i354.i.i.i = lshr i64 %retval.0.i284.i.i.i, %sh_prom.i35.i353.i.i.i
  %and3.i37.i355.i.i.i = and i64 %shr213.i36.i354.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i355.i.i.i, i64 %shr12.i33.i350.i.i.i)
  %cmp5.not.i38.i356.i.i.i = icmp eq i64 %and3.i37.i355.i.i.i, %shr12.i33.i350.i.i.i
  br i1 %cmp5.not.i38.i356.i.i.i, label %for.inc.i42.i360.i.i.i, label %for.body.i39.i357.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge

for.body.i39.i357.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge: ; preds = %for.body.i39.i357.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i364.i.i.i

for.inc.i42.i360.i.i.i:                           ; preds = %for.body.i39.i357.i.i.i
  %dec.i40.i358.i.i.i = add nsw i32 %shift.014.i34.i352.i.i.i, -1
  %cmp.not.i41.i359.i.i.i = icmp eq i32 %dec.i40.i358.i.i.i, 0
  br i1 %cmp.not.i41.i359.i.i.i, label %for.inc.i42.i360.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge, label %for.inc.i42.i360.i.i.i.for.body.i39.i357.i.i.i_crit_edge

for.inc.i42.i360.i.i.i.for.body.i39.i357.i.i.i_crit_edge: ; preds = %for.inc.i42.i360.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i357.i.i.i

for.inc.i42.i360.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge: ; preds = %for.inc.i42.i360.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i364.i.i.i

drm_fixp_msbset.exit44.i364.i.i.i:                ; preds = %for.inc.i42.i360.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge, %for.body.i39.i357.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge
  %shift.0.lcssa.i43.i361.i.i.i = phi i32 [ 0, %for.inc.i42.i360.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge ], [ %shift.014.i34.i352.i.i.i, %for.body.i39.i357.i.i.i.drm_fixp_msbset.exit44.i364.i.i.i_crit_edge ]
  %add.i362.i.i.i = add i32 %shift.0.lcssa.i43.i361.i.i.i, %shift.0.lcssa.i.i349.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i362.i.i.i)
  %cmp.i363.i.i.i = icmp ugt i32 %add.i362.i.i.i, 61
  br i1 %cmp.i363.i.i.i, label %if.end.i377.i.i.i, label %if.end11.thread.i366.i.i.i

if.end11.thread.i366.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i364.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i365.i.i.i = mul i64 %retval.0.i337.i.i.i, %retval.0.i284.i.i.i
  br label %if.then13.i389.i.i.i

if.end.i377.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i364.i.i.i
  %sub.i367.i.i.i = add i32 %add.i362.i.i.i, -61
  %shr.i368.i.i.i = lshr i32 %sub.i367.i.i.i, 1
  %and.i369.i.i.i = and i32 %sub.i367.i.i.i, 1
  %add2.i370.i.i.i = add nuw nsw i32 %shr.i368.i.i.i, %and.i369.i.i.i
  %sh_prom.i371.i.i.i = zext i32 %add2.i370.i.i.i to i64
  %shr3.i372.i.i.i = ashr i64 %retval.0.i337.i.i.i, %sh_prom.i371.i.i.i
  %sh_prom5.i373.i.i.i = zext i32 %shr.i368.i.i.i to i64
  %shr6.i374.i.i.i = ashr i64 %retval.0.i284.i.i.i, %sh_prom5.i373.i.i.i
  %mul.i375.i.i.i = mul i64 %shr3.i372.i.i.i, %shr6.i374.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i367.i.i.i)
  %cmp7.i376.i.i.i = icmp ugt i32 %sub.i367.i.i.i, 32
  br i1 %cmp7.i376.i.i.i, label %if.then8.i381.i.i.i, label %if.end11.i383.i.i.i

if.then8.i381.i.i.i:                              ; preds = %if.end.i377.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i378.i.i.i = add i32 %add.i362.i.i.i, -93
  %sh_prom10.i379.i.i.i = zext i32 %sub9.i378.i.i.i to i64
  %shl.i380.i.i.i = shl i64 %mul.i375.i.i.i, %sh_prom10.i379.i.i.i
  br label %drm_fixp_mul.exit391.i.i.i

if.end11.i383.i.i.i:                              ; preds = %if.end.i377.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i367.i.i.i)
  %cmp12.not.i382.i.i.i = icmp eq i32 %sub.i367.i.i.i, 32
  br i1 %cmp12.not.i382.i.i.i, label %if.end11.i383.i.i.i.drm_fixp_mul.exit391.i.i.i_crit_edge, label %if.end11.i383.i.i.i.if.then13.i389.i.i.i_crit_edge

if.end11.i383.i.i.i.if.then13.i389.i.i.i_crit_edge: ; preds = %if.end11.i383.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i389.i.i.i

if.end11.i383.i.i.i.drm_fixp_mul.exit391.i.i.i_crit_edge: ; preds = %if.end11.i383.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit391.i.i.i

if.then13.i389.i.i.i:                             ; preds = %if.end11.i383.i.i.i.if.then13.i389.i.i.i_crit_edge, %if.end11.thread.i366.i.i.i
  %shift.05056.i384.i.i.i = phi i32 [ 0, %if.end11.thread.i366.i.i.i ], [ %sub.i367.i.i.i, %if.end11.i383.i.i.i.if.then13.i389.i.i.i_crit_edge ]
  %mul5155.i385.i.i.i = phi i64 [ %mul48.i365.i.i.i, %if.end11.thread.i366.i.i.i ], [ %mul.i375.i.i.i, %if.end11.i383.i.i.i.if.then13.i389.i.i.i_crit_edge ]
  %sub14.i386.i.i.i = sub nuw nsw i32 32, %shift.05056.i384.i.i.i
  %sh_prom15.i387.i.i.i = zext i32 %sub14.i386.i.i.i to i64
  %shr16.i388.i.i.i = ashr i64 %mul5155.i385.i.i.i, %sh_prom15.i387.i.i.i
  br label %drm_fixp_mul.exit391.i.i.i

drm_fixp_mul.exit391.i.i.i:                       ; preds = %if.then13.i389.i.i.i, %if.end11.i383.i.i.i.drm_fixp_mul.exit391.i.i.i_crit_edge, %if.then8.i381.i.i.i
  %retval.0.i390.i.i.i = phi i64 [ %shl.i380.i.i.i, %if.then8.i381.i.i.i ], [ %shr16.i388.i.i.i, %if.then13.i389.i.i.i ], [ %mul.i375.i.i.i, %if.end11.i383.i.i.i.drm_fixp_mul.exit391.i.i.i_crit_edge ]
  %shr12.i.i392.i.i.i = lshr i64 %retval.0.i390.i.i.i, 63
  br label %for.body.i.i398.i.i.i

for.body.i.i398.i.i.i:                            ; preds = %for.inc.i.i401.i.i.i.for.body.i.i398.i.i.i_crit_edge, %drm_fixp_mul.exit391.i.i.i
  %shift.014.i.i393.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit391.i.i.i ], [ %dec.i.i399.i.i.i, %for.inc.i.i401.i.i.i.for.body.i.i398.i.i.i_crit_edge ]
  %sh_prom.i.i394.i.i.i = zext i32 %shift.014.i.i393.i.i.i to i64
  %shr213.i.i395.i.i.i = lshr i64 %retval.0.i390.i.i.i, %sh_prom.i.i394.i.i.i
  %and3.i.i396.i.i.i = and i64 %shr213.i.i395.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i396.i.i.i, i64 %shr12.i.i392.i.i.i)
  %cmp5.not.i.i397.i.i.i = icmp eq i64 %and3.i.i396.i.i.i, %shr12.i.i392.i.i.i
  br i1 %cmp5.not.i.i397.i.i.i, label %for.inc.i.i401.i.i.i, label %for.body.i.i398.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge

for.body.i.i398.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge: ; preds = %for.body.i.i398.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i404.i.i.i

for.inc.i.i401.i.i.i:                             ; preds = %for.body.i.i398.i.i.i
  %dec.i.i399.i.i.i = add nsw i32 %shift.014.i.i393.i.i.i, -1
  %cmp.not.i.i400.i.i.i = icmp eq i32 %dec.i.i399.i.i.i, 0
  br i1 %cmp.not.i.i400.i.i.i, label %for.inc.i.i401.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge, label %for.inc.i.i401.i.i.i.for.body.i.i398.i.i.i_crit_edge

for.inc.i.i401.i.i.i.for.body.i.i398.i.i.i_crit_edge: ; preds = %for.inc.i.i401.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i398.i.i.i

for.inc.i.i401.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge: ; preds = %for.inc.i.i401.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i404.i.i.i

drm_fixp_msbset.exit.i404.i.i.i:                  ; preds = %for.inc.i.i401.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge, %for.body.i.i398.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge
  %shift.0.lcssa.i.i402.i.i.i = phi i32 [ 0, %for.inc.i.i401.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge ], [ %shift.014.i.i393.i.i.i, %for.body.i.i398.i.i.i.drm_fixp_msbset.exit.i404.i.i.i_crit_edge ]
  br label %for.body.i39.i410.i.i.i

for.body.i39.i410.i.i.i:                          ; preds = %for.inc.i42.i413.i.i.i.for.body.i39.i410.i.i.i_crit_edge, %drm_fixp_msbset.exit.i404.i.i.i
  %shift.014.i34.i405.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i404.i.i.i ], [ %dec.i40.i411.i.i.i, %for.inc.i42.i413.i.i.i.for.body.i39.i410.i.i.i_crit_edge ]
  %sh_prom.i35.i406.i.i.i = zext i32 %shift.014.i34.i405.i.i.i to i64
  %shr213.i36.i407.i.i.i = lshr i64 %call3.i.i.i, %sh_prom.i35.i406.i.i.i
  %and3.i37.i408.i.i.i = and i64 %shr213.i36.i407.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i408.i.i.i, i64 %shr12.i33.i.i.i.i)
  %cmp5.not.i38.i409.i.i.i = icmp eq i64 %and3.i37.i408.i.i.i, %shr12.i33.i.i.i.i
  br i1 %cmp5.not.i38.i409.i.i.i, label %for.inc.i42.i413.i.i.i, label %for.body.i39.i410.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge

for.body.i39.i410.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge: ; preds = %for.body.i39.i410.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i417.i.i.i

for.inc.i42.i413.i.i.i:                           ; preds = %for.body.i39.i410.i.i.i
  %dec.i40.i411.i.i.i = add nsw i32 %shift.014.i34.i405.i.i.i, -1
  %cmp.not.i41.i412.i.i.i = icmp eq i32 %dec.i40.i411.i.i.i, 0
  br i1 %cmp.not.i41.i412.i.i.i, label %for.inc.i42.i413.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge, label %for.inc.i42.i413.i.i.i.for.body.i39.i410.i.i.i_crit_edge

for.inc.i42.i413.i.i.i.for.body.i39.i410.i.i.i_crit_edge: ; preds = %for.inc.i42.i413.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i410.i.i.i

for.inc.i42.i413.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge: ; preds = %for.inc.i42.i413.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i417.i.i.i

drm_fixp_msbset.exit44.i417.i.i.i:                ; preds = %for.inc.i42.i413.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge, %for.body.i39.i410.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge
  %shift.0.lcssa.i43.i414.i.i.i = phi i32 [ 0, %for.inc.i42.i413.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge ], [ %shift.014.i34.i405.i.i.i, %for.body.i39.i410.i.i.i.drm_fixp_msbset.exit44.i417.i.i.i_crit_edge ]
  %add.i415.i.i.i = add i32 %shift.0.lcssa.i43.i414.i.i.i, %shift.0.lcssa.i.i402.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i415.i.i.i)
  %cmp.i416.i.i.i = icmp ugt i32 %add.i415.i.i.i, 61
  br i1 %cmp.i416.i.i.i, label %if.end.i430.i.i.i, label %if.end11.thread.i419.i.i.i

if.end11.thread.i419.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i417.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i418.i.i.i = mul i64 %retval.0.i390.i.i.i, %call3.i.i.i
  br label %if.then13.i442.i.i.i

if.end.i430.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i417.i.i.i
  %sub.i420.i.i.i = add i32 %add.i415.i.i.i, -61
  %shr.i421.i.i.i = lshr i32 %sub.i420.i.i.i, 1
  %and.i422.i.i.i = and i32 %sub.i420.i.i.i, 1
  %add2.i423.i.i.i = add nuw nsw i32 %shr.i421.i.i.i, %and.i422.i.i.i
  %sh_prom.i424.i.i.i = zext i32 %add2.i423.i.i.i to i64
  %shr3.i425.i.i.i = ashr i64 %retval.0.i390.i.i.i, %sh_prom.i424.i.i.i
  %sh_prom5.i426.i.i.i = zext i32 %shr.i421.i.i.i to i64
  %shr6.i427.i.i.i = ashr i64 %call3.i.i.i, %sh_prom5.i426.i.i.i
  %mul.i428.i.i.i = mul i64 %shr3.i425.i.i.i, %shr6.i427.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i420.i.i.i)
  %cmp7.i429.i.i.i = icmp ugt i32 %sub.i420.i.i.i, 32
  br i1 %cmp7.i429.i.i.i, label %if.then8.i434.i.i.i, label %if.end11.i436.i.i.i

if.then8.i434.i.i.i:                              ; preds = %if.end.i430.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i431.i.i.i = add i32 %add.i415.i.i.i, -93
  %sh_prom10.i432.i.i.i = zext i32 %sub9.i431.i.i.i to i64
  %shl.i433.i.i.i = shl i64 %mul.i428.i.i.i, %sh_prom10.i432.i.i.i
  br label %si_calculate_leakage_for_v_and_t.exit.i

if.end11.i436.i.i.i:                              ; preds = %if.end.i430.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i420.i.i.i)
  %cmp12.not.i435.i.i.i = icmp eq i32 %sub.i420.i.i.i, 32
  br i1 %cmp12.not.i435.i.i.i, label %if.end11.i436.i.i.i.si_calculate_leakage_for_v_and_t.exit.i_crit_edge, label %if.end11.i436.i.i.i.if.then13.i442.i.i.i_crit_edge

if.end11.i436.i.i.i.if.then13.i442.i.i.i_crit_edge: ; preds = %if.end11.i436.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i442.i.i.i

if.end11.i436.i.i.i.si_calculate_leakage_for_v_and_t.exit.i_crit_edge: ; preds = %if.end11.i436.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_calculate_leakage_for_v_and_t.exit.i

if.then13.i442.i.i.i:                             ; preds = %if.end11.i436.i.i.i.if.then13.i442.i.i.i_crit_edge, %if.end11.thread.i419.i.i.i
  %shift.05056.i437.i.i.i = phi i32 [ 0, %if.end11.thread.i419.i.i.i ], [ %sub.i420.i.i.i, %if.end11.i436.i.i.i.if.then13.i442.i.i.i_crit_edge ]
  %mul5155.i438.i.i.i = phi i64 [ %mul48.i418.i.i.i, %if.end11.thread.i419.i.i.i ], [ %mul.i428.i.i.i, %if.end11.i436.i.i.i.if.then13.i442.i.i.i_crit_edge ]
  %sub14.i439.i.i.i = sub nuw nsw i32 32, %shift.05056.i437.i.i.i
  %sh_prom15.i440.i.i.i = zext i32 %sub14.i439.i.i.i to i64
  %shr16.i441.i.i.i = ashr i64 %mul5155.i438.i.i.i, %sh_prom15.i440.i.i.i
  br label %si_calculate_leakage_for_v_and_t.exit.i

si_calculate_leakage_for_v_and_t.exit.i:          ; preds = %if.then13.i442.i.i.i, %if.end11.i436.i.i.i.si_calculate_leakage_for_v_and_t.exit.i_crit_edge, %if.then8.i434.i.i.i
  %retval.0.i443.i.i.i = phi i64 [ %shl.i433.i.i.i, %if.then8.i434.i.i.i ], [ %shr16.i441.i.i.i, %if.then13.i442.i.i.i ], [ %mul.i428.i.i.i, %if.end11.i436.i.i.i.si_calculate_leakage_for_v_and_t.exit.i_crit_edge ]
  %mul.i.i.i = mul i64 %retval.0.i443.i.i.i, 1000
  %sum.shift.i = lshr i64 %mul.i.i.i, 34
  %div12.i = trunc i64 %sum.shift.i to i32
  %68 = tail call i32 @llvm.umin.i32(i32 %div12.i, i32 65535) #14
  %conv15.i = trunc i32 %68 to i16
  %sub16.i = sub nuw nsw i32 31, %j.03.i
  %arrayidx17.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 %i.04.i, i32 %sub16.i
  %69 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 %conv15.i, ptr %arrayidx17.i, align 2
  %inc.i142 = add nuw nsw i32 %j.03.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i142, 32
  br i1 %exitcond.not.i, label %for.inc18.i, label %si_calculate_leakage_for_v_and_t.exit.i.for.body7.i_crit_edge

si_calculate_leakage_for_v_and_t.exit.i.for.body7.i_crit_edge: ; preds = %si_calculate_leakage_for_v_and_t.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body7.i

for.inc18.i:                                      ; preds = %si_calculate_leakage_for_v_and_t.exit.i
  %inc19.i = add nuw nsw i32 %i.04.i, 1
  %exitcond5.not.i = icmp eq i32 %inc19.i, 16
  br i1 %exitcond5.not.i, label %for.inc18.i.if.end35_crit_edge, label %for.inc18.i.for.body.i141_crit_edge

for.inc18.i.for.body.i141_crit_edge:              ; preds = %for.inc18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i141

for.inc18.i.if.end35_crit_edge:                   ; preds = %for.inc18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.else:                                          ; preds = %lor.lhs.false
  %dyn_powertune_data.i145 = getelementptr inbounds %struct.si_power_info, ptr %33, i32 0, i32 34
  br label %for.body.i152

for.body.i152:                                    ; preds = %si_calculate_leakage_for_v.exit.i.for.body.i152_crit_edge, %if.else
  %j.04.i = phi i32 [ 0, %if.else ], [ %inc16.i, %si_calculate_leakage_for_v.exit.i.for.body.i152_crit_edge ]
  %70 = trunc i32 %j.04.i to i16
  %71 = mul i16 %70, %conv2.i
  %conv3.i = sub i16 %vddc_max.2, %71
  %72 = ptrtoint ptr %powertune_data.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %powertune_data.i, align 4
  %fixed_kt.i = getelementptr inbounds %struct.si_powertune_data, ptr %73, i32 0, i32 6
  %74 = ptrtoint ptr %fixed_kt.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %fixed_kt.i, align 4
  %76 = ptrtoint ptr %dyn_powertune_data.i145 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %dyn_powertune_data.i145, align 4
  %conv1.i.i.i.i146 = zext i32 %77 to i64
  %shl.i.i.i.i147 = shl nuw i64 %conv1.i.i.i.i146, 32
  %call1.i.i.i148 = tail call i64 @div64_s64(i64 noundef %shl.i.i.i.i147, i64 noundef 100) #14
  %conv1.i19.i.i.i = zext i16 %conv3.i to i64
  %shl.i20.i.i.i = shl nuw nsw i64 %conv1.i19.i.i.i, 32
  %call3.i.i.i149 = tail call i64 @div64_s64(i64 noundef %shl.i20.i.i.i, i64 noundef 1000) #14
  %conv1.i21.i.i.i = zext i32 %75 to i64
  %shl.i22.i.i.i = shl nuw i64 %conv1.i21.i.i.i, 32
  %call5.i.i.i150 = tail call i64 @div64_s64(i64 noundef %shl.i22.i.i.i, i64 noundef 100000000) #14
  %av.i.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %73, i32 0, i32 5, i32 2
  %78 = ptrtoint ptr %av.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %av.i.i.i, align 4
  %conv1.i23.i.i.i = zext i32 %79 to i64
  %shl.i24.i.i.i = shl nuw i64 %conv1.i23.i.i.i, 32
  %call7.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i24.i.i.i, i64 noundef 100000000) #14
  %bv.i.i.i = getelementptr inbounds %struct.si_powertune_data, ptr %73, i32 0, i32 5, i32 3
  %80 = ptrtoint ptr %bv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %bv.i.i.i, align 4
  %conv1.i25.i.i.i = zext i32 %81 to i64
  %shl.i26.i.i.i = shl nuw i64 %conv1.i25.i.i.i, 32
  %call9.i.i.i = tail call i64 @div64_s64(i64 noundef %shl.i26.i.i.i, i64 noundef 100000000) #14
  %shr12.i.i.i.i.i151 = lshr i64 %call9.i.i.i, 63
  br label %for.body.i.i.i.i.i158

for.body.i.i.i.i.i158:                            ; preds = %for.inc.i.i.i.i.i161.for.body.i.i.i.i.i158_crit_edge, %for.body.i152
  %shift.014.i.i.i.i.i153 = phi i32 [ 62, %for.body.i152 ], [ %dec.i.i.i.i.i159, %for.inc.i.i.i.i.i161.for.body.i.i.i.i.i158_crit_edge ]
  %sh_prom.i.i.i.i.i154 = zext i32 %shift.014.i.i.i.i.i153 to i64
  %shr213.i.i.i.i.i155 = lshr i64 %call9.i.i.i, %sh_prom.i.i.i.i.i154
  %and3.i.i.i.i.i156 = and i64 %shr213.i.i.i.i.i155, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i.i.i.i156, i64 %shr12.i.i.i.i.i151)
  %cmp5.not.i.i.i.i.i157 = icmp eq i64 %and3.i.i.i.i.i156, %shr12.i.i.i.i.i151
  br i1 %cmp5.not.i.i.i.i.i157, label %for.inc.i.i.i.i.i161, label %for.body.i.i.i.i.i158.drm_fixp_msbset.exit.i.i.i.i164_crit_edge

for.body.i.i.i.i.i158.drm_fixp_msbset.exit.i.i.i.i164_crit_edge: ; preds = %for.body.i.i.i.i.i158
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i.i.i.i164

for.inc.i.i.i.i.i161:                             ; preds = %for.body.i.i.i.i.i158
  %dec.i.i.i.i.i159 = add nsw i32 %shift.014.i.i.i.i.i153, -1
  %cmp.not.i.i.i.i.i160 = icmp eq i32 %dec.i.i.i.i.i159, 0
  br i1 %cmp.not.i.i.i.i.i160, label %for.inc.i.i.i.i.i161.drm_fixp_msbset.exit.i.i.i.i164_crit_edge, label %for.inc.i.i.i.i.i161.for.body.i.i.i.i.i158_crit_edge

for.inc.i.i.i.i.i161.for.body.i.i.i.i.i158_crit_edge: ; preds = %for.inc.i.i.i.i.i161
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i.i.i.i158

for.inc.i.i.i.i.i161.drm_fixp_msbset.exit.i.i.i.i164_crit_edge: ; preds = %for.inc.i.i.i.i.i161
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i.i.i.i164

drm_fixp_msbset.exit.i.i.i.i164:                  ; preds = %for.inc.i.i.i.i.i161.drm_fixp_msbset.exit.i.i.i.i164_crit_edge, %for.body.i.i.i.i.i158.drm_fixp_msbset.exit.i.i.i.i164_crit_edge
  %shift.0.lcssa.i.i.i.i.i162 = phi i32 [ 0, %for.inc.i.i.i.i.i161.drm_fixp_msbset.exit.i.i.i.i164_crit_edge ], [ %shift.014.i.i.i.i.i153, %for.body.i.i.i.i.i158.drm_fixp_msbset.exit.i.i.i.i164_crit_edge ]
  %shr12.i33.i.i.i.i163 = lshr i64 %call3.i.i.i149, 63
  br label %for.body.i39.i.i.i.i170

for.body.i39.i.i.i.i170:                          ; preds = %for.inc.i42.i.i.i.i173.for.body.i39.i.i.i.i170_crit_edge, %drm_fixp_msbset.exit.i.i.i.i164
  %shift.014.i34.i.i.i.i165 = phi i32 [ 62, %drm_fixp_msbset.exit.i.i.i.i164 ], [ %dec.i40.i.i.i.i171, %for.inc.i42.i.i.i.i173.for.body.i39.i.i.i.i170_crit_edge ]
  %sh_prom.i35.i.i.i.i166 = zext i32 %shift.014.i34.i.i.i.i165 to i64
  %shr213.i36.i.i.i.i167 = lshr i64 %call3.i.i.i149, %sh_prom.i35.i.i.i.i166
  %and3.i37.i.i.i.i168 = and i64 %shr213.i36.i.i.i.i167, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i.i.i.i168, i64 %shr12.i33.i.i.i.i163)
  %cmp5.not.i38.i.i.i.i169 = icmp eq i64 %and3.i37.i.i.i.i168, %shr12.i33.i.i.i.i163
  br i1 %cmp5.not.i38.i.i.i.i169, label %for.inc.i42.i.i.i.i173, label %for.body.i39.i.i.i.i170.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge

for.body.i39.i.i.i.i170.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge: ; preds = %for.body.i39.i.i.i.i170
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i.i.i.i177

for.inc.i42.i.i.i.i173:                           ; preds = %for.body.i39.i.i.i.i170
  %dec.i40.i.i.i.i171 = add nsw i32 %shift.014.i34.i.i.i.i165, -1
  %cmp.not.i41.i.i.i.i172 = icmp eq i32 %dec.i40.i.i.i.i171, 0
  br i1 %cmp.not.i41.i.i.i.i172, label %for.inc.i42.i.i.i.i173.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge, label %for.inc.i42.i.i.i.i173.for.body.i39.i.i.i.i170_crit_edge

for.inc.i42.i.i.i.i173.for.body.i39.i.i.i.i170_crit_edge: ; preds = %for.inc.i42.i.i.i.i173
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i.i.i.i170

for.inc.i42.i.i.i.i173.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge: ; preds = %for.inc.i42.i.i.i.i173
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i.i.i.i177

drm_fixp_msbset.exit44.i.i.i.i177:                ; preds = %for.inc.i42.i.i.i.i173.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge, %for.body.i39.i.i.i.i170.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge
  %shift.0.lcssa.i43.i.i.i.i174 = phi i32 [ 0, %for.inc.i42.i.i.i.i173.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge ], [ %shift.014.i34.i.i.i.i165, %for.body.i39.i.i.i.i170.drm_fixp_msbset.exit44.i.i.i.i177_crit_edge ]
  %add.i.i.i.i175 = add i32 %shift.0.lcssa.i43.i.i.i.i174, %shift.0.lcssa.i.i.i.i.i162
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i.i.i.i175)
  %cmp.i.i.i.i176 = icmp ugt i32 %add.i.i.i.i175, 61
  br i1 %cmp.i.i.i.i176, label %if.end.i.i.i.i190, label %if.end11.thread.i.i.i.i179

if.end11.thread.i.i.i.i179:                       ; preds = %drm_fixp_msbset.exit44.i.i.i.i177
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i.i.i.i178 = mul i64 %call9.i.i.i, %call3.i.i.i149
  br label %if.then13.i.i.i.i201

if.end.i.i.i.i190:                                ; preds = %drm_fixp_msbset.exit44.i.i.i.i177
  %sub.i.i.i.i180 = add i32 %add.i.i.i.i175, -61
  %shr.i.i.i.i181 = lshr i32 %sub.i.i.i.i180, 1
  %and.i.i.i.i182 = and i32 %sub.i.i.i.i180, 1
  %add2.i.i.i.i183 = add nuw nsw i32 %shr.i.i.i.i181, %and.i.i.i.i182
  %sh_prom.i.i.i.i184 = zext i32 %add2.i.i.i.i183 to i64
  %shr3.i.i.i.i185 = ashr i64 %call9.i.i.i, %sh_prom.i.i.i.i184
  %sh_prom5.i.i.i.i186 = zext i32 %shr.i.i.i.i181 to i64
  %shr6.i.i.i.i187 = ashr i64 %call3.i.i.i149, %sh_prom5.i.i.i.i186
  %mul.i.i.i.i188 = mul i64 %shr3.i.i.i.i185, %shr6.i.i.i.i187
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i.i.i.i180)
  %cmp7.i.i.i.i189 = icmp ugt i32 %sub.i.i.i.i180, 32
  br i1 %cmp7.i.i.i.i189, label %if.then8.i.i.i.i193, label %if.end11.i.i.i.i195

if.then8.i.i.i.i193:                              ; preds = %if.end.i.i.i.i190
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i.i.i.i191 = add i32 %add.i.i.i.i175, -93
  %sh_prom10.i.i.i.i192 = zext i32 %sub9.i.i.i.i191 to i64
  %shl.i27.i.i.i = shl i64 %mul.i.i.i.i188, %sh_prom10.i.i.i.i192
  br label %drm_fixp_mul.exit.i.i.i204

if.end11.i.i.i.i195:                              ; preds = %if.end.i.i.i.i190
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i.i.i.i180)
  %cmp12.not.i.i.i.i194 = icmp eq i32 %sub.i.i.i.i180, 32
  br i1 %cmp12.not.i.i.i.i194, label %if.end11.i.i.i.i195.drm_fixp_mul.exit.i.i.i204_crit_edge, label %if.end11.i.i.i.i195.if.then13.i.i.i.i201_crit_edge

if.end11.i.i.i.i195.if.then13.i.i.i.i201_crit_edge: ; preds = %if.end11.i.i.i.i195
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i.i.i.i201

if.end11.i.i.i.i195.drm_fixp_mul.exit.i.i.i204_crit_edge: ; preds = %if.end11.i.i.i.i195
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit.i.i.i204

if.then13.i.i.i.i201:                             ; preds = %if.end11.i.i.i.i195.if.then13.i.i.i.i201_crit_edge, %if.end11.thread.i.i.i.i179
  %shift.05056.i.i.i.i196 = phi i32 [ 0, %if.end11.thread.i.i.i.i179 ], [ %sub.i.i.i.i180, %if.end11.i.i.i.i195.if.then13.i.i.i.i201_crit_edge ]
  %mul5155.i.i.i.i197 = phi i64 [ %mul48.i.i.i.i178, %if.end11.thread.i.i.i.i179 ], [ %mul.i.i.i.i188, %if.end11.i.i.i.i195.if.then13.i.i.i.i201_crit_edge ]
  %sub14.i.i.i.i198 = sub nuw nsw i32 32, %shift.05056.i.i.i.i196
  %sh_prom15.i.i.i.i199 = zext i32 %sub14.i.i.i.i198 to i64
  %shr16.i.i.i.i200 = ashr i64 %mul5155.i.i.i.i197, %sh_prom15.i.i.i.i199
  br label %drm_fixp_mul.exit.i.i.i204

drm_fixp_mul.exit.i.i.i204:                       ; preds = %if.then13.i.i.i.i201, %if.end11.i.i.i.i195.drm_fixp_mul.exit.i.i.i204_crit_edge, %if.then8.i.i.i.i193
  %retval.0.i.i.i.i202 = phi i64 [ %shl.i27.i.i.i, %if.then8.i.i.i.i193 ], [ %shr16.i.i.i.i200, %if.then13.i.i.i.i201 ], [ %mul.i.i.i.i188, %if.end11.i.i.i.i195.drm_fixp_mul.exit.i.i.i204_crit_edge ]
  %call11.i.i.i203 = tail call fastcc i64 @drm_fixp_exp(i64 noundef %retval.0.i.i.i.i202) #14
  %shr12.i.i28.i.i.i = lshr i64 %call7.i.i.i, 63
  br label %for.body.i.i34.i.i.i

for.body.i.i34.i.i.i:                             ; preds = %for.inc.i.i37.i.i.i.for.body.i.i34.i.i.i_crit_edge, %drm_fixp_mul.exit.i.i.i204
  %shift.014.i.i29.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit.i.i.i204 ], [ %dec.i.i35.i.i.i, %for.inc.i.i37.i.i.i.for.body.i.i34.i.i.i_crit_edge ]
  %sh_prom.i.i30.i.i.i = zext i32 %shift.014.i.i29.i.i.i to i64
  %shr213.i.i31.i.i.i = lshr i64 %call7.i.i.i, %sh_prom.i.i30.i.i.i
  %and3.i.i32.i.i.i = and i64 %shr213.i.i31.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i32.i.i.i, i64 %shr12.i.i28.i.i.i)
  %cmp5.not.i.i33.i.i.i = icmp eq i64 %and3.i.i32.i.i.i, %shr12.i.i28.i.i.i
  br i1 %cmp5.not.i.i33.i.i.i, label %for.inc.i.i37.i.i.i, label %for.body.i.i34.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge

for.body.i.i34.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge: ; preds = %for.body.i.i34.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i40.i.i.i

for.inc.i.i37.i.i.i:                              ; preds = %for.body.i.i34.i.i.i
  %dec.i.i35.i.i.i = add nsw i32 %shift.014.i.i29.i.i.i, -1
  %cmp.not.i.i36.i.i.i = icmp eq i32 %dec.i.i35.i.i.i, 0
  br i1 %cmp.not.i.i36.i.i.i, label %for.inc.i.i37.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge, label %for.inc.i.i37.i.i.i.for.body.i.i34.i.i.i_crit_edge

for.inc.i.i37.i.i.i.for.body.i.i34.i.i.i_crit_edge: ; preds = %for.inc.i.i37.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i34.i.i.i

for.inc.i.i37.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge: ; preds = %for.inc.i.i37.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i40.i.i.i

drm_fixp_msbset.exit.i40.i.i.i:                   ; preds = %for.inc.i.i37.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge, %for.body.i.i34.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge
  %shift.0.lcssa.i.i38.i.i.i = phi i32 [ 0, %for.inc.i.i37.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge ], [ %shift.014.i.i29.i.i.i, %for.body.i.i34.i.i.i.drm_fixp_msbset.exit.i40.i.i.i_crit_edge ]
  %shr12.i33.i39.i.i.i = lshr i64 %call11.i.i.i203, 63
  br label %for.body.i39.i46.i.i.i

for.body.i39.i46.i.i.i:                           ; preds = %for.inc.i42.i49.i.i.i.for.body.i39.i46.i.i.i_crit_edge, %drm_fixp_msbset.exit.i40.i.i.i
  %shift.014.i34.i41.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i40.i.i.i ], [ %dec.i40.i47.i.i.i, %for.inc.i42.i49.i.i.i.for.body.i39.i46.i.i.i_crit_edge ]
  %sh_prom.i35.i42.i.i.i = zext i32 %shift.014.i34.i41.i.i.i to i64
  %shr213.i36.i43.i.i.i = lshr i64 %call11.i.i.i203, %sh_prom.i35.i42.i.i.i
  %and3.i37.i44.i.i.i = and i64 %shr213.i36.i43.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i44.i.i.i, i64 %shr12.i33.i39.i.i.i)
  %cmp5.not.i38.i45.i.i.i = icmp eq i64 %and3.i37.i44.i.i.i, %shr12.i33.i39.i.i.i
  br i1 %cmp5.not.i38.i45.i.i.i, label %for.inc.i42.i49.i.i.i, label %for.body.i39.i46.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge

for.body.i39.i46.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge: ; preds = %for.body.i39.i46.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i53.i.i.i

for.inc.i42.i49.i.i.i:                            ; preds = %for.body.i39.i46.i.i.i
  %dec.i40.i47.i.i.i = add nsw i32 %shift.014.i34.i41.i.i.i, -1
  %cmp.not.i41.i48.i.i.i = icmp eq i32 %dec.i40.i47.i.i.i, 0
  br i1 %cmp.not.i41.i48.i.i.i, label %for.inc.i42.i49.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge, label %for.inc.i42.i49.i.i.i.for.body.i39.i46.i.i.i_crit_edge

for.inc.i42.i49.i.i.i.for.body.i39.i46.i.i.i_crit_edge: ; preds = %for.inc.i42.i49.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i46.i.i.i

for.inc.i42.i49.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge: ; preds = %for.inc.i42.i49.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i53.i.i.i

drm_fixp_msbset.exit44.i53.i.i.i:                 ; preds = %for.inc.i42.i49.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge, %for.body.i39.i46.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge
  %shift.0.lcssa.i43.i50.i.i.i = phi i32 [ 0, %for.inc.i42.i49.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge ], [ %shift.014.i34.i41.i.i.i, %for.body.i39.i46.i.i.i.drm_fixp_msbset.exit44.i53.i.i.i_crit_edge ]
  %add.i51.i.i.i = add i32 %shift.0.lcssa.i43.i50.i.i.i, %shift.0.lcssa.i.i38.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i51.i.i.i)
  %cmp.i52.i.i.i = icmp ugt i32 %add.i51.i.i.i, 61
  br i1 %cmp.i52.i.i.i, label %if.end.i66.i.i.i, label %if.end11.thread.i55.i.i.i

if.end11.thread.i55.i.i.i:                        ; preds = %drm_fixp_msbset.exit44.i53.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i54.i.i.i = mul i64 %call11.i.i.i203, %call7.i.i.i
  br label %if.then13.i78.i.i.i

if.end.i66.i.i.i:                                 ; preds = %drm_fixp_msbset.exit44.i53.i.i.i
  %sub.i56.i.i.i = add i32 %add.i51.i.i.i, -61
  %shr.i57.i.i.i = lshr i32 %sub.i56.i.i.i, 1
  %and.i58.i.i.i = and i32 %sub.i56.i.i.i, 1
  %add2.i59.i.i.i = add nuw nsw i32 %shr.i57.i.i.i, %and.i58.i.i.i
  %sh_prom.i60.i.i.i = zext i32 %add2.i59.i.i.i to i64
  %shr3.i61.i.i.i = ashr i64 %call7.i.i.i, %sh_prom.i60.i.i.i
  %sh_prom5.i62.i.i.i = zext i32 %shr.i57.i.i.i to i64
  %shr6.i63.i.i.i = ashr i64 %call11.i.i.i203, %sh_prom5.i62.i.i.i
  %mul.i64.i.i.i = mul i64 %shr3.i61.i.i.i, %shr6.i63.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i56.i.i.i)
  %cmp7.i65.i.i.i = icmp ugt i32 %sub.i56.i.i.i, 32
  br i1 %cmp7.i65.i.i.i, label %if.then8.i70.i.i.i, label %if.end11.i72.i.i.i

if.then8.i70.i.i.i:                               ; preds = %if.end.i66.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i67.i.i.i = add i32 %add.i51.i.i.i, -93
  %sh_prom10.i68.i.i.i = zext i32 %sub9.i67.i.i.i to i64
  %shl.i69.i.i.i = shl i64 %mul.i64.i.i.i, %sh_prom10.i68.i.i.i
  br label %drm_fixp_mul.exit80.i.i.i

if.end11.i72.i.i.i:                               ; preds = %if.end.i66.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i56.i.i.i)
  %cmp12.not.i71.i.i.i = icmp eq i32 %sub.i56.i.i.i, 32
  br i1 %cmp12.not.i71.i.i.i, label %if.end11.i72.i.i.i.drm_fixp_mul.exit80.i.i.i_crit_edge, label %if.end11.i72.i.i.i.if.then13.i78.i.i.i_crit_edge

if.end11.i72.i.i.i.if.then13.i78.i.i.i_crit_edge: ; preds = %if.end11.i72.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i78.i.i.i

if.end11.i72.i.i.i.drm_fixp_mul.exit80.i.i.i_crit_edge: ; preds = %if.end11.i72.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit80.i.i.i

if.then13.i78.i.i.i:                              ; preds = %if.end11.i72.i.i.i.if.then13.i78.i.i.i_crit_edge, %if.end11.thread.i55.i.i.i
  %shift.05056.i73.i.i.i = phi i32 [ 0, %if.end11.thread.i55.i.i.i ], [ %sub.i56.i.i.i, %if.end11.i72.i.i.i.if.then13.i78.i.i.i_crit_edge ]
  %mul5155.i74.i.i.i = phi i64 [ %mul48.i54.i.i.i, %if.end11.thread.i55.i.i.i ], [ %mul.i64.i.i.i, %if.end11.i72.i.i.i.if.then13.i78.i.i.i_crit_edge ]
  %sub14.i75.i.i.i = sub nuw nsw i32 32, %shift.05056.i73.i.i.i
  %sh_prom15.i76.i.i.i = zext i32 %sub14.i75.i.i.i to i64
  %shr16.i77.i.i.i = ashr i64 %mul5155.i74.i.i.i, %sh_prom15.i76.i.i.i
  br label %drm_fixp_mul.exit80.i.i.i

drm_fixp_mul.exit80.i.i.i:                        ; preds = %if.then13.i78.i.i.i, %if.end11.i72.i.i.i.drm_fixp_mul.exit80.i.i.i_crit_edge, %if.then8.i70.i.i.i
  %retval.0.i79.i.i.i = phi i64 [ %shl.i69.i.i.i, %if.then8.i70.i.i.i ], [ %shr16.i77.i.i.i, %if.then13.i78.i.i.i ], [ %mul.i64.i.i.i, %if.end11.i72.i.i.i.drm_fixp_mul.exit80.i.i.i_crit_edge ]
  %shr12.i.i81.i.i.i = lshr i64 %call1.i.i.i148, 63
  br label %for.body.i.i87.i.i.i

for.body.i.i87.i.i.i:                             ; preds = %for.inc.i.i90.i.i.i.for.body.i.i87.i.i.i_crit_edge, %drm_fixp_mul.exit80.i.i.i
  %shift.014.i.i82.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit80.i.i.i ], [ %dec.i.i88.i.i.i, %for.inc.i.i90.i.i.i.for.body.i.i87.i.i.i_crit_edge ]
  %sh_prom.i.i83.i.i.i = zext i32 %shift.014.i.i82.i.i.i to i64
  %shr213.i.i84.i.i.i = lshr i64 %call1.i.i.i148, %sh_prom.i.i83.i.i.i
  %and3.i.i85.i.i.i = and i64 %shr213.i.i84.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i85.i.i.i, i64 %shr12.i.i81.i.i.i)
  %cmp5.not.i.i86.i.i.i = icmp eq i64 %and3.i.i85.i.i.i, %shr12.i.i81.i.i.i
  br i1 %cmp5.not.i.i86.i.i.i, label %for.inc.i.i90.i.i.i, label %for.body.i.i87.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge

for.body.i.i87.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge: ; preds = %for.body.i.i87.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i93.i.i.i

for.inc.i.i90.i.i.i:                              ; preds = %for.body.i.i87.i.i.i
  %dec.i.i88.i.i.i = add nsw i32 %shift.014.i.i82.i.i.i, -1
  %cmp.not.i.i89.i.i.i = icmp eq i32 %dec.i.i88.i.i.i, 0
  br i1 %cmp.not.i.i89.i.i.i, label %for.inc.i.i90.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge, label %for.inc.i.i90.i.i.i.for.body.i.i87.i.i.i_crit_edge

for.inc.i.i90.i.i.i.for.body.i.i87.i.i.i_crit_edge: ; preds = %for.inc.i.i90.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i87.i.i.i

for.inc.i.i90.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge: ; preds = %for.inc.i.i90.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i93.i.i.i

drm_fixp_msbset.exit.i93.i.i.i:                   ; preds = %for.inc.i.i90.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge, %for.body.i.i87.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge
  %shift.0.lcssa.i.i91.i.i.i = phi i32 [ 0, %for.inc.i.i90.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge ], [ %shift.014.i.i82.i.i.i, %for.body.i.i87.i.i.i.drm_fixp_msbset.exit.i93.i.i.i_crit_edge ]
  %shr12.i33.i92.i.i.i = lshr i64 %call5.i.i.i150, 63
  br label %for.body.i39.i99.i.i.i

for.body.i39.i99.i.i.i:                           ; preds = %for.inc.i42.i102.i.i.i.for.body.i39.i99.i.i.i_crit_edge, %drm_fixp_msbset.exit.i93.i.i.i
  %shift.014.i34.i94.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i93.i.i.i ], [ %dec.i40.i100.i.i.i, %for.inc.i42.i102.i.i.i.for.body.i39.i99.i.i.i_crit_edge ]
  %sh_prom.i35.i95.i.i.i = zext i32 %shift.014.i34.i94.i.i.i to i64
  %shr213.i36.i96.i.i.i = lshr i64 %call5.i.i.i150, %sh_prom.i35.i95.i.i.i
  %and3.i37.i97.i.i.i = and i64 %shr213.i36.i96.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i97.i.i.i, i64 %shr12.i33.i92.i.i.i)
  %cmp5.not.i38.i98.i.i.i = icmp eq i64 %and3.i37.i97.i.i.i, %shr12.i33.i92.i.i.i
  br i1 %cmp5.not.i38.i98.i.i.i, label %for.inc.i42.i102.i.i.i, label %for.body.i39.i99.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge

for.body.i39.i99.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge: ; preds = %for.body.i39.i99.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i106.i.i.i

for.inc.i42.i102.i.i.i:                           ; preds = %for.body.i39.i99.i.i.i
  %dec.i40.i100.i.i.i = add nsw i32 %shift.014.i34.i94.i.i.i, -1
  %cmp.not.i41.i101.i.i.i = icmp eq i32 %dec.i40.i100.i.i.i, 0
  br i1 %cmp.not.i41.i101.i.i.i, label %for.inc.i42.i102.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge, label %for.inc.i42.i102.i.i.i.for.body.i39.i99.i.i.i_crit_edge

for.inc.i42.i102.i.i.i.for.body.i39.i99.i.i.i_crit_edge: ; preds = %for.inc.i42.i102.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i99.i.i.i

for.inc.i42.i102.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge: ; preds = %for.inc.i42.i102.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i106.i.i.i

drm_fixp_msbset.exit44.i106.i.i.i:                ; preds = %for.inc.i42.i102.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge, %for.body.i39.i99.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge
  %shift.0.lcssa.i43.i103.i.i.i = phi i32 [ 0, %for.inc.i42.i102.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge ], [ %shift.014.i34.i94.i.i.i, %for.body.i39.i99.i.i.i.drm_fixp_msbset.exit44.i106.i.i.i_crit_edge ]
  %add.i104.i.i.i = add i32 %shift.0.lcssa.i43.i103.i.i.i, %shift.0.lcssa.i.i91.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i104.i.i.i)
  %cmp.i105.i.i.i = icmp ugt i32 %add.i104.i.i.i, 61
  br i1 %cmp.i105.i.i.i, label %if.end.i119.i.i.i, label %if.end11.thread.i108.i.i.i

if.end11.thread.i108.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i106.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i107.i.i.i = mul i64 %call5.i.i.i150, %call1.i.i.i148
  br label %if.then13.i131.i.i.i

if.end.i119.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i106.i.i.i
  %sub.i109.i.i.i = add i32 %add.i104.i.i.i, -61
  %shr.i110.i.i.i = lshr i32 %sub.i109.i.i.i, 1
  %and.i111.i.i.i = and i32 %sub.i109.i.i.i, 1
  %add2.i112.i.i.i = add nuw nsw i32 %shr.i110.i.i.i, %and.i111.i.i.i
  %sh_prom.i113.i.i.i = zext i32 %add2.i112.i.i.i to i64
  %shr3.i114.i.i.i = ashr i64 %call1.i.i.i148, %sh_prom.i113.i.i.i
  %sh_prom5.i115.i.i.i = zext i32 %shr.i110.i.i.i to i64
  %shr6.i116.i.i.i = ashr i64 %call5.i.i.i150, %sh_prom5.i115.i.i.i
  %mul.i117.i.i.i = mul i64 %shr3.i114.i.i.i, %shr6.i116.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i109.i.i.i)
  %cmp7.i118.i.i.i = icmp ugt i32 %sub.i109.i.i.i, 32
  br i1 %cmp7.i118.i.i.i, label %if.then8.i123.i.i.i, label %if.end11.i125.i.i.i

if.then8.i123.i.i.i:                              ; preds = %if.end.i119.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i120.i.i.i = add i32 %add.i104.i.i.i, -93
  %sh_prom10.i121.i.i.i = zext i32 %sub9.i120.i.i.i to i64
  %shl.i122.i.i.i = shl i64 %mul.i117.i.i.i, %sh_prom10.i121.i.i.i
  br label %drm_fixp_mul.exit133.i.i.i

if.end11.i125.i.i.i:                              ; preds = %if.end.i119.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i109.i.i.i)
  %cmp12.not.i124.i.i.i = icmp eq i32 %sub.i109.i.i.i, 32
  br i1 %cmp12.not.i124.i.i.i, label %if.end11.i125.i.i.i.drm_fixp_mul.exit133.i.i.i_crit_edge, label %if.end11.i125.i.i.i.if.then13.i131.i.i.i_crit_edge

if.end11.i125.i.i.i.if.then13.i131.i.i.i_crit_edge: ; preds = %if.end11.i125.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i131.i.i.i

if.end11.i125.i.i.i.drm_fixp_mul.exit133.i.i.i_crit_edge: ; preds = %if.end11.i125.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit133.i.i.i

if.then13.i131.i.i.i:                             ; preds = %if.end11.i125.i.i.i.if.then13.i131.i.i.i_crit_edge, %if.end11.thread.i108.i.i.i
  %shift.05056.i126.i.i.i = phi i32 [ 0, %if.end11.thread.i108.i.i.i ], [ %sub.i109.i.i.i, %if.end11.i125.i.i.i.if.then13.i131.i.i.i_crit_edge ]
  %mul5155.i127.i.i.i = phi i64 [ %mul48.i107.i.i.i, %if.end11.thread.i108.i.i.i ], [ %mul.i117.i.i.i, %if.end11.i125.i.i.i.if.then13.i131.i.i.i_crit_edge ]
  %sub14.i128.i.i.i = sub nuw nsw i32 32, %shift.05056.i126.i.i.i
  %sh_prom15.i129.i.i.i = zext i32 %sub14.i128.i.i.i to i64
  %shr16.i130.i.i.i = ashr i64 %mul5155.i127.i.i.i, %sh_prom15.i129.i.i.i
  br label %drm_fixp_mul.exit133.i.i.i

drm_fixp_mul.exit133.i.i.i:                       ; preds = %if.then13.i131.i.i.i, %if.end11.i125.i.i.i.drm_fixp_mul.exit133.i.i.i_crit_edge, %if.then8.i123.i.i.i
  %retval.0.i132.i.i.i = phi i64 [ %shl.i122.i.i.i, %if.then8.i123.i.i.i ], [ %shr16.i130.i.i.i, %if.then13.i131.i.i.i ], [ %mul.i117.i.i.i, %if.end11.i125.i.i.i.drm_fixp_mul.exit133.i.i.i_crit_edge ]
  %shr12.i.i134.i.i.i = lshr i64 %retval.0.i132.i.i.i, 63
  br label %for.body.i.i140.i.i.i

for.body.i.i140.i.i.i:                            ; preds = %for.inc.i.i143.i.i.i.for.body.i.i140.i.i.i_crit_edge, %drm_fixp_mul.exit133.i.i.i
  %shift.014.i.i135.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit133.i.i.i ], [ %dec.i.i141.i.i.i, %for.inc.i.i143.i.i.i.for.body.i.i140.i.i.i_crit_edge ]
  %sh_prom.i.i136.i.i.i = zext i32 %shift.014.i.i135.i.i.i to i64
  %shr213.i.i137.i.i.i = lshr i64 %retval.0.i132.i.i.i, %sh_prom.i.i136.i.i.i
  %and3.i.i138.i.i.i = and i64 %shr213.i.i137.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i138.i.i.i, i64 %shr12.i.i134.i.i.i)
  %cmp5.not.i.i139.i.i.i = icmp eq i64 %and3.i.i138.i.i.i, %shr12.i.i134.i.i.i
  br i1 %cmp5.not.i.i139.i.i.i, label %for.inc.i.i143.i.i.i, label %for.body.i.i140.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge

for.body.i.i140.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge: ; preds = %for.body.i.i140.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i146.i.i.i

for.inc.i.i143.i.i.i:                             ; preds = %for.body.i.i140.i.i.i
  %dec.i.i141.i.i.i = add nsw i32 %shift.014.i.i135.i.i.i, -1
  %cmp.not.i.i142.i.i.i = icmp eq i32 %dec.i.i141.i.i.i, 0
  br i1 %cmp.not.i.i142.i.i.i, label %for.inc.i.i143.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge, label %for.inc.i.i143.i.i.i.for.body.i.i140.i.i.i_crit_edge

for.inc.i.i143.i.i.i.for.body.i.i140.i.i.i_crit_edge: ; preds = %for.inc.i.i143.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i140.i.i.i

for.inc.i.i143.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge: ; preds = %for.inc.i.i143.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i146.i.i.i

drm_fixp_msbset.exit.i146.i.i.i:                  ; preds = %for.inc.i.i143.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge, %for.body.i.i140.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge
  %shift.0.lcssa.i.i144.i.i.i = phi i32 [ 0, %for.inc.i.i143.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge ], [ %shift.014.i.i135.i.i.i, %for.body.i.i140.i.i.i.drm_fixp_msbset.exit.i146.i.i.i_crit_edge ]
  %shr12.i33.i145.i.i.i = lshr i64 %retval.0.i79.i.i.i, 63
  br label %for.body.i39.i152.i.i.i

for.body.i39.i152.i.i.i:                          ; preds = %for.inc.i42.i155.i.i.i.for.body.i39.i152.i.i.i_crit_edge, %drm_fixp_msbset.exit.i146.i.i.i
  %shift.014.i34.i147.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i146.i.i.i ], [ %dec.i40.i153.i.i.i, %for.inc.i42.i155.i.i.i.for.body.i39.i152.i.i.i_crit_edge ]
  %sh_prom.i35.i148.i.i.i = zext i32 %shift.014.i34.i147.i.i.i to i64
  %shr213.i36.i149.i.i.i = lshr i64 %retval.0.i79.i.i.i, %sh_prom.i35.i148.i.i.i
  %and3.i37.i150.i.i.i = and i64 %shr213.i36.i149.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i150.i.i.i, i64 %shr12.i33.i145.i.i.i)
  %cmp5.not.i38.i151.i.i.i = icmp eq i64 %and3.i37.i150.i.i.i, %shr12.i33.i145.i.i.i
  br i1 %cmp5.not.i38.i151.i.i.i, label %for.inc.i42.i155.i.i.i, label %for.body.i39.i152.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge

for.body.i39.i152.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge: ; preds = %for.body.i39.i152.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i159.i.i.i

for.inc.i42.i155.i.i.i:                           ; preds = %for.body.i39.i152.i.i.i
  %dec.i40.i153.i.i.i = add nsw i32 %shift.014.i34.i147.i.i.i, -1
  %cmp.not.i41.i154.i.i.i = icmp eq i32 %dec.i40.i153.i.i.i, 0
  br i1 %cmp.not.i41.i154.i.i.i, label %for.inc.i42.i155.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge, label %for.inc.i42.i155.i.i.i.for.body.i39.i152.i.i.i_crit_edge

for.inc.i42.i155.i.i.i.for.body.i39.i152.i.i.i_crit_edge: ; preds = %for.inc.i42.i155.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i152.i.i.i

for.inc.i42.i155.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge: ; preds = %for.inc.i42.i155.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i159.i.i.i

drm_fixp_msbset.exit44.i159.i.i.i:                ; preds = %for.inc.i42.i155.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge, %for.body.i39.i152.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge
  %shift.0.lcssa.i43.i156.i.i.i = phi i32 [ 0, %for.inc.i42.i155.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge ], [ %shift.014.i34.i147.i.i.i, %for.body.i39.i152.i.i.i.drm_fixp_msbset.exit44.i159.i.i.i_crit_edge ]
  %add.i157.i.i.i = add i32 %shift.0.lcssa.i43.i156.i.i.i, %shift.0.lcssa.i.i144.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i157.i.i.i)
  %cmp.i158.i.i.i = icmp ugt i32 %add.i157.i.i.i, 61
  br i1 %cmp.i158.i.i.i, label %if.end.i172.i.i.i, label %if.end11.thread.i161.i.i.i

if.end11.thread.i161.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i159.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i160.i.i.i = mul i64 %retval.0.i132.i.i.i, %retval.0.i79.i.i.i
  br label %if.then13.i184.i.i.i

if.end.i172.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i159.i.i.i
  %sub.i162.i.i.i = add i32 %add.i157.i.i.i, -61
  %shr.i163.i.i.i = lshr i32 %sub.i162.i.i.i, 1
  %and.i164.i.i.i = and i32 %sub.i162.i.i.i, 1
  %add2.i165.i.i.i = add nuw nsw i32 %shr.i163.i.i.i, %and.i164.i.i.i
  %sh_prom.i166.i.i.i = zext i32 %add2.i165.i.i.i to i64
  %shr3.i167.i.i.i = ashr i64 %retval.0.i132.i.i.i, %sh_prom.i166.i.i.i
  %sh_prom5.i168.i.i.i = zext i32 %shr.i163.i.i.i to i64
  %shr6.i169.i.i.i = ashr i64 %retval.0.i79.i.i.i, %sh_prom5.i168.i.i.i
  %mul.i170.i.i.i = mul i64 %shr3.i167.i.i.i, %shr6.i169.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i162.i.i.i)
  %cmp7.i171.i.i.i = icmp ugt i32 %sub.i162.i.i.i, 32
  br i1 %cmp7.i171.i.i.i, label %if.then8.i176.i.i.i, label %if.end11.i178.i.i.i

if.then8.i176.i.i.i:                              ; preds = %if.end.i172.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i173.i.i.i = add i32 %add.i157.i.i.i, -93
  %sh_prom10.i174.i.i.i = zext i32 %sub9.i173.i.i.i to i64
  %shl.i175.i.i.i205 = shl i64 %mul.i170.i.i.i, %sh_prom10.i174.i.i.i
  br label %drm_fixp_mul.exit186.i.i.i

if.end11.i178.i.i.i:                              ; preds = %if.end.i172.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i162.i.i.i)
  %cmp12.not.i177.i.i.i = icmp eq i32 %sub.i162.i.i.i, 32
  br i1 %cmp12.not.i177.i.i.i, label %if.end11.i178.i.i.i.drm_fixp_mul.exit186.i.i.i_crit_edge, label %if.end11.i178.i.i.i.if.then13.i184.i.i.i_crit_edge

if.end11.i178.i.i.i.if.then13.i184.i.i.i_crit_edge: ; preds = %if.end11.i178.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i184.i.i.i

if.end11.i178.i.i.i.drm_fixp_mul.exit186.i.i.i_crit_edge: ; preds = %if.end11.i178.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit186.i.i.i

if.then13.i184.i.i.i:                             ; preds = %if.end11.i178.i.i.i.if.then13.i184.i.i.i_crit_edge, %if.end11.thread.i161.i.i.i
  %shift.05056.i179.i.i.i = phi i32 [ 0, %if.end11.thread.i161.i.i.i ], [ %sub.i162.i.i.i, %if.end11.i178.i.i.i.if.then13.i184.i.i.i_crit_edge ]
  %mul5155.i180.i.i.i = phi i64 [ %mul48.i160.i.i.i, %if.end11.thread.i161.i.i.i ], [ %mul.i170.i.i.i, %if.end11.i178.i.i.i.if.then13.i184.i.i.i_crit_edge ]
  %sub14.i181.i.i.i = sub nuw nsw i32 32, %shift.05056.i179.i.i.i
  %sh_prom15.i182.i.i.i = zext i32 %sub14.i181.i.i.i to i64
  %shr16.i183.i.i.i = ashr i64 %mul5155.i180.i.i.i, %sh_prom15.i182.i.i.i
  br label %drm_fixp_mul.exit186.i.i.i

drm_fixp_mul.exit186.i.i.i:                       ; preds = %if.then13.i184.i.i.i, %if.end11.i178.i.i.i.drm_fixp_mul.exit186.i.i.i_crit_edge, %if.then8.i176.i.i.i
  %retval.0.i185.i.i.i = phi i64 [ %shl.i175.i.i.i205, %if.then8.i176.i.i.i ], [ %shr16.i183.i.i.i, %if.then13.i184.i.i.i ], [ %mul.i170.i.i.i, %if.end11.i178.i.i.i.drm_fixp_mul.exit186.i.i.i_crit_edge ]
  %shr12.i.i187.i.i.i = lshr i64 %retval.0.i185.i.i.i, 63
  br label %for.body.i.i193.i.i.i

for.body.i.i193.i.i.i:                            ; preds = %for.inc.i.i196.i.i.i.for.body.i.i193.i.i.i_crit_edge, %drm_fixp_mul.exit186.i.i.i
  %shift.014.i.i188.i.i.i = phi i32 [ 62, %drm_fixp_mul.exit186.i.i.i ], [ %dec.i.i194.i.i.i, %for.inc.i.i196.i.i.i.for.body.i.i193.i.i.i_crit_edge ]
  %sh_prom.i.i189.i.i.i = zext i32 %shift.014.i.i188.i.i.i to i64
  %shr213.i.i190.i.i.i = lshr i64 %retval.0.i185.i.i.i, %sh_prom.i.i189.i.i.i
  %and3.i.i191.i.i.i = and i64 %shr213.i.i190.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i191.i.i.i, i64 %shr12.i.i187.i.i.i)
  %cmp5.not.i.i192.i.i.i = icmp eq i64 %and3.i.i191.i.i.i, %shr12.i.i187.i.i.i
  br i1 %cmp5.not.i.i192.i.i.i, label %for.inc.i.i196.i.i.i, label %for.body.i.i193.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge

for.body.i.i193.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge: ; preds = %for.body.i.i193.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i199.i.i.i

for.inc.i.i196.i.i.i:                             ; preds = %for.body.i.i193.i.i.i
  %dec.i.i194.i.i.i = add nsw i32 %shift.014.i.i188.i.i.i, -1
  %cmp.not.i.i195.i.i.i = icmp eq i32 %dec.i.i194.i.i.i, 0
  br i1 %cmp.not.i.i195.i.i.i, label %for.inc.i.i196.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge, label %for.inc.i.i196.i.i.i.for.body.i.i193.i.i.i_crit_edge

for.inc.i.i196.i.i.i.for.body.i.i193.i.i.i_crit_edge: ; preds = %for.inc.i.i196.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i193.i.i.i

for.inc.i.i196.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge: ; preds = %for.inc.i.i196.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i199.i.i.i

drm_fixp_msbset.exit.i199.i.i.i:                  ; preds = %for.inc.i.i196.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge, %for.body.i.i193.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge
  %shift.0.lcssa.i.i197.i.i.i = phi i32 [ 0, %for.inc.i.i196.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge ], [ %shift.014.i.i188.i.i.i, %for.body.i.i193.i.i.i.drm_fixp_msbset.exit.i199.i.i.i_crit_edge ]
  br label %for.body.i39.i205.i.i.i

for.body.i39.i205.i.i.i:                          ; preds = %for.inc.i42.i208.i.i.i.for.body.i39.i205.i.i.i_crit_edge, %drm_fixp_msbset.exit.i199.i.i.i
  %shift.014.i34.i200.i.i.i = phi i32 [ 62, %drm_fixp_msbset.exit.i199.i.i.i ], [ %dec.i40.i206.i.i.i, %for.inc.i42.i208.i.i.i.for.body.i39.i205.i.i.i_crit_edge ]
  %sh_prom.i35.i201.i.i.i = zext i32 %shift.014.i34.i200.i.i.i to i64
  %shr213.i36.i202.i.i.i = lshr i64 %call3.i.i.i149, %sh_prom.i35.i201.i.i.i
  %and3.i37.i203.i.i.i = and i64 %shr213.i36.i202.i.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i203.i.i.i, i64 %shr12.i33.i.i.i.i163)
  %cmp5.not.i38.i204.i.i.i = icmp eq i64 %and3.i37.i203.i.i.i, %shr12.i33.i.i.i.i163
  br i1 %cmp5.not.i38.i204.i.i.i, label %for.inc.i42.i208.i.i.i, label %for.body.i39.i205.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge

for.body.i39.i205.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge: ; preds = %for.body.i39.i205.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i212.i.i.i

for.inc.i42.i208.i.i.i:                           ; preds = %for.body.i39.i205.i.i.i
  %dec.i40.i206.i.i.i = add nsw i32 %shift.014.i34.i200.i.i.i, -1
  %cmp.not.i41.i207.i.i.i = icmp eq i32 %dec.i40.i206.i.i.i, 0
  br i1 %cmp.not.i41.i207.i.i.i, label %for.inc.i42.i208.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge, label %for.inc.i42.i208.i.i.i.for.body.i39.i205.i.i.i_crit_edge

for.inc.i42.i208.i.i.i.for.body.i39.i205.i.i.i_crit_edge: ; preds = %for.inc.i42.i208.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i205.i.i.i

for.inc.i42.i208.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge: ; preds = %for.inc.i42.i208.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i212.i.i.i

drm_fixp_msbset.exit44.i212.i.i.i:                ; preds = %for.inc.i42.i208.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge, %for.body.i39.i205.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge
  %shift.0.lcssa.i43.i209.i.i.i = phi i32 [ 0, %for.inc.i42.i208.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge ], [ %shift.014.i34.i200.i.i.i, %for.body.i39.i205.i.i.i.drm_fixp_msbset.exit44.i212.i.i.i_crit_edge ]
  %add.i210.i.i.i = add i32 %shift.0.lcssa.i43.i209.i.i.i, %shift.0.lcssa.i.i197.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i210.i.i.i)
  %cmp.i211.i.i.i = icmp ugt i32 %add.i210.i.i.i, 61
  br i1 %cmp.i211.i.i.i, label %if.end.i225.i.i.i, label %if.end11.thread.i214.i.i.i

if.end11.thread.i214.i.i.i:                       ; preds = %drm_fixp_msbset.exit44.i212.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i213.i.i.i = mul i64 %retval.0.i185.i.i.i, %call3.i.i.i149
  br label %if.then13.i237.i.i.i

if.end.i225.i.i.i:                                ; preds = %drm_fixp_msbset.exit44.i212.i.i.i
  %sub.i215.i.i.i = add i32 %add.i210.i.i.i, -61
  %shr.i216.i.i.i = lshr i32 %sub.i215.i.i.i, 1
  %and.i217.i.i.i = and i32 %sub.i215.i.i.i, 1
  %add2.i218.i.i.i = add nuw nsw i32 %shr.i216.i.i.i, %and.i217.i.i.i
  %sh_prom.i219.i.i.i = zext i32 %add2.i218.i.i.i to i64
  %shr3.i220.i.i.i = ashr i64 %retval.0.i185.i.i.i, %sh_prom.i219.i.i.i
  %sh_prom5.i221.i.i.i = zext i32 %shr.i216.i.i.i to i64
  %shr6.i222.i.i.i = ashr i64 %call3.i.i.i149, %sh_prom5.i221.i.i.i
  %mul.i223.i.i.i = mul i64 %shr3.i220.i.i.i, %shr6.i222.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i215.i.i.i)
  %cmp7.i224.i.i.i = icmp ugt i32 %sub.i215.i.i.i, 32
  br i1 %cmp7.i224.i.i.i, label %if.then8.i229.i.i.i, label %if.end11.i231.i.i.i

if.then8.i229.i.i.i:                              ; preds = %if.end.i225.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i226.i.i.i = add i32 %add.i210.i.i.i, -93
  %sh_prom10.i227.i.i.i = zext i32 %sub9.i226.i.i.i to i64
  %shl.i228.i.i.i = shl i64 %mul.i223.i.i.i, %sh_prom10.i227.i.i.i
  br label %si_calculate_leakage_for_v.exit.i

if.end11.i231.i.i.i:                              ; preds = %if.end.i225.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i215.i.i.i)
  %cmp12.not.i230.i.i.i = icmp eq i32 %sub.i215.i.i.i, 32
  br i1 %cmp12.not.i230.i.i.i, label %if.end11.i231.i.i.i.si_calculate_leakage_for_v.exit.i_crit_edge, label %if.end11.i231.i.i.i.if.then13.i237.i.i.i_crit_edge

if.end11.i231.i.i.i.if.then13.i237.i.i.i_crit_edge: ; preds = %if.end11.i231.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i237.i.i.i

if.end11.i231.i.i.i.si_calculate_leakage_for_v.exit.i_crit_edge: ; preds = %if.end11.i231.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_calculate_leakage_for_v.exit.i

if.then13.i237.i.i.i:                             ; preds = %if.end11.i231.i.i.i.if.then13.i237.i.i.i_crit_edge, %if.end11.thread.i214.i.i.i
  %shift.05056.i232.i.i.i = phi i32 [ 0, %if.end11.thread.i214.i.i.i ], [ %sub.i215.i.i.i, %if.end11.i231.i.i.i.if.then13.i237.i.i.i_crit_edge ]
  %mul5155.i233.i.i.i = phi i64 [ %mul48.i213.i.i.i, %if.end11.thread.i214.i.i.i ], [ %mul.i223.i.i.i, %if.end11.i231.i.i.i.if.then13.i237.i.i.i_crit_edge ]
  %sub14.i234.i.i.i = sub nuw nsw i32 32, %shift.05056.i232.i.i.i
  %sh_prom15.i235.i.i.i = zext i32 %sub14.i234.i.i.i to i64
  %shr16.i236.i.i.i = ashr i64 %mul5155.i233.i.i.i, %sh_prom15.i235.i.i.i
  br label %si_calculate_leakage_for_v.exit.i

si_calculate_leakage_for_v.exit.i:                ; preds = %if.then13.i237.i.i.i, %if.end11.i231.i.i.i.si_calculate_leakage_for_v.exit.i_crit_edge, %if.then8.i229.i.i.i
  %retval.0.i238.i.i.i = phi i64 [ %shl.i228.i.i.i, %if.then8.i229.i.i.i ], [ %shr16.i236.i.i.i, %if.then13.i237.i.i.i ], [ %mul.i223.i.i.i, %if.end11.i231.i.i.i.si_calculate_leakage_for_v.exit.i_crit_edge ]
  %mul.i.i.i206 = mul i64 %retval.0.i238.i.i.i, 1000
  %sum.shift.i207 = lshr i64 %mul.i.i.i206, 34
  %div12.i208 = trunc i64 %sum.shift.i207 to i32
  %82 = tail call i32 @llvm.umin.i32(i32 %div12.i208, i32 65535) #14
  %conv12.i = trunc i32 %82 to i16
  %sub13.i = sub nuw nsw i32 31, %j.04.i
  %arrayidx14.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 0, i32 %sub13.i
  %83 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 %conv12.i, ptr %arrayidx14.i, align 2
  %arrayidx14.1.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 1, i32 %sub13.i
  %84 = ptrtoint ptr %arrayidx14.1.i to i32
  call void @__asan_store2_noabort(i32 %84)
  store i16 %conv12.i, ptr %arrayidx14.1.i, align 2
  %arrayidx14.2.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 2, i32 %sub13.i
  %85 = ptrtoint ptr %arrayidx14.2.i to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 %conv12.i, ptr %arrayidx14.2.i, align 2
  %arrayidx14.3.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 3, i32 %sub13.i
  %86 = ptrtoint ptr %arrayidx14.3.i to i32
  call void @__asan_store2_noabort(i32 %86)
  store i16 %conv12.i, ptr %arrayidx14.3.i, align 2
  %arrayidx14.4.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 4, i32 %sub13.i
  %87 = ptrtoint ptr %arrayidx14.4.i to i32
  call void @__asan_store2_noabort(i32 %87)
  store i16 %conv12.i, ptr %arrayidx14.4.i, align 2
  %arrayidx14.5.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 5, i32 %sub13.i
  %88 = ptrtoint ptr %arrayidx14.5.i to i32
  call void @__asan_store2_noabort(i32 %88)
  store i16 %conv12.i, ptr %arrayidx14.5.i, align 2
  %arrayidx14.6.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 6, i32 %sub13.i
  %89 = ptrtoint ptr %arrayidx14.6.i to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 %conv12.i, ptr %arrayidx14.6.i, align 2
  %arrayidx14.7.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 7, i32 %sub13.i
  %90 = ptrtoint ptr %arrayidx14.7.i to i32
  call void @__asan_store2_noabort(i32 %90)
  store i16 %conv12.i, ptr %arrayidx14.7.i, align 2
  %arrayidx14.8.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 8, i32 %sub13.i
  %91 = ptrtoint ptr %arrayidx14.8.i to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 %conv12.i, ptr %arrayidx14.8.i, align 2
  %arrayidx14.9.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 9, i32 %sub13.i
  %92 = ptrtoint ptr %arrayidx14.9.i to i32
  call void @__asan_store2_noabort(i32 %92)
  store i16 %conv12.i, ptr %arrayidx14.9.i, align 2
  %arrayidx14.10.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 10, i32 %sub13.i
  %93 = ptrtoint ptr %arrayidx14.10.i to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 %conv12.i, ptr %arrayidx14.10.i, align 2
  %arrayidx14.11.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 11, i32 %sub13.i
  %94 = ptrtoint ptr %arrayidx14.11.i to i32
  call void @__asan_store2_noabort(i32 %94)
  store i16 %conv12.i, ptr %arrayidx14.11.i, align 2
  %arrayidx14.12.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 12, i32 %sub13.i
  %95 = ptrtoint ptr %arrayidx14.12.i to i32
  call void @__asan_store2_noabort(i32 %95)
  store i16 %conv12.i, ptr %arrayidx14.12.i, align 2
  %arrayidx14.13.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 13, i32 %sub13.i
  %96 = ptrtoint ptr %arrayidx14.13.i to i32
  call void @__asan_store2_noabort(i32 %96)
  store i16 %conv12.i, ptr %arrayidx14.13.i, align 2
  %arrayidx14.14.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 14, i32 %sub13.i
  %97 = ptrtoint ptr %arrayidx14.14.i to i32
  call void @__asan_store2_noabort(i32 %97)
  store i16 %conv12.i, ptr %arrayidx14.14.i, align 2
  %arrayidx14.15.i = getelementptr [16 x [32 x i16]], ptr %call7.i.i, i32 0, i32 15, i32 %sub13.i
  %98 = ptrtoint ptr %arrayidx14.15.i to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 %conv12.i, ptr %arrayidx14.15.i, align 2
  %inc16.i = add nuw nsw i32 %j.04.i, 1
  %exitcond.not.i209 = icmp eq i32 %inc16.i, 32
  br i1 %exitcond.not.i209, label %si_calculate_leakage_for_v.exit.i.if.end35_crit_edge, label %si_calculate_leakage_for_v.exit.i.for.body.i152_crit_edge

si_calculate_leakage_for_v.exit.i.for.body.i152_crit_edge: ; preds = %si_calculate_leakage_for_v.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i152

si_calculate_leakage_for_v.exit.i.if.end35_crit_edge: ; preds = %si_calculate_leakage_for_v.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.end35:                                         ; preds = %si_calculate_leakage_for_v.exit.i.if.end35_crit_edge, %for.inc18.i.if.end35_crit_edge
  %load_line_slope38 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 30
  %99 = ptrtoint ptr %load_line_slope38 to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %load_line_slope38, align 4
  %conv39 = zext i16 %100 to i32
  %shl40 = shl nuw nsw i32 %conv39, 12
  %div41 = udiv i32 %shl40, 100
  %l2_lta_window_size = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 3
  %101 = ptrtoint ptr %l2_lta_window_size to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %l2_lta_window_size, align 4
  %l2numWin_TDP = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 6
  %103 = ptrtoint ptr %l2numWin_TDP to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %l2numWin_TDP, align 4
  %lts_truncate = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 34, i32 4
  %104 = ptrtoint ptr %lts_truncate to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %lts_truncate, align 4
  %lts_truncate_n = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 8
  %106 = ptrtoint ptr %lts_truncate_n to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %105, ptr %lts_truncate_n, align 4
  %107 = ptrtoint ptr %shift_n to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %shift_n, align 1
  %SHIFT_N = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 9
  %109 = ptrtoint ptr %SHIFT_N to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 %108, ptr %SHIFT_N, align 1
  %conv46 = zext i16 %sub to i32
  %lkge_lut_V0 = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 1
  %110 = ptrtoint ptr %lkge_lut_V0 to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %conv46, ptr %lkge_lut_V0, align 8
  %lkge_lut_Vstep = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 2
  %111 = ptrtoint ptr %lkge_lut_Vstep to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 %conv23, ptr %lkge_lut_Vstep, align 4
  %R_LL = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 4
  %112 = ptrtoint ptr %R_LL to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 %div41, ptr %R_LL, align 4
  %113 = ptrtoint ptr %wintime to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %wintime, align 4
  %WinTime = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 3
  %115 = ptrtoint ptr %WinTime to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %114, ptr %WinTime, align 8
  %calculation_repeats = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 5
  %116 = ptrtoint ptr %calculation_repeats to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 2, ptr %calculation_repeats, align 8
  %dc_cac50 = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 7
  %117 = ptrtoint ptr %dc_cac50 to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 0, ptr %dc_cac50, align 8
  %log2_PG_LKG_SCALE = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 10
  %118 = ptrtoint ptr %log2_PG_LKG_SCALE to i32
  call void @__asan_store1_noabort(i32 %118)
  store i8 12, ptr %log2_PG_LKG_SCALE, align 2
  %119 = ptrtoint ptr %powertune_data to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %powertune_data, align 4
  %operating_temp = getelementptr inbounds %struct.si_powertune_data, ptr %120, i32 0, i32 4
  %121 = ptrtoint ptr %operating_temp to i32
  call void @__asan_load1_noabort(i32 %121)
  %122 = load i8, ptr %operating_temp, align 2
  %cac_temp = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 11
  %123 = ptrtoint ptr %cac_temp to i32
  call void @__asan_store1_noabort(i32 %123)
  store i8 %122, ptr %cac_temp, align 1
  %lkge_lut_T0 = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 12
  %124 = ptrtoint ptr %lkge_lut_T0 to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 60, ptr %lkge_lut_T0, align 8
  %lkge_lut_Tstep = getelementptr inbounds %struct.PP_SIslands_CacConfig, ptr %call7.i.i, i32 0, i32 13
  %125 = ptrtoint ptr %lkge_lut_Tstep to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 4, ptr %lkge_lut_Tstep, align 4
  %cac_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 25
  %126 = ptrtoint ptr %cac_table_start to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %cac_table_start, align 4
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %128 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %sram_end, align 4
  %call54 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %127, ptr noundef nonnull %call7.i.i, i32 noundef 1064, i32 noundef %129) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %done_free, label %if.end35.if.then60_crit_edge

if.end35.if.then60_crit_edge:                     ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then60

done_free:                                        ; preds = %if.end35
  %130 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %priv.i, align 4
  %soft_regs_start.i = getelementptr inbounds %struct.si_power_info, ptr %131, i32 0, i32 22
  %132 = ptrtoint ptr %soft_regs_start.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %soft_regs_start.i, align 4
  %add.i211 = add i32 %133, 168
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %131, i32 0, i32 20
  %134 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %sram_end.i, align 4
  %call1.i212 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i211, i32 noundef %div, i32 noundef %135) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i212)
  %tobool59.not = icmp eq i32 %call1.i212, 0
  br i1 %tobool59.not, label %done_free.if.end62_crit_edge, label %done_free.if.then60_crit_edge

done_free.if.then60_crit_edge:                    ; preds = %done_free
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then60

done_free.if.end62_crit_edge:                     ; preds = %done_free
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end62

if.then60:                                        ; preds = %done_free.if.then60_crit_edge, %if.end35.if.then60_crit_edge, %if.end32.i.if.then60_crit_edge, %for.end.i.if.then60_crit_edge
  %ret.1226 = phi i32 [ %call1.i212, %done_free.if.then60_crit_edge ], [ %call54, %if.end35.if.then60_crit_edge ], [ -22, %for.end.i.if.then60_crit_edge ], [ -22, %if.end32.i.if.then60_crit_edge ]
  %136 = ptrtoint ptr %enable_cac to i32
  call void @__asan_store1_noabort(i32 %136)
  store i8 0, ptr %enable_cac, align 1
  %enable_power_containment = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 10
  %137 = ptrtoint ptr %enable_power_containment to i32
  call void @__asan_store1_noabort(i32 %137)
  store i8 0, ptr %enable_power_containment, align 2
  br label %if.end62

if.end62:                                         ; preds = %if.then60, %done_free.if.end62_crit_edge
  %ret.1227 = phi i32 [ %ret.1226, %if.then60 ], [ 0, %done_free.if.end62_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end62, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1227, %if.end62 ], [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_initialize_hardware_cac_manager(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %enable_cac = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %enable_cac to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %enable_cac, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp = icmp eq i8 %3, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %cac_configuration_required = getelementptr inbounds %struct.ni_power_info, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %cac_configuration_required to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %cac_configuration_required, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp5 = icmp eq i8 %5, 0
  br i1 %cmp5, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %lcac_config = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 31
  %6 = ptrtoint ptr %lcac_config to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lcac_config, align 4
  %call7 = tail call fastcc i32 @si_program_cac_config_registers(ptr noundef %adev, ptr noundef %7)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %cac_override = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 32
  %8 = ptrtoint ptr %cac_override to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cac_override, align 4
  %call11 = tail call fastcc i32 @si_program_cac_config_registers(ptr noundef %adev, ptr noundef %9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  %cac_weights = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 30
  %10 = ptrtoint ptr %cac_weights to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cac_weights, align 4
  %call15 = tail call fastcc i32 @si_program_cac_config_registers(ptr noundef %adev, ptr noundef %11)
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end10.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ %call7, %if.end.cleanup_crit_edge ], [ %call11, %if.end10.cleanup_crit_edge ], [ %call15, %if.end14 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_initialize_smc_dte_tables(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %dte_data1 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35
  %cmp = icmp eq ptr %dte_data1, null
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %enable_dte = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 13
  %2 = ptrtoint ptr %enable_dte to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %enable_dte, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %enable_dte2 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 13
  %3 = ptrtoint ptr %enable_dte2 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %enable_dte2, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %cmp3 = icmp eq i8 %4, 0
  br i1 %cmp3, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %k = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 2
  %5 = ptrtoint ptr %k to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %k, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp7 = icmp eq i32 %6, 0
  br i1 %cmp7, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %7 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3520, i32 noundef 204) #18
  %cmp12 = icmp eq ptr %call7.i.i, null
  br i1 %cmp12, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  %8 = ptrtoint ptr %enable_dte2 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 0, ptr %enable_dte2, align 4
  br label %cleanup

if.end16:                                         ; preds = %if.end10
  %9 = ptrtoint ptr %k to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %k, align 4
  %11 = tail call i32 @llvm.umin.i32(i32 %10, i32 5)
  %tdep_count22 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 8
  %12 = ptrtoint ptr %tdep_count22 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %tdep_count22, align 1
  %14 = tail call i8 @llvm.umin.i8(i8 %13, i8 16)
  %K = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 2
  %15 = ptrtoint ptr %K to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %11, ptr %K, align 8
  %t0 = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 3
  %16 = ptrtoint ptr %t0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %t0, align 4
  %T0 = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 3
  %18 = ptrtoint ptr %T0 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %T0, align 4
  %max_t = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 4
  %19 = ptrtoint ptr %max_t to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %max_t, align 4
  %MaxT = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 4
  %21 = ptrtoint ptr %MaxT to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %MaxT, align 8
  %window_size = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 5
  %22 = ptrtoint ptr %window_size to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %window_size, align 4
  %WindowSize = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 5
  %24 = ptrtoint ptr %WindowSize to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %WindowSize, align 4
  %temp_select = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 6
  %25 = ptrtoint ptr %temp_select to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %temp_select, align 1
  %temp_select28 = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 7
  %27 = ptrtoint ptr %temp_select28 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %temp_select28, align 2
  %dte_mode = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 7
  %28 = ptrtoint ptr %dte_mode to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %dte_mode, align 2
  %DTE_mode = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 8
  %30 = ptrtoint ptr %DTE_mode to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %DTE_mode, align 1
  %t_threshold = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 35, i32 12
  %31 = ptrtoint ptr %t_threshold to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %t_threshold, align 4
  %Tthreshold = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 12
  %33 = ptrtoint ptr %Tthreshold to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %Tthreshold, align 8
  %conv29 = zext i8 %14 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp30.not = icmp ne i8 %14, 0
  %dec = sext i1 %cmp30.not to i32
  %spec.select = add nsw i32 %11, %dec
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %cmp34116.not = icmp eq i32 %spec.select, 0
  br i1 %cmp34116.not, label %if.end16.for.end_crit_edge, label %if.end16.for.body_crit_edge

if.end16.for.body_crit_edge:                      ; preds = %if.end16
  br label %for.body

if.end16.for.end_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end16.for.body_crit_edge
  %i.0117 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end16.for.body_crit_edge ]
  %arrayidx = getelementptr [5 x i32], ptr %dte_data1, i32 0, i32 %i.0117
  %34 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx, align 4
  %arrayidx37 = getelementptr [5 x i32], ptr %call7.i.i, i32 0, i32 %i.0117
  %36 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %arrayidx37, align 4
  %arrayidx38 = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 35, i32 1, i32 %i.0117
  %37 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx38, align 4
  %arrayidx39 = getelementptr %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 1, i32 %i.0117
  %39 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %arrayidx39, align 4
  %inc = add nuw i32 %i.0117, 1
  %exitcond.not = icmp eq i32 %inc, %spec.select
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end16.for.end_crit_edge
  %Tdep_count = getelementptr inbounds %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 6
  %40 = ptrtoint ptr %Tdep_count to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %14, ptr %Tdep_count, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp42118.not = icmp eq i8 %14, 0
  br i1 %cmp42118.not, label %for.end.for.end53_crit_edge, label %for.end.for.body44_crit_edge

for.end.for.body44_crit_edge:                     ; preds = %for.end
  br label %for.body44

for.end.for.end53_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end53

for.body44:                                       ; preds = %for.body44.for.body44_crit_edge, %for.end.for.body44_crit_edge
  %i.1119 = phi i32 [ %inc52, %for.body44.for.body44_crit_edge ], [ 0, %for.end.for.body44_crit_edge ]
  %arrayidx45 = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 35, i32 9, i32 %i.1119
  %41 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx45, align 1
  %arrayidx46 = getelementptr %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 9, i32 %i.1119
  %43 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %42, ptr %arrayidx46, align 1
  %arrayidx47 = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 35, i32 10, i32 %i.1119
  %44 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx47, align 4
  %arrayidx48 = getelementptr %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 10, i32 %i.1119
  %46 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %arrayidx48, align 4
  %arrayidx49 = getelementptr %struct.si_power_info, ptr %1, i32 0, i32 35, i32 11, i32 %i.1119
  %47 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx49, align 4
  %arrayidx50 = getelementptr %struct.Smc_SIslands_DTE_Configuration, ptr %call7.i.i, i32 0, i32 11, i32 %i.1119
  %49 = ptrtoint ptr %arrayidx50 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %arrayidx50, align 4
  %inc52 = add nuw nsw i32 %i.1119, 1
  %exitcond120.not = icmp eq i32 %inc52, %conv29
  br i1 %exitcond120.not, label %for.body44.for.end53_crit_edge, label %for.body44.for.body44_crit_edge

for.body44.for.body44_crit_edge:                  ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body44

for.body44.for.end53_crit_edge:                   ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end53

for.end53:                                        ; preds = %for.body44.for.end53_crit_edge, %for.end.for.end53_crit_edge
  %dte_table_start = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 26
  %50 = ptrtoint ptr %dte_table_start to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %dte_table_start, align 4
  %sram_end = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %52 = ptrtoint ptr %sram_end to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %sram_end, align 4
  %call54 = tail call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %51, ptr noundef nonnull %call7.i.i, i32 noundef 204, i32 noundef %53) #14
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %for.end53, %if.then14, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then14 ], [ %call54, %for.end53 ], [ 0, %if.end.cleanup_crit_edge ], [ -22, %if.end6.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_program_response_times(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %soft_regs_start.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %soft_regs_start.i, align 4
  %add.i = add i32 %3, 96
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %1, i32 0, i32 20
  %4 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sram_end.i, align 4
  %call1.i = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i, i32 noundef 1, i32 noundef %5) #14
  %voltage_response_time1 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 14
  %6 = ptrtoint ptr %voltage_response_time1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %voltage_response_time1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp = icmp eq i32 %7, 0
  %spec.store.select = select i1 %cmp, i32 1000, i32 %7
  %asic_funcs = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %8 = ptrtoint ptr %asic_funcs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %asic_funcs, align 4
  %get_xclk = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %get_xclk to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %get_xclk, align 4
  %call2 = tail call i32 %11(ptr noundef %adev) #14
  %mul = mul i32 %call2, %spec.store.select
  %div = udiv i32 %mul, 100
  %mul3 = mul i32 %call2, 15000
  %div4 = udiv i32 %mul3, 100
  %mul5 = mul i32 %call2, 100000
  %div6 = udiv i32 %mul5, 100
  %12 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i22 = getelementptr inbounds %struct.si_power_info, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %soft_regs_start.i22 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %soft_regs_start.i22, align 4
  %add.i23 = add i32 %15, 12
  %sram_end.i24 = getelementptr inbounds %struct.si_power_info, ptr %13, i32 0, i32 20
  %16 = ptrtoint ptr %sram_end.i24 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sram_end.i24, align 4
  %call1.i25 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i23, i32 noundef %div, i32 noundef %17) #14
  %18 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i27 = getelementptr inbounds %struct.si_power_info, ptr %19, i32 0, i32 22
  %20 = ptrtoint ptr %soft_regs_start.i27 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %soft_regs_start.i27, align 4
  %add.i28 = add i32 %21, 40
  %sram_end.i29 = getelementptr inbounds %struct.si_power_info, ptr %19, i32 0, i32 20
  %22 = ptrtoint ptr %sram_end.i29 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sram_end.i29, align 4
  %call1.i30 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i28, i32 noundef %div4, i32 noundef %23) #14
  %24 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i32 = getelementptr inbounds %struct.si_power_info, ptr %25, i32 0, i32 22
  %26 = ptrtoint ptr %soft_regs_start.i32 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %soft_regs_start.i32, align 4
  %sram_end.i33 = getelementptr inbounds %struct.si_power_info, ptr %25, i32 0, i32 20
  %28 = ptrtoint ptr %sram_end.i33 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sram_end.i33, align 4
  %call1.i34 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %27, i32 noundef %div6, i32 noundef %29) #14
  %30 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %priv.i.i, align 4
  %soft_regs_start.i36 = getelementptr inbounds %struct.si_power_info, ptr %31, i32 0, i32 22
  %32 = ptrtoint ptr %soft_regs_start.i36 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %soft_regs_start.i36, align 4
  %add.i37 = add i32 %33, 152
  %sram_end.i38 = getelementptr inbounds %struct.si_power_info, ptr %31, i32 0, i32 20
  %34 = ptrtoint ptr %sram_end.i38 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sram_end.i38, align 4
  %call1.i39 = tail call i32 @amdgpu_si_write_smc_sram_dword(ptr noundef %adev, i32 noundef %add.i37, i32 noundef 170, i32 noundef %35) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_program_ds_registers(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %asic_type = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 5
  %2 = ptrtoint ptr %asic_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %asic_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.lhs.true, label %entry.if.else_crit_edge

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %rev_id = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 7
  %4 = ptrtoint ptr %rev_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rev_id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp1 = icmp eq i32 %5, 0
  br i1 %cmp1, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  br label %if.end

if.end:                                           ; preds = %if.else, %land.lhs.true.if.end_crit_edge
  %tmp.0 = phi i32 [ 1, %if.else ], [ 16, %land.lhs.true.if.end_crit_edge ]
  %sclk_deep_sleep = getelementptr inbounds %struct.evergreen_power_info, ptr %1, i32 0, i32 9
  %6 = ptrtoint ptr %sclk_deep_sleep to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %sclk_deep_sleep, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %if.end.if.end12_crit_edge, label %do.body

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 412, i32 noundef 0) #14
  %and = and i32 %call3, -256
  %or = or i32 %and, %tmp.0
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 412, i32 noundef %or, i32 noundef 0) #14
  %call7 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 395, i32 noundef 0) #14
  %or9 = or i32 %call7, 512
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 395, i32 noundef %or9, i32 noundef 0) #14
  br label %if.end12

if.end12:                                         ; preds = %do.body, %if.end.if.end12_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_dpm_start_smc(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @amdgpu_si_program_jump_on_start(ptr noundef %adev) #14
  tail call void @amdgpu_si_start_smc(ptr noundef %adev) #14
  tail call void @amdgpu_si_smc_clock(ptr noundef %adev, i1 noundef zeroext true) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_enable_sclk_control(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 482, i32 noundef 0) #14
  %and = and i32 %call, -2
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 482, i32 noundef %and, i32 noundef 0) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_start_dpm(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %or = or i32 %call, 1
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %or, i32 noundef 0) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_thermal_start_thermal_controller(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  %fan_table.i = alloca %struct.PP_SIslands_FanTable, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fan_pulses_per_revolution.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 10
  %0 = ptrtoint ptr %fan_pulses_per_revolution.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %fan_pulses_per_revolution.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %entry.si_thermal_initialize.exit_crit_edge, label %if.then.i

entry.si_thermal_initialize.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_thermal_initialize.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 476, i32 noundef 0) #14
  %and.i = and i32 %call.i, -8
  %2 = ptrtoint ptr %fan_pulses_per_revolution.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %fan_pulses_per_revolution.i, align 1
  %conv.i = zext i8 %3 to i32
  %sub.i = add nsw i32 %conv.i, -1
  %or.i = or i32 %sub.i, %and.i
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 476, i32 noundef %or.i, i32 noundef 0) #14
  br label %si_thermal_initialize.exit

si_thermal_initialize.exit:                       ; preds = %if.then.i, %entry.si_thermal_initialize.exit_crit_edge
  %call3.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 471, i32 noundef 0) #14
  %and4.i = and i32 %call3.i, 33554431
  %or5.i = or i32 %and4.i, 1342177280
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 471, i32 noundef %or5.i, i32 noundef 0) #14
  %call.i1 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 450, i32 noundef 0) #14
  %and.i2 = and i32 %call.i1, -65281
  %or.i3 = or i32 %and.i2, 30720
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 450, i32 noundef %or.i3, i32 noundef 0) #14
  %call10.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 450, i32 noundef 0) #14
  %and11.i = and i32 %call10.i, -16711681
  %or15.i = or i32 %and11.i, 5898240
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 450, i32 noundef %or15.i, i32 noundef 0) #14
  %call20.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 448, i32 noundef 0) #14
  %and21.i = and i32 %call20.i, -4177921
  %or25.i = or i32 %and21.i, 1966080
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 448, i32 noundef %or25.i, i32 noundef 0) #14
  %min_temp28.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 35, i32 1
  %4 = ptrtoint ptr %min_temp28.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 90000, ptr %min_temp28.i, align 4
  %max_temp32.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 35, i32 2
  %5 = ptrtoint ptr %max_temp32.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 120000, ptr %max_temp32.i, align 4
  %call.i4 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 450, i32 noundef 0) #14
  %and.i5 = and i32 %call.i4, -50331649
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 450, i32 noundef %and.i5, i32 noundef 0) #14
  %call1.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 22) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call1.i)
  %cmp.not.i = icmp eq i8 %call1.i, 1
  br i1 %cmp.not.i, label %if.end4, label %si_thermal_enable_alert.exit

si_thermal_enable_alert.exit:                     ; preds = %si_thermal_initialize.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (i32, ptr, ...) @__drm_dbg(i32 noundef 4, ptr noundef nonnull @.str.31) #14
  br label %cleanup

if.end4:                                          ; preds = %si_thermal_initialize.exit
  %ucode_fan_control = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 13
  %6 = ptrtoint ptr %ucode_fan_control to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %ucode_fan_control, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool5.not = icmp eq i8 %7, 0
  br i1 %tobool5.not, label %if.end4.cleanup_crit_edge, label %if.then6

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then6:                                         ; preds = %if.end4
  %call.i7 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 16) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i7)
  %cmp.not.i8 = icmp eq i8 %call.i7, 1
  br i1 %cmp.not.i8, label %if.end.i, label %if.then6.cleanup_crit_edge

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %if.then6
  %call2.i = tail call zeroext i8 @amdgpu_si_wait_for_smc_inactive(ptr noundef %adev) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call2.i)
  %cmp4.i = icmp eq i8 %call2.i, 1
  br i1 %cmp4.i, label %if.end10, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10:                                         ; preds = %if.end.i
  %priv.i.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %8 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %fan_table.i) #14
  %10 = call ptr @memset(ptr %fan_table.i, i32 0, i32 36)
  %fan_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %9, i32 0, i32 29
  %11 = ptrtoint ptr %fan_table_start.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %fan_table_start.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i9 = icmp eq i32 %12, 0
  br i1 %tobool.not.i9, label %if.end10.si_thermal_setup_fan_table.exit.thread28_crit_edge, label %if.end.i12

if.end10.si_thermal_setup_fan_table.exit.thread28_crit_edge: ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_thermal_setup_fan_table.exit.thread28

if.end.i12:                                       ; preds = %if.end10
  %call1.i10 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 470, i32 noundef 0) #14
  %and.i11 = and i32 %call1.i10, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i11)
  %cmp.i = icmp eq i32 %and.i11, 0
  br i1 %cmp.i, label %if.end.i12.si_thermal_setup_fan_table.exit.thread28_crit_edge, label %if.end200.i

if.end.i12.si_thermal_setup_fan_table.exit.thread28_crit_edge: ; preds = %if.end.i12
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_thermal_setup_fan_table.exit.thread28

if.end200.i:                                      ; preds = %if.end.i12
  %fan10.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22
  %pwm_min.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 3
  %13 = ptrtoint ptr %pwm_min.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %pwm_min.i, align 2
  %conv.i13 = zext i16 %14 to i64
  %conv11.i = zext i32 %and.i11 to i64
  %mul.i = mul nuw nsw i64 %conv.i13, %conv11.i
  %15 = tail call i64 asm "umull\09${0:Q}, ${0:R}, ${1:Q}, ${2:Q}\0A\09mov\09${0:Q}, #0", "=&r,r,r,~{cc}"(i64 3777893186295716171, i64 %mul.i) #20, !srcloc !277
  %16 = tail call i64 asm "umlal\09${0:R}, ${0:Q}, ${1:R}, ${2:Q}\0A\09umlal\09${0:R}, ${0:Q}, ${1:Q}, ${2:R}\0A\09mov\09${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${1:R}, ${2:R}", "=&r,r,r,0,~{cc}"(i64 3777893186295716171, i64 %mul.i, i64 %15) #20, !srcloc !274
  %div180425.i = lshr i64 %16, 11
  %extract.t426.i = trunc i64 %div180425.i to i16
  %t_med.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 1
  %17 = ptrtoint ptr %t_med.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %t_med.i, align 2
  %conv206.i = zext i16 %18 to i32
  %19 = ptrtoint ptr %fan10.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %fan10.i, align 4
  %conv210.i = zext i16 %20 to i32
  %sub211.i = sub nsw i32 %conv206.i, %conv210.i
  %t_high.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 2
  %21 = ptrtoint ptr %t_high.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %t_high.i, align 4
  %conv215.i = zext i16 %22 to i32
  %sub221.i = sub nsw i32 %conv215.i, %conv206.i
  %pwm_med.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 4
  %23 = ptrtoint ptr %pwm_med.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %pwm_med.i, align 4
  %conv225.i = zext i16 %24 to i32
  %conv230.i = zext i16 %14 to i32
  %sub231.i = sub nsw i32 %conv225.i, %conv230.i
  %pwm_high.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 5
  %25 = ptrtoint ptr %pwm_high.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %pwm_high.i, align 2
  %conv235.i = zext i16 %26 to i32
  %sub241.i = sub nsw i32 %conv235.i, %conv225.i
  %mul242.i = shl nuw nsw i32 %and.i11, 4
  %mul243.i = mul nsw i32 %sub231.i, %mul242.i
  %div244.i = udiv i32 %mul243.i, %sub211.i
  %add245.i = add i32 %div244.i, 50
  %div246.i = udiv i32 %add245.i, 100
  %conv247.i = trunc i32 %div246.i to i16
  %mul249.i = mul nsw i32 %sub241.i, %mul242.i
  %div250.i = udiv i32 %mul249.i, %sub221.i
  %add251.i = add i32 %div250.i, 50
  %div252.i = udiv i32 %add251.i, 100
  %conv253.i = trunc i32 %div252.i to i16
  %add259.i = add nuw nsw i32 %conv210.i, 50
  %div260.i = udiv i32 %add259.i, 100
  %conv261.i = trunc i32 %div260.i to i16
  %temp_min.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 2
  %27 = ptrtoint ptr %temp_min.i to i32
  call void @__asan_storeN_noabort(i32 %27, i32 2)
  store i16 %conv261.i, ptr %temp_min.i, align 1
  %add267.i = add nuw nsw i32 %conv206.i, 50
  %div268.i = udiv i32 %add267.i, 100
  %conv269.i = trunc i32 %div268.i to i16
  %temp_med.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 3
  %28 = ptrtoint ptr %temp_med.i to i32
  call void @__asan_storeN_noabort(i32 %28, i32 2)
  store i16 %conv269.i, ptr %temp_med.i, align 1
  %t_max.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 8
  %29 = ptrtoint ptr %t_max.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %t_max.i, align 4
  %conv273.i = zext i16 %30 to i32
  %add274.i = add nuw nsw i32 %conv273.i, 50
  %div275.i = udiv i32 %add274.i, 100
  %conv276.i = trunc i32 %div275.i to i16
  %temp_max.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 4
  %31 = ptrtoint ptr %temp_max.i to i32
  call void @__asan_storeN_noabort(i32 %31, i32 2)
  store i16 %conv276.i, ptr %temp_max.i, align 1
  %slope1277.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 5
  %32 = ptrtoint ptr %slope1277.i to i32
  call void @__asan_storeN_noabort(i32 %32, i32 2)
  store i16 %conv247.i, ptr %slope1277.i, align 1
  %slope2278.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 6
  %33 = ptrtoint ptr %slope2278.i to i32
  call void @__asan_storeN_noabort(i32 %33, i32 2)
  store i16 %conv253.i, ptr %slope2278.i, align 1
  %fdo_min279.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 7
  %34 = ptrtoint ptr %fdo_min279.i to i32
  call void @__asan_storeN_noabort(i32 %34, i32 2)
  store i16 %extract.t426.i, ptr %fdo_min279.i, align 1
  %t_hyst.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 6
  %35 = ptrtoint ptr %t_hyst.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %t_hyst.i, align 4
  %conv283.i = zext i8 %36 to i16
  %hys_down.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 9
  %37 = ptrtoint ptr %hys_down.i to i32
  call void @__asan_storeN_noabort(i32 %37, i32 2)
  store i16 %conv283.i, ptr %hys_down.i, align 1
  %hys_up.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 8
  %38 = ptrtoint ptr %hys_up.i to i32
  call void @__asan_storeN_noabort(i32 %38, i32 2)
  store i16 1, ptr %hys_up.i, align 1
  %hys_slope.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 10
  %39 = ptrtoint ptr %hys_slope.i to i32
  call void @__asan_storeN_noabort(i32 %39, i32 2)
  store i16 1, ptr %hys_slope.i, align 1
  %temp_resp_lim.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 11
  %40 = ptrtoint ptr %temp_resp_lim.i to i32
  call void @__asan_storeN_noabort(i32 %40, i32 2)
  store i16 5, ptr %temp_resp_lim.i, align 1
  %asic_funcs.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 12
  %41 = ptrtoint ptr %asic_funcs.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %asic_funcs.i, align 4
  %get_xclk.i = getelementptr inbounds %struct.amdgpu_asic_funcs, ptr %42, i32 0, i32 6
  %43 = ptrtoint ptr %get_xclk.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %get_xclk.i, align 4
  %call284.i = tail call i32 %44(ptr noundef %adev) #14
  %cycle_delay.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 22, i32 7
  %45 = ptrtoint ptr %cycle_delay.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cycle_delay.i, align 4
  %mul288.i = mul i32 %46, %call284.i
  %div289.i = udiv i32 %mul288.i, 1600
  %refresh_period.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 15
  %47 = ptrtoint ptr %refresh_period.i to i32
  call void @__asan_storeN_noabort(i32 %47, i32 4)
  store i32 %div289.i, ptr %refresh_period.i, align 1
  %conv290.i = trunc i32 %and.i11 to i16
  %fdo_max.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 16
  %48 = ptrtoint ptr %fdo_max.i to i32
  call void @__asan_storeN_noabort(i32 %48, i32 2)
  store i16 %conv290.i, ptr %fdo_max.i, align 1
  %call291.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 452, i32 noundef 0) #14
  %and292.i = lshr i32 %call291.i, 20
  %conv294.i = trunc i32 %and292.i to i8
  %temp_src.i = getelementptr inbounds %struct.PP_SIslands_FanTable, ptr %fan_table.i, i32 0, i32 17
  %49 = ptrtoint ptr %temp_src.i to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %conv294.i, ptr %temp_src.i, align 1
  %50 = ptrtoint ptr %fan_table_start.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %fan_table_start.i, align 4
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %9, i32 0, i32 20
  %52 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %sram_end.i, align 4
  %call296.i = call i32 @amdgpu_si_copy_bytes_to_smc(ptr noundef %adev, i32 noundef %51, ptr noundef nonnull %fan_table.i, i32 noundef 36, i32 noundef %53) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call296.i)
  %tobool297.not.i = icmp eq i32 %call296.i, 0
  br i1 %tobool297.not.i, label %si_thermal_setup_fan_table.exit.thread, label %si_thermal_setup_fan_table.exit

si_thermal_setup_fan_table.exit.thread:           ; preds = %if.end200.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %fan_table.i) #14
  br label %if.end14

si_thermal_setup_fan_table.exit.thread28:         ; preds = %if.end.i12.si_thermal_setup_fan_table.exit.thread28_crit_edge, %if.end10.si_thermal_setup_fan_table.exit.thread28_crit_edge
  %54 = ptrtoint ptr %ucode_fan_control to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %ucode_fan_control, align 2
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %fan_table.i) #14
  br label %if.end14

si_thermal_setup_fan_table.exit:                  ; preds = %if.end200.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ...) @__drm_err(ptr noundef nonnull @.str.80) #14
  %55 = ptrtoint ptr %ucode_fan_control to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 0, ptr %ucode_fan_control, align 2
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %fan_table.i) #14
  br label %cleanup

if.end14:                                         ; preds = %si_thermal_setup_fan_table.exit.thread28, %si_thermal_setup_fan_table.exit.thread
  %call.i15 = call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 128) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call.i15)
  %cmp.not.i16 = icmp eq i8 %call.i15, 1
  br i1 %cmp.not.i16, label %if.end.i20, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i20:                                       ; preds = %if.end14
  %call2.i17 = call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 17) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call2.i17)
  %cmp4.i18 = icmp eq i8 %call2.i17, 1
  br i1 %cmp4.i18, label %if.end18, label %if.end.i20.cleanup_crit_edge

if.end.i20.cleanup_crit_edge:                     ; preds = %if.end.i20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %if.end.i20
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @si_thermal_start_smc_fan_control(ptr noundef %adev)
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.end.i20.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %si_thermal_setup_fan_table.exit, %if.end.i.cleanup_crit_edge, %if.then6.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %si_thermal_enable_alert.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_get_voltage_table(ptr noundef, i8 noundef zeroext, i8 noundef zeroext, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_atombios_init_mc_reg_table(ptr noundef, i8 noundef zeroext, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_si_reset_smc(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_si_smc_clock(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_si_load_smc_ucode(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_si_read_smc_sram_dword(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ni_copy_and_switch_arb_sets(ptr noundef %adev, i32 noundef %arb_freq_src, i32 noundef %arb_freq_dest) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %arb_freq_src to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.109)
  switch i32 %arb_freq_src, label %entry.cleanup_crit_edge [
    i32 10, label %sw.bb
    i32 11, label %sw.bb3
    i32 12, label %sw.bb9
    i32 13, label %sw.bb15
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2525, i32 noundef 0) #14
  %call1 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2526, i32 noundef 0) #14
  %call2 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2556, i32 noundef 0) #14
  %call5 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2559, i32 noundef 0) #14
  %call6 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  %and7 = lshr i32 %call6, 5
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call10 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2557, i32 noundef 0) #14
  %call11 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2560, i32 noundef 0) #14
  %call12 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  %and13 = lshr i32 %call12, 10
  br label %sw.epilog

sw.bb15:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call16 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2558, i32 noundef 0) #14
  %call17 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2561, i32 noundef 0) #14
  %call18 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  %and19 = lshr i32 %call18, 15
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb15, %sw.bb9, %sw.bb3, %sw.bb
  %burst_time.0.in = phi i32 [ %and19, %sw.bb15 ], [ %and13, %sw.bb9 ], [ %and7, %sw.bb3 ], [ %call2, %sw.bb ]
  %mc_arb_dram_timing2.0 = phi i32 [ %call17, %sw.bb15 ], [ %call11, %sw.bb9 ], [ %call5, %sw.bb3 ], [ %call1, %sw.bb ]
  %mc_arb_dram_timing.0 = phi i32 [ %call16, %sw.bb15 ], [ %call10, %sw.bb9 ], [ %call4, %sw.bb3 ], [ %call, %sw.bb ]
  %burst_time.0 = and i32 %burst_time.0.in, 31
  %1 = zext i32 %arb_freq_dest to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.110)
  switch i32 %arb_freq_dest, label %sw.epilog.cleanup_crit_edge [
    i32 10, label %sw.bb21
    i32 11, label %sw.bb25
  ]

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb21:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2525, i32 noundef %mc_arb_dram_timing.0, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2526, i32 noundef %mc_arb_dram_timing2.0, i32 noundef 0) #14
  %call22 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  %and23 = and i32 %call22, -32
  %or = or i32 %and23, %burst_time.0
  br label %sw.epilog56

sw.bb25:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2556, i32 noundef %mc_arb_dram_timing.0, i32 noundef 0) #14
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2559, i32 noundef %mc_arb_dram_timing2.0, i32 noundef 0) #14
  %call28 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2562, i32 noundef 0) #14
  %and29 = and i32 %call28, -993
  %shl30 = shl nuw nsw i32 %burst_time.0, 5
  %or32 = or i32 %and29, %shl30
  br label %sw.epilog56

sw.epilog56:                                      ; preds = %sw.bb25, %sw.bb21
  %or32.sink = phi i32 [ %or32, %sw.bb25 ], [ %or, %sw.bb21 ]
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2562, i32 noundef %or32.sink, i32 noundef 0) #14
  %call57 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2415, i32 noundef 0) #14
  %or58 = or i32 %call57, 15
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2415, i32 noundef %or58, i32 noundef 0) #14
  %call61 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 2554, i32 noundef 0) #14
  %and62 = and i32 %call61, -256
  %or65 = or i32 %and62, %arb_freq_dest
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 2554, i32 noundef %or65, i32 noundef 0) #14
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog56, %sw.epilog.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.epilog56 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %sw.epilog.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @div64_s64(i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @drm_fixp_exp(i64 noundef %x) unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i64 @div64_s64(i64 noundef 4294967296, i64 noundef 1000000) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %x)
  %cmp = icmp slt i64 %x, 0
  %0 = tail call i64 @llvm.abs.i64(i64 %x, i1 false)
  call void @__sanitizer_cov_trace_cmp8(i64 %0, i64 %call)
  %cmp1.not35 = icmp slt i64 %0, %call
  br i1 %cmp1.not35, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %drm_fixp_mul.exit.while.body_crit_edge, %entry.while.body_crit_edge
  %count.038 = phi i64 [ %add2, %drm_fixp_mul.exit.while.body_crit_edge ], [ 1, %entry.while.body_crit_edge ]
  %term.037 = phi i64 [ %retval.0.i, %drm_fixp_mul.exit.while.body_crit_edge ], [ %0, %entry.while.body_crit_edge ]
  %sum.036 = phi i64 [ %add, %drm_fixp_mul.exit.while.body_crit_edge ], [ 4294967296, %entry.while.body_crit_edge ]
  %add = add i64 %term.037, %sum.036
  %add2 = add i64 %count.038, 1
  %call3 = tail call i64 @div64_s64(i64 noundef %0, i64 noundef %add2) #14
  %shr12.i.i = lshr i64 %term.037, 63
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %while.body
  %shift.014.i.i = phi i32 [ 62, %while.body ], [ %dec.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %sh_prom.i.i = zext i32 %shift.014.i.i to i64
  %shr213.i.i = lshr i64 %term.037, %sh_prom.i.i
  %and3.i.i = and i64 %shr213.i.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i.i, i64 %shr12.i.i)
  %cmp5.not.i.i = icmp eq i64 %and3.i.i, %shr12.i.i
  br i1 %cmp5.not.i.i, label %for.inc.i.i, label %for.body.i.i.drm_fixp_msbset.exit.i_crit_edge

for.body.i.i.drm_fixp_msbset.exit.i_crit_edge:    ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %dec.i.i = add nsw i32 %shift.014.i.i, -1
  %cmp.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp.not.i.i, label %for.inc.i.i.drm_fixp_msbset.exit.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.inc.i.i.drm_fixp_msbset.exit.i_crit_edge:     ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit.i

drm_fixp_msbset.exit.i:                           ; preds = %for.inc.i.i.drm_fixp_msbset.exit.i_crit_edge, %for.body.i.i.drm_fixp_msbset.exit.i_crit_edge
  %shift.0.lcssa.i.i = phi i32 [ 0, %for.inc.i.i.drm_fixp_msbset.exit.i_crit_edge ], [ %shift.014.i.i, %for.body.i.i.drm_fixp_msbset.exit.i_crit_edge ]
  %shr12.i33.i = lshr i64 %call3, 63
  br label %for.body.i39.i

for.body.i39.i:                                   ; preds = %for.inc.i42.i.for.body.i39.i_crit_edge, %drm_fixp_msbset.exit.i
  %shift.014.i34.i = phi i32 [ 62, %drm_fixp_msbset.exit.i ], [ %dec.i40.i, %for.inc.i42.i.for.body.i39.i_crit_edge ]
  %sh_prom.i35.i = zext i32 %shift.014.i34.i to i64
  %shr213.i36.i = lshr i64 %call3, %sh_prom.i35.i
  %and3.i37.i = and i64 %shr213.i36.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %and3.i37.i, i64 %shr12.i33.i)
  %cmp5.not.i38.i = icmp eq i64 %and3.i37.i, %shr12.i33.i
  br i1 %cmp5.not.i38.i, label %for.inc.i42.i, label %for.body.i39.i.drm_fixp_msbset.exit44.i_crit_edge

for.body.i39.i.drm_fixp_msbset.exit44.i_crit_edge: ; preds = %for.body.i39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i

for.inc.i42.i:                                    ; preds = %for.body.i39.i
  %dec.i40.i = add nsw i32 %shift.014.i34.i, -1
  %cmp.not.i41.i = icmp eq i32 %dec.i40.i, 0
  br i1 %cmp.not.i41.i, label %for.inc.i42.i.drm_fixp_msbset.exit44.i_crit_edge, label %for.inc.i42.i.for.body.i39.i_crit_edge

for.inc.i42.i.for.body.i39.i_crit_edge:           ; preds = %for.inc.i42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i39.i

for.inc.i42.i.drm_fixp_msbset.exit44.i_crit_edge: ; preds = %for.inc.i42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_msbset.exit44.i

drm_fixp_msbset.exit44.i:                         ; preds = %for.inc.i42.i.drm_fixp_msbset.exit44.i_crit_edge, %for.body.i39.i.drm_fixp_msbset.exit44.i_crit_edge
  %shift.0.lcssa.i43.i = phi i32 [ 0, %for.inc.i42.i.drm_fixp_msbset.exit44.i_crit_edge ], [ %shift.014.i34.i, %for.body.i39.i.drm_fixp_msbset.exit44.i_crit_edge ]
  %add.i = add i32 %shift.0.lcssa.i43.i, %shift.0.lcssa.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 61, i32 %add.i)
  %cmp.i = icmp ugt i32 %add.i, 61
  br i1 %cmp.i, label %if.end.i, label %if.end11.thread.i

if.end11.thread.i:                                ; preds = %drm_fixp_msbset.exit44.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul48.i = mul i64 %call3, %term.037
  br label %if.then13.i

if.end.i:                                         ; preds = %drm_fixp_msbset.exit44.i
  %sub.i = add i32 %add.i, -61
  %shr.i = lshr i32 %sub.i, 1
  %and.i = and i32 %sub.i, 1
  %add2.i = add nuw nsw i32 %shr.i, %and.i
  %sh_prom.i = zext i32 %add2.i to i64
  %shr3.i = ashr i64 %term.037, %sh_prom.i
  %sh_prom5.i = zext i32 %shr.i to i64
  %shr6.i = ashr i64 %call3, %sh_prom5.i
  %mul.i = mul i64 %shr3.i, %shr6.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i)
  %cmp7.i = icmp ugt i32 %sub.i, 32
  br i1 %cmp7.i, label %if.then8.i, label %if.end11.i

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub9.i = add i32 %add.i, -93
  %sh_prom10.i = zext i32 %sub9.i to i64
  %shl.i = shl i64 %mul.i, %sh_prom10.i
  br label %drm_fixp_mul.exit

if.end11.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sub.i)
  %cmp12.not.i = icmp eq i32 %sub.i, 32
  br i1 %cmp12.not.i, label %if.end11.i.drm_fixp_mul.exit_crit_edge, label %if.end11.i.if.then13.i_crit_edge

if.end11.i.if.then13.i_crit_edge:                 ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i

if.end11.i.drm_fixp_mul.exit_crit_edge:           ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %drm_fixp_mul.exit

if.then13.i:                                      ; preds = %if.end11.i.if.then13.i_crit_edge, %if.end11.thread.i
  %shift.05056.i = phi i32 [ 0, %if.end11.thread.i ], [ %sub.i, %if.end11.i.if.then13.i_crit_edge ]
  %mul5155.i = phi i64 [ %mul48.i, %if.end11.thread.i ], [ %mul.i, %if.end11.i.if.then13.i_crit_edge ]
  %sub14.i = sub nuw nsw i32 32, %shift.05056.i
  %sh_prom15.i = zext i32 %sub14.i to i64
  %shr16.i = ashr i64 %mul5155.i, %sh_prom15.i
  br label %drm_fixp_mul.exit

drm_fixp_mul.exit:                                ; preds = %if.then13.i, %if.end11.i.drm_fixp_mul.exit_crit_edge, %if.then8.i
  %retval.0.i = phi i64 [ %shl.i, %if.then8.i ], [ %shr16.i, %if.then13.i ], [ %mul.i, %if.end11.i.drm_fixp_mul.exit_crit_edge ]
  %cmp1.not = icmp slt i64 %retval.0.i, %call
  br i1 %cmp1.not, label %drm_fixp_mul.exit.while.end_crit_edge, label %drm_fixp_mul.exit.while.body_crit_edge

drm_fixp_mul.exit.while.body_crit_edge:           ; preds = %drm_fixp_mul.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

drm_fixp_mul.exit.while.end_crit_edge:            ; preds = %drm_fixp_mul.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %drm_fixp_mul.exit.while.end_crit_edge, %entry.while.end_crit_edge
  %sum.0.lcssa = phi i64 [ 4294967296, %entry.while.end_crit_edge ], [ %add, %drm_fixp_mul.exit.while.end_crit_edge ]
  br i1 %cmp, label %drm_fixp_div.exit, label %while.end.if.end8_crit_edge

while.end.if.end8_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

drm_fixp_div.exit:                                ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %b.addr.0.i = ashr i64 %sum.0.lcssa, 2
  %call3.i = tail call i64 @div64_s64(i64 noundef 4611686018427387904, i64 noundef %b.addr.0.i) #14
  br label %if.end8

if.end8:                                          ; preds = %drm_fixp_div.exit, %while.end.if.end8_crit_edge
  %sum.1 = phi i64 [ %call3.i, %drm_fixp_div.exit ], [ %sum.0.lcssa, %while.end.if.end8_crit_edge ]
  ret i64 %sum.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @si_program_cac_config_registers(ptr noundef %adev, ptr noundef readonly %cac_config_regs) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %cac_config_regs, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %while.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.cond.preheader:                             ; preds = %entry
  %0 = ptrtoint ptr %cac_config_regs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cac_config_regs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp.not46 = icmp eq i32 %1, -1
  br i1 %cmp.not46, label %while.cond.preheader.cleanup_crit_edge, label %while.body.lr.ph

while.cond.preheader.cleanup_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %smc_rreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 36
  %smc_wreg = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 37
  br label %while.body

while.body:                                       ; preds = %sw.epilog19.while.body_crit_edge, %while.body.lr.ph
  %2 = phi i32 [ %1, %while.body.lr.ph ], [ %20, %sw.epilog19.while.body_crit_edge ]
  %data.049 = phi i32 [ 0, %while.body.lr.ph ], [ %or, %sw.epilog19.while.body_crit_edge ]
  %config_regs.047 = phi ptr [ %cac_config_regs, %while.body.lr.ph ], [ %incdec.ptr, %sw.epilog19.while.body_crit_edge ]
  %type = getelementptr inbounds %struct.si_cac_config_reg, ptr %config_regs.047, i32 0, i32 4
  %3 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cond = icmp eq i32 %4, 1
  br i1 %cond, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %while.body
  %add = add i32 %2, -1073545216
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1073479680, i32 %add)
  %cmp3 = icmp ult i32 %add, -1073479680
  br i1 %cmp3, label %if.then4, label %sw.bb.sw.epilog_crit_edge

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

if.then4:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %smc_rreg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %smc_rreg, align 4
  %call = tail call i32 %6(ptr noundef %adev, i32 noundef %add) #14
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef %2, i32 noundef 0) #14
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then4, %sw.bb.sw.epilog_crit_edge
  %data.1 = phi i32 [ %call, %if.then4 ], [ %data.049, %sw.bb.sw.epilog_crit_edge ], [ %call7, %sw.default ]
  %mask = getelementptr inbounds %struct.si_cac_config_reg, ptr %config_regs.047, i32 0, i32 1
  %7 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mask, align 4
  %neg = xor i32 %8, -1
  %and = and i32 %data.1, %neg
  %value = getelementptr inbounds %struct.si_cac_config_reg, ptr %config_regs.047, i32 0, i32 3
  %9 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %value, align 4
  %shift = getelementptr inbounds %struct.si_cac_config_reg, ptr %config_regs.047, i32 0, i32 2
  %11 = ptrtoint ptr %shift to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %shift, align 4
  %shl = shl i32 %10, %12
  %and9 = and i32 %shl, %8
  %or = or i32 %and9, %and
  %13 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cond22 = icmp eq i32 %14, 1
  %15 = ptrtoint ptr %config_regs.047 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %config_regs.047, align 4
  br i1 %cond22, label %sw.bb11, label %sw.default17

sw.bb11:                                          ; preds = %sw.epilog
  %add13 = add i32 %16, -1073545216
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1073479680, i32 %add13)
  %cmp14 = icmp ult i32 %add13, -1073479680
  br i1 %cmp14, label %if.then15, label %sw.bb11.sw.epilog19_crit_edge

sw.bb11.sw.epilog19_crit_edge:                    ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog19

if.then15:                                        ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #16
  %17 = ptrtoint ptr %smc_wreg to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %smc_wreg, align 8
  tail call void %18(ptr noundef %adev, i32 noundef %add13, i32 noundef %or) #14
  br label %sw.epilog19

sw.default17:                                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef %16, i32 noundef %or, i32 noundef 0) #14
  br label %sw.epilog19

sw.epilog19:                                      ; preds = %sw.default17, %if.then15, %sw.bb11.sw.epilog19_crit_edge
  %incdec.ptr = getelementptr %struct.si_cac_config_reg, ptr %config_regs.047, i32 1
  %19 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %incdec.ptr, align 4
  %cmp.not = icmp eq i32 %20, -1
  br i1 %cmp.not, label %sw.epilog19.cleanup_crit_edge, label %sw.epilog19.while.body_crit_edge

sw.epilog19.while.body_crit_edge:                 ; preds = %sw.epilog19
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

sw.epilog19.cleanup_crit_edge:                    ; preds = %sw.epilog19
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog19.cleanup_crit_edge, %while.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %while.cond.preheader.cleanup_crit_edge ], [ 0, %sw.epilog19.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @amdgpu_si_program_jump_on_start(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @amdgpu_si_start_smc(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_set_dpm_event_sources(ptr noundef %adev, i32 noundef %sources) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %switch.tableidx = add i32 %sources, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %0 = icmp ult i32 %switch.tableidx, 3
  br i1 %0, label %switch.lookup, label %do.body15

switch.lookup:                                    ; preds = %entry
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %1 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %priv.i, align 4
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.si_set_dpm_event_sources, i32 0, i32 %switch.tableidx
  %3 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %3)
  %switch.load = load i32, ptr %switch.gep, align 4
  %call4 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 448, i32 noundef 0) #14
  %and = and i32 %call4, -8
  %or = or i32 %and, %switch.load
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 448, i32 noundef %or, i32 noundef 0) #14
  %thermal_protection = getelementptr inbounds %struct.rv7xx_power_info, ptr %2, i32 0, i32 14
  %4 = ptrtoint ptr %thermal_protection to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %thermal_protection, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool6.not = icmp eq i8 %5, 0
  br i1 %tobool6.not, label %switch.lookup.if.end22_crit_edge, label %do.body8

switch.lookup.if.end22_crit_edge:                 ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

do.body8:                                         ; preds = %switch.lookup
  call void @__sanitizer_cov_trace_pc() #16
  %call10 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %and11 = and i32 %call10, -5
  br label %if.end22.sink.split

do.body15:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call17 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %or19 = or i32 %call17, 4
  br label %if.end22.sink.split

if.end22.sink.split:                              ; preds = %do.body15, %do.body8
  %and11.sink = phi i32 [ %and11, %do.body8 ], [ %or19, %do.body15 ]
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %and11.sink, i32 noundef 0) #14
  br label %if.end22

if.end22:                                         ; preds = %if.end22.sink.split, %switch.lookup.if.end22_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @si_dpm_disable(ptr noundef %adev) unnamed_addr #1 align 64 {
entry:
  %tmp.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %priv.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 16
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %boot_ps1 = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 4
  %2 = ptrtoint ptr %boot_ps1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %boot_ps1, align 4
  %call2 = tail call zeroext i1 @amdgpu_si_is_smc_running(ptr noundef %adev) #14
  br i1 %call2, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %no_fan.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 9
  %4 = ptrtoint ptr %no_fan.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %no_fan.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end.si_thermal_stop_thermal_controller.exit_crit_edge

if.end.si_thermal_stop_thermal_controller.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_thermal_stop_thermal_controller.exit

if.then.i:                                        ; preds = %if.end
  %6 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i, align 4
  %fan_ctrl_is_in_default_mode.i.i = getelementptr inbounds %struct.si_power_info, ptr %7, i32 0, i32 41
  %8 = ptrtoint ptr %fan_ctrl_is_in_default_mode.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %fan_ctrl_is_in_default_mode.i.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.i.si_fan_ctrl_set_default_mode.exit.i_crit_edge

if.then.i.si_fan_ctrl_set_default_mode.exit.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_fan_ctrl_set_default_mode.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 471, i32 noundef 0) #14
  %and.i.i = and i32 %call1.i.i, -14337
  %fan_ctrl_default_mode.i.i = getelementptr inbounds %struct.si_power_info, ptr %7, i32 0, i32 43
  %10 = ptrtoint ptr %fan_ctrl_default_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %fan_ctrl_default_mode.i.i, align 4
  %shl.i.i = shl i32 %11, 11
  %or.i.i = or i32 %shl.i.i, %and.i.i
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 471, i32 noundef %or.i.i, i32 noundef 0) #14
  %call2.i.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 471, i32 noundef 0) #14
  %and3.i.i = and i32 %call2.i.i, -256
  %t_min.i.i = getelementptr inbounds %struct.si_power_info, ptr %7, i32 0, i32 42
  %12 = ptrtoint ptr %t_min.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %t_min.i.i, align 4
  %or5.i.i = or i32 %and3.i.i, %13
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 471, i32 noundef %or5.i.i, i32 noundef 0) #14
  %14 = ptrtoint ptr %fan_ctrl_is_in_default_mode.i.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %fan_ctrl_is_in_default_mode.i.i, align 2
  br label %si_fan_ctrl_set_default_mode.exit.i

si_fan_ctrl_set_default_mode.exit.i:              ; preds = %if.then.i.i, %if.then.i.si_fan_ctrl_set_default_mode.exit.i_crit_edge
  %15 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %priv.i, align 4
  %call1.i4.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 92) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %call1.i4.i)
  %cmp.i.i = icmp eq i8 %call1.i4.i, 1
  br i1 %cmp.i.i, label %if.then.i5.i, label %si_fan_ctrl_set_default_mode.exit.i.si_thermal_stop_thermal_controller.exit_crit_edge

si_fan_ctrl_set_default_mode.exit.i.si_thermal_stop_thermal_controller.exit_crit_edge: ; preds = %si_fan_ctrl_set_default_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_thermal_stop_thermal_controller.exit

if.then.i5.i:                                     ; preds = %si_fan_ctrl_set_default_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %fan_is_controlled_by_smc.i.i = getelementptr inbounds %struct.si_power_info, ptr %16, i32 0, i32 44
  %17 = ptrtoint ptr %fan_is_controlled_by_smc.i.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %fan_is_controlled_by_smc.i.i, align 4
  br label %si_thermal_stop_thermal_controller.exit

si_thermal_stop_thermal_controller.exit:          ; preds = %if.then.i5.i, %si_fan_ctrl_set_default_mode.exit.i.si_thermal_stop_thermal_controller.exit_crit_edge, %if.end.si_thermal_stop_thermal_controller.exit_crit_edge
  %18 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %priv.i, align 4
  %ulv1.i = getelementptr inbounds %struct.si_power_info, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %ulv1.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %ulv1.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.i28 = icmp eq i8 %21, 0
  br i1 %tobool.not.i28, label %si_thermal_stop_thermal_controller.exit.si_disable_ulv.exit_crit_edge, label %if.then.i29

si_thermal_stop_thermal_controller.exit.si_disable_ulv.exit_crit_edge: ; preds = %si_thermal_stop_thermal_controller.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_disable_ulv.exit

if.then.i29:                                      ; preds = %si_thermal_stop_thermal_controller.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call2.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 99) #14
  br label %si_disable_ulv.exit

si_disable_ulv.exit:                              ; preds = %if.then.i29, %si_thermal_stop_thermal_controller.exit.si_disable_ulv.exit_crit_edge
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 495, i32 noundef 0, i32 noundef 0) #14
  %thermal_protection = getelementptr inbounds %struct.rv7xx_power_info, ptr %1, i32 0, i32 14
  %22 = ptrtoint ptr %thermal_protection to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %thermal_protection, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.not = icmp eq i8 %23, 0
  br i1 %tobool.not, label %si_disable_ulv.exit.if.end5_crit_edge, label %if.then4

si_disable_ulv.exit.if.end5_crit_edge:            ; preds = %si_disable_ulv.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.then4:                                         ; preds = %si_disable_ulv.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %or5.sink.i = or i32 %call.i, 4
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %or5.sink.i, i32 noundef 0) #14
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %si_disable_ulv.exit.if.end5_crit_edge
  %24 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %priv.i, align 4
  %enable_power_containment.i = getelementptr inbounds %struct.ni_power_info, ptr %25, i32 0, i32 10
  %26 = ptrtoint ptr %enable_power_containment.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %enable_power_containment.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.not.i31 = icmp eq i8 %27, 0
  br i1 %tobool.not.i31, label %if.end5.si_enable_power_containment.exit_crit_edge, label %if.then.i32

if.end5.si_enable_power_containment.exit_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_enable_power_containment.exit

if.then.i32:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %call11.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 90) #14
  %pc_enabled17.i = getelementptr inbounds %struct.ni_power_info, ptr %25, i32 0, i32 9
  %28 = ptrtoint ptr %pc_enabled17.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %pc_enabled17.i, align 1
  br label %si_enable_power_containment.exit

si_enable_power_containment.exit:                 ; preds = %if.then.i32, %if.end5.si_enable_power_containment.exit_crit_edge
  %29 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %priv.i, align 4
  %enable_cac.i = getelementptr inbounds %struct.ni_power_info, ptr %30, i32 0, i32 11
  %31 = ptrtoint ptr %enable_cac.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %enable_cac.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.not.i34 = icmp eq i8 %32, 0
  br i1 %tobool.not.i34, label %si_enable_power_containment.exit.si_enable_smc_cac.exit_crit_edge, label %if.then.i35

si_enable_power_containment.exit.si_enable_smc_cac.exit_crit_edge: ; preds = %si_enable_power_containment.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_enable_smc_cac.exit

if.then.i35:                                      ; preds = %si_enable_power_containment.exit
  %cac_enabled31.i = getelementptr inbounds %struct.ni_power_info, ptr %30, i32 0, i32 6
  %33 = ptrtoint ptr %cac_enabled31.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %cac_enabled31.i, align 2, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool32.not.i = icmp eq i8 %34, 0
  br i1 %tobool32.not.i, label %if.then.i35.si_enable_smc_cac.exit_crit_edge, label %if.then33.i

if.then.i35.si_enable_smc_cac.exit_crit_edge:     ; preds = %if.then.i35
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_enable_smc_cac.exit

if.then33.i:                                      ; preds = %if.then.i35
  %enable_dte34.i = getelementptr inbounds %struct.si_power_info, ptr %30, i32 0, i32 13
  %35 = ptrtoint ptr %enable_dte34.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %enable_dte34.i, align 4, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool35.not.i = icmp eq i8 %36, 0
  br i1 %tobool35.not.i, label %if.then33.i.if.end38.i_crit_edge, label %if.then36.i

if.then33.i.if.end38.i_crit_edge:                 ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38.i

if.then36.i:                                      ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #16
  %call37.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 136) #14
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.then36.i, %if.then33.i.if.end38.i_crit_edge
  %call39.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 84) #14
  %37 = ptrtoint ptr %cac_enabled31.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %cac_enabled31.i, align 2
  %support_cac_long_term_average41.i = getelementptr inbounds %struct.ni_power_info, ptr %30, i32 0, i32 5
  %38 = ptrtoint ptr %support_cac_long_term_average41.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %support_cac_long_term_average41.i, align 1, !range !270
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool42.not.i = icmp eq i8 %39, 0
  br i1 %tobool42.not.i, label %if.end38.i.si_enable_smc_cac.exit_crit_edge, label %if.then43.i

if.end38.i.si_enable_smc_cac.exit_crit_edge:      ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_enable_smc_cac.exit

if.then43.i:                                      ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #16
  %call44.i = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 111) #14
  br label %si_enable_smc_cac.exit

si_enable_smc_cac.exit:                           ; preds = %if.then43.i, %if.end38.i.si_enable_smc_cac.exit_crit_edge, %if.then.i35.si_enable_smc_cac.exit_crit_edge, %si_enable_power_containment.exit.si_enable_smc_cac.exit_crit_edge
  %call6.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 392, i32 noundef 0) #14
  %and7.i = and i32 %call6.i, -2
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 392, i32 noundef %and7.i, i32 noundef 0) #14
  %call13.i = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %and14.i = and i32 %call13.i, -8388609
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %and14.i, i32 noundef 0) #14
  %40 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %priv.i, align 4
  %active_auto_throttle_sources.i = getelementptr inbounds %struct.rv7xx_power_info, ptr %41, i32 0, i32 35
  %42 = ptrtoint ptr %active_auto_throttle_sources.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %active_auto_throttle_sources.i, align 4
  %and.i38 = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i38)
  %tobool1.not.i = icmp eq i32 %and.i38, 0
  br i1 %tobool1.not.i, label %si_enable_smc_cac.exit.si_enable_auto_throttle_source.exit_crit_edge, label %if.then10.i

si_enable_smc_cac.exit.si_enable_auto_throttle_source.exit_crit_edge: ; preds = %si_enable_smc_cac.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_enable_auto_throttle_source.exit

if.then10.i:                                      ; preds = %si_enable_smc_cac.exit
  call void @__sanitizer_cov_trace_pc() #16
  %and13.i = and i32 %43, -2
  %44 = ptrtoint ptr %active_auto_throttle_sources.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %and13.i, ptr %active_auto_throttle_sources.i, align 4
  tail call fastcc void @si_set_dpm_event_sources(ptr noundef %adev, i32 noundef %and13.i) #14
  br label %si_enable_auto_throttle_source.exit

si_enable_auto_throttle_source.exit:              ; preds = %if.then10.i, %si_enable_smc_cac.exit.si_enable_auto_throttle_source.exit_crit_edge
  %call.i39 = tail call i32 @amdgpu_device_rreg(ptr noundef %adev, i32 noundef 480, i32 noundef 0) #14
  %and.i40 = and i32 %call.i39, -2
  tail call void @amdgpu_device_wreg(ptr noundef %adev, i32 noundef 480, i32 noundef %and.i40, i32 noundef 0) #14
  %call.i41 = tail call zeroext i8 @amdgpu_si_send_msg_to_smc(ptr noundef %adev, i16 noundef zeroext 132) #14
  tail call void @amdgpu_si_reset_smc(ptr noundef %adev) #14
  tail call void @amdgpu_si_smc_clock(ptr noundef %adev, i1 noundef zeroext false) #14
  %45 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %priv.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #14
  %47 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 -1, ptr %tmp.i, align 4, !annotation !272
  %arb_table_start.i = getelementptr inbounds %struct.si_power_info, ptr %46, i32 0, i32 24
  %48 = ptrtoint ptr %arb_table_start.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arb_table_start.i, align 4
  %sram_end.i = getelementptr inbounds %struct.si_power_info, ptr %46, i32 0, i32 20
  %50 = ptrtoint ptr %sram_end.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %sram_end.i, align 4
  %call1.i = call i32 @amdgpu_si_read_smc_sram_dword(ptr noundef %adev, i32 noundef %49, ptr noundef nonnull %tmp.i, i32 noundef %51) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i43 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i43, label %if.end.i, label %si_enable_auto_throttle_source.exit.si_force_switch_to_arb_f0.exit_crit_edge

si_enable_auto_throttle_source.exit.si_force_switch_to_arb_f0.exit_crit_edge: ; preds = %si_enable_auto_throttle_source.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_force_switch_to_arb_f0.exit

if.end.i:                                         ; preds = %si_enable_auto_throttle_source.exit
  %52 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %tmp.i, align 4
  %shr.i = lshr i32 %53, 24
  store i32 %shr.i, ptr %tmp.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %shr.i)
  %cmp.i44 = icmp eq i32 %shr.i, 10
  br i1 %cmp.i44, label %if.end.i.si_force_switch_to_arb_f0.exit_crit_edge, label %if.end3.i

if.end.i.si_force_switch_to_arb_f0.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %si_force_switch_to_arb_f0.exit

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call4.i = call fastcc i32 @ni_copy_and_switch_arb_sets(ptr noundef %adev, i32 noundef %shr.i, i32 noundef 10) #14
  br label %si_force_switch_to_arb_f0.exit

si_force_switch_to_arb_f0.exit:                   ; preds = %if.end3.i, %if.end.i.si_force_switch_to_arb_f0.exit_crit_edge, %si_enable_auto_throttle_source.exit.si_force_switch_to_arb_f0.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #14
  %ps_priv.i.i = getelementptr inbounds %struct.amdgpu_ps, ptr %3, i32 0, i32 9
  %54 = ptrtoint ptr %ps_priv.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ps_priv.i.i, align 4
  %56 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %priv.i, align 4
  %current_rps.i = getelementptr inbounds %struct.evergreen_power_info, ptr %57, i32 0, i32 25
  %58 = call ptr @memcpy(ptr %current_rps.i, ptr %3, i32 40)
  %current_ps.i = getelementptr inbounds %struct.ni_power_info, ptr %57, i32 0, i32 22
  %59 = call ptr @memcpy(ptr %current_ps.i, ptr %55, i32 324)
  %ps_priv.i = getelementptr inbounds %struct.evergreen_power_info, ptr %57, i32 0, i32 25, i32 9
  %60 = ptrtoint ptr %ps_priv.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %current_ps.i, ptr %ps_priv.i, align 4
  %current_ps6.i = getelementptr inbounds %struct.amdgpu_device, ptr %adev, i32 0, i32 98, i32 15, i32 2
  %61 = ptrtoint ptr %current_ps6.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %current_rps.i, ptr %current_ps6.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %si_force_switch_to_arb_f0.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umin.i8(i8, i8) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umax.i16(i16, i16) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umin.i16(i16, i16) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #12

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 122)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 122)
  ret void
}

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { nounwind allocsize(0) }
attributes #18 = { nounwind allocsize(2) }
attributes #19 = { cold nounwind }
attributes #20 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !59, !60, !61, !62, !64, !65, !66, !68, !69, !70, !72, !73, !74, !75, !77, !79, !81, !83, !85, !87, !89, !91, !93, !94, !96, !97, !98, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259}
!llvm.module.flags = !{!261, !262, !263, !264, !265, !266, !267, !268}
!llvm.ident = !{!269}

!0 = !{ptr @__UNIQUE_ID_firmware343, !1, !"__UNIQUE_ID_firmware343", i1 false, i1 false}
!1 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 61, i32 1}
!2 = !{ptr @__UNIQUE_ID_firmware344, !3, !"__UNIQUE_ID_firmware344", i1 false, i1 false}
!3 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 62, i32 1}
!4 = !{ptr @__UNIQUE_ID_firmware345, !5, !"__UNIQUE_ID_firmware345", i1 false, i1 false}
!5 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 63, i32 1}
!6 = !{ptr @__UNIQUE_ID_firmware346, !7, !"__UNIQUE_ID_firmware346", i1 false, i1 false}
!7 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 64, i32 1}
!8 = !{ptr @__UNIQUE_ID_firmware347, !9, !"__UNIQUE_ID_firmware347", i1 false, i1 false}
!9 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 65, i32 1}
!10 = !{ptr @__UNIQUE_ID_firmware348, !11, !"__UNIQUE_ID_firmware348", i1 false, i1 false}
!11 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 66, i32 1}
!12 = !{ptr @__UNIQUE_ID_firmware349, !13, !"__UNIQUE_ID_firmware349", i1 false, i1 false}
!13 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 67, i32 1}
!14 = !{ptr @__UNIQUE_ID_firmware350, !15, !"__UNIQUE_ID_firmware350", i1 false, i1 false}
!15 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 68, i32 1}
!16 = !{ptr @__UNIQUE_ID_firmware351, !17, !"__UNIQUE_ID_firmware351", i1 false, i1 false}
!17 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 69, i32 1}
!18 = !{ptr @__UNIQUE_ID_firmware352, !19, !"__UNIQUE_ID_firmware352", i1 false, i1 false}
!19 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 70, i32 1}
!20 = !{ptr @si_smu_ip_block, !21, !"si_smu_ip_block", i1 false, i1 false}
!21 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 8039, i32 38}
!22 = !{ptr @.str, !23, !"<string literal>", i1 false, i1 false}
!23 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 8023, i32 10}
!24 = !{ptr @si_dpm_ip_funcs, !25, !"si_dpm_ip_funcs", i1 false, i1 false}
!25 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 8022, i32 34}
!26 = !{ptr @si_dpm_funcs, !27, !"si_dpm_funcs", i1 false, i1 false}
!27 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 8048, i32 34}
!28 = !{ptr @.str.1, !29, !"<string literal>", i1 false, i1 false}
!29 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6983, i32 3}
!30 = !{ptr @.str.2, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6988, i32 3}
!32 = !{ptr @.str.3, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6996, i32 3}
!34 = !{ptr @.str.4, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7001, i32 3}
!36 = !{ptr @.str.5, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7006, i32 3}
!38 = !{ptr @.str.6, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7011, i32 3}
!40 = distinct !{null, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7016, i32 3}
!42 = !{ptr @.str.8, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7021, i32 3}
!44 = !{ptr @.str.9, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7027, i32 4}
!46 = !{ptr @.str.10, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7033, i32 3}
!48 = !{ptr @.str.11, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7040, i32 3}
!50 = !{ptr @.str.12, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7045, i32 3}
!52 = !{ptr @.str.13, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7054, i32 3}
!54 = !{ptr @.str.14, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7070, i32 3}
!56 = !{ptr @.str.15, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7902, i32 2}
!58 = !{ptr @.str.16, !57, !"<string literal>", i1 false, i1 false}
!59 = !{ptr @.str.17, !57, !"<string literal>", i1 false, i1 false}
!60 = !{ptr @si_dpm_print_power_state._entry, !57, !"_entry", i1 false, i1 false}
!61 = !{ptr @si_dpm_print_power_state._entry_ptr, !57, !"_entry_ptr", i1 false, i1 false}
!62 = !{ptr @.str.19, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7906, i32 4}
!64 = !{ptr @si_dpm_print_power_state._entry.18, !63, !"_entry", i1 false, i1 false}
!65 = !{ptr @si_dpm_print_power_state._entry_ptr.20, !63, !"_entry_ptr", i1 false, i1 false}
!66 = !{ptr @.str.22, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7909, i32 4}
!68 = !{ptr @si_dpm_print_power_state._entry.21, !67, !"_entry", i1 false, i1 false}
!69 = !{ptr @si_dpm_print_power_state._entry_ptr.23, !67, !"_entry_ptr", i1 false, i1 false}
!70 = !{ptr @.str.24, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7955, i32 3}
!72 = !{ptr @.str.25, !71, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @si_check_state_equal._entry, !71, !"_entry", i1 false, i1 false}
!74 = !{ptr @si_check_state_equal._entry_ptr, !71, !"_entry_ptr", i1 false, i1 false}
!75 = !{ptr @.str.26, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7492, i32 17}
!77 = !{ptr @.str.27, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7495, i32 17}
!79 = !{ptr @.str.28, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7496, i32 17}
!81 = !{ptr @si_dpm_irq_funcs, !82, !"si_dpm_irq_funcs", i1 false, i1 false}
!82 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 8068, i32 42}
!83 = !{ptr @.str.29, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7560, i32 3}
!85 = !{ptr @.str.30, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7565, i32 3}
!87 = !{ptr @.str.31, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6386, i32 4}
!89 = distinct !{null, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6408, i32 3}
!91 = !{ptr @si_dpm_sw_init.__key, !92, !"__key", i1 false, i1 false}
!92 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7715, i32 2}
!93 = !{ptr @.str.33, !92, !"<string literal>", i1 false, i1 false}
!94 = !{ptr @.str.34, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7724, i32 2}
!96 = !{ptr @.str.35, !95, !"<string literal>", i1 false, i1 false}
!97 = !{ptr @si_dpm_sw_init._entry, !95, !"_entry", i1 false, i1 false}
!98 = !{ptr @si_dpm_sw_init._entry_ptr, !95, !"_entry_ptr", i1 false, i1 false}
!99 = !{ptr @.str.36, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7731, i32 2}
!101 = !{ptr @.str.37, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7611, i32 2}
!103 = !{ptr @.str.38, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7614, i32 15}
!105 = !{ptr @.str.39, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7620, i32 16}
!107 = !{ptr @.str.40, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7622, i32 16}
!109 = !{ptr @.str.41, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7634, i32 16}
!111 = !{ptr @.str.42, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7636, i32 16}
!113 = !{ptr @.str.43, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7646, i32 16}
!115 = !{ptr @.str.44, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7648, i32 16}
!117 = !{ptr @.str.45, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7658, i32 16}
!119 = !{ptr @.str.46, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7661, i32 16}
!121 = !{ptr @.str.47, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7663, i32 16}
!123 = !{ptr @.str.48, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7668, i32 37}
!125 = !{ptr @.str.49, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 7676, i32 3}
!127 = !{ptr @.str.50, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6339, i32 3}
!129 = !{ptr @.str.51, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6343, i32 3}
!131 = !{ptr @.str.52, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6347, i32 3}
!133 = !{ptr @.str.53, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1997, i32 5}
!135 = !{ptr @.str.54, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 2125, i32 3}
!137 = !{ptr @cac_weights_tahiti, !138, !"cac_weights_tahiti", i1 false, i1 false}
!138 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 137, i32 39}
!139 = !{ptr @lcac_tahiti, !140, !"lcac_tahiti", i1 false, i1 false}
!140 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 202, i32 39}
!141 = !{ptr @cac_override_tahiti, !142, !"cac_override_tahiti", i1 false, i1 false}
!142 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 294, i32 39}
!143 = !{ptr @powertune_data_tahiti, !144, !"powertune_data_tahiti", i1 false, i1 false}
!144 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 299, i32 39}
!145 = !{ptr @dte_data_tahiti, !146, !"dte_data_tahiti", i1 false, i1 false}
!146 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 330, i32 33}
!147 = !{ptr @dte_data_new_zealand, !148, !"dte_data_new_zealand", i1 false, i1 false}
!148 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 366, i32 33}
!149 = !{ptr @dte_data_aruba_pro, !150, !"dte_data_aruba_pro", i1 false, i1 false}
!150 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 384, i32 33}
!151 = !{ptr @dte_data_malta, !152, !"dte_data_malta", i1 false, i1 false}
!152 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 402, i32 33}
!153 = !{ptr @dte_data_tahiti_pro, !154, !"dte_data_tahiti_pro", i1 false, i1 false}
!154 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 348, i32 33}
!155 = !{ptr @cac_weights_pitcairn, !156, !"cac_weights_pitcairn", i1 false, i1 false}
!156 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 420, i32 39}
!157 = !{ptr @lcac_pitcairn, !158, !"lcac_pitcairn", i1 false, i1 false}
!158 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 485, i32 39}
!159 = !{ptr @cac_override_pitcairn, !160, !"cac_override_pitcairn", i1 false, i1 false}
!160 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 576, i32 39}
!161 = !{ptr @powertune_data_pitcairn, !162, !"powertune_data_pitcairn", i1 false, i1 false}
!162 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 581, i32 39}
!163 = !{ptr @dte_data_curacao_xt, !164, !"dte_data_curacao_xt", i1 false, i1 false}
!164 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 630, i32 33}
!165 = !{ptr @dte_data_curacao_pro, !166, !"dte_data_curacao_pro", i1 false, i1 false}
!166 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 648, i32 33}
!167 = !{ptr @dte_data_neptune_xt, !168, !"dte_data_neptune_xt", i1 false, i1 false}
!168 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 666, i32 33}
!169 = distinct !{null, !170, !"dte_data_pitcairn", i1 false, i1 false}
!170 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 612, i32 33}
!171 = !{ptr @lcac_cape_verde, !172, !"lcac_cape_verde", i1 false, i1 false}
!172 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1009, i32 39}
!173 = !{ptr @cac_override_cape_verde, !174, !"cac_override_cape_verde", i1 false, i1 false}
!174 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1068, i32 39}
!175 = !{ptr @powertune_data_cape_verde, !176, !"powertune_data_cape_verde", i1 false, i1 false}
!176 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1073, i32 39}
!177 = !{ptr @cac_weights_cape_verde_pro, !178, !"cac_weights_cape_verde_pro", i1 false, i1 false}
!178 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 879, i32 39}
!179 = distinct !{null, !180, !"dte_data_cape_verde", i1 false, i1 false}
!180 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1104, i32 33}
!181 = !{ptr @dte_data_sun_xt, !182, !"dte_data_sun_xt", i1 false, i1 false}
!182 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1698, i32 33}
!183 = !{ptr @cac_weights_heathrow, !184, !"cac_weights_heathrow", i1 false, i1 false}
!184 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 814, i32 39}
!185 = !{ptr @cac_weights_chelsea_xt, !186, !"cac_weights_chelsea_xt", i1 false, i1 false}
!186 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 749, i32 39}
!187 = !{ptr @cac_weights_chelsea_pro, !188, !"cac_weights_chelsea_pro", i1 false, i1 false}
!188 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 684, i32 39}
!189 = !{ptr @dte_data_venus_xtx, !190, !"dte_data_venus_xtx", i1 false, i1 false}
!190 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1122, i32 33}
!191 = !{ptr @dte_data_venus_xt, !192, !"dte_data_venus_xt", i1 false, i1 false}
!192 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1140, i32 33}
!193 = !{ptr @dte_data_venus_pro, !194, !"dte_data_venus_pro", i1 false, i1 false}
!194 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1158, i32 33}
!195 = !{ptr @cac_weights_cape_verde, !196, !"cac_weights_cape_verde", i1 false, i1 false}
!196 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 944, i32 39}
!197 = !{ptr @lcac_mars_pro, !198, !"lcac_mars_pro", i1 false, i1 false}
!198 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1548, i32 39}
!199 = !{ptr @cac_override_oland, !200, !"cac_override_oland", i1 false, i1 false}
!200 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1595, i32 39}
!201 = !{ptr @powertune_data_mars_pro, !202, !"powertune_data_mars_pro", i1 false, i1 false}
!202 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1631, i32 39}
!203 = !{ptr @dte_data_mars_pro, !204, !"dte_data_mars_pro", i1 false, i1 false}
!204 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1680, i32 33}
!205 = !{ptr @cac_weights_mars_pro, !206, !"cac_weights_mars_pro", i1 false, i1 false}
!206 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1241, i32 39}
!207 = !{ptr @cac_weights_mars_xt, !208, !"cac_weights_mars_xt", i1 false, i1 false}
!208 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1306, i32 39}
!209 = !{ptr @cac_weights_oland_pro, !210, !"cac_weights_oland_pro", i1 false, i1 false}
!210 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1371, i32 39}
!211 = !{ptr @cac_weights_oland_xt, !212, !"cac_weights_oland_xt", i1 false, i1 false}
!212 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1436, i32 39}
!213 = !{ptr @cac_weights_oland, !214, !"cac_weights_oland", i1 false, i1 false}
!214 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1176, i32 39}
!215 = !{ptr @lcac_oland, !216, !"lcac_oland", i1 false, i1 false}
!216 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1501, i32 39}
!217 = !{ptr @powertune_data_oland, !218, !"powertune_data_oland", i1 false, i1 false}
!218 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1600, i32 39}
!219 = distinct !{null, !220, !"dte_data_oland", i1 false, i1 false}
!220 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1662, i32 33}
!221 = !{ptr @cac_weights_hainan, !222, !"cac_weights_hainan", i1 false, i1 false}
!222 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1717, i32 39}
!223 = !{ptr @powertune_data_hainan, !224, !"powertune_data_hainan", i1 false, i1 false}
!224 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1782, i32 39}
!225 = !{ptr @.str.65, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 1935, i32 3}
!227 = !{ptr @.str.66, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6774, i32 4}
!229 = !{ptr @.str.67, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6796, i32 3}
!231 = !{ptr @.str.68, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6801, i32 3}
!233 = !{ptr @.str.69, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6806, i32 3}
!235 = !{ptr @.str.70, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6811, i32 3}
!237 = !{ptr @.str.71, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6816, i32 3}
!239 = !{ptr @.str.72, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6821, i32 3}
!241 = !{ptr @.str.73, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6827, i32 4}
!243 = !{ptr @.str.74, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6833, i32 3}
!245 = !{ptr @.str.75, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6838, i32 3}
!247 = !{ptr @.str.76, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6843, i32 3}
!249 = !{ptr @.str.77, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6848, i32 3}
!251 = !{ptr @.str.78, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6853, i32 3}
!253 = !{ptr @.str.79, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6861, i32 3}
!255 = !{ptr @r600_utc, !256, !"r600_utc", i1 false, i1 false}
!256 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 99, i32 18}
!257 = !{ptr @r600_dtc, !258, !"r600_dtc", i1 false, i1 false}
!258 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 118, i32 18}
!259 = !{ptr @.str.80, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../drivers/gpu/drm/amd/amdgpu/../pm/powerplay/si_dpm.c", i32 6506, i32 3}
!261 = !{i32 1, !"wchar_size", i32 2}
!262 = !{i32 1, !"min_enum_size", i32 4}
!263 = !{i32 8, !"branch-target-enforcement", i32 0}
!264 = !{i32 8, !"sign-return-address", i32 0}
!265 = !{i32 8, !"sign-return-address-all", i32 0}
!266 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!267 = !{i32 7, !"uwtable", i32 1}
!268 = !{i32 7, !"frame-pointer", i32 2}
!269 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!270 = !{i8 0, i8 2}
!271 = !{i64 2159767383, i64 2159767900, i64 2159767420, i64 2159767476, i64 2159767510, i64 2159767534, i64 2159767575, i64 2159767596, i64 2159767624, i64 2159767658}
!272 = !{!"auto-init"}
!273 = !{i64 959020, i64 959047}
!274 = !{i64 959360, i64 959387, i64 959421, i64 959442}
!275 = !{!"branch_weights", i32 2000, i32 1}
!276 = !{i64 2148444681, i64 2148444961, i64 2148445295, i64 2148445629}
!277 = !{i64 958850, i64 958877}
