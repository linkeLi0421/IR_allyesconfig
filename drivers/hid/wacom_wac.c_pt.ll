; ModuleID = '/llk/IR_all_yes/drivers/hid/wacom_wac.c_pt.bc'
source_filename = "../drivers/hid/wacom_wac.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.65 }
%union.anon.65 = type { ptr }
%struct.wacom_features = type { ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.hid_device_id = type { i16, i16, i32, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.hid_device = type { ptr, i32, ptr, i32, ptr, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, [3 x %struct.hid_report_enum], %struct.work_struct, %struct.semaphore, %struct.device, ptr, ptr, %struct.mutex, i32, ptr, i32, i32, i32, i32, i32, i32, i8, i64, i32, i32, i32, i8, %struct.list_head, ptr, ptr, [128 x i8], [64 x i8], [64 x i8], ptr, ptr, ptr, ptr, ptr, ptr, i16, ptr, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.wait_queue_head }
%struct.hid_report_enum = type { i32, %struct.list_head, [256 x ptr] }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.hid_field = type { i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, ptr, i32, ptr, i16 }
%struct.wacom = type { ptr, ptr, %struct.wacom_wac, ptr, %struct.mutex, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.delayed_work, ptr, %struct.work_struct, i8, %struct.wacom_leds, %struct.wacom_battery, i8 }
%struct.wacom_wac = type { [64 x i8], [64 x i8], [64 x i8], [64 x i8], [361 x i8], [2 x i32], [2 x i32], [2 x i64], i8, i8, %struct.wacom_features, ptr, ptr, ptr, ptr, ptr, i32, i32, i8, i8, i32, i32, %struct.hid_data, i8, i8, i8, i8, i8 }
%struct.hid_data = type { i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.wacom_leds = type { ptr, i32, i8, i8, i8, i8, i8 }
%struct.wacom_battery = type { ptr, %struct.power_supply_desc, ptr, [64 x i8], i32, i32, i32, i32, i32 }
%struct.power_supply_desc = type { ptr, i32, ptr, i32, ptr, i32, ptr, ptr, ptr, ptr, ptr, i8, i32 }
%struct.input_dev = type { ptr, ptr, ptr, %struct.input_id, [1 x i32], [1 x i32], [24 x i32], [1 x i32], [2 x i32], [1 x i32], [1 x i32], [1 x i32], [4 x i32], [1 x i32], i32, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, %struct.timer_list, [2 x i32], ptr, ptr, [24 x i32], [1 x i32], [1 x i32], [1 x i32], ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, ptr, i8, [3 x i64], i8 }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.hid_usage = type { i32, i32, i32, i8, i8, i16, i8, i8, i8, i8, i16 }
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.hid_report = type { %struct.list_head, %struct.list_head, i32, i32, i32, [256 x ptr], i32, i32, ptr }
%struct.wacom_shared = type { i8, i8, i32, i32, ptr, ptr, ptr, i8, i8 }
%struct.input_mt = type { i32, i32, i32, i32, i32, ptr, [0 x %struct.input_mt_slot] }
%struct.input_mt_slot = type { [14 x i32], i32, i32 }
%struct.wacom_remote_data = type { [5 x %struct.anon.79] }
%struct.anon.79 = type { i32, i8 }
%struct.wacom_remote = type { %struct.spinlock, %struct.kfifo, ptr, [5 x %struct.anon.74] }
%struct.kfifo = type { %union.anon.73, [0 x i8] }
%union.anon.73 = type { %struct.__kfifo }
%struct.__kfifo = type { i32, i32, i32, i32, ptr }
%struct.anon.74 = type { %struct.attribute_group, i32, ptr, i8, %struct.wacom_battery }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.wacom_group_leds = type { i8, ptr, i32, ptr }
%struct.wacom_led = type { %struct.led_classdev, %struct.led_trigger, ptr, i32, i32, i8, i8, i8 }
%struct.led_classdev = type { ptr, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, i32, i32, %struct.timer_list, i32, i32, ptr, %struct.work_struct, i32, %struct.rw_semaphore, ptr, %struct.list_head, ptr, i8, ptr, i32, ptr, %struct.mutex }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.led_trigger = type { ptr, ptr, ptr, ptr, %struct.spinlock, %struct.list_head, %struct.list_head, ptr }

@__param_str_touch_arbitration = internal constant [24 x i8] c"wacom.touch_arbitration\00", align 1
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 4
@touch_arbitration = internal global { i8, [31 x i8] } { i8 1, [31 x i8] zeroinitializer }, align 32
@__param_touch_arbitration = internal constant %struct.kernel_param { ptr @__param_str_touch_arbitration, ptr null, ptr @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon.65 { ptr @touch_arbitration } }, section "__param", align 4
@__UNIQUE_ID_touch_arbitrationtype237 = internal constant [38 x i8] c"wacom.parmtype=touch_arbitration:bool\00", section ".modinfo", align 1
@__UNIQUE_ID_touch_arbitration238 = internal constant [45 x i8] c"wacom.parm=touch_arbitration: on (Y) off (N)\00", section ".modinfo", align 1
@wacom_features_0x00 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.43, i32 5040, i32 3780, i32 255, i32 0, i32 0, i32 40, i32 40, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x03 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.44, i32 20480, i32 15360, i32 511, i32 0, i32 4, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x10 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.45, i32 10206, i32 7422, i32 511, i32 63, i32 1, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x11 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.46, i32 10206, i32 7422, i32 511, i32 63, i32 1, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x12 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.47, i32 13918, i32 10206, i32 511, i32 63, i32 1, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x13 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.48, i32 10208, i32 7424, i32 511, i32 63, i32 1, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x14 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.49, i32 16704, i32 12064, i32 511, i32 63, i32 1, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x15 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.50, i32 10208, i32 7424, i32 511, i32 63, i32 3, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x16 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.51, i32 16704, i32 12064, i32 511, i32 63, i32 3, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x17 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.52, i32 14760, i32 9225, i32 511, i32 63, i32 36, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x18 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.53, i32 21648, i32 13530, i32 511, i32 63, i32 36, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x19 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.54, i32 16704, i32 12064, i32 511, i32 63, i32 1, i32 80, i32 80, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x20 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.55, i32 12700, i32 10600, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x21 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.56, i32 20320, i32 16240, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x22 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.57, i32 30480, i32 24060, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x23 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.58, i32 30480, i32 31680, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x24 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.59, i32 45720, i32 31680, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x26 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.60, i32 31496, i32 19685, i32 2047, i32 63, i32 17, i32 200, i32 200, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x27 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.61, i32 44704, i32 27940, i32 2047, i32 63, i32 18, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x28 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.62, i32 65024, i32 40640, i32 2047, i32 63, i32 19, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x29 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.63, i32 31496, i32 19685, i32 2047, i32 63, i32 17, i32 200, i32 200, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x2A = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.64, i32 44704, i32 27940, i32 2047, i32 63, i32 18, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x30 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.65, i32 5408, i32 4056, i32 255, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x31 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.66, i32 6144, i32 4608, i32 255, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x32 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.67, i32 6126, i32 4604, i32 255, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x33 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.68, i32 6260, i32 5016, i32 255, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x34 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.69, i32 6144, i32 4608, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x35 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.70, i32 7220, i32 5780, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x37 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.71, i32 6758, i32 5406, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x38 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.72, i32 6282, i32 4762, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x39 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.73, i32 34080, i32 27660, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x3F = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.74, i32 87200, i32 65600, i32 1023, i32 63, i32 33, i32 200, i32 200, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x41 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.75, i32 12700, i32 10600, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x42 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.76, i32 20320, i32 16240, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x43 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.77, i32 30480, i32 24060, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x44 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.78, i32 30480, i32 31680, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x45 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.79, i32 45720, i32 31680, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x47 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.76, i32 20320, i32 16240, i32 1023, i32 31, i32 9, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x57 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.80, i32 95840, i32 54260, i32 2047, i32 63, i32 28, i32 200, i32 200, i32 6, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x59 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.81, i32 95840, i32 54260, i32 2047, i32 63, i32 28, i32 200, i32 200, i32 6, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 93, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x5B = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.82, i32 95840, i32 54260, i32 2047, i32 63, i32 27, i32 200, i32 200, i32 18, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 94, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x5D = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.81, i32 0, i32 0, i32 0, i32 0, i32 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1386, i32 89, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x5E = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.82, i32 0, i32 0, i32 0, i32 0, i32 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1386, i32 91, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x60 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.83, i32 5104, i32 3712, i32 511, i32 63, i32 1, i32 50, i32 50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x61 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.84, i32 3250, i32 2320, i32 255, i32 63, i32 1, i32 50, i32 50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x62 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.85, i32 5104, i32 3712, i32 511, i32 63, i32 1, i32 50, i32 50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x63 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.86, i32 3248, i32 2320, i32 511, i32 63, i32 1, i32 50, i32 50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x64 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.87, i32 3250, i32 2320, i32 511, i32 63, i32 1, i32 50, i32 50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x65 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.88, i32 14760, i32 9225, i32 511, i32 63, i32 36, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x69 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.89, i32 5104, i32 3712, i32 511, i32 63, i32 1, i32 40, i32 40, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x6A = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.90, i32 14760, i32 9225, i32 1023, i32 63, i32 1, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x6B = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.91, i32 21648, i32 13530, i32 1023, i32 63, i32 1, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x81 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.92, i32 16704, i32 12064, i32 511, i32 32, i32 2, i32 80, i32 80, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x84 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.93, i32 0, i32 0, i32 0, i32 0, i32 45, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x90 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.94, i32 26202, i32 16325, i32 255, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x93 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.95, i32 26202, i32 16325, i32 255, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x97 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.96, i32 26202, i32 16325, i32 511, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x9A = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.97, i32 26202, i32 16325, i32 255, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x9F = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.98, i32 26202, i32 16325, i32 255, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB0 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.99, i32 25400, i32 20320, i32 1023, i32 63, i32 10, i32 200, i32 200, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB1 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.100, i32 40640, i32 30480, i32 1023, i32 63, i32 11, i32 200, i32 200, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB2 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.101, i32 60960, i32 45720, i32 1023, i32 63, i32 11, i32 200, i32 200, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB3 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.102, i32 60960, i32 60960, i32 1023, i32 63, i32 12, i32 200, i32 200, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB4 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.103, i32 97536, i32 60960, i32 1023, i32 63, i32 12, i32 200, i32 200, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB5 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.104, i32 54204, i32 31750, i32 1023, i32 63, i32 11, i32 200, i32 200, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB7 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.105, i32 31496, i32 19685, i32 1023, i32 63, i32 10, i32 200, i32 200, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB8 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.106, i32 31496, i32 19685, i32 2047, i32 63, i32 13, i32 200, i32 200, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xB9 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.107, i32 44704, i32 27940, i32 2047, i32 63, i32 14, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xBA = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.108, i32 65024, i32 40640, i32 2047, i32 63, i32 16, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xBB = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.109, i32 97536, i32 60960, i32 2047, i32 63, i32 16, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xBC = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.110, i32 40640, i32 25400, i32 2047, i32 63, i32 14, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xBD = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.110, i32 40640, i32 25400, i32 2047, i32 63, i32 15, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xC0 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.111, i32 6858, i32 5506, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xC2 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.112, i32 6858, i32 5506, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xC4 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.113, i32 6282, i32 4762, i32 511, i32 0, i32 5, i32 20, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xC5 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.114, i32 86680, i32 54180, i32 1023, i32 63, i32 34, i32 200, i32 200, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xC6 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.115, i32 53020, i32 33440, i32 1023, i32 63, i32 34, i32 200, i32 200, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xC7 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.116, i32 37832, i32 30305, i32 511, i32 0, i32 5, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xCC = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.117, i32 87200, i32 65600, i32 2047, i32 63, i32 26, i32 200, i32 200, i32 18, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xCE = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.118, i32 47864, i32 27011, i32 511, i32 0, i32 6, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 1, i32 1 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD0 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.119, i32 14720, i32 9200, i32 1023, i32 31, i32 40, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD1 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.120, i32 14720, i32 9200, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD2 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.121, i32 14720, i32 9200, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD3 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.122, i32 21648, i32 13700, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD4 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.123, i32 14720, i32 9200, i32 1023, i32 31, i32 37, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD5 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.124, i32 21648, i32 13700, i32 1023, i32 31, i32 37, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD6 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.125, i32 14720, i32 9200, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD7 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.126, i32 14720, i32 9200, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xD8 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.127, i32 21648, i32 13700, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xDA = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.128, i32 14720, i32 9200, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xDB = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.129, i32 21648, i32 13700, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xDD = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.130, i32 14720, i32 9200, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xDE = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.131, i32 14720, i32 9200, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xDF = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.132, i32 21648, i32 13700, i32 1023, i32 31, i32 41, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xE2 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.133, i32 26202, i32 16325, i32 255, i32 0, i32 49, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xE3 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.134, i32 26202, i32 16325, i32 255, i32 0, i32 49, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xE5 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.135, i32 26202, i32 16325, i32 255, i32 0, i32 50, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xE6 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.136, i32 27760, i32 15694, i32 255, i32 0, i32 49, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xEC = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.137, i32 25710, i32 14500, i32 255, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xED = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.138, i32 26202, i32 16325, i32 255, i32 0, i32 48, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xEF = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.139, i32 26202, i32 16325, i32 255, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xF0 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.140, i32 34623, i32 19553, i32 511, i32 0, i32 6, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xF4 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.141, i32 104480, i32 65600, i32 2047, i32 63, i32 29, i32 200, i32 200, i32 16, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xF6 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.142, i32 0, i32 0, i32 0, i32 0, i32 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1386, i32 248, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xF8 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.142, i32 104480, i32 65600, i32 2047, i32 63, i32 29, i32 200, i32 200, i32 16, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 246, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xFA = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.143, i32 95840, i32 54260, i32 2047, i32 63, i32 27, i32 200, i32 200, i32 18, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0xFB = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.144, i32 22096, i32 13960, i32 511, i32 0, i32 7, i32 100, i32 100, i32 4, i32 200, i32 200, i32 200, i32 200, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x100 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.145, i32 26202, i32 16325, i32 255, i32 0, i32 51, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x101 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.146, i32 26202, i32 16325, i32 255, i32 0, i32 51, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x10D = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.147, i32 26202, i32 16325, i32 255, i32 0, i32 51, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x10E = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.148, i32 27760, i32 15694, i32 255, i32 0, i32 51, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x10F = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.149, i32 27760, i32 15694, i32 255, i32 0, i32 51, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x116 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.150, i32 26202, i32 16325, i32 255, i32 0, i32 48, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x12C = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.151, i32 27848, i32 15752, i32 2047, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x300 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.152, i32 14720, i32 9225, i32 1023, i32 31, i32 37, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x301 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.153, i32 21648, i32 13530, i32 1023, i32 31, i32 37, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x302 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.154, i32 15200, i32 9500, i32 1023, i32 31, i32 38, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x303 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.155, i32 21600, i32 13500, i32 1023, i32 31, i32 38, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x304 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.156, i32 59552, i32 33848, i32 1023, i32 63, i32 35, i32 200, i32 200, i32 9, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x307 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.157, i32 59552, i32 33848, i32 2047, i32 63, i32 31, i32 200, i32 200, i32 9, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 777, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x309 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.158, i32 0, i32 0, i32 0, i32 0, i32 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1386, i32 775, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x30A = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.159, i32 59552, i32 33848, i32 2047, i32 63, i32 31, i32 200, i32 200, i32 9, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 780, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x30C = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.160, i32 0, i32 0, i32 0, i32 0, i32 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1386, i32 778, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x30E = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.161, i32 15200, i32 9500, i32 1023, i32 31, i32 38, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x314 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.162, i32 31496, i32 19685, i32 2047, i32 63, i32 20, i32 200, i32 200, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x315 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.163, i32 44704, i32 27940, i32 2047, i32 63, i32 21, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x317 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.164, i32 65024, i32 40640, i32 2047, i32 63, i32 22, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x318 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.165, i32 4095, i32 4095, i32 0, i32 0, i32 44, i32 35, i32 48, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x319 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.166, i32 4095, i32 4095, i32 0, i32 0, i32 44, i32 35, i32 48, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x323 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.167, i32 21600, i32 13500, i32 1023, i32 31, i32 38, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x325 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.168, i32 59552, i32 33848, i32 2047, i32 63, i32 32, i32 200, i32 200, i32 11, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 806, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x326 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.169, i32 0, i32 0, i32 0, i32 0, i32 53, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 805, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x32A = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.170, i32 120140, i32 67920, i32 2047, i32 63, i32 30, i32 200, i32 200, i32 0, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x32B = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.171, i32 120140, i32 67920, i32 2047, i32 63, i32 30, i32 200, i32 200, i32 0, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 812, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x32C = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.171, i32 0, i32 0, i32 0, i32 0, i32 43, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1386, i32 811, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x32F = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.172, i32 22672, i32 12928, i32 511, i32 0, i32 8, i32 100, i32 100, i32 0, i32 200, i32 200, i32 200, i32 200, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x331 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.173, i32 0, i32 0, i32 0, i32 0, i32 46, i32 0, i32 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x333 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.174, i32 59552, i32 33848, i32 2047, i32 63, i32 35, i32 200, i32 200, i32 9, i32 400, i32 400, i32 400, i32 400, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1386, i32 821, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x335 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.174, i32 0, i32 0, i32 0, i32 0, i32 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1386, i32 819, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x336 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.175, i32 23672, i32 13403, i32 1023, i32 0, i32 7, i32 100, i32 100, i32 4, i32 200, i32 200, i32 200, i32 200, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x33B = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.176, i32 15200, i32 9500, i32 2047, i32 63, i32 39, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x33C = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.177, i32 15200, i32 9500, i32 2047, i32 63, i32 39, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x33D = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.178, i32 21600, i32 13500, i32 2047, i32 63, i32 39, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x33E = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.179, i32 21600, i32 13500, i32 2047, i32 63, i32 39, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16, i32 0, i32 0, i32 0, i8 1, i32 2 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x343 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.180, i32 34816, i32 19759, i32 1023, i32 0, i32 7, i32 100, i32 100, i32 4, i32 200, i32 200, i32 200, i32 200, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x360 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.163, i32 44800, i32 29600, i32 8191, i32 63, i32 23, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x361 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.164, i32 62200, i32 43200, i32 8191, i32 63, i32 23, i32 200, i32 200, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x377 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.181, i32 15200, i32 9500, i32 4095, i32 63, i32 25, i32 100, i32 100, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x379 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.182, i32 21600, i32 13500, i32 4095, i32 63, i32 25, i32 100, i32 100, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x37A = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.183, i32 15200, i32 9500, i32 2047, i32 63, i32 37, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x37B = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.184, i32 21600, i32 13500, i32 2047, i32 63, i32 37, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x393 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.162, i32 31920, i32 19950, i32 8191, i32 63, i32 24, i32 200, i32 200, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x3c6 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.181, i32 15200, i32 9500, i32 4095, i32 63, i32 25, i32 100, i32 100, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x3c8 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.182, i32 21600, i32 13500, i32 4095, i32 63, i32 25, i32 100, i32 100, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x4001 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.185, i32 26202, i32 16325, i32 255, i32 0, i32 51, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x4004 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.186, i32 11060, i32 6220, i32 255, i32 0, i32 52, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x5000 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.187, i32 27848, i32 15752, i32 1023, i32 0, i32 52, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x5002 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.188, i32 29576, i32 16724, i32 1023, i32 0, i32 52, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_0x6004 = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.189, i32 12800, i32 8000, i32 255, i32 0, i32 47, i32 100, i32 100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_features_HID_ANY_ID = internal constant { %struct.wacom_features, [40 x i8] } { %struct.wacom_features { ptr @.str.190, i32 0, i32 0, i32 0, i32 0, i32 53, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i32 0, i8 0, i32 0 }, [40 x i8] zeroinitializer }, align 32
@wacom_ids = dso_local constant { [163 x %struct.hid_device_id], [656 x i8] } { [163 x %struct.hid_device_id] [%struct.hid_device_id { i16 3, i16 257, i32 1386, i32 0, i32 ptrtoint (ptr @wacom_features_0x00 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 3, i32 ptrtoint (ptr @wacom_features_0x03 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 16, i32 ptrtoint (ptr @wacom_features_0x10 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 17, i32 ptrtoint (ptr @wacom_features_0x11 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 18, i32 ptrtoint (ptr @wacom_features_0x12 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 19, i32 ptrtoint (ptr @wacom_features_0x13 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 20, i32 ptrtoint (ptr @wacom_features_0x14 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 21, i32 ptrtoint (ptr @wacom_features_0x15 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 22, i32 ptrtoint (ptr @wacom_features_0x16 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 23, i32 ptrtoint (ptr @wacom_features_0x17 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 24, i32 ptrtoint (ptr @wacom_features_0x18 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 25, i32 ptrtoint (ptr @wacom_features_0x19 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 32, i32 ptrtoint (ptr @wacom_features_0x20 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 33, i32 ptrtoint (ptr @wacom_features_0x21 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 34, i32 ptrtoint (ptr @wacom_features_0x22 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 35, i32 ptrtoint (ptr @wacom_features_0x23 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 36, i32 ptrtoint (ptr @wacom_features_0x24 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 38, i32 ptrtoint (ptr @wacom_features_0x26 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 39, i32 ptrtoint (ptr @wacom_features_0x27 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 40, i32 ptrtoint (ptr @wacom_features_0x28 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 41, i32 ptrtoint (ptr @wacom_features_0x29 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 42, i32 ptrtoint (ptr @wacom_features_0x2A to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 48, i32 ptrtoint (ptr @wacom_features_0x30 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 49, i32 ptrtoint (ptr @wacom_features_0x31 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 50, i32 ptrtoint (ptr @wacom_features_0x32 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 51, i32 ptrtoint (ptr @wacom_features_0x33 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 52, i32 ptrtoint (ptr @wacom_features_0x34 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 53, i32 ptrtoint (ptr @wacom_features_0x35 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 55, i32 ptrtoint (ptr @wacom_features_0x37 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 56, i32 ptrtoint (ptr @wacom_features_0x38 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 57, i32 ptrtoint (ptr @wacom_features_0x39 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 63, i32 ptrtoint (ptr @wacom_features_0x3F to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 65, i32 ptrtoint (ptr @wacom_features_0x41 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 66, i32 ptrtoint (ptr @wacom_features_0x42 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 67, i32 ptrtoint (ptr @wacom_features_0x43 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 68, i32 ptrtoint (ptr @wacom_features_0x44 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 69, i32 ptrtoint (ptr @wacom_features_0x45 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 71, i32 ptrtoint (ptr @wacom_features_0x47 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 87, i32 ptrtoint (ptr @wacom_features_0x57 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 89, i32 ptrtoint (ptr @wacom_features_0x59 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 91, i32 ptrtoint (ptr @wacom_features_0x5B to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 93, i32 ptrtoint (ptr @wacom_features_0x5D to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 94, i32 ptrtoint (ptr @wacom_features_0x5E to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 96, i32 ptrtoint (ptr @wacom_features_0x60 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 97, i32 ptrtoint (ptr @wacom_features_0x61 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 98, i32 ptrtoint (ptr @wacom_features_0x62 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 99, i32 ptrtoint (ptr @wacom_features_0x63 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 100, i32 ptrtoint (ptr @wacom_features_0x64 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 101, i32 ptrtoint (ptr @wacom_features_0x65 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 105, i32 ptrtoint (ptr @wacom_features_0x69 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 106, i32 ptrtoint (ptr @wacom_features_0x6A to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 107, i32 ptrtoint (ptr @wacom_features_0x6B to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 129, i32 ptrtoint (ptr @wacom_features_0x81 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 132, i32 ptrtoint (ptr @wacom_features_0x84 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 144, i32 ptrtoint (ptr @wacom_features_0x90 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 147, i32 ptrtoint (ptr @wacom_features_0x93 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 151, i32 ptrtoint (ptr @wacom_features_0x97 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 154, i32 ptrtoint (ptr @wacom_features_0x9A to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 159, i32 ptrtoint (ptr @wacom_features_0x9F to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 176, i32 ptrtoint (ptr @wacom_features_0xB0 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 177, i32 ptrtoint (ptr @wacom_features_0xB1 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 178, i32 ptrtoint (ptr @wacom_features_0xB2 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 179, i32 ptrtoint (ptr @wacom_features_0xB3 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 180, i32 ptrtoint (ptr @wacom_features_0xB4 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 181, i32 ptrtoint (ptr @wacom_features_0xB5 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 183, i32 ptrtoint (ptr @wacom_features_0xB7 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 184, i32 ptrtoint (ptr @wacom_features_0xB8 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 185, i32 ptrtoint (ptr @wacom_features_0xB9 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 186, i32 ptrtoint (ptr @wacom_features_0xBA to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 187, i32 ptrtoint (ptr @wacom_features_0xBB to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 188, i32 ptrtoint (ptr @wacom_features_0xBC to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 189, i32 ptrtoint (ptr @wacom_features_0xBD to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 192, i32 ptrtoint (ptr @wacom_features_0xC0 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 194, i32 ptrtoint (ptr @wacom_features_0xC2 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 196, i32 ptrtoint (ptr @wacom_features_0xC4 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 197, i32 ptrtoint (ptr @wacom_features_0xC5 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 198, i32 ptrtoint (ptr @wacom_features_0xC6 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 199, i32 ptrtoint (ptr @wacom_features_0xC7 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 204, i32 ptrtoint (ptr @wacom_features_0xCC to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 206, i32 ptrtoint (ptr @wacom_features_0xCE to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 208, i32 ptrtoint (ptr @wacom_features_0xD0 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 209, i32 ptrtoint (ptr @wacom_features_0xD1 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 210, i32 ptrtoint (ptr @wacom_features_0xD2 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 211, i32 ptrtoint (ptr @wacom_features_0xD3 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 212, i32 ptrtoint (ptr @wacom_features_0xD4 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 213, i32 ptrtoint (ptr @wacom_features_0xD5 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 214, i32 ptrtoint (ptr @wacom_features_0xD6 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 215, i32 ptrtoint (ptr @wacom_features_0xD7 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 216, i32 ptrtoint (ptr @wacom_features_0xD8 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 218, i32 ptrtoint (ptr @wacom_features_0xDA to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 219, i32 ptrtoint (ptr @wacom_features_0xDB to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 221, i32 ptrtoint (ptr @wacom_features_0xDD to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 222, i32 ptrtoint (ptr @wacom_features_0xDE to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 223, i32 ptrtoint (ptr @wacom_features_0xDF to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 226, i32 ptrtoint (ptr @wacom_features_0xE2 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 227, i32 ptrtoint (ptr @wacom_features_0xE3 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 229, i32 ptrtoint (ptr @wacom_features_0xE5 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 230, i32 ptrtoint (ptr @wacom_features_0xE6 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 236, i32 ptrtoint (ptr @wacom_features_0xEC to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 237, i32 ptrtoint (ptr @wacom_features_0xED to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 239, i32 ptrtoint (ptr @wacom_features_0xEF to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 240, i32 ptrtoint (ptr @wacom_features_0xF0 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 244, i32 ptrtoint (ptr @wacom_features_0xF4 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 246, i32 ptrtoint (ptr @wacom_features_0xF6 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 248, i32 ptrtoint (ptr @wacom_features_0xF8 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 250, i32 ptrtoint (ptr @wacom_features_0xFA to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 251, i32 ptrtoint (ptr @wacom_features_0xFB to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 256, i32 ptrtoint (ptr @wacom_features_0x100 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 257, i32 ptrtoint (ptr @wacom_features_0x101 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 269, i32 ptrtoint (ptr @wacom_features_0x10D to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 270, i32 ptrtoint (ptr @wacom_features_0x10E to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 271, i32 ptrtoint (ptr @wacom_features_0x10F to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 278, i32 ptrtoint (ptr @wacom_features_0x116 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 300, i32 ptrtoint (ptr @wacom_features_0x12C to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 768, i32 ptrtoint (ptr @wacom_features_0x300 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 769, i32 ptrtoint (ptr @wacom_features_0x301 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 770, i32 ptrtoint (ptr @wacom_features_0x302 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 771, i32 ptrtoint (ptr @wacom_features_0x303 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 772, i32 ptrtoint (ptr @wacom_features_0x304 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 775, i32 ptrtoint (ptr @wacom_features_0x307 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 777, i32 ptrtoint (ptr @wacom_features_0x309 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 778, i32 ptrtoint (ptr @wacom_features_0x30A to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 780, i32 ptrtoint (ptr @wacom_features_0x30C to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 782, i32 ptrtoint (ptr @wacom_features_0x30E to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 788, i32 ptrtoint (ptr @wacom_features_0x314 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 789, i32 ptrtoint (ptr @wacom_features_0x315 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 791, i32 ptrtoint (ptr @wacom_features_0x317 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 792, i32 ptrtoint (ptr @wacom_features_0x318 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 793, i32 ptrtoint (ptr @wacom_features_0x319 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 803, i32 ptrtoint (ptr @wacom_features_0x323 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 805, i32 ptrtoint (ptr @wacom_features_0x325 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 806, i32 ptrtoint (ptr @wacom_features_0x326 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 810, i32 ptrtoint (ptr @wacom_features_0x32A to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 811, i32 ptrtoint (ptr @wacom_features_0x32B to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 812, i32 ptrtoint (ptr @wacom_features_0x32C to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 815, i32 ptrtoint (ptr @wacom_features_0x32F to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 817, i32 ptrtoint (ptr @wacom_features_0x331 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 819, i32 ptrtoint (ptr @wacom_features_0x333 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 821, i32 ptrtoint (ptr @wacom_features_0x335 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 822, i32 ptrtoint (ptr @wacom_features_0x336 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 827, i32 ptrtoint (ptr @wacom_features_0x33B to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 828, i32 ptrtoint (ptr @wacom_features_0x33C to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 829, i32 ptrtoint (ptr @wacom_features_0x33D to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 830, i32 ptrtoint (ptr @wacom_features_0x33E to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 835, i32 ptrtoint (ptr @wacom_features_0x343 to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 864, i32 ptrtoint (ptr @wacom_features_0x360 to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 865, i32 ptrtoint (ptr @wacom_features_0x361 to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 887, i32 ptrtoint (ptr @wacom_features_0x377 to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 889, i32 ptrtoint (ptr @wacom_features_0x379 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 890, i32 ptrtoint (ptr @wacom_features_0x37A to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 891, i32 ptrtoint (ptr @wacom_features_0x37B to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 915, i32 ptrtoint (ptr @wacom_features_0x393 to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 966, i32 ptrtoint (ptr @wacom_features_0x3c6 to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 968, i32 ptrtoint (ptr @wacom_features_0x3c8 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 16385, i32 ptrtoint (ptr @wacom_features_0x4001 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 16388, i32 ptrtoint (ptr @wacom_features_0x4004 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 20480, i32 ptrtoint (ptr @wacom_features_0x5000 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 20482, i32 ptrtoint (ptr @wacom_features_0x5002 to i32) }, %struct.hid_device_id { i16 3, i16 0, i32 6127, i32 24580, i32 ptrtoint (ptr @wacom_features_0x6004 to i32) }, %struct.hid_device_id { i16 3, i16 257, i32 1386, i32 -1, i32 ptrtoint (ptr @wacom_features_HID_ANY_ID to i32) }, %struct.hid_device_id { i16 24, i16 257, i32 1386, i32 -1, i32 ptrtoint (ptr @wacom_features_HID_ANY_ID to i32) }, %struct.hid_device_id { i16 5, i16 257, i32 1386, i32 -1, i32 ptrtoint (ptr @wacom_features_HID_ANY_ID to i32) }, %struct.hid_device_id zeroinitializer], [656 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@wacom_update_led._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 4036, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"can't find current LED %d in group %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wacom_update_led\00", [47 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"drivers/hid/wacom_wac.c\00", [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@wacom_update_led._entry_ptr = internal global ptr @wacom_update_led._entry, section ".printk_index", align 4
@wacom_update_led._entry.5 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.1, ptr @.str.2, i32 4051, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"can't find next LED in group %d\0A\00", [63 x i8] zeroinitializer }, align 32
@wacom_update_led._entry_ptr.7 = internal global ptr @wacom_update_led._entry.5, section ".printk_index", align 4
@wacom_24hd_update_leds._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.9, ptr @.str.2, i32 3987, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"can't find LED %d in group %d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"wacom_24hd_update_leds\00", [41 x i8] zeroinitializer }, align 32
@wacom_24hd_update_leds._entry_ptr = internal global ptr @wacom_24hd_update_leds._entry, section ".printk_index", align 4
@wacom_wac_pen_event._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.11, ptr @.str.2, i32 2366, ptr @.str.12, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: overriding existing left offset %d -> %d\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"wacom_wac_pen_event\00", [44 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@wacom_wac_pen_event._entry_ptr = internal global ptr @wacom_wac_pen_event._entry, section ".printk_index", align 4
@wacom_wac_pen_event._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.11, ptr @.str.2, i32 2373, ptr @.str.12, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s: overriding existing right offset %d -> %d\0A\00", [49 x i8] zeroinitializer }, align 32
@wacom_wac_pen_event._entry_ptr.15 = internal global ptr @wacom_wac_pen_event._entry.13, section ".printk_index", align 4
@wacom_wac_pen_event._entry.16 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.11, ptr @.str.2, i32 2380, ptr @.str.12, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%s: overriding existing top offset %d -> %d\0A\00", [51 x i8] zeroinitializer }, align 32
@wacom_wac_pen_event._entry_ptr.18 = internal global ptr @wacom_wac_pen_event._entry.16, section ".printk_index", align 4
@wacom_wac_pen_event._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.11, ptr @.str.2, i32 2387, ptr @.str.12, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"%s: overriding existing bottom offset %d -> %d\0A\00", [48 x i8] zeroinitializer }, align 32
@wacom_wac_pen_event._entry_ptr.21 = internal global ptr @wacom_wac_pen_event._entry.19, section ".printk_index", align 4
@wacom_wac_finger_event._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.23, ptr @.str.2, i32 2653, ptr @.str.12, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"%s: ignoring attempt to overwrite non-zero touch_max %d -> %d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"wacom_wac_finger_event\00", [41 x i8] zeroinitializer }, align 32
@wacom_wac_finger_event._entry_ptr = internal global ptr @wacom_wac_finger_event._entry, section ".printk_index", align 4
@wacom_penpartner_irq.__UNIQUE_ID_ddebug239 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.25, ptr @.str.2, ptr @.str.26, i8 0, i8 31, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.24 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"wacom\00", [26 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"wacom_penpartner_irq\00", [43 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s: received unknown report #%d\0A\00", [63 x i8] zeroinitializer }, align 32
@wacom_pl_irq.__UNIQUE_ID_ddebug240 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.27, ptr @.str.2, ptr @.str.26, i8 0, i8 35, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.27 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wacom_pl_irq\00", [19 x i8] zeroinitializer }, align 32
@wacom_graphire_irq.__UNIQUE_ID_ddebug244 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.28, ptr @.str.2, ptr @.str.26, i8 0, i8 79, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.28 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"wacom_graphire_irq\00", [45 x i8] zeroinitializer }, align 32
@wacom_graphire_irq.__UNIQUE_ID_ddebug245 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.28, ptr @.str.2, ptr @.str.26, i8 0, i8 80, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@batcap_gr = internal constant { [8 x i16], [16 x i8] } { [8 x i16] [i16 1, i16 15, i16 25, i16 35, i16 50, i16 70, i16 100, i16 100], [16 x i8] zeroinitializer }, align 32
@wacom_ptu_irq.__UNIQUE_ID_ddebug241 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.29, ptr @.str.2, ptr @.str.26, i8 0, i8 50, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.29 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wacom_ptu_irq\00", [18 x i8] zeroinitializer }, align 32
@wacom_dtu_irq.__UNIQUE_ID_ddebug242 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.30, ptr @.str.2, ptr @.str.31, i8 0, i8 57, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.30 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wacom_dtu_irq\00", [18 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: received report #%d\00", [40 x i8] zeroinitializer }, align 32
@wacom_dtus_irq.__UNIQUE_ID_ddebug243 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.32, ptr @.str.2, ptr @.str.33, i8 0, i8 65, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.32 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"wacom_dtus_irq\00", [17 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: received unknown report #%d\00", [32 x i8] zeroinitializer }, align 32
@wacom_intuos_irq.__UNIQUE_ID_ddebug250 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.34, ptr @.str.2, ptr @.str.26, i8 1, i8 2, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.34 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wacom_intuos_irq\00", [47 x i8] zeroinitializer }, align 32
@batcap_i4 = internal constant { [8 x i16], [16 x i8] } { [8 x i16] [i16 1, i16 15, i16 30, i16 45, i16 60, i16 70, i16 85, i16 100], [16 x i8] zeroinitializer }, align 32
@wacom_intuos_bt_irq.__UNIQUE_ID_ddebug252 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.35, ptr @.str.2, ptr @.str.36, i8 1, i8 51, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.35 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"wacom_intuos_bt_irq\00", [44 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Unknown report: %d,%d size:%zu\0A\00", [32 x i8] zeroinitializer }, align 32
@wacom_intuos_pro2_bt_irq.__UNIQUE_ID_ddebug259 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.37, ptr @.str.2, ptr @.str.26, i8 1, i8 120, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.37 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"wacom_intuos_pro2_bt_irq\00", [39 x i8] zeroinitializer }, align 32
@wacom_tpc_irq.__UNIQUE_ID_ddebug270 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.38, ptr @.str.2, ptr @.str.39, i8 1, i8 -76, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.38 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wacom_tpc_irq\00", [18 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: received report #%d\0A\00", [39 x i8] zeroinitializer }, align 32
@wacom_tpc_irq.__UNIQUE_ID_ddebug271 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.38, ptr @.str.2, ptr @.str.39, i8 1, i8 -74, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@wacom_remote_status_irq._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.40, ptr @.str.41, ptr @.str.2, i32 1171, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Can't queue Remote status event.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"wacom_remote_status_irq\00", [40 x i8] zeroinitializer }, align 32
@wacom_remote_status_irq._entry_ptr = internal global ptr @wacom_remote_status_irq._entry, section ".printk_index", align 4
@wacom_remote_irq.__UNIQUE_ID_ddebug251 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.24, ptr @.str.42, ptr @.str.2, ptr @.str.33, i8 1, i8 10, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.42 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wacom_remote_irq\00", [47 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Penpartner\00", [47 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom Cintiq Partner\00", [43 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom Graphire\00", [17 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Graphire2 4x5\00", [44 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Graphire2 5x7\00", [44 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom Graphire3\00", [16 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Graphire3 6x8\00", [44 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Graphire4 4x5\00", [44 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Graphire4 6x8\00", [44 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom BambooFun 4x5\00", [44 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom BambooFun 6x8\00", [44 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom Bamboo1 Medium\00", [43 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Intuos 4x5\00", [47 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Intuos 6x8\00", [47 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos 9x12\00", [46 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos 12x12\00", [45 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos 12x18\00", [45 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Wacom Intuos5 touch S\00", [42 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Wacom Intuos5 touch M\00", [42 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Wacom Intuos5 touch L\00", [42 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom Intuos5 S\00", [16 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom Intuos5 M\00", [16 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Wacom PL400\00", [20 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Wacom PL500\00", [20 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Wacom PL600\00", [20 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom PL600SX\00", [18 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Wacom PL550\00", [20 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Wacom PL800\00", [20 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Wacom PL700\00", [20 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Wacom PL510\00", [20 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Wacom DTU710\00", [19 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Cintiq 21UX\00", [46 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos2 4x5\00", [46 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos2 6x8\00", [46 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos2 9x12\00", [45 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Intuos2 12x12\00", [44 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Intuos2 12x18\00", [44 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTK2241\00", [18 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTH2242\00", [18 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Cintiq 22HDT\00", [45 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Wacom Volito\00", [19 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom PenStation2\00", [46 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Volito2 4x5\00", [46 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Volito2 2x3\00", [46 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom PenPartner2\00", [46 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Wacom Bamboo\00", [19 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom Bamboo1\00", [18 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Bamboo1 4x6\00", [46 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Bamboo1 5x8\00", [46 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Graphire BT\00", [46 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Wacom Wireless Receiver\00", [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 90\00", [17 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 93\00", [17 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 97\00", [17 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 9A\00", [17 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 9F\00", [17 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos3 4x5\00", [46 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos3 6x8\00", [46 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos3 9x12\00", [45 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Intuos3 12x12\00", [44 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Intuos3 12x19\00", [44 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos3 6x11\00", [45 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos3 4x6\00", [46 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos4 4x6\00", [46 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos4 6x9\00", [46 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos4 8x13\00", [45 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Intuos4 12x19\00", [44 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Intuos4 WL\00", [47 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Wacom DTF720\00", [19 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTF720a\00", [18 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Wacom DTF521\00", [19 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Cintiq 20WSX\00", [45 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Cintiq 12WX\00", [46 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTU1931\00", [18 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Cintiq 21UX2\00", [45 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTU2231\00", [18 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Bamboo 2FG\00", [47 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom Bamboo 2FG 4x5\00", [43 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Bamboo Craft\00", [45 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom Bamboo 2FG 6x8\00", [43 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Bamboo Pen\00", [47 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom Bamboo Pen 6x8\00", [43 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Wacom BambooPT 2FG 4x5\00", [41 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Wacom BambooPT 2FG Small\00", [39 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Wacom Bamboo Comic 2FG\00", [41 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Wacom Bamboo 2FG 4x5 SE\00", [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Wacom Bamboo 2FG 6x8 SE\00", [40 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom Bamboo Connect\00", [43 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Wacom Bamboo 16FG 4x5\00", [42 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Wacom Bamboo 16FG 6x8\00", [42 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 E2\00", [17 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 E3\00", [17 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 E5\00", [17 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 E6\00", [17 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 EC\00", [17 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 ED\00", [17 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom ISDv4 EF\00", [17 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTU1631\00", [18 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Cintiq 24HD\00", [46 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Wacom Cintiq 24HD touch\00", [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Cintiq 22HD\00", [46 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTU1031\00", [18 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv4 100\00", [16 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv4 101\00", [16 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv4 10D\00", [16 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv4 10E\00", [16 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv4 10F\00", [16 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv4 116\00", [16 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv4 12C\00", [16 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Bamboo One S\00", [45 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Bamboo One M\00", [45 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos PT S\00", [46 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos PT M\00", [46 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Cintiq 13HD\00", [46 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv5 307\00", [16 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv5 309\00", [16 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv5 30A\00", [16 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv5 30C\00", [16 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom Intuos S\00", [17 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos Pro S\00", [45 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos Pro M\00", [45 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos Pro L\00", [45 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom USB Bamboo PAD\00", [43 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Wacom Wireless Bamboo PAD\00", [38 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Intuos P M\00", [47 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv5 325\00", [16 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Wacom ISDv5 326\00", [16 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Cintiq 27QHD\00", [45 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Wacom Cintiq 27QHD touch\00", [39 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Wacom DTU1031X\00", [17 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Wacom Express Key Remote\00", [39 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Wacom Cintiq 13HD touch\00", [40 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTU1141\00", [18 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom Intuos S 2\00", [47 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Intuos PT S 2\00", [44 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Wacom Intuos P M 2\00", [45 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Wacom Intuos PT M 2\00", [44 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Wacom DTK1651\00", [18 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos BT S\00", [46 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Wacom Intuos BT M\00", [46 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom One by Wacom S\00", [43 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Wacom One by Wacom M\00", [43 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom ISDv4 4001\00", [47 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom ISDv4 4004\00", [47 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom ISDv4 5000\00", [47 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Wacom ISDv4 5002\00", [47 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ISD-V4\00", [25 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Wacom HID\00", [22 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 4278190080, i64 4279042048]
@__sancov_gen_cov_switch_values.191 = internal global [6 x i64] [i64 4, i64 32, i64 262144, i64 589824, i64 851968, i64 1048576]
@__sancov_gen_cov_switch_values.192 = internal global [11 x i64] [i64 9, i64 32, i64 4279042102, i64 4279042140, i64 4279042167, i64 4279042354, i64 4279042358, i64 4279042359, i64 4279042360, i64 4279042361, i64 4279042512]
@__sancov_gen_cov_switch_values.193 = internal global [6 x i64] [i64 4, i64 32, i64 851970, i64 851972, i64 4278190084, i64 4279042050]
@__sancov_gen_cov_switch_values.194 = internal global [5 x i64] [i64 3, i64 32, i64 852027, i64 4279043076, i64 4279043131]
@__sancov_gen_cov_switch_values.195 = internal global [5 x i64] [i64 3, i64 32, i64 852027, i64 4279043076, i64 4279043131]
@__sancov_gen_cov_switch_values.196 = internal global [5 x i64] [i64 3, i64 32, i64 852025, i64 4279042105, i64 4279046163]
@__sancov_gen_cov_switch_values.197 = internal global [21 x i64] [i64 19, i64 32, i64 4279042358, i64 4279042359, i64 4279042360, i64 4279042361, i64 4279043073, i64 4279043074, i64 4279043075, i64 4279043156, i64 4279044480, i64 4279044481, i64 4279044482, i64 4279044483, i64 4279044486, i64 4279044496, i64 4279044497, i64 4279044498, i64 4279044499, i64 4279044500, i64 4279044501]
@__sancov_gen_cov_switch_values.198 = internal global [4 x i64] [i64 2, i64 32, i64 65584, i64 65585]
@__sancov_gen_cov_switch_values.199 = internal global [4 x i64] [i64 2, i64 32, i64 65584, i64 65585]
@__sancov_gen_cov_switch_values.200 = internal global [4 x i64] [i64 2, i64 32, i64 65584, i64 65585]
@__sancov_gen_cov_switch_values.201 = internal global [8 x i64] [i64 6, i64 32, i64 851969, i64 851970, i64 4278779906, i64 4279042049, i64 4279042050, i64 4279304194]
@__sancov_gen_cov_switch_values.202 = internal global [20 x i64] [i64 18, i64 32, i64 65584, i64 65585, i64 65586, i64 852016, i64 852018, i64 852028, i64 852029, i64 852030, i64 852033, i64 852034, i64 852036, i64 852037, i64 852058, i64 852059, i64 4279042102, i64 4279042140, i64 4279042354, i64 4279045379]
@__sancov_gen_cov_switch_values.203 = internal global [4 x i64] [i64 2, i64 32, i64 65584, i64 65585]
@__sancov_gen_cov_switch_values.204 = internal global [4 x i64] [i64 2, i64 32, i64 65584, i64 65585]
@__sancov_gen_cov_switch_values.205 = internal global [4 x i64] [i64 2, i64 32, i64 65584, i64 65585]
@__sancov_gen_cov_switch_values.206 = internal global [9 x i64] [i64 7, i64 32, i64 65584, i64 65585, i64 852034, i64 852040, i64 852041, i64 852049, i64 852052]
@__sancov_gen_cov_switch_values.207 = internal global [4 x i64] [i64 2, i64 32, i64 65584, i64 65585]
@__sancov_gen_cov_switch_values.208 = internal global [5 x i64] [i64 3, i64 32, i64 852027, i64 4279043076, i64 4279043131]
@__sancov_gen_cov_switch_values.209 = internal global [5 x i64] [i64 3, i64 32, i64 852027, i64 4279043076, i64 4279043131]
@__sancov_gen_cov_switch_values.210 = internal global [5 x i64] [i64 3, i64 32, i64 852025, i64 4279042105, i64 4279046163]
@__sancov_gen_cov_switch_values.211 = internal global [4 x i64] [i64 2, i64 32, i64 851970, i64 852000]
@__sancov_gen_cov_switch_values.212 = internal global [8 x i64] [i64 6, i64 32, i64 851969, i64 851970, i64 4278779906, i64 4279042049, i64 4279042050, i64 4279304194]
@__sancov_gen_cov_switch_values.213 = internal global [7 x i64] [i64 5, i64 32, i64 851972, i64 851973, i64 4278190085, i64 4278779921, i64 4279304209]
@__sancov_gen_cov_switch_values.214 = internal global [8 x i64] [i64 6, i64 32, i64 4279042360, i64 4279042361, i64 4279043156, i64 4279044480, i64 4279044481, i64 4279044501]
@__sancov_gen_cov_switch_values.215 = internal global [10 x i64] [i64 8, i64 32, i64 845, i64 846, i64 855, i64 856, i64 914, i64 920, i64 921, i64 938]
@__sancov_gen_cov_switch_values.216 = internal global [10 x i64] [i64 8, i64 32, i64 845, i64 846, i64 855, i64 856, i64 914, i64 920, i64 921, i64 938]
@__sancov_gen_cov_switch_values.217 = internal global [19 x i64] [i64 17, i64 32, i64 65586, i64 852018, i64 852028, i64 852033, i64 852034, i64 852036, i64 852037, i64 852058, i64 852059, i64 4279042102, i64 4279042140, i64 4279042167, i64 4279042512, i64 4279045424, i64 4279045425, i64 4279045426, i64 4279045427]
@__sancov_gen_cov_switch_values.218 = internal global [5 x i64] [i64 3, i64 8, i64 8, i64 16, i64 32]
@__sancov_gen_cov_switch_values.219 = internal global [11 x i64] [i64 9, i64 32, i64 65584, i64 65585, i64 852034, i64 852039, i64 852040, i64 852041, i64 852049, i64 852053, i64 4278190544]
@__sancov_gen_cov_switch_values.220 = internal global [5 x i64] [i64 3, i64 32, i64 852025, i64 4279042105, i64 4279046163]
@__sancov_gen_cov_switch_values.221 = internal global [4 x i64] [i64 2, i64 32, i64 851970, i64 852000]
@__sancov_gen_cov_switch_values.222 = internal global [8 x i64] [i64 6, i64 32, i64 851969, i64 851970, i64 4278779906, i64 4279042049, i64 4279042050, i64 4279304194]
@__sancov_gen_cov_switch_values.223 = internal global [7 x i64] [i64 5, i64 32, i64 851972, i64 851973, i64 4278190085, i64 4278779921, i64 4279304209]
@__sancov_gen_cov_switch_values.224 = internal global [11 x i64] [i64 9, i64 32, i64 65584, i64 65585, i64 852018, i64 852028, i64 852034, i64 852040, i64 852041, i64 852049, i64 852052]
@__sancov_gen_cov_switch_values.225 = internal global [5 x i64] [i64 3, i64 32, i64 852025, i64 4279042105, i64 4279046163]
@__sancov_gen_cov_switch_values.226 = internal global [8 x i64] [i64 6, i64 32, i64 851969, i64 851970, i64 4278779906, i64 4279042049, i64 4279042050, i64 4279304194]
@__sancov_gen_cov_switch_values.227 = internal global [7 x i64] [i64 5, i64 32, i64 851972, i64 851973, i64 4278190085, i64 4278779921, i64 4279304209]
@__sancov_gen_cov_switch_values.228 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.229 = internal global [55 x i64] [i64 53, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35, i64 36, i64 37, i64 38, i64 39, i64 40, i64 41, i64 42, i64 43, i64 44, i64 45, i64 46, i64 47, i64 48, i64 49, i64 50, i64 51, i64 52]
@__sancov_gen_cov_switch_values.230 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.231 = internal global [6 x i64] [i64 4, i64 32, i64 9, i64 10, i64 20, i64 64]
@__sancov_gen_cov_switch_values.232 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.233 = internal global [4 x i64] [i64 2, i64 8, i64 1, i64 2]
@__sancov_gen_cov_switch_values.234 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.235 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 36]
@__sancov_gen_cov_switch_values.236 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 36]
@__sancov_gen_cov_switch_values.237 = internal global [4 x i64] [i64 2, i64 8, i64 17, i64 21]
@__sancov_gen_cov_switch_values.238 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.239 = internal global [9 x i64] [i64 7, i64 8, i64 2, i64 3, i64 5, i64 6, i64 12, i64 16, i64 17]
@__sancov_gen_cov_switch_values.240 = internal global [5 x i64] [i64 3, i64 8, i64 3, i64 12, i64 17]
@__sancov_gen_cov_switch_values.241 = internal global [8 x i64] [i64 6, i64 32, i64 28, i64 29, i64 30, i64 31, i64 32, i64 35]
@__sancov_gen_cov_switch_values.242 = internal global [4 x i64] [i64 2, i64 8, i64 32, i64 128]
@__sancov_gen_cov_switch_values.243 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 16]
@__sancov_gen_cov_switch_values.244 = internal global [11 x i64] [i64 9, i64 32, i64 10, i64 11, i64 13, i64 14, i64 17, i64 18, i64 20, i64 21, i64 33]
@__sancov_gen_cov_switch_values.245 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 8, i64 10]
@__sancov_gen_cov_switch_values.246 = internal global [4 x i64] [i64 2, i64 32, i64 326, i64 327]
@__sancov_gen_cov_switch_values.247 = internal global [4 x i64] [i64 2, i64 8, i64 3, i64 4]
@__sancov_gen_cov_switch_values.248 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.249 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.250 = internal global [4 x i64] [i64 2, i64 32, i64 5, i64 14]
@__sancov_gen_cov_switch_values.251 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.252 = internal global [8 x i64] [i64 6, i64 8, i64 3, i64 6, i64 13, i64 15, i64 16, i64 18]
@__sancov_gen_cov_switch_values.253 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.254 = internal global [4 x i64] [i64 2, i64 32, i64 32, i64 64]
@__sancov_gen_cov_switch_values.255 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 7]
@__sancov_gen_cov_switch_values.256 = internal global [15 x i64] [i64 13, i64 32, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 37, i64 38, i64 39, i64 40, i64 41, i64 44, i64 46]
@__sancov_gen_cov_switch_values.257 = internal global [4 x i64] [i64 2, i64 32, i64 20, i64 64]
@__sancov_gen_cov_switch_values.258 = internal global [24 x i64] [i64 22, i64 32, i64 5, i64 6, i64 7, i64 8, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35, i64 42, i64 43, i64 47, i64 48, i64 49, i64 50, i64 51, i64 52]
@__sancov_gen_cov_switch_values.259 = internal global [25 x i64] [i64 23, i64 32, i64 5, i64 6, i64 7, i64 8, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35, i64 42, i64 43, i64 47, i64 48, i64 49, i64 50, i64 51, i64 52]
@__sancov_gen_cov_switch_values.260 = internal global [4 x i64] [i64 2, i64 32, i64 893, i64 898]
@__sancov_gen_cov_switch_values.261 = internal global [52 x i64] [i64 50, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35, i64 36, i64 37, i64 38, i64 39, i64 41, i64 42, i64 43, i64 44, i64 47, i64 48, i64 49, i64 50, i64 51, i64 52]
@__sancov_gen_cov_switch_values.262 = internal global [4 x i64] [i64 2, i64 32, i64 25, i64 39]
@__sancov_gen_cov_switch_values.263 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.264 = internal global [21 x i64] [i64 19, i64 32, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 23, i64 24, i64 38, i64 39, i64 40, i64 41, i64 42, i64 43, i64 44, i64 49, i64 50, i64 51, i64 52]
@__sancov_gen_cov_switch_values.265 = internal global [5 x i64] [i64 3, i64 32, i64 864, i64 865, i64 915]
@__sancov_gen_cov_switch_values.266 = internal global [4 x i64] [i64 2, i64 32, i64 246, i64 812]
@__sancov_gen_cov_switch_values.267 = internal global [38 x i64] [i64 36, i64 32, i64 2, i64 3, i64 7, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35, i64 36, i64 38, i64 39, i64 40, i64 41, i64 46, i64 53]
@__sancov_gen_cov_switch_values.268 = internal global [5 x i64] [i64 3, i64 8, i64 8, i64 16, i64 32]
@__sancov_gen_cov_switch_values.269 = internal global [57 x i64] [i64 55, i64 32, i64 6, i64 7, i64 18, i64 23, i64 34, i64 50, i64 148, i64 150, i64 151, i64 156, i64 250, i64 274, i64 2049, i64 2050, i64 2052, i64 2054, i64 2058, i64 2060, i64 2066, i64 2067, i64 2075, i64 2082, i64 2083, i64 2090, i64 2091, i64 2098, i64 2114, i64 2122, i64 2130, i64 2138, i64 2181, i64 2274, i64 2306, i64 2314, i64 2322, i64 2323, i64 2330, i64 2331, i64 3346, i64 3354, i64 67586, i64 67588, i64 67594, i64 67596, i64 67650, i64 67658, i64 67842, i64 67850, i64 75778, i64 83970, i64 83978, i64 92162, i64 92170, i64 100354, i64 100362]
@__sancov_gen_cov_switch_values.270 = internal global [4 x i64] [i64 2, i64 32, i64 5, i64 10]
@___asan_gen_.271 = private unnamed_addr constant [18 x i8] c"touch_arbitration\00", align 1
@___asan_gen_.273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 33, i32 13 }
@___asan_gen_.274 = private unnamed_addr constant [20 x i8] c"wacom_features_0x00\00", align 1
@___asan_gen_.276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4252, i32 36 }
@___asan_gen_.277 = private unnamed_addr constant [20 x i8] c"wacom_features_0x03\00", align 1
@___asan_gen_.279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4366, i32 36 }
@___asan_gen_.280 = private unnamed_addr constant [20 x i8] c"wacom_features_0x10\00", align 1
@___asan_gen_.282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4255, i32 36 }
@___asan_gen_.283 = private unnamed_addr constant [20 x i8] c"wacom_features_0x11\00", align 1
@___asan_gen_.285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4261, i32 36 }
@___asan_gen_.286 = private unnamed_addr constant [20 x i8] c"wacom_features_0x12\00", align 1
@___asan_gen_.288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4264, i32 36 }
@___asan_gen_.289 = private unnamed_addr constant [20 x i8] c"wacom_features_0x13\00", align 1
@___asan_gen_.291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4267, i32 36 }
@___asan_gen_.292 = private unnamed_addr constant [20 x i8] c"wacom_features_0x14\00", align 1
@___asan_gen_.294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4270, i32 36 }
@___asan_gen_.295 = private unnamed_addr constant [20 x i8] c"wacom_features_0x15\00", align 1
@___asan_gen_.297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4273, i32 36 }
@___asan_gen_.298 = private unnamed_addr constant [20 x i8] c"wacom_features_0x16\00", align 1
@___asan_gen_.300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4276, i32 36 }
@___asan_gen_.301 = private unnamed_addr constant [20 x i8] c"wacom_features_0x17\00", align 1
@___asan_gen_.303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4279, i32 36 }
@___asan_gen_.304 = private unnamed_addr constant [20 x i8] c"wacom_features_0x18\00", align 1
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4282, i32 36 }
@___asan_gen_.307 = private unnamed_addr constant [20 x i8] c"wacom_features_0x19\00", align 1
@___asan_gen_.309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4285, i32 36 }
@___asan_gen_.310 = private unnamed_addr constant [20 x i8] c"wacom_features_0x20\00", align 1
@___asan_gen_.312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4315, i32 36 }
@___asan_gen_.313 = private unnamed_addr constant [20 x i8] c"wacom_features_0x21\00", align 1
@___asan_gen_.315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4318, i32 36 }
@___asan_gen_.316 = private unnamed_addr constant [20 x i8] c"wacom_features_0x22\00", align 1
@___asan_gen_.318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4321, i32 36 }
@___asan_gen_.319 = private unnamed_addr constant [20 x i8] c"wacom_features_0x23\00", align 1
@___asan_gen_.321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4324, i32 36 }
@___asan_gen_.322 = private unnamed_addr constant [20 x i8] c"wacom_features_0x24\00", align 1
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4327, i32 36 }
@___asan_gen_.325 = private unnamed_addr constant [20 x i8] c"wacom_features_0x26\00", align 1
@___asan_gen_.327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4423, i32 36 }
@___asan_gen_.328 = private unnamed_addr constant [20 x i8] c"wacom_features_0x27\00", align 1
@___asan_gen_.330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4426, i32 36 }
@___asan_gen_.331 = private unnamed_addr constant [20 x i8] c"wacom_features_0x28\00", align 1
@___asan_gen_.333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4429, i32 36 }
@___asan_gen_.334 = private unnamed_addr constant [20 x i8] c"wacom_features_0x29\00", align 1
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4432, i32 36 }
@___asan_gen_.337 = private unnamed_addr constant [20 x i8] c"wacom_features_0x2A\00", align 1
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4435, i32 36 }
@___asan_gen_.340 = private unnamed_addr constant [20 x i8] c"wacom_features_0x30\00", align 1
@___asan_gen_.342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4330, i32 36 }
@___asan_gen_.343 = private unnamed_addr constant [20 x i8] c"wacom_features_0x31\00", align 1
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4333, i32 36 }
@___asan_gen_.346 = private unnamed_addr constant [20 x i8] c"wacom_features_0x32\00", align 1
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4336, i32 36 }
@___asan_gen_.349 = private unnamed_addr constant [20 x i8] c"wacom_features_0x33\00", align 1
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4339, i32 36 }
@___asan_gen_.352 = private unnamed_addr constant [20 x i8] c"wacom_features_0x34\00", align 1
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4342, i32 36 }
@___asan_gen_.355 = private unnamed_addr constant [20 x i8] c"wacom_features_0x35\00", align 1
@___asan_gen_.357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4345, i32 36 }
@___asan_gen_.358 = private unnamed_addr constant [20 x i8] c"wacom_features_0x37\00", align 1
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4348, i32 36 }
@___asan_gen_.361 = private unnamed_addr constant [20 x i8] c"wacom_features_0x38\00", align 1
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4351, i32 36 }
@___asan_gen_.364 = private unnamed_addr constant [20 x i8] c"wacom_features_0x39\00", align 1
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4354, i32 36 }
@___asan_gen_.367 = private unnamed_addr constant [20 x i8] c"wacom_features_0x3F\00", align 1
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4479, i32 36 }
@___asan_gen_.370 = private unnamed_addr constant [20 x i8] c"wacom_features_0x41\00", align 1
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4369, i32 36 }
@___asan_gen_.373 = private unnamed_addr constant [20 x i8] c"wacom_features_0x42\00", align 1
@___asan_gen_.375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4372, i32 36 }
@___asan_gen_.376 = private unnamed_addr constant [20 x i8] c"wacom_features_0x43\00", align 1
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4375, i32 36 }
@___asan_gen_.379 = private unnamed_addr constant [20 x i8] c"wacom_features_0x44\00", align 1
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4378, i32 36 }
@___asan_gen_.382 = private unnamed_addr constant [20 x i8] c"wacom_features_0x45\00", align 1
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4381, i32 36 }
@___asan_gen_.385 = private unnamed_addr constant [20 x i8] c"wacom_features_0x47\00", align 1
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4632, i32 36 }
@___asan_gen_.388 = private unnamed_addr constant [20 x i8] c"wacom_features_0x57\00", align 1
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4528, i32 36 }
@___asan_gen_.391 = private unnamed_addr constant [20 x i8] c"wacom_features_0x59\00", align 1
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4533, i32 36 }
@___asan_gen_.394 = private unnamed_addr constant [20 x i8] c"wacom_features_0x5B\00", align 1
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4553, i32 36 }
@___asan_gen_.397 = private unnamed_addr constant [20 x i8] c"wacom_features_0x5D\00", align 1
@___asan_gen_.399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4539, i32 36 }
@___asan_gen_.400 = private unnamed_addr constant [20 x i8] c"wacom_features_0x5E\00", align 1
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4559, i32 36 }
@___asan_gen_.403 = private unnamed_addr constant [20 x i8] c"wacom_features_0x60\00", align 1
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4288, i32 36 }
@___asan_gen_.406 = private unnamed_addr constant [20 x i8] c"wacom_features_0x61\00", align 1
@___asan_gen_.408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4291, i32 36 }
@___asan_gen_.409 = private unnamed_addr constant [20 x i8] c"wacom_features_0x62\00", align 1
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4294, i32 36 }
@___asan_gen_.412 = private unnamed_addr constant [20 x i8] c"wacom_features_0x63\00", align 1
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4297, i32 36 }
@___asan_gen_.415 = private unnamed_addr constant [20 x i8] c"wacom_features_0x64\00", align 1
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4300, i32 36 }
@___asan_gen_.418 = private unnamed_addr constant [20 x i8] c"wacom_features_0x65\00", align 1
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4303, i32 36 }
@___asan_gen_.421 = private unnamed_addr constant [20 x i8] c"wacom_features_0x69\00", align 1
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4306, i32 36 }
@___asan_gen_.424 = private unnamed_addr constant [20 x i8] c"wacom_features_0x6A\00", align 1
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4309, i32 36 }
@___asan_gen_.427 = private unnamed_addr constant [20 x i8] c"wacom_features_0x6B\00", align 1
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4312, i32 36 }
@___asan_gen_.430 = private unnamed_addr constant [20 x i8] c"wacom_features_0x81\00", align 1
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4258, i32 36 }
@___asan_gen_.433 = private unnamed_addr constant [20 x i8] c"wacom_features_0x84\00", align 1
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4635, i32 36 }
@___asan_gen_.436 = private unnamed_addr constant [20 x i8] c"wacom_features_0x90\00", align 1
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4563, i32 36 }
@___asan_gen_.439 = private unnamed_addr constant [20 x i8] c"wacom_features_0x93\00", align 1
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4566, i32 36 }
@___asan_gen_.442 = private unnamed_addr constant [20 x i8] c"wacom_features_0x97\00", align 1
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4569, i32 36 }
@___asan_gen_.445 = private unnamed_addr constant [20 x i8] c"wacom_features_0x9A\00", align 1
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4572, i32 36 }
@___asan_gen_.448 = private unnamed_addr constant [20 x i8] c"wacom_features_0x9F\00", align 1
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4575, i32 36 }
@___asan_gen_.451 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB0\00", align 1
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4384, i32 36 }
@___asan_gen_.454 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB1\00", align 1
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4387, i32 36 }
@___asan_gen_.457 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB2\00", align 1
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4390, i32 36 }
@___asan_gen_.460 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB3\00", align 1
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4393, i32 36 }
@___asan_gen_.463 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB4\00", align 1
@___asan_gen_.465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4396, i32 36 }
@___asan_gen_.466 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB5\00", align 1
@___asan_gen_.468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4399, i32 36 }
@___asan_gen_.469 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB7\00", align 1
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4402, i32 36 }
@___asan_gen_.472 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB8\00", align 1
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4405, i32 36 }
@___asan_gen_.475 = private unnamed_addr constant [20 x i8] c"wacom_features_0xB9\00", align 1
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4408, i32 36 }
@___asan_gen_.478 = private unnamed_addr constant [20 x i8] c"wacom_features_0xBA\00", align 1
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4411, i32 36 }
@___asan_gen_.481 = private unnamed_addr constant [20 x i8] c"wacom_features_0xBB\00", align 1
@___asan_gen_.483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4414, i32 36 }
@___asan_gen_.484 = private unnamed_addr constant [20 x i8] c"wacom_features_0xBC\00", align 1
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4417, i32 36 }
@___asan_gen_.487 = private unnamed_addr constant [20 x i8] c"wacom_features_0xBD\00", align 1
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4420, i32 36 }
@___asan_gen_.490 = private unnamed_addr constant [20 x i8] c"wacom_features_0xC0\00", align 1
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4360, i32 36 }
@___asan_gen_.493 = private unnamed_addr constant [20 x i8] c"wacom_features_0xC2\00", align 1
@___asan_gen_.495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4363, i32 36 }
@___asan_gen_.496 = private unnamed_addr constant [20 x i8] c"wacom_features_0xC4\00", align 1
@___asan_gen_.498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4357, i32 36 }
@___asan_gen_.499 = private unnamed_addr constant [20 x i8] c"wacom_features_0xC5\00", align 1
@___asan_gen_.501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4482, i32 36 }
@___asan_gen_.502 = private unnamed_addr constant [20 x i8] c"wacom_features_0xC6\00", align 1
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4485, i32 36 }
@___asan_gen_.505 = private unnamed_addr constant [20 x i8] c"wacom_features_0xC7\00", align 1
@___asan_gen_.507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4503, i32 36 }
@___asan_gen_.508 = private unnamed_addr constant [20 x i8] c"wacom_features_0xCC\00", align 1
@___asan_gen_.510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4543, i32 36 }
@___asan_gen_.511 = private unnamed_addr constant [20 x i8] c"wacom_features_0xCE\00", align 1
@___asan_gen_.513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4506, i32 36 }
@___asan_gen_.514 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD0\00", align 1
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4637, i32 36 }
@___asan_gen_.517 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD1\00", align 1
@___asan_gen_.519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4640, i32 36 }
@___asan_gen_.520 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD2\00", align 1
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4643, i32 36 }
@___asan_gen_.523 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD3\00", align 1
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4646, i32 36 }
@___asan_gen_.526 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD4\00", align 1
@___asan_gen_.528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4649, i32 36 }
@___asan_gen_.529 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD5\00", align 1
@___asan_gen_.531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4652, i32 36 }
@___asan_gen_.532 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD6\00", align 1
@___asan_gen_.534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4655, i32 36 }
@___asan_gen_.535 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD7\00", align 1
@___asan_gen_.537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4658, i32 36 }
@___asan_gen_.538 = private unnamed_addr constant [20 x i8] c"wacom_features_0xD8\00", align 1
@___asan_gen_.540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4661, i32 36 }
@___asan_gen_.541 = private unnamed_addr constant [20 x i8] c"wacom_features_0xDA\00", align 1
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4664, i32 36 }
@___asan_gen_.544 = private unnamed_addr constant [20 x i8] c"wacom_features_0xDB\00", align 1
@___asan_gen_.546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4667, i32 36 }
@___asan_gen_.547 = private unnamed_addr constant [20 x i8] c"wacom_features_0xDD\00", align 1
@___asan_gen_.549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4670, i32 36 }
@___asan_gen_.550 = private unnamed_addr constant [20 x i8] c"wacom_features_0xDE\00", align 1
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4673, i32 36 }
@___asan_gen_.553 = private unnamed_addr constant [20 x i8] c"wacom_features_0xDF\00", align 1
@___asan_gen_.555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4676, i32 36 }
@___asan_gen_.556 = private unnamed_addr constant [20 x i8] c"wacom_features_0xE2\00", align 1
@___asan_gen_.558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4578, i32 36 }
@___asan_gen_.559 = private unnamed_addr constant [20 x i8] c"wacom_features_0xE3\00", align 1
@___asan_gen_.561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4581, i32 36 }
@___asan_gen_.562 = private unnamed_addr constant [20 x i8] c"wacom_features_0xE5\00", align 1
@___asan_gen_.564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4584, i32 36 }
@___asan_gen_.565 = private unnamed_addr constant [20 x i8] c"wacom_features_0xE6\00", align 1
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4587, i32 36 }
@___asan_gen_.568 = private unnamed_addr constant [20 x i8] c"wacom_features_0xEC\00", align 1
@___asan_gen_.570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4590, i32 36 }
@___asan_gen_.571 = private unnamed_addr constant [20 x i8] c"wacom_features_0xED\00", align 1
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4593, i32 36 }
@___asan_gen_.574 = private unnamed_addr constant [20 x i8] c"wacom_features_0xEF\00", align 1
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4596, i32 36 }
@___asan_gen_.577 = private unnamed_addr constant [20 x i8] c"wacom_features_0xF0\00", align 1
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4510, i32 36 }
@___asan_gen_.580 = private unnamed_addr constant [20 x i8] c"wacom_features_0xF4\00", align 1
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4450, i32 36 }
@___asan_gen_.583 = private unnamed_addr constant [20 x i8] c"wacom_features_0xF6\00", align 1
@___asan_gen_.585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4461, i32 36 }
@___asan_gen_.586 = private unnamed_addr constant [20 x i8] c"wacom_features_0xF8\00", align 1
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4455, i32 36 }
@___asan_gen_.589 = private unnamed_addr constant [20 x i8] c"wacom_features_0xFA\00", align 1
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4548, i32 36 }
@___asan_gen_.592 = private unnamed_addr constant [20 x i8] c"wacom_features_0xFB\00", align 1
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4513, i32 36 }
@___asan_gen_.595 = private unnamed_addr constant [21 x i8] c"wacom_features_0x100\00", align 1
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4599, i32 36 }
@___asan_gen_.598 = private unnamed_addr constant [21 x i8] c"wacom_features_0x101\00", align 1
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4602, i32 36 }
@___asan_gen_.601 = private unnamed_addr constant [21 x i8] c"wacom_features_0x10D\00", align 1
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4605, i32 36 }
@___asan_gen_.604 = private unnamed_addr constant [21 x i8] c"wacom_features_0x10E\00", align 1
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4608, i32 36 }
@___asan_gen_.607 = private unnamed_addr constant [21 x i8] c"wacom_features_0x10F\00", align 1
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4611, i32 36 }
@___asan_gen_.610 = private unnamed_addr constant [21 x i8] c"wacom_features_0x116\00", align 1
@___asan_gen_.612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4614, i32 36 }
@___asan_gen_.613 = private unnamed_addr constant [21 x i8] c"wacom_features_0x12C\00", align 1
@___asan_gen_.615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4617, i32 36 }
@___asan_gen_.616 = private unnamed_addr constant [21 x i8] c"wacom_features_0x300\00", align 1
@___asan_gen_.618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4679, i32 36 }
@___asan_gen_.619 = private unnamed_addr constant [21 x i8] c"wacom_features_0x301\00", align 1
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4682, i32 36 }
@___asan_gen_.622 = private unnamed_addr constant [21 x i8] c"wacom_features_0x302\00", align 1
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4685, i32 36 }
@___asan_gen_.625 = private unnamed_addr constant [21 x i8] c"wacom_features_0x303\00", align 1
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4689, i32 36 }
@___asan_gen_.628 = private unnamed_addr constant [21 x i8] c"wacom_features_0x304\00", align 1
@___asan_gen_.630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4488, i32 36 }
@___asan_gen_.631 = private unnamed_addr constant [21 x i8] c"wacom_features_0x307\00", align 1
@___asan_gen_.633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4700, i32 36 }
@___asan_gen_.634 = private unnamed_addr constant [21 x i8] c"wacom_features_0x309\00", align 1
@___asan_gen_.636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4706, i32 36 }
@___asan_gen_.637 = private unnamed_addr constant [21 x i8] c"wacom_features_0x30A\00", align 1
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4710, i32 36 }
@___asan_gen_.640 = private unnamed_addr constant [21 x i8] c"wacom_features_0x30C\00", align 1
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4716, i32 36 }
@___asan_gen_.643 = private unnamed_addr constant [21 x i8] c"wacom_features_0x30E\00", align 1
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4693, i32 36 }
@___asan_gen_.646 = private unnamed_addr constant [21 x i8] c"wacom_features_0x314\00", align 1
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4438, i32 36 }
@___asan_gen_.649 = private unnamed_addr constant [21 x i8] c"wacom_features_0x315\00", align 1
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4442, i32 36 }
@___asan_gen_.652 = private unnamed_addr constant [21 x i8] c"wacom_features_0x317\00", align 1
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4446, i32 36 }
@___asan_gen_.655 = private unnamed_addr constant [21 x i8] c"wacom_features_0x318\00", align 1
@___asan_gen_.657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4720, i32 36 }
@___asan_gen_.658 = private unnamed_addr constant [21 x i8] c"wacom_features_0x319\00", align 1
@___asan_gen_.660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4723, i32 36 }
@___asan_gen_.661 = private unnamed_addr constant [21 x i8] c"wacom_features_0x323\00", align 1
@___asan_gen_.663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4735, i32 36 }
@___asan_gen_.664 = private unnamed_addr constant [21 x i8] c"wacom_features_0x325\00", align 1
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4726, i32 36 }
@___asan_gen_.667 = private unnamed_addr constant [21 x i8] c"wacom_features_0x326\00", align 1
@___asan_gen_.669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4732, i32 36 }
@___asan_gen_.670 = private unnamed_addr constant [21 x i8] c"wacom_features_0x32A\00", align 1
@___asan_gen_.672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4465, i32 36 }
@___asan_gen_.673 = private unnamed_addr constant [21 x i8] c"wacom_features_0x32B\00", align 1
@___asan_gen_.675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4470, i32 36 }
@___asan_gen_.676 = private unnamed_addr constant [21 x i8] c"wacom_features_0x32C\00", align 1
@___asan_gen_.678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4476, i32 36 }
@___asan_gen_.679 = private unnamed_addr constant [21 x i8] c"wacom_features_0x32F\00", align 1
@___asan_gen_.681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4518, i32 36 }
@___asan_gen_.682 = private unnamed_addr constant [21 x i8] c"wacom_features_0x331\00", align 1
@___asan_gen_.684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4739, i32 36 }
@___asan_gen_.685 = private unnamed_addr constant [21 x i8] c"wacom_features_0x333\00", align 1
@___asan_gen_.687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4493, i32 36 }
@___asan_gen_.688 = private unnamed_addr constant [21 x i8] c"wacom_features_0x335\00", align 1
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4499, i32 36 }
@___asan_gen_.691 = private unnamed_addr constant [21 x i8] c"wacom_features_0x336\00", align 1
@___asan_gen_.693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4523, i32 36 }
@___asan_gen_.694 = private unnamed_addr constant [21 x i8] c"wacom_features_0x33B\00", align 1
@___asan_gen_.696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4743, i32 36 }
@___asan_gen_.697 = private unnamed_addr constant [21 x i8] c"wacom_features_0x33C\00", align 1
@___asan_gen_.699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4747, i32 36 }
@___asan_gen_.700 = private unnamed_addr constant [21 x i8] c"wacom_features_0x33D\00", align 1
@___asan_gen_.702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4751, i32 36 }
@___asan_gen_.703 = private unnamed_addr constant [21 x i8] c"wacom_features_0x33E\00", align 1
@___asan_gen_.705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4755, i32 36 }
@___asan_gen_.706 = private unnamed_addr constant [21 x i8] c"wacom_features_0x343\00", align 1
@___asan_gen_.708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4759, i32 36 }
@___asan_gen_.709 = private unnamed_addr constant [21 x i8] c"wacom_features_0x360\00", align 1
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4764, i32 36 }
@___asan_gen_.712 = private unnamed_addr constant [21 x i8] c"wacom_features_0x361\00", align 1
@___asan_gen_.714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4767, i32 36 }
@___asan_gen_.715 = private unnamed_addr constant [21 x i8] c"wacom_features_0x377\00", align 1
@___asan_gen_.717 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4770, i32 36 }
@___asan_gen_.718 = private unnamed_addr constant [21 x i8] c"wacom_features_0x379\00", align 1
@___asan_gen_.720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4773, i32 36 }
@___asan_gen_.721 = private unnamed_addr constant [21 x i8] c"wacom_features_0x37A\00", align 1
@___asan_gen_.723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4776, i32 36 }
@___asan_gen_.724 = private unnamed_addr constant [21 x i8] c"wacom_features_0x37B\00", align 1
@___asan_gen_.726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4779, i32 36 }
@___asan_gen_.727 = private unnamed_addr constant [21 x i8] c"wacom_features_0x393\00", align 1
@___asan_gen_.729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4782, i32 36 }
@___asan_gen_.730 = private unnamed_addr constant [21 x i8] c"wacom_features_0x3c6\00", align 1
@___asan_gen_.732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4786, i32 36 }
@___asan_gen_.733 = private unnamed_addr constant [21 x i8] c"wacom_features_0x3c8\00", align 1
@___asan_gen_.735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4789, i32 36 }
@___asan_gen_.736 = private unnamed_addr constant [22 x i8] c"wacom_features_0x4001\00", align 1
@___asan_gen_.738 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4620, i32 36 }
@___asan_gen_.739 = private unnamed_addr constant [22 x i8] c"wacom_features_0x4004\00", align 1
@___asan_gen_.741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4623, i32 36 }
@___asan_gen_.742 = private unnamed_addr constant [22 x i8] c"wacom_features_0x5000\00", align 1
@___asan_gen_.744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4626, i32 36 }
@___asan_gen_.745 = private unnamed_addr constant [22 x i8] c"wacom_features_0x5002\00", align 1
@___asan_gen_.747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4629, i32 36 }
@___asan_gen_.748 = private unnamed_addr constant [22 x i8] c"wacom_features_0x6004\00", align 1
@___asan_gen_.750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4697, i32 36 }
@___asan_gen_.751 = private unnamed_addr constant [26 x i8] c"wacom_features_HID_ANY_ID\00", align 1
@___asan_gen_.753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4793, i32 36 }
@___asan_gen_.754 = private unnamed_addr constant [10 x i8] c"wacom_ids\00", align 1
@___asan_gen_.756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4812, i32 28 }
@___asan_gen_.774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4035, i32 3 }
@___asan_gen_.780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4050, i32 3 }
@___asan_gen_.789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 3986, i32 4 }
@___asan_gen_.801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 2364, i32 4 }
@___asan_gen_.807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 2371, i32 4 }
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 2378, i32 4 }
@___asan_gen_.819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 2385, i32 4 }
@___asan_gen_.828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 2652, i32 4 }
@___asan_gen_.837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 124, i32 3 }
@___asan_gen_.840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 140, i32 3 }
@___asan_gen_.843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 316, i32 4 }
@___asan_gen_.844 = private unnamed_addr constant [10 x i8] c"batcap_gr\00", align 1
@___asan_gen_.846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 48, i32 23 }
@___asan_gen_.849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 199, i32 3 }
@___asan_gen_.855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 228, i32 2 }
@___asan_gen_.861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 259, i32 3 }
@___asan_gen_.864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 1031, i32 3 }
@___asan_gen_.865 = private unnamed_addr constant [10 x i8] c"batcap_i4\00", align 1
@___asan_gen_.867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 53, i32 23 }
@___asan_gen_.873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 1227, i32 3 }
@___asan_gen_.876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 1506, i32 3 }
@___asan_gen_.882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 1745, i32 3 }
@___asan_gen_.883 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 1171, i32 3 }
@___asan_gen_.894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 1066, i32 3 }
@___asan_gen_.897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4253, i32 4 }
@___asan_gen_.900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4367, i32 4 }
@___asan_gen_.903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4256, i32 4 }
@___asan_gen_.906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4262, i32 4 }
@___asan_gen_.909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4265, i32 4 }
@___asan_gen_.912 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4268, i32 4 }
@___asan_gen_.915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4271, i32 4 }
@___asan_gen_.918 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4274, i32 4 }
@___asan_gen_.921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4277, i32 4 }
@___asan_gen_.924 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4280, i32 4 }
@___asan_gen_.927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4283, i32 4 }
@___asan_gen_.930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4286, i32 4 }
@___asan_gen_.933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4316, i32 4 }
@___asan_gen_.936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4319, i32 4 }
@___asan_gen_.939 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4322, i32 4 }
@___asan_gen_.942 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4325, i32 4 }
@___asan_gen_.945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4328, i32 4 }
@___asan_gen_.948 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4424, i32 4 }
@___asan_gen_.951 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4427, i32 4 }
@___asan_gen_.954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4430, i32 4 }
@___asan_gen_.957 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4433, i32 4 }
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4436, i32 4 }
@___asan_gen_.963 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4331, i32 4 }
@___asan_gen_.966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4334, i32 4 }
@___asan_gen_.969 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4337, i32 4 }
@___asan_gen_.972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4340, i32 4 }
@___asan_gen_.975 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4343, i32 4 }
@___asan_gen_.978 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4346, i32 4 }
@___asan_gen_.981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4349, i32 4 }
@___asan_gen_.984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4352, i32 4 }
@___asan_gen_.987 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4355, i32 4 }
@___asan_gen_.990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4480, i32 4 }
@___asan_gen_.993 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4370, i32 4 }
@___asan_gen_.996 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4373, i32 4 }
@___asan_gen_.999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4376, i32 4 }
@___asan_gen_.1002 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4379, i32 4 }
@___asan_gen_.1005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4382, i32 4 }
@___asan_gen_.1008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4529, i32 4 }
@___asan_gen_.1011 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4534, i32 4 }
@___asan_gen_.1014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4554, i32 4 }
@___asan_gen_.1017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4289, i32 4 }
@___asan_gen_.1020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4292, i32 4 }
@___asan_gen_.1023 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4295, i32 4 }
@___asan_gen_.1026 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4298, i32 4 }
@___asan_gen_.1029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4301, i32 4 }
@___asan_gen_.1032 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4304, i32 4 }
@___asan_gen_.1035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4307, i32 4 }
@___asan_gen_.1038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4310, i32 4 }
@___asan_gen_.1041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4313, i32 4 }
@___asan_gen_.1044 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4259, i32 4 }
@___asan_gen_.1047 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4636, i32 4 }
@___asan_gen_.1050 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4564, i32 4 }
@___asan_gen_.1053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4567, i32 4 }
@___asan_gen_.1056 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4570, i32 4 }
@___asan_gen_.1059 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4573, i32 4 }
@___asan_gen_.1062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4576, i32 4 }
@___asan_gen_.1065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4385, i32 4 }
@___asan_gen_.1068 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4388, i32 4 }
@___asan_gen_.1071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4391, i32 4 }
@___asan_gen_.1074 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4394, i32 4 }
@___asan_gen_.1077 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4397, i32 4 }
@___asan_gen_.1080 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4400, i32 4 }
@___asan_gen_.1083 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4403, i32 4 }
@___asan_gen_.1086 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4406, i32 4 }
@___asan_gen_.1089 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4409, i32 4 }
@___asan_gen_.1092 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4412, i32 4 }
@___asan_gen_.1095 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4415, i32 4 }
@___asan_gen_.1098 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4418, i32 4 }
@___asan_gen_.1101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4361, i32 4 }
@___asan_gen_.1104 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4364, i32 4 }
@___asan_gen_.1107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4358, i32 4 }
@___asan_gen_.1110 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4483, i32 4 }
@___asan_gen_.1113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4486, i32 4 }
@___asan_gen_.1116 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4504, i32 4 }
@___asan_gen_.1119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4544, i32 4 }
@___asan_gen_.1122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4507, i32 4 }
@___asan_gen_.1125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4638, i32 4 }
@___asan_gen_.1128 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4641, i32 4 }
@___asan_gen_.1131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4644, i32 4 }
@___asan_gen_.1134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4647, i32 4 }
@___asan_gen_.1137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4650, i32 4 }
@___asan_gen_.1140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4653, i32 4 }
@___asan_gen_.1143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4656, i32 4 }
@___asan_gen_.1146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4659, i32 4 }
@___asan_gen_.1149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4662, i32 4 }
@___asan_gen_.1152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4665, i32 4 }
@___asan_gen_.1155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4668, i32 4 }
@___asan_gen_.1158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4671, i32 11 }
@___asan_gen_.1161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4674, i32 11 }
@___asan_gen_.1164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4677, i32 11 }
@___asan_gen_.1167 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4579, i32 4 }
@___asan_gen_.1170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4582, i32 4 }
@___asan_gen_.1173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4585, i32 4 }
@___asan_gen_.1176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4588, i32 4 }
@___asan_gen_.1179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4591, i32 4 }
@___asan_gen_.1182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4594, i32 4 }
@___asan_gen_.1185 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4597, i32 4 }
@___asan_gen_.1188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4511, i32 4 }
@___asan_gen_.1191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4451, i32 4 }
@___asan_gen_.1194 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4462, i32 4 }
@___asan_gen_.1197 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4549, i32 4 }
@___asan_gen_.1200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4514, i32 4 }
@___asan_gen_.1203 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4600, i32 4 }
@___asan_gen_.1206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4603, i32 4 }
@___asan_gen_.1209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4606, i32 4 }
@___asan_gen_.1212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4609, i32 4 }
@___asan_gen_.1215 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4612, i32 4 }
@___asan_gen_.1218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4615, i32 4 }
@___asan_gen_.1221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4618, i32 4 }
@___asan_gen_.1224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4680, i32 4 }
@___asan_gen_.1227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4683, i32 4 }
@___asan_gen_.1230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4686, i32 4 }
@___asan_gen_.1233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4690, i32 4 }
@___asan_gen_.1236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4489, i32 4 }
@___asan_gen_.1239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4701, i32 4 }
@___asan_gen_.1242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4707, i32 4 }
@___asan_gen_.1245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4711, i32 4 }
@___asan_gen_.1248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4717, i32 4 }
@___asan_gen_.1251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4694, i32 4 }
@___asan_gen_.1254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4439, i32 4 }
@___asan_gen_.1257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4443, i32 4 }
@___asan_gen_.1260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4447, i32 4 }
@___asan_gen_.1263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4721, i32 4 }
@___asan_gen_.1266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4724, i32 4 }
@___asan_gen_.1269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4736, i32 4 }
@___asan_gen_.1272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4727, i32 4 }
@___asan_gen_.1275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4733, i32 4 }
@___asan_gen_.1278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4466, i32 4 }
@___asan_gen_.1281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4471, i32 4 }
@___asan_gen_.1284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4519, i32 4 }
@___asan_gen_.1287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4740, i32 4 }
@___asan_gen_.1290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4494, i32 4 }
@___asan_gen_.1293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4524, i32 4 }
@___asan_gen_.1296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4744, i32 4 }
@___asan_gen_.1299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4748, i32 4 }
@___asan_gen_.1302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4752, i32 4 }
@___asan_gen_.1305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4756, i32 4 }
@___asan_gen_.1308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4760, i32 4 }
@___asan_gen_.1311 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4771, i32 4 }
@___asan_gen_.1314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4774, i32 4 }
@___asan_gen_.1317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4777, i32 4 }
@___asan_gen_.1320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4780, i32 4 }
@___asan_gen_.1323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4621, i32 4 }
@___asan_gen_.1326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4624, i32 4 }
@___asan_gen_.1329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4627, i32 4 }
@___asan_gen_.1332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4630, i32 4 }
@___asan_gen_.1335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4698, i32 4 }
@___asan_gen_.1336 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1337 = private constant [27 x i8] c"../drivers/hid/wacom_wac.c\00", align 1
@___asan_gen_.1338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1337, i32 4794, i32 4 }
@llvm.compiler.used = appending global [368 x ptr] [ptr @__UNIQUE_ID_touch_arbitration238, ptr @__UNIQUE_ID_touch_arbitrationtype237, ptr @__param_touch_arbitration, ptr @wacom_24hd_update_leds._entry, ptr @wacom_24hd_update_leds._entry_ptr, ptr @wacom_remote_status_irq._entry, ptr @wacom_remote_status_irq._entry_ptr, ptr @wacom_update_led._entry, ptr @wacom_update_led._entry.5, ptr @wacom_update_led._entry_ptr, ptr @wacom_update_led._entry_ptr.7, ptr @wacom_wac_finger_event._entry, ptr @wacom_wac_finger_event._entry_ptr, ptr @wacom_wac_pen_event._entry, ptr @wacom_wac_pen_event._entry.13, ptr @wacom_wac_pen_event._entry.16, ptr @wacom_wac_pen_event._entry.19, ptr @wacom_wac_pen_event._entry_ptr, ptr @wacom_wac_pen_event._entry_ptr.15, ptr @wacom_wac_pen_event._entry_ptr.18, ptr @wacom_wac_pen_event._entry_ptr.21, ptr @touch_arbitration, ptr @wacom_features_0x00, ptr @wacom_features_0x03, ptr @wacom_features_0x10, ptr @wacom_features_0x11, ptr @wacom_features_0x12, ptr @wacom_features_0x13, ptr @wacom_features_0x14, ptr @wacom_features_0x15, ptr @wacom_features_0x16, ptr @wacom_features_0x17, ptr @wacom_features_0x18, ptr @wacom_features_0x19, ptr @wacom_features_0x20, ptr @wacom_features_0x21, ptr @wacom_features_0x22, ptr @wacom_features_0x23, ptr @wacom_features_0x24, ptr @wacom_features_0x26, ptr @wacom_features_0x27, ptr @wacom_features_0x28, ptr @wacom_features_0x29, ptr @wacom_features_0x2A, ptr @wacom_features_0x30, ptr @wacom_features_0x31, ptr @wacom_features_0x32, ptr @wacom_features_0x33, ptr @wacom_features_0x34, ptr @wacom_features_0x35, ptr @wacom_features_0x37, ptr @wacom_features_0x38, ptr @wacom_features_0x39, ptr @wacom_features_0x3F, ptr @wacom_features_0x41, ptr @wacom_features_0x42, ptr @wacom_features_0x43, ptr @wacom_features_0x44, ptr @wacom_features_0x45, ptr @wacom_features_0x47, ptr @wacom_features_0x57, ptr @wacom_features_0x59, ptr @wacom_features_0x5B, ptr @wacom_features_0x5D, ptr @wacom_features_0x5E, ptr @wacom_features_0x60, ptr @wacom_features_0x61, ptr @wacom_features_0x62, ptr @wacom_features_0x63, ptr @wacom_features_0x64, ptr @wacom_features_0x65, ptr @wacom_features_0x69, ptr @wacom_features_0x6A, ptr @wacom_features_0x6B, ptr @wacom_features_0x81, ptr @wacom_features_0x84, ptr @wacom_features_0x90, ptr @wacom_features_0x93, ptr @wacom_features_0x97, ptr @wacom_features_0x9A, ptr @wacom_features_0x9F, ptr @wacom_features_0xB0, ptr @wacom_features_0xB1, ptr @wacom_features_0xB2, ptr @wacom_features_0xB3, ptr @wacom_features_0xB4, ptr @wacom_features_0xB5, ptr @wacom_features_0xB7, ptr @wacom_features_0xB8, ptr @wacom_features_0xB9, ptr @wacom_features_0xBA, ptr @wacom_features_0xBB, ptr @wacom_features_0xBC, ptr @wacom_features_0xBD, ptr @wacom_features_0xC0, ptr @wacom_features_0xC2, ptr @wacom_features_0xC4, ptr @wacom_features_0xC5, ptr @wacom_features_0xC6, ptr @wacom_features_0xC7, ptr @wacom_features_0xCC, ptr @wacom_features_0xCE, ptr @wacom_features_0xD0, ptr @wacom_features_0xD1, ptr @wacom_features_0xD2, ptr @wacom_features_0xD3, ptr @wacom_features_0xD4, ptr @wacom_features_0xD5, ptr @wacom_features_0xD6, ptr @wacom_features_0xD7, ptr @wacom_features_0xD8, ptr @wacom_features_0xDA, ptr @wacom_features_0xDB, ptr @wacom_features_0xDD, ptr @wacom_features_0xDE, ptr @wacom_features_0xDF, ptr @wacom_features_0xE2, ptr @wacom_features_0xE3, ptr @wacom_features_0xE5, ptr @wacom_features_0xE6, ptr @wacom_features_0xEC, ptr @wacom_features_0xED, ptr @wacom_features_0xEF, ptr @wacom_features_0xF0, ptr @wacom_features_0xF4, ptr @wacom_features_0xF6, ptr @wacom_features_0xF8, ptr @wacom_features_0xFA, ptr @wacom_features_0xFB, ptr @wacom_features_0x100, ptr @wacom_features_0x101, ptr @wacom_features_0x10D, ptr @wacom_features_0x10E, ptr @wacom_features_0x10F, ptr @wacom_features_0x116, ptr @wacom_features_0x12C, ptr @wacom_features_0x300, ptr @wacom_features_0x301, ptr @wacom_features_0x302, ptr @wacom_features_0x303, ptr @wacom_features_0x304, ptr @wacom_features_0x307, ptr @wacom_features_0x309, ptr @wacom_features_0x30A, ptr @wacom_features_0x30C, ptr @wacom_features_0x30E, ptr @wacom_features_0x314, ptr @wacom_features_0x315, ptr @wacom_features_0x317, ptr @wacom_features_0x318, ptr @wacom_features_0x319, ptr @wacom_features_0x323, ptr @wacom_features_0x325, ptr @wacom_features_0x326, ptr @wacom_features_0x32A, ptr @wacom_features_0x32B, ptr @wacom_features_0x32C, ptr @wacom_features_0x32F, ptr @wacom_features_0x331, ptr @wacom_features_0x333, ptr @wacom_features_0x335, ptr @wacom_features_0x336, ptr @wacom_features_0x33B, ptr @wacom_features_0x33C, ptr @wacom_features_0x33D, ptr @wacom_features_0x33E, ptr @wacom_features_0x343, ptr @wacom_features_0x360, ptr @wacom_features_0x361, ptr @wacom_features_0x377, ptr @wacom_features_0x379, ptr @wacom_features_0x37A, ptr @wacom_features_0x37B, ptr @wacom_features_0x393, ptr @wacom_features_0x3c6, ptr @wacom_features_0x3c8, ptr @wacom_features_0x4001, ptr @wacom_features_0x4004, ptr @wacom_features_0x5000, ptr @wacom_features_0x5002, ptr @wacom_features_0x6004, ptr @wacom_features_HID_ANY_ID, ptr @wacom_ids, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.6, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.14, ptr @.str.17, ptr @.str.20, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @batcap_gr, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @batcap_i4, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190], section "llvm.metadata"
@0 = internal global [356 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @touch_arbitration to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x00 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x03 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x10 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x11 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x12 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x13 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x14 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x15 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x16 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x17 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x18 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x19 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x20 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x21 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x22 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x23 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x24 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x26 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x27 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x28 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x29 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x2A to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x30 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x31 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x32 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x33 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x34 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x35 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x37 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x38 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x39 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x3F to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x41 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x42 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x43 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x44 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x45 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x47 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x57 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x59 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x5B to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x5D to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x5E to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x60 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x61 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x62 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x63 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x64 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x65 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x69 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x6A to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x6B to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x81 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x84 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x90 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x93 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x97 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x9A to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x9F to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB0 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB1 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB2 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB3 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB4 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB5 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB7 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB8 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xB9 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xBA to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xBB to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xBC to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xBD to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xC0 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xC2 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xC4 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xC5 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xC6 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xC7 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xCC to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xCE to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD0 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD1 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD2 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD3 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD4 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD5 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD6 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD7 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xD8 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xDA to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xDB to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xDD to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xDE to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xDF to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xE2 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xE3 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xE5 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xE6 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xEC to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xED to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xEF to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xF0 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xF4 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xF6 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xF8 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xFA to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0xFB to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x100 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x101 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x10D to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x10E to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x10F to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x116 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x12C to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x300 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x301 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x302 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x303 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x304 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x307 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x309 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x30A to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x30C to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x30E to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x314 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x315 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x317 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x318 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x319 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x323 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x325 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x326 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x32A to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x32B to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x32C to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x32F to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x331 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x333 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x335 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x336 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x33B to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x33C to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x33D to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x33E to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x343 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x360 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x361 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x377 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x379 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x37A to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x37B to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x393 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x3c6 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x3c8 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x4001 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x4004 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x5000 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x5002 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_0x6004 to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_features_HID_ANY_ID to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_ids to i32), i32 2608, i32 3264, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_update_led._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_update_led._entry.5 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_24hd_update_leds._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_wac_pen_event._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_wac_pen_event._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_wac_pen_event._entry.16 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_wac_pen_event._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_wac_finger_event._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @batcap_gr to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @batcap_i4 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wacom_remote_status_irq._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1068 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1074 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1083 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1086 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1104 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1110 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1167 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1185 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1197 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1203 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1215 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1338 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @wacom_equivalent_usage(i32 noundef %usage) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %usage, -65536
  %0 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values)
  switch i32 %and, label %entry.return_crit_edge [
    i32 -15925248, label %if.then
    i32 -16777216, label %if.then35
  ]

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

if.then:                                          ; preds = %entry
  %and1 = shl i32 %usage, 8
  %shl = and i32 %and1, 16711680
  %and2 = and i32 %usage, 255
  %1 = zext i32 %shl to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.191)
  switch i32 %shl, label %lor.lhs.false9 [
    i32 262144, label %if.then.return_crit_edge
    i32 589824, label %if.then.return_crit_edge76
    i32 851968, label %if.then.return_crit_edge77
    i32 1048576, label %if.then.return_crit_edge78
  ]

if.then.return_crit_edge78:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

if.then.return_crit_edge77:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

if.then.return_crit_edge76:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9:                                   ; preds = %if.then
  %2 = zext i32 %usage to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.192)
  switch i32 %usage, label %if.end [
    i32 -15925194, label %lor.lhs.false9.return_crit_edge
    i32 -15925156, label %lor.lhs.false9.return_crit_edge79
    i32 -15925129, label %lor.lhs.false9.return_crit_edge80
    i32 -15924942, label %lor.lhs.false9.return_crit_edge81
    i32 -15924938, label %lor.lhs.false9.return_crit_edge82
    i32 -15924937, label %lor.lhs.false9.return_crit_edge83
    i32 -15924936, label %lor.lhs.false9.return_crit_edge84
    i32 -15924935, label %lor.lhs.false9.return_crit_edge85
    i32 -15924784, label %lor.lhs.false9.return_crit_edge86
  ]

lor.lhs.false9.return_crit_edge86:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge85:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge84:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge83:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge82:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge81:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge80:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge79:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

lor.lhs.false9.return_crit_edge:                  ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

if.end:                                           ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl)
  %cmp28 = icmp eq i32 %shl, 0
  %spec.store.select = select i1 %cmp28, i32 851968, i32 %shl
  %or = or i32 %spec.store.select, %and2
  br label %return

if.then35:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16776752, i32 %usage)
  %cmp41 = icmp eq i32 %usage, -16776752
  br i1 %cmp41, label %if.then35.return_crit_edge, label %if.end43

if.then35.return_crit_edge:                       ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

if.end43:                                         ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #10
  %and40 = and i32 %usage, 255
  %and37 = shl i32 %usage, 8
  %shl38 = and i32 %and37, 16711680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shl38)
  %cmp44 = icmp eq i32 %shl38, 0
  %spec.store.select51 = select i1 %cmp44, i32 851968, i32 %shl38
  %or47 = or i32 %spec.store.select51, %and40
  br label %return

return:                                           ; preds = %if.end43, %if.then35.return_crit_edge, %if.end, %lor.lhs.false9.return_crit_edge, %lor.lhs.false9.return_crit_edge79, %lor.lhs.false9.return_crit_edge80, %lor.lhs.false9.return_crit_edge81, %lor.lhs.false9.return_crit_edge82, %lor.lhs.false9.return_crit_edge83, %lor.lhs.false9.return_crit_edge84, %lor.lhs.false9.return_crit_edge85, %lor.lhs.false9.return_crit_edge86, %if.then.return_crit_edge, %if.then.return_crit_edge76, %if.then.return_crit_edge77, %if.then.return_crit_edge78, %entry.return_crit_edge
  %retval.2 = phi i32 [ %or, %if.end ], [ %usage, %lor.lhs.false9.return_crit_edge ], [ %usage, %lor.lhs.false9.return_crit_edge79 ], [ %usage, %lor.lhs.false9.return_crit_edge80 ], [ %usage, %lor.lhs.false9.return_crit_edge81 ], [ %usage, %lor.lhs.false9.return_crit_edge82 ], [ %usage, %lor.lhs.false9.return_crit_edge83 ], [ %usage, %lor.lhs.false9.return_crit_edge84 ], [ %usage, %lor.lhs.false9.return_crit_edge85 ], [ %usage, %lor.lhs.false9.return_crit_edge86 ], [ %usage, %if.then.return_crit_edge ], [ %usage, %if.then.return_crit_edge76 ], [ %usage, %if.then.return_crit_edge77 ], [ %usage, %if.then.return_crit_edge78 ], [ %or47, %if.end43 ], [ -16776752, %if.then35.return_crit_edge ], [ %usage, %entry.return_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wacom_wac_usage_mapping(ptr nocapture noundef readonly %hdev, ptr noundef %field, ptr noundef %usage) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18, i32 8
  %application = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 2
  %0 = ptrtoint ptr %application to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %application, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.193)
  switch i32 %1, label %entry.if.end_crit_edge [
    i32 851972, label %entry.if.then_crit_edge
    i32 -16777212, label %entry.if.then_crit_edge154
    i32 851970, label %entry.if.then_crit_edge155
    i32 -15925246, label %entry.if.then_crit_edge156
  ]

entry.if.then_crit_edge156:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

entry.if.then_crit_edge155:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

entry.if.then_crit_edge154:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.then:                                          ; preds = %entry.if.then_crit_edge, %entry.if.then_crit_edge154, %entry.if.then_crit_edge155, %entry.if.then_crit_edge156
  %3 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %driver_data.i.i, align 4
  %device_type = getelementptr inbounds %struct.wacom, ptr %4, i32 0, i32 2, i32 10, i32 13
  %5 = ptrtoint ptr %device_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %device_type, align 4
  %or = or i32 %6, 16
  store i32 %or, ptr %device_type, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %7 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %usage, align 4
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.194)
  switch i32 %8, label %if.else [
    i32 852027, label %if.end.if.then18_crit_edge
    i32 -15924220, label %if.end.if.then18_crit_edge157
    i32 -15924165, label %if.end.if.then18_crit_edge158
  ]

if.end.if.then18_crit_edge158:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then18

if.end.if.then18_crit_edge157:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then18

if.end.if.then18_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then18

if.then18:                                        ; preds = %if.end.if.then18_crit_edge, %if.end.if.then18_crit_edge157, %if.end.if.then18_crit_edge158
  %call3.i = tail call i32 @wacom_equivalent_usage(i32 noundef %8) #8
  %10 = zext i32 %call3.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.195)
  switch i32 %call3.i, label %if.then18.if.end79_crit_edge [
    i32 852027, label %if.then18.sw.bb.i_crit_edge
    i32 -15924165, label %if.then18.sw.bb.i_crit_edge159
    i32 -15924220, label %if.then18.sw.bb.i_crit_edge160
  ]

if.then18.sw.bb.i_crit_edge160:                   ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

if.then18.sw.bb.i_crit_edge159:                   ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

if.then18.sw.bb.i_crit_edge:                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

if.then18.if.end79_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

sw.bb.i:                                          ; preds = %if.then18.sw.bb.i_crit_edge, %if.then18.sw.bb.i_crit_edge159, %if.then18.sw.bb.i_crit_edge160
  %11 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %driver_data.i.i, align 4
  %quirks.i = getelementptr inbounds %struct.wacom, ptr %12, i32 0, i32 2, i32 10, i32 23
  %13 = ptrtoint ptr %quirks.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %quirks.i, align 4
  %or.i = or i32 %14, 8
  store i32 %or.i, ptr %quirks.i, align 4
  br label %if.end79

if.else:                                          ; preds = %if.end
  %15 = ptrtoint ptr %field to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %field, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.196)
  switch i32 %16, label %if.else27 [
    i32 852025, label %if.else.if.then26_crit_edge
    i32 -15925191, label %if.else.if.then26_crit_edge161
    i32 -15921133, label %if.else.if.then26_crit_edge162
  ]

if.else.if.then26_crit_edge162:                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then26

if.else.if.then26_crit_edge161:                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then26

if.else.if.then26_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then26

if.then26:                                        ; preds = %if.else.if.then26_crit_edge, %if.else.if.then26_crit_edge161, %if.else.if.then26_crit_edge162
  %18 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %driver_data.i.i, align 4
  %pad_input.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 14
  %20 = ptrtoint ptr %pad_input.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pad_input.i, align 8
  %call3.i128 = tail call i32 @wacom_equivalent_usage(i32 noundef %8) #8
  %22 = zext i32 %call3.i128 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.197)
  switch i32 %call3.i128, label %if.then26.sw.epilog.i_crit_edge [
    i32 -15924223, label %sw.bb.i129
    i32 -15924222, label %sw.bb4.i
    i32 -15924221, label %sw.bb9.i
    i32 -15922795, label %if.then26.sw.bb14.i_crit_edge
    i32 -15922800, label %if.then26.sw.bb14.i_crit_edge163
    i32 -15922799, label %if.then26.sw.bb14.i_crit_edge164
    i32 -15922798, label %if.then26.sw.bb14.i_crit_edge165
    i32 -15922797, label %if.then26.sw.bb14.i_crit_edge166
    i32 -15922796, label %if.then26.sw.bb14.i_crit_edge167
    i32 -15922815, label %sw.bb19.i
    i32 -15924140, label %if.then26.sw.bb20.i_crit_edge
    i32 -15924938, label %if.end14.i228.i
    i32 -15924937, label %if.end14.i257.i
    i32 -15924936, label %if.end14.i286.i
    i32 -15924935, label %sw.bb32.i
    i32 -15922810, label %sw.bb38.i
    i32 -15922813, label %sw.bb41.i
    i32 -15922814, label %sw.bb44.i
    i32 -15922816, label %sw.bb47.i
  ]

if.then26.sw.bb20.i_crit_edge:                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb20.i

if.then26.sw.bb14.i_crit_edge167:                 ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb14.i

if.then26.sw.bb14.i_crit_edge166:                 ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb14.i

if.then26.sw.bb14.i_crit_edge165:                 ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb14.i

if.then26.sw.bb14.i_crit_edge164:                 ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb14.i

if.then26.sw.bb14.i_crit_edge163:                 ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb14.i

if.then26.sw.bb14.i_crit_edge:                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb14.i

if.then26.sw.epilog.i_crit_edge:                  ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog.i

sw.bb.i129:                                       ; preds = %if.then26
  %propbit.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 4
  %23 = ptrtoint ptr %propbit.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %propbit.i, align 4
  %or.i.i = or i32 %24, 64
  store i32 %or.i.i, ptr %propbit.i, align 4
  %driver_data.i.i.i.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 40, i32 8
  %25 = ptrtoint ptr %driver_data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %driver_data.i.i.i.i, align 4
  %logical_minimum.i.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %27 = ptrtoint ptr %logical_minimum.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %logical_minimum.i.i, align 4
  %logical_maximum.i.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %29 = ptrtoint ptr %logical_maximum.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %logical_maximum.i.i, align 4
  %31 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %usage, align 4
  %call3.i.i = tail call i32 @wacom_equivalent_usage(i32 noundef %32) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 852033, i32 %call3.i.i)
  %cmp.i.i = icmp eq i32 %call3.i.i, 852033
  %33 = zext i32 %call3.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.198)
  switch i32 %call3.i.i, label %sw.bb.i129.if.end14.i.i_crit_edge [
    i32 65584, label %if.end8.thread.i.i
    i32 65585, label %if.then11.i.i
  ]

sw.bb.i129.if.end14.i.i_crit_edge:                ; preds = %sw.bb.i129
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end14.i.i

if.end8.thread.i.i:                               ; preds = %sw.bb.i129
  call void @__sanitizer_cov_trace_pc() #10
  %offset_left.i.i = getelementptr inbounds %struct.wacom, ptr %26, i32 0, i32 2, i32 10, i32 9
  %offset_right.i.i = getelementptr inbounds %struct.wacom, ptr %26, i32 0, i32 2, i32 10, i32 10
  br label %if.end14.sink.split.i.i

if.then11.i.i:                                    ; preds = %sw.bb.i129
  call void @__sanitizer_cov_trace_pc() #10
  %offset_top.i.i = getelementptr inbounds %struct.wacom, ptr %26, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i.i = getelementptr inbounds %struct.wacom, ptr %26, i32 0, i32 2, i32 10, i32 12
  br label %if.end14.sink.split.i.i

if.end14.sink.split.i.i:                          ; preds = %if.then11.i.i, %if.end8.thread.i.i
  %offset_right.sink.i.i = phi ptr [ %offset_right.i.i, %if.end8.thread.i.i ], [ %offset_bottom.i.i, %if.then11.i.i ]
  %.pn.in.i.i = phi ptr [ %offset_left.i.i, %if.end8.thread.i.i ], [ %offset_top.i.i, %if.then11.i.i ]
  %34 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn.i.i = load i32, ptr %.pn.in.i.i, align 4
  %fmin.1.ph.i.i = add i32 %.pn.i.i, %28
  %35 = ptrtoint ptr %offset_right.sink.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %offset_right.sink.i.i, align 4
  %sub.i.i = sub i32 %30, %36
  br label %if.end14.i.i

if.end14.i.i:                                     ; preds = %if.end14.sink.split.i.i, %sw.bb.i129.if.end14.i.i_crit_edge
  %fmin.1.i.i = phi i32 [ %28, %sw.bb.i129.if.end14.i.i_crit_edge ], [ %fmin.1.ph.i.i, %if.end14.sink.split.i.i ]
  %fmax.1.i.i = phi i32 [ %30, %sw.bb.i129.if.end14.i.i_crit_edge ], [ %sub.i.i, %if.end14.sink.split.i.i ]
  %type15.i.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %37 = ptrtoint ptr %type15.i.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 3, ptr %type15.i.i, align 4
  %code16.i.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %38 = ptrtoint ptr %code16.i.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 0, ptr %code16.i.i, align 2
  tail call void @input_set_abs_params(ptr noundef %21, i32 noundef 0, i32 noundef %fmin.1.i.i, i32 noundef %fmax.1.i.i, i32 noundef 0, i32 noundef 0) #8
  %conv20.i.i = select i1 %cmp.i.i, i16 5, i16 0
  %call21.i.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext %conv20.i.i) #8
  tail call void @input_alloc_absinfo(ptr noundef %21) #8
  %absinfo.i.i.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 26
  %39 = ptrtoint ptr %absinfo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %absinfo.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %40, null
  br i1 %tobool.not.i.i.i, label %if.end14.i.i.sw.epilog59.sink.split.i_crit_edge, label %if.then.i.i.i

if.end14.i.i.sw.epilog59.sink.split.i_crit_edge:  ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog59.sink.split.i

if.then.i.i.i:                                    ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i.i = getelementptr %struct.input_absinfo, ptr %40, i32 0, i32 5
  %41 = ptrtoint ptr %resolution.i.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %call21.i.i, ptr %resolution.i.i.i, align 4
  br label %sw.epilog59.sink.split.i

sw.bb4.i:                                         ; preds = %if.then26
  %propbit5.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 4
  %42 = ptrtoint ptr %propbit5.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %propbit5.i, align 4
  %or.i123.i = or i32 %43, 64
  store i32 %or.i123.i, ptr %propbit5.i, align 4
  %driver_data.i.i.i125.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 40, i32 8
  %44 = ptrtoint ptr %driver_data.i.i.i125.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %driver_data.i.i.i125.i, align 4
  %logical_minimum.i126.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %46 = ptrtoint ptr %logical_minimum.i126.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %logical_minimum.i126.i, align 4
  %logical_maximum.i127.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %48 = ptrtoint ptr %logical_maximum.i127.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %logical_maximum.i127.i, align 4
  %50 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %usage, align 4
  %call3.i128.i = tail call i32 @wacom_equivalent_usage(i32 noundef %51) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 852033, i32 %call3.i128.i)
  %cmp.i129.i = icmp eq i32 %call3.i128.i, 852033
  %52 = zext i32 %call3.i128.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %52, ptr @__sancov_gen_cov_switch_values.199)
  switch i32 %call3.i128.i, label %sw.bb4.i.if.end14.i146.i_crit_edge [
    i32 65584, label %if.end8.thread.i132.i
    i32 65585, label %if.then11.i135.i
  ]

sw.bb4.i.if.end14.i146.i_crit_edge:               ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end14.i146.i

if.end8.thread.i132.i:                            ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_left.i130.i = getelementptr inbounds %struct.wacom, ptr %45, i32 0, i32 2, i32 10, i32 9
  %offset_right.i131.i = getelementptr inbounds %struct.wacom, ptr %45, i32 0, i32 2, i32 10, i32 10
  br label %if.end14.sink.split.i141.i

if.then11.i135.i:                                 ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_top.i133.i = getelementptr inbounds %struct.wacom, ptr %45, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i134.i = getelementptr inbounds %struct.wacom, ptr %45, i32 0, i32 2, i32 10, i32 12
  br label %if.end14.sink.split.i141.i

if.end14.sink.split.i141.i:                       ; preds = %if.then11.i135.i, %if.end8.thread.i132.i
  %offset_right.sink.i136.i = phi ptr [ %offset_right.i131.i, %if.end8.thread.i132.i ], [ %offset_bottom.i134.i, %if.then11.i135.i ]
  %.pn.in.i137.i = phi ptr [ %offset_left.i130.i, %if.end8.thread.i132.i ], [ %offset_top.i133.i, %if.then11.i135.i ]
  %53 = ptrtoint ptr %.pn.in.i137.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %.pn.i138.i = load i32, ptr %.pn.in.i137.i, align 4
  %fmin.1.ph.i139.i = add i32 %.pn.i138.i, %47
  %54 = ptrtoint ptr %offset_right.sink.i136.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %offset_right.sink.i136.i, align 4
  %sub.i140.i = sub i32 %49, %55
  br label %if.end14.i146.i

if.end14.i146.i:                                  ; preds = %if.end14.sink.split.i141.i, %sw.bb4.i.if.end14.i146.i_crit_edge
  %fmin.1.i142.i = phi i32 [ %47, %sw.bb4.i.if.end14.i146.i_crit_edge ], [ %fmin.1.ph.i139.i, %if.end14.sink.split.i141.i ]
  %fmax.1.i143.i = phi i32 [ %49, %sw.bb4.i.if.end14.i146.i_crit_edge ], [ %sub.i140.i, %if.end14.sink.split.i141.i ]
  %type15.i144.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %56 = ptrtoint ptr %type15.i144.i to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 3, ptr %type15.i144.i, align 4
  %code16.i145.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %57 = ptrtoint ptr %code16.i145.i to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 1, ptr %code16.i145.i, align 2
  tail call void @input_set_abs_params(ptr noundef %21, i32 noundef 1, i32 noundef %fmin.1.i142.i, i32 noundef %fmax.1.i143.i, i32 noundef 0, i32 noundef 0) #8
  %conv20.i147.i = select i1 %cmp.i129.i, i16 5, i16 1
  %call21.i148.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext %conv20.i147.i) #8
  tail call void @input_alloc_absinfo(ptr noundef %21) #8
  %absinfo.i.i149.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 26
  %58 = ptrtoint ptr %absinfo.i.i149.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %absinfo.i.i149.i, align 8
  %tobool.not.i.i150.i = icmp eq ptr %59, null
  br i1 %tobool.not.i.i150.i, label %if.end14.i146.i.sw.epilog59.sink.split.i_crit_edge, label %if.then.i.i152.i

if.end14.i146.i.sw.epilog59.sink.split.i_crit_edge: ; preds = %if.end14.i146.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog59.sink.split.i

if.then.i.i152.i:                                 ; preds = %if.end14.i146.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i151.i = getelementptr %struct.input_absinfo, ptr %59, i32 1, i32 5
  %60 = ptrtoint ptr %resolution.i.i151.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %call21.i148.i, ptr %resolution.i.i151.i, align 4
  br label %sw.epilog59.sink.split.i

sw.bb9.i:                                         ; preds = %if.then26
  %propbit10.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 4
  %61 = ptrtoint ptr %propbit10.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %propbit10.i, align 4
  %or.i124.i = or i32 %62, 64
  store i32 %or.i124.i, ptr %propbit10.i, align 4
  %driver_data.i.i.i154.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 40, i32 8
  %63 = ptrtoint ptr %driver_data.i.i.i154.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %driver_data.i.i.i154.i, align 4
  %logical_minimum.i155.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %65 = ptrtoint ptr %logical_minimum.i155.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %logical_minimum.i155.i, align 4
  %logical_maximum.i156.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %67 = ptrtoint ptr %logical_maximum.i156.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %logical_maximum.i156.i, align 4
  %69 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %usage, align 4
  %call3.i157.i = tail call i32 @wacom_equivalent_usage(i32 noundef %70) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 852033, i32 %call3.i157.i)
  %cmp.i158.i = icmp eq i32 %call3.i157.i, 852033
  %71 = zext i32 %call3.i157.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %71, ptr @__sancov_gen_cov_switch_values.200)
  switch i32 %call3.i157.i, label %sw.bb9.i.if.end14.i175.i_crit_edge [
    i32 65584, label %if.end8.thread.i161.i
    i32 65585, label %if.then11.i164.i
  ]

sw.bb9.i.if.end14.i175.i_crit_edge:               ; preds = %sw.bb9.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end14.i175.i

if.end8.thread.i161.i:                            ; preds = %sw.bb9.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_left.i159.i = getelementptr inbounds %struct.wacom, ptr %64, i32 0, i32 2, i32 10, i32 9
  %offset_right.i160.i = getelementptr inbounds %struct.wacom, ptr %64, i32 0, i32 2, i32 10, i32 10
  br label %if.end14.sink.split.i170.i

if.then11.i164.i:                                 ; preds = %sw.bb9.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_top.i162.i = getelementptr inbounds %struct.wacom, ptr %64, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i163.i = getelementptr inbounds %struct.wacom, ptr %64, i32 0, i32 2, i32 10, i32 12
  br label %if.end14.sink.split.i170.i

if.end14.sink.split.i170.i:                       ; preds = %if.then11.i164.i, %if.end8.thread.i161.i
  %offset_right.sink.i165.i = phi ptr [ %offset_right.i160.i, %if.end8.thread.i161.i ], [ %offset_bottom.i163.i, %if.then11.i164.i ]
  %.pn.in.i166.i = phi ptr [ %offset_left.i159.i, %if.end8.thread.i161.i ], [ %offset_top.i162.i, %if.then11.i164.i ]
  %72 = ptrtoint ptr %.pn.in.i166.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %.pn.i167.i = load i32, ptr %.pn.in.i166.i, align 4
  %fmin.1.ph.i168.i = add i32 %.pn.i167.i, %66
  %73 = ptrtoint ptr %offset_right.sink.i165.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %offset_right.sink.i165.i, align 4
  %sub.i169.i = sub i32 %68, %74
  br label %if.end14.i175.i

if.end14.i175.i:                                  ; preds = %if.end14.sink.split.i170.i, %sw.bb9.i.if.end14.i175.i_crit_edge
  %fmin.1.i171.i = phi i32 [ %66, %sw.bb9.i.if.end14.i175.i_crit_edge ], [ %fmin.1.ph.i168.i, %if.end14.sink.split.i170.i ]
  %fmax.1.i172.i = phi i32 [ %68, %sw.bb9.i.if.end14.i175.i_crit_edge ], [ %sub.i169.i, %if.end14.sink.split.i170.i ]
  %type15.i173.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %75 = ptrtoint ptr %type15.i173.i to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 3, ptr %type15.i173.i, align 4
  %code16.i174.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %76 = ptrtoint ptr %code16.i174.i to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 2, ptr %code16.i174.i, align 2
  tail call void @input_set_abs_params(ptr noundef %21, i32 noundef 2, i32 noundef %fmin.1.i171.i, i32 noundef %fmax.1.i172.i, i32 noundef 0, i32 noundef 0) #8
  %conv20.i176.i = select i1 %cmp.i158.i, i16 5, i16 2
  %call21.i177.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext %conv20.i176.i) #8
  tail call void @input_alloc_absinfo(ptr noundef %21) #8
  %absinfo.i.i178.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 26
  %77 = ptrtoint ptr %absinfo.i.i178.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %absinfo.i.i178.i, align 8
  %tobool.not.i.i179.i = icmp eq ptr %78, null
  br i1 %tobool.not.i.i179.i, label %if.end14.i175.i.sw.epilog59.sink.split.i_crit_edge, label %if.then.i.i181.i

if.end14.i175.i.sw.epilog59.sink.split.i_crit_edge: ; preds = %if.end14.i175.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog59.sink.split.i

if.then.i.i181.i:                                 ; preds = %if.end14.i175.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i180.i = getelementptr %struct.input_absinfo, ptr %78, i32 2, i32 5
  %79 = ptrtoint ptr %resolution.i.i180.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %call21.i177.i, ptr %resolution.i.i180.i, align 4
  br label %sw.epilog59.sink.split.i

sw.bb14.i:                                        ; preds = %if.then26.sw.bb14.i_crit_edge, %if.then26.sw.bb14.i_crit_edge163, %if.then26.sw.bb14.i_crit_edge164, %if.then26.sw.bb14.i_crit_edge165, %if.then26.sw.bb14.i_crit_edge166, %if.then26.sw.bb14.i_crit_edge167
  %numbered_buttons.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 10, i32 8
  %80 = ptrtoint ptr %numbered_buttons.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %numbered_buttons.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %81)
  %cmp.i183.i = icmp slt i32 %81, 10
  br i1 %cmp.i183.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %sw.bb14.i
  call void @__sanitizer_cov_trace_pc() #10
  %add.i.i = add nsw i32 %81, 256
  br label %wacom_numbered_button_to_key.exit.i

if.else.i.i:                                      ; preds = %sw.bb14.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %81)
  %cmp1.i.i = icmp ult i32 %81, 16
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else4.i.i

if.then2.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %add3.i.i = add nuw nsw i32 %81, 294
  br label %wacom_numbered_button_to_key.exit.i

if.else4.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %81)
  %cmp5.i.i = icmp ult i32 %81, 18
  %add8.i.i = add nuw i32 %81, 278
  %spec.select.i.i = select i1 %cmp5.i.i, i32 %add8.i.i, i32 0
  br label %wacom_numbered_button_to_key.exit.i

wacom_numbered_button_to_key.exit.i:              ; preds = %if.else4.i.i, %if.then2.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %add.i.i, %if.then.i.i ], [ %add3.i.i, %if.then2.i.i ], [ %spec.select.i.i, %if.else4.i.i ]
  %conv.i = trunc i32 %retval.0.i.i to i16
  %conv.i.i = and i32 %retval.0.i.i, 65535
  %type15.i203.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %82 = ptrtoint ptr %type15.i203.i to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 1, ptr %type15.i203.i, align 4
  %code16.i204.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %83 = ptrtoint ptr %code16.i204.i to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 %conv.i, ptr %code16.i204.i, align 2
  tail call void @input_set_capability(ptr noundef %21, i32 noundef 1, i32 noundef %conv.i.i) #8
  %84 = ptrtoint ptr %numbered_buttons.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %numbered_buttons.i, align 4
  %inc.i = add i32 %85, 1
  store i32 %inc.i, ptr %numbered_buttons.i, align 4
  br label %sw.epilog.sink.split.i

sw.bb19.i:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  %is_soft_touch_switch.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 24
  %86 = ptrtoint ptr %is_soft_touch_switch.i to i32
  call void @__asan_store1_noabort(i32 %86)
  store i8 1, ptr %is_soft_touch_switch.i, align 1
  br label %sw.bb20.i

sw.bb20.i:                                        ; preds = %sw.bb19.i, %if.then26.sw.bb20.i_crit_edge
  %has_mute_touch_switch.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 23
  %87 = ptrtoint ptr %has_mute_touch_switch.i to i32
  call void @__asan_store1_noabort(i32 %87)
  store i8 1, ptr %has_mute_touch_switch.i, align 8
  %type.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %88 = ptrtoint ptr %type.i to i32
  call void @__asan_store1_noabort(i32 %88)
  store i8 5, ptr %type.i, align 4
  %code.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %89 = ptrtoint ptr %code.i to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 14, ptr %code.i, align 2
  br label %sw.epilog.sink.split.i

if.end14.i228.i:                                  ; preds = %if.then26
  %logical_minimum.i208.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %90 = ptrtoint ptr %logical_minimum.i208.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %logical_minimum.i208.i, align 4
  %logical_maximum.i209.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %92 = ptrtoint ptr %logical_maximum.i209.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %logical_maximum.i209.i, align 4
  %type15.i226.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %94 = ptrtoint ptr %type15.i226.i to i32
  call void @__asan_store1_noabort(i32 %94)
  store i8 3, ptr %type15.i226.i, align 4
  %code16.i227.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %95 = ptrtoint ptr %code16.i227.i to i32
  call void @__asan_store2_noabort(i32 %95)
  store i16 3, ptr %code16.i227.i, align 2
  tail call void @input_set_abs_params(ptr noundef %21, i32 noundef 3, i32 noundef %91, i32 noundef %93, i32 noundef 0, i32 noundef 0) #8
  %call21.i230.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 3) #8
  tail call void @input_alloc_absinfo(ptr noundef %21) #8
  %absinfo.i.i231.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 26
  %96 = ptrtoint ptr %absinfo.i.i231.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %absinfo.i.i231.i, align 8
  %tobool.not.i.i232.i = icmp eq ptr %97, null
  br i1 %tobool.not.i.i232.i, label %if.end14.i228.i.sw.epilog59.sink.split.i_crit_edge, label %if.then.i.i234.i

if.end14.i228.i.sw.epilog59.sink.split.i_crit_edge: ; preds = %if.end14.i228.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog59.sink.split.i

if.then.i.i234.i:                                 ; preds = %if.end14.i228.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i233.i = getelementptr %struct.input_absinfo, ptr %97, i32 3, i32 5
  %98 = ptrtoint ptr %resolution.i.i233.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %call21.i230.i, ptr %resolution.i.i233.i, align 4
  br label %sw.epilog59.sink.split.i

if.end14.i257.i:                                  ; preds = %if.then26
  %logical_minimum.i237.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %99 = ptrtoint ptr %logical_minimum.i237.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %logical_minimum.i237.i, align 4
  %logical_maximum.i238.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %101 = ptrtoint ptr %logical_maximum.i238.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %logical_maximum.i238.i, align 4
  %type15.i255.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %103 = ptrtoint ptr %type15.i255.i to i32
  call void @__asan_store1_noabort(i32 %103)
  store i8 3, ptr %type15.i255.i, align 4
  %code16.i256.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %104 = ptrtoint ptr %code16.i256.i to i32
  call void @__asan_store2_noabort(i32 %104)
  store i16 4, ptr %code16.i256.i, align 2
  tail call void @input_set_abs_params(ptr noundef %21, i32 noundef 4, i32 noundef %100, i32 noundef %102, i32 noundef 0, i32 noundef 0) #8
  %call21.i259.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 4) #8
  tail call void @input_alloc_absinfo(ptr noundef %21) #8
  %absinfo.i.i260.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 26
  %105 = ptrtoint ptr %absinfo.i.i260.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %absinfo.i.i260.i, align 8
  %tobool.not.i.i261.i = icmp eq ptr %106, null
  br i1 %tobool.not.i.i261.i, label %if.end14.i257.i.sw.epilog59.sink.split.i_crit_edge, label %if.then.i.i263.i

if.end14.i257.i.sw.epilog59.sink.split.i_crit_edge: ; preds = %if.end14.i257.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog59.sink.split.i

if.then.i.i263.i:                                 ; preds = %if.end14.i257.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i262.i = getelementptr %struct.input_absinfo, ptr %106, i32 4, i32 5
  %107 = ptrtoint ptr %resolution.i.i262.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %call21.i259.i, ptr %resolution.i.i262.i, align 4
  br label %sw.epilog59.sink.split.i

if.end14.i286.i:                                  ; preds = %if.then26
  %logical_minimum.i266.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %108 = ptrtoint ptr %logical_minimum.i266.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %logical_minimum.i266.i, align 4
  %logical_maximum.i267.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %110 = ptrtoint ptr %logical_maximum.i267.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %logical_maximum.i267.i, align 4
  %type15.i284.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %112 = ptrtoint ptr %type15.i284.i to i32
  call void @__asan_store1_noabort(i32 %112)
  store i8 3, ptr %type15.i284.i, align 4
  %code16.i285.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %113 = ptrtoint ptr %code16.i285.i to i32
  call void @__asan_store2_noabort(i32 %113)
  store i16 8, ptr %code16.i285.i, align 2
  tail call void @input_set_abs_params(ptr noundef %21, i32 noundef 8, i32 noundef %109, i32 noundef %111, i32 noundef 0, i32 noundef 0) #8
  %call21.i288.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 8) #8
  tail call void @input_alloc_absinfo(ptr noundef %21) #8
  %absinfo.i.i289.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 26
  %114 = ptrtoint ptr %absinfo.i.i289.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %absinfo.i.i289.i, align 8
  %tobool.not.i.i290.i = icmp eq ptr %115, null
  br i1 %tobool.not.i.i290.i, label %if.end14.i286.i.sw.epilog59.sink.split.i_crit_edge, label %if.then.i.i292.i

if.end14.i286.i.sw.epilog59.sink.split.i_crit_edge: ; preds = %if.end14.i286.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog59.sink.split.i

if.then.i.i292.i:                                 ; preds = %if.end14.i286.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i291.i = getelementptr %struct.input_absinfo, ptr %115, i32 8, i32 5
  %116 = ptrtoint ptr %resolution.i.i291.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %call21.i288.i, ptr %resolution.i.i291.i, align 4
  br label %sw.epilog59.sink.split.i

sw.bb32.i:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  %type33.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %117 = ptrtoint ptr %type33.i to i32
  call void @__asan_store1_noabort(i32 %117)
  store i8 3, ptr %type33.i, align 4
  %code34.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %118 = ptrtoint ptr %code34.i to i32
  call void @__asan_store2_noabort(i32 %118)
  store i16 8, ptr %code34.i, align 2
  %evbit.i = getelementptr inbounds %struct.input_dev, ptr %21, i32 0, i32 5
  tail call void @_set_bit(i32 noundef 3, ptr noundef %evbit.i) #8
  br label %sw.epilog59.sink.split.i

sw.bb38.i:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  %type15.i313.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %119 = ptrtoint ptr %type15.i313.i to i32
  call void @__asan_store1_noabort(i32 %119)
  store i8 1, ptr %type15.i313.i, align 4
  %code16.i314.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %120 = ptrtoint ptr %code16.i314.i to i32
  call void @__asan_store2_noabort(i32 %120)
  store i16 576, ptr %code16.i314.i, align 2
  tail call void @input_set_capability(ptr noundef %21, i32 noundef 1, i32 noundef 576) #8
  br label %sw.epilog59.sink.split.i

sw.bb41.i:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  %type15.i336.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %121 = ptrtoint ptr %type15.i336.i to i32
  call void @__asan_store1_noabort(i32 %121)
  store i8 1, ptr %type15.i336.i, align 4
  %code16.i337.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %122 = ptrtoint ptr %code16.i337.i to i32
  call void @__asan_store2_noabort(i32 %122)
  store i16 632, ptr %code16.i337.i, align 2
  tail call void @input_set_capability(ptr noundef %21, i32 noundef 1, i32 noundef 632) #8
  br label %sw.epilog59.sink.split.i

sw.bb44.i:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #10
  %type15.i359.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %123 = ptrtoint ptr %type15.i359.i to i32
  call void @__asan_store1_noabort(i32 %123)
  store i8 1, ptr %type15.i359.i, align 4
  %code16.i360.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %124 = ptrtoint ptr %code16.i360.i to i32
  call void @__asan_store2_noabort(i32 %124)
  store i16 579, ptr %code16.i360.i, align 2
  tail call void @input_set_capability(ptr noundef %21, i32 noundef 1, i32 noundef 579) #8
  br label %sw.epilog59.sink.split.i

sw.bb47.i:                                        ; preds = %if.then26
  %has_mode_change.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 25
  %125 = ptrtoint ptr %has_mode_change.i to i32
  call void @__asan_load1_noabort(i32 %125)
  %126 = load i8, ptr %has_mode_change.i, align 2, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %126)
  %tobool.not.i = icmp eq i8 %126, 0
  br i1 %tobool.not.i, label %if.then.i, label %sw.bb47.i.sw.epilog59.sink.split.i_crit_edge

sw.bb47.i.sw.epilog59.sink.split.i_crit_edge:     ; preds = %sw.bb47.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog59.sink.split.i

if.then.i:                                        ; preds = %sw.bb47.i
  call void @__sanitizer_cov_trace_pc() #10
  %127 = ptrtoint ptr %has_mode_change.i to i32
  call void @__asan_store1_noabort(i32 %127)
  store i8 1, ptr %has_mode_change.i, align 2
  %is_direct_mode.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 26
  %128 = ptrtoint ptr %is_direct_mode.i to i32
  call void @__asan_store1_noabort(i32 %128)
  store i8 1, ptr %is_direct_mode.i, align 1
  br label %sw.epilog59.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %sw.bb20.i, %wacom_numbered_button_to_key.exit.i
  %device_type17.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 10, i32 13
  %129 = ptrtoint ptr %device_type17.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %device_type17.i, align 4
  %or22.i = or i32 %130, 4
  store i32 %or22.i, ptr %device_type17.i, align 4
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.epilog.sink.split.i, %if.then26.sw.epilog.i_crit_edge
  %and.i = and i32 %call3.i128, -16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -15922928, i32 %and.i)
  %cond.i = icmp eq i32 %and.i, -15922928
  br i1 %cond.i, label %sw.bb51.i, label %sw.epilog.i.if.end79_crit_edge

sw.epilog.i.if.end79_crit_edge:                   ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

sw.bb51.i:                                        ; preds = %sw.epilog.i
  %numbered_buttons52.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 10, i32 8
  %131 = ptrtoint ptr %numbered_buttons52.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %numbered_buttons52.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %132)
  %cmp.i363.i = icmp slt i32 %132, 10
  br i1 %cmp.i363.i, label %if.then.i365.i, label %if.else.i367.i

if.then.i365.i:                                   ; preds = %sw.bb51.i
  call void @__sanitizer_cov_trace_pc() #10
  %add.i364.i = add nsw i32 %132, 256
  br label %wacom_numbered_button_to_key.exit375.i

if.else.i367.i:                                   ; preds = %sw.bb51.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %132)
  %cmp1.i366.i = icmp ult i32 %132, 16
  br i1 %cmp1.i366.i, label %if.then2.i369.i, label %if.else4.i373.i

if.then2.i369.i:                                  ; preds = %if.else.i367.i
  call void @__sanitizer_cov_trace_pc() #10
  %add3.i368.i = add nuw nsw i32 %132, 294
  br label %wacom_numbered_button_to_key.exit375.i

if.else4.i373.i:                                  ; preds = %if.else.i367.i
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %132)
  %cmp5.i370.i = icmp ult i32 %132, 18
  %add8.i371.i = add nuw i32 %132, 278
  %spec.select.i372.i = select i1 %cmp5.i370.i, i32 %add8.i371.i, i32 0
  br label %wacom_numbered_button_to_key.exit375.i

wacom_numbered_button_to_key.exit375.i:           ; preds = %if.else4.i373.i, %if.then2.i369.i, %if.then.i365.i
  %retval.0.i374.i = phi i32 [ %add.i364.i, %if.then.i365.i ], [ %add3.i368.i, %if.then2.i369.i ], [ %spec.select.i372.i, %if.else4.i373.i ]
  %conv54.i = trunc i32 %retval.0.i374.i to i16
  %conv.i380.i = and i32 %retval.0.i374.i, 65535
  %type15.i396.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %133 = ptrtoint ptr %type15.i396.i to i32
  call void @__asan_store1_noabort(i32 %133)
  store i8 1, ptr %type15.i396.i, align 4
  %code16.i397.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %134 = ptrtoint ptr %code16.i397.i to i32
  call void @__asan_store2_noabort(i32 %134)
  store i16 %conv54.i, ptr %code16.i397.i, align 2
  tail call void @input_set_capability(ptr noundef %21, i32 noundef 1, i32 noundef %conv.i380.i) #8
  %135 = ptrtoint ptr %numbered_buttons52.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %numbered_buttons52.i, align 4
  %inc56.i = add i32 %136, 1
  store i32 %inc56.i, ptr %numbered_buttons52.i, align 4
  br label %sw.epilog59.sink.split.i

sw.epilog59.sink.split.i:                         ; preds = %wacom_numbered_button_to_key.exit375.i, %if.then.i, %sw.bb47.i.sw.epilog59.sink.split.i_crit_edge, %sw.bb44.i, %sw.bb41.i, %sw.bb38.i, %sw.bb32.i, %if.then.i.i292.i, %if.end14.i286.i.sw.epilog59.sink.split.i_crit_edge, %if.then.i.i263.i, %if.end14.i257.i.sw.epilog59.sink.split.i_crit_edge, %if.then.i.i234.i, %if.end14.i228.i.sw.epilog59.sink.split.i_crit_edge, %if.then.i.i181.i, %if.end14.i175.i.sw.epilog59.sink.split.i_crit_edge, %if.then.i.i152.i, %if.end14.i146.i.sw.epilog59.sink.split.i_crit_edge, %if.then.i.i.i, %if.end14.i.i.sw.epilog59.sink.split.i_crit_edge
  %device_type57.i = getelementptr inbounds %struct.wacom, ptr %19, i32 0, i32 2, i32 10, i32 13
  %137 = ptrtoint ptr %device_type57.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %device_type57.i, align 4
  %or.i130 = or i32 %138, 4
  store i32 %or.i130, ptr %device_type57.i, align 4
  br label %if.end79

if.else27:                                        ; preds = %if.else
  %logical = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 1
  %139 = ptrtoint ptr %logical to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %logical, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 852000, i32 %140)
  %cmp28 = icmp eq i32 %140, 852000
  call void @__sanitizer_cov_trace_const_cmp4(i32 852000, i32 %16)
  %cmp31 = icmp eq i32 %16, 852000
  %or.cond = select i1 %cmp28, i1 true, i1 %cmp31
  call void @__sanitizer_cov_trace_const_cmp4(i32 851970, i32 %16)
  %cmp34 = icmp eq i32 %16, 851970
  %or.cond120 = select i1 %or.cond, i1 true, i1 %cmp34
  br i1 %or.cond120, label %if.else27.if.then53_crit_edge, label %lor.lhs.false35

if.else27.if.then53_crit_edge:                    ; preds = %if.else27
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then53

lor.lhs.false35:                                  ; preds = %if.else27
  %141 = ptrtoint ptr %application to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %application, align 4
  %143 = zext i32 %142 to i64
  call void @__sanitizer_cov_trace_switch(i64 %143, ptr @__sancov_gen_cov_switch_values.201)
  switch i32 %142, label %if.else54 [
    i32 851970, label %lor.lhs.false35.if.then53_crit_edge
    i32 851969, label %lor.lhs.false35.if.then53_crit_edge168
    i32 -15925246, label %lor.lhs.false35.if.then53_crit_edge169
    i32 -15925247, label %lor.lhs.false35.if.then53_crit_edge170
    i32 -16187390, label %lor.lhs.false35.if.then53_crit_edge171
    i32 -15663102, label %lor.lhs.false35.if.then53_crit_edge172
  ]

lor.lhs.false35.if.then53_crit_edge172:           ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then53

lor.lhs.false35.if.then53_crit_edge171:           ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then53

lor.lhs.false35.if.then53_crit_edge170:           ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then53

lor.lhs.false35.if.then53_crit_edge169:           ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then53

lor.lhs.false35.if.then53_crit_edge168:           ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then53

lor.lhs.false35.if.then53_crit_edge:              ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then53

if.then53:                                        ; preds = %lor.lhs.false35.if.then53_crit_edge, %lor.lhs.false35.if.then53_crit_edge168, %lor.lhs.false35.if.then53_crit_edge169, %lor.lhs.false35.if.then53_crit_edge170, %lor.lhs.false35.if.then53_crit_edge171, %lor.lhs.false35.if.then53_crit_edge172, %if.else27.if.then53_crit_edge
  %144 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %driver_data.i.i, align 4
  %pen_input.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 12
  %146 = ptrtoint ptr %pen_input.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %pen_input.i, align 8
  %call3.i132 = tail call i32 @wacom_equivalent_usage(i32 noundef %8) #8
  %148 = zext i32 %call3.i132 to i64
  call void @__sanitizer_cov_trace_switch(i64 %148, ptr @__sancov_gen_cov_switch_values.202)
  switch i32 %call3.i132, label %if.then53.if.end79_crit_edge [
    i32 65584, label %if.end14.i.i146
    i32 65585, label %if.end14.i105.i
    i32 -15924942, label %if.then53.sw.bb5.i_crit_edge
    i32 65586, label %if.then53.sw.bb5.i_crit_edge173
    i32 852016, label %if.end14.i163.i
    i32 852018, label %sw.bb7.i
    i32 852028, label %sw.bb8.i
    i32 852029, label %if.end14.i238.i
    i32 852030, label %if.end14.i267.i
    i32 852033, label %if.end14.i296.i
    i32 852037, label %sw.bb12.i
    i32 852034, label %sw.bb13.i
    i32 852036, label %sw.bb14.i149
    i32 852058, label %sw.bb15.i
    i32 852059, label %sw.bb17.i
    i32 -15925194, label %sw.bb18.i
    i32 -15925156, label %sw.bb21.i
    i32 -15921917, label %sw.bb23.i
  ]

if.then53.sw.bb5.i_crit_edge173:                  ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5.i

if.then53.sw.bb5.i_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5.i

if.then53.if.end79_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.end14.i.i146:                                  ; preds = %if.then53
  %logical_minimum.i.i133 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %149 = ptrtoint ptr %logical_minimum.i.i133 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %logical_minimum.i.i133, align 4
  %logical_maximum.i.i134 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %151 = ptrtoint ptr %logical_maximum.i.i134 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %logical_maximum.i.i134, align 4
  %driver_data.i.i.i.i135 = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 40, i32 8
  %153 = ptrtoint ptr %driver_data.i.i.i.i135 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %driver_data.i.i.i.i135, align 4
  %offset_left.i.i136 = getelementptr inbounds %struct.wacom, ptr %154, i32 0, i32 2, i32 10, i32 9
  %offset_right.i.i137 = getelementptr inbounds %struct.wacom, ptr %154, i32 0, i32 2, i32 10, i32 10
  %155 = ptrtoint ptr %offset_left.i.i136 to i32
  call void @__asan_load4_noabort(i32 %155)
  %.pn.i.i138 = load i32, ptr %offset_left.i.i136, align 4
  %fmin.1.ph.i.i139 = add i32 %.pn.i.i138, %150
  %156 = ptrtoint ptr %offset_right.i.i137 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %offset_right.i.i137, align 4
  %sub.i.i140 = sub i32 %152, %157
  %type15.i.i141 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %158 = ptrtoint ptr %type15.i.i141 to i32
  call void @__asan_store1_noabort(i32 %158)
  store i8 3, ptr %type15.i.i141, align 4
  %code16.i.i142 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %159 = ptrtoint ptr %code16.i.i142 to i32
  call void @__asan_store2_noabort(i32 %159)
  store i16 0, ptr %code16.i.i142, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 0, i32 noundef %fmin.1.ph.i.i139, i32 noundef %sub.i.i140, i32 noundef 4, i32 noundef 0) #8
  %call21.i.i143 = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i.i144 = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %160 = ptrtoint ptr %absinfo.i.i.i144 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %absinfo.i.i.i144, align 8
  %tobool.not.i.i.i145 = icmp eq ptr %161, null
  br i1 %tobool.not.i.i.i145, label %if.end14.i.i146.if.end79_crit_edge, label %if.then.i.i.i148

if.end14.i.i146.if.end79_crit_edge:               ; preds = %if.end14.i.i146
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i.i148:                                 ; preds = %if.end14.i.i146
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i.i147 = getelementptr %struct.input_absinfo, ptr %161, i32 0, i32 5
  %162 = ptrtoint ptr %resolution.i.i.i147 to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 %call21.i.i143, ptr %resolution.i.i.i147, align 4
  br label %if.end79

if.end14.i105.i:                                  ; preds = %if.then53
  %logical_minimum.i85.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %163 = ptrtoint ptr %logical_minimum.i85.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %logical_minimum.i85.i, align 4
  %logical_maximum.i86.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %165 = ptrtoint ptr %logical_maximum.i86.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %logical_maximum.i86.i, align 4
  %driver_data.i.i.i84.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 40, i32 8
  %167 = ptrtoint ptr %driver_data.i.i.i84.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %driver_data.i.i.i84.i, align 4
  %offset_top.i92.i = getelementptr inbounds %struct.wacom, ptr %168, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i93.i = getelementptr inbounds %struct.wacom, ptr %168, i32 0, i32 2, i32 10, i32 12
  %169 = ptrtoint ptr %offset_top.i92.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %.pn.i97.i = load i32, ptr %offset_top.i92.i, align 4
  %fmin.1.ph.i98.i = add i32 %.pn.i97.i, %164
  %170 = ptrtoint ptr %offset_bottom.i93.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %offset_bottom.i93.i, align 4
  %sub.i99.i = sub i32 %166, %171
  %type15.i103.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %172 = ptrtoint ptr %type15.i103.i to i32
  call void @__asan_store1_noabort(i32 %172)
  store i8 3, ptr %type15.i103.i, align 4
  %code16.i104.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %173 = ptrtoint ptr %code16.i104.i to i32
  call void @__asan_store2_noabort(i32 %173)
  store i16 1, ptr %code16.i104.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 1, i32 noundef %fmin.1.ph.i98.i, i32 noundef %sub.i99.i, i32 noundef 4, i32 noundef 0) #8
  %call21.i107.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 1) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i108.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %174 = ptrtoint ptr %absinfo.i.i108.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %absinfo.i.i108.i, align 8
  %tobool.not.i.i109.i = icmp eq ptr %175, null
  br i1 %tobool.not.i.i109.i, label %if.end14.i105.i.if.end79_crit_edge, label %if.then.i.i111.i

if.end14.i105.i.if.end79_crit_edge:               ; preds = %if.end14.i105.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i111.i:                                 ; preds = %if.end14.i105.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i110.i = getelementptr %struct.input_absinfo, ptr %175, i32 1, i32 5
  %176 = ptrtoint ptr %resolution.i.i110.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store i32 %call21.i107.i, ptr %resolution.i.i110.i, align 4
  br label %if.end79

sw.bb5.i:                                         ; preds = %if.then53.sw.bb5.i_crit_edge, %if.then53.sw.bb5.i_crit_edge173
  %driver_data.i.i.i113.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 40, i32 8
  %177 = ptrtoint ptr %driver_data.i.i.i113.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %driver_data.i.i.i113.i, align 4
  %logical_minimum.i114.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %179 = ptrtoint ptr %logical_minimum.i114.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %logical_minimum.i114.i, align 4
  %logical_maximum.i115.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %181 = ptrtoint ptr %logical_maximum.i115.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %logical_maximum.i115.i, align 4
  %183 = zext i32 %call3.i132 to i64
  call void @__sanitizer_cov_trace_switch(i64 %183, ptr @__sancov_gen_cov_switch_values.203)
  switch i32 %call3.i132, label %sw.bb5.i.if.end14.i134.i_crit_edge [
    i32 65584, label %if.end8.thread.i120.i
    i32 65585, label %if.then11.i123.i
  ]

sw.bb5.i.if.end14.i134.i_crit_edge:               ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end14.i134.i

if.end8.thread.i120.i:                            ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_left.i118.i = getelementptr inbounds %struct.wacom, ptr %178, i32 0, i32 2, i32 10, i32 9
  %offset_right.i119.i = getelementptr inbounds %struct.wacom, ptr %178, i32 0, i32 2, i32 10, i32 10
  br label %if.end14.sink.split.i129.i

if.then11.i123.i:                                 ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_top.i121.i = getelementptr inbounds %struct.wacom, ptr %178, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i122.i = getelementptr inbounds %struct.wacom, ptr %178, i32 0, i32 2, i32 10, i32 12
  br label %if.end14.sink.split.i129.i

if.end14.sink.split.i129.i:                       ; preds = %if.then11.i123.i, %if.end8.thread.i120.i
  %offset_right.sink.i124.i = phi ptr [ %offset_right.i119.i, %if.end8.thread.i120.i ], [ %offset_bottom.i122.i, %if.then11.i123.i ]
  %.pn.in.i125.i = phi ptr [ %offset_left.i118.i, %if.end8.thread.i120.i ], [ %offset_top.i121.i, %if.then11.i123.i ]
  %184 = ptrtoint ptr %.pn.in.i125.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %.pn.i126.i = load i32, ptr %.pn.in.i125.i, align 4
  %fmin.1.ph.i127.i = add i32 %.pn.i126.i, %180
  %185 = ptrtoint ptr %offset_right.sink.i124.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %offset_right.sink.i124.i, align 4
  %sub.i128.i = sub i32 %182, %186
  br label %if.end14.i134.i

if.end14.i134.i:                                  ; preds = %if.end14.sink.split.i129.i, %sw.bb5.i.if.end14.i134.i_crit_edge
  %fmin.1.i130.i = phi i32 [ %180, %sw.bb5.i.if.end14.i134.i_crit_edge ], [ %fmin.1.ph.i127.i, %if.end14.sink.split.i129.i ]
  %fmax.1.i131.i = phi i32 [ %182, %sw.bb5.i.if.end14.i134.i_crit_edge ], [ %sub.i128.i, %if.end14.sink.split.i129.i ]
  %type15.i132.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %187 = ptrtoint ptr %type15.i132.i to i32
  call void @__asan_store1_noabort(i32 %187)
  store i8 3, ptr %type15.i132.i, align 4
  %code16.i133.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %188 = ptrtoint ptr %code16.i133.i to i32
  call void @__asan_store2_noabort(i32 %188)
  store i16 25, ptr %code16.i133.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 25, i32 noundef %fmin.1.i130.i, i32 noundef %fmax.1.i131.i, i32 noundef 0, i32 noundef 0) #8
  %call21.i136.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 25) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i137.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %189 = ptrtoint ptr %absinfo.i.i137.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %absinfo.i.i137.i, align 8
  %tobool.not.i.i138.i = icmp eq ptr %190, null
  br i1 %tobool.not.i.i138.i, label %if.end14.i134.i.if.end79_crit_edge, label %if.then.i.i140.i

if.end14.i134.i.if.end79_crit_edge:               ; preds = %if.end14.i134.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i140.i:                                 ; preds = %if.end14.i134.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i139.i = getelementptr %struct.input_absinfo, ptr %190, i32 25, i32 5
  %191 = ptrtoint ptr %resolution.i.i139.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 %call21.i136.i, ptr %resolution.i.i139.i, align 4
  br label %if.end79

if.end14.i163.i:                                  ; preds = %if.then53
  %logical_minimum.i143.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %192 = ptrtoint ptr %logical_minimum.i143.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %logical_minimum.i143.i, align 4
  %logical_maximum.i144.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %194 = ptrtoint ptr %logical_maximum.i144.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %logical_maximum.i144.i, align 4
  %type15.i161.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %196 = ptrtoint ptr %type15.i161.i to i32
  call void @__asan_store1_noabort(i32 %196)
  store i8 3, ptr %type15.i161.i, align 4
  %code16.i162.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %197 = ptrtoint ptr %code16.i162.i to i32
  call void @__asan_store2_noabort(i32 %197)
  store i16 24, ptr %code16.i162.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 24, i32 noundef %193, i32 noundef %195, i32 noundef 0, i32 noundef 0) #8
  %call21.i165.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 24) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i166.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %198 = ptrtoint ptr %absinfo.i.i166.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %absinfo.i.i166.i, align 8
  %tobool.not.i.i167.i = icmp eq ptr %199, null
  br i1 %tobool.not.i.i167.i, label %if.end14.i163.i.if.end79_crit_edge, label %if.then.i.i169.i

if.end14.i163.i.if.end79_crit_edge:               ; preds = %if.end14.i163.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i169.i:                                 ; preds = %if.end14.i163.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i168.i = getelementptr %struct.input_absinfo, ptr %199, i32 24, i32 5
  %200 = ptrtoint ptr %resolution.i.i168.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %call21.i165.i, ptr %resolution.i.i168.i, align 4
  br label %if.end79

sw.bb7.i:                                         ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  %type15.i190.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %201 = ptrtoint ptr %type15.i190.i to i32
  call void @__asan_store1_noabort(i32 %201)
  store i8 1, ptr %type15.i190.i, align 4
  %code16.i191.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %202 = ptrtoint ptr %code16.i191.i to i32
  call void @__asan_store2_noabort(i32 %202)
  store i16 320, ptr %code16.i191.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 320) #8
  br label %if.end79

sw.bb8.i:                                         ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  %type15.i213.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %203 = ptrtoint ptr %type15.i213.i to i32
  call void @__asan_store1_noabort(i32 %203)
  store i8 1, ptr %type15.i213.i, align 4
  %code16.i214.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %204 = ptrtoint ptr %code16.i214.i to i32
  call void @__asan_store2_noabort(i32 %204)
  store i16 321, ptr %code16.i214.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 321) #8
  br label %if.end79

if.end14.i238.i:                                  ; preds = %if.then53
  %logical_minimum.i218.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %205 = ptrtoint ptr %logical_minimum.i218.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %logical_minimum.i218.i, align 4
  %logical_maximum.i219.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %207 = ptrtoint ptr %logical_maximum.i219.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %logical_maximum.i219.i, align 4
  %type15.i236.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %209 = ptrtoint ptr %type15.i236.i to i32
  call void @__asan_store1_noabort(i32 %209)
  store i8 3, ptr %type15.i236.i, align 4
  %code16.i237.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %210 = ptrtoint ptr %code16.i237.i to i32
  call void @__asan_store2_noabort(i32 %210)
  store i16 26, ptr %code16.i237.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 26, i32 noundef %206, i32 noundef %208, i32 noundef 0, i32 noundef 0) #8
  %call21.i240.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 26) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i241.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %211 = ptrtoint ptr %absinfo.i.i241.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %absinfo.i.i241.i, align 8
  %tobool.not.i.i242.i = icmp eq ptr %212, null
  br i1 %tobool.not.i.i242.i, label %if.end14.i238.i.if.end79_crit_edge, label %if.then.i.i244.i

if.end14.i238.i.if.end79_crit_edge:               ; preds = %if.end14.i238.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i244.i:                                 ; preds = %if.end14.i238.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i243.i = getelementptr %struct.input_absinfo, ptr %212, i32 26, i32 5
  %213 = ptrtoint ptr %resolution.i.i243.i to i32
  call void @__asan_store4_noabort(i32 %213)
  store i32 %call21.i240.i, ptr %resolution.i.i243.i, align 4
  br label %if.end79

if.end14.i267.i:                                  ; preds = %if.then53
  %logical_minimum.i247.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %214 = ptrtoint ptr %logical_minimum.i247.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %logical_minimum.i247.i, align 4
  %logical_maximum.i248.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %216 = ptrtoint ptr %logical_maximum.i248.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %logical_maximum.i248.i, align 4
  %type15.i265.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %218 = ptrtoint ptr %type15.i265.i to i32
  call void @__asan_store1_noabort(i32 %218)
  store i8 3, ptr %type15.i265.i, align 4
  %code16.i266.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %219 = ptrtoint ptr %code16.i266.i to i32
  call void @__asan_store2_noabort(i32 %219)
  store i16 27, ptr %code16.i266.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 27, i32 noundef %215, i32 noundef %217, i32 noundef 0, i32 noundef 0) #8
  %call21.i269.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 27) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i270.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %220 = ptrtoint ptr %absinfo.i.i270.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %absinfo.i.i270.i, align 8
  %tobool.not.i.i271.i = icmp eq ptr %221, null
  br i1 %tobool.not.i.i271.i, label %if.end14.i267.i.if.end79_crit_edge, label %if.then.i.i273.i

if.end14.i267.i.if.end79_crit_edge:               ; preds = %if.end14.i267.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i273.i:                                 ; preds = %if.end14.i267.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i272.i = getelementptr %struct.input_absinfo, ptr %221, i32 27, i32 5
  %222 = ptrtoint ptr %resolution.i.i272.i to i32
  call void @__asan_store4_noabort(i32 %222)
  store i32 %call21.i269.i, ptr %resolution.i.i272.i, align 4
  br label %if.end79

if.end14.i296.i:                                  ; preds = %if.then53
  %logical_minimum.i276.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %223 = ptrtoint ptr %logical_minimum.i276.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %logical_minimum.i276.i, align 4
  %logical_maximum.i277.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %225 = ptrtoint ptr %logical_maximum.i277.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %logical_maximum.i277.i, align 4
  %type15.i294.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %227 = ptrtoint ptr %type15.i294.i to i32
  call void @__asan_store1_noabort(i32 %227)
  store i8 3, ptr %type15.i294.i, align 4
  %code16.i295.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %228 = ptrtoint ptr %code16.i295.i to i32
  call void @__asan_store2_noabort(i32 %228)
  store i16 2, ptr %code16.i295.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 2, i32 noundef %224, i32 noundef %226, i32 noundef 0, i32 noundef 0) #8
  %call21.i298.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 5) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i299.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %229 = ptrtoint ptr %absinfo.i.i299.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %absinfo.i.i299.i, align 8
  %tobool.not.i.i300.i = icmp eq ptr %230, null
  br i1 %tobool.not.i.i300.i, label %if.end14.i296.i.if.end79_crit_edge, label %if.then.i.i302.i

if.end14.i296.i.if.end79_crit_edge:               ; preds = %if.end14.i296.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i302.i:                                 ; preds = %if.end14.i296.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i301.i = getelementptr %struct.input_absinfo, ptr %230, i32 2, i32 5
  %231 = ptrtoint ptr %resolution.i.i301.i to i32
  call void @__asan_store4_noabort(i32 %231)
  store i32 %call21.i298.i, ptr %resolution.i.i301.i, align 4
  br label %if.end79

sw.bb12.i:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 321) #8
  %type15.i323.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %232 = ptrtoint ptr %type15.i323.i to i32
  call void @__asan_store1_noabort(i32 %232)
  store i8 1, ptr %type15.i323.i, align 4
  %code16.i324.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %233 = ptrtoint ptr %code16.i324.i to i32
  call void @__asan_store2_noabort(i32 %233)
  store i16 330, ptr %code16.i324.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 330) #8
  br label %if.end79

sw.bb13.i:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 320) #8
  %type15.i346.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %234 = ptrtoint ptr %type15.i346.i to i32
  call void @__asan_store1_noabort(i32 %234)
  store i8 1, ptr %type15.i346.i, align 4
  %code16.i347.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %235 = ptrtoint ptr %code16.i347.i to i32
  call void @__asan_store2_noabort(i32 %235)
  store i16 330, ptr %code16.i347.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 330) #8
  br label %if.end79

sw.bb14.i149:                                     ; preds = %if.then53
  %barrelswitch.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 6
  %236 = ptrtoint ptr %barrelswitch.i to i32
  call void @__asan_store1_noabort(i32 %236)
  store i8 1, ptr %barrelswitch.i, align 4
  %quirks.i.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 10, i32 23
  %237 = ptrtoint ptr %quirks.i.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %quirks.i.i, align 4
  %and.i.i = and i32 %238, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true3.i.i, label %sw.bb14.i149.wacom_set_barrel_switch3_usage.exit.i_crit_edge

sw.bb14.i149.wacom_set_barrel_switch3_usage.exit.i_crit_edge: ; preds = %sw.bb14.i149
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit.i

land.lhs.true3.i.i:                               ; preds = %sw.bb14.i149
  %barrelswitch2.i.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 7
  %239 = ptrtoint ptr %barrelswitch2.i.i to i32
  call void @__asan_load1_noabort(i32 %239)
  %240 = load i8, ptr %barrelswitch2.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %240)
  %tobool5.not.i.i = icmp eq i8 %240, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true3.i.i.wacom_set_barrel_switch3_usage.exit.i_crit_edge, label %land.lhs.true6.i.i

land.lhs.true3.i.i.wacom_set_barrel_switch3_usage.exit.i_crit_edge: ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true3.i.i
  %serialhi.i.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 8
  %241 = ptrtoint ptr %serialhi.i.i to i32
  call void @__asan_load1_noabort(i32 %241)
  %242 = load i8, ptr %serialhi.i.i, align 2, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %242)
  %tobool8.not.i.i = icmp eq i8 %242, 0
  br i1 %tobool8.not.i.i, label %land.lhs.true6.i.i.wacom_set_barrel_switch3_usage.exit.i_crit_edge, label %if.then.i.i150

land.lhs.true6.i.i.wacom_set_barrel_switch3_usage.exit.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit.i

if.then.i.i150:                                   ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 329) #8
  br label %wacom_set_barrel_switch3_usage.exit.i

wacom_set_barrel_switch3_usage.exit.i:            ; preds = %if.then.i.i150, %land.lhs.true6.i.i.wacom_set_barrel_switch3_usage.exit.i_crit_edge, %land.lhs.true3.i.i.wacom_set_barrel_switch3_usage.exit.i_crit_edge, %sw.bb14.i149.wacom_set_barrel_switch3_usage.exit.i_crit_edge
  %type15.i369.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %243 = ptrtoint ptr %type15.i369.i to i32
  call void @__asan_store1_noabort(i32 %243)
  store i8 1, ptr %type15.i369.i, align 4
  %code16.i370.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %244 = ptrtoint ptr %code16.i370.i to i32
  call void @__asan_store2_noabort(i32 %244)
  store i16 331, ptr %code16.i370.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 331) #8
  br label %if.end79

sw.bb15.i:                                        ; preds = %if.then53
  %barrelswitch2.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 7
  %245 = ptrtoint ptr %barrelswitch2.i to i32
  call void @__asan_store1_noabort(i32 %245)
  store i8 1, ptr %barrelswitch2.i, align 1
  %quirks.i374.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 10, i32 23
  %246 = ptrtoint ptr %quirks.i374.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %quirks.i374.i, align 4
  %and.i375.i = and i32 %247, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i375.i)
  %tobool.not.i376.i = icmp eq i32 %and.i375.i, 0
  br i1 %tobool.not.i376.i, label %land.lhs.true.i379.i, label %sw.bb15.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge

sw.bb15.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge: ; preds = %sw.bb15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit387.i

land.lhs.true.i379.i:                             ; preds = %sw.bb15.i
  %barrelswitch.i377.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 6
  %248 = ptrtoint ptr %barrelswitch.i377.i to i32
  call void @__asan_load1_noabort(i32 %248)
  %249 = load i8, ptr %barrelswitch.i377.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %249)
  %tobool2.not.i378.i = icmp eq i8 %249, 0
  br i1 %tobool2.not.i378.i, label %land.lhs.true.i379.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge, label %land.lhs.true6.i385.i

land.lhs.true.i379.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge: ; preds = %land.lhs.true.i379.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit387.i

land.lhs.true6.i385.i:                            ; preds = %land.lhs.true.i379.i
  %serialhi.i383.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 8
  %250 = ptrtoint ptr %serialhi.i383.i to i32
  call void @__asan_load1_noabort(i32 %250)
  %251 = load i8, ptr %serialhi.i383.i, align 2, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %251)
  %tobool8.not.i384.i = icmp eq i8 %251, 0
  br i1 %tobool8.not.i384.i, label %land.lhs.true6.i385.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge, label %if.then.i386.i

land.lhs.true6.i385.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge: ; preds = %land.lhs.true6.i385.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit387.i

if.then.i386.i:                                   ; preds = %land.lhs.true6.i385.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 329) #8
  br label %wacom_set_barrel_switch3_usage.exit387.i

wacom_set_barrel_switch3_usage.exit387.i:         ; preds = %if.then.i386.i, %land.lhs.true6.i385.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge, %land.lhs.true.i379.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge, %sw.bb15.i.wacom_set_barrel_switch3_usage.exit387.i_crit_edge
  %type15.i407.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %252 = ptrtoint ptr %type15.i407.i to i32
  call void @__asan_store1_noabort(i32 %252)
  store i8 1, ptr %type15.i407.i, align 4
  %code16.i408.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %253 = ptrtoint ptr %code16.i408.i to i32
  call void @__asan_store2_noabort(i32 %253)
  store i16 332, ptr %code16.i408.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 332) #8
  br label %if.end79

sw.bb17.i:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  %quirks.i151 = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 10, i32 23
  %254 = ptrtoint ptr %quirks.i151 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %quirks.i151, align 4
  %or.i152 = or i32 %255, 16
  store i32 %or.i152, ptr %quirks.i151, align 4
  %type15.i430.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %256 = ptrtoint ptr %type15.i430.i to i32
  call void @__asan_store1_noabort(i32 %256)
  store i8 4, ptr %type15.i430.i, align 4
  %code16.i431.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %257 = ptrtoint ptr %code16.i431.i to i32
  call void @__asan_store2_noabort(i32 %257)
  store i16 0, ptr %code16.i431.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 4, i32 noundef 0) #8
  br label %if.end79

sw.bb18.i:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #10
  %quirks19.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 10, i32 23
  %258 = ptrtoint ptr %quirks19.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %quirks19.i, align 4
  %or20.i = or i32 %259, 2
  store i32 %or20.i, ptr %quirks19.i, align 4
  %type15.i453.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %260 = ptrtoint ptr %type15.i453.i to i32
  call void @__asan_store1_noabort(i32 %260)
  store i8 1, ptr %type15.i453.i, align 4
  %code16.i454.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %261 = ptrtoint ptr %code16.i454.i to i32
  call void @__asan_store2_noabort(i32 %261)
  store i16 320, ptr %code16.i454.i, align 2
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 320) #8
  br label %if.end79

sw.bb21.i:                                        ; preds = %if.then53
  %serialhi.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 8
  %262 = ptrtoint ptr %serialhi.i to i32
  call void @__asan_store1_noabort(i32 %262)
  store i8 1, ptr %serialhi.i, align 2
  %quirks.i458.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 10, i32 23
  %263 = ptrtoint ptr %quirks.i458.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load i32, ptr %quirks.i458.i, align 4
  %and.i459.i = and i32 %264, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i459.i)
  %tobool.not.i460.i = icmp eq i32 %and.i459.i, 0
  br i1 %tobool.not.i460.i, label %land.lhs.true.i463.i, label %sw.bb21.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge

sw.bb21.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge: ; preds = %sw.bb21.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit471.i

land.lhs.true.i463.i:                             ; preds = %sw.bb21.i
  %barrelswitch.i461.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 6
  %265 = ptrtoint ptr %barrelswitch.i461.i to i32
  call void @__asan_load1_noabort(i32 %265)
  %266 = load i8, ptr %barrelswitch.i461.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %266)
  %tobool2.not.i462.i = icmp eq i8 %266, 0
  br i1 %tobool2.not.i462.i, label %land.lhs.true.i463.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge, label %land.lhs.true3.i466.i

land.lhs.true.i463.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge: ; preds = %land.lhs.true.i463.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit471.i

land.lhs.true3.i466.i:                            ; preds = %land.lhs.true.i463.i
  %barrelswitch2.i464.i = getelementptr inbounds %struct.wacom, ptr %145, i32 0, i32 2, i32 22, i32 7
  %267 = ptrtoint ptr %barrelswitch2.i464.i to i32
  call void @__asan_load1_noabort(i32 %267)
  %268 = load i8, ptr %barrelswitch2.i464.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %268)
  %tobool5.not.i465.i = icmp eq i8 %268, 0
  br i1 %tobool5.not.i465.i, label %land.lhs.true3.i466.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge, label %if.then.i470.i

land.lhs.true3.i466.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge: ; preds = %land.lhs.true3.i466.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_set_barrel_switch3_usage.exit471.i

if.then.i470.i:                                   ; preds = %land.lhs.true3.i466.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 329) #8
  br label %wacom_set_barrel_switch3_usage.exit471.i

wacom_set_barrel_switch3_usage.exit471.i:         ; preds = %if.then.i470.i, %land.lhs.true3.i466.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge, %land.lhs.true.i463.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge, %sw.bb21.i.wacom_set_barrel_switch3_usage.exit471.i_crit_edge
  %driver_data.i.i.i472.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 40, i32 8
  %269 = ptrtoint ptr %driver_data.i.i.i472.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %driver_data.i.i.i472.i, align 4
  %logical_minimum.i473.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %271 = ptrtoint ptr %logical_minimum.i473.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %logical_minimum.i473.i, align 4
  %logical_maximum.i474.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %273 = ptrtoint ptr %logical_maximum.i474.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %logical_maximum.i474.i, align 4
  %275 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load i32, ptr %usage, align 4
  %call3.i475.i = tail call i32 @wacom_equivalent_usage(i32 noundef %276) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 852033, i32 %call3.i475.i)
  %cmp.i476.i = icmp eq i32 %call3.i475.i, 852033
  %277 = zext i32 %call3.i475.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %277, ptr @__sancov_gen_cov_switch_values.204)
  switch i32 %call3.i475.i, label %wacom_set_barrel_switch3_usage.exit471.i.if.end14.i493.i_crit_edge [
    i32 65584, label %if.end8.thread.i479.i
    i32 65585, label %if.then11.i482.i
  ]

wacom_set_barrel_switch3_usage.exit471.i.if.end14.i493.i_crit_edge: ; preds = %wacom_set_barrel_switch3_usage.exit471.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end14.i493.i

if.end8.thread.i479.i:                            ; preds = %wacom_set_barrel_switch3_usage.exit471.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_left.i477.i = getelementptr inbounds %struct.wacom, ptr %270, i32 0, i32 2, i32 10, i32 9
  %offset_right.i478.i = getelementptr inbounds %struct.wacom, ptr %270, i32 0, i32 2, i32 10, i32 10
  br label %if.end14.sink.split.i488.i

if.then11.i482.i:                                 ; preds = %wacom_set_barrel_switch3_usage.exit471.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_top.i480.i = getelementptr inbounds %struct.wacom, ptr %270, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i481.i = getelementptr inbounds %struct.wacom, ptr %270, i32 0, i32 2, i32 10, i32 12
  br label %if.end14.sink.split.i488.i

if.end14.sink.split.i488.i:                       ; preds = %if.then11.i482.i, %if.end8.thread.i479.i
  %offset_right.sink.i483.i = phi ptr [ %offset_right.i478.i, %if.end8.thread.i479.i ], [ %offset_bottom.i481.i, %if.then11.i482.i ]
  %.pn.in.i484.i = phi ptr [ %offset_left.i477.i, %if.end8.thread.i479.i ], [ %offset_top.i480.i, %if.then11.i482.i ]
  %278 = ptrtoint ptr %.pn.in.i484.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %.pn.i485.i = load i32, ptr %.pn.in.i484.i, align 4
  %fmin.1.ph.i486.i = add i32 %.pn.i485.i, %272
  %279 = ptrtoint ptr %offset_right.sink.i483.i to i32
  call void @__asan_load4_noabort(i32 %279)
  %280 = load i32, ptr %offset_right.sink.i483.i, align 4
  %sub.i487.i = sub i32 %274, %280
  br label %if.end14.i493.i

if.end14.i493.i:                                  ; preds = %if.end14.sink.split.i488.i, %wacom_set_barrel_switch3_usage.exit471.i.if.end14.i493.i_crit_edge
  %fmin.1.i489.i = phi i32 [ %272, %wacom_set_barrel_switch3_usage.exit471.i.if.end14.i493.i_crit_edge ], [ %fmin.1.ph.i486.i, %if.end14.sink.split.i488.i ]
  %fmax.1.i490.i = phi i32 [ %274, %wacom_set_barrel_switch3_usage.exit471.i.if.end14.i493.i_crit_edge ], [ %sub.i487.i, %if.end14.sink.split.i488.i ]
  %type15.i491.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %281 = ptrtoint ptr %type15.i491.i to i32
  call void @__asan_store1_noabort(i32 %281)
  store i8 3, ptr %type15.i491.i, align 4
  %code16.i492.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %282 = ptrtoint ptr %code16.i492.i to i32
  call void @__asan_store2_noabort(i32 %282)
  store i16 40, ptr %code16.i492.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 40, i32 noundef %fmin.1.i489.i, i32 noundef %fmax.1.i490.i, i32 noundef 0, i32 noundef 0) #8
  %conv20.i494.i = select i1 %cmp.i476.i, i16 5, i16 40
  %call21.i495.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext %conv20.i494.i) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i496.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %283 = ptrtoint ptr %absinfo.i.i496.i to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load ptr, ptr %absinfo.i.i496.i, align 8
  %tobool.not.i.i497.i = icmp eq ptr %284, null
  br i1 %tobool.not.i.i497.i, label %if.end14.i493.i.if.end79_crit_edge, label %if.then.i.i499.i

if.end14.i493.i.if.end79_crit_edge:               ; preds = %if.end14.i493.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i499.i:                                 ; preds = %if.end14.i493.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i498.i = getelementptr %struct.input_absinfo, ptr %284, i32 40, i32 5
  %285 = ptrtoint ptr %resolution.i.i498.i to i32
  call void @__asan_store4_noabort(i32 %285)
  store i32 %call21.i495.i, ptr %resolution.i.i498.i, align 4
  br label %if.end79

sw.bb23.i:                                        ; preds = %if.then53
  tail call void @input_set_capability(ptr noundef %147, i32 noundef 1, i32 noundef 324) #8
  %driver_data.i.i.i501.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 40, i32 8
  %286 = ptrtoint ptr %driver_data.i.i.i501.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %driver_data.i.i.i501.i, align 4
  %logical_minimum.i502.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %288 = ptrtoint ptr %logical_minimum.i502.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %logical_minimum.i502.i, align 4
  %logical_maximum.i503.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %290 = ptrtoint ptr %logical_maximum.i503.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %logical_maximum.i503.i, align 4
  %292 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %usage, align 4
  %call3.i504.i = tail call i32 @wacom_equivalent_usage(i32 noundef %293) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 852033, i32 %call3.i504.i)
  %cmp.i505.i = icmp eq i32 %call3.i504.i, 852033
  %294 = zext i32 %call3.i504.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %294, ptr @__sancov_gen_cov_switch_values.205)
  switch i32 %call3.i504.i, label %sw.bb23.i.if.end14.i522.i_crit_edge [
    i32 65584, label %if.end8.thread.i508.i
    i32 65585, label %if.then11.i511.i
  ]

sw.bb23.i.if.end14.i522.i_crit_edge:              ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end14.i522.i

if.end8.thread.i508.i:                            ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_left.i506.i = getelementptr inbounds %struct.wacom, ptr %287, i32 0, i32 2, i32 10, i32 9
  %offset_right.i507.i = getelementptr inbounds %struct.wacom, ptr %287, i32 0, i32 2, i32 10, i32 10
  br label %if.end14.sink.split.i517.i

if.then11.i511.i:                                 ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #10
  %offset_top.i509.i = getelementptr inbounds %struct.wacom, ptr %287, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i510.i = getelementptr inbounds %struct.wacom, ptr %287, i32 0, i32 2, i32 10, i32 12
  br label %if.end14.sink.split.i517.i

if.end14.sink.split.i517.i:                       ; preds = %if.then11.i511.i, %if.end8.thread.i508.i
  %offset_right.sink.i512.i = phi ptr [ %offset_right.i507.i, %if.end8.thread.i508.i ], [ %offset_bottom.i510.i, %if.then11.i511.i ]
  %.pn.in.i513.i = phi ptr [ %offset_left.i506.i, %if.end8.thread.i508.i ], [ %offset_top.i509.i, %if.then11.i511.i ]
  %295 = ptrtoint ptr %.pn.in.i513.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %.pn.i514.i = load i32, ptr %.pn.in.i513.i, align 4
  %fmin.1.ph.i515.i = add i32 %.pn.i514.i, %289
  %296 = ptrtoint ptr %offset_right.sink.i512.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %offset_right.sink.i512.i, align 4
  %sub.i516.i = sub i32 %291, %297
  br label %if.end14.i522.i

if.end14.i522.i:                                  ; preds = %if.end14.sink.split.i517.i, %sw.bb23.i.if.end14.i522.i_crit_edge
  %fmin.1.i518.i = phi i32 [ %289, %sw.bb23.i.if.end14.i522.i_crit_edge ], [ %fmin.1.ph.i515.i, %if.end14.sink.split.i517.i ]
  %fmax.1.i519.i = phi i32 [ %291, %sw.bb23.i.if.end14.i522.i_crit_edge ], [ %sub.i516.i, %if.end14.sink.split.i517.i ]
  %type15.i520.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %298 = ptrtoint ptr %type15.i520.i to i32
  call void @__asan_store1_noabort(i32 %298)
  store i8 3, ptr %type15.i520.i, align 4
  %code16.i521.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %299 = ptrtoint ptr %code16.i521.i to i32
  call void @__asan_store2_noabort(i32 %299)
  store i16 8, ptr %code16.i521.i, align 2
  tail call void @input_set_abs_params(ptr noundef %147, i32 noundef 8, i32 noundef %fmin.1.i518.i, i32 noundef %fmax.1.i519.i, i32 noundef 0, i32 noundef 0) #8
  %conv20.i523.i = select i1 %cmp.i505.i, i16 5, i16 8
  %call21.i524.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext %conv20.i523.i) #8
  tail call void @input_alloc_absinfo(ptr noundef %147) #8
  %absinfo.i.i525.i = getelementptr inbounds %struct.input_dev, ptr %147, i32 0, i32 26
  %300 = ptrtoint ptr %absinfo.i.i525.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %absinfo.i.i525.i, align 8
  %tobool.not.i.i526.i = icmp eq ptr %301, null
  br i1 %tobool.not.i.i526.i, label %if.end14.i522.i.if.end79_crit_edge, label %if.then.i.i528.i

if.end14.i522.i.if.end79_crit_edge:               ; preds = %if.end14.i522.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then.i.i528.i:                                 ; preds = %if.end14.i522.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i527.i = getelementptr %struct.input_absinfo, ptr %301, i32 8, i32 5
  %302 = ptrtoint ptr %resolution.i.i527.i to i32
  call void @__asan_store4_noabort(i32 %302)
  store i32 %call21.i524.i, ptr %resolution.i.i527.i, align 4
  br label %if.end79

if.else54:                                        ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %140)
  %cmp56 = icmp eq i32 %140, 852002
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %16)
  %cmp59 = icmp eq i32 %16, 852002
  %or.cond121 = select i1 %cmp56, i1 true, i1 %cmp59
  call void @__sanitizer_cov_trace_const_cmp4(i32 851972, i32 %142)
  %cmp62 = icmp eq i32 %142, 851972
  %or.cond122 = select i1 %or.cond121, i1 true, i1 %cmp62
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16187375, i32 %142)
  %cmp65 = icmp eq i32 %142, -16187375
  %or.cond123 = select i1 %or.cond122, i1 true, i1 %cmp65
  call void @__sanitizer_cov_trace_const_cmp4(i32 -15663087, i32 %142)
  %cmp68 = icmp eq i32 %142, -15663087
  %or.cond124 = select i1 %or.cond123, i1 true, i1 %cmp68
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16777211, i32 %142)
  %cmp71 = icmp eq i32 %142, -16777211
  %or.cond125 = select i1 %or.cond124, i1 true, i1 %cmp71
  call void @__sanitizer_cov_trace_const_cmp4(i32 851973, i32 %142)
  %cmp74 = icmp eq i32 %142, 851973
  %or.cond126 = select i1 %or.cond125, i1 true, i1 %cmp74
  br i1 %or.cond126, label %if.then75, label %if.else54.if.end79_crit_edge

if.else54.if.end79_crit_edge:                     ; preds = %if.else54
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end79

if.then75:                                        ; preds = %if.else54
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_wac_finger_usage_mapping(ptr noundef %hdev, ptr noundef %field, ptr noundef %usage)
  br label %if.end79

if.end79:                                         ; preds = %if.then75, %if.else54.if.end79_crit_edge, %if.then.i.i528.i, %if.end14.i522.i.if.end79_crit_edge, %if.then.i.i499.i, %if.end14.i493.i.if.end79_crit_edge, %sw.bb18.i, %sw.bb17.i, %wacom_set_barrel_switch3_usage.exit387.i, %wacom_set_barrel_switch3_usage.exit.i, %sw.bb13.i, %sw.bb12.i, %if.then.i.i302.i, %if.end14.i296.i.if.end79_crit_edge, %if.then.i.i273.i, %if.end14.i267.i.if.end79_crit_edge, %if.then.i.i244.i, %if.end14.i238.i.if.end79_crit_edge, %sw.bb8.i, %sw.bb7.i, %if.then.i.i169.i, %if.end14.i163.i.if.end79_crit_edge, %if.then.i.i140.i, %if.end14.i134.i.if.end79_crit_edge, %if.then.i.i111.i, %if.end14.i105.i.if.end79_crit_edge, %if.then.i.i.i148, %if.end14.i.i146.if.end79_crit_edge, %if.then53.if.end79_crit_edge, %sw.epilog59.sink.split.i, %sw.epilog.i.if.end79_crit_edge, %sw.bb.i, %if.then18.if.end79_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_wac_finger_usage_mapping(ptr nocapture noundef readonly %hdev, ptr noundef %field, ptr noundef %usage) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %touch_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 13
  %2 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %touch_input, align 4
  %touch_max2 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 24
  %4 = ptrtoint ptr %touch_max2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %touch_max2, align 4
  %6 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usage, align 4
  %call3 = tail call i32 @wacom_equivalent_usage(i32 noundef %7)
  %8 = zext i32 %call3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.206)
  switch i32 %call3, label %entry.sw.epilog_crit_edge [
    i32 65584, label %sw.bb
    i32 65585, label %sw.bb4
    i32 852040, label %entry.sw.bb9_crit_edge
    i32 852041, label %entry.sw.bb9_crit_edge219
    i32 852034, label %sw.bb10
    i32 852052, label %sw.bb11
    i32 852049, label %sw.bb14
  ]

entry.sw.bb9_crit_edge219:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb9

entry.sw.bb9_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb9

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp = icmp eq i32 %5, 1
  %logical_minimum.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %9 = ptrtoint ptr %logical_minimum.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %logical_minimum.i, align 4
  %logical_maximum.i = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %11 = ptrtoint ptr %logical_maximum.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %logical_maximum.i, align 4
  %driver_data.i.i.i = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 40, i32 8
  %13 = ptrtoint ptr %driver_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %driver_data.i.i.i, align 4
  %offset_left.i = getelementptr inbounds %struct.wacom, ptr %14, i32 0, i32 2, i32 10, i32 9
  %offset_right.i = getelementptr inbounds %struct.wacom, ptr %14, i32 0, i32 2, i32 10, i32 10
  %15 = ptrtoint ptr %offset_left.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn.i = load i32, ptr %offset_left.i, align 4
  %fmin.1.ph.i = add i32 %.pn.i, %10
  %16 = ptrtoint ptr %offset_right.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %offset_right.i, align 4
  %sub.i = sub i32 %12, %17
  %type15.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %18 = ptrtoint ptr %type15.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 3, ptr %type15.i, align 4
  %code16.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  br i1 %cmp, label %if.end14.i, label %if.end14.i72

if.end14.i:                                       ; preds = %sw.bb
  %19 = ptrtoint ptr %code16.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 0, ptr %code16.i, align 2
  tail call void @input_set_abs_params(ptr noundef %3, i32 noundef 0, i32 noundef %fmin.1.ph.i, i32 noundef %sub.i, i32 noundef 4, i32 noundef 0) #8
  %call21.i = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %3) #8
  %absinfo.i.i = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %20 = ptrtoint ptr %absinfo.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %absinfo.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i, label %if.end14.i.sw.epilog_crit_edge, label %if.then.i.i

if.end14.i.sw.epilog_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.then.i.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i = getelementptr %struct.input_absinfo, ptr %21, i32 0, i32 5
  %22 = ptrtoint ptr %resolution.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %call21.i, ptr %resolution.i.i, align 4
  br label %sw.epilog

if.end14.i72:                                     ; preds = %sw.bb
  %23 = ptrtoint ptr %code16.i to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 53, ptr %code16.i, align 2
  tail call void @input_set_abs_params(ptr noundef %3, i32 noundef 53, i32 noundef %fmin.1.ph.i, i32 noundef %sub.i, i32 noundef 4, i32 noundef 0) #8
  %call21.i74 = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 53) #8
  tail call void @input_alloc_absinfo(ptr noundef %3) #8
  %absinfo.i.i75 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %24 = ptrtoint ptr %absinfo.i.i75 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %absinfo.i.i75, align 8
  %tobool.not.i.i76 = icmp eq ptr %25, null
  br i1 %tobool.not.i.i76, label %if.end14.i72.sw.epilog_crit_edge, label %if.then.i.i78

if.end14.i72.sw.epilog_crit_edge:                 ; preds = %if.end14.i72
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.then.i.i78:                                    ; preds = %if.end14.i72
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i77 = getelementptr %struct.input_absinfo, ptr %25, i32 53, i32 5
  %26 = ptrtoint ptr %resolution.i.i77 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %call21.i74, ptr %resolution.i.i77, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp5 = icmp eq i32 %5, 1
  %logical_minimum.i81 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %27 = ptrtoint ptr %logical_minimum.i81 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %logical_minimum.i81, align 4
  %logical_maximum.i82 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %29 = ptrtoint ptr %logical_maximum.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %logical_maximum.i82, align 4
  %driver_data.i.i.i80 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 40, i32 8
  %31 = ptrtoint ptr %driver_data.i.i.i80 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %driver_data.i.i.i80, align 4
  %offset_top.i88 = getelementptr inbounds %struct.wacom, ptr %32, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i89 = getelementptr inbounds %struct.wacom, ptr %32, i32 0, i32 2, i32 10, i32 12
  %33 = ptrtoint ptr %offset_top.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn.i93 = load i32, ptr %offset_top.i88, align 4
  %fmin.1.ph.i94 = add i32 %.pn.i93, %28
  %34 = ptrtoint ptr %offset_bottom.i89 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %offset_bottom.i89, align 4
  %sub.i95 = sub i32 %30, %35
  %type15.i99 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %36 = ptrtoint ptr %type15.i99 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 3, ptr %type15.i99, align 4
  %code16.i100 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  br i1 %cmp5, label %if.end14.i101, label %if.end14.i130

if.end14.i101:                                    ; preds = %sw.bb4
  %37 = ptrtoint ptr %code16.i100 to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 1, ptr %code16.i100, align 2
  tail call void @input_set_abs_params(ptr noundef %3, i32 noundef 1, i32 noundef %fmin.1.ph.i94, i32 noundef %sub.i95, i32 noundef 4, i32 noundef 0) #8
  %call21.i103 = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 1) #8
  tail call void @input_alloc_absinfo(ptr noundef %3) #8
  %absinfo.i.i104 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %38 = ptrtoint ptr %absinfo.i.i104 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %absinfo.i.i104, align 8
  %tobool.not.i.i105 = icmp eq ptr %39, null
  br i1 %tobool.not.i.i105, label %if.end14.i101.sw.epilog_crit_edge, label %if.then.i.i107

if.end14.i101.sw.epilog_crit_edge:                ; preds = %if.end14.i101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.then.i.i107:                                   ; preds = %if.end14.i101
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i106 = getelementptr %struct.input_absinfo, ptr %39, i32 1, i32 5
  %40 = ptrtoint ptr %resolution.i.i106 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %call21.i103, ptr %resolution.i.i106, align 4
  br label %sw.epilog

if.end14.i130:                                    ; preds = %sw.bb4
  %41 = ptrtoint ptr %code16.i100 to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 54, ptr %code16.i100, align 2
  tail call void @input_set_abs_params(ptr noundef %3, i32 noundef 54, i32 noundef %fmin.1.ph.i94, i32 noundef %sub.i95, i32 noundef 4, i32 noundef 0) #8
  %call21.i132 = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 54) #8
  tail call void @input_alloc_absinfo(ptr noundef %3) #8
  %absinfo.i.i133 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %42 = ptrtoint ptr %absinfo.i.i133 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %absinfo.i.i133, align 8
  %tobool.not.i.i134 = icmp eq ptr %43, null
  br i1 %tobool.not.i.i134, label %if.end14.i130.sw.epilog_crit_edge, label %if.then.i.i136

if.end14.i130.sw.epilog_crit_edge:                ; preds = %if.end14.i130
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.then.i.i136:                                   ; preds = %if.end14.i130
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i135 = getelementptr %struct.input_absinfo, ptr %43, i32 54, i32 5
  %44 = ptrtoint ptr %resolution.i.i135 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %call21.i132, ptr %resolution.i.i135, align 4
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry.sw.bb9_crit_edge, %entry.sw.bb9_crit_edge219
  %driver_data.i.i.i138 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 40, i32 8
  %logical_minimum.i139 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %45 = ptrtoint ptr %logical_minimum.i139 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %logical_minimum.i139, align 4
  %logical_maximum.i140 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %47 = ptrtoint ptr %logical_maximum.i140 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %logical_maximum.i140, align 4
  %type15.i157 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %49 = ptrtoint ptr %type15.i157 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 3, ptr %type15.i157, align 4
  %code16.i158 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %50 = ptrtoint ptr %code16.i158 to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 48, ptr %code16.i158, align 2
  tail call void @input_set_abs_params(ptr noundef %3, i32 noundef 48, i32 noundef %46, i32 noundef %48, i32 noundef 0, i32 noundef 0) #8
  %call21.i161 = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext 48) #8
  tail call void @input_alloc_absinfo(ptr noundef %3) #8
  %absinfo.i.i162 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %51 = ptrtoint ptr %absinfo.i.i162 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %absinfo.i.i162, align 8
  %tobool.not.i.i163 = icmp eq ptr %52, null
  br i1 %tobool.not.i.i163, label %sw.bb9.wacom_map_usage.exit166_crit_edge, label %if.then.i.i165

sw.bb9.wacom_map_usage.exit166_crit_edge:         ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_map_usage.exit166

if.then.i.i165:                                   ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i164 = getelementptr %struct.input_absinfo, ptr %52, i32 48, i32 5
  %53 = ptrtoint ptr %resolution.i.i164 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %call21.i161, ptr %resolution.i.i164, align 4
  br label %wacom_map_usage.exit166

wacom_map_usage.exit166:                          ; preds = %if.then.i.i165, %sw.bb9.wacom_map_usage.exit166_crit_edge
  %54 = ptrtoint ptr %driver_data.i.i.i138 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %driver_data.i.i.i138, align 4
  %56 = ptrtoint ptr %logical_minimum.i139 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %logical_minimum.i139, align 4
  %58 = ptrtoint ptr %logical_maximum.i140 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %logical_maximum.i140, align 4
  %60 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %usage, align 4
  %call3.i170 = tail call i32 @wacom_equivalent_usage(i32 noundef %61) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 852033, i32 %call3.i170)
  %cmp.i171 = icmp eq i32 %call3.i170, 852033
  %62 = zext i32 %call3.i170 to i64
  call void @__sanitizer_cov_trace_switch(i64 %62, ptr @__sancov_gen_cov_switch_values.207)
  switch i32 %call3.i170, label %wacom_map_usage.exit166.if.end14.i188_crit_edge [
    i32 65584, label %if.end8.thread.i174
    i32 65585, label %if.then11.i177
  ]

wacom_map_usage.exit166.if.end14.i188_crit_edge:  ; preds = %wacom_map_usage.exit166
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end14.i188

if.end8.thread.i174:                              ; preds = %wacom_map_usage.exit166
  call void @__sanitizer_cov_trace_pc() #10
  %offset_left.i172 = getelementptr inbounds %struct.wacom, ptr %55, i32 0, i32 2, i32 10, i32 9
  %offset_right.i173 = getelementptr inbounds %struct.wacom, ptr %55, i32 0, i32 2, i32 10, i32 10
  br label %if.end14.sink.split.i183

if.then11.i177:                                   ; preds = %wacom_map_usage.exit166
  call void @__sanitizer_cov_trace_pc() #10
  %offset_top.i175 = getelementptr inbounds %struct.wacom, ptr %55, i32 0, i32 2, i32 10, i32 11
  %offset_bottom.i176 = getelementptr inbounds %struct.wacom, ptr %55, i32 0, i32 2, i32 10, i32 12
  br label %if.end14.sink.split.i183

if.end14.sink.split.i183:                         ; preds = %if.then11.i177, %if.end8.thread.i174
  %offset_right.sink.i178 = phi ptr [ %offset_right.i173, %if.end8.thread.i174 ], [ %offset_bottom.i176, %if.then11.i177 ]
  %.pn.in.i179 = phi ptr [ %offset_left.i172, %if.end8.thread.i174 ], [ %offset_top.i175, %if.then11.i177 ]
  %63 = ptrtoint ptr %.pn.in.i179 to i32
  call void @__asan_load4_noabort(i32 %63)
  %.pn.i180 = load i32, ptr %.pn.in.i179, align 4
  %fmin.1.ph.i181 = add i32 %.pn.i180, %57
  %64 = ptrtoint ptr %offset_right.sink.i178 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %offset_right.sink.i178, align 4
  %sub.i182 = sub i32 %59, %65
  br label %if.end14.i188

if.end14.i188:                                    ; preds = %if.end14.sink.split.i183, %wacom_map_usage.exit166.if.end14.i188_crit_edge
  %fmin.1.i184 = phi i32 [ %57, %wacom_map_usage.exit166.if.end14.i188_crit_edge ], [ %fmin.1.ph.i181, %if.end14.sink.split.i183 ]
  %fmax.1.i185 = phi i32 [ %59, %wacom_map_usage.exit166.if.end14.i188_crit_edge ], [ %sub.i182, %if.end14.sink.split.i183 ]
  %66 = ptrtoint ptr %type15.i157 to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 3, ptr %type15.i157, align 4
  %67 = ptrtoint ptr %code16.i158 to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 49, ptr %code16.i158, align 2
  tail call void @input_set_abs_params(ptr noundef %3, i32 noundef 49, i32 noundef %fmin.1.i184, i32 noundef %fmax.1.i185, i32 noundef 0, i32 noundef 0) #8
  %conv20.i189 = select i1 %cmp.i171, i16 5, i16 49
  %call21.i190 = tail call i32 @hidinput_calc_abs_res(ptr noundef %field, i16 noundef zeroext %conv20.i189) #8
  tail call void @input_alloc_absinfo(ptr noundef %3) #8
  %68 = ptrtoint ptr %absinfo.i.i162 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %absinfo.i.i162, align 8
  %tobool.not.i.i192 = icmp eq ptr %69, null
  br i1 %tobool.not.i.i192, label %if.end14.i188.wacom_map_usage.exit195_crit_edge, label %if.then.i.i194

if.end14.i188.wacom_map_usage.exit195_crit_edge:  ; preds = %if.end14.i188
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_map_usage.exit195

if.then.i.i194:                                   ; preds = %if.end14.i188
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i193 = getelementptr %struct.input_absinfo, ptr %69, i32 49, i32 5
  %70 = ptrtoint ptr %resolution.i.i193 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %call21.i190, ptr %resolution.i.i193, align 4
  br label %wacom_map_usage.exit195

wacom_map_usage.exit195:                          ; preds = %if.then.i.i194, %if.end14.i188.wacom_map_usage.exit195_crit_edge
  tail call void @input_set_abs_params(ptr noundef %3, i32 noundef 52, i32 noundef 0, i32 noundef 1, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb10:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %type15.i215 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %71 = ptrtoint ptr %type15.i215 to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 1, ptr %type15.i215, align 4
  %code16.i216 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %72 = ptrtoint ptr %code16.i216 to i32
  call void @__asan_store2_noabort(i32 %72)
  store i16 330, ptr %code16.i216, align 2
  tail call void @input_set_capability(ptr noundef %3, i32 noundef 1, i32 noundef 330) #8
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %report = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 17
  %73 = ptrtoint ptr %report to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %report, align 4
  %id = getelementptr inbounds %struct.hid_report, ptr %74, i32 0, i32 2
  %75 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %id, align 4
  %cc_report = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 16
  %77 = ptrtoint ptr %cc_report to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %cc_report, align 4
  %index = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 18
  %78 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %index, align 4
  %cc_index = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 17
  %80 = ptrtoint ptr %cc_index to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %79, ptr %cc_index, align 4
  %usage_index = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 2
  %81 = ptrtoint ptr %usage_index to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %usage_index, align 4
  %cc_value_index = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 18
  %83 = ptrtoint ptr %cc_value_index to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %82, ptr %cc_value_index, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %entry
  %logical_maximum = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %84 = ptrtoint ptr %logical_maximum to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %logical_maximum, align 4
  %logical_minimum = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %86 = ptrtoint ptr %logical_minimum to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %logical_minimum, align 4
  %sub = sub i32 %85, %87
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %5)
  %cmp15 = icmp ult i32 %sub, %5
  br i1 %cmp15, label %if.then16, label %sw.bb14.sw.epilog_crit_edge

sw.bb14.sw.epilog_crit_edge:                      ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.then16:                                        ; preds = %sw.bb14
  call void @__sanitizer_cov_trace_pc() #10
  %88 = ptrtoint ptr %logical_maximum to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 255, ptr %logical_maximum, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then16, %sw.bb14.sw.epilog_crit_edge, %sw.bb11, %sw.bb10, %wacom_map_usage.exit195, %if.then.i.i136, %if.end14.i130.sw.epilog_crit_edge, %if.then.i.i107, %if.end14.i101.sw.epilog_crit_edge, %if.then.i.i78, %if.end14.i72.sw.epilog_crit_edge, %if.then.i.i, %if.end14.i.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wacom_wac_event(ptr noundef %hdev, ptr nocapture noundef readonly %field, ptr nocapture noundef readonly %usage, i32 noundef %value) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %type = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 5
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 53, i32 %3)
  %cmp.not = icmp eq i32 %3, 53
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  %logical_maximum = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %4 = ptrtoint ptr %logical_maximum to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %logical_maximum, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %value)
  %cmp1 = icmp slt i32 %5, %value
  br i1 %cmp1, label %if.end.cleanup_crit_edge, label %lor.lhs.false

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %logical_minimum = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 11
  %6 = ptrtoint ptr %logical_minimum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %logical_minimum, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %value)
  %cmp2 = icmp sgt i32 %7, %value
  br i1 %cmp2, label %lor.lhs.false.cleanup_crit_edge, label %if.end4

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end4:                                          ; preds = %lor.lhs.false
  %8 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %usage, align 4
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.208)
  switch i32 %9, label %if.else [
    i32 852027, label %if.end4.if.then12_crit_edge
    i32 -15924220, label %if.end4.if.then12_crit_edge126
    i32 -15924165, label %if.end4.if.then12_crit_edge127
  ]

if.end4.if.then12_crit_edge127:                   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12

if.end4.if.then12_crit_edge126:                   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12

if.end4.if.then12_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12

if.then12:                                        ; preds = %if.end4.if.then12_crit_edge, %if.end4.if.then12_crit_edge126, %if.end4.if.then12_crit_edge127
  %call2.i = tail call i32 @wacom_equivalent_usage(i32 noundef %9) #8
  %11 = zext i32 %call2.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.209)
  switch i32 %call2.i, label %if.then12.cleanup_crit_edge [
    i32 852027, label %sw.bb.i
    i32 -15924165, label %sw.bb7.i
    i32 -15924220, label %sw.bb19.i
  ]

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

sw.bb.i:                                          ; preds = %if.then12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %cmp.i = icmp eq i32 %value, 0
  br i1 %cmp.i, label %sw.bb.i.sw.epilog.sink.split.i_crit_edge, label %if.else.i

sw.bb.i.sw.epilog.sink.split.i_crit_edge:         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog.sink.split.i

if.else.i:                                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #10
  %mul.i = mul i32 %value, 100
  %sub.i = sub i32 %5, %7
  %div.i = sdiv i32 %mul.i, %sub.i
  %battery_capacity.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 23
  %12 = ptrtoint ptr %battery_capacity.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %div.i, ptr %battery_capacity.i, align 4
  br label %sw.epilog.sink.split.sink.split.i

sw.bb7.i:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #10
  %mul8.i = mul i32 %value, 100
  %sub11.i = sub i32 %5, %7
  %div12.i = sdiv i32 %mul8.i, %sub11.i
  %battery_capacity14.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 23
  %13 = ptrtoint ptr %battery_capacity14.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %div12.i, ptr %battery_capacity14.i, align 4
  br label %sw.epilog.sink.split.sink.split.i

sw.bb19.i:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #10
  %bat_charging.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 24
  %14 = ptrtoint ptr %bat_charging.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %value, ptr %bat_charging.i, align 4
  %ps_connected.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 26
  %15 = ptrtoint ptr %ps_connected.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %value, ptr %ps_connected.i, align 4
  br label %sw.epilog.sink.split.sink.split.i

sw.epilog.sink.split.sink.split.i:                ; preds = %sw.bb19.i, %sw.bb7.i, %if.else.i
  %bat_connected16.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 25
  %16 = ptrtoint ptr %bat_connected16.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %bat_connected16.i, align 4
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %sw.epilog.sink.split.sink.split.i, %sw.bb.i.sw.epilog.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 0, %sw.bb.i.sw.epilog.sink.split.i_crit_edge ], [ -1, %sw.epilog.sink.split.sink.split.i ]
  %bat_status.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 22
  %17 = ptrtoint ptr %bat_status.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %.sink.i, ptr %bat_status.i, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end4
  %18 = ptrtoint ptr %field to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %field, align 4
  %20 = zext i32 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.210)
  switch i32 %19, label %if.else.if.else22_crit_edge [
    i32 852025, label %if.else.land.lhs.true_crit_edge
    i32 -15925191, label %if.else.land.lhs.true_crit_edge128
    i32 -15921133, label %if.else.land.lhs.true_crit_edge129
  ]

if.else.land.lhs.true_crit_edge129:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true

if.else.land.lhs.true_crit_edge128:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true

if.else.land.lhs.true_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true

if.else.if.else22_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else22

land.lhs.true:                                    ; preds = %if.else.land.lhs.true_crit_edge, %if.else.land.lhs.true_crit_edge128, %if.else.land.lhs.true_crit_edge129
  %pad_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 14
  %21 = ptrtoint ptr %pad_input to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pad_input, align 8
  %tobool.not = icmp eq ptr %22, null
  br i1 %tobool.not, label %land.lhs.true.if.else22_crit_edge, label %if.then21

land.lhs.true.if.else22_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else22

if.then21:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_wac_pad_event(ptr noundef %hdev, ptr noundef %field, ptr noundef %usage, i32 noundef %value)
  br label %cleanup

if.else22:                                        ; preds = %land.lhs.true.if.else22_crit_edge, %if.else.if.else22_crit_edge
  %logical = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 1
  %23 = ptrtoint ptr %logical to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %logical, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 852000, i32 %24)
  %cmp23 = icmp eq i32 %24, 852000
  br i1 %cmp23, label %if.else22.land.lhs.true47_crit_edge, label %lor.lhs.false24

if.else22.land.lhs.true47_crit_edge:              ; preds = %if.else22
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false24:                                  ; preds = %if.else22
  %25 = zext i32 %19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.211)
  switch i32 %19, label %lor.lhs.false30 [
    i32 852000, label %lor.lhs.false24.land.lhs.true47_crit_edge
    i32 851970, label %lor.lhs.false24.land.lhs.true47_crit_edge130
  ]

lor.lhs.false24.land.lhs.true47_crit_edge130:     ; preds = %lor.lhs.false24
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false24.land.lhs.true47_crit_edge:        ; preds = %lor.lhs.false24
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false30:                                  ; preds = %lor.lhs.false24
  %application = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 2
  %26 = ptrtoint ptr %application to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %application, align 4
  %28 = zext i32 %27 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.212)
  switch i32 %27, label %lor.lhs.false30.if.else51_crit_edge [
    i32 851970, label %lor.lhs.false30.land.lhs.true47_crit_edge
    i32 851969, label %lor.lhs.false30.land.lhs.true47_crit_edge131
    i32 -15925246, label %lor.lhs.false30.land.lhs.true47_crit_edge132
    i32 -15925247, label %lor.lhs.false30.land.lhs.true47_crit_edge133
    i32 -16187390, label %lor.lhs.false30.land.lhs.true47_crit_edge134
    i32 -15663102, label %lor.lhs.false30.land.lhs.true47_crit_edge135
  ]

lor.lhs.false30.land.lhs.true47_crit_edge135:     ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false30.land.lhs.true47_crit_edge134:     ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false30.land.lhs.true47_crit_edge133:     ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false30.land.lhs.true47_crit_edge132:     ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false30.land.lhs.true47_crit_edge131:     ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false30.land.lhs.true47_crit_edge:        ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true47

lor.lhs.false30.if.else51_crit_edge:              ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else51

land.lhs.true47:                                  ; preds = %lor.lhs.false30.land.lhs.true47_crit_edge, %lor.lhs.false30.land.lhs.true47_crit_edge131, %lor.lhs.false30.land.lhs.true47_crit_edge132, %lor.lhs.false30.land.lhs.true47_crit_edge133, %lor.lhs.false30.land.lhs.true47_crit_edge134, %lor.lhs.false30.land.lhs.true47_crit_edge135, %lor.lhs.false24.land.lhs.true47_crit_edge, %lor.lhs.false24.land.lhs.true47_crit_edge130, %if.else22.land.lhs.true47_crit_edge
  %pen_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 12
  %29 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pen_input, align 8
  %tobool49.not = icmp eq ptr %30, null
  br i1 %tobool49.not, label %land.lhs.true47.if.else51_crit_edge, label %if.then50

land.lhs.true47.if.else51_crit_edge:              ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else51

if.then50:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_wac_pen_event(ptr noundef %hdev, ptr noundef %field, ptr noundef %usage, i32 noundef %value)
  br label %cleanup

if.else51:                                        ; preds = %land.lhs.true47.if.else51_crit_edge, %lor.lhs.false30.if.else51_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %24)
  %cmp53 = icmp eq i32 %24, 852002
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %19)
  %cmp56 = icmp eq i32 %19, 852002
  %or.cond = select i1 %cmp53, i1 true, i1 %cmp56
  br i1 %or.cond, label %if.else51.land.lhs.true72_crit_edge, label %lor.lhs.false57

if.else51.land.lhs.true72_crit_edge:              ; preds = %if.else51
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true72

lor.lhs.false57:                                  ; preds = %if.else51
  %application58 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 2
  %31 = ptrtoint ptr %application58 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %application58, align 4
  %33 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.213)
  switch i32 %32, label %lor.lhs.false57.cleanup_crit_edge [
    i32 851972, label %lor.lhs.false57.land.lhs.true72_crit_edge
    i32 -16187375, label %lor.lhs.false57.land.lhs.true72_crit_edge136
    i32 -15663087, label %lor.lhs.false57.land.lhs.true72_crit_edge137
    i32 -16777211, label %lor.lhs.false57.land.lhs.true72_crit_edge138
    i32 851973, label %lor.lhs.false57.land.lhs.true72_crit_edge139
  ]

lor.lhs.false57.land.lhs.true72_crit_edge139:     ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true72

lor.lhs.false57.land.lhs.true72_crit_edge138:     ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true72

lor.lhs.false57.land.lhs.true72_crit_edge137:     ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true72

lor.lhs.false57.land.lhs.true72_crit_edge136:     ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true72

lor.lhs.false57.land.lhs.true72_crit_edge:        ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true72

lor.lhs.false57.cleanup_crit_edge:                ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true72:                                  ; preds = %lor.lhs.false57.land.lhs.true72_crit_edge, %lor.lhs.false57.land.lhs.true72_crit_edge136, %lor.lhs.false57.land.lhs.true72_crit_edge137, %lor.lhs.false57.land.lhs.true72_crit_edge138, %lor.lhs.false57.land.lhs.true72_crit_edge139, %if.else51.land.lhs.true72_crit_edge
  %touch_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 13
  %34 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %touch_input, align 4
  %tobool74.not = icmp eq ptr %35, null
  br i1 %tobool74.not, label %land.lhs.true72.cleanup_crit_edge, label %if.then75

land.lhs.true72.cleanup_crit_edge:                ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then75:                                        ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_wac_finger_event(ptr noundef %hdev, ptr noundef %field, ptr noundef %usage, i32 noundef %value)
  br label %cleanup

cleanup:                                          ; preds = %if.then75, %land.lhs.true72.cleanup_crit_edge, %lor.lhs.false57.cleanup_crit_edge, %if.then50, %if.then21, %sw.epilog.sink.split.i, %if.then12.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_wac_pad_event(ptr nocapture noundef readonly %hdev, ptr nocapture noundef readonly %field, ptr nocapture noundef readonly %usage, i32 noundef %value) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %pad_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 14
  %2 = ptrtoint ptr %pad_input to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pad_input, align 8
  %4 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %usage, align 4
  %call3 = tail call i32 @wacom_equivalent_usage(i32 noundef %5)
  %type = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp ne i8 %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -15922816, i32 %call3)
  %cmp.not = icmp eq i32 %call3, -15922816
  %or.cond = select i1 %tobool.not, i1 true, i1 %cmp.not
  br i1 %or.cond, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = ptrtoint ptr %field to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %field, align 4
  %call4 = tail call i32 @wacom_equivalent_usage(i32 noundef %9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 852025, i32 %call4)
  %cmp5 = icmp ne i32 %call4, 852025
  call void @__sanitizer_cov_trace_const_cmp4(i32 -15924936, i32 %5)
  %cmp8.not = icmp eq i32 %5, -15924936
  %or.cond247 = or i1 %cmp8.not, %cmp5
  br i1 %or.cond247, label %if.end.if.end13_crit_edge, label %if.then9

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end13

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %inrange_state = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 3
  %10 = ptrtoint ptr %inrange_state to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %inrange_state, align 1, !range !727
  %12 = zext i8 %11 to i32
  %or = or i32 %12, %value
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or)
  %tobool11 = icmp ne i32 %or, 0
  %frombool = zext i1 %tobool11 to i8
  %13 = ptrtoint ptr %inrange_state to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %frombool, ptr %inrange_state, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.end.if.end13_crit_edge
  %14 = zext i32 %call3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.214)
  switch i32 %call3, label %if.end13.if.then135_crit_edge [
    i32 -15924936, label %sw.bb
    i32 -15924935, label %sw.bb86
    i32 -15922815, label %if.end13.sw.bb93_crit_edge
    i32 -15924140, label %if.end13.sw.bb93_crit_edge250
    i32 -15922816, label %sw.bb120
    i32 -15922795, label %for.cond.preheader
  ]

if.end13.sw.bb93_crit_edge250:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb93

if.end13.sw.bb93_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb93

if.end13.if.then135_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then135

for.cond.preheader:                               ; preds = %if.end13
  %count = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 12, i32 1
  %15 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp132248.not = icmp eq i32 %16, 0
  br i1 %cmp132248.not, label %for.cond.preheader.if.then135_crit_edge, label %for.body.lr.ph

for.cond.preheader.if.then135_crit_edge:          ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then135

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %numbered_buttons = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 8
  br label %for.body

sw.bb:                                            ; preds = %if.end13
  %vendor = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 10
  %17 = ptrtoint ptr %vendor to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1386, i32 %18)
  %cmp14 = icmp eq i32 %18, 1386
  br i1 %cmp14, label %land.lhs.true16, label %sw.bb.if.else83_crit_edge

sw.bb.if.else83_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else83

land.lhs.true16:                                  ; preds = %sw.bb
  %product = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 11
  %19 = ptrtoint ptr %product to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %product, align 8
  %21 = zext i32 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.215)
  switch i32 %20, label %land.lhs.true16.if.else83_crit_edge [
    i32 845, label %land.lhs.true16.if.then46_crit_edge
    i32 846, label %land.lhs.true16.if.then46_crit_edge251
    i32 855, label %land.lhs.true16.if.then46_crit_edge252
    i32 856, label %land.lhs.true16.if.then46_crit_edge253
    i32 914, label %land.lhs.true16.if.then46_crit_edge254
    i32 920, label %land.lhs.true16.if.then46_crit_edge255
    i32 921, label %land.lhs.true16.if.then46_crit_edge256
    i32 938, label %land.lhs.true16.if.then46_crit_edge257
  ]

land.lhs.true16.if.then46_crit_edge257:           ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.then46_crit_edge256:           ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.then46_crit_edge255:           ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.then46_crit_edge254:           ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.then46_crit_edge253:           ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.then46_crit_edge252:           ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.then46_crit_edge251:           ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.then46_crit_edge:              ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then46

land.lhs.true16.if.else83_crit_edge:              ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else83

if.then46:                                        ; preds = %land.lhs.true16.if.then46_crit_edge, %land.lhs.true16.if.then46_crit_edge251, %land.lhs.true16.if.then46_crit_edge252, %land.lhs.true16.if.then46_crit_edge253, %land.lhs.true16.if.then46_crit_edge254, %land.lhs.true16.if.then46_crit_edge255, %land.lhs.true16.if.then46_crit_edge256, %land.lhs.true16.if.then46_crit_edge257
  %logical_maximum = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %22 = ptrtoint ptr %logical_maximum to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %logical_maximum, align 4
  %sub = sub i32 %23, %value
  %24 = zext i32 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.216)
  switch i32 %20, label %if.then46.if.then135_crit_edge [
    i32 855, label %if.then46.if.then58_crit_edge
    i32 856, label %if.then46.if.then58_crit_edge258
    i32 914, label %if.then46.if.then58_crit_edge259
    i32 845, label %if.then46.if.then79_crit_edge
    i32 846, label %if.then46.if.then79_crit_edge260
    i32 920, label %if.then46.if.then79_crit_edge261
    i32 921, label %if.then46.if.then79_crit_edge262
    i32 938, label %if.then46.if.then79_crit_edge263
  ]

if.then46.if.then79_crit_edge263:                 ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then79

if.then46.if.then79_crit_edge262:                 ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then79

if.then46.if.then79_crit_edge261:                 ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then79

if.then46.if.then79_crit_edge260:                 ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then79

if.then46.if.then79_crit_edge:                    ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then79

if.then46.if.then58_crit_edge259:                 ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

if.then46.if.then58_crit_edge258:                 ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

if.then46.if.then58_crit_edge:                    ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

if.then46.if.then135_crit_edge:                   ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then135

if.then58:                                        ; preds = %if.then46.if.then58_crit_edge, %if.then46.if.then58_crit_edge258, %if.then46.if.then58_crit_edge259
  %absinfo.i = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %25 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %absinfo.i, align 8
  %code.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %27 = ptrtoint ptr %code.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %code.i, align 2
  %idxprom.i = zext i16 %28 to i32
  %maximum.i = getelementptr %struct.input_absinfo, ptr %26, i32 %idxprom.i, i32 2
  %29 = ptrtoint ptr %maximum.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %maximum.i, align 4
  %minimum.i = getelementptr %struct.input_absinfo, ptr %26, i32 %idxprom.i, i32 1
  %31 = ptrtoint ptr %minimum.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %minimum.i, align 4
  %sub.i = sub i32 %30, %32
  %add.i = add i32 %sub.i, 1
  %mul.i = mul i32 %add.i, 3
  %div.i = sdiv i32 %mul.i, 16
  %add1.i = add i32 %div.i, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i, i32 %30)
  %cmp.i = icmp sgt i32 %add1.i, %30
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i, i32 %32)
  %cmp5.i = icmp slt i32 %add1.i, %32
  %add7.i = select i1 %cmp5.i, i32 %add.i, i32 0
  %33 = xor i32 %sub.i, -1
  %value.addr.0.p.i = select i1 %cmp.i, i32 %33, i32 %add7.i
  %value.addr.0.i = add i32 %value.addr.0.p.i, %add1.i
  br label %if.then135

if.then79:                                        ; preds = %if.then46.if.then79_crit_edge, %if.then46.if.then79_crit_edge260, %if.then46.if.then79_crit_edge261, %if.then46.if.then79_crit_edge262, %if.then46.if.then79_crit_edge263
  %absinfo.i216 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %34 = ptrtoint ptr %absinfo.i216 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %absinfo.i216, align 8
  %code.i217 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %36 = ptrtoint ptr %code.i217 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %code.i217, align 2
  %idxprom.i218 = zext i16 %37 to i32
  %maximum.i219 = getelementptr %struct.input_absinfo, ptr %35, i32 %idxprom.i218, i32 2
  %38 = ptrtoint ptr %maximum.i219 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %maximum.i219, align 4
  %minimum.i220 = getelementptr %struct.input_absinfo, ptr %35, i32 %idxprom.i218, i32 1
  %40 = ptrtoint ptr %minimum.i220 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %minimum.i220, align 4
  %sub.i221 = sub i32 %39, %41
  %add.i222 = add i32 %sub.i221, 1
  %div.i223 = sdiv i32 %add.i222, 2
  %add1.i224 = add i32 %div.i223, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i224, i32 %39)
  %cmp.i225 = icmp sgt i32 %add1.i224, %39
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i224, i32 %41)
  %cmp5.i226 = icmp slt i32 %add1.i224, %41
  %add7.i227 = select i1 %cmp5.i226, i32 %add.i222, i32 0
  %42 = xor i32 %sub.i221, -1
  %value.addr.0.p.i228 = select i1 %cmp.i225, i32 %42, i32 %add7.i227
  %value.addr.0.i229 = add i32 %value.addr.0.p.i228, %add1.i224
  br label %if.then135

if.else83:                                        ; preds = %land.lhs.true16.if.else83_crit_edge, %sw.bb.if.else83_crit_edge
  %absinfo.i230 = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %43 = ptrtoint ptr %absinfo.i230 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %absinfo.i230, align 8
  %code.i231 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %45 = ptrtoint ptr %code.i231 to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %code.i231, align 2
  %idxprom.i232 = zext i16 %46 to i32
  %maximum.i233 = getelementptr %struct.input_absinfo, ptr %44, i32 %idxprom.i232, i32 2
  %47 = ptrtoint ptr %maximum.i233 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %maximum.i233, align 4
  %minimum.i234 = getelementptr %struct.input_absinfo, ptr %44, i32 %idxprom.i232, i32 1
  %49 = ptrtoint ptr %minimum.i234 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %minimum.i234, align 4
  %sub.i235 = sub i32 %48, %50
  %add.i236 = add i32 %sub.i235, 1
  %div.i237 = sdiv i32 %add.i236, 4
  %add1.i238 = add i32 %div.i237, %value
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i238, i32 %48)
  %cmp.i239 = icmp sgt i32 %add1.i238, %48
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i238, i32 %50)
  %cmp5.i240 = icmp slt i32 %add1.i238, %50
  %add7.i241 = select i1 %cmp5.i240, i32 %add.i236, i32 0
  %51 = xor i32 %sub.i235, -1
  %value.addr.0.p.i242 = select i1 %cmp.i239, i32 %51, i32 %add7.i241
  %value.addr.0.i243 = add i32 %value.addr.0.p.i242, %add1.i238
  br label %if.then135

sw.bb86:                                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool87.not = icmp eq i32 %value, 0
  br i1 %tobool87.not, label %if.then88, label %sw.bb86.cleanup_crit_edge

sw.bb86.cleanup_crit_edge:                        ; preds = %sw.bb86
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then88:                                        ; preds = %sw.bb86
  call void @__sanitizer_cov_trace_pc() #10
  %52 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %type, align 4
  %conv90 = zext i8 %53 to i32
  %code = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %54 = ptrtoint ptr %code to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %code, align 2
  %conv91 = zext i16 %55 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef %conv90, i32 noundef %conv91, i32 noundef 0) #8
  br label %cleanup

sw.bb93:                                          ; preds = %if.end13.sw.bb93_crit_edge, %if.end13.sw.bb93_crit_edge250
  %shared = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 11
  %56 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %shared, align 4
  %touch_input = getelementptr inbounds %struct.wacom_shared, ptr %57, i32 0, i32 4
  %58 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %touch_input, align 4
  %tobool94.not = icmp eq ptr %59, null
  br i1 %tobool94.not, label %sw.bb93.cleanup_crit_edge, label %if.then95

sw.bb93.cleanup_crit_edge:                        ; preds = %sw.bb93
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then95:                                        ; preds = %sw.bb93
  %is_touch_on97 = getelementptr inbounds %struct.wacom_shared, ptr %57, i32 0, i32 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -15922815, i32 %call3)
  %cmp98 = icmp ne i32 %call3, -15922815
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool101.not = icmp eq i32 %value, 0
  %or.cond215 = or i1 %tobool101.not, %cmp98
  br i1 %or.cond215, label %if.else105, label %if.then102

if.then102:                                       ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #10
  %60 = ptrtoint ptr %is_touch_on97 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %is_touch_on97, align 1, !range !727
  %62 = xor i8 %61, 1
  br label %if.end112.sink.split

if.else105:                                       ; preds = %if.then95
  call void @__sanitizer_cov_trace_const_cmp4(i32 -15924140, i32 %call3)
  %cmp106 = icmp eq i32 %call3, -15924140
  br i1 %cmp106, label %if.then108, label %if.else105.if.end112_crit_edge

if.else105.if.end112_crit_edge:                   ; preds = %if.else105
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end112

if.then108:                                       ; preds = %if.else105
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool109 = icmp ne i32 %value, 0
  %frombool110 = zext i1 %tobool109 to i8
  br label %if.end112.sink.split

if.end112.sink.split:                             ; preds = %if.then108, %if.then102
  %frombool110.sink = phi i8 [ %frombool110, %if.then108 ], [ %62, %if.then102 ]
  %63 = ptrtoint ptr %is_touch_on97 to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %frombool110.sink, ptr %is_touch_on97, align 1
  br label %if.end112

if.end112:                                        ; preds = %if.end112.sink.split, %if.else105.if.end112_crit_edge
  %64 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %shared, align 4
  %touch_input114 = getelementptr inbounds %struct.wacom_shared, ptr %65, i32 0, i32 4
  %66 = ptrtoint ptr %touch_input114 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %touch_input114, align 4
  %68 = ptrtoint ptr %is_touch_on97 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %is_touch_on97, align 1, !range !727
  %70 = xor i8 %69, 1
  %71 = zext i8 %70 to i32
  tail call void @input_event(ptr noundef %67, i32 noundef 5, i32 noundef 14, i32 noundef %71) #8
  %72 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %shared, align 4
  %touch_input118 = getelementptr inbounds %struct.wacom_shared, ptr %73, i32 0, i32 4
  %74 = ptrtoint ptr %touch_input118 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %touch_input118, align 4
  tail call void @input_event(ptr noundef %75, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %cleanup

sw.bb120:                                         ; preds = %if.end13
  %is_direct_mode = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 26
  %76 = ptrtoint ptr %is_direct_mode to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %is_direct_mode, align 1, !range !727
  %78 = zext i8 %77 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %78, i32 %value)
  %cmp123.not = icmp eq i32 %78, %value
  br i1 %cmp123.not, label %sw.bb120.cleanup_crit_edge, label %if.then125

sw.bb120.cleanup_crit_edge:                       ; preds = %sw.bb120
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then125:                                       ; preds = %sw.bb120
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool126 = icmp ne i32 %value, 0
  %frombool128 = zext i1 %tobool126 to i8
  %79 = ptrtoint ptr %is_direct_mode to i32
  call void @__asan_store1_noabort(i32 %79)
  store i8 %frombool128, ptr %is_direct_mode, align 1
  %mode_change_work.i = getelementptr %struct.wacom, ptr %1, i32 0, i32 10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %80 = load ptr, ptr @system_wq, align 4
  %call.i.i12.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %80, ptr noundef %mode_change_work.i) #8
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.0249 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %81 = ptrtoint ptr %numbered_buttons to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %numbered_buttons, align 4
  tail call fastcc void @wacom_update_led(ptr noundef %1, i32 noundef %82, i32 noundef %value, i32 noundef %i.0249)
  %inc = add nuw i32 %i.0249, 1
  %83 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %count, align 4
  %cmp132 = icmp ult i32 %inc, %84
  br i1 %cmp132, label %for.body.for.body_crit_edge, label %for.body.if.then135_crit_edge

for.body.if.then135_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then135

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body

if.then135:                                       ; preds = %for.body.if.then135_crit_edge, %if.else83, %if.then79, %if.then58, %if.then46.if.then135_crit_edge, %for.cond.preheader.if.then135_crit_edge, %if.end13.if.then135_crit_edge
  %value.addr.1.ph = phi i32 [ %value, %if.end13.if.then135_crit_edge ], [ %sub, %if.then46.if.then135_crit_edge ], [ %value.addr.0.i243, %if.else83 ], [ %value.addr.0.i229, %if.then79 ], [ %value.addr.0.i, %if.then58 ], [ %value, %for.cond.preheader.if.then135_crit_edge ], [ %value, %for.body.if.then135_crit_edge ]
  %85 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %type, align 4
  %conv137 = zext i8 %86 to i32
  %code138 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %87 = ptrtoint ptr %code138 to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %code138, align 2
  %conv139 = zext i16 %88 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef %conv137, i32 noundef %conv139, i32 noundef %value.addr.1.ph) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value.addr.1.ph)
  %tobool140.not = icmp eq i32 %value.addr.1.ph, 0
  br i1 %tobool140.not, label %if.then135.cleanup_crit_edge, label %if.then141

if.then135.cleanup_crit_edge:                     ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then141:                                       ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #10
  %pad_input_event_flag = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 27
  %89 = ptrtoint ptr %pad_input_event_flag to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 1, ptr %pad_input_event_flag, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then141, %if.then135.cleanup_crit_edge, %if.then125, %sw.bb120.cleanup_crit_edge, %if.end112, %sw.bb93.cleanup_crit_edge, %if.then88, %sw.bb86.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_wac_pen_event(ptr noundef %hdev, ptr nocapture noundef readonly %field, ptr nocapture noundef readonly %usage, i32 noundef %value) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %pen_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 12
  %2 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pen_input, align 8
  %is_invalid_bt_frame = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 27
  %4 = ptrtoint ptr %is_invalid_bt_frame to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %is_invalid_bt_frame, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usage, align 4
  %call3 = tail call i32 @wacom_equivalent_usage(i32 noundef %7)
  %8 = zext i32 %call3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.217)
  switch i32 %call3, label %if.end.sw.epilog_crit_edge [
    i32 65586, label %sw.bb
    i32 852018, label %sw.bb4
    i32 852028, label %sw.bb12
    i32 852037, label %if.end.sw.bb16_crit_edge
    i32 852034, label %if.end.sw.bb16_crit_edge252
    i32 852036, label %sw.bb21
    i32 852058, label %sw.bb25
    i32 852059, label %sw.bb29
    i32 852033, label %sw.bb42
    i32 -15925194, label %sw.bb44
    i32 -15925156, label %sw.bb49
    i32 -15925129, label %sw.bb71
    i32 -15921872, label %sw.bb78
    i32 -15921870, label %sw.bb87
    i32 -15921871, label %sw.bb101
    i32 -15921869, label %sw.bb115
    i32 -15924784, label %sw.bb129
  ]

if.end.sw.bb16_crit_edge252:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb16

if.end.sw.bb16_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb16

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %logical_maximum = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 12
  %9 = ptrtoint ptr %logical_maximum to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %logical_maximum, align 4
  %sub = sub i32 %10, %value
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool5 = icmp ne i32 %value, 0
  %inrange_state = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 3
  %frombool = zext i1 %tobool5 to i8
  %11 = ptrtoint ptr %inrange_state to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %frombool, ptr %inrange_state, align 1
  %quirks = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 23
  %12 = ptrtoint ptr %quirks to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %quirks, align 4
  %and = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %if.then7, label %sw.bb4.cleanup_crit_edge

sw.bb4.cleanup_crit_edge:                         ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then7:                                         ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #10
  %sense_state = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 2
  %14 = ptrtoint ptr %sense_state to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %frombool, ptr %sense_state, align 4
  br label %cleanup

sw.bb12:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool13 = icmp ne i32 %value, 0
  %invert_state = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 4
  %frombool15 = zext i1 %tobool13 to i8
  %15 = ptrtoint ptr %invert_state to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %frombool15, ptr %invert_state, align 2
  br label %cleanup

sw.bb16:                                          ; preds = %if.end.sw.bb16_crit_edge, %if.end.sw.bb16_crit_edge252
  %tipswitch = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 5
  %16 = ptrtoint ptr %tipswitch to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %tipswitch, align 1, !range !727
  %18 = zext i8 %17 to i32
  %or = or i32 %18, %value
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or)
  %tobool19 = icmp ne i32 %or, 0
  %frombool20 = zext i1 %tobool19 to i8
  %19 = ptrtoint ptr %tipswitch to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %frombool20, ptr %tipswitch, align 1
  br label %cleanup

sw.bb21:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool22 = icmp ne i32 %value, 0
  %barrelswitch = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 6
  %frombool24 = zext i1 %tobool22 to i8
  %20 = ptrtoint ptr %barrelswitch to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %frombool24, ptr %barrelswitch, align 4
  br label %cleanup

sw.bb25:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool26 = icmp ne i32 %value, 0
  %barrelswitch2 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 7
  %frombool28 = zext i1 %tobool26 to i8
  %21 = ptrtoint ptr %barrelswitch2 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %frombool28, ptr %barrelswitch2, align 1
  br label %cleanup

sw.bb29:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool30.not = icmp eq i32 %value, 0
  br i1 %tobool30.not, label %sw.bb29.cleanup_crit_edge, label %if.then31

sw.bb29.cleanup_crit_edge:                        ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then31:                                        ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #10
  %serial = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 7
  %22 = ptrtoint ptr %serial to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %serial, align 8
  %and32 = and i64 %23, -4294967296
  store i64 %and32, ptr %serial, align 8
  %report_size = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 7
  %24 = ptrtoint ptr %report_size to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %report_size, align 4
  %conv35 = trunc i32 %25 to i8
  %call36 = tail call fastcc i32 @wacom_s32tou(i32 noundef %value, i8 noundef zeroext %conv35)
  %conv37 = zext i32 %call36 to i64
  %or40 = or i64 %and32, %conv37
  %26 = ptrtoint ptr %serial to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %or40, ptr %serial, align 8
  br label %cleanup

sw.bb42:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %absinfo.i = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 26
  %27 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %absinfo.i, align 8
  %code.i = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %29 = ptrtoint ptr %code.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %code.i, align 2
  %idxprom.i = zext i16 %30 to i32
  %maximum.i = getelementptr %struct.input_absinfo, ptr %28, i32 %idxprom.i, i32 2
  %31 = ptrtoint ptr %maximum.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %maximum.i, align 4
  %minimum.i = getelementptr %struct.input_absinfo, ptr %28, i32 %idxprom.i, i32 1
  %33 = ptrtoint ptr %minimum.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %minimum.i, align 4
  %sub.i = sub i32 %32, %34
  %add.i = add i32 %sub.i, 1
  %div.i = sdiv i32 %add.i, 4
  %add1.i = add i32 %div.i, %value
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i, i32 %32)
  %cmp.i = icmp sgt i32 %add1.i, %32
  call void @__sanitizer_cov_trace_cmp4(i32 %add1.i, i32 %34)
  %cmp5.i = icmp slt i32 %add1.i, %34
  %add7.i = select i1 %cmp5.i, i32 %add.i, i32 0
  %35 = xor i32 %sub.i, -1
  %value.addr.0.p.i = select i1 %cmp.i, i32 %35, i32 %add7.i
  %value.addr.0.i = add i32 %value.addr.0.p.i, %add1.i
  br label %sw.epilog

sw.bb44:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool45 = icmp ne i32 %value, 0
  %sense_state47 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 2
  %frombool48 = zext i1 %tobool45 to i8
  %36 = ptrtoint ptr %sense_state47 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %frombool48, ptr %sense_state47, align 4
  br label %cleanup

sw.bb49:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool50.not = icmp eq i32 %value, 0
  br i1 %tobool50.not, label %sw.bb49.cleanup_crit_edge, label %if.then51

sw.bb49.cleanup_crit_edge:                        ; preds = %sw.bb49
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then51:                                        ; preds = %sw.bb49
  %report_size52 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 7
  %37 = ptrtoint ptr %report_size52 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %report_size52, align 4
  %conv53 = trunc i32 %38 to i8
  %call54 = tail call fastcc i32 @wacom_s32tou(i32 noundef %value, i8 noundef zeroext %conv53)
  %serial55 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 7
  %39 = ptrtoint ptr %serial55 to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %serial55, align 8
  %and57 = and i64 %40, 4294967295
  %conv60 = zext i32 %call54 to i64
  %shl = shl nuw i64 %conv60, 32
  %or63 = or i64 %and57, %shl
  store i64 %or63, ptr %serial55, align 8
  %shr.mask = and i32 %value, -1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %shr.mask)
  %cmp = icmp eq i32 %shr.mask, 1048576
  br i1 %cmp, label %if.then65, label %if.then51.cleanup_crit_edge

if.then51.cleanup_crit_edge:                      ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then65:                                        ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #10
  %and66 = and i32 %call54, 1048575
  %id = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 6
  %41 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %id, align 4
  %or68 = or i32 %42, %and66
  store i32 %or68, ptr %id, align 4
  br label %cleanup

sw.bb71:                                          ; preds = %if.end
  %report_size72 = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 7
  %43 = ptrtoint ptr %report_size72 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %report_size72, align 4
  %conv73 = trunc i32 %44 to i8
  %45 = zext i8 %conv73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %45, ptr @__sancov_gen_cov_switch_values.218)
  switch i8 %conv73, label %sw.epilog.i [
    i8 8, label %sw.bb.i
    i8 16, label %sw.bb3.i
    i8 32, label %sw.bb71.wacom_s32tou.exit_crit_edge
  ]

sw.bb71.wacom_s32tou.exit_crit_edge:              ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_s32tou.exit

sw.bb.i:                                          ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #10
  %conv2.i = and i32 %value, 255
  br label %wacom_s32tou.exit

sw.bb3.i:                                         ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #10
  %conv5.i = and i32 %value, 65535
  br label %wacom_s32tou.exit

sw.epilog.i:                                      ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #10
  %conv.i = and i32 %44, 255
  %sub.i250 = add nsw i32 %conv.i, -1
  %shl.i = shl nuw i32 1, %sub.i250
  %and.i = and i32 %shl.i, %value
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %shl9.i = shl nsw i32 -1, %conv.i
  %neg.i = xor i32 %shl9.i, -1
  %and10.i = select i1 %tobool.not.i, i32 -1, i32 %neg.i
  %cond.i = and i32 %and10.i, %value
  br label %wacom_s32tou.exit

wacom_s32tou.exit:                                ; preds = %sw.epilog.i, %sw.bb3.i, %sw.bb.i, %sw.bb71.wacom_s32tou.exit_crit_edge
  %retval.0.i = phi i32 [ %cond.i, %sw.epilog.i ], [ %conv5.i, %sw.bb3.i ], [ %conv2.i, %sw.bb.i ], [ %value, %sw.bb71.wacom_s32tou.exit_crit_edge ]
  %id75 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 6
  %46 = ptrtoint ptr %id75 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %id75, align 4
  %or77 = or i32 %47, %retval.0.i
  store i32 %or77, ptr %id75, align 4
  br label %cleanup

sw.bb78:                                          ; preds = %if.end
  %offset_left = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 9
  %48 = ptrtoint ptr %offset_left to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %offset_left, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool79.not = icmp eq i32 %49, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %value)
  %cmp81.not = icmp eq i32 %49, %value
  %or.cond = or i1 %tobool79.not, %cmp81.not
  br i1 %or.cond, label %sw.bb78.if.end85_crit_edge, label %do.end

sw.bb78.if.end85_crit_edge:                       ; preds = %sw.bb78
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end85

do.end:                                           ; preds = %sw.bb78
  call void @__sanitizer_cov_trace_pc() #10
  %dev = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.11, i32 noundef %value, i32 noundef %49) #11
  br label %if.end85

if.end85:                                         ; preds = %do.end, %sw.bb78.if.end85_crit_edge
  %50 = ptrtoint ptr %offset_left to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %value, ptr %offset_left, align 4
  br label %cleanup

sw.bb87:                                          ; preds = %if.end
  %offset_right = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 10
  %51 = ptrtoint ptr %offset_right to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %offset_right, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool88.not = icmp eq i32 %52, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %value)
  %cmp91.not = icmp eq i32 %52, %value
  %or.cond247 = or i1 %tobool88.not, %cmp91.not
  br i1 %or.cond247, label %sw.bb87.if.end99_crit_edge, label %do.end96

sw.bb87.if.end99_crit_edge:                       ; preds = %sw.bb87
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end99

do.end96:                                         ; preds = %sw.bb87
  call void @__sanitizer_cov_trace_pc() #10
  %dev97 = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev97, ptr noundef nonnull @.str.14, ptr noundef nonnull @.str.11, i32 noundef %value, i32 noundef %52) #11
  br label %if.end99

if.end99:                                         ; preds = %do.end96, %sw.bb87.if.end99_crit_edge
  %53 = ptrtoint ptr %offset_right to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %value, ptr %offset_right, align 4
  br label %cleanup

sw.bb101:                                         ; preds = %if.end
  %offset_top = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 11
  %54 = ptrtoint ptr %offset_top to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %offset_top, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool102.not = icmp eq i32 %55, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %55, i32 %value)
  %cmp105.not = icmp eq i32 %55, %value
  %or.cond248 = or i1 %tobool102.not, %cmp105.not
  br i1 %or.cond248, label %sw.bb101.if.end113_crit_edge, label %do.end110

sw.bb101.if.end113_crit_edge:                     ; preds = %sw.bb101
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end113

do.end110:                                        ; preds = %sw.bb101
  call void @__sanitizer_cov_trace_pc() #10
  %dev111 = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev111, ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.11, i32 noundef %value, i32 noundef %55) #11
  br label %if.end113

if.end113:                                        ; preds = %do.end110, %sw.bb101.if.end113_crit_edge
  %56 = ptrtoint ptr %offset_top to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %value, ptr %offset_top, align 4
  br label %cleanup

sw.bb115:                                         ; preds = %if.end
  %offset_bottom = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 12
  %57 = ptrtoint ptr %offset_bottom to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %offset_bottom, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool116.not = icmp eq i32 %58, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %58, i32 %value)
  %cmp119.not = icmp eq i32 %58, %value
  %or.cond249 = or i1 %tobool116.not, %cmp119.not
  br i1 %or.cond249, label %sw.bb115.if.end127_crit_edge, label %do.end124

sw.bb115.if.end127_crit_edge:                     ; preds = %sw.bb115
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end127

do.end124:                                        ; preds = %sw.bb115
  call void @__sanitizer_cov_trace_pc() #10
  %dev125 = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev125, ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.11, i32 noundef %value, i32 noundef %58) #11
  br label %if.end127

if.end127:                                        ; preds = %do.end124, %sw.bb115.if.end127_crit_edge
  %59 = ptrtoint ptr %offset_bottom to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %value, ptr %offset_bottom, align 4
  br label %cleanup

sw.bb129:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool130.not = icmp eq i32 %value, 0
  %frombool132 = zext i1 %tobool130.not to i8
  %60 = ptrtoint ptr %is_invalid_bt_frame to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %frombool132, ptr %is_invalid_bt_frame, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb42, %sw.bb, %if.end.sw.epilog_crit_edge
  %value.addr.0 = phi i32 [ %value, %if.end.sw.epilog_crit_edge ], [ %value.addr.0.i, %sw.bb42 ], [ %sub, %sw.bb ]
  %type = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 6
  %61 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %62)
  %tobool133.not = icmp eq i8 %62, 0
  br i1 %tobool133.not, label %sw.epilog.cleanup_crit_edge, label %lor.lhs.false

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

lor.lhs.false:                                    ; preds = %sw.epilog
  %shared.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 11
  %63 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %shared.i, align 4
  %touch_down.i = getelementptr inbounds %struct.wacom_shared, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %touch_down.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %touch_down.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %tobool.not.i251 = icmp eq i8 %66, 0
  br i1 %tobool.not.i251, label %lor.lhs.false.if.end137_crit_edge, label %delay_pen_events.exit

lor.lhs.false.if.end137_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end137

delay_pen_events.exit:                            ; preds = %lor.lhs.false
  %67 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool1.i.not = icmp eq i8 %67, 0
  br i1 %tobool1.i.not, label %delay_pen_events.exit.if.end137_crit_edge, label %delay_pen_events.exit.cleanup_crit_edge

delay_pen_events.exit.cleanup_crit_edge:          ; preds = %delay_pen_events.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

delay_pen_events.exit.if.end137_crit_edge:        ; preds = %delay_pen_events.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end137

if.end137:                                        ; preds = %delay_pen_events.exit.if.end137_crit_edge, %lor.lhs.false.if.end137_crit_edge
  %inrange_state139 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 3
  %68 = ptrtoint ptr %inrange_state139 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %inrange_state139, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool140.not = icmp eq i8 %69, 0
  br i1 %tobool140.not, label %if.else, label %if.then141

if.then141:                                       ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #10
  %conv143 = zext i8 %62 to i32
  %code = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %70 = ptrtoint ptr %code to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %code, align 2
  %conv144 = zext i16 %71 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef %conv143, i32 noundef %conv144, i32 noundef %value.addr.0) #8
  br label %cleanup

if.else:                                          ; preds = %if.end137
  %72 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %shared.i, align 4
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %73, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %75)
  %tobool145.not = icmp eq i8 %75, 0
  br i1 %tobool145.not, label %if.else.cleanup_crit_edge, label %land.lhs.true147

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true147:                                 ; preds = %if.else
  %sense_state149 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 2
  %76 = ptrtoint ptr %sense_state149 to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %sense_state149, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool150.not = icmp eq i8 %77, 0
  br i1 %tobool150.not, label %if.then151, label %land.lhs.true147.cleanup_crit_edge

land.lhs.true147.cleanup_crit_edge:               ; preds = %land.lhs.true147
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then151:                                       ; preds = %land.lhs.true147
  call void @__sanitizer_cov_trace_pc() #10
  %conv153 = zext i8 %62 to i32
  %code154 = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 5
  %78 = ptrtoint ptr %code154 to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %code154, align 2
  %conv155 = zext i16 %79 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef %conv153, i32 noundef %conv155, i32 noundef 0) #8
  br label %cleanup

cleanup:                                          ; preds = %if.then151, %land.lhs.true147.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then141, %delay_pen_events.exit.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %sw.bb129, %if.end127, %if.end113, %if.end99, %if.end85, %wacom_s32tou.exit, %if.then65, %if.then51.cleanup_crit_edge, %sw.bb49.cleanup_crit_edge, %sw.bb44, %if.then31, %sw.bb29.cleanup_crit_edge, %sw.bb25, %sw.bb21, %sw.bb16, %sw.bb12, %if.then7, %sw.bb4.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_wac_finger_event(ptr noundef %hdev, ptr nocapture noundef readonly %field, ptr nocapture noundef readonly %usage, i32 noundef %value) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %2 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %usage, align 4
  %call2 = tail call i32 @wacom_equivalent_usage(i32 noundef %3)
  %probe_complete.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 8
  %4 = ptrtoint ptr %probe_complete.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %probe_complete.i, align 8, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %land.lhs.true.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true.i:                                  ; preds = %entry
  %shared.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 11
  %6 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %shared.i, align 4
  %has_mute_touch_switch.i = getelementptr inbounds %struct.wacom_shared, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %has_mute_touch_switch.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %has_mute_touch_switch.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool1.not.i = icmp eq i8 %9, 0
  br i1 %tobool1.not.i, label %land.lhs.true.i.if.end_crit_edge, label %touch_is_muted.exit

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

touch_is_muted.exit:                              ; preds = %land.lhs.true.i
  %is_touch_on.i = getelementptr inbounds %struct.wacom_shared, ptr %7, i32 0, i32 8
  %10 = ptrtoint ptr %is_touch_on.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %is_touch_on.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool3.not.i = icmp eq i8 %11, 0
  br i1 %tobool3.not.i, label %land.lhs.true, label %touch_is_muted.exit.if.end_crit_edge

touch_is_muted.exit.if.end_crit_edge:             ; preds = %touch_is_muted.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true:                                    ; preds = %touch_is_muted.exit
  %12 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %shared.i, align 4
  %touch_down = getelementptr inbounds %struct.wacom_shared, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %touch_down to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %touch_down, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not = icmp eq i8 %15, 0
  br i1 %tobool.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %touch_is_muted.exit.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %entry.if.end_crit_edge
  %is_invalid_bt_frame = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 27
  %16 = ptrtoint ptr %is_invalid_bt_frame to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %is_invalid_bt_frame, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool6.not = icmp eq i8 %17, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %18 = zext i32 %call2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.219)
  switch i32 %call2, label %if.end8.sw.epilog_crit_edge [
    i32 852039, label %sw.bb
    i32 65584, label %sw.bb10
    i32 65585, label %sw.bb12
    i32 852040, label %sw.bb14
    i32 852041, label %sw.bb16
    i32 852049, label %sw.bb18
    i32 852034, label %sw.bb20
    i32 -16776752, label %sw.bb24
    i32 852053, label %sw.bb28
  ]

if.end8.sw.epilog_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool9 = icmp ne i32 %value, 0
  %confidence = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 9
  %frombool = zext i1 %tobool9 to i8
  %19 = ptrtoint ptr %confidence to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %frombool, ptr %confidence, align 1
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  %x = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 10
  %20 = ptrtoint ptr %x to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %value, ptr %x, align 4
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  %y = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 11
  %21 = ptrtoint ptr %y to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %value, ptr %y, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  %width = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 13
  %22 = ptrtoint ptr %width to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %value, ptr %width, align 4
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  %height = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 14
  %23 = ptrtoint ptr %height to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %value, ptr %height, align 4
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  %id = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 15
  %24 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %value, ptr %id, align 4
  br label %sw.epilog

sw.bb20:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool21 = icmp ne i32 %value, 0
  %tipswitch = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 5
  %frombool23 = zext i1 %tobool21 to i8
  %25 = ptrtoint ptr %tipswitch to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %frombool23, ptr %tipswitch, align 1
  br label %sw.epilog

sw.bb24:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %value)
  %tobool25.not = icmp eq i32 %value, 0
  %frombool27 = zext i1 %tobool25.not to i8
  %26 = ptrtoint ptr %is_invalid_bt_frame to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %frombool27, ptr %is_invalid_bt_frame, align 4
  br label %cleanup

sw.bb28:                                          ; preds = %if.end8
  %touch_max = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 24
  %27 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %touch_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool29.not = icmp eq i32 %28, 0
  br i1 %tobool29.not, label %if.then30, label %do.end

if.then30:                                        ; preds = %sw.bb28
  call void @__sanitizer_cov_trace_pc() #10
  %29 = ptrtoint ptr %touch_max to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %value, ptr %touch_max, align 4
  br label %cleanup

do.end:                                           ; preds = %sw.bb28
  call void @__sanitizer_cov_trace_pc() #10
  %dev = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.23, i32 noundef %28, i32 noundef %value) #11
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb, %if.end8.sw.epilog_crit_edge
  %usage_index = getelementptr inbounds %struct.hid_usage, ptr %usage, i32 0, i32 2
  %30 = ptrtoint ptr %usage_index to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %usage_index, align 4
  %add = add i32 %31, 1
  %report_count = getelementptr inbounds %struct.hid_field, ptr %field, i32 0, i32 8
  %32 = ptrtoint ptr %report_count to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %report_count, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %33)
  %cmp = icmp eq i32 %add, %33
  br i1 %cmp, label %if.then34, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then34:                                        ; preds = %sw.epilog
  %last_slot_field = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 19
  %34 = ptrtoint ptr %last_slot_field to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %last_slot_field, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call2, i32 %35)
  %cmp36 = icmp eq i32 %call2, %35
  br i1 %cmp36, label %if.then37, label %if.then34.cleanup_crit_edge

if.then34.cleanup_crit_edge:                      ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then37:                                        ; preds = %if.then34
  %touch_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 13
  %36 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %touch_input, align 4
  %id39 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 15
  %38 = ptrtoint ptr %id39 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %id39, align 4
  %mt1.i = getelementptr inbounds %struct.input_dev, ptr %37, i32 0, i32 25
  %40 = ptrtoint ptr %mt1.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %mt1.i, align 4
  %tobool.not.i90 = icmp eq ptr %41, null
  br i1 %tobool.not.i90, label %if.then37.land.end_crit_edge, label %if.end.i

if.then37.land.end_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end

if.end.i:                                         ; preds = %if.then37
  %slots.i = getelementptr inbounds %struct.input_mt, ptr %41, i32 0, i32 6
  %num_slots.i = getelementptr inbounds %struct.input_mt, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %num_slots.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %num_slots.i, align 4
  %add.ptr.i = getelementptr %struct.input_mt_slot, ptr %slots.i, i32 %43
  %cmp.not16.i = icmp eq ptr %slots.i, %add.ptr.i
  br i1 %cmp.not16.i, label %if.end.i.land.end_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.land.end_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %s.017.i = phi ptr [ %incdec.ptr.i, %for.inc.i.for.body.i_crit_edge ], [ %slots.i, %if.end.i.for.body.i_crit_edge ]
  %key4.i = getelementptr inbounds %struct.input_mt_slot, ptr %s.017.i, i32 0, i32 2
  %44 = ptrtoint ptr %key4.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %key4.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %45, i32 %39)
  %cmp5.i = icmp eq i32 %45, %39
  br i1 %cmp5.i, label %land.lhs.true.i91, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc.i

land.lhs.true.i91:                                ; preds = %for.body.i
  %arrayidx.i.i = getelementptr [14 x i32], ptr %s.017.i, i32 0, i32 9
  %46 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %47)
  %cmp6.i = icmp sgt i32 %47, -1
  br i1 %cmp6.i, label %land.rhs, label %land.lhs.true.i91.for.inc.i_crit_edge

land.lhs.true.i91.for.inc.i_crit_edge:            ; preds = %land.lhs.true.i91
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i91.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %incdec.ptr.i = getelementptr %struct.input_mt_slot, ptr %s.017.i, i32 1
  %cmp.not.i = icmp eq ptr %incdec.ptr.i, %add.ptr.i
  br i1 %cmp.not.i, label %for.inc.i.land.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

for.inc.i.land.end_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end

land.rhs:                                         ; preds = %land.lhs.true.i91
  call void @__sanitizer_cov_trace_pc() #10
  %tipswitch42 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 5
  %48 = ptrtoint ptr %tipswitch42 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %tipswitch42, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool43.not = icmp eq i8 %49, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.inc.i.land.end_crit_edge, %if.end.i.land.end_crit_edge, %if.then37.land.end_crit_edge
  %50 = phi i1 [ %tobool43.not, %land.rhs ], [ false, %if.then37.land.end_crit_edge ], [ false, %if.end.i.land.end_crit_edge ], [ false, %for.inc.i.land.end_crit_edge ]
  %confidence47 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 9
  %51 = ptrtoint ptr %confidence47 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %confidence47, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool48.not = icmp ne i8 %52, 0
  %brmerge = select i1 %tobool48.not, i1 true, i1 %50
  br i1 %brmerge, label %if.then50, label %land.end.cleanup_crit_edge

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then50:                                        ; preds = %land.end
  %touch_max.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 24
  %53 = ptrtoint ptr %touch_max.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %touch_max.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %54)
  %cmp.i = icmp ugt i32 %54, 1
  %tipswitch.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 5
  %55 = ptrtoint ptr %tipswitch.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %tipswitch.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool.not.i92 = icmp eq i8 %56, 0
  br i1 %tobool.not.i92, label %if.then50.land.end.i_crit_edge, label %land.rhs.i93

if.then50.land.end.i_crit_edge:                   ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end.i

land.rhs.i93:                                     ; preds = %if.then50
  %57 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %57)
  %tobool.not.i.i = icmp eq i8 %57, 0
  br i1 %tobool.not.i.i, label %land.rhs.i93.land.end.i_crit_edge, label %cond.true.i.i

land.rhs.i93.land.end.i_crit_edge:                ; preds = %land.rhs.i93
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end.i

cond.true.i.i:                                    ; preds = %land.rhs.i93
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 11
  %58 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %shared.i.i, align 4
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %59, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool1.not.i.i = icmp eq i8 %61, 0
  br label %land.end.i

land.end.i:                                       ; preds = %cond.true.i.i, %land.rhs.i93.land.end.i_crit_edge, %if.then50.land.end.i_crit_edge
  %62 = phi i1 [ false, %if.then50.land.end.i_crit_edge ], [ %tobool1.not.i.i, %cond.true.i.i ], [ true, %land.rhs.i93.land.end.i_crit_edge ]
  br i1 %tobool.not.i, label %land.end.i.if.end6.i_crit_edge, label %land.lhs.true.i.i

land.end.i.if.end6.i_crit_edge:                   ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end6.i

land.lhs.true.i.i:                                ; preds = %land.end.i
  %shared.i123.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 11
  %63 = ptrtoint ptr %shared.i123.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %shared.i123.i, align 4
  %has_mute_touch_switch.i.i = getelementptr inbounds %struct.wacom_shared, ptr %64, i32 0, i32 7
  %65 = ptrtoint ptr %has_mute_touch_switch.i.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %has_mute_touch_switch.i.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %tobool1.not.i124.i = icmp eq i8 %66, 0
  br i1 %tobool1.not.i124.i, label %land.lhs.true.i.i.if.end6.i_crit_edge, label %touch_is_muted.exit.i

land.lhs.true.i.i.if.end6.i_crit_edge:            ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end6.i

touch_is_muted.exit.i:                            ; preds = %land.lhs.true.i.i
  %is_touch_on.i.i = getelementptr inbounds %struct.wacom_shared, ptr %64, i32 0, i32 8
  %67 = ptrtoint ptr %is_touch_on.i.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %is_touch_on.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool3.not.i.i = icmp eq i8 %68, 0
  br i1 %tobool3.not.i.i, label %if.then.i, label %touch_is_muted.exit.i.if.end6.i_crit_edge

touch_is_muted.exit.i.if.end6.i_crit_edge:        ; preds = %touch_is_muted.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end6.i

if.then.i:                                        ; preds = %touch_is_muted.exit.i
  %touch_down.i = getelementptr inbounds %struct.wacom_shared, ptr %64, i32 0, i32 1
  %69 = ptrtoint ptr %touch_down.i to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %touch_down.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool4.not.i = icmp eq i8 %70, 0
  br i1 %tobool4.not.i, label %if.then.i.cleanup_crit_edge, label %if.then.i.if.end6.i_crit_edge

if.then.i.if.end6.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end6.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end6.i:                                        ; preds = %if.then.i.if.end6.i_crit_edge, %touch_is_muted.exit.i.if.end6.i_crit_edge, %land.lhs.true.i.i.if.end6.i_crit_edge, %land.end.i.if.end6.i_crit_edge
  %prox.0.off0.i = phi i1 [ %62, %touch_is_muted.exit.i.if.end6.i_crit_edge ], [ false, %if.then.i.if.end6.i_crit_edge ], [ %62, %land.lhs.true.i.i.if.end6.i_crit_edge ], [ %62, %land.end.i.if.end6.i_crit_edge ]
  %num_received.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 21
  %71 = ptrtoint ptr %num_received.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %num_received.i, align 4
  %inc.i = add i32 %72, 1
  store i32 %inc.i, ptr %num_received.i, align 4
  %num_expected.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 20
  %73 = ptrtoint ptr %num_expected.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %num_expected.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %74)
  %cmp11.i = icmp sgt i32 %inc.i, %74
  br i1 %cmp11.i, label %if.end6.i.cleanup_crit_edge, label %if.end13.i

if.end6.i.cleanup_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end13.i:                                       ; preds = %if.end6.i
  br i1 %cmp.i, label %if.then15.i, label %if.else32.i

if.then15.i:                                      ; preds = %if.end13.i
  %75 = ptrtoint ptr %id39 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %id39, align 4
  %call16.i = tail call i32 @input_mt_get_slot_by_key(ptr noundef %37, i32 noundef %76) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %cmp17.i = icmp slt i32 %call16.i, 0
  br i1 %cmp17.i, label %if.then15.i.cleanup_crit_edge, label %if.else.i

if.then15.i.cleanup_crit_edge:                    ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.else.i:                                        ; preds = %if.then15.i
  %77 = ptrtoint ptr %mt1.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mt1.i, align 4
  %arrayidx.i125.i = getelementptr %struct.input_mt, ptr %78, i32 0, i32 6, i32 %call16.i, i32 0, i32 9
  %79 = ptrtoint ptr %arrayidx.i125.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx.i125.i, align 4
  %prox.0.off0.not.i = xor i1 %prox.0.off0.i, true
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %cmp22.i = icmp slt i32 %80, 0
  %or.cond.i = select i1 %prox.0.off0.not.i, i1 %cmp22.i, i1 false
  br i1 %or.cond.i, label %if.else.i.cleanup_crit_edge, label %if.end26.critedge.i

if.else.i.cleanup_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end26.critedge.i:                              ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %37, i32 noundef 3, i32 noundef 47, i32 noundef %call16.i) #8
  %call28.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %37, i32 noundef 0, i1 noundef zeroext %prox.0.off0.i) #8
  br label %if.end34.i

if.else32.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #10
  %lnot.ext.i.i = zext i1 %prox.0.off0.i to i32
  tail call void @input_event(ptr noundef %37, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i.i) #8
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.else32.i, %if.end26.critedge.i
  br i1 %prox.0.off0.i, label %if.then36.i, label %if.end34.i.cleanup_crit_edge

if.end34.i.cleanup_crit_edge:                     ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then36.i:                                      ; preds = %if.end34.i
  %cond.i = select i1 %cmp.i, i32 53, i32 0
  %x.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 10
  %81 = ptrtoint ptr %x.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %x.i, align 4
  tail call void @input_event(ptr noundef %37, i32 noundef 3, i32 noundef %cond.i, i32 noundef %82) #8
  %cond41.i = select i1 %cmp.i, i32 54, i32 1
  %y.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 11
  %83 = ptrtoint ptr %y.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %y.i, align 4
  tail call void @input_event(ptr noundef %37, i32 noundef 3, i32 noundef %cond41.i, i32 noundef %84) #8
  %arrayidx.i.i94 = getelementptr %struct.input_dev, ptr %37, i32 0, i32 8, i32 1
  %85 = ptrtoint ptr %arrayidx.i.i94 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %arrayidx.i.i94, align 4
  %87 = and i32 %86, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool43.not.i = icmp eq i32 %87, 0
  br i1 %tobool43.not.i, label %if.then36.i.cleanup_crit_edge, label %if.then44.i

if.then36.i.cleanup_crit_edge:                    ; preds = %if.then36.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then44.i:                                      ; preds = %if.then36.i
  %width.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 13
  %88 = ptrtoint ptr %width.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %width.i, align 4
  %height.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 14
  %90 = ptrtoint ptr %height.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %height.i, align 4
  %92 = tail call i32 @llvm.smax.i32(i32 %89, i32 %91) #8
  tail call void @input_event(ptr noundef %37, i32 noundef 3, i32 noundef 48, i32 noundef %92) #8
  %93 = ptrtoint ptr %width.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %width.i, align 4
  %95 = ptrtoint ptr %height.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %height.i, align 4
  %97 = tail call i32 @llvm.smin.i32(i32 %94, i32 %96) #8
  tail call void @input_event(ptr noundef %37, i32 noundef 3, i32 noundef 49, i32 noundef %97) #8
  %98 = ptrtoint ptr %width.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %width.i, align 4
  %100 = ptrtoint ptr %height.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %height.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %99, i32 %101)
  %cmp59.not.i = icmp eq i32 %99, %101
  br i1 %cmp59.not.i, label %if.then44.i.cleanup_crit_edge, label %if.then61.i

if.then44.i.cleanup_crit_edge:                    ; preds = %if.then44.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then61.i:                                      ; preds = %if.then44.i
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_cmp4(i32 %99, i32 %101)
  %cmp64.not.i = icmp sgt i32 %99, %101
  %cond66.i = zext i1 %cmp64.not.i to i32
  tail call void @input_event(ptr noundef %37, i32 noundef 3, i32 noundef 52, i32 noundef %cond66.i) #8
  br label %cleanup

cleanup:                                          ; preds = %if.then61.i, %if.then44.i.cleanup_crit_edge, %if.then36.i.cleanup_crit_edge, %if.end34.i.cleanup_crit_edge, %if.else.i.cleanup_crit_edge, %if.then15.i.cleanup_crit_edge, %if.end6.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %land.end.cleanup_crit_edge, %if.then34.cleanup_crit_edge, %sw.epilog.cleanup_crit_edge, %do.end, %if.then30, %sw.bb24, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wacom_wac_report(ptr noundef %hdev, ptr nocapture noundef readonly %report) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.hid_device, ptr %hdev, i32 0, i32 18, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %type = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 10, i32 5
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 53, i32 %3)
  %cmp.not = icmp eq i32 %3, 53
  br i1 %cmp.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %maxfield = getelementptr inbounds %struct.hid_report, ptr %report, i32 0, i32 6
  %4 = ptrtoint ptr %maxfield to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %maxfield, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp2199.not = icmp eq i32 %5, 0
  br i1 %cmp2199.not, label %for.cond.preheader.for.end103_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end103_crit_edge:          ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end103

for.body:                                         ; preds = %if.end59.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %r.0204 = phi i32 [ %inc, %if.end59.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %true_pad.0.off0203 = phi i1 [ %spec.select, %if.end59.for.body_crit_edge ], [ false, %for.cond.preheader.for.body_crit_edge ]
  %finger_in_hid_field.0.off0202 = phi i1 [ %finger_in_hid_field.1.off0, %if.end59.for.body_crit_edge ], [ false, %for.cond.preheader.for.body_crit_edge ]
  %pen_in_hid_field.0.off0201 = phi i1 [ %pen_in_hid_field.1.off0, %if.end59.for.body_crit_edge ], [ false, %for.cond.preheader.for.body_crit_edge ]
  %pad_in_hid_field.0.off0200 = phi i1 [ %pad_in_hid_field.1.off0, %if.end59.for.body_crit_edge ], [ false, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.hid_report, ptr %report, i32 0, i32 5, i32 %r.0204
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.220)
  switch i32 %9, label %for.body.if.end11_crit_edge [
    i32 852025, label %for.body.if.then10_crit_edge
    i32 -15925191, label %for.body.if.then10_crit_edge237
    i32 -15921133, label %for.body.if.then10_crit_edge238
  ]

for.body.if.then10_crit_edge238:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then10

for.body.if.then10_crit_edge237:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then10

for.body.if.then10_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then10

for.body.if.end11_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end11

if.then10:                                        ; preds = %for.body.if.then10_crit_edge, %for.body.if.then10_crit_edge237, %for.body.if.then10_crit_edge238
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %for.body.if.end11_crit_edge
  %pad_in_hid_field.1.off0 = phi i1 [ true, %if.then10 ], [ %pad_in_hid_field.0.off0200, %for.body.if.end11_crit_edge ]
  %logical = getelementptr inbounds %struct.hid_field, ptr %7, i32 0, i32 1
  %11 = ptrtoint ptr %logical to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %logical, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 852000, i32 %12)
  %cmp12 = icmp eq i32 %12, 852000
  br i1 %cmp12, label %if.end11.if.then36_crit_edge, label %lor.lhs.false13

if.end11.if.then36_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false13:                                  ; preds = %if.end11
  %13 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.221)
  switch i32 %9, label %lor.lhs.false19 [
    i32 852000, label %lor.lhs.false13.if.then36_crit_edge
    i32 851970, label %lor.lhs.false13.if.then36_crit_edge239
  ]

lor.lhs.false13.if.then36_crit_edge239:           ; preds = %lor.lhs.false13
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false13.if.then36_crit_edge:              ; preds = %lor.lhs.false13
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %application = getelementptr inbounds %struct.hid_field, ptr %7, i32 0, i32 2
  %14 = ptrtoint ptr %application to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %application, align 4
  %16 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.222)
  switch i32 %15, label %lor.lhs.false19.if.end37_crit_edge [
    i32 851970, label %lor.lhs.false19.if.then36_crit_edge
    i32 851969, label %lor.lhs.false19.if.then36_crit_edge240
    i32 -15925246, label %lor.lhs.false19.if.then36_crit_edge241
    i32 -15925247, label %lor.lhs.false19.if.then36_crit_edge242
    i32 -16187390, label %lor.lhs.false19.if.then36_crit_edge243
    i32 -15663102, label %lor.lhs.false19.if.then36_crit_edge244
  ]

lor.lhs.false19.if.then36_crit_edge244:           ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false19.if.then36_crit_edge243:           ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false19.if.then36_crit_edge242:           ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false19.if.then36_crit_edge241:           ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false19.if.then36_crit_edge240:           ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false19.if.then36_crit_edge:              ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

lor.lhs.false19.if.end37_crit_edge:               ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end37

if.then36:                                        ; preds = %lor.lhs.false19.if.then36_crit_edge, %lor.lhs.false19.if.then36_crit_edge240, %lor.lhs.false19.if.then36_crit_edge241, %lor.lhs.false19.if.then36_crit_edge242, %lor.lhs.false19.if.then36_crit_edge243, %lor.lhs.false19.if.then36_crit_edge244, %lor.lhs.false13.if.then36_crit_edge, %lor.lhs.false13.if.then36_crit_edge239, %if.end11.if.then36_crit_edge
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %lor.lhs.false19.if.end37_crit_edge
  %pen_in_hid_field.1.off0 = phi i1 [ true, %if.then36 ], [ %pen_in_hid_field.0.off0201, %lor.lhs.false19.if.end37_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %12)
  %cmp39 = icmp eq i32 %12, 852002
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %9)
  %cmp42 = icmp eq i32 %9, 852002
  %or.cond = select i1 %cmp39, i1 true, i1 %cmp42
  br i1 %or.cond, label %if.end37.if.then58_crit_edge, label %lor.lhs.false43

if.end37.if.then58_crit_edge:                     ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

lor.lhs.false43:                                  ; preds = %if.end37
  %application44 = getelementptr inbounds %struct.hid_field, ptr %7, i32 0, i32 2
  %17 = ptrtoint ptr %application44 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %application44, align 4
  %19 = zext i32 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.223)
  switch i32 %18, label %lor.lhs.false43.if.end59_crit_edge [
    i32 851972, label %lor.lhs.false43.if.then58_crit_edge
    i32 -16187375, label %lor.lhs.false43.if.then58_crit_edge245
    i32 -15663087, label %lor.lhs.false43.if.then58_crit_edge246
    i32 -16777211, label %lor.lhs.false43.if.then58_crit_edge247
    i32 851973, label %lor.lhs.false43.if.then58_crit_edge248
  ]

lor.lhs.false43.if.then58_crit_edge248:           ; preds = %lor.lhs.false43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

lor.lhs.false43.if.then58_crit_edge247:           ; preds = %lor.lhs.false43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

lor.lhs.false43.if.then58_crit_edge246:           ; preds = %lor.lhs.false43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

lor.lhs.false43.if.then58_crit_edge245:           ; preds = %lor.lhs.false43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

lor.lhs.false43.if.then58_crit_edge:              ; preds = %lor.lhs.false43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then58

lor.lhs.false43.if.end59_crit_edge:               ; preds = %lor.lhs.false43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end59

if.then58:                                        ; preds = %lor.lhs.false43.if.then58_crit_edge, %lor.lhs.false43.if.then58_crit_edge245, %lor.lhs.false43.if.then58_crit_edge246, %lor.lhs.false43.if.then58_crit_edge247, %lor.lhs.false43.if.then58_crit_edge248, %if.end37.if.then58_crit_edge
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %lor.lhs.false43.if.end59_crit_edge
  %finger_in_hid_field.1.off0 = phi i1 [ true, %if.then58 ], [ %finger_in_hid_field.0.off0202, %lor.lhs.false43.if.end59_crit_edge ]
  %call61 = tail call i32 @wacom_equivalent_usage(i32 noundef %9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 852025, i32 %call61)
  %cmp62 = icmp eq i32 %call61, 852025
  %spec.select = select i1 %cmp62, i1 true, i1 %true_pad.0.off0203
  %inc = add nuw i32 %r.0204, 1
  %exitcond.not = icmp eq i32 %inc, %5
  br i1 %exitcond.not, label %for.end, label %if.end59.for.body_crit_edge

if.end59.for.body_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body

for.end:                                          ; preds = %if.end59
  br i1 %pad_in_hid_field.1.off0, label %land.lhs.true, label %for.end.if.end68_crit_edge

for.end.if.end68_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end68

land.lhs.true:                                    ; preds = %for.end
  %pad_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 14
  %20 = ptrtoint ptr %pad_input to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pad_input, align 8
  %tobool66.not = icmp eq ptr %21, null
  br i1 %tobool66.not, label %land.lhs.true.if.end68_crit_edge, label %if.then67

land.lhs.true.if.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end68

if.then67:                                        ; preds = %land.lhs.true
  %inrange_state.i = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 22, i32 3
  %22 = ptrtoint ptr %inrange_state.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 0, ptr %inrange_state.i, align 1
  br i1 %pen_in_hid_field.1.off0, label %if.then67.land.lhs.true70_crit_edge, label %if.then67.if.end74_crit_edge

if.then67.if.end74_crit_edge:                     ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end74

if.then67.land.lhs.true70_crit_edge:              ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true70

if.end68:                                         ; preds = %land.lhs.true.if.end68_crit_edge, %for.end.if.end68_crit_edge
  br i1 %pen_in_hid_field.1.off0, label %if.end68.land.lhs.true70_crit_edge, label %if.end68.if.end74_crit_edge

if.end68.if.end74_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end74

if.end68.land.lhs.true70_crit_edge:               ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true70

land.lhs.true70:                                  ; preds = %if.end68.land.lhs.true70_crit_edge, %if.then67.land.lhs.true70_crit_edge
  %pen_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 12
  %23 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pen_input, align 8
  %tobool72.not = icmp eq ptr %24, null
  br i1 %tobool72.not, label %land.lhs.true70.if.end74_crit_edge, label %if.then73

land.lhs.true70.if.end74_crit_edge:               ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end74

if.then73:                                        ; preds = %land.lhs.true70
  %25 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %driver_data.i.i, align 4
  %is_invalid_bt_frame.i = getelementptr inbounds %struct.wacom, ptr %26, i32 0, i32 2, i32 27
  %27 = ptrtoint ptr %is_invalid_bt_frame.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %is_invalid_bt_frame.i, align 4
  br i1 %finger_in_hid_field.1.off0, label %if.then73.land.lhs.true76_crit_edge, label %if.then73.if.end80_crit_edge

if.then73.if.end80_crit_edge:                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80

if.then73.land.lhs.true76_crit_edge:              ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true76

if.end74:                                         ; preds = %land.lhs.true70.if.end74_crit_edge, %if.end68.if.end74_crit_edge, %if.then67.if.end74_crit_edge
  br i1 %finger_in_hid_field.1.off0, label %if.end74.land.lhs.true76_crit_edge, label %if.end74.if.end80_crit_edge

if.end74.if.end80_crit_edge:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80

if.end74.land.lhs.true76_crit_edge:               ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true76

land.lhs.true76:                                  ; preds = %if.end74.land.lhs.true76_crit_edge, %if.then73.land.lhs.true76_crit_edge
  %touch_input = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 13
  %28 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %touch_input, align 4
  %tobool78.not = icmp eq ptr %29, null
  br i1 %tobool78.not, label %land.lhs.true76.if.end80_crit_edge, label %if.then79

land.lhs.true76.if.end80_crit_edge:               ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80

if.then79:                                        ; preds = %land.lhs.true76
  %30 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %driver_data.i.i, align 4
  %probe_complete.i.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 8
  %32 = ptrtoint ptr %probe_complete.i.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %probe_complete.i.i, align 8, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.not.i.i = icmp eq i8 %33, 0
  br i1 %tobool.not.i.i, label %if.then79.if.end.i_crit_edge, label %land.lhs.true.i.i

if.then79.if.end.i_crit_edge:                     ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

land.lhs.true.i.i:                                ; preds = %if.then79
  %shared.i.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 11
  %34 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %shared.i.i, align 4
  %has_mute_touch_switch.i.i = getelementptr inbounds %struct.wacom_shared, ptr %35, i32 0, i32 7
  %36 = ptrtoint ptr %has_mute_touch_switch.i.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %has_mute_touch_switch.i.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool1.not.i.i = icmp eq i8 %37, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.if.end.i_crit_edge, label %touch_is_muted.exit.i

land.lhs.true.i.i.if.end.i_crit_edge:             ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

touch_is_muted.exit.i:                            ; preds = %land.lhs.true.i.i
  %is_touch_on.i.i = getelementptr inbounds %struct.wacom_shared, ptr %35, i32 0, i32 8
  %38 = ptrtoint ptr %is_touch_on.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %is_touch_on.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool3.not.i.i = icmp eq i8 %39, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i, label %touch_is_muted.exit.i.if.end.i_crit_edge

touch_is_muted.exit.i.if.end.i_crit_edge:         ; preds = %touch_is_muted.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %touch_is_muted.exit.i
  %touch_down.i = getelementptr inbounds %struct.wacom_shared, ptr %35, i32 0, i32 1
  %40 = ptrtoint ptr %touch_down.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %touch_down.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool.not.i = icmp eq i8 %41, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.if.end80_crit_edge, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

land.lhs.true.i.if.end80_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %touch_is_muted.exit.i.if.end.i_crit_edge, %land.lhs.true.i.i.if.end.i_crit_edge, %if.then79.if.end.i_crit_edge
  %is_invalid_bt_frame.i180 = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 27
  %42 = ptrtoint ptr %is_invalid_bt_frame.i180 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 0, ptr %is_invalid_bt_frame.i180, align 4
  %confidence.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 22, i32 9
  %43 = ptrtoint ptr %confidence.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 1, ptr %confidence.i, align 1
  %cc_report.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 22, i32 16
  %44 = ptrtoint ptr %cc_report.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %cc_report.i, align 4
  %cc_index.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 22, i32 17
  %45 = ptrtoint ptr %cc_index.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 -1, ptr %cc_index.i, align 4
  %cc_value_index.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 22, i32 18
  %46 = ptrtoint ptr %cc_value_index.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 -1, ptr %cc_value_index.i, align 4
  %47 = ptrtoint ptr %maxfield to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %maxfield, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp74.not.i = icmp eq i32 %48, 0
  br i1 %cmp74.not.i, label %if.end.i.for.end17.i_crit_edge, label %for.body.lr.ph.i

if.end.i.for.end17.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end17.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %id.i = getelementptr inbounds %struct.hid_report, ptr %report, i32 0, i32 2
  %last_slot_field.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 22, i32 19
  br label %for.body.i

for.body.i:                                       ; preds = %for.end.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.075.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc16.i, %for.end.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.hid_report, ptr %report, i32 0, i32 5, i32 %i.075.i
  %49 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i, align 4
  %maxusage.i = getelementptr inbounds %struct.hid_field, ptr %50, i32 0, i32 4
  %51 = ptrtoint ptr %maxusage.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %maxusage.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %cmp672.not.i = icmp eq i32 %52, 0
  br i1 %cmp672.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body7.lr.ph.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.body7.lr.ph.i:                                ; preds = %for.body.i
  %usage8.i = getelementptr inbounds %struct.hid_field, ptr %50, i32 0, i32 3
  br label %for.body7.i

for.body7.i:                                      ; preds = %sw.epilog.i.for.body7.i_crit_edge, %for.body7.lr.ph.i
  %j.073.i = phi i32 [ 0, %for.body7.lr.ph.i ], [ %inc.i, %sw.epilog.i.for.body7.i_crit_edge ]
  %53 = ptrtoint ptr %usage8.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %usage8.i, align 4
  %arrayidx9.i = getelementptr %struct.hid_usage, ptr %54, i32 %j.073.i
  %55 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx9.i, align 4
  %call10.i = tail call i32 @wacom_equivalent_usage(i32 noundef %56) #8
  %57 = zext i32 %call10.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.224)
  switch i32 %call10.i, label %for.body7.i.sw.epilog.i_crit_edge [
    i32 65584, label %for.body7.i.sw.bb.i_crit_edge
    i32 65585, label %for.body7.i.sw.bb.i_crit_edge249
    i32 852040, label %for.body7.i.sw.bb.i_crit_edge250
    i32 852041, label %for.body7.i.sw.bb.i_crit_edge251
    i32 852049, label %for.body7.i.sw.bb.i_crit_edge252
    i32 852018, label %for.body7.i.sw.bb.i_crit_edge253
    i32 852028, label %for.body7.i.sw.bb.i_crit_edge254
    i32 852034, label %for.body7.i.sw.bb.i_crit_edge255
    i32 852052, label %sw.bb11.i
  ]

for.body7.i.sw.bb.i_crit_edge255:                 ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.bb.i_crit_edge254:                 ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.bb.i_crit_edge253:                 ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.bb.i_crit_edge252:                 ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.bb.i_crit_edge251:                 ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.bb.i_crit_edge250:                 ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.bb.i_crit_edge249:                 ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.bb.i_crit_edge:                    ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

for.body7.i.sw.epilog.i_crit_edge:                ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %for.body7.i.sw.bb.i_crit_edge, %for.body7.i.sw.bb.i_crit_edge249, %for.body7.i.sw.bb.i_crit_edge250, %for.body7.i.sw.bb.i_crit_edge251, %for.body7.i.sw.bb.i_crit_edge252, %for.body7.i.sw.bb.i_crit_edge253, %for.body7.i.sw.bb.i_crit_edge254, %for.body7.i.sw.bb.i_crit_edge255
  %58 = ptrtoint ptr %last_slot_field.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %call10.i, ptr %last_slot_field.i, align 4
  br label %sw.epilog.i

sw.bb11.i:                                        ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #10
  %59 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %id.i, align 4
  %61 = ptrtoint ptr %cc_report.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %cc_report.i, align 4
  %62 = ptrtoint ptr %cc_index.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %i.075.i, ptr %cc_index.i, align 4
  %63 = ptrtoint ptr %cc_value_index.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %j.073.i, ptr %cc_value_index.i, align 4
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb11.i, %sw.bb.i, %for.body7.i.sw.epilog.i_crit_edge
  %inc.i = add nuw i32 %j.073.i, 1
  %64 = ptrtoint ptr %maxusage.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %maxusage.i, align 4
  %cmp6.i = icmp ult i32 %inc.i, %65
  br i1 %cmp6.i, label %sw.epilog.i.for.body7.i_crit_edge, label %sw.epilog.i.for.end.i_crit_edge

sw.epilog.i.for.end.i_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

sw.epilog.i.for.body7.i_crit_edge:                ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body7.i

for.end.i:                                        ; preds = %sw.epilog.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge
  %inc16.i = add nuw i32 %i.075.i, 1
  %66 = ptrtoint ptr %maxfield to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %maxfield, align 4
  %cmp.i = icmp ult i32 %inc16.i, %67
  br i1 %cmp.i, label %for.end.i.for.body.i_crit_edge, label %for.end.i.for.end17.i_crit_edge

for.end.i.for.end17.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end17.i

for.end.i.for.body.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

for.end17.i:                                      ; preds = %for.end.i.for.end17.i_crit_edge, %if.end.i.for.end17.i_crit_edge
  %68 = ptrtoint ptr %cc_report.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %cc_report.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %cmp19.not.i = icmp eq i32 %69, 0
  br i1 %cmp19.not.i, label %for.end17.i.if.else.i_crit_edge, label %land.lhs.true20.i

for.end17.i.if.else.i_crit_edge:                  ; preds = %for.end17.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else.i

land.lhs.true20.i:                                ; preds = %for.end17.i
  %70 = ptrtoint ptr %cc_index.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %cc_index.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %71)
  %cmp22.i = icmp sgt i32 %71, -1
  br i1 %cmp22.i, label %if.then23.i, label %land.lhs.true20.i.if.else.i_crit_edge

land.lhs.true20.i.if.else.i_crit_edge:            ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else.i

if.then23.i:                                      ; preds = %land.lhs.true20.i
  %arrayidx27.i = getelementptr %struct.hid_report, ptr %report, i32 0, i32 5, i32 %71
  %72 = ptrtoint ptr %arrayidx27.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx27.i, align 4
  %value28.i = getelementptr inbounds %struct.hid_field, ptr %73, i32 0, i32 10
  %74 = ptrtoint ptr %value28.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %value28.i, align 4
  %76 = ptrtoint ptr %cc_value_index.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %cc_value_index.i, align 4
  %arrayidx30.i = getelementptr i32, ptr %75, i32 %77
  %78 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx30.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool31.not.i = icmp eq i32 %79, 0
  br i1 %tobool31.not.i, label %if.then23.i.if.end80_crit_edge, label %if.then23.i.cleanup.sink.split.i_crit_edge

if.then23.i.cleanup.sink.split.i_crit_edge:       ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.sink.split.i

if.then23.i.if.end80_crit_edge:                   ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80

if.else.i:                                        ; preds = %land.lhs.true20.i.if.else.i_crit_edge, %for.end17.i.if.else.i_crit_edge
  %touch_max.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 10, i32 24
  %80 = ptrtoint ptr %touch_max.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %touch_max.i, align 4
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.else.i, %if.then23.i.cleanup.sink.split.i_crit_edge
  %.sink.i = phi i32 [ %81, %if.else.i ], [ %79, %if.then23.i.cleanup.sink.split.i_crit_edge ]
  %num_expected34.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 22, i32 20
  %82 = ptrtoint ptr %num_expected34.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %.sink.i, ptr %num_expected34.i, align 4
  %num_received35.i = getelementptr inbounds %struct.wacom, ptr %31, i32 0, i32 2, i32 22, i32 21
  %83 = ptrtoint ptr %num_received35.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 0, ptr %num_received35.i, align 4
  br label %if.end80

if.end80:                                         ; preds = %cleanup.sink.split.i, %if.then23.i.if.end80_crit_edge, %land.lhs.true.i.if.end80_crit_edge, %land.lhs.true76.if.end80_crit_edge, %if.end74.if.end80_crit_edge, %if.then73.if.end80_crit_edge
  %84 = ptrtoint ptr %maxfield to i32
  call void @__asan_load4_noabort(i32 %84)
  %.pr = load i32, ptr %maxfield, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %cmp83208.not = icmp eq i32 %.pr, 0
  br i1 %cmp83208.not, label %if.end80.for.end103_crit_edge, label %for.body84.lr.ph

if.end80.for.end103_crit_edge:                    ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end103

for.body84.lr.ph:                                 ; preds = %if.end80
  %type.i = getelementptr inbounds %struct.hid_report, ptr %report, i32 0, i32 3
  br label %for.body84

for.body84:                                       ; preds = %for.inc101.for.body84_crit_edge, %for.body84.lr.ph
  %prev_collection.0211 = phi i32 [ -1, %for.body84.lr.ph ], [ %prev_collection.1, %for.inc101.for.body84_crit_edge ]
  %r.1209 = phi i32 [ 0, %for.body84.lr.ph ], [ %inc102, %for.inc101.for.body84_crit_edge ]
  %arrayidx86 = getelementptr %struct.hid_report, ptr %report, i32 0, i32 5, i32 %r.1209
  %85 = ptrtoint ptr %arrayidx86 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx86, align 4
  %usage = getelementptr inbounds %struct.hid_field, ptr %86, i32 0, i32 3
  %87 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %usage, align 4
  %collection_index = getelementptr inbounds %struct.hid_usage, ptr %88, i32 0, i32 1
  %89 = ptrtoint ptr %collection_index to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %collection_index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %90, i32 %prev_collection.0211)
  %cmp88.not = icmp eq i32 %90, %prev_collection.0211
  br i1 %cmp88.not, label %for.body84.for.inc101_crit_edge, label %if.then89

for.body84.for.inc101_crit_edge:                  ; preds = %for.body84
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc101

if.then89:                                        ; preds = %for.body84
  %91 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %driver_data.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc15.i.i.for.body.i.i_crit_edge, %if.then89
  %r.038.i.i = phi i32 [ %inc16.i.i, %for.inc15.i.i.for.body.i.i_crit_edge ], [ %r.1209, %if.then89 ]
  %arrayidx.i.i = getelementptr %struct.hid_report, ptr %report, i32 0, i32 5, i32 %r.038.i.i
  %93 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %arrayidx.i.i, align 4
  %report_count.i.i = getelementptr inbounds %struct.hid_field, ptr %94, i32 0, i32 8
  %95 = ptrtoint ptr %report_count.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %report_count.i.i, align 4
  %flags.i.i = getelementptr inbounds %struct.hid_field, ptr %94, i32 0, i32 5
  %97 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %98, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i182 = icmp ne i32 %and.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %cmp335.i.i = icmp ne i32 %96, 0
  %or.cond.i.i = select i1 %tobool.not.i.i182, i1 %cmp335.i.i, i1 false
  br i1 %or.cond.i.i, label %for.body4.lr.ph.i.i, label %for.body.i.i.for.inc15.i.i_crit_edge

for.body.i.i.for.inc15.i.i_crit_edge:             ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc15.i.i

for.body4.lr.ph.i.i:                              ; preds = %for.body.i.i
  %usage.i.i = getelementptr inbounds %struct.hid_field, ptr %94, i32 0, i32 3
  %value.i.i = getelementptr inbounds %struct.hid_field, ptr %94, i32 0, i32 10
  br label %for.body4.i.i

for.body4.i.i:                                    ; preds = %if.then8.i.i.for.body4.i.i_crit_edge, %for.body4.lr.ph.i.i
  %n.036.i.i = phi i32 [ 0, %for.body4.lr.ph.i.i ], [ %inc.i.i, %if.then8.i.i.for.body4.i.i_crit_edge ]
  %99 = ptrtoint ptr %usage.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %usage.i.i, align 4
  %collection_index6.i.i = getelementptr %struct.hid_usage, ptr %100, i32 %n.036.i.i, i32 1
  %101 = ptrtoint ptr %collection_index6.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %collection_index6.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %102, i32 %90)
  %cmp7.i.i = icmp eq i32 %102, %90
  br i1 %cmp7.i.i, label %if.then8.i.i, label %for.body4.i.i.wacom_report_events.exit.i_crit_edge

for.body4.i.i.wacom_report_events.exit.i_crit_edge: ; preds = %for.body4.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_report_events.exit.i

if.then8.i.i:                                     ; preds = %for.body4.i.i
  %arrayidx5.i.i = getelementptr %struct.hid_usage, ptr %100, i32 %n.036.i.i
  %103 = ptrtoint ptr %value.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %value.i.i, align 4
  %arrayidx11.i.i = getelementptr i32, ptr %104, i32 %n.036.i.i
  %105 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %arrayidx11.i.i, align 4
  tail call void @wacom_wac_event(ptr noundef %hdev, ptr noundef %94, ptr noundef %arrayidx5.i.i, i32 noundef %106) #8
  %inc.i.i = add nuw i32 %n.036.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %96
  br i1 %exitcond.not.i.i, label %if.then8.i.i.for.inc15.i.i_crit_edge, label %if.then8.i.i.for.body4.i.i_crit_edge

if.then8.i.i.for.body4.i.i_crit_edge:             ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body4.i.i

if.then8.i.i.for.inc15.i.i_crit_edge:             ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc15.i.i

for.inc15.i.i:                                    ; preds = %if.then8.i.i.for.inc15.i.i_crit_edge, %for.body.i.i.for.inc15.i.i_crit_edge
  %inc16.i.i = add nuw i32 %r.038.i.i, 1
  %107 = ptrtoint ptr %maxfield to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %maxfield, align 4
  %cmp.i.i = icmp ult i32 %inc16.i.i, %108
  br i1 %cmp.i.i, label %for.inc15.i.i.for.body.i.i_crit_edge, label %for.inc15.i.i.wacom_report_events.exit.i_crit_edge

for.inc15.i.i.wacom_report_events.exit.i_crit_edge: ; preds = %for.inc15.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_report_events.exit.i

for.inc15.i.i.for.body.i.i_crit_edge:             ; preds = %for.inc15.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i

wacom_report_events.exit.i:                       ; preds = %for.inc15.i.i.wacom_report_events.exit.i_crit_edge, %for.body4.i.i.wacom_report_events.exit.i_crit_edge
  %109 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %cmp.not.i = icmp eq i32 %110, 0
  br i1 %cmp.not.i, label %if.end.i183, label %wacom_report_events.exit.i.cleanup_crit_edge

wacom_report_events.exit.i.cleanup_crit_edge:     ; preds = %wacom_report_events.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end.i183:                                      ; preds = %wacom_report_events.exit.i
  %111 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %86, align 4
  %113 = zext i32 %112 to i64
  call void @__sanitizer_cov_trace_switch(i64 %113, ptr @__sancov_gen_cov_switch_values.225)
  switch i32 %112, label %if.else.i184 [
    i32 852025, label %if.end.i183.if.end96_crit_edge
    i32 -15925191, label %if.end.i183.if.end96_crit_edge256
    i32 -15921133, label %if.end.i183.if.end96_crit_edge257
  ]

if.end.i183.if.end96_crit_edge257:                ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.end.i183.if.end96_crit_edge256:                ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.end.i183.if.end96_crit_edge:                   ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.else.i184:                                     ; preds = %if.end.i183
  %logical.i = getelementptr inbounds %struct.hid_field, ptr %86, i32 0, i32 1
  %114 = ptrtoint ptr %logical.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %logical.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 852000, i32 %115)
  %cmp8.i = icmp eq i32 %115, 852000
  call void @__sanitizer_cov_trace_const_cmp4(i32 852000, i32 %112)
  %cmp11.i = icmp eq i32 %112, 852000
  %or.cond.i = select i1 %cmp8.i, i1 true, i1 %cmp11.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 851970, i32 %112)
  %cmp14.i = icmp eq i32 %112, 851970
  %or.cond88.i = select i1 %or.cond.i, i1 true, i1 %cmp14.i
  br i1 %or.cond88.i, label %if.else.i184.land.lhs.true.i186_crit_edge, label %lor.lhs.false15.i

if.else.i184.land.lhs.true.i186_crit_edge:        ; preds = %if.else.i184
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true.i186

lor.lhs.false15.i:                                ; preds = %if.else.i184
  %application.i = getelementptr inbounds %struct.hid_field, ptr %86, i32 0, i32 2
  %116 = ptrtoint ptr %application.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %application.i, align 4
  %118 = zext i32 %117 to i64
  call void @__sanitizer_cov_trace_switch(i64 %118, ptr @__sancov_gen_cov_switch_values.226)
  switch i32 %117, label %lor.lhs.false15.i.if.else33.i_crit_edge [
    i32 851970, label %lor.lhs.false15.i.land.lhs.true.i186_crit_edge
    i32 851969, label %lor.lhs.false15.i.land.lhs.true.i186_crit_edge258
    i32 -15925246, label %lor.lhs.false15.i.land.lhs.true.i186_crit_edge259
    i32 -15925247, label %lor.lhs.false15.i.land.lhs.true.i186_crit_edge260
    i32 -16187390, label %lor.lhs.false15.i.land.lhs.true.i186_crit_edge261
    i32 -15663102, label %lor.lhs.false15.i.land.lhs.true.i186_crit_edge262
  ]

lor.lhs.false15.i.land.lhs.true.i186_crit_edge262: ; preds = %lor.lhs.false15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true.i186

lor.lhs.false15.i.land.lhs.true.i186_crit_edge261: ; preds = %lor.lhs.false15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true.i186

lor.lhs.false15.i.land.lhs.true.i186_crit_edge260: ; preds = %lor.lhs.false15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true.i186

lor.lhs.false15.i.land.lhs.true.i186_crit_edge259: ; preds = %lor.lhs.false15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true.i186

lor.lhs.false15.i.land.lhs.true.i186_crit_edge258: ; preds = %lor.lhs.false15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true.i186

lor.lhs.false15.i.land.lhs.true.i186_crit_edge:   ; preds = %lor.lhs.false15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true.i186

lor.lhs.false15.i.if.else33.i_crit_edge:          ; preds = %lor.lhs.false15.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else33.i

land.lhs.true.i186:                               ; preds = %lor.lhs.false15.i.land.lhs.true.i186_crit_edge, %lor.lhs.false15.i.land.lhs.true.i186_crit_edge258, %lor.lhs.false15.i.land.lhs.true.i186_crit_edge259, %lor.lhs.false15.i.land.lhs.true.i186_crit_edge260, %lor.lhs.false15.i.land.lhs.true.i186_crit_edge261, %lor.lhs.false15.i.land.lhs.true.i186_crit_edge262, %if.else.i184.land.lhs.true.i186_crit_edge
  %pen_input.i = getelementptr inbounds %struct.wacom, ptr %92, i32 0, i32 2, i32 12
  %119 = ptrtoint ptr %pen_input.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %pen_input.i, align 8
  %tobool.not.i185 = icmp eq ptr %120, null
  br i1 %tobool.not.i185, label %land.lhs.true.i186.if.else33.i_crit_edge, label %if.then32.i

land.lhs.true.i186.if.else33.i_crit_edge:         ; preds = %land.lhs.true.i186
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else33.i

if.then32.i:                                      ; preds = %land.lhs.true.i186
  %121 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %driver_data.i.i, align 4
  %pen_input.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 12
  %123 = ptrtoint ptr %pen_input.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %pen_input.i.i, align 8
  %sense_state.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 22, i32 2
  %125 = ptrtoint ptr %sense_state.i.i to i32
  call void @__asan_load1_noabort(i32 %125)
  %126 = load i8, ptr %sense_state.i.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %126)
  %tobool3.not.i.i187 = icmp eq i8 %126, 0
  %is_invalid_bt_frame.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 27
  %127 = ptrtoint ptr %is_invalid_bt_frame.i.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %is_invalid_bt_frame.i.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %128)
  %tobool5.not.i.i = icmp eq i8 %128, 0
  br i1 %tobool5.not.i.i, label %if.end.i.i, label %if.then32.i.if.end96_crit_edge

if.then32.i.if.end96_crit_edge:                   ; preds = %if.then32.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.end.i.i:                                       ; preds = %if.then32.i
  %inrange_state.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 22, i32 3
  %129 = ptrtoint ptr %inrange_state.i.i to i32
  call void @__asan_load1_noabort(i32 %129)
  %130 = load i8, ptr %inrange_state.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %130)
  %tobool.not.i89.i = icmp eq i8 %130, 0
  %tool.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 5
  %131 = ptrtoint ptr %tool.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %tool.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %132)
  %tobool6.not.i.i = icmp ne i32 %132, 0
  %brmerge.i.i = select i1 %tobool6.not.i.i, i1 true, i1 %tobool.not.i89.i
  br i1 %brmerge.i.i, label %if.end.i.i.if.end27.i.i_crit_edge, label %if.then8.i90.i

if.end.i.i.if.end27.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end27.i.i

if.then8.i90.i:                                   ; preds = %if.end.i.i
  %invert_state.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 22, i32 4
  %133 = ptrtoint ptr %invert_state.i.i to i32
  call void @__asan_load1_noabort(i32 %133)
  %134 = load i8, ptr %invert_state.i.i, align 2, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %134)
  %tobool10.not.i.i = icmp eq i8 %134, 0
  br i1 %tobool10.not.i.i, label %if.else.i.i, label %if.then8.i90.i.if.end27.sink.split.i.i_crit_edge

if.then8.i90.i.if.end27.sink.split.i.i_crit_edge: ; preds = %if.then8.i90.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end27.sink.split.i.i

if.else.i.i:                                      ; preds = %if.then8.i90.i
  %id.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 6
  %135 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %id.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %136)
  %tobool15.not.i.i = icmp eq i32 %136, 0
  br i1 %tobool15.not.i.i, label %if.else.i.i.if.end27.sink.split.i.i_crit_edge, label %if.then16.i.i

if.else.i.i.if.end27.sink.split.i.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end27.sink.split.i.i

if.then16.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %call19.i.i = tail call fastcc i32 @wacom_intuos_get_tool_type(i32 noundef %136) #8
  br label %if.end27.sink.split.i.i

if.end27.sink.split.i.i:                          ; preds = %if.then16.i.i, %if.else.i.i.if.end27.sink.split.i.i_crit_edge, %if.then8.i90.i.if.end27.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ %call19.i.i, %if.then16.i.i ], [ 321, %if.then8.i90.i.if.end27.sink.split.i.i_crit_edge ], [ 320, %if.else.i.i.if.end27.sink.split.i.i_crit_edge ]
  %137 = ptrtoint ptr %tool.i.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %.sink.i.i, ptr %tool.i.i, align 4
  br label %if.end27.i.i

if.end27.i.i:                                     ; preds = %if.end27.sink.split.i.i, %if.end.i.i.if.end27.i.i_crit_edge
  %shared.i.i188 = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 11
  %138 = ptrtoint ptr %shared.i.i188 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %shared.i.i188, align 4
  %140 = ptrtoint ptr %139 to i32
  call void @__asan_store1_noabort(i32 %140)
  store i8 %126, ptr %139, align 4
  %141 = load ptr, ptr %shared.i.i188, align 4
  %touch_down.i.i.i = getelementptr inbounds %struct.wacom_shared, ptr %141, i32 0, i32 1
  %142 = ptrtoint ptr %touch_down.i.i.i to i32
  call void @__asan_load1_noabort(i32 %142)
  %143 = load i8, ptr %touch_down.i.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %143)
  %tobool.not.i.i.i = icmp eq i8 %143, 0
  br i1 %tobool.not.i.i.i, label %if.end27.i.i.land.lhs.true31.i.i_crit_edge, label %delay_pen_events.exit.i.i

if.end27.i.i.land.lhs.true31.i.i_crit_edge:       ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true31.i.i

delay_pen_events.exit.i.i:                        ; preds = %if.end27.i.i
  %144 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %144)
  %tobool1.i.not.i.i = icmp eq i8 %144, 0
  br i1 %tobool1.i.not.i.i, label %delay_pen_events.exit.i.i.land.lhs.true31.i.i_crit_edge, label %delay_pen_events.exit.i.i.if.end74.i.i_crit_edge

delay_pen_events.exit.i.i.if.end74.i.i_crit_edge: ; preds = %delay_pen_events.exit.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end74.i.i

delay_pen_events.exit.i.i.land.lhs.true31.i.i_crit_edge: ; preds = %delay_pen_events.exit.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true31.i.i

land.lhs.true31.i.i:                              ; preds = %delay_pen_events.exit.i.i.land.lhs.true31.i.i_crit_edge, %if.end27.i.i.land.lhs.true31.i.i_crit_edge
  %145 = ptrtoint ptr %tool.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %tool.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %146)
  %tobool34.not.i.i = icmp eq i32 %146, 0
  br i1 %tobool34.not.i.i, label %land.lhs.true31.i.i.if.end74.i.i_crit_edge, label %if.then35.i.i

land.lhs.true31.i.i.if.end74.i.i_crit_edge:       ; preds = %land.lhs.true31.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end74.i.i

if.then35.i.i:                                    ; preds = %land.lhs.true31.i.i
  %id37.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 6
  %147 = ptrtoint ptr %id37.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %id37.i.i, align 4
  %barrelswitch.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 22, i32 6
  %149 = ptrtoint ptr %barrelswitch.i.i to i32
  call void @__asan_load1_noabort(i32 %149)
  %150 = load i8, ptr %barrelswitch.i.i, align 4, !range !727
  %barrelswitch2.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 22, i32 7
  %151 = ptrtoint ptr %barrelswitch2.i.i to i32
  call void @__asan_load1_noabort(i32 %151)
  %152 = load i8, ptr %barrelswitch2.i.i, align 1, !range !727
  %153 = shl nuw nsw i8 %152, 1
  %or1.i.i = or i8 %153, %150
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %or1.i.i)
  %cmp.i91.i = icmp eq i8 %or1.i.i, 1
  %lnot.ext.i.i.i = zext i1 %cmp.i91.i to i32
  tail call void @input_event(ptr noundef %124, i32 noundef 1, i32 noundef 331, i32 noundef %lnot.ext.i.i.i) #8
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %or1.i.i)
  %cmp45.i.i = icmp eq i8 %or1.i.i, 2
  %lnot.ext.i2.i.i = zext i1 %cmp45.i.i to i32
  tail call void @input_event(ptr noundef %124, i32 noundef 1, i32 noundef 332, i32 noundef %lnot.ext.i2.i.i) #8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %or1.i.i)
  %cmp47.i.i = icmp eq i8 %or1.i.i, 3
  %lnot.ext.i3.i.i = zext i1 %cmp47.i.i to i32
  tail call void @input_event(ptr noundef %124, i32 noundef 1, i32 noundef 329, i32 noundef %lnot.ext.i3.i.i) #8
  %serial.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 7
  %154 = ptrtoint ptr %serial.i.i to i32
  call void @__asan_load8_noabort(i32 %154)
  %155 = load i64, ptr %serial.i.i, align 8
  %tipswitch.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 22, i32 5
  %156 = ptrtoint ptr %tipswitch.i.i to i32
  call void @__asan_load1_noabort(i32 %156)
  %157 = load i8, ptr %tipswitch.i.i, align 1, !range !727
  %158 = zext i8 %157 to i32
  tail call void @input_event(ptr noundef %124, i32 noundef 1, i32 noundef 330, i32 noundef %158) #8
  %159 = ptrtoint ptr %tool.i.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %tool.i.i, align 4
  %161 = zext i8 %126 to i32
  tail call void @input_event(ptr noundef %124, i32 noundef 1, i32 noundef %160, i32 noundef %161) #8
  %162 = ptrtoint ptr %serial.i.i to i32
  call void @__asan_load8_noabort(i32 %162)
  %163 = load i64, ptr %serial.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %163)
  %tobool64.not.i.i = icmp eq i64 %163, 0
  br i1 %tobool64.not.i.i, label %if.then35.i.i.if.end71.i.i_crit_edge, label %if.then65.i.i

if.then35.i.i.if.end71.i.i_crit_edge:             ; preds = %if.then35.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end71.i.i

if.then65.i.i:                                    ; preds = %if.then35.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %shr.mask.i.i = and i64 %155, -4503599627370496
  call void @__sanitizer_cov_trace_const_cmp8(i64 4503599627370496, i64 %shr.mask.i.i)
  %cmp50.i.i = icmp eq i64 %shr.mask.i.i, 4503599627370496
  %and.i.i.i = shl i32 %148, 4
  %shl.i.i.i = and i32 %and.i.i.i, -65536
  %and1.i.i.i = and i32 %148, 4095
  %or.i.i.i = or i32 %shl.i.i.i, %and1.i.i.i
  %id36.0.i.i = select i1 %cmp50.i.i, i32 %or.i.i.i, i32 %148
  %conv68.i.i = trunc i64 %163 to i32
  tail call void @input_event(ptr noundef %124, i32 noundef 4, i32 noundef 0, i32 noundef %conv68.i.i) #8
  %spec.select.i.i = select i1 %tobool3.not.i.i187, i32 0, i32 %id36.0.i.i
  tail call void @input_event(ptr noundef %124, i32 noundef 3, i32 noundef 40, i32 noundef %spec.select.i.i) #8
  br label %if.end71.i.i

if.end71.i.i:                                     ; preds = %if.then65.i.i, %if.then35.i.i.if.end71.i.i_crit_edge
  %164 = ptrtoint ptr %tipswitch.i.i to i32
  call void @__asan_store1_noabort(i32 %164)
  store i8 0, ptr %tipswitch.i.i, align 1
  tail call void @input_event(ptr noundef %124, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %if.end74.i.i

if.end74.i.i:                                     ; preds = %if.end71.i.i, %land.lhs.true31.i.i.if.end74.i.i_crit_edge, %delay_pen_events.exit.i.i.if.end74.i.i_crit_edge
  br i1 %tobool3.not.i.i187, label %if.then76.i.i, label %if.end74.i.i.if.end96_crit_edge

if.end74.i.i.if.end96_crit_edge:                  ; preds = %if.end74.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.then76.i.i:                                    ; preds = %if.end74.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %165 = ptrtoint ptr %tool.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 0, ptr %tool.i.i, align 4
  %id79.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 6
  %166 = ptrtoint ptr %id79.i.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 0, ptr %id79.i.i, align 4
  %serial81.i.i = getelementptr inbounds %struct.wacom, ptr %122, i32 0, i32 2, i32 7
  %167 = ptrtoint ptr %serial81.i.i to i32
  call void @__asan_store8_noabort(i32 %167)
  store i64 0, ptr %serial81.i.i, align 8
  br label %if.end96

if.else33.i:                                      ; preds = %land.lhs.true.i186.if.else33.i_crit_edge, %lor.lhs.false15.i.if.else33.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %115)
  %cmp35.i = icmp eq i32 %115, 852002
  call void @__sanitizer_cov_trace_const_cmp4(i32 852002, i32 %112)
  %cmp38.i = icmp eq i32 %112, 852002
  %or.cond96.i = select i1 %cmp35.i, i1 true, i1 %cmp38.i
  br i1 %or.cond96.i, label %if.else33.i.land.lhs.true54.i_crit_edge, label %lor.lhs.false39.i

if.else33.i.land.lhs.true54.i_crit_edge:          ; preds = %if.else33.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true54.i

lor.lhs.false39.i:                                ; preds = %if.else33.i
  %application40.i = getelementptr inbounds %struct.hid_field, ptr %86, i32 0, i32 2
  %168 = ptrtoint ptr %application40.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %application40.i, align 4
  %170 = zext i32 %169 to i64
  call void @__sanitizer_cov_trace_switch(i64 %170, ptr @__sancov_gen_cov_switch_values.227)
  switch i32 %169, label %lor.lhs.false39.i.if.end96_crit_edge [
    i32 851972, label %lor.lhs.false39.i.land.lhs.true54.i_crit_edge
    i32 -16187375, label %lor.lhs.false39.i.land.lhs.true54.i_crit_edge263
    i32 -15663087, label %lor.lhs.false39.i.land.lhs.true54.i_crit_edge264
    i32 -16777211, label %lor.lhs.false39.i.land.lhs.true54.i_crit_edge265
    i32 851973, label %lor.lhs.false39.i.land.lhs.true54.i_crit_edge266
  ]

lor.lhs.false39.i.land.lhs.true54.i_crit_edge266: ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true54.i

lor.lhs.false39.i.land.lhs.true54.i_crit_edge265: ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true54.i

lor.lhs.false39.i.land.lhs.true54.i_crit_edge264: ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true54.i

lor.lhs.false39.i.land.lhs.true54.i_crit_edge263: ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true54.i

lor.lhs.false39.i.land.lhs.true54.i_crit_edge:    ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true54.i

lor.lhs.false39.i.if.end96_crit_edge:             ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

land.lhs.true54.i:                                ; preds = %lor.lhs.false39.i.land.lhs.true54.i_crit_edge, %lor.lhs.false39.i.land.lhs.true54.i_crit_edge263, %lor.lhs.false39.i.land.lhs.true54.i_crit_edge264, %lor.lhs.false39.i.land.lhs.true54.i_crit_edge265, %lor.lhs.false39.i.land.lhs.true54.i_crit_edge266, %if.else33.i.land.lhs.true54.i_crit_edge
  %touch_input.i = getelementptr inbounds %struct.wacom, ptr %92, i32 0, i32 2, i32 13
  %171 = ptrtoint ptr %touch_input.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %touch_input.i, align 4
  %tobool56.not.i = icmp eq ptr %172, null
  br i1 %tobool56.not.i, label %land.lhs.true54.i.if.end96_crit_edge, label %if.then57.i

land.lhs.true54.i.if.end96_crit_edge:             ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.then57.i:                                      ; preds = %land.lhs.true54.i
  %173 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %driver_data.i.i, align 4
  %touch_input.i.i = getelementptr inbounds %struct.wacom, ptr %174, i32 0, i32 2, i32 13
  %175 = ptrtoint ptr %touch_input.i.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %touch_input.i.i, align 4
  %touch_max2.i.i = getelementptr inbounds %struct.wacom, ptr %174, i32 0, i32 2, i32 10, i32 24
  %177 = ptrtoint ptr %touch_max2.i.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %touch_max2.i.i, align 4
  %num_expected.i.i = getelementptr inbounds %struct.wacom, ptr %174, i32 0, i32 2, i32 22, i32 20
  %179 = ptrtoint ptr %num_expected.i.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %num_expected.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %180)
  %cmp.i93.i = icmp eq i32 %180, 0
  br i1 %cmp.i93.i, label %if.then57.i.if.end96_crit_edge, label %if.end.i94.i

if.then57.i.if.end96_crit_edge:                   ; preds = %if.then57.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.end.i94.i:                                     ; preds = %if.then57.i
  %num_received.i.i = getelementptr inbounds %struct.wacom, ptr %174, i32 0, i32 2, i32 22, i32 21
  %181 = ptrtoint ptr %num_received.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %num_received.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %182, i32 %180)
  %cmp6.i.i = icmp slt i32 %182, %180
  br i1 %cmp6.i.i, label %if.end.i94.i.if.end96_crit_edge, label %if.end8.i.i

if.end.i94.i.if.end96_crit_edge:                  ; preds = %if.end.i94.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.end8.i.i:                                      ; preds = %if.end.i94.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %178)
  %cmp9.i.i = icmp ugt i32 %178, 1
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end8.i.i.if.end11.i.i_crit_edge

if.end8.i.i.if.end11.i.i_crit_edge:               ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end11.i.i

if.then10.i.i:                                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_mt_sync_frame(ptr noundef %176) #8
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.then10.i.i, %if.end8.i.i.if.end11.i.i_crit_edge
  tail call void @input_event(ptr noundef %176, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %183 = ptrtoint ptr %num_received.i.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 0, ptr %num_received.i.i, align 4
  %184 = ptrtoint ptr %num_expected.i.i to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 0, ptr %num_expected.i.i, align 4
  %185 = ptrtoint ptr %touch_input.i.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %touch_input.i.i, align 4
  %187 = ptrtoint ptr %touch_max2.i.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %touch_max2.i.i, align 4
  %189 = zext i32 %188 to i64
  call void @__sanitizer_cov_trace_switch(i64 %189, ptr @__sancov_gen_cov_switch_values.228)
  switch i32 %188, label %for.cond.preheader.i.i.i [
    i32 0, label %if.end11.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge
    i32 1, label %if.then2.i.i.i
  ]

if.end11.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

for.cond.preheader.i.i.i:                         ; preds = %if.end11.i.i
  %mt.i.i.i = getelementptr inbounds %struct.input_dev, ptr %186, i32 0, i32 25
  %190 = ptrtoint ptr %mt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %mt.i.i.i, align 4
  %num_slots.i.i.i = getelementptr inbounds %struct.input_mt, ptr %191, i32 0, i32 1
  %192 = ptrtoint ptr %num_slots.i.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %num_slots.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %193)
  %cmp627.i.i.i = icmp sgt i32 %193, 0
  br i1 %cmp627.i.i.i, label %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge, label %for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge

for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  br label %for.body.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end11.i.i
  %arrayidx.i.i.i.i = getelementptr %struct.input_dev, ptr %186, i32 0, i32 27, i32 10
  %194 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %196 = and i32 %195, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %196)
  %tobool3.not.i.i.i = icmp eq i32 %196, 0
  br i1 %tobool3.not.i.i.i, label %if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, label %land.rhs.i.i.i

if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

land.rhs.i.i.i:                                   ; preds = %if.then2.i.i.i
  %197 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %197)
  %tobool.not.i.i.i.i = icmp eq i8 %197, 0
  br i1 %tobool.not.i.i.i.i, label %land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, label %cond.true.i.i.i.i

land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

cond.true.i.i.i.i:                                ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i.i.i.i = getelementptr inbounds %struct.wacom, ptr %174, i32 0, i32 2, i32 11
  %198 = ptrtoint ptr %shared.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %shared.i.i.i.i, align 4
  %200 = ptrtoint ptr %199 to i32
  call void @__asan_load1_noabort(i32 %200)
  %201 = load i8, ptr %199, align 4, !range !727
  %202 = xor i8 %201, 1
  %203 = zext i8 %202 to i32
  br label %wacom_wac_finger_count_touches.exit.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge
  %i.029.i.i.i = phi i32 [ %inc12.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %count.028.i.i.i = phi i32 [ %spec.select.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %arrayidx.i24.i.i.i = getelementptr %struct.input_mt, ptr %191, i32 0, i32 6, i32 %i.029.i.i.i, i32 0, i32 9
  %204 = ptrtoint ptr %arrayidx.i24.i.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %arrayidx.i24.i.i.i, align 4
  %206 = xor i32 %205, -1
  %.lobit.not.i.i.i = lshr i32 %206, 31
  %spec.select.i.i.i = add i32 %.lobit.not.i.i.i, %count.028.i.i.i
  %inc12.i.i.i = add nuw nsw i32 %i.029.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc12.i.i.i, %193
  br i1 %exitcond.not.i.i.i, label %for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, label %for.body.i.i.i.for.body.i.i.i_crit_edge

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i.i

for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

wacom_wac_finger_count_touches.exit.i.i:          ; preds = %for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %cond.true.i.i.i.i, %land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %if.end11.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %188, %if.end11.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ 0, %if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ %203, %cond.true.i.i.i.i ], [ 1, %land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ %spec.select.i.i.i, %for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i.i)
  %tobool.i.i = icmp ne i32 %retval.0.i.i.i, 0
  %shared.i95.i = getelementptr inbounds %struct.wacom, ptr %174, i32 0, i32 2, i32 11
  %207 = ptrtoint ptr %shared.i95.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %shared.i95.i, align 4
  %touch_down.i.i = getelementptr inbounds %struct.wacom_shared, ptr %208, i32 0, i32 1
  %frombool.i.i = zext i1 %tobool.i.i to i8
  %209 = ptrtoint ptr %touch_down.i.i to i32
  call void @__asan_store1_noabort(i32 %209)
  store i8 %frombool.i.i, ptr %touch_down.i.i, align 1
  br label %if.end96

if.end96:                                         ; preds = %wacom_wac_finger_count_touches.exit.i.i, %if.end.i94.i.if.end96_crit_edge, %if.then57.i.if.end96_crit_edge, %land.lhs.true54.i.if.end96_crit_edge, %lor.lhs.false39.i.if.end96_crit_edge, %if.then76.i.i, %if.end74.i.i.if.end96_crit_edge, %if.then32.i.if.end96_crit_edge, %if.end.i183.if.end96_crit_edge, %if.end.i183.if.end96_crit_edge256, %if.end.i183.if.end96_crit_edge257
  %210 = ptrtoint ptr %usage to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %usage, align 4
  %collection_index99 = getelementptr inbounds %struct.hid_usage, ptr %211, i32 0, i32 1
  %212 = ptrtoint ptr %collection_index99 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %collection_index99, align 4
  br label %for.inc101

for.inc101:                                       ; preds = %if.end96, %for.body84.for.inc101_crit_edge
  %prev_collection.1 = phi i32 [ %213, %if.end96 ], [ %prev_collection.0211, %for.body84.for.inc101_crit_edge ]
  %inc102 = add nuw i32 %r.1209, 1
  %214 = ptrtoint ptr %maxfield to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %maxfield, align 4
  %cmp83 = icmp ult i32 %inc102, %215
  br i1 %cmp83, label %for.inc101.for.body84_crit_edge, label %for.inc101.for.end103_crit_edge

for.inc101.for.end103_crit_edge:                  ; preds = %for.inc101
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end103

for.inc101.for.body84_crit_edge:                  ; preds = %for.inc101
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body84

for.end103:                                       ; preds = %for.inc101.for.end103_crit_edge, %if.end80.for.end103_crit_edge, %for.cond.preheader.for.end103_crit_edge
  %true_pad.0.off0.lcssa219223229233 = phi i1 [ %spec.select, %if.end80.for.end103_crit_edge ], [ false, %for.cond.preheader.for.end103_crit_edge ], [ %spec.select, %for.inc101.for.end103_crit_edge ]
  %216 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %driver_data.i.i, align 4
  %quirks.i = getelementptr inbounds %struct.wacom, ptr %217, i32 0, i32 2, i32 10, i32 23
  %218 = ptrtoint ptr %quirks.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %quirks.i, align 4
  %and.i = and i32 %219, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i190 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i190, label %for.end103.wacom_wac_battery_report.exit_crit_edge, label %if.then.i

for.end103.wacom_wac_battery_report.exit_crit_edge: ; preds = %for.end103
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_battery_report.exit

if.then.i:                                        ; preds = %for.end103
  %bat_status.i = getelementptr inbounds %struct.wacom, ptr %217, i32 0, i32 2, i32 22, i32 22
  %220 = ptrtoint ptr %bat_status.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %bat_status.i, align 4
  %battery_capacity.i = getelementptr inbounds %struct.wacom, ptr %217, i32 0, i32 2, i32 22, i32 23
  %222 = ptrtoint ptr %battery_capacity.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %battery_capacity.i, align 4
  %bat_charging.i = getelementptr inbounds %struct.wacom, ptr %217, i32 0, i32 2, i32 22, i32 24
  %224 = ptrtoint ptr %bat_charging.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %bat_charging.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %225)
  %tobool5.i = icmp ne i32 %225, 0
  %bat_connected.i = getelementptr inbounds %struct.wacom, ptr %217, i32 0, i32 2, i32 22, i32 25
  %226 = ptrtoint ptr %bat_connected.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %bat_connected.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %227)
  %tobool7.i = icmp ne i32 %227, 0
  %ps_connected.i = getelementptr inbounds %struct.wacom, ptr %217, i32 0, i32 2, i32 22, i32 26
  %228 = ptrtoint ptr %ps_connected.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %ps_connected.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %229)
  %tobool10.i = icmp ne i32 %229, 0
  %bat_status3.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 4
  %230 = ptrtoint ptr %bat_status3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %bat_status3.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %231, i32 %221)
  %cmp.not.i.i.i = icmp eq i32 %231, %221
  br i1 %cmp.not.i.i.i, label %lor.lhs.false.i.i.i, label %if.then.i.if.then.i.i.i_crit_edge

if.then.i.if.then.i.i.i_crit_edge:                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.then.i
  %battery_capacity.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 5
  %232 = ptrtoint ptr %battery_capacity.i.i.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %battery_capacity.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %233, i32 %223)
  %cmp4.not.i.i.i = icmp eq i32 %233, %223
  br i1 %cmp4.not.i.i.i, label %lor.lhs.false5.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.lhs.false5.i.i.i:                             ; preds = %lor.lhs.false.i.i.i
  %bat_charging6.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 6
  %234 = ptrtoint ptr %bat_charging6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %bat_charging6.i.i.i, align 4
  %conv.i.i.i = zext i1 %tobool5.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %235, i32 %conv.i.i.i)
  %cmp7.not.i.i.i = icmp eq i32 %235, %conv.i.i.i
  br i1 %cmp7.not.i.i.i, label %lor.lhs.false9.i.i.i, label %lor.lhs.false5.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false5.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %lor.lhs.false5.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.lhs.false9.i.i.i:                             ; preds = %lor.lhs.false5.i.i.i
  %bat_connected10.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 7
  %236 = ptrtoint ptr %bat_connected10.i.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %bat_connected10.i.i.i, align 4
  %conv12.i.i.i = zext i1 %tobool7.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %237, i32 %conv12.i.i.i)
  %cmp13.not.i.i.i = icmp eq i32 %237, %conv12.i.i.i
  br i1 %cmp13.not.i.i.i, label %lor.rhs.i.i.i, label %lor.lhs.false9.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false9.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %lor.lhs.false9.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.rhs.i.i.i:                                    ; preds = %lor.lhs.false9.i.i.i
  %ps_connected15.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 8
  %238 = ptrtoint ptr %ps_connected15.i.i.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %ps_connected15.i.i.i, align 4
  %conv17.i.i.i = zext i1 %tobool10.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %239, i32 %conv17.i.i.i)
  %cmp18.not.i.i.i = icmp eq i32 %239, %conv17.i.i.i
  br i1 %cmp18.not.i.i.i, label %lor.rhs.i.i.i.wacom_wac_battery_report.exit_crit_edge, label %lor.rhs.i.i.i.if.then.i.i.i_crit_edge

lor.rhs.i.i.i.if.then.i.i.i_crit_edge:            ; preds = %lor.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.rhs.i.i.i.wacom_wac_battery_report.exit_crit_edge: ; preds = %lor.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_battery_report.exit

if.then.i.i.i:                                    ; preds = %lor.rhs.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false9.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false5.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %if.then.i.if.then.i.i.i_crit_edge
  %240 = ptrtoint ptr %bat_status3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 %221, ptr %bat_status3.i.i.i, align 4
  %battery_capacity23.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 5
  %241 = ptrtoint ptr %battery_capacity23.i.i.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 %223, ptr %battery_capacity23.i.i.i, align 4
  %conv25.i.i.i = zext i1 %tobool5.i to i32
  %bat_charging26.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 6
  %242 = ptrtoint ptr %bat_charging26.i.i.i to i32
  call void @__asan_store4_noabort(i32 %242)
  store i32 %conv25.i.i.i, ptr %bat_charging26.i.i.i, align 4
  %conv28.i.i.i = zext i1 %tobool7.i to i32
  %bat_connected29.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 7
  %243 = ptrtoint ptr %bat_connected29.i.i.i to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 %conv28.i.i.i, ptr %bat_connected29.i.i.i, align 4
  %conv31.i.i.i = zext i1 %tobool10.i to i32
  %ps_connected32.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 8
  %244 = ptrtoint ptr %ps_connected32.i.i.i to i32
  call void @__asan_store4_noabort(i32 %244)
  store i32 %conv31.i.i.i, ptr %ps_connected32.i.i.i, align 4
  %battery33.i.i.i = getelementptr %struct.wacom, ptr %217, i32 0, i32 13, i32 2
  %245 = ptrtoint ptr %battery33.i.i.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %battery33.i.i.i, align 4
  %tobool34.not.i.i.i = icmp eq ptr %246, null
  br i1 %tobool34.not.i.i.i, label %if.then.i.i.i.wacom_wac_battery_report.exit_crit_edge, label %if.then35.i.i.i

if.then.i.i.i.wacom_wac_battery_report.exit_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_battery_report.exit

if.then35.i.i.i:                                  ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %246) #8
  br label %wacom_wac_battery_report.exit

wacom_wac_battery_report.exit:                    ; preds = %if.then35.i.i.i, %if.then.i.i.i.wacom_wac_battery_report.exit_crit_edge, %lor.rhs.i.i.i.wacom_wac_battery_report.exit_crit_edge, %for.end103.wacom_wac_battery_report.exit_crit_edge
  br i1 %true_pad.0.off0.lcssa219223229233, label %land.lhs.true105, label %wacom_wac_battery_report.exit.cleanup_crit_edge

wacom_wac_battery_report.exit.cleanup_crit_edge:  ; preds = %wacom_wac_battery_report.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true105:                                 ; preds = %wacom_wac_battery_report.exit
  %pad_input107 = getelementptr inbounds %struct.wacom, ptr %1, i32 0, i32 2, i32 14
  %247 = ptrtoint ptr %pad_input107 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %pad_input107, align 8
  %tobool108.not = icmp eq ptr %248, null
  br i1 %tobool108.not, label %land.lhs.true105.cleanup_crit_edge, label %if.then109

land.lhs.true105.cleanup_crit_edge:               ; preds = %land.lhs.true105
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then109:                                       ; preds = %land.lhs.true105
  %249 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %driver_data.i.i, align 4
  %pad_input_event_flag.i = getelementptr inbounds %struct.wacom, ptr %250, i32 0, i32 2, i32 22, i32 27
  %251 = ptrtoint ptr %pad_input_event_flag.i to i32
  call void @__asan_load1_noabort(i32 %251)
  %252 = load i8, ptr %pad_input_event_flag.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %252)
  %tobool4.not.i = icmp eq i8 %252, 0
  br i1 %tobool4.not.i, label %if.then109.cleanup_crit_edge, label %if.then.i195

if.then109.cleanup_crit_edge:                     ; preds = %if.then109
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then.i195:                                     ; preds = %if.then109
  %inrange_state.i193 = getelementptr inbounds %struct.wacom, ptr %250, i32 0, i32 2, i32 22, i32 3
  %253 = ptrtoint ptr %inrange_state.i193 to i32
  call void @__asan_load1_noabort(i32 %253)
  %254 = load i8, ptr %inrange_state.i193, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %254)
  %tobool.not.i194 = icmp eq i8 %254, 0
  %pad_input.i = getelementptr inbounds %struct.wacom, ptr %250, i32 0, i32 2, i32 14
  %255 = ptrtoint ptr %pad_input.i to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %pad_input.i, align 8
  %cond.i = select i1 %tobool.not.i194, i32 0, i32 15
  tail call void @input_event(ptr noundef %256, i32 noundef 3, i32 noundef 40, i32 noundef %cond.i) #8
  tail call void @input_event(ptr noundef %256, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br i1 %tobool.not.i194, label %if.then8.i, label %if.then.i195.cleanup_crit_edge

if.then.i195.cleanup_crit_edge:                   ; preds = %if.then.i195
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then8.i:                                       ; preds = %if.then.i195
  call void @__sanitizer_cov_trace_pc() #10
  %257 = ptrtoint ptr %pad_input_event_flag.i to i32
  call void @__asan_store1_noabort(i32 %257)
  store i8 0, ptr %pad_input_event_flag.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then8.i, %if.then.i195.cleanup_crit_edge, %if.then109.cleanup_crit_edge, %land.lhs.true105.cleanup_crit_edge, %wacom_wac_battery_report.exit.cleanup_crit_edge, %wacom_report_events.exit.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wacom_wac_irq(ptr noundef %wacom_wac, i32 noundef %len) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 5
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.229)
  switch i32 %1, label %entry.if.end105_crit_edge [
    i32 0, label %sw.epilog
    i32 5, label %sw.bb1
    i32 3, label %entry.sw.bb5_crit_edge
    i32 1, label %entry.sw.bb5_crit_edge174
    i32 2, label %entry.sw.bb5_crit_edge175
    i32 36, label %entry.sw.bb5_crit_edge176
    i32 4, label %sw.bb9
    i32 6, label %sw.bb13
    i32 7, label %entry.sw.bb17_crit_edge
    i32 8, label %entry.sw.bb17_crit_edge177
    i32 9, label %entry.sw.bb21_crit_edge
    i32 10, label %entry.sw.bb21_crit_edge178
    i32 11, label %entry.sw.bb21_crit_edge179
    i32 12, label %entry.sw.bb21_crit_edge180
    i32 13, label %entry.sw.bb21_crit_edge181
    i32 14, label %entry.sw.bb21_crit_edge182
    i32 16, label %entry.sw.bb21_crit_edge183
    i32 33, label %entry.sw.bb21_crit_edge184
    i32 34, label %entry.sw.bb21_crit_edge185
    i32 35, label %entry.sw.bb21_crit_edge186
    i32 26, label %entry.sw.bb21_crit_edge187
    i32 27, label %entry.sw.bb21_crit_edge188
    i32 29, label %entry.sw.bb21_crit_edge189
    i32 30, label %entry.sw.bb21_crit_edge190
    i32 28, label %entry.sw.bb21_crit_edge191
    i32 31, label %entry.sw.bb21_crit_edge192
    i32 32, label %entry.sw.bb21_crit_edge193
    i32 15, label %sw.bb25
    i32 42, label %entry.sw.bb29_crit_edge
    i32 43, label %entry.sw.bb29_crit_edge194
    i32 17, label %entry.sw.bb33_crit_edge
    i32 18, label %entry.sw.bb33_crit_edge195
    i32 19, label %entry.sw.bb33_crit_edge196
    i32 20, label %entry.sw.bb33_crit_edge197
    i32 21, label %entry.sw.bb33_crit_edge198
    i32 22, label %entry.sw.bb33_crit_edge199
    i32 23, label %entry.sw.bb48_crit_edge
    i32 24, label %entry.sw.bb48_crit_edge200
    i32 25, label %entry.sw.bb48_crit_edge201
    i32 47, label %entry.sw.bb52_crit_edge
    i32 48, label %entry.sw.bb52_crit_edge202
    i32 49, label %entry.sw.bb52_crit_edge203
    i32 50, label %entry.sw.bb52_crit_edge204
    i32 51, label %entry.sw.bb52_crit_edge205
    i32 52, label %entry.sw.bb52_crit_edge206
    i32 41, label %entry.sw.bb56_crit_edge
    i32 37, label %entry.sw.bb56_crit_edge207
    i32 40, label %entry.sw.bb56_crit_edge208
    i32 38, label %entry.sw.bb56_crit_edge209
    i32 39, label %entry.sw.bb56_crit_edge210
    i32 44, label %sw.bb71
    i32 45, label %sw.bb75
    i32 46, label %sw.bb79
  ]

entry.sw.bb56_crit_edge210:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb56

entry.sw.bb56_crit_edge209:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb56

entry.sw.bb56_crit_edge208:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb56

entry.sw.bb56_crit_edge207:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb56

entry.sw.bb56_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb56

entry.sw.bb52_crit_edge206:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb52

entry.sw.bb52_crit_edge205:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb52

entry.sw.bb52_crit_edge204:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb52

entry.sw.bb52_crit_edge203:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb52

entry.sw.bb52_crit_edge202:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb52

entry.sw.bb52_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb52

entry.sw.bb48_crit_edge201:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

entry.sw.bb48_crit_edge200:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

entry.sw.bb48_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

entry.sw.bb33_crit_edge199:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb33

entry.sw.bb33_crit_edge198:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb33

entry.sw.bb33_crit_edge197:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb33

entry.sw.bb33_crit_edge196:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb33

entry.sw.bb33_crit_edge195:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb33

entry.sw.bb33_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb33

entry.sw.bb29_crit_edge194:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb29

entry.sw.bb29_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb29

entry.sw.bb21_crit_edge193:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge192:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge191:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge190:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge189:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge188:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge187:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge186:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge185:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge184:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge183:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge182:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge181:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge180:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge179:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge178:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb21_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb21

entry.sw.bb17_crit_edge177:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb17

entry.sw.bb17_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb17

entry.sw.bb5_crit_edge176:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge175:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge174:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.if.end105_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb1:                                           ; preds = %entry
  %call2 = tail call fastcc i32 @wacom_pl_irq(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %sw.bb1.if.end105_crit_edge, label %sw.bb1.if.then92_crit_edge

sw.bb1.if.then92_crit_edge:                       ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.bb1.if.end105_crit_edge:                       ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb5:                                           ; preds = %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge174, %entry.sw.bb5_crit_edge175, %entry.sw.bb5_crit_edge176
  %call6 = tail call fastcc i32 @wacom_graphire_irq(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %sw.bb5.if.end105_crit_edge, label %sw.bb5.if.then92_crit_edge

sw.bb5.if.then92_crit_edge:                       ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.bb5.if.end105_crit_edge:                       ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb9:                                           ; preds = %entry
  %call10 = tail call fastcc i32 @wacom_ptu_irq(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %sw.bb9.if.end105_crit_edge, label %sw.bb9.if.then92_crit_edge

sw.bb9.if.then92_crit_edge:                       ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.bb9.if.end105_crit_edge:                       ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb13:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_dtu_irq(ptr noundef %wacom_wac)
  br label %if.then92

sw.bb17:                                          ; preds = %entry.sw.bb17_crit_edge, %entry.sw.bb17_crit_edge177
  %call18 = tail call fastcc i32 @wacom_dtus_irq(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %sw.bb17.if.end105_crit_edge, label %sw.bb17.if.then92_crit_edge

sw.bb17.if.then92_crit_edge:                      ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.bb17.if.end105_crit_edge:                      ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb21:                                          ; preds = %entry.sw.bb21_crit_edge, %entry.sw.bb21_crit_edge178, %entry.sw.bb21_crit_edge179, %entry.sw.bb21_crit_edge180, %entry.sw.bb21_crit_edge181, %entry.sw.bb21_crit_edge182, %entry.sw.bb21_crit_edge183, %entry.sw.bb21_crit_edge184, %entry.sw.bb21_crit_edge185, %entry.sw.bb21_crit_edge186, %entry.sw.bb21_crit_edge187, %entry.sw.bb21_crit_edge188, %entry.sw.bb21_crit_edge189, %entry.sw.bb21_crit_edge190, %entry.sw.bb21_crit_edge191, %entry.sw.bb21_crit_edge192, %entry.sw.bb21_crit_edge193
  %call22 = tail call fastcc i32 @wacom_intuos_irq(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %sw.bb21.if.end105_crit_edge, label %sw.bb21.if.then92_crit_edge

sw.bb21.if.then92_crit_edge:                      ; preds = %sw.bb21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.bb21.if.end105_crit_edge:                      ; preds = %sw.bb21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb25:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_intuos_bt_irq(ptr noundef %wacom_wac, i32 noundef %len)
  br label %if.end105

sw.bb29:                                          ; preds = %entry.sw.bb29_crit_edge, %entry.sw.bb29_crit_edge194
  %touch_input.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 13
  %3 = ptrtoint ptr %touch_input.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %touch_input.i, align 4
  %data1.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4
  %arrayidx.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 61
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx.i, align 1
  %probe_complete.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 8
  %7 = ptrtoint ptr %probe_complete.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %probe_complete.i.i, align 8, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i.i, label %sw.bb29.if.end.i_crit_edge, label %land.lhs.true.i.i

sw.bb29.if.end.i_crit_edge:                       ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

land.lhs.true.i.i:                                ; preds = %sw.bb29
  %shared.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %9 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %shared.i.i, align 4
  %has_mute_touch_switch.i.i = getelementptr inbounds %struct.wacom_shared, ptr %10, i32 0, i32 7
  %11 = ptrtoint ptr %has_mute_touch_switch.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %has_mute_touch_switch.i.i, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool1.not.i.i = icmp eq i8 %12, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.if.end.i_crit_edge, label %touch_is_muted.exit.i

land.lhs.true.i.i.if.end.i_crit_edge:             ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

touch_is_muted.exit.i:                            ; preds = %land.lhs.true.i.i
  %is_touch_on.i.i = getelementptr inbounds %struct.wacom_shared, ptr %10, i32 0, i32 8
  %13 = ptrtoint ptr %is_touch_on.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %is_touch_on.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool3.not.i.i = icmp eq i8 %14, 0
  br i1 %tobool3.not.i.i, label %land.lhs.true.i, label %touch_is_muted.exit.i.if.end.i_crit_edge

touch_is_muted.exit.i.if.end.i_crit_edge:         ; preds = %touch_is_muted.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %touch_is_muted.exit.i
  %touch_down.i = getelementptr inbounds %struct.wacom_shared, ptr %10, i32 0, i32 1
  %15 = ptrtoint ptr %touch_down.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %touch_down.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i = icmp eq i8 %16, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.if.end105_crit_edge, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

land.lhs.true.i.if.end105_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %touch_is_muted.exit.i.if.end.i_crit_edge, %land.lhs.true.i.i.if.end.i_crit_edge, %sw.bb29.if.end.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %1)
  %cmp.i = icmp eq i32 %1, 43
  br i1 %cmp.i, label %if.then4.i, label %if.end.i.if.end7.i_crit_edge

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end7.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx5.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 63
  %17 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx5.i, align 1
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then4.i, %if.end.i.if.end7.i_crit_edge
  %current_num_contacts.0.in.i = phi i8 [ %18, %if.then4.i ], [ %6, %if.end.i.if.end7.i_crit_edge ]
  %num_contacts_left.0.i = phi i32 [ 10, %if.then4.i ], [ 4, %if.end.i.if.end7.i_crit_edge ]
  %byte_per_packet.0.i = phi i32 [ 6, %if.then4.i ], [ 14, %if.end.i.if.end7.i_crit_edge ]
  %y_offset.0.i = phi i32 [ 0, %if.then4.i ], [ 2, %if.end.i.if.end7.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %current_num_contacts.0.in.i)
  %tobool8.not.i = icmp eq i8 %current_num_contacts.0.in.i, 0
  br i1 %tobool8.not.i, label %if.end7.i.if.end11.i_crit_edge, label %if.then9.i

if.end7.i.if.end11.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end11.i

if.then9.i:                                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #10
  %current_num_contacts.0.i = zext i8 %current_num_contacts.0.in.i to i32
  %num_contacts_left10.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 17
  %19 = ptrtoint ptr %num_contacts_left10.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %current_num_contacts.0.i, ptr %num_contacts_left10.i, align 4
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i, %if.end7.i.if.end11.i_crit_edge
  %num_contacts_left12.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 17
  %20 = ptrtoint ptr %num_contacts_left12.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_contacts_left12.i, align 4
  %22 = tail call i32 @llvm.smin.i32(i32 %num_contacts_left.0.i, i32 %21) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp15178.i = icmp sgt i32 %21, 0
  br i1 %cmp15178.i, label %for.body.lr.ph.i, label %if.end11.i.for.end.i_crit_edge

if.end11.i.for.end.i_crit_edge:                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end11.i
  %shared.i174.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %smax.i = tail call i32 @llvm.smax.i32(i32 %22, i32 1) #8
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0179.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %cleanup.i.for.body.i_crit_edge ]
  %mul.i = mul nuw nsw i32 %i.0179.i, %byte_per_packet.0.i
  %add.i = or i32 %mul.i, 1
  %arrayidx17.i = getelementptr i8, ptr %data1.i, i32 %add.i
  %23 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx17.i, align 1
  %25 = and i8 %24, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool19.not.i = icmp eq i8 %25, 0
  br i1 %tobool19.not.i, label %for.body.i.land.end.i_crit_edge, label %land.rhs.i

for.body.i.land.end.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end.i

land.rhs.i:                                       ; preds = %for.body.i
  %26 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not.i173.i = icmp eq i8 %26, 0
  br i1 %tobool.not.i173.i, label %land.rhs.i.land.end.i_crit_edge, label %cond.true.i.i

land.rhs.i.land.end.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end.i

cond.true.i.i:                                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #10
  %27 = ptrtoint ptr %shared.i174.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %shared.i174.i, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %28, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool1.not.i175.i = icmp eq i8 %30, 0
  br label %land.end.i

land.end.i:                                       ; preds = %cond.true.i.i, %land.rhs.i.land.end.i_crit_edge, %for.body.i.land.end.i_crit_edge
  %31 = phi i1 [ false, %for.body.i.land.end.i_crit_edge ], [ %tobool1.not.i175.i, %cond.true.i.i ], [ true, %land.rhs.i.land.end.i_crit_edge ]
  %add22.i = add nuw nsw i32 %mul.i, 2
  %arrayidx23.i = getelementptr i8, ptr %data1.i, i32 %add22.i
  %32 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx23.i, align 1
  %conv24.i = zext i8 %33 to i32
  %call25.i = tail call i32 @input_mt_get_slot_by_key(ptr noundef %4, i32 noundef %conv24.i) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %cmp26.i = icmp slt i32 %call25.i, 0
  br i1 %cmp26.i, label %land.end.i.cleanup.i_crit_edge, label %if.end29.i

land.end.i.cleanup.i_crit_edge:                   ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i

if.end29.i:                                       ; preds = %land.end.i
  tail call void @input_event(ptr noundef %4, i32 noundef 3, i32 noundef 47, i32 noundef %call25.i) #8
  %call31.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %4, i32 noundef 0, i1 noundef zeroext %31) #8
  br i1 %31, label %if.then33.i, label %if.end29.i.cleanup.i_crit_edge

if.end29.i.cleanup.i_crit_edge:                   ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i

if.then33.i:                                      ; preds = %if.end29.i
  %add34.i = add nuw nsw i32 %mul.i, 3
  %arrayidx35.i = getelementptr i8, ptr %data1.i, i32 %add34.i
  %34 = ptrtoint ptr %arrayidx35.i to i32
  call void @__asan_loadN_noabort(i32 %34, i32 2)
  %35 = load i16, ptr %arrayidx35.i, align 1
  %36 = tail call i16 @llvm.bswap.i16(i16 %35) #8
  %conv37.i = zext i16 %36 to i32
  %add38.i = add nuw nsw i32 %mul.i, 5
  %add39.i = add nuw nsw i32 %add38.i, %y_offset.0.i
  %arrayidx40.i = getelementptr i8, ptr %data1.i, i32 %add39.i
  %37 = ptrtoint ptr %arrayidx40.i to i32
  call void @__asan_loadN_noabort(i32 %37, i32 2)
  %38 = load i16, ptr %arrayidx40.i, align 1
  %39 = tail call i16 @llvm.bswap.i16(i16 %38) #8
  %conv42.i = zext i16 %39 to i32
  tail call void @input_event(ptr noundef %4, i32 noundef 3, i32 noundef 53, i32 noundef %conv37.i) #8
  tail call void @input_event(ptr noundef %4, i32 noundef 3, i32 noundef 54, i32 noundef %conv42.i) #8
  %40 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 43, i32 %41)
  %cmp45.not.i = icmp eq i32 %41, 43
  br i1 %cmp45.not.i, label %if.then33.i.cleanup.i_crit_edge, label %if.then47.i

if.then33.i.cleanup.i_crit_edge:                  ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i

if.then47.i:                                      ; preds = %if.then33.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx49.i = getelementptr i8, ptr %data1.i, i32 %add38.i
  %42 = ptrtoint ptr %arrayidx49.i to i32
  call void @__asan_loadN_noabort(i32 %42, i32 2)
  %43 = load i16, ptr %arrayidx49.i, align 1
  %44 = tail call i16 @llvm.bswap.i16(i16 %43) #8
  %conv51.i = zext i16 %44 to i32
  %add52.i = add nuw nsw i32 %mul.i, 9
  %arrayidx53.i = getelementptr i8, ptr %data1.i, i32 %add52.i
  %45 = ptrtoint ptr %arrayidx53.i to i32
  call void @__asan_loadN_noabort(i32 %45, i32 2)
  %46 = load i16, ptr %arrayidx53.i, align 1
  %47 = tail call i16 @llvm.bswap.i16(i16 %46) #8
  %conv55.i = zext i16 %47 to i32
  %add56.i = add nuw nsw i32 %mul.i, 11
  %arrayidx57.i = getelementptr i8, ptr %data1.i, i32 %add56.i
  %48 = ptrtoint ptr %arrayidx57.i to i32
  call void @__asan_loadN_noabort(i32 %48, i32 2)
  %49 = load i16, ptr %arrayidx57.i, align 1
  %50 = tail call i16 @llvm.bswap.i16(i16 %49) #8
  %add60.i = add nuw nsw i32 %mul.i, 13
  %arrayidx61.i = getelementptr i8, ptr %data1.i, i32 %add60.i
  %51 = ptrtoint ptr %arrayidx61.i to i32
  call void @__asan_loadN_noabort(i32 %51, i32 2)
  %52 = load i16, ptr %arrayidx61.i, align 1
  %53 = tail call i16 @llvm.bswap.i16(i16 %52) #8
  %54 = tail call i16 @llvm.umin.i16(i16 %50, i16 %53) #8
  %conv59.conv63.i = zext i16 %54 to i32
  tail call void @input_event(ptr noundef %4, i32 noundef 3, i32 noundef 48, i32 noundef %conv59.conv63.i) #8
  %sub.i.i = sub nsw i32 %conv51.i, %conv37.i
  %sub1.i.i = sub nsw i32 %conv55.i, %conv42.i
  %mul.i.i = mul i32 %sub.i.i, %sub.i.i
  %mul2.i.i = mul i32 %sub1.i.i, %sub1.i.i
  %add.i.i = add i32 %mul2.i.i, %mul.i.i
  %call.i.i = tail call i32 @int_sqrt(i32 noundef %add.i.i) #8
  %add79.i = add i32 %call.i.i, %conv59.conv63.i
  tail call void @input_event(ptr noundef %4, i32 noundef 3, i32 noundef 50, i32 noundef %add79.i) #8
  tail call void @input_event(ptr noundef %4, i32 noundef 3, i32 noundef 51, i32 noundef %conv59.conv63.i) #8
  call void @__sanitizer_cov_trace_cmp2(i16 %50, i16 %53)
  %cmp87.i = icmp ugt i16 %50, %53
  %conv88.i = zext i1 %cmp87.i to i32
  tail call void @input_event(ptr noundef %4, i32 noundef 3, i32 noundef 52, i32 noundef %conv88.i) #8
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then47.i, %if.then33.i.cleanup.i_crit_edge, %if.end29.i.cleanup.i_crit_edge, %land.end.i.cleanup.i_crit_edge
  %inc.i = add nuw nsw i32 %i.0179.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %smax.i
  br i1 %exitcond.not.i, label %cleanup.i.for.end.i_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

cleanup.i.for.end.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.end.i:                                        ; preds = %cleanup.i.for.end.i_crit_edge, %if.end11.i.for.end.i_crit_edge
  tail call void @input_mt_sync_frame(ptr noundef %4) #8
  %55 = ptrtoint ptr %num_contacts_left12.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %num_contacts_left12.i, align 4
  %sub.i = sub i32 %56, %22
  store i32 %sub.i, ptr %num_contacts_left12.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i)
  %cmp95.i = icmp slt i32 %sub.i, 1
  br i1 %cmp95.i, label %if.then97.i, label %for.end.i.if.then92_crit_edge

for.end.i.if.then92_crit_edge:                    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

if.then97.i:                                      ; preds = %for.end.i
  %57 = ptrtoint ptr %num_contacts_left12.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %num_contacts_left12.i, align 4
  %58 = ptrtoint ptr %touch_input.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %touch_input.i, align 4
  %touch_max1.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 24
  %60 = ptrtoint ptr %touch_max1.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %touch_max1.i.i, align 4
  %62 = zext i32 %61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %62, ptr @__sancov_gen_cov_switch_values.230)
  switch i32 %61, label %for.cond.preheader.i.i [
    i32 0, label %if.then97.i.wacom_wac_finger_count_touches.exit.i_crit_edge
    i32 1, label %if.then2.i.i
  ]

if.then97.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %if.then97.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

for.cond.preheader.i.i:                           ; preds = %if.then97.i
  %mt.i.i = getelementptr inbounds %struct.input_dev, ptr %59, i32 0, i32 25
  %63 = ptrtoint ptr %mt.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %mt.i.i, align 4
  %num_slots.i.i = getelementptr inbounds %struct.input_mt, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %num_slots.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %num_slots.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %cmp627.i.i = icmp sgt i32 %66, 0
  br i1 %cmp627.i.i, label %for.cond.preheader.i.i.for.body.i.i_crit_edge, label %for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge

for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

if.then2.i.i:                                     ; preds = %if.then97.i
  %arrayidx.i.i.i = getelementptr %struct.input_dev, ptr %59, i32 0, i32 27, i32 10
  %67 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %69 = and i32 %68, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool3.not.i176.i = icmp eq i32 %69, 0
  br i1 %tobool3.not.i176.i, label %if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, label %land.rhs.i177.i

if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

land.rhs.i177.i:                                  ; preds = %if.then2.i.i
  %70 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool.not.i.i.i = icmp eq i8 %70, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i177.i.wacom_wac_finger_count_touches.exit.i_crit_edge, label %cond.true.i.i.i

land.rhs.i177.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %land.rhs.i177.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

cond.true.i.i.i:                                  ; preds = %land.rhs.i177.i
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %71 = ptrtoint ptr %shared.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %shared.i.i.i, align 4
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %72, align 4, !range !727
  %75 = xor i8 %74, 1
  %76 = zext i8 %75 to i32
  br label %wacom_wac_finger_count_touches.exit.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %i.029.i.i = phi i32 [ %inc12.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %count.028.i.i = phi i32 [ %spec.select.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i24.i.i = getelementptr %struct.input_mt, ptr %64, i32 0, i32 6, i32 %i.029.i.i, i32 0, i32 9
  %77 = ptrtoint ptr %arrayidx.i24.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx.i24.i.i, align 4
  %79 = xor i32 %78, -1
  %.lobit.not.i.i = lshr i32 %79, 31
  %spec.select.i.i = add i32 %.lobit.not.i.i, %count.028.i.i
  %inc12.i.i = add nuw nsw i32 %i.029.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc12.i.i, %66
  br i1 %exitcond.not.i.i, label %for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i

for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

wacom_wac_finger_count_touches.exit.i:            ; preds = %for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %cond.true.i.i.i, %land.rhs.i177.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %if.then97.i.wacom_wac_finger_count_touches.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %61, %if.then97.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ 0, %if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ %76, %cond.true.i.i.i ], [ 1, %land.rhs.i177.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ 0, %for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ %spec.select.i.i, %for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %tobool100.i = icmp ne i32 %retval.0.i.i, 0
  %shared101.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %80 = ptrtoint ptr %shared101.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %shared101.i, align 4
  %touch_down102.i = getelementptr inbounds %struct.wacom_shared, ptr %81, i32 0, i32 1
  %frombool103.i = zext i1 %tobool100.i to i8
  %82 = ptrtoint ptr %touch_down102.i to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 %frombool103.i, ptr %touch_down102.i, align 1
  br label %if.then92

sw.bb33:                                          ; preds = %entry.sw.bb33_crit_edge, %entry.sw.bb33_crit_edge195, %entry.sw.bb33_crit_edge196, %entry.sw.bb33_crit_edge197, %entry.sw.bb33_crit_edge198, %entry.sw.bb33_crit_edge199
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %len)
  %cmp = icmp eq i32 %len, 64
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb33
  %call34 = tail call fastcc i32 @wacom_bpt3_touch(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.then.if.end105_crit_edge, label %if.then.if.then92_crit_edge

if.then.if.then92_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

if.then.if.end105_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

if.else:                                          ; preds = %sw.bb33
  %data = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4
  %83 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %data, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -64, i8 %84)
  %cmp37 = icmp eq i8 %84, -64
  br i1 %cmp37, label %if.then39, label %if.else43

if.then39:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_status_irq(ptr noundef %wacom_wac)
  br label %if.end105

if.else43:                                        ; preds = %if.else
  %call44 = tail call fastcc i32 @wacom_intuos_irq(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %if.else43.if.end105_crit_edge, label %if.else43.if.then92_crit_edge

if.else43.if.then92_crit_edge:                    ; preds = %if.else43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

if.else43.if.end105_crit_edge:                    ; preds = %if.else43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb48:                                          ; preds = %entry.sw.bb48_crit_edge, %entry.sw.bb48_crit_edge200, %entry.sw.bb48_crit_edge201
  tail call fastcc void @wacom_intuos_pro2_bt_irq(ptr noundef %wacom_wac)
  br label %if.end105

sw.bb52:                                          ; preds = %entry.sw.bb52_crit_edge, %entry.sw.bb52_crit_edge202, %entry.sw.bb52_crit_edge203, %entry.sw.bb52_crit_edge204, %entry.sw.bb52_crit_edge205, %entry.sw.bb52_crit_edge206
  %call53 = tail call fastcc i32 @wacom_tpc_irq(ptr noundef %wacom_wac, i32 noundef %len)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %sw.bb52.if.end105_crit_edge, label %sw.bb52.if.then92_crit_edge

sw.bb52.if.then92_crit_edge:                      ; preds = %sw.bb52
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.bb52.if.end105_crit_edge:                      ; preds = %sw.bb52
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb56:                                          ; preds = %entry.sw.bb56_crit_edge, %entry.sw.bb56_crit_edge207, %entry.sw.bb56_crit_edge208, %entry.sw.bb56_crit_edge209, %entry.sw.bb56_crit_edge210
  %data57 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4
  %85 = ptrtoint ptr %data57 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %data57, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -64, i8 %86)
  %cmp60 = icmp eq i8 %86, -64
  br i1 %cmp60, label %if.then62, label %if.else66

if.then62:                                        ; preds = %sw.bb56
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_status_irq(ptr noundef %wacom_wac)
  br label %if.end105

if.else66:                                        ; preds = %sw.bb56
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %1)
  %cmp.i155 = icmp eq i32 %1, 39
  br i1 %cmp.i155, label %land.lhs.true.i157, label %if.else66.if.else.i_crit_edge

if.else66.if.else.i_crit_edge:                    ; preds = %if.else66
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else.i

land.lhs.true.i157:                               ; preds = %if.else66
  %device_type.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 13
  %87 = ptrtoint ptr %device_type.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %device_type.i, align 4
  %and.i = and i32 %88, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i156 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i156, label %land.lhs.true.i157.if.else.i_crit_edge, label %if.then.i

land.lhs.true.i157.if.else.i_crit_edge:           ; preds = %land.lhs.true.i157
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else.i

if.then.i:                                        ; preds = %land.lhs.true.i157
  call void @__sanitizer_cov_trace_pc() #10
  %call.i = tail call fastcc i32 @wacom_intuos_irq(ptr noundef %wacom_wac) #8
  br label %wacom_bpt_irq.exit

if.else.i:                                        ; preds = %land.lhs.true.i157.if.else.i_crit_edge, %if.else66.if.else.i_crit_edge
  %89 = zext i32 %len to i64
  call void @__sanitizer_cov_trace_switch(i64 %89, ptr @__sancov_gen_cov_switch_values.231)
  switch i32 %len, label %if.else.i.if.end105_crit_edge [
    i32 20, label %if.then3.i
    i32 64, label %if.then7.i
    i32 9, label %if.else.i.if.then12.i_crit_edge
    i32 10, label %if.else.i.if.then12.i_crit_edge211
  ]

if.else.i.if.then12.i_crit_edge211:               ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12.i

if.else.i.if.then12.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12.i

if.else.i.if.end105_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

if.then3.i:                                       ; preds = %if.else.i
  %touch_input.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 13
  %90 = ptrtoint ptr %touch_input.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %touch_input.i.i, align 4
  %pad_input2.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 14
  %92 = ptrtoint ptr %pad_input2.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %pad_input2.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %86)
  %cmp.not.i.i = icmp eq i8 %86, 2
  br i1 %cmp.not.i.i, label %for.cond.preheader.i.i160, label %if.then3.i.if.end105_crit_edge

if.then3.i.if.end105_crit_edge:                   ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

for.cond.preheader.i.i160:                        ; preds = %if.then3.i
  %arrayidx7.i.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 1
  %shared.i.i.i158 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %quirks.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 23
  %94 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %94)
  %tobool.not.i.i.i159 = icmp eq i8 %94, 0
  br i1 %tobool.not.i.i.i159, label %for.cond.preheader.i.i160.land.rhs.i.i_crit_edge, label %report_touch_events.exit.i.i

for.cond.preheader.i.i160.land.rhs.i.i_crit_edge: ; preds = %for.cond.preheader.i.i160
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.rhs.i.i

report_touch_events.exit.i.i:                     ; preds = %for.cond.preheader.i.i160
  %95 = ptrtoint ptr %shared.i.i.i158 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %shared.i.i.i158, align 4
  %97 = ptrtoint ptr %96 to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %96, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %98)
  %tobool1.not.i.i.i = icmp eq i8 %98, 0
  br i1 %tobool1.not.i.i.i, label %report_touch_events.exit.i.i.land.rhs.i.i_crit_edge, label %if.end34.critedge.i.i

report_touch_events.exit.i.i.land.rhs.i.i_crit_edge: ; preds = %report_touch_events.exit.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %report_touch_events.exit.i.i.land.rhs.i.i_crit_edge, %for.cond.preheader.i.i160.land.rhs.i.i_crit_edge
  %arrayidx11.i.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 3
  %99 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %arrayidx11.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %100)
  %tobool14.i.i = icmp slt i8 %100, 0
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 47, i32 noundef 0) #8
  %call16.i.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %91, i32 noundef 0, i1 noundef zeroext %tobool14.i.i) #8
  br i1 %tobool14.i.i, label %if.then18.i.i, label %land.rhs.i.i.if.end34.i.i_crit_edge

land.rhs.i.i.if.end34.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end34.i.i

if.then18.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %101 = ptrtoint ptr %arrayidx11.i.i to i32
  call void @__asan_loadN_noabort(i32 %101, i32 2)
  %102 = load i16, ptr %arrayidx11.i.i, align 1
  %103 = and i16 %102, 2047
  %and23.i.i = zext i16 %103 to i32
  %arrayidx25.i.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 5
  %104 = ptrtoint ptr %arrayidx25.i.i to i32
  call void @__asan_loadN_noabort(i32 %104, i32 2)
  %105 = load i16, ptr %arrayidx25.i.i, align 1
  %106 = and i16 %105, 2047
  %and28.i.i = zext i16 %106 to i32
  %107 = ptrtoint ptr %quirks.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %quirks.i.i, align 4
  %and29.i.i = and i32 %108, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i.i)
  %tobool30.not.i.i = icmp eq i32 %and29.i.i, 0
  %shl.i.i = shl nuw nsw i32 %and23.i.i, 5
  %shl32.i.i = shl nuw nsw i32 %and28.i.i, 5
  %x.0.i.i = select i1 %tobool30.not.i.i, i32 %and23.i.i, i32 %shl.i.i
  %y.0.i.i = select i1 %tobool30.not.i.i, i32 %and28.i.i, i32 %shl32.i.i
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 53, i32 noundef %x.0.i.i) #8
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 54, i32 noundef %y.0.i.i) #8
  br label %if.end34.i.i

if.end34.critedge.i.i:                            ; preds = %report_touch_events.exit.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 47, i32 noundef 0) #8
  %call16.c.i.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %91, i32 noundef 0, i1 noundef zeroext false) #8
  br label %if.end34.i.i

if.end34.i.i:                                     ; preds = %if.end34.critedge.i.i, %if.then18.i.i, %land.rhs.i.i.if.end34.i.i_crit_edge
  %109 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %arrayidx7.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %110)
  %tobool.not103.1.i.i = icmp slt i8 %110, 0
  %cond.1.i.i = select i1 %tobool.not103.1.i.i, i32 8, i32 9
  %111 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %111)
  %tobool.not.i.1.i.i = icmp eq i8 %111, 0
  br i1 %tobool.not.i.1.i.i, label %if.end34.i.i.land.rhs.1.i.i_crit_edge, label %report_touch_events.exit.1.i.i

if.end34.i.i.land.rhs.1.i.i_crit_edge:            ; preds = %if.end34.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.rhs.1.i.i

report_touch_events.exit.1.i.i:                   ; preds = %if.end34.i.i
  %112 = ptrtoint ptr %shared.i.i.i158 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %shared.i.i.i158, align 4
  %114 = ptrtoint ptr %113 to i32
  call void @__asan_load1_noabort(i32 %114)
  %115 = load i8, ptr %113, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %115)
  %tobool1.not.i.1.i.i = icmp eq i8 %115, 0
  br i1 %tobool1.not.i.1.i.i, label %report_touch_events.exit.1.i.i.land.rhs.1.i.i_crit_edge, label %if.end34.critedge.1.i.i

report_touch_events.exit.1.i.i.land.rhs.1.i.i_crit_edge: ; preds = %report_touch_events.exit.1.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.rhs.1.i.i

if.end34.critedge.1.i.i:                          ; preds = %report_touch_events.exit.1.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 47, i32 noundef 1) #8
  %call16.c.1.i.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %91, i32 noundef 0, i1 noundef zeroext false) #8
  br label %if.end34.1.i.i

land.rhs.1.i.i:                                   ; preds = %report_touch_events.exit.1.i.i.land.rhs.1.i.i_crit_edge, %if.end34.i.i.land.rhs.1.i.i_crit_edge
  %add.1.i.i = add nuw nsw i32 %cond.1.i.i, 3
  %arrayidx11.1.i.i = getelementptr i8, ptr %data57, i32 %add.1.i.i
  %116 = ptrtoint ptr %arrayidx11.1.i.i to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %arrayidx11.1.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %117)
  %tobool14.1.i.i = icmp slt i8 %117, 0
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 47, i32 noundef 1) #8
  %call16.1.i.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %91, i32 noundef 0, i1 noundef zeroext %tobool14.1.i.i) #8
  br i1 %tobool14.1.i.i, label %if.then18.1.i.i, label %land.rhs.1.i.i.if.end34.1.i.i_crit_edge

land.rhs.1.i.i.if.end34.1.i.i_crit_edge:          ; preds = %land.rhs.1.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end34.1.i.i

if.then18.1.i.i:                                  ; preds = %land.rhs.1.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %118 = ptrtoint ptr %arrayidx11.1.i.i to i32
  call void @__asan_loadN_noabort(i32 %118, i32 2)
  %119 = load i16, ptr %arrayidx11.1.i.i, align 1
  %120 = and i16 %119, 2047
  %and23.1.i.i = zext i16 %120 to i32
  %add24.1.i.i = add nuw nsw i32 %cond.1.i.i, 5
  %arrayidx25.1.i.i = getelementptr i8, ptr %data57, i32 %add24.1.i.i
  %121 = ptrtoint ptr %arrayidx25.1.i.i to i32
  call void @__asan_loadN_noabort(i32 %121, i32 2)
  %122 = load i16, ptr %arrayidx25.1.i.i, align 1
  %123 = and i16 %122, 2047
  %and28.1.i.i = zext i16 %123 to i32
  %124 = ptrtoint ptr %quirks.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %quirks.i.i, align 4
  %and29.1.i.i = and i32 %125, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.1.i.i)
  %tobool30.not.1.i.i = icmp eq i32 %and29.1.i.i, 0
  %shl.1.i.i = shl nuw nsw i32 %and23.1.i.i, 5
  %shl32.1.i.i = shl nuw nsw i32 %and28.1.i.i, 5
  %x.0.1.i.i = select i1 %tobool30.not.1.i.i, i32 %and23.1.i.i, i32 %shl.1.i.i
  %y.0.1.i.i = select i1 %tobool30.not.1.i.i, i32 %and28.1.i.i, i32 %shl32.1.i.i
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 53, i32 noundef %x.0.1.i.i) #8
  tail call void @input_event(ptr noundef %91, i32 noundef 3, i32 noundef 54, i32 noundef %y.0.1.i.i) #8
  br label %if.end34.1.i.i

if.end34.1.i.i:                                   ; preds = %if.then18.1.i.i, %land.rhs.1.i.i.if.end34.1.i.i_crit_edge, %if.end34.critedge.1.i.i
  tail call void @input_mt_sync_frame(ptr noundef %91) #8
  %126 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %arrayidx7.i.i, align 1
  %128 = lshr i8 %127, 3
  %.lobit.i.i = and i8 %128, 1
  %129 = zext i8 %.lobit.i.i to i32
  tail call void @input_event(ptr noundef %93, i32 noundef 1, i32 noundef 272, i32 noundef %129) #8
  %130 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %130)
  %131 = load i8, ptr %arrayidx7.i.i, align 1
  %132 = lshr i8 %131, 2
  %.lobit101.i.i = and i8 %132, 1
  %133 = zext i8 %.lobit101.i.i to i32
  tail call void @input_event(ptr noundef %93, i32 noundef 1, i32 noundef 277, i32 noundef %133) #8
  %134 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %arrayidx7.i.i, align 1
  %136 = lshr i8 %135, 1
  %.lobit102.i.i = and i8 %136, 1
  %137 = zext i8 %.lobit102.i.i to i32
  tail call void @input_event(ptr noundef %93, i32 noundef 1, i32 noundef 278, i32 noundef %137) #8
  %138 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %138)
  %139 = load i8, ptr %arrayidx7.i.i, align 1
  %140 = and i8 %139, 1
  %141 = zext i8 %140 to i32
  tail call void @input_event(ptr noundef %93, i32 noundef 1, i32 noundef 273, i32 noundef %141) #8
  %142 = ptrtoint ptr %touch_input.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %touch_input.i.i, align 4
  %touch_max1.i.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 24
  %144 = ptrtoint ptr %touch_max1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %touch_max1.i.i.i, align 4
  %146 = zext i32 %145 to i64
  call void @__sanitizer_cov_trace_switch(i64 %146, ptr @__sancov_gen_cov_switch_values.232)
  switch i32 %145, label %for.cond.preheader.i.i.i [
    i32 0, label %if.end34.1.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge
    i32 1, label %if.then2.i.i.i
  ]

if.end34.1.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %if.end34.1.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

for.cond.preheader.i.i.i:                         ; preds = %if.end34.1.i.i
  %mt.i.i.i = getelementptr inbounds %struct.input_dev, ptr %143, i32 0, i32 25
  %147 = ptrtoint ptr %mt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %mt.i.i.i, align 4
  %num_slots.i.i.i = getelementptr inbounds %struct.input_mt, ptr %148, i32 0, i32 1
  %149 = ptrtoint ptr %num_slots.i.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %num_slots.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %150)
  %cmp627.i.i.i = icmp sgt i32 %150, 0
  br i1 %cmp627.i.i.i, label %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge, label %for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge

for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i
  br label %for.body.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end34.1.i.i
  %arrayidx.i.i.i.i = getelementptr %struct.input_dev, ptr %143, i32 0, i32 27, i32 10
  %151 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %153 = and i32 %152, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %tobool3.not.i.i.i = icmp eq i32 %153, 0
  br i1 %tobool3.not.i.i.i, label %if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, label %land.rhs.i.i.i

if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

land.rhs.i.i.i:                                   ; preds = %if.then2.i.i.i
  %154 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %154)
  %tobool.not.i.i.i.i = icmp eq i8 %154, 0
  br i1 %tobool.not.i.i.i.i, label %land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, label %cond.true.i.i.i.i

land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

cond.true.i.i.i.i:                                ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %155 = ptrtoint ptr %shared.i.i.i158 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %shared.i.i.i158, align 4
  %157 = ptrtoint ptr %156 to i32
  call void @__asan_load1_noabort(i32 %157)
  %158 = load i8, ptr %156, align 4, !range !727
  %159 = xor i8 %158, 1
  %160 = zext i8 %159 to i32
  br label %wacom_wac_finger_count_touches.exit.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge
  %i.029.i.i.i = phi i32 [ %inc12.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %count.028.i.i.i = phi i32 [ %spec.select.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.for.body.i.i.i_crit_edge ]
  %arrayidx.i24.i.i.i = getelementptr %struct.input_mt, ptr %148, i32 0, i32 6, i32 %i.029.i.i.i, i32 0, i32 9
  %161 = ptrtoint ptr %arrayidx.i24.i.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %arrayidx.i24.i.i.i, align 4
  %163 = xor i32 %162, -1
  %.lobit.not.i.i.i = lshr i32 %163, 31
  %spec.select.i.i.i = add i32 %.lobit.not.i.i.i, %count.028.i.i.i
  %inc12.i.i.i = add nuw nsw i32 %i.029.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc12.i.i.i, %150
  br i1 %exitcond.not.i.i.i, label %for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, label %for.body.i.i.i.for.body.i.i.i_crit_edge

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i.i

for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i.i

wacom_wac_finger_count_touches.exit.i.i:          ; preds = %for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %cond.true.i.i.i.i, %land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge, %if.end34.1.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %145, %if.end34.1.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ 0, %if.then2.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ %160, %cond.true.i.i.i.i ], [ 1, %land.rhs.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ], [ %spec.select.i.i.i, %for.body.i.i.i.wacom_wac_finger_count_touches.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i.i)
  %tobool56.i.i = icmp ne i32 %retval.0.i.i.i, 0
  %164 = ptrtoint ptr %shared.i.i.i158 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %shared.i.i.i158, align 4
  %touch_down.i.i = getelementptr inbounds %struct.wacom_shared, ptr %165, i32 0, i32 1
  %frombool57.i.i = zext i1 %tobool56.i.i to i8
  %166 = ptrtoint ptr %touch_down.i.i to i32
  call void @__asan_store1_noabort(i32 %166)
  store i8 %frombool57.i.i, ptr %touch_down.i.i, align 1
  br label %if.then92

if.then7.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  %call8.i = tail call fastcc i32 @wacom_bpt3_touch(ptr noundef %wacom_wac) #8
  br label %wacom_bpt_irq.exit

if.then12.i:                                      ; preds = %if.else.i.if.then12.i_crit_edge, %if.else.i.if.then12.i_crit_edge211
  %pen_input.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 12
  %167 = ptrtoint ptr %pen_input.i.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %pen_input.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %86)
  %cmp.not.i25.i = icmp eq i8 %86, 2
  br i1 %cmp.not.i25.i, label %if.end.i.i, label %if.then12.i.if.end105_crit_edge

if.then12.i.if.end105_crit_edge:                  ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

if.end.i.i:                                       ; preds = %if.then12.i
  %arrayidx4.i.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 1
  %169 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load1_noabort(i32 %169)
  %170 = load i8, ptr %arrayidx4.i.i, align 1
  %conv5.i.i = zext i8 %170 to i32
  %and.i.i = and i32 %conv5.i.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp6.not.i.i = icmp eq i32 %and.i.i, 0
  %and.lobit.i.i = lshr i8 %170, 7
  %and10.i.i = and i32 %conv5.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i.i)
  %cmp11.not.i.i = icmp eq i32 %and10.i.i, 0
  %shared.i.i161 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %171 = ptrtoint ptr %shared.i.i161 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %shared.i.i161, align 4
  %173 = ptrtoint ptr %172 to i32
  call void @__asan_store1_noabort(i32 %173)
  store i8 %and.lobit.i.i, ptr %172, align 4
  %174 = load ptr, ptr %shared.i.i161, align 4
  %touch_down.i.i.i = getelementptr inbounds %struct.wacom_shared, ptr %174, i32 0, i32 1
  %175 = ptrtoint ptr %touch_down.i.i.i to i32
  call void @__asan_load1_noabort(i32 %175)
  %176 = load i8, ptr %touch_down.i.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %176)
  %tobool.not.i.i26.i = icmp eq i8 %176, 0
  br i1 %tobool.not.i.i26.i, label %if.end.i.i.if.end22.i.i_crit_edge, label %delay_pen_events.exit.i.i

if.end.i.i.if.end22.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end22.i.i

delay_pen_events.exit.i.i:                        ; preds = %if.end.i.i
  %177 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %177)
  %tobool1.i.not.i.i = icmp eq i8 %177, 0
  br i1 %tobool1.i.not.i.i, label %delay_pen_events.exit.i.i.if.end22.i.i_crit_edge, label %delay_pen_events.exit.i.i.if.end105_crit_edge

delay_pen_events.exit.i.i.if.end105_crit_edge:    ; preds = %delay_pen_events.exit.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

delay_pen_events.exit.i.i.if.end22.i.i_crit_edge: ; preds = %delay_pen_events.exit.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end22.i.i

if.end22.i.i:                                     ; preds = %delay_pen_events.exit.i.i.if.end22.i.i_crit_edge, %if.end.i.i.if.end22.i.i_crit_edge
  %and16.i.i = and i32 %conv5.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16.i.i)
  %cmp17.not.i.i = icmp eq i32 %and16.i.i, 0
  br i1 %cmp17.not.i.i, label %if.end22.i.i.if.end43.i.i_crit_edge, label %if.then24.i.i

if.end22.i.i.if.end43.i.i_crit_edge:              ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end43.i.i

if.then24.i.i:                                    ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx25.i27.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 6
  %178 = ptrtoint ptr %arrayidx25.i27.i to i32
  call void @__asan_load2_noabort(i32 %178)
  %179 = load i16, ptr %arrayidx25.i27.i, align 2
  %180 = tail call i16 @llvm.bswap.i16(i16 %179) #8
  %conv27.i.i = zext i16 %180 to i32
  %181 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load1_noabort(i32 %181)
  %182 = load i8, ptr %arrayidx4.i.i, align 1
  %conv29.i.i = zext i8 %182 to i32
  %and30.i.i = and i32 %conv29.i.i, 1
  %and35.i.i = lshr i32 %conv29.i.i, 1
  %and35.lobit.i.i = and i32 %and35.i.i, 1
  %and40.i.i = lshr i32 %conv29.i.i, 2
  %and40.lobit.i.i = and i32 %and40.i.i, 1
  br label %if.end43.i.i

if.end43.i.i:                                     ; preds = %if.then24.i.i, %if.end22.i.i.if.end43.i.i_crit_edge
  %p.0.i.i = phi i32 [ %conv27.i.i, %if.then24.i.i ], [ 0, %if.end22.i.i.if.end43.i.i_crit_edge ]
  %pen.0.off0.i.i = phi i32 [ %and30.i.i, %if.then24.i.i ], [ 0, %if.end22.i.i.if.end43.i.i_crit_edge ]
  %btn1.0.off0.i.i = phi i32 [ %and35.lobit.i.i, %if.then24.i.i ], [ 0, %if.end22.i.i.if.end43.i.i_crit_edge ]
  %btn2.0.off0.i.i = phi i32 [ %and40.lobit.i.i, %if.then24.i.i ], [ 0, %if.end22.i.i.if.end43.i.i_crit_edge ]
  br i1 %cmp11.not.i.i, label %if.end43.i.i.if.end64.i.i_crit_edge, label %if.then45.i.i

if.end43.i.i.if.end64.i.i_crit_edge:              ; preds = %if.end43.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end64.i.i

if.then45.i.i:                                    ; preds = %if.end43.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx46.i.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 2
  %183 = ptrtoint ptr %arrayidx46.i.i to i32
  call void @__asan_load2_noabort(i32 %183)
  %184 = load i16, ptr %arrayidx46.i.i, align 2
  %185 = tail call i16 @llvm.bswap.i16(i16 %184) #8
  %conv48.i.i = zext i16 %185 to i32
  %arrayidx49.i.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 4
  %186 = ptrtoint ptr %arrayidx49.i.i to i32
  call void @__asan_load2_noabort(i32 %186)
  %187 = load i16, ptr %arrayidx49.i.i, align 2
  %188 = tail call i16 @llvm.bswap.i16(i16 %187) #8
  %conv51.i.i = zext i16 %188 to i32
  %189 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load1_noabort(i32 %189)
  %190 = load i8, ptr %arrayidx4.i.i, align 1
  %191 = and i8 %190, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %191)
  %tobool55.not.i.i = icmp eq i8 %191, 0
  %spec.select165.i.i = select i1 %tobool55.not.i.i, i32 320, i32 321
  %spec.select166.i.i = select i1 %tobool55.not.i.i, i32 2, i32 10
  %192 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 5
  %193 = ptrtoint ptr %192 to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %spec.select165.i.i, ptr %192, align 4
  %194 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 6
  %195 = ptrtoint ptr %194 to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %spec.select166.i.i, ptr %194, align 4
  %reporting_data.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 9
  %196 = ptrtoint ptr %reporting_data.i.i to i32
  call void @__asan_store1_noabort(i32 %196)
  store i8 1, ptr %reporting_data.i.i, align 1
  br label %if.end64.i.i

if.end64.i.i:                                     ; preds = %if.then45.i.i, %if.end43.i.i.if.end64.i.i_crit_edge
  %x.0.i28.i = phi i32 [ %conv48.i.i, %if.then45.i.i ], [ 0, %if.end43.i.i.if.end64.i.i_crit_edge ]
  %y.0.i29.i = phi i32 [ %conv51.i.i, %if.then45.i.i ], [ 0, %if.end43.i.i.if.end64.i.i_crit_edge ]
  br i1 %cmp6.not.i.i, label %if.else76.i.i, label %if.then66.i.i

if.then66.i.i:                                    ; preds = %if.end64.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx67.i.i = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 8
  %197 = ptrtoint ptr %arrayidx67.i.i to i32
  call void @__asan_load1_noabort(i32 %197)
  %198 = load i8, ptr %arrayidx67.i.i, align 1
  %conv68.i.i = zext i8 %198 to i32
  %distance_max.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 4
  %199 = ptrtoint ptr %distance_max.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %distance_max.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %200, i32 %conv68.i.i)
  %cmp69.not.i.i = icmp slt i32 %200, %conv68.i.i
  %sub.i.i162 = sub i32 %200, %conv68.i.i
  %spec.select.i.i163 = select i1 %cmp69.not.i.i, i32 0, i32 %sub.i.i162
  br label %if.end79.i.i

if.else76.i.i:                                    ; preds = %if.end64.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %id77.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 6
  %201 = ptrtoint ptr %id77.i.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 0, ptr %id77.i.i, align 4
  br label %if.end79.i.i

if.end79.i.i:                                     ; preds = %if.else76.i.i, %if.then66.i.i
  %d.0.i.i = phi i32 [ 0, %if.else76.i.i ], [ %spec.select.i.i163, %if.then66.i.i ]
  %reporting_data80.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 9
  %202 = ptrtoint ptr %reporting_data80.i.i to i32
  call void @__asan_load1_noabort(i32 %202)
  %203 = load i8, ptr %reporting_data80.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %203)
  %tobool81.not.i.i = icmp eq i8 %203, 0
  br i1 %tobool81.not.i.i, label %if.end79.i.i.if.end100.i.i_crit_edge, label %if.then82.i.i

if.end79.i.i.if.end100.i.i_crit_edge:             ; preds = %if.end79.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end100.i.i

if.then82.i.i:                                    ; preds = %if.end79.i.i
  tail call void @input_event(ptr noundef %168, i32 noundef 1, i32 noundef 330, i32 noundef %pen.0.off0.i.i) #8
  tail call void @input_event(ptr noundef %168, i32 noundef 1, i32 noundef 331, i32 noundef %btn1.0.off0.i.i) #8
  tail call void @input_event(ptr noundef %168, i32 noundef 1, i32 noundef 332, i32 noundef %btn2.0.off0.i.i) #8
  %cmp11.not.not.i.i = xor i1 %cmp11.not.i.i, true
  %brmerge.i.i = select i1 %cmp11.not.not.i.i, i1 true, i1 %cmp6.not.i.i
  br i1 %brmerge.i.i, label %if.then92.i.i, label %if.then82.i.i.if.end93.i.i_crit_edge

if.then82.i.i.if.end93.i.i_crit_edge:             ; preds = %if.then82.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end93.i.i

if.then92.i.i:                                    ; preds = %if.then82.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %168, i32 noundef 3, i32 noundef 0, i32 noundef %x.0.i28.i) #8
  tail call void @input_event(ptr noundef %168, i32 noundef 3, i32 noundef 1, i32 noundef %y.0.i29.i) #8
  br label %if.end93.i.i

if.end93.i.i:                                     ; preds = %if.then92.i.i, %if.then82.i.i.if.end93.i.i_crit_edge
  tail call void @input_event(ptr noundef %168, i32 noundef 3, i32 noundef 24, i32 noundef %p.0.i.i) #8
  tail call void @input_event(ptr noundef %168, i32 noundef 3, i32 noundef 25, i32 noundef %d.0.i.i) #8
  %tool94.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 5
  %204 = ptrtoint ptr %tool94.i.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %tool94.i.i, align 4
  %206 = zext i8 %and.lobit.i.i to i32
  tail call void @input_event(ptr noundef %168, i32 noundef 1, i32 noundef %205, i32 noundef %206) #8
  %id98.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 6
  %207 = ptrtoint ptr %id98.i.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %id98.i.i, align 4
  tail call void @input_event(ptr noundef %168, i32 noundef 3, i32 noundef 40, i32 noundef %208) #8
  br label %if.end100.i.i

if.end100.i.i:                                    ; preds = %if.end93.i.i, %if.end79.i.i.if.end100.i.i_crit_edge
  br i1 %cmp6.not.i.i, label %if.then102.i.i, label %if.end100.i.i.if.then92_crit_edge

if.end100.i.i.if.then92_crit_edge:                ; preds = %if.end100.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

if.then102.i.i:                                   ; preds = %if.end100.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %209 = ptrtoint ptr %reporting_data80.i.i to i32
  call void @__asan_store1_noabort(i32 %209)
  store i8 0, ptr %reporting_data80.i.i, align 1
  br label %if.then92

wacom_bpt_irq.exit:                               ; preds = %if.then7.i, %if.then.i
  %retval.0.i164 = phi i32 [ %call.i, %if.then.i ], [ %call8.i, %if.then7.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i164)
  %tobool68.not = icmp eq i32 %retval.0.i164, 0
  br i1 %tobool68.not, label %wacom_bpt_irq.exit.if.end105_crit_edge, label %wacom_bpt_irq.exit.if.then92_crit_edge

wacom_bpt_irq.exit.if.then92_crit_edge:           ; preds = %wacom_bpt_irq.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

wacom_bpt_irq.exit.if.end105_crit_edge:           ; preds = %wacom_bpt_irq.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb71:                                          ; preds = %entry
  %call72 = tail call fastcc i32 @wacom_bamboo_pad_irq(ptr noundef %wacom_wac, i32 noundef %len)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %sw.bb71.if.end105_crit_edge, label %sw.bb71.if.then92_crit_edge

sw.bb71.if.then92_crit_edge:                      ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.bb71.if.end105_crit_edge:                      ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

sw.bb75:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_wireless_irq(ptr noundef %wacom_wac, i32 noundef %len)
  br label %if.end105

sw.bb79:                                          ; preds = %entry
  %data80 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4
  %210 = ptrtoint ptr %data80 to i32
  call void @__asan_load1_noabort(i32 %210)
  %211 = load i8, ptr %data80, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %211)
  %cmp83 = icmp eq i8 %211, 16
  br i1 %cmp83, label %if.then85, label %if.else86

if.then85:                                        ; preds = %sw.bb79
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_remote_status_irq(ptr noundef %wacom_wac)
  br label %if.end105

if.else86:                                        ; preds = %sw.bb79
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_remote_irq(ptr noundef %wacom_wac)
  br label %if.end105

sw.epilog:                                        ; preds = %entry
  %call = tail call fastcc i32 @wacom_penpartner_irq(ptr noundef %wacom_wac)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %sw.epilog.if.end105_crit_edge, label %sw.epilog.if.then92_crit_edge

sw.epilog.if.then92_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then92

sw.epilog.if.end105_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

if.then92:                                        ; preds = %sw.epilog.if.then92_crit_edge, %sw.bb71.if.then92_crit_edge, %wacom_bpt_irq.exit.if.then92_crit_edge, %if.then102.i.i, %if.end100.i.i.if.then92_crit_edge, %wacom_wac_finger_count_touches.exit.i.i, %sw.bb52.if.then92_crit_edge, %if.else43.if.then92_crit_edge, %if.then.if.then92_crit_edge, %wacom_wac_finger_count_touches.exit.i, %for.end.i.if.then92_crit_edge, %sw.bb21.if.then92_crit_edge, %sw.bb17.if.then92_crit_edge, %sw.bb13, %sw.bb9.if.then92_crit_edge, %sw.bb5.if.then92_crit_edge, %sw.bb1.if.then92_crit_edge
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 12
  %212 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %pen_input, align 8
  %tobool93.not = icmp eq ptr %213, null
  br i1 %tobool93.not, label %if.then92.if.end96_crit_edge, label %if.then94

if.then92.if.end96_crit_edge:                     ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end96

if.then94:                                        ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef nonnull %213, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %if.then92.if.end96_crit_edge
  %touch_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 13
  %214 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %touch_input, align 4
  %tobool97.not = icmp eq ptr %215, null
  br i1 %tobool97.not, label %if.end96.if.end100_crit_edge, label %if.then98

if.end96.if.end100_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end100

if.then98:                                        ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef nonnull %215, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %if.end100

if.end100:                                        ; preds = %if.then98, %if.end96.if.end100_crit_edge
  %pad_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 14
  %216 = ptrtoint ptr %pad_input to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %pad_input, align 8
  %tobool101.not = icmp eq ptr %217, null
  br i1 %tobool101.not, label %if.end100.if.end105_crit_edge, label %if.then102

if.end100.if.end105_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end105

if.then102:                                       ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef nonnull %217, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %if.end105

if.end105:                                        ; preds = %if.then102, %if.end100.if.end105_crit_edge, %sw.epilog.if.end105_crit_edge, %if.else86, %if.then85, %sw.bb75, %sw.bb71.if.end105_crit_edge, %wacom_bpt_irq.exit.if.end105_crit_edge, %delay_pen_events.exit.i.i.if.end105_crit_edge, %if.then12.i.if.end105_crit_edge, %if.then3.i.if.end105_crit_edge, %if.else.i.if.end105_crit_edge, %if.then62, %sw.bb52.if.end105_crit_edge, %sw.bb48, %if.else43.if.end105_crit_edge, %if.then39, %if.then.if.end105_crit_edge, %land.lhs.true.i.if.end105_crit_edge, %sw.bb25, %sw.bb21.if.end105_crit_edge, %sw.bb17.if.end105_crit_edge, %sw.bb9.if.end105_crit_edge, %sw.bb5.if.end105_crit_edge, %sw.bb1.if.end105_crit_edge, %entry.if.end105_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_penpartner_irq(ptr nocapture noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data1, align 1
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.233)
  switch i8 %3, label %do.body [
    i8 1, label %sw.bb
    i8 2, label %sw.bb34
  ]

sw.bb:                                            ; preds = %entry
  %arrayidx2 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %5 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx2, align 1
  %conv3 = zext i8 %6 to i32
  %and = and i32 %conv3, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  %and6 = and i32 %conv3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %cond = select i1 %tobool7.not, i32 320, i32 321
  %tool = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %7 = ptrtoint ptr %tool to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %cond, ptr %tool, align 4
  %8 = and i8 %6, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool12.not = icmp eq i8 %8, 0
  %cond13 = select i1 %tobool12.not, i32 2, i32 10
  %id = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %9 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %cond13, ptr %id, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef %cond, i32 noundef 1) #8
  %10 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %id, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef %11) #8
  %arrayidx19 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %12 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_loadN_noabort(i32 %12, i32 2)
  %13 = load i16, ptr %arrayidx19, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #8
  %conv20 = zext i16 %14 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %conv20) #8
  %arrayidx21 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %15 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_loadN_noabort(i32 %15, i32 2)
  %16 = load i16, ptr %arrayidx21, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #8
  %conv23 = zext i16 %17 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %conv23) #8
  %arrayidx24 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %18 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx24, align 1
  %conv25 = sext i8 %19 to i32
  %add = add nsw i32 %conv25, 127
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef %add) #8
  %20 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx24, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -127, i8 %21)
  %cmp = icmp sgt i8 %21, -127
  %lnot.ext.i = zext i1 %cmp to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i) #8
  %22 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx2, align 1
  %24 = lshr i8 %23, 6
  %.lobit111 = and i8 %24, 1
  %25 = zext i8 %.lobit111 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef %25) #8
  br label %cleanup

if.else:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  %tool32 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %26 = ptrtoint ptr %tool32 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %tool32, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef %27, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef -1) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef 0) #8
  br label %cleanup

sw.bb34:                                          ; preds = %entry
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 320, i32 noundef 1) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef 2) #8
  %arrayidx35 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %28 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_loadN_noabort(i32 %28, i32 2)
  %29 = load i16, ptr %arrayidx35, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #8
  %conv37 = zext i16 %30 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %conv37) #8
  %arrayidx38 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %31 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_loadN_noabort(i32 %31, i32 2)
  %32 = load i16, ptr %arrayidx38, align 1
  %33 = tail call i16 @llvm.bswap.i16(i16 %32) #8
  %conv40 = zext i16 %33 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %conv40) #8
  %arrayidx41 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %34 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %arrayidx41, align 1
  %conv42 = sext i8 %35 to i32
  %add43 = add nsw i32 %conv42, 127
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef %add43) #8
  %36 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx41, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -80, i8 %37)
  %cmp46 = icmp sgt i8 %37, -80
  br i1 %cmp46, label %land.rhs, label %sw.bb34.land.end_crit_edge

sw.bb34.land.end_crit_edge:                       ; preds = %sw.bb34
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end

land.rhs:                                         ; preds = %sw.bb34
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx48 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %38 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx48, align 1
  %40 = lshr i8 %39, 5
  %.lobit = and i8 %40, 1
  %41 = xor i8 %.lobit, 1
  %42 = zext i8 %41 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb34.land.end_crit_edge
  %43 = phi i32 [ 0, %sw.bb34.land.end_crit_edge ], [ %42, %land.rhs ]
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %43) #8
  %arrayidx52 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %44 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx52, align 1
  %46 = lshr i8 %45, 6
  %.lobit110 = and i8 %46, 1
  %47 = zext i8 %.lobit110 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef %47) #8
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_penpartner_irq.__UNIQUE_ID_ddebug239, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_penpartner_irq, %if.then60)) #8
          to label %cleanup [label %if.then60], !srcloc !728

if.then60:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %parent = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %48 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %parent, align 8
  %50 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %data1, align 1
  %conv62 = zext i8 %51 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_penpartner_irq.__UNIQUE_ID_ddebug239, ptr noundef %49, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.25, i32 noundef %conv62) #8
  br label %cleanup

cleanup:                                          ; preds = %if.then60, %do.body, %land.end, %if.else, %if.then
  %retval.0 = phi i32 [ 0, %if.then60 ], [ 1, %if.then ], [ 1, %if.else ], [ 1, %land.end ], [ 0, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_pl_irq(ptr nocapture noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data2 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %2 = ptrtoint ptr %data2 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %3)
  %cmp.not = icmp eq i8 %3, 2
  br i1 %cmp.not, label %if.end9, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_pl_irq.__UNIQUE_ID_ddebug240, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_pl_irq, %if.then6)) #8
          to label %cleanup [label %if.then6], !srcloc !728

if.then6:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %parent = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 8
  %6 = ptrtoint ptr %data2 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data2, align 1
  %conv8 = zext i8 %7 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_pl_irq.__UNIQUE_ID_ddebug240, ptr noundef %5, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.27, i32 noundef %conv8) #8
  br label %cleanup

if.end9:                                          ; preds = %entry
  %arrayidx10 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %8 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx10, align 1
  %10 = and i8 %9, 64
  %id = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %11 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool13.not = icmp eq i32 %12, 0
  br i1 %tobool13.not, label %lor.lhs.false, label %if.end9.if.end32_crit_edge

if.end9.if.end32_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end32

lor.lhs.false:                                    ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx19 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %13 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx19, align 1
  %15 = and i8 %14, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool22.not = icmp eq i8 %15, 0
  %tool27 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %. = select i1 %tobool22.not, i32 320, i32 321
  %.177 = select i1 %tobool22.not, i32 2, i32 10
  %16 = ptrtoint ptr %tool27 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %., ptr %tool27, align 4
  %17 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %.177, ptr %id, align 4
  br label %if.end32

if.end32:                                         ; preds = %lor.lhs.false, %if.end9.if.end32_crit_edge
  %tool33 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %18 = ptrtoint ptr %tool33 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tool33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 321, i32 %19)
  %cmp35 = icmp eq i32 %19, 321
  br i1 %cmp35, label %land.lhs.true, label %if.end32.if.end46_crit_edge

if.end32.if.end46_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end46

land.lhs.true:                                    ; preds = %if.end32
  %arrayidx37 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %20 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx37, align 1
  %22 = and i8 %21, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool40.not = icmp eq i8 %22, 0
  br i1 %tobool40.not, label %if.then41, label %land.lhs.true.if.end46_crit_edge

land.lhs.true.if.end46_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end46

if.then41:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 321, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %23 = ptrtoint ptr %tool33 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 320, ptr %tool33, align 4
  %24 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 2, ptr %id, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %land.lhs.true.if.end46_crit_edge, %if.end32.if.end46_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool47.not = icmp eq i8 %10, 0
  br i1 %tobool47.not, label %if.then106, label %if.then48

if.then48:                                        ; preds = %if.end46
  %arrayidx49 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %25 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx49, align 1
  %shl = shl i8 %26, 1
  %arrayidx51 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %27 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx51, align 1
  %29 = lshr i8 %28, 2
  %and53 = and i8 %29, 1
  %or = or i8 %and53, %shl
  %conv55 = sext i8 %or to i32
  %pressure_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 3
  %30 = ptrtoint ptr %pressure_max to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pressure_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %31)
  %cmp56 = icmp sgt i32 %31, 255
  %shl59 = shl nsw i32 %conv55, 1
  %32 = lshr i8 %28, 6
  %33 = and i8 %32, 1
  %and63 = zext i8 %33 to i32
  %or64 = or i32 %shl59, %and63
  %pressure.0 = select i1 %cmp56, i32 %or64, i32 %conv55
  %add = add i32 %31, 1
  %div = sdiv i32 %add, 2
  %add67 = add nsw i32 %pressure.0, %div
  %arrayidx68 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %34 = ptrtoint ptr %arrayidx68 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %arrayidx68, align 1
  %conv69 = zext i8 %35 to i32
  %arrayidx70 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %36 = ptrtoint ptr %arrayidx70 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx70, align 1
  %conv71 = zext i8 %37 to i32
  %shl72 = shl nuw nsw i32 %conv71, 7
  %or73 = or i32 %shl72, %conv69
  %38 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx10, align 1
  %40 = and i8 %39, 3
  %and76 = zext i8 %40 to i32
  %shl77 = shl nuw nsw i32 %and76, 14
  %or78 = or i32 %or73, %shl77
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %or78) #8
  %arrayidx79 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %41 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx79, align 1
  %conv80 = zext i8 %42 to i32
  %arrayidx81 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %43 = ptrtoint ptr %arrayidx81 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %arrayidx81, align 1
  %conv82 = zext i8 %44 to i32
  %shl83 = shl nuw nsw i32 %conv82, 7
  %or84 = or i32 %shl83, %conv80
  %45 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx51, align 1
  %47 = and i8 %46, 3
  %and87 = zext i8 %47 to i32
  %shl88 = shl nuw nsw i32 %and87, 14
  %or89 = or i32 %or84, %shl88
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %or89) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef %add67) #8
  %48 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %arrayidx51, align 1
  %50 = lshr i8 %49, 3
  %.lobit = and i8 %50, 1
  %51 = zext i8 %.lobit to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %51) #8
  %52 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %arrayidx51, align 1
  %54 = lshr i8 %53, 4
  %.lobit173 = and i8 %54, 1
  %55 = zext i8 %.lobit173 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef %55) #8
  %56 = ptrtoint ptr %tool33 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %tool33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 320, i32 %57)
  %cmp98 = icmp eq i32 %57, 320
  br i1 %cmp98, label %land.rhs, label %if.end109.critedge165

land.rhs:                                         ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #10
  %58 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %arrayidx51, align 1
  %60 = lshr i8 %59, 5
  %.lobit175 = and i8 %60, 1
  %61 = zext i8 %.lobit175 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 332, i32 noundef %61) #8
  br label %if.end109

if.then106:                                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #10
  %62 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %id, align 4
  br label %if.end109

if.end109.critedge165:                            ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 332, i32 noundef 0) #8
  br label %if.end109

if.end109:                                        ; preds = %if.end109.critedge165, %if.then106, %land.rhs
  %63 = ptrtoint ptr %tool33 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %tool33, align 4
  %.lobit174 = lshr exact i8 %10, 6
  %65 = zext i8 %.lobit174 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef %64, i32 noundef %65) #8
  %66 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %id, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef %67) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end109, %if.then6, %do.body
  %retval.0 = phi i32 [ 1, %if.end109 ], [ 0, %if.then6 ], [ 0, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_graphire_irq(ptr noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data2 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %pad_input3 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %2 = ptrtoint ptr %pad_input3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pad_input3, align 8
  %type = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 5
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp = icmp eq i32 %5, 2
  %6 = ptrtoint ptr %data2 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data2, align 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %7)
  %cmp5.not = icmp eq i8 %7, 3
  br i1 %cmp5.not, label %if.then.if.end40_crit_edge, label %do.body

if.then.if.end40_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end40

do.body:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_graphire_irq.__UNIQUE_ID_ddebug244, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_graphire_irq, %if.then10)) #8
          to label %exit [label %if.then10], !srcloc !728

if.then10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %parent = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %8 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent, align 8
  %10 = ptrtoint ptr %data2 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data2, align 1
  %conv12 = zext i8 %11 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_graphire_irq.__UNIQUE_ID_ddebug244, ptr noundef %9, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.28, i32 noundef %conv12) #8
  br label %exit

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %7)
  %cmp16.not = icmp eq i8 %7, 2
  br i1 %cmp16.not, label %if.else.if.end40_crit_edge, label %do.body19

if.else.if.end40_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end40

do.body19:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_graphire_irq.__UNIQUE_ID_ddebug245, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_graphire_irq, %if.then31)) #8
          to label %exit [label %if.then31], !srcloc !728

if.then31:                                        ; preds = %do.body19
  call void @__sanitizer_cov_trace_pc() #10
  %parent33 = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %12 = ptrtoint ptr %parent33 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %parent33, align 8
  %14 = ptrtoint ptr %data2 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %data2, align 1
  %conv35 = zext i8 %15 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_graphire_irq.__UNIQUE_ID_ddebug245, ptr noundef %13, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.28, i32 noundef %conv35) #8
  br label %exit

if.end40:                                         ; preds = %if.else.if.end40_crit_edge, %if.then.if.end40_crit_edge
  %arrayidx41 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %16 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx41, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %17)
  %tobool43.not = icmp sgt i8 %17, -1
  br i1 %tobool43.not, label %lor.lhs.false, label %if.then48.critedge

lor.lhs.false:                                    ; preds = %if.end40
  %id = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %18 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool45.not = icmp eq i32 %19, 0
  br i1 %tobool45.not, label %lor.lhs.false.if.end197_crit_edge, label %lor.lhs.false.if.end69_crit_edge

lor.lhs.false.if.end69_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end69

lor.lhs.false.if.end197_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end197

if.then48.critedge:                               ; preds = %if.end40
  %conv50 = zext i8 %17 to i32
  %20 = lshr i32 %conv50, 5
  %and51 = and i32 %20, 3
  %21 = zext i32 %and51 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.234)
  switch i32 %and51, label %if.then48.unreachabledefault [
    i32 0, label %if.then48.critedge.if.end69.sink.split_crit_edge
    i32 1, label %sw.bb55
    i32 2, label %sw.bb60
    i32 3, label %if.then48.critedge.sw.bb64_crit_edge
  ]

if.then48.critedge.sw.bb64_crit_edge:             ; preds = %if.then48.critedge
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb64

if.then48.critedge.if.end69.sink.split_crit_edge: ; preds = %if.then48.critedge
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end69.sink.split

sw.bb55:                                          ; preds = %if.then48.critedge
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end69.sink.split

sw.bb60:                                          ; preds = %if.then48.critedge
  call void @__sanitizer_cov_trace_pc() #10
  %and63 = lshr i32 %conv50, 2
  %and63.lobit = and i32 %and63, 1
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 274, i32 noundef %and63.lobit) #8
  br label %sw.bb64

sw.bb64:                                          ; preds = %sw.bb60, %if.then48.critedge.sw.bb64_crit_edge
  br label %if.end69.sink.split

if.then48.unreachabledefault:                     ; preds = %if.then48.critedge
  unreachable

if.end69.sink.split:                              ; preds = %sw.bb64, %sw.bb55, %if.then48.critedge.if.end69.sink.split_crit_edge
  %.sink488 = phi i32 [ 321, %sw.bb55 ], [ 326, %sw.bb64 ], [ 320, %if.then48.critedge.if.end69.sink.split_crit_edge ]
  %.sink = phi i32 [ 10, %sw.bb55 ], [ 6, %sw.bb64 ], [ 2, %if.then48.critedge.if.end69.sink.split_crit_edge ]
  %tool = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %22 = ptrtoint ptr %tool to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %.sink488, ptr %tool, align 4
  %id53 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %23 = ptrtoint ptr %id53 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %.sink, ptr %id53, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.end69.sink.split, %lor.lhs.false.if.end69_crit_edge
  %arrayidx70 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %24 = ptrtoint ptr %arrayidx70 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %arrayidx70, align 2
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #8
  %conv72 = zext i16 %26 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %conv72) #8
  %arrayidx73 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %27 = ptrtoint ptr %arrayidx73 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %arrayidx73, align 2
  %29 = tail call i16 @llvm.bswap.i16(i16 %28) #8
  %conv75 = zext i16 %29 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %conv75) #8
  %tool76 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %30 = ptrtoint ptr %tool76 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %tool76, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 326, i32 %31)
  %cmp78.not = icmp eq i32 %31, 326
  br i1 %cmp78.not, label %if.else110, label %if.then80

if.then80:                                        ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #10
  %32 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %33)
  %cmp82 = icmp eq i32 %33, 2
  %arrayidx85 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %34 = ptrtoint ptr %arrayidx85 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %arrayidx85, align 1
  %conv86 = zext i8 %35 to i32
  %arrayidx95 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %arrayidx95.sink = select i1 %cmp82, ptr %arrayidx41, ptr %arrayidx95
  %.sink492 = select i1 %cmp82, i8 8, i8 3
  %.sink489 = select i1 %cmp82, i32 5, i32 8
  %36 = ptrtoint ptr %arrayidx95.sink to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx95.sink, align 1
  %38 = and i8 %37, %.sink492
  %and97 = zext i8 %38 to i32
  %shl98 = shl nuw nsw i32 %and97, %.sink489
  %or99 = or i32 %shl98, %conv86
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef %or99) #8
  %39 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %arrayidx41, align 1
  %41 = and i8 %40, 1
  %42 = zext i8 %41 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %42) #8
  %43 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %arrayidx41, align 1
  %45 = lshr i8 %44, 1
  %.lobit = and i8 %45, 1
  %46 = zext i8 %.lobit to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef %46) #8
  %47 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %arrayidx41, align 1
  %49 = lshr i8 %48, 2
  %.lobit478 = and i8 %49, 1
  %50 = zext i8 %.lobit478 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 332, i32 noundef %50) #8
  br label %if.end187

if.else110:                                       ; preds = %if.end69
  %51 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %arrayidx41, align 1
  %53 = and i8 %52, 1
  %54 = zext i8 %53 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 272, i32 noundef %54) #8
  %55 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %arrayidx41, align 1
  %57 = lshr i8 %56, 1
  %.lobit487 = and i8 %57, 1
  %58 = zext i8 %.lobit487 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 273, i32 noundef %58) #8
  %59 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %type, align 4
  %61 = zext i32 %60 to i64
  call void @__sanitizer_cov_trace_switch(i64 %61, ptr @__sancov_gen_cov_switch_values.235)
  switch i32 %60, label %if.else178 [
    i32 3, label %if.else110.if.then124_crit_edge
    i32 36, label %if.else110.if.then124_crit_edge495
    i32 2, label %if.then138
  ]

if.else110.if.then124_crit_edge495:               ; preds = %if.else110
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then124

if.else110.if.then124_crit_edge:                  ; preds = %if.else110
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then124

if.then124:                                       ; preds = %if.else110.if.then124_crit_edge, %if.else110.if.then124_crit_edge495
  %arrayidx125 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %62 = ptrtoint ptr %arrayidx125 to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %arrayidx125, align 1
  %64 = and i8 %63, 63
  %and127 = zext i8 %64 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 25, i32 noundef %and127) #8
  %arrayidx128 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %65 = ptrtoint ptr %arrayidx128 to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %arrayidx128, align 1
  %conv129 = zext i8 %66 to i32
  %and130 = and i32 %conv129, 4
  %and133 = and i32 %conv129, 3
  %sub = sub nsw i32 %and130, %and133
  br label %if.end186

if.then138:                                       ; preds = %if.else110
  %arrayidx139 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %67 = ptrtoint ptr %arrayidx139 to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %arrayidx139, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -80, i8 %68)
  %cmp144 = icmp ult i8 %68, -80
  %69 = lshr i8 %68, 2
  %70 = zext i8 %69 to i32
  %sub142 = sub nsw i32 44, %70
  %71 = tail call i32 @llvm.smin.i32(i32 %sub142, i32 31)
  %72 = select i1 %cmp144, i32 %71, i32 0
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 25, i32 noundef %72) #8
  %73 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %arrayidx41, align 1
  %conv154 = zext i8 %74 to i32
  %75 = and i32 %conv154, 96
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %75)
  %cmp157 = icmp eq i32 %75, 64
  br i1 %cmp157, label %if.then159, label %if.then138.if.end186_crit_edge

if.then138.if.end186_crit_edge:                   ; preds = %if.then138
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end186

if.then159:                                       ; preds = %if.then138
  call void @__sanitizer_cov_trace_pc() #10
  %and162 = lshr i32 %conv154, 2
  %and162.lobit = and i32 %and162, 1
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 274, i32 noundef %and162.lobit) #8
  %76 = ptrtoint ptr %arrayidx139 to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %arrayidx139, align 1
  %conv164 = zext i8 %77 to i32
  %and165 = and i32 %conv164, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and165)
  %tobool166.not = icmp eq i32 %and165, 0
  %and171 = lshr i32 %conv164, 1
  %and171.lobit = and i32 %and171, 1
  %cond175 = select i1 %tobool166.not, i32 %and171.lobit, i32 -1
  br label %if.end186

if.else178:                                       ; preds = %if.else110
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx179 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %78 = ptrtoint ptr %arrayidx179 to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %arrayidx179, align 1
  %80 = and i8 %79, 63
  %and181 = zext i8 %80 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 25, i32 noundef %and181) #8
  %arrayidx182 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %81 = ptrtoint ptr %arrayidx182 to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %arrayidx182, align 1
  %conv183 = sext i8 %82 to i32
  %sub184 = sub nsw i32 0, %conv183
  br label %if.end186

if.end186:                                        ; preds = %if.else178, %if.then159, %if.then138.if.end186_crit_edge, %if.then124
  %rw.0 = phi i32 [ %sub, %if.then124 ], [ %cond175, %if.then159 ], [ %sub184, %if.else178 ], [ 0, %if.then138.if.end186_crit_edge ]
  tail call void @input_event(ptr noundef %1, i32 noundef 2, i32 noundef 8, i32 noundef %rw.0) #8
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then80
  br i1 %tobool43.not, label %if.then189, label %if.end187.if.end192_crit_edge

if.end187.if.end192_crit_edge:                    ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end192

if.then189:                                       ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #10
  %id190 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %83 = ptrtoint ptr %id190 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 0, ptr %id190, align 4
  br label %if.end192

if.end192:                                        ; preds = %if.then189, %if.end187.if.end192_crit_edge
  %id193 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %84 = ptrtoint ptr %id193 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %id193, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef %85) #8
  %86 = ptrtoint ptr %tool76 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %tool76, align 4
  %.lobit479 = lshr i8 %17, 7
  %88 = zext i8 %.lobit479 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef %87, i32 noundef %88) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %if.end197

if.end197:                                        ; preds = %if.end192, %lor.lhs.false.if.end197_crit_edge
  %89 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %type, align 4
  %91 = zext i32 %90 to i64
  call void @__sanitizer_cov_trace_switch(i64 %91, ptr @__sancov_gen_cov_switch_values.236)
  switch i32 %90, label %if.end197.exit_crit_edge [
    i32 3, label %sw.bb199
    i32 36, label %sw.bb234
    i32 2, label %sw.bb273
  ]

if.end197.exit_crit_edge:                         ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #10
  br label %exit

sw.bb199:                                         ; preds = %if.end197
  %arrayidx200 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %92 = ptrtoint ptr %arrayidx200 to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %arrayidx200, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %93)
  %tobool203.not = icmp ult i8 %93, 8
  br i1 %tobool203.not, label %lor.lhs.false204, label %sw.bb199.if.then208_crit_edge

sw.bb199.if.then208_crit_edge:                    ; preds = %sw.bb199
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then208

lor.lhs.false204:                                 ; preds = %sw.bb199
  %arrayidx206 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 1
  %94 = ptrtoint ptr %arrayidx206 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %arrayidx206, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool207.not = icmp eq i32 %95, 0
  br i1 %tobool207.not, label %lor.lhs.false204.sw.epilog299_crit_edge, label %lor.lhs.false204.if.then208_crit_edge

lor.lhs.false204.if.then208_crit_edge:            ; preds = %lor.lhs.false204
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then208

lor.lhs.false204.sw.epilog299_crit_edge:          ; preds = %lor.lhs.false204
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299

if.then208:                                       ; preds = %lor.lhs.false204.if.then208_crit_edge, %sw.bb199.if.then208_crit_edge
  %arrayidx210 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 1
  %96 = ptrtoint ptr %arrayidx210 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 15, ptr %arrayidx210, align 4
  %97 = lshr i8 %93, 6
  %.lobit485 = and i8 %97, 1
  %98 = zext i8 %.lobit485 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 278, i32 noundef %98) #8
  %99 = ptrtoint ptr %arrayidx200 to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %arrayidx200, align 1
  %.lobit486 = lshr i8 %100, 7
  %101 = zext i8 %.lobit486 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 277, i32 noundef %101) #8
  %102 = ptrtoint ptr %arrayidx200 to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %arrayidx200, align 1
  %104 = lshr i8 %103, 3
  %and219 = zext i8 %104 to i32
  %105 = and i32 %and219, 3
  %106 = and i32 %and219, 4
  %sub225 = sub nsw i32 %105, %106
  tail call void @input_event(ptr noundef %3, i32 noundef 2, i32 noundef 8, i32 noundef %sub225) #8
  br i1 %tobool203.not, label %if.then208.sw.epilog299.sink.split.sink.split_crit_edge, label %if.then208.sw.epilog299.sink.split_crit_edge

if.then208.sw.epilog299.sink.split_crit_edge:     ; preds = %if.then208
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299.sink.split

if.then208.sw.epilog299.sink.split.sink.split_crit_edge: ; preds = %if.then208
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299.sink.split.sink.split

sw.bb234:                                         ; preds = %if.end197
  %arrayidx235 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %107 = ptrtoint ptr %arrayidx235 to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %arrayidx235, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 8, i8 %108)
  %tobool238.not = icmp ult i8 %108, 8
  br i1 %tobool238.not, label %lor.end, label %sw.bb234.if.then247_crit_edge

sw.bb234.if.then247_crit_edge:                    ; preds = %sw.bb234
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then247

lor.end:                                          ; preds = %sw.bb234
  %arrayidx239 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %109 = ptrtoint ptr %arrayidx239 to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %arrayidx239, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %110)
  %tobool241.not = icmp eq i8 %110, 0
  br i1 %tobool241.not, label %lor.lhs.false243, label %lor.end.if.then247_crit_edge

lor.end.if.then247_crit_edge:                     ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then247

lor.lhs.false243:                                 ; preds = %lor.end
  %arrayidx245 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 1
  %111 = ptrtoint ptr %arrayidx245 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %arrayidx245, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %tobool246.not = icmp eq i32 %112, 0
  br i1 %tobool246.not, label %lor.lhs.false243.sw.epilog299_crit_edge, label %lor.lhs.false243.if.then247_crit_edge

lor.lhs.false243.if.then247_crit_edge:            ; preds = %lor.lhs.false243
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then247

lor.lhs.false243.sw.epilog299_crit_edge:          ; preds = %lor.lhs.false243
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299

if.then247:                                       ; preds = %lor.lhs.false243.if.then247_crit_edge, %lor.end.if.then247_crit_edge, %sw.bb234.if.then247_crit_edge
  %113 = phi i1 [ false, %lor.lhs.false243.if.then247_crit_edge ], [ true, %lor.end.if.then247_crit_edge ], [ true, %sw.bb234.if.then247_crit_edge ]
  %arrayidx249 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 1
  %114 = ptrtoint ptr %arrayidx249 to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 15, ptr %arrayidx249, align 4
  %115 = lshr i8 %108, 3
  %.lobit481 = and i8 %115, 1
  %116 = zext i8 %.lobit481 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 278, i32 noundef %116) #8
  %117 = ptrtoint ptr %arrayidx235 to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %arrayidx235, align 1
  %119 = lshr i8 %118, 5
  %.lobit482 = and i8 %119, 1
  %120 = zext i8 %.lobit482 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 272, i32 noundef %120) #8
  %121 = ptrtoint ptr %arrayidx235 to i32
  call void @__asan_load1_noabort(i32 %121)
  %122 = load i8, ptr %arrayidx235, align 1
  %123 = lshr i8 %122, 4
  %.lobit483 = and i8 %123, 1
  %124 = zext i8 %.lobit483 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 277, i32 noundef %124) #8
  %125 = ptrtoint ptr %arrayidx235 to i32
  call void @__asan_load1_noabort(i32 %125)
  %126 = load i8, ptr %arrayidx235, align 1
  %127 = lshr i8 %126, 6
  %.lobit484 = and i8 %127, 1
  %128 = zext i8 %.lobit484 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 273, i32 noundef %128) #8
  %arrayidx262 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %129 = ptrtoint ptr %arrayidx262 to i32
  call void @__asan_load1_noabort(i32 %129)
  %130 = load i8, ptr %arrayidx262, align 1
  %131 = and i8 %130, 127
  %and264 = zext i8 %131 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 3, i32 noundef 8, i32 noundef %and264) #8
  br i1 %113, label %if.then247.sw.epilog299.sink.split_crit_edge, label %if.then247.sw.epilog299.sink.split.sink.split_crit_edge

if.then247.sw.epilog299.sink.split.sink.split_crit_edge: ; preds = %if.then247
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299.sink.split.sink.split

if.then247.sw.epilog299.sink.split_crit_edge:     ; preds = %if.then247
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299.sink.split

sw.bb273:                                         ; preds = %if.end197
  %arrayidx274 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %132 = ptrtoint ptr %arrayidx274 to i32
  call void @__asan_load1_noabort(i32 %132)
  %133 = load i8, ptr %arrayidx274, align 1
  %134 = and i8 %133, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %134)
  %tobool277.not = icmp eq i8 %134, 0
  br i1 %tobool277.not, label %lor.lhs.false278, label %sw.bb273.if.then282_crit_edge

sw.bb273.if.then282_crit_edge:                    ; preds = %sw.bb273
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then282

lor.lhs.false278:                                 ; preds = %sw.bb273
  %arrayidx280 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 1
  %135 = ptrtoint ptr %arrayidx280 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %arrayidx280, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %136)
  %tobool281.not = icmp eq i32 %136, 0
  br i1 %tobool281.not, label %lor.lhs.false278.sw.epilog299_crit_edge, label %lor.lhs.false278.if.then282_crit_edge

lor.lhs.false278.if.then282_crit_edge:            ; preds = %lor.lhs.false278
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then282

lor.lhs.false278.sw.epilog299_crit_edge:          ; preds = %lor.lhs.false278
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299

if.then282:                                       ; preds = %lor.lhs.false278.if.then282_crit_edge, %sw.bb273.if.then282_crit_edge
  %arrayidx284 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 1
  %137 = ptrtoint ptr %arrayidx284 to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 15, ptr %arrayidx284, align 4
  %138 = lshr i8 %133, 1
  %.lobit480 = and i8 %138, 1
  %139 = zext i8 %.lobit480 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 256, i32 noundef %139) #8
  %140 = ptrtoint ptr %arrayidx274 to i32
  call void @__asan_load1_noabort(i32 %140)
  %141 = load i8, ptr %arrayidx274, align 1
  %142 = and i8 %141, 1
  %143 = zext i8 %142 to i32
  tail call void @input_event(ptr noundef %3, i32 noundef 1, i32 noundef 257, i32 noundef %143) #8
  br i1 %tobool277.not, label %if.then282.sw.epilog299.sink.split.sink.split_crit_edge, label %if.then282.sw.epilog299.sink.split_crit_edge

if.then282.sw.epilog299.sink.split_crit_edge:     ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299.sink.split

if.then282.sw.epilog299.sink.split.sink.split_crit_edge: ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog299.sink.split.sink.split

sw.epilog299.sink.split.sink.split:               ; preds = %if.then282.sw.epilog299.sink.split.sink.split_crit_edge, %if.then247.sw.epilog299.sink.split.sink.split_crit_edge, %if.then208.sw.epilog299.sink.split.sink.split_crit_edge
  %arrayidx284.sink494 = phi ptr [ %arrayidx210, %if.then208.sw.epilog299.sink.split.sink.split_crit_edge ], [ %arrayidx249, %if.then247.sw.epilog299.sink.split.sink.split_crit_edge ], [ %arrayidx284, %if.then282.sw.epilog299.sink.split.sink.split_crit_edge ]
  %144 = ptrtoint ptr %arrayidx284.sink494 to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 0, ptr %arrayidx284.sink494, align 4
  br label %sw.epilog299.sink.split

sw.epilog299.sink.split:                          ; preds = %sw.epilog299.sink.split.sink.split, %if.then282.sw.epilog299.sink.split_crit_edge, %if.then247.sw.epilog299.sink.split_crit_edge, %if.then208.sw.epilog299.sink.split_crit_edge
  %arrayidx284.sink = phi ptr [ %arrayidx210, %if.then208.sw.epilog299.sink.split_crit_edge ], [ %arrayidx249, %if.then247.sw.epilog299.sink.split_crit_edge ], [ %arrayidx284, %if.then282.sw.epilog299.sink.split_crit_edge ], [ %arrayidx284.sink494, %sw.epilog299.sink.split.sink.split ]
  %145 = ptrtoint ptr %arrayidx284.sink to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %arrayidx284.sink, align 4
  tail call void @input_event(ptr noundef %3, i32 noundef 3, i32 noundef 40, i32 noundef %146) #8
  br label %sw.epilog299

sw.epilog299:                                     ; preds = %sw.epilog299.sink.split, %lor.lhs.false278.sw.epilog299_crit_edge, %lor.lhs.false243.sw.epilog299_crit_edge, %lor.lhs.false204.sw.epilog299_crit_edge
  %retval4.0.ph = phi i32 [ 0, %lor.lhs.false204.sw.epilog299_crit_edge ], [ 0, %lor.lhs.false243.sw.epilog299_crit_edge ], [ 0, %lor.lhs.false278.sw.epilog299_crit_edge ], [ 1, %sw.epilog299.sink.split ]
  %147 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %147)
  %.pr = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.pr)
  %cmp301 = icmp eq i32 %.pr, 2
  br i1 %cmp301, label %if.then303, label %sw.epilog299.exit_crit_edge

sw.epilog299.exit_crit_edge:                      ; preds = %sw.epilog299
  call void @__sanitizer_cov_trace_pc() #10
  br label %exit

if.then303:                                       ; preds = %sw.epilog299
  %arrayidx304 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %148 = ptrtoint ptr %arrayidx304 to i32
  call void @__asan_load1_noabort(i32 %148)
  %149 = load i8, ptr %arrayidx304, align 1
  %150 = lshr i8 %149, 2
  %151 = and i8 %150, 7
  %and307 = zext i8 %151 to i32
  %arrayidx308 = getelementptr [8 x i16], ptr @batcap_gr, i32 0, i32 %and307
  %152 = ptrtoint ptr %arrayidx308 to i32
  call void @__asan_load2_noabort(i32 %152)
  %153 = load i16, ptr %arrayidx308, align 2
  %conv309 = zext i16 %153 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %151)
  %cmp310 = icmp eq i8 %151, 7
  %bat_status3.i.i = getelementptr i8, ptr %wacom, i32 1432
  %154 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %bat_status3.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %155)
  %cmp.not.i.i = icmp eq i32 %155, -1
  br i1 %cmp.not.i.i, label %lor.lhs.false.i.i, label %if.then303.if.then.i.i_crit_edge

if.then303.if.then.i.i_crit_edge:                 ; preds = %if.then303
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then303
  %battery_capacity.i.i = getelementptr i8, ptr %wacom, i32 1436
  %156 = ptrtoint ptr %battery_capacity.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %battery_capacity.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %157, i32 %conv309)
  %cmp4.not.i.i = icmp eq i32 %157, %conv309
  br i1 %cmp4.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %bat_charging6.i.i = getelementptr i8, ptr %wacom, i32 1440
  %158 = ptrtoint ptr %bat_charging6.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %bat_charging6.i.i, align 4
  %conv.i.i = zext i1 %cmp310 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %159, i32 %conv.i.i)
  %cmp7.not.i.i = icmp eq i32 %159, %conv.i.i
  br i1 %cmp7.not.i.i, label %lor.lhs.false9.i.i, label %lor.lhs.false5.i.i.if.then.i.i_crit_edge

lor.lhs.false5.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false9.i.i:                               ; preds = %lor.lhs.false5.i.i
  %bat_connected10.i.i = getelementptr i8, ptr %wacom, i32 1444
  %160 = ptrtoint ptr %bat_connected10.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %bat_connected10.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %161)
  %cmp13.not.i.i = icmp eq i32 %161, 1
  br i1 %cmp13.not.i.i, label %lor.rhs.i.i, label %lor.lhs.false9.i.i.if.then.i.i_crit_edge

lor.lhs.false9.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false9.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i:                                      ; preds = %lor.lhs.false9.i.i
  %ps_connected15.i.i = getelementptr i8, ptr %wacom, i32 1448
  %162 = ptrtoint ptr %ps_connected15.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %ps_connected15.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %163, i32 %159)
  %cmp18.not.i.i = icmp eq i32 %163, %159
  br i1 %cmp18.not.i.i, label %lor.rhs.i.i.exit_crit_edge, label %lor.rhs.i.i.if.then.i.i_crit_edge

lor.rhs.i.i.if.then.i.i_crit_edge:                ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i.exit_crit_edge:                       ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %exit

if.then.i.i:                                      ; preds = %lor.rhs.i.i.if.then.i.i_crit_edge, %lor.lhs.false9.i.i.if.then.i.i_crit_edge, %lor.lhs.false5.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.then303.if.then.i.i_crit_edge
  %164 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 -1, ptr %bat_status3.i.i, align 4
  %battery_capacity23.i.i = getelementptr i8, ptr %wacom, i32 1436
  %165 = ptrtoint ptr %battery_capacity23.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 %conv309, ptr %battery_capacity23.i.i, align 4
  %conv25.i.i = zext i1 %cmp310 to i32
  %bat_charging26.i.i = getelementptr i8, ptr %wacom, i32 1440
  %166 = ptrtoint ptr %bat_charging26.i.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %conv25.i.i, ptr %bat_charging26.i.i, align 4
  %bat_connected29.i.i = getelementptr i8, ptr %wacom, i32 1444
  %167 = ptrtoint ptr %bat_connected29.i.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store i32 1, ptr %bat_connected29.i.i, align 4
  %ps_connected32.i.i = getelementptr i8, ptr %wacom, i32 1448
  %168 = ptrtoint ptr %ps_connected32.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store i32 %conv25.i.i, ptr %ps_connected32.i.i, align 4
  %battery33.i.i = getelementptr i8, ptr %wacom, i32 1364
  %169 = ptrtoint ptr %battery33.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %battery33.i.i, align 4
  %tobool34.not.i.i = icmp eq ptr %170, null
  br i1 %tobool34.not.i.i, label %if.then.i.i.exit_crit_edge, label %if.then35.i.i

if.then.i.i.exit_crit_edge:                       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %exit

if.then35.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %170) #8
  br label %exit

exit:                                             ; preds = %if.then35.i.i, %if.then.i.i.exit_crit_edge, %lor.rhs.i.i.exit_crit_edge, %sw.epilog299.exit_crit_edge, %if.end197.exit_crit_edge, %if.then31, %do.body19, %if.then10, %do.body
  %retval4.1 = phi i32 [ 0, %if.then10 ], [ %retval4.0.ph, %sw.epilog299.exit_crit_edge ], [ 0, %if.then31 ], [ 0, %do.body ], [ 0, %do.body19 ], [ %retval4.0.ph, %lor.rhs.i.i.exit_crit_edge ], [ %retval4.0.ph, %if.then.i.i.exit_crit_edge ], [ %retval4.0.ph, %if.then35.i.i ], [ 0, %if.end197.exit_crit_edge ]
  ret i32 %retval4.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_ptu_irq(ptr nocapture noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %3)
  %cmp.not = icmp eq i8 %3, 2
  br i1 %cmp.not, label %if.end8, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_ptu_irq.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_ptu_irq, %if.then5)) #8
          to label %cleanup [label %if.then5], !srcloc !728

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %parent = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 8
  %6 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data1, align 1
  %conv7 = zext i8 %7 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_ptu_irq.__UNIQUE_ID_ddebug241, ptr noundef %5, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.29, i32 noundef %conv7) #8
  br label %cleanup

if.end8:                                          ; preds = %entry
  %arrayidx9 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %8 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx9, align 1
  %conv10 = zext i8 %9 to i32
  %and = and i32 %conv10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool11.not = icmp eq i32 %and, 0
  %and22 = lshr i32 %conv10, 5
  %and22.lobit = and i32 %and22, 1
  br i1 %tobool11.not, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 321, i32 noundef %and22.lobit) #8
  %10 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx9, align 1
  %12 = lshr i8 %11, 3
  br label %if.end28

if.else:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 320, i32 noundef %and22.lobit) #8
  %13 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx9, align 1
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then12
  %.sink87 = phi i8 [ %14, %if.else ], [ %12, %if.then12 ]
  %.sink = phi i32 [ 2, %if.else ], [ 10, %if.then12 ]
  %15 = and i8 %.sink87, 1
  %16 = zext i8 %15 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %16) #8
  %17 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %.sink, ptr %17, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef %.sink) #8
  %arrayidx31 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %19 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %arrayidx31, align 2
  %21 = tail call i16 @llvm.bswap.i16(i16 %20) #8
  %conv33 = zext i16 %21 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %conv33) #8
  %arrayidx34 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %22 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %arrayidx34, align 2
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #8
  %conv36 = zext i16 %24 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %conv36) #8
  %arrayidx37 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %25 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %arrayidx37, align 2
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #8
  %conv39 = zext i16 %27 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef %conv39) #8
  %28 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx9, align 1
  %30 = lshr i8 %29, 1
  %.lobit83 = and i8 %30, 1
  %31 = zext i8 %.lobit83 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef %31) #8
  %32 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx9, align 1
  %34 = lshr i8 %33, 4
  %.lobit84 = and i8 %34, 1
  %35 = zext i8 %.lobit84 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 332, i32 noundef %35) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %if.then5, %do.body
  %retval.0 = phi i32 [ 1, %if.end28 ], [ 0, %if.then5 ], [ 0, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_dtu_irq(ptr nocapture noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %arrayidx = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 1
  %4 = and i8 %3, 32
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_dtu_irq.__UNIQUE_ID_ddebug242, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_dtu_irq, %if.then)) #8
          to label %do.end [label %if.then], !srcloc !728

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %parent = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %5 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent, align 8
  %7 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data1, align 1
  %conv5 = zext i8 %8 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_dtu_irq.__UNIQUE_ID_ddebug242, ptr noundef %6, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.30, i32 noundef %conv5) #8
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool6.not = icmp eq i8 %4, 0
  br i1 %tobool6.not, label %do.end.if.end21_crit_edge, label %if.then7

do.end.if.end21_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end21

if.then7:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #10
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx, align 1
  %11 = and i8 %10, 12
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool11.not = icmp eq i8 %11, 0
  %cond = select i1 %tobool11.not, i32 320, i32 321
  %tool = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %12 = ptrtoint ptr %tool to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %cond, ptr %tool, align 4
  %id = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %. = select i1 %tobool11.not, i32 2, i32 10
  %13 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %., ptr %id, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then7, %do.end.if.end21_crit_edge
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx, align 1
  %16 = lshr i8 %15, 1
  %.lobit = and i8 %16, 1
  %17 = zext i8 %.lobit to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef %17) #8
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx, align 1
  %20 = lshr i8 %19, 4
  %.lobit8 = and i8 %20, 1
  %21 = zext i8 %.lobit8 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 332, i32 noundef %21) #8
  %arrayidx28 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %22 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %arrayidx28, align 2
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #8
  %conv30 = zext i16 %24 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %conv30) #8
  %arrayidx31 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %25 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %arrayidx31, align 2
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #8
  %conv33 = zext i16 %27 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %conv33) #8
  %arrayidx34 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %28 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx34, align 1
  %30 = and i8 %29, 1
  %and36 = zext i8 %30 to i32
  %shl = shl nuw nsw i32 %and36, 8
  %arrayidx37 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %31 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx37, align 1
  %conv38 = zext i8 %32 to i32
  %or = or i32 %shl, %conv38
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef %or) #8
  %33 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx, align 1
  %35 = and i8 %34, 5
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool.i3 = icmp ne i8 %35, 0
  %lnot.ext.i4 = zext i1 %tobool.i3 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i4) #8
  br i1 %tobool6.not, label %if.then43, label %if.end21.if.end46_crit_edge

if.end21.if.end46_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end46

if.then43:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #10
  %id44 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %36 = ptrtoint ptr %id44 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %id44, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then43, %if.end21.if.end46_crit_edge
  %tool47 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %37 = ptrtoint ptr %tool47 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %tool47, align 4
  %.lobit9 = lshr exact i8 %4, 5
  %39 = zext i8 %.lobit9 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef %38, i32 noundef %39) #8
  %id49 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %40 = ptrtoint ptr %id49 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %id49, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef %41) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_dtus_irq(ptr nocapture noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data1, align 1
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.237)
  switch i8 %3, label %do.body [
    i8 21, label %if.then16
    i8 17, label %if.else32
  ]

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_dtus_irq.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_dtus_irq, %if.then9)) #8
          to label %cleanup [label %if.then9], !srcloc !728

if.then9:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %parent = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %5 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent, align 8
  %7 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data1, align 1
  %conv11 = zext i8 %8 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_dtus_irq.__UNIQUE_ID_ddebug243, ptr noundef %6, ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.32, i32 noundef %conv11) #8
  br label %cleanup

if.then16:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %pad_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %9 = ptrtoint ptr %pad_input to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pad_input, align 8
  %arrayidx17 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %11 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx17, align 1
  %13 = and i8 %12, 1
  %14 = zext i8 %13 to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 256, i32 noundef %14) #8
  %15 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx17, align 1
  %17 = lshr i8 %16, 1
  %.lobit143 = and i8 %17, 1
  %18 = zext i8 %.lobit143 to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 257, i32 noundef %18) #8
  %19 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx17, align 1
  %21 = lshr i8 %20, 2
  %.lobit144 = and i8 %21, 1
  %22 = zext i8 %.lobit144 to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 258, i32 noundef %22) #8
  %23 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx17, align 1
  %25 = lshr i8 %24, 3
  %.lobit145 = and i8 %25, 1
  %26 = zext i8 %.lobit145 to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 259, i32 noundef %26) #8
  %27 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx17, align 1
  %29 = and i8 %28, 15
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool31.not = icmp eq i8 %29, 0
  %cond = select i1 %tobool31.not, i32 0, i32 15
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 40, i32 noundef %cond) #8
  br label %cleanup

if.else32:                                        ; preds = %entry
  %arrayidx33 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx33, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %31)
  %tobool37.not = icmp sgt i8 %31, -1
  br i1 %tobool37.not, label %if.else32.if.end49_crit_edge, label %if.then38

if.else32.if.end49_crit_edge:                     ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end49

if.then38:                                        ; preds = %if.else32
  %32 = lshr i8 %31, 3
  %33 = and i8 %32, 3
  %and41 = zext i8 %33 to i32
  %34 = zext i32 %and41 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.238)
  switch i32 %and41, label %if.then38.if.end49_crit_edge [
    i32 1, label %if.then38.if.end49.sink.split_crit_edge
    i32 2, label %sw.bb44
  ]

if.then38.if.end49.sink.split_crit_edge:          ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end49.sink.split

if.then38.if.end49_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end49

sw.bb44:                                          ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end49.sink.split

if.end49.sink.split:                              ; preds = %sw.bb44, %if.then38.if.end49.sink.split_crit_edge
  %.sink146 = phi i32 [ 320, %sw.bb44 ], [ 321, %if.then38.if.end49.sink.split_crit_edge ]
  %.sink = phi i32 [ 2, %sw.bb44 ], [ 10, %if.then38.if.end49.sink.split_crit_edge ]
  %tool = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %35 = ptrtoint ptr %tool to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %.sink146, ptr %tool, align 4
  %id = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %36 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %.sink, ptr %id, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end49.sink.split, %if.then38.if.end49_crit_edge, %if.else32.if.end49_crit_edge
  %37 = lshr i8 %31, 5
  %.lobit = and i8 %37, 1
  %38 = zext i8 %.lobit to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef %38) #8
  %39 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %arrayidx33, align 1
  %41 = lshr i8 %40, 6
  %.lobit141 = and i8 %41, 1
  %42 = zext i8 %.lobit141 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 332, i32 noundef %42) #8
  %arrayidx56 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %43 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_loadN_noabort(i32 %43, i32 2)
  %44 = load i16, ptr %arrayidx56, align 1
  %conv58 = zext i16 %44 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %conv58) #8
  %arrayidx59 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %45 = ptrtoint ptr %arrayidx59 to i32
  call void @__asan_loadN_noabort(i32 %45, i32 2)
  %46 = load i16, ptr %arrayidx59, align 1
  %conv61 = zext i16 %46 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %conv61) #8
  %47 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %arrayidx33, align 1
  %49 = and i8 %48, 3
  %and64 = zext i8 %49 to i32
  %shl = shl nuw nsw i32 %and64, 8
  %arrayidx65 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %50 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %arrayidx65, align 1
  %conv66 = zext i8 %51 to i32
  %or = or i32 %shl, %conv66
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef %or) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %or)
  %cmp71 = icmp ugt i32 %or, 10
  %lnot.ext.i137 = zext i1 %cmp71 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i137) #8
  br i1 %tobool37.not, label %if.then74, label %if.end49.if.end77_crit_edge

if.end49.if.end77_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end77

if.then74:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #10
  %id75 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %52 = ptrtoint ptr %id75 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 0, ptr %id75, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then74, %if.end49.if.end77_crit_edge
  %tool78 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %53 = ptrtoint ptr %tool78 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %tool78, align 4
  %.lobit142 = lshr i8 %31, 7
  %55 = zext i8 %.lobit142 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef %54, i32 noundef %55) #8
  %id81 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %56 = ptrtoint ptr %id81 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %id81, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef %57) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end77, %if.then16, %if.then9, %do.body
  %retval.0 = phi i32 [ 1, %if.then16 ], [ 1, %if.end77 ], [ 0, %if.then9 ], [ 0, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_intuos_irq(ptr noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data1, align 1
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.239)
  switch i8 %3, label %do.body [
    i8 2, label %entry.if.end42_crit_edge
    i8 5, label %entry.if.end42_crit_edge122
    i8 6, label %entry.if.end42_crit_edge123
    i8 12, label %entry.if.end42_crit_edge124
    i8 16, label %entry.if.end42_crit_edge125
    i8 17, label %entry.if.end42_crit_edge126
    i8 3, label %entry.if.end42_crit_edge127
  ]

entry.if.end42_crit_edge127:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end42

entry.if.end42_crit_edge126:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end42

entry.if.end42_crit_edge125:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end42

entry.if.end42_crit_edge124:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end42

entry.if.end42_crit_edge123:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end42

entry.if.end42_crit_edge122:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end42

entry.if.end42_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end42

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_intuos_irq.__UNIQUE_ID_ddebug250, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_intuos_irq, %if.then39)) #8
          to label %cleanup [label %if.then39], !srcloc !728

if.then39:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %parent = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 40, i32 1
  %5 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent, align 8
  %7 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %data1, align 1
  %conv41 = zext i8 %8 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_intuos_irq.__UNIQUE_ID_ddebug250, ptr noundef %6, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.34, i32 noundef %conv41) #8
  br label %cleanup

if.end42:                                         ; preds = %entry.if.end42_crit_edge, %entry.if.end42_crit_edge122, %entry.if.end42_crit_edge123, %entry.if.end42_crit_edge124, %entry.if.end42_crit_edge125, %entry.if.end42_crit_edge126, %entry.if.end42_crit_edge127
  %pad_input.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %9 = ptrtoint ptr %pad_input.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pad_input.i, align 8
  %numbered_buttons.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 8
  %11 = ptrtoint ptr %numbered_buttons.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %numbered_buttons.i, align 4
  %13 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.240)
  switch i8 %3, label %if.end46 [
    i8 12, label %if.end42.if.end.i_crit_edge
    i8 3, label %if.end42.if.end.i_crit_edge128
    i8 17, label %if.end42.if.end.i_crit_edge129
  ]

if.end42.if.end.i_crit_edge129:                   ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

if.end42.if.end.i_crit_edge128:                   ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

if.end42.if.end.i_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

if.end.i:                                         ; preds = %if.end42.if.end.i_crit_edge, %if.end42.if.end.i_crit_edge128, %if.end42.if.end.i_crit_edge129
  %type.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 5
  %14 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %type.i, align 4
  %16 = add i32 %15, -13
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %16)
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %if.then18.i, label %if.else.i

if.then18.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx19.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %18 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx19.i, align 1
  %conv20.i = zext i8 %19 to i32
  %shl.i = shl nuw nsw i32 %conv20.i, 1
  %arrayidx21.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %20 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx21.i, align 1
  %22 = and i8 %21, 1
  %and.i = zext i8 %22 to i32
  %or.i = or i32 %shl.i, %and.i
  %arrayidx23.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %23 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx23.i, align 1
  br label %if.end310.i

if.else.i:                                        ; preds = %if.end.i
  %25 = zext i32 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.241)
  switch i32 %15, label %if.else204.i [
    i32 28, label %if.then28.i
    i32 35, label %if.then35.i
    i32 29, label %if.then47.i
    i32 30, label %if.then115.i
    i32 31, label %if.then174.i
    i32 32, label %if.then186.i
  ]

if.then28.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx29.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %26 = ptrtoint ptr %arrayidx29.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx29.i, align 1
  %conv30.i = zext i8 %27 to i32
  br label %if.end310.i

if.then35.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx36.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %28 = ptrtoint ptr %arrayidx36.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx36.i, align 1
  %conv37.i = zext i8 %29 to i32
  %shl38.i = shl nuw nsw i32 %conv37.i, 1
  %arrayidx39.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %30 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx39.i, align 1
  %32 = and i8 %31, 1
  %and41.i = zext i8 %32 to i32
  %or42.i = or i32 %shl38.i, %and41.i
  br label %if.end310.i

if.then47.i:                                      ; preds = %if.else.i
  %arrayidx48.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %33 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx48.i, align 1
  %conv49.i = zext i8 %34 to i32
  %shl50.i = shl nuw nsw i32 %conv49.i, 8
  %arrayidx51.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %35 = ptrtoint ptr %arrayidx51.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx51.i, align 1
  %conv52.i = zext i8 %36 to i32
  %or53.i = or i32 %shl50.i, %conv52.i
  %arrayidx54.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %37 = ptrtoint ptr %arrayidx54.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %arrayidx54.i, align 1
  %arrayidx56.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %39 = ptrtoint ptr %arrayidx56.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %arrayidx56.i, align 1
  %arrayidx58.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %41 = ptrtoint ptr %arrayidx58.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx58.i, align 1
  %43 = and i8 %42, 28
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool.i = icmp ne i8 %43, 0
  %cond.i = select i1 %tobool.i, i32 4, i32 0
  %arrayidx61.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %44 = ptrtoint ptr %arrayidx61.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx61.i, align 1
  %conv62.i = zext i8 %45 to i32
  %and63.i = and i32 %conv62.i, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and63.i)
  %tobool64.i = icmp ne i32 %and63.i, 0
  %cond65.i = select i1 %tobool64.i, i32 2, i32 0
  %or66.i = or i32 %cond65.i, %cond.i
  %and69.i = and i32 %conv62.i, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69.i)
  %tobool70.i = icmp ne i32 %and69.i, 0
  %cond71.i = zext i1 %tobool70.i to i32
  %or72.i = or i32 %or66.i, %cond71.i
  %oPid.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 26
  %46 = ptrtoint ptr %oPid.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %oPid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool85.not.i = icmp eq i32 %47, 0
  br i1 %tobool85.not.i, label %if.then47.i.if.end310.i_crit_edge, label %if.then86.i

if.then47.i.if.end310.i_crit_edge:                ; preds = %if.then47.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end310.i

if.then86.i:                                      ; preds = %if.then47.i
  br i1 %tobool70.i, label %if.then95.i, label %if.then86.i.if.end310.i_crit_edge

if.then86.i.if.end310.i_crit_edge:                ; preds = %if.then86.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end310.i

if.then95.i:                                      ; preds = %if.then86.i
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %48 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %shared.i, align 4
  %is_touch_on.i = getelementptr inbounds %struct.wacom_shared, ptr %49, i32 0, i32 8
  %50 = ptrtoint ptr %is_touch_on.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %is_touch_on.i, align 1, !range !727
  %52 = xor i8 %51, 1
  store i8 %52, ptr %is_touch_on.i, align 1
  br label %if.end310.i

if.then115.i:                                     ; preds = %if.else.i
  %arrayidx116.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %53 = ptrtoint ptr %arrayidx116.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %arrayidx116.i, align 1
  %conv117.i = zext i8 %54 to i32
  %and118.i = and i32 %conv117.i, 7
  %and121.i = and i32 %conv117.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and121.i)
  %tobool122.i = icmp ne i32 %and121.i, 0
  %and128.i = and i32 %conv117.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and128.i)
  %tobool129.i = icmp ne i32 %and128.i, 0
  %oPid133.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 26
  %55 = ptrtoint ptr %oPid133.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %oPid133.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool134.not.i = icmp eq i32 %56, 0
  %and156.i = and i32 %conv117.i, 4
  br i1 %tobool134.not.i, label %if.else153.i, label %if.then135.i

if.then135.i:                                     ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and156.i)
  %tobool139.not.i = icmp eq i32 %and156.i, 0
  br i1 %tobool139.not.i, label %if.then135.i.if.end161.i_crit_edge, label %if.then144.i

if.then135.i.if.end161.i_crit_edge:               ; preds = %if.then135.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end161.i

if.then144.i:                                     ; preds = %if.then135.i
  call void @__sanitizer_cov_trace_pc() #10
  %shared145.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %57 = ptrtoint ptr %shared145.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %shared145.i, align 4
  %is_touch_on146.i = getelementptr inbounds %struct.wacom_shared, ptr %58, i32 0, i32 8
  %59 = ptrtoint ptr %is_touch_on146.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %is_touch_on146.i, align 1, !range !727
  %61 = xor i8 %60, 1
  store i8 %61, ptr %is_touch_on146.i, align 1
  br label %if.end161.i

if.else153.i:                                     ; preds = %if.then115.i
  call void @__sanitizer_cov_trace_pc() #10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and156.i)
  %tobool157.i = icmp ne i32 %and156.i, 0
  br label %if.end161.i

if.end161.i:                                      ; preds = %if.else153.i, %if.then144.i, %if.then135.i.if.end161.i_crit_edge
  %menu.0.i = phi i1 [ false, %if.then144.i ], [ false, %if.then135.i.if.end161.i_crit_edge ], [ %tobool157.i, %if.else153.i ]
  %arrayidx162.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %62 = ptrtoint ptr %arrayidx162.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %arrayidx162.i, align 2
  %conv163.i = zext i16 %63 to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 0, i32 noundef %conv163.i) #8
  %arrayidx164.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %64 = ptrtoint ptr %arrayidx164.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %arrayidx164.i, align 2
  %conv166.i = zext i16 %65 to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 1, i32 noundef %conv166.i) #8
  %arrayidx167.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %66 = ptrtoint ptr %arrayidx167.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %arrayidx167.i, align 2
  %conv169.i = zext i16 %67 to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 2, i32 noundef %conv169.i) #8
  br label %if.end310.i

if.then174.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx175.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %68 = ptrtoint ptr %arrayidx175.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %arrayidx175.i, align 1
  %conv176.i = zext i8 %69 to i32
  %shl177.i = shl nuw nsw i32 %conv176.i, 1
  %arrayidx178.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %70 = ptrtoint ptr %arrayidx178.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %arrayidx178.i, align 1
  %72 = and i8 %71, 1
  %and180.i = zext i8 %72 to i32
  %or181.i = or i32 %shl177.i, %and180.i
  br label %if.end310.i

if.then186.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx187.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %73 = ptrtoint ptr %arrayidx187.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %arrayidx187.i, align 1
  %conv188.i = zext i8 %74 to i32
  %75 = shl nuw nsw i32 %conv188.i, 3
  %shl189.i = and i32 %75, 1920
  %arrayidx190.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %76 = ptrtoint ptr %arrayidx190.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %arrayidx190.i, align 1
  %conv191.i = zext i8 %77 to i32
  %and192.i = shl nuw nsw i32 %conv191.i, 4
  %shl193.i = and i32 %and192.i, 64
  %and197.i = shl nuw nsw i32 %conv188.i, 2
  %shl198.i = and i32 %and197.i, 60
  %and202.i = and i32 %conv191.i, 3
  %or194.i = or i32 %shl198.i, %shl189.i
  %or199.i = or i32 %or194.i, %and202.i
  %or203.i = or i32 %or199.i, %shl193.i
  br label %if.end310.i

if.else204.i:                                     ; preds = %if.else.i
  %78 = add i32 %15, -17
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %78)
  %79 = icmp ult i32 %78, 6
  br i1 %79, label %if.then212.i, label %if.else222.i

if.then212.i:                                     ; preds = %if.else204.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx213.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %80 = ptrtoint ptr %arrayidx213.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %arrayidx213.i, align 1
  %conv214.i = zext i8 %81 to i32
  %shl215.i = shl nuw nsw i32 %conv214.i, 1
  %arrayidx216.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %82 = ptrtoint ptr %arrayidx216.i to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %arrayidx216.i, align 1
  %84 = and i8 %83, 1
  %and218.i = zext i8 %84 to i32
  %or219.i = or i32 %shl215.i, %and218.i
  %arrayidx220.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %85 = ptrtoint ptr %arrayidx220.i to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %arrayidx220.i, align 1
  br label %if.end310.i

if.else222.i:                                     ; preds = %if.else204.i
  %87 = and i32 %15, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %87)
  %switch.i = icmp eq i32 %87, 26
  br i1 %switch.i, label %if.then230.i, label %if.else269.i

if.then230.i:                                     ; preds = %if.else222.i
  %arrayidx231.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %88 = ptrtoint ptr %arrayidx231.i to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %arrayidx231.i, align 1
  %conv232.i = zext i8 %89 to i32
  %shl233.i = shl nuw nsw i32 %conv232.i, 10
  %arrayidx234.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %90 = ptrtoint ptr %arrayidx234.i to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %arrayidx234.i, align 1
  %92 = and i8 %91, 1
  %and236.i = zext i8 %92 to i32
  %shl237.i = shl nuw nsw i32 %and236.i, 9
  %or238.i = or i32 %shl237.i, %shl233.i
  %arrayidx239.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %93 = ptrtoint ptr %arrayidx239.i to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load i8, ptr %arrayidx239.i, align 1
  %conv240.i = zext i8 %94 to i32
  %shl241.i = shl nuw nsw i32 %conv240.i, 1
  %or242.i = or i32 %or238.i, %shl241.i
  %arrayidx243.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %95 = ptrtoint ptr %arrayidx243.i to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %arrayidx243.i, align 1
  %97 = and i8 %96, 1
  %and245.i = zext i8 %97 to i32
  %or246.i = or i32 %or242.i, %and245.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %15)
  %cmp248.i = icmp eq i32 %15, 27
  br i1 %cmp248.i, label %if.then250.i, label %if.then230.i.if.end288.i_crit_edge

if.then230.i.if.end288.i_crit_edge:               ; preds = %if.then230.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end288.i

if.then250.i:                                     ; preds = %if.then230.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx251.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 9
  %98 = ptrtoint ptr %arrayidx251.i to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %arrayidx251.i, align 1
  %conv252.i = zext i8 %99 to i32
  %and253.i = and i32 %conv252.i, 7
  %and256.i = and i32 %conv252.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and256.i)
  %tobool257.i = icmp ne i32 %and256.i, 0
  %and263.i = and i32 %conv252.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and263.i)
  %tobool264.i = icmp ne i32 %and263.i, 0
  br label %if.end288.i

if.else269.i:                                     ; preds = %if.else222.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx270.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %100 = ptrtoint ptr %arrayidx270.i to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %arrayidx270.i, align 1
  %conv271.i = zext i8 %101 to i32
  %and272.i = shl nuw nsw i32 %conv271.i, 5
  %shl273.i = and i32 %and272.i, 512
  %arrayidx274.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %102 = ptrtoint ptr %arrayidx274.i to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %arrayidx274.i, align 1
  %conv275.i = zext i8 %103 to i32
  %and276.i = shl nuw nsw i32 %conv275.i, 4
  %shl277.i = and i32 %and276.i, 256
  %and281.i = shl nuw nsw i32 %conv271.i, 4
  %shl282.i = and i32 %and281.i, 240
  %and286.i = and i32 %conv275.i, 15
  %or278.i = or i32 %shl282.i, %shl273.i
  %or283.i = or i32 %or278.i, %and286.i
  %or287.i = or i32 %or283.i, %shl277.i
  br label %if.end288.i

if.end288.i:                                      ; preds = %if.else269.i, %if.then250.i, %if.then230.i.if.end288.i_crit_edge
  %buttons.0.i = phi i32 [ %or246.i, %if.then250.i ], [ %or246.i, %if.then230.i.if.end288.i_crit_edge ], [ %or287.i, %if.else269.i ]
  %keys.0.i = phi i32 [ %and253.i, %if.then250.i ], [ 0, %if.then230.i.if.end288.i_crit_edge ], [ 0, %if.else269.i ]
  %nkeys.0.i = phi i32 [ 3, %if.then250.i ], [ 0, %if.then230.i.if.end288.i_crit_edge ], [ 0, %if.else269.i ]
  %wrench.0.off0.i = phi i1 [ %tobool264.i, %if.then250.i ], [ false, %if.then230.i.if.end288.i_crit_edge ], [ false, %if.else269.i ]
  %info.0.off0.i = phi i1 [ %tobool257.i, %if.then250.i ], [ false, %if.then230.i.if.end288.i_crit_edge ], [ false, %if.else269.i ]
  %arrayidx289.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %104 = ptrtoint ptr %arrayidx289.i to i32
  call void @__asan_load1_noabort(i32 %104)
  %105 = load i8, ptr %arrayidx289.i, align 1
  %106 = and i8 %105, 31
  %and291.i = zext i8 %106 to i32
  %shl292.i = shl nuw nsw i32 %and291.i, 8
  %arrayidx293.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %107 = ptrtoint ptr %arrayidx293.i to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %arrayidx293.i, align 1
  %conv294.i = zext i8 %108 to i32
  %or295.i = or i32 %shl292.i, %conv294.i
  %arrayidx296.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %109 = ptrtoint ptr %arrayidx296.i to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %arrayidx296.i, align 1
  %111 = and i8 %110, 31
  %and298.i = zext i8 %111 to i32
  %shl299.i = shl nuw nsw i32 %and298.i, 8
  %arrayidx300.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %112 = ptrtoint ptr %arrayidx300.i to i32
  call void @__asan_load1_noabort(i32 %112)
  %113 = load i8, ptr %arrayidx300.i, align 1
  %conv301.i = zext i8 %113 to i32
  %or302.i = or i32 %shl299.i, %conv301.i
  br label %if.end310.i

if.end310.i:                                      ; preds = %if.end288.i, %if.then212.i, %if.then186.i, %if.then174.i, %if.end161.i, %if.then95.i, %if.then86.i.if.end310.i_crit_edge, %if.then47.i.if.end310.i_crit_edge, %if.then35.i, %if.then28.i, %if.then18.i
  %buttons.1.i = phi i32 [ %or.i, %if.then18.i ], [ %conv30.i, %if.then28.i ], [ %or42.i, %if.then35.i ], [ %or53.i, %if.then95.i ], [ %or53.i, %if.then86.i.if.end310.i_crit_edge ], [ 0, %if.end161.i ], [ %or181.i, %if.then174.i ], [ %or203.i, %if.then186.i ], [ %or219.i, %if.then212.i ], [ %buttons.0.i, %if.end288.i ], [ %or53.i, %if.then47.i.if.end310.i_crit_edge ]
  %keys.1.i = phi i32 [ 0, %if.then18.i ], [ 0, %if.then28.i ], [ 0, %if.then35.i ], [ %or72.i, %if.then95.i ], [ %or72.i, %if.then86.i.if.end310.i_crit_edge ], [ %and118.i, %if.end161.i ], [ 0, %if.then174.i ], [ 0, %if.then186.i ], [ 0, %if.then212.i ], [ %keys.0.i, %if.end288.i ], [ %or72.i, %if.then47.i.if.end310.i_crit_edge ]
  %nkeys.1.i = phi i32 [ 0, %if.then18.i ], [ 0, %if.then28.i ], [ 0, %if.then35.i ], [ 3, %if.then95.i ], [ 3, %if.then86.i.if.end310.i_crit_edge ], [ 3, %if.end161.i ], [ 0, %if.then174.i ], [ 0, %if.then186.i ], [ 0, %if.then212.i ], [ %nkeys.0.i, %if.end288.i ], [ 3, %if.then47.i.if.end310.i_crit_edge ]
  %ring1.0.shrunk.i = phi i8 [ %24, %if.then18.i ], [ 0, %if.then28.i ], [ 0, %if.then35.i ], [ %38, %if.then95.i ], [ %38, %if.then86.i.if.end310.i_crit_edge ], [ 0, %if.end161.i ], [ 0, %if.then174.i ], [ 0, %if.then186.i ], [ %86, %if.then212.i ], [ 0, %if.end288.i ], [ %38, %if.then47.i.if.end310.i_crit_edge ]
  %ring2.0.shrunk.i = phi i8 [ 0, %if.then18.i ], [ 0, %if.then28.i ], [ 0, %if.then35.i ], [ %40, %if.then95.i ], [ %40, %if.then86.i.if.end310.i_crit_edge ], [ 0, %if.end161.i ], [ 0, %if.then174.i ], [ 0, %if.then186.i ], [ 0, %if.then212.i ], [ 0, %if.end288.i ], [ %40, %if.then47.i.if.end310.i_crit_edge ]
  %strip1.0.i = phi i32 [ 0, %if.then18.i ], [ 0, %if.then28.i ], [ 0, %if.then35.i ], [ 0, %if.then95.i ], [ 0, %if.then86.i.if.end310.i_crit_edge ], [ 0, %if.end161.i ], [ 0, %if.then174.i ], [ 0, %if.then186.i ], [ 0, %if.then212.i ], [ %or295.i, %if.end288.i ], [ 0, %if.then47.i.if.end310.i_crit_edge ]
  %strip2.0.i = phi i32 [ 0, %if.then18.i ], [ 0, %if.then28.i ], [ 0, %if.then35.i ], [ 0, %if.then95.i ], [ 0, %if.then86.i.if.end310.i_crit_edge ], [ 0, %if.end161.i ], [ 0, %if.then174.i ], [ 0, %if.then186.i ], [ 0, %if.then212.i ], [ %or302.i, %if.end288.i ], [ 0, %if.then47.i.if.end310.i_crit_edge ]
  %wrench.1.off0.i = phi i1 [ false, %if.then18.i ], [ false, %if.then28.i ], [ false, %if.then35.i ], [ false, %if.then95.i ], [ false, %if.then86.i.if.end310.i_crit_edge ], [ %tobool122.i, %if.end161.i ], [ false, %if.then174.i ], [ false, %if.then186.i ], [ false, %if.then212.i ], [ %wrench.0.off0.i, %if.end288.i ], [ %tobool70.i, %if.then47.i.if.end310.i_crit_edge ]
  %keyboard.0.shrunk.i = phi i1 [ false, %if.then18.i ], [ false, %if.then28.i ], [ false, %if.then35.i ], [ %tobool64.i, %if.then95.i ], [ %tobool64.i, %if.then86.i.if.end310.i_crit_edge ], [ %tobool129.i, %if.end161.i ], [ false, %if.then174.i ], [ false, %if.then186.i ], [ false, %if.then212.i ], [ false, %if.end288.i ], [ %tobool64.i, %if.then47.i.if.end310.i_crit_edge ]
  %menu.1.off0.i = phi i1 [ false, %if.then18.i ], [ false, %if.then28.i ], [ false, %if.then35.i ], [ false, %if.then95.i ], [ false, %if.then86.i.if.end310.i_crit_edge ], [ %menu.0.i, %if.end161.i ], [ false, %if.then174.i ], [ false, %if.then186.i ], [ false, %if.then212.i ], [ false, %if.end288.i ], [ false, %if.then47.i.if.end310.i_crit_edge ]
  %info.1.off0.i = phi i1 [ false, %if.then18.i ], [ false, %if.then28.i ], [ false, %if.then35.i ], [ %tobool.i, %if.then95.i ], [ %tobool.i, %if.then86.i.if.end310.i_crit_edge ], [ false, %if.end161.i ], [ false, %if.then174.i ], [ false, %if.then186.i ], [ false, %if.then212.i ], [ %info.0.off0.i, %if.end288.i ], [ %tobool.i, %if.then47.i.if.end310.i_crit_edge ]
  %ring2.0.i = zext i8 %ring2.0.shrunk.i to i32
  %ring1.0.i = zext i8 %ring1.0.shrunk.i to i32
  %shl311.i = shl nsw i32 -1, %12
  %neg.i = xor i32 %shl311.i, -1
  %and312.i = and i32 %buttons.1.i, %neg.i
  %shl313.i = shl nsw i32 -1, %nkeys.1.i
  %neg314.i = xor i32 %shl313.i, -1
  %and315.i = and i32 %keys.1.i, %neg314.i
  %or316.i = or i32 %and315.i, %and312.i
  %and317.i = and i32 %ring1.0.i, 128
  %or318.i = or i32 %or316.i, %and317.i
  %and319.i = and i32 %ring2.0.i, 128
  %or320.i = or i32 %or318.i, %strip1.0.i
  %or321.i = or i32 %or320.i, %and319.i
  %or322.i = or i32 %or321.i, %strip2.0.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or322.i)
  %tobool323.not.i = icmp eq i32 %or322.i, 0
  %driver_data.i.i.i.i = getelementptr inbounds %struct.input_dev, ptr %10, i32 0, i32 40, i32 8
  %114 = ptrtoint ptr %driver_data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %driver_data.i.i.i.i, align 4
  %count.i.i = getelementptr inbounds %struct.wacom, ptr %115, i32 0, i32 12, i32 1
  %116 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %117)
  %cmp25.not.i.i = icmp eq i32 %117, 0
  br i1 %cmp25.not.i.i, label %if.end310.i.for.cond1.preheader.i.i_crit_edge, label %if.end310.i.for.body.i.i_crit_edge

if.end310.i.for.body.i.i_crit_edge:               ; preds = %if.end310.i
  br label %for.body.i.i

if.end310.i.for.cond1.preheader.i.i_crit_edge:    ; preds = %if.end310.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.cond1.preheader.i.i

for.cond1.preheader.i.i:                          ; preds = %for.body.i.i.for.cond1.preheader.i.i_crit_edge, %if.end310.i.for.cond1.preheader.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp227.i.i = icmp sgt i32 %12, 0
  br i1 %cmp227.i.i, label %for.cond1.preheader.i.i.for.body3.i.i_crit_edge, label %for.cond1.preheader.i.i.wacom_report_numbered_buttons.exit.i_crit_edge

for.cond1.preheader.i.i.wacom_report_numbered_buttons.exit.i_crit_edge: ; preds = %for.cond1.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_report_numbered_buttons.exit.i

for.cond1.preheader.i.i.for.body3.i.i_crit_edge:  ; preds = %for.cond1.preheader.i.i
  br label %for.body3.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.end310.i.for.body.i.i_crit_edge
  %i.026.i.i = phi i32 [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %if.end310.i.for.body.i.i_crit_edge ]
  tail call fastcc void @wacom_update_led(ptr noundef %115, i32 noundef %12, i32 noundef %buttons.1.i, i32 noundef %i.026.i.i) #8
  %inc.i.i = add nuw i32 %i.026.i.i, 1
  %118 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %count.i.i, align 4
  %cmp.i.i = icmp ult i32 %inc.i.i, %119
  br i1 %cmp.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %for.body.i.i.for.cond1.preheader.i.i_crit_edge

for.body.i.i.for.cond1.preheader.i.i_crit_edge:   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.cond1.preheader.i.i

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i

for.body3.i.i:                                    ; preds = %if.end.i.i.for.body3.i.i_crit_edge, %for.cond1.preheader.i.i.for.body3.i.i_crit_edge
  %i.128.i.i = phi i32 [ %inc6.i.i, %if.end.i.i.for.body3.i.i_crit_edge ], [ 0, %for.cond1.preheader.i.i.for.body3.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %i.128.i.i)
  %cmp.i.i.i = icmp ult i32 %i.128.i.i, 10
  br i1 %cmp.i.i.i, label %wacom_numbered_button_to_key.exit.i.i, label %if.else.i.i.i

if.else.i.i.i:                                    ; preds = %for.body3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %i.128.i.i)
  %cmp1.i.i.i = icmp ult i32 %i.128.i.i, 16
  br i1 %cmp1.i.i.i, label %if.then2.i.i.i, label %if.else4.i.i.i

if.then2.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %add3.i.i.i = add nuw nsw i32 %i.128.i.i, 294
  br label %if.then.i.i

if.else4.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %i.128.i.i)
  %cmp5.i.i.i = icmp ult i32 %i.128.i.i, 18
  %add8.i.i.i = add nuw i32 %i.128.i.i, 278
  br i1 %cmp5.i.i.i, label %if.else4.i.i.i.if.then.i.i_crit_edge, label %if.else4.i.i.i.if.end.i.i_crit_edge

if.else4.i.i.i.if.end.i.i_crit_edge:              ; preds = %if.else4.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i.i

if.else4.i.i.i.if.then.i.i_crit_edge:             ; preds = %if.else4.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

wacom_numbered_button_to_key.exit.i.i:            ; preds = %for.body3.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %add.i.i.i = add nuw nsw i32 %i.128.i.i, 256
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %wacom_numbered_button_to_key.exit.i.i, %if.else4.i.i.i.if.then.i.i_crit_edge, %if.then2.i.i.i
  %retval.0.i21.i.i = phi i32 [ %add.i.i.i, %wacom_numbered_button_to_key.exit.i.i ], [ %add3.i.i.i, %if.then2.i.i.i ], [ %add8.i.i.i, %if.else4.i.i.i.if.then.i.i_crit_edge ]
  %120 = lshr i32 %buttons.1.i, %i.128.i.i
  %121 = and i32 %120, 1
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef %retval.0.i21.i.i, i32 noundef %121) #8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.else4.i.i.i.if.end.i.i_crit_edge
  %inc6.i.i = add nuw nsw i32 %i.128.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc6.i.i, %12
  br i1 %exitcond.not.i.i, label %if.end.i.i.wacom_report_numbered_buttons.exit.i_crit_edge, label %if.end.i.i.for.body3.i.i_crit_edge

if.end.i.i.for.body3.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body3.i.i

if.end.i.i.wacom_report_numbered_buttons.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_report_numbered_buttons.exit.i

wacom_report_numbered_buttons.exit.i:             ; preds = %if.end.i.i.wacom_report_numbered_buttons.exit.i_crit_edge, %for.cond1.preheader.i.i.wacom_report_numbered_buttons.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nkeys.1.i)
  %cmp325514.i = icmp sgt i32 %nkeys.1.i, 0
  br i1 %cmp325514.i, label %for.body.i, label %wacom_report_numbered_buttons.exit.i.for.end.i_crit_edge

wacom_report_numbered_buttons.exit.i.for.end.i_crit_edge: ; preds = %wacom_report_numbered_buttons.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.body.i:                                       ; preds = %wacom_report_numbered_buttons.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  %122 = and i32 %keys.1.i, 1
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 148, i32 noundef %122) #8
  %123 = lshr i32 %keys.1.i, 1
  %124 = and i32 %123, 1
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 149, i32 noundef %124) #8
  %125 = lshr i32 %keys.1.i, 2
  %126 = and i32 %125, 1
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 150, i32 noundef %126) #8
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %wacom_report_numbered_buttons.exit.i.for.end.i_crit_edge
  %lnot.ext.i507.i = zext i1 %wrench.1.off0.i to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 576, i32 noundef %lnot.ext.i507.i) #8
  %lnot.ext.i508.i = zext i1 %keyboard.0.shrunk.i to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 632, i32 noundef %lnot.ext.i508.i) #8
  %lnot.ext.i509.i = zext i1 %menu.1.off0.i to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 579, i32 noundef %lnot.ext.i509.i) #8
  %lnot.ext.i510.i = zext i1 %info.1.off0.i to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef 358, i32 noundef %lnot.ext.i510.i) #8
  %shared337.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %127 = ptrtoint ptr %shared337.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %shared337.i, align 4
  %tobool338.not.i = icmp eq ptr %128, null
  br i1 %tobool338.not.i, label %for.end.i.wacom_intuos_pad.exit_crit_edge, label %land.lhs.true339.i

for.end.i.wacom_intuos_pad.exit_crit_edge:        ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_pad.exit

land.lhs.true339.i:                               ; preds = %for.end.i
  %touch_input.i = getelementptr inbounds %struct.wacom_shared, ptr %128, i32 0, i32 4
  %129 = ptrtoint ptr %touch_input.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %touch_input.i, align 4
  %tobool341.not.i = icmp eq ptr %130, null
  br i1 %tobool341.not.i, label %land.lhs.true339.i.wacom_intuos_pad.exit_crit_edge, label %if.then342.i

land.lhs.true339.i.wacom_intuos_pad.exit_crit_edge: ; preds = %land.lhs.true339.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_pad.exit

if.then342.i:                                     ; preds = %land.lhs.true339.i
  call void @__sanitizer_cov_trace_pc() #10
  %is_touch_on346.i = getelementptr inbounds %struct.wacom_shared, ptr %128, i32 0, i32 8
  %131 = ptrtoint ptr %is_touch_on346.i to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %is_touch_on346.i, align 1, !range !727
  %133 = xor i8 %132, 1
  %134 = zext i8 %133 to i32
  tail call void @input_event(ptr noundef nonnull %130, i32 noundef 5, i32 noundef 14, i32 noundef %134) #8
  %135 = ptrtoint ptr %shared337.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %shared337.i, align 4
  %touch_input350.i = getelementptr inbounds %struct.wacom_shared, ptr %136, i32 0, i32 4
  %137 = ptrtoint ptr %touch_input350.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %touch_input350.i, align 4
  tail call void @input_event(ptr noundef %138, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %wacom_intuos_pad.exit

wacom_intuos_pad.exit:                            ; preds = %if.then342.i, %land.lhs.true339.i.wacom_intuos_pad.exit_crit_edge, %for.end.i.wacom_intuos_pad.exit_crit_edge
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 3, i32 noundef %strip1.0.i) #8
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 4, i32 noundef %strip2.0.i) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and317.i)
  %tobool353.not.i = icmp eq i32 %and317.i, 0
  %and354.i = and i32 %ring1.0.i, 127
  %spec.select.i = select i1 %tobool353.not.i, i32 0, i32 %and354.i
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 8, i32 noundef %spec.select.i) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and319.i)
  %tobool357.not.i = icmp eq i32 %and319.i, 0
  %and359.i = and i32 %ring2.0.i, 127
  %cond362.i = select i1 %tobool357.not.i, i32 0, i32 %and359.i
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 6, i32 noundef %cond362.i) #8
  %arrayidx363.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 5, i32 1
  %139 = ptrtoint ptr %arrayidx363.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %arrayidx363.i, align 4
  %not.tobool323.not.i = xor i1 %tobool323.not.i, true
  %lnot.ext.i513.i = zext i1 %not.tobool323.not.i to i32
  tail call void @input_event(ptr noundef %10, i32 noundef 1, i32 noundef %140, i32 noundef %lnot.ext.i513.i) #8
  %cond369.i = select i1 %tobool323.not.i, i32 0, i32 15
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 40, i32 noundef %cond369.i) #8
  tail call void @input_event(ptr noundef %10, i32 noundef 4, i32 noundef 0, i32 noundef -1) #8
  br label %cleanup

if.end46:                                         ; preds = %if.end42
  %141 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %pen_input, align 8
  %type.i76 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 5
  %143 = ptrtoint ptr %type.i76 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %type.i76, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %144)
  %cmp.i = icmp eq i32 %144, 9
  br i1 %cmp.i, label %cond.true.i, label %if.end46.cond.end.i_crit_edge

if.end46.cond.end.i_crit_edge:                    ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end.i

cond.true.i:                                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %145 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %145)
  %146 = load i8, ptr %arrayidx.i, align 1
  %147 = and i8 %146, 1
  %and.i77 = zext i8 %147 to i32
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.end46.cond.end.i_crit_edge
  %cond.i78 = phi i32 [ %and.i77, %cond.true.i ], [ 0, %if.end46.cond.end.i_crit_edge ]
  %arrayidx3.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %148 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %148)
  %149 = load i8, ptr %arrayidx3.i, align 1
  %150 = and i8 %149, -4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -64, i8 %150)
  %cmp6.i = icmp eq i8 %150, -64
  br i1 %cmp6.i, label %if.then24.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %cond.end.i
  %and10.i = and i8 %149, -2
  %151 = zext i8 %and10.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %151, ptr @__sancov_gen_cov_switch_values.242)
  switch i8 %and10.i, label %if.end50 [
    i8 32, label %if.then70.i
    i8 -128, label %if.then87.i
  ]

if.then24.i:                                      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx25.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %152 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_load1_noabort(i32 %152)
  %153 = load i8, ptr %arrayidx25.i, align 1
  %and27.i = zext i8 %153 to i32
  %shl.i79 = shl i32 %and27.i, 28
  %arrayidx28.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %154 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_load1_noabort(i32 %154)
  %155 = load i8, ptr %arrayidx28.i, align 1
  %conv29.i = zext i8 %155 to i32
  %shl30.i = shl nuw nsw i32 %conv29.i, 20
  %add.i80 = or i32 %shl30.i, %shl.i79
  %arrayidx31.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %156 = ptrtoint ptr %arrayidx31.i to i32
  call void @__asan_load1_noabort(i32 %156)
  %157 = load i8, ptr %arrayidx31.i, align 1
  %conv32.i = zext i8 %157 to i32
  %shl33.i = shl nuw nsw i32 %conv32.i, 12
  %add34.i = or i32 %add.i80, %shl33.i
  %arrayidx35.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %158 = ptrtoint ptr %arrayidx35.i to i32
  call void @__asan_load1_noabort(i32 %158)
  %159 = load i8, ptr %arrayidx35.i, align 1
  %conv36.i = zext i8 %159 to i32
  %shl37.i = shl nuw nsw i32 %conv36.i, 4
  %add38.i = or i32 %add34.i, %shl37.i
  %arrayidx39.i81 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %160 = ptrtoint ptr %arrayidx39.i81 to i32
  call void @__asan_load1_noabort(i32 %160)
  %161 = load i8, ptr %arrayidx39.i81, align 1
  %162 = lshr i8 %161, 4
  %163 = zext i8 %162 to i32
  %add41.i = or i32 %add38.i, %163
  %conv42.i = sext i32 %add41.i to i64
  %arrayidx43.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 7, i32 %cond.i78
  %164 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_store8_noabort(i32 %164)
  store i64 %conv42.i, ptr %arrayidx43.i, align 8
  %arrayidx44.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %165 = ptrtoint ptr %arrayidx44.i to i32
  call void @__asan_load1_noabort(i32 %165)
  %166 = load i8, ptr %arrayidx44.i, align 1
  %conv45.i = zext i8 %166 to i32
  %shl46.i = shl nuw nsw i32 %conv45.i, 4
  %167 = lshr i8 %153, 4
  %168 = zext i8 %167 to i32
  %or.i82 = or i32 %shl46.i, %168
  %169 = and i8 %161, 15
  %and52.i = zext i8 %169 to i32
  %shl53.i = shl nuw nsw i32 %and52.i, 16
  %or54.i = or i32 %or.i82, %shl53.i
  %arrayidx55.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %170 = ptrtoint ptr %arrayidx55.i to i32
  call void @__asan_load1_noabort(i32 %170)
  %171 = load i8, ptr %arrayidx55.i, align 1
  %172 = and i8 %171, -16
  %and57.i = zext i8 %172 to i32
  %shl58.i = shl nuw nsw i32 %and57.i, 8
  %or59.i = or i32 %or54.i, %shl58.i
  %arrayidx60.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 %cond.i78
  %173 = ptrtoint ptr %arrayidx60.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 %or59.i, ptr %arrayidx60.i, align 4
  %call.i = tail call fastcc i32 @wacom_intuos_get_tool_type(i32 noundef %or59.i) #8
  %arrayidx63.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 5, i32 %cond.i78
  %174 = ptrtoint ptr %arrayidx63.i to i32
  call void @__asan_store4_noabort(i32 %174)
  store i32 %call.i, ptr %arrayidx63.i, align 4
  %shared.i83 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %175 = ptrtoint ptr %shared.i83 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %shared.i83, align 4
  %177 = ptrtoint ptr %176 to i32
  call void @__asan_store1_noabort(i32 %177)
  store i8 1, ptr %176, align 4
  br label %cleanup

if.then70.i:                                      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %144)
  %cmp72.not.i = icmp eq i32 %144, 39
  br i1 %cmp72.not.i, label %if.then70.i.if.end77.i_crit_edge, label %if.then74.i

if.then70.i.if.end77.i_crit_edge:                 ; preds = %if.then70.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end77.i

if.then74.i:                                      ; preds = %if.then70.i
  call void @__sanitizer_cov_trace_pc() #10
  %shared75.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %178 = ptrtoint ptr %shared75.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %shared75.i, align 4
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_store1_noabort(i32 %180)
  store i8 1, ptr %179, align 4
  br label %if.end77.i

if.end77.i:                                       ; preds = %if.then74.i, %if.then70.i.if.end77.i_crit_edge
  %reporting_data.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 9
  %181 = ptrtoint ptr %reporting_data.i to i32
  call void @__asan_load1_noabort(i32 %181)
  %182 = load i8, ptr %reporting_data.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %182)
  %tobool.not.i = icmp eq i8 %182, 0
  br i1 %tobool.not.i, label %if.end77.i.cleanup_crit_edge, label %if.then78.i

if.end77.i.cleanup_crit_edge:                     ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then78.i:                                      ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %142, i32 noundef 1, i32 noundef 330, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %142, i32 noundef 3, i32 noundef 24, i32 noundef 0) #8
  %distance_max.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 4
  %183 = ptrtoint ptr %distance_max.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %distance_max.i, align 4
  tail call void @input_event(ptr noundef %142, i32 noundef 3, i32 noundef 25, i32 noundef %184) #8
  br label %cleanup

if.then87.i:                                      ; preds = %lor.lhs.false.i
  %shared88.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %185 = ptrtoint ptr %shared88.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %shared88.i, align 4
  %187 = ptrtoint ptr %186 to i32
  call void @__asan_store1_noabort(i32 %187)
  store i8 0, ptr %186, align 4
  %reporting_data90.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 9
  %188 = ptrtoint ptr %reporting_data90.i to i32
  call void @__asan_store1_noabort(i32 %188)
  store i8 0, ptr %reporting_data90.i, align 1
  %arrayidx92.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 %cond.i78
  %189 = ptrtoint ptr %arrayidx92.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %arrayidx92.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %190)
  %tobool93.not.i = icmp eq i32 %190, 0
  br i1 %tobool93.not.i, label %if.then87.i.cleanup_crit_edge, label %if.end95.i

if.then87.i.cleanup_crit_edge:                    ; preds = %if.then87.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end95.i:                                       ; preds = %if.then87.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call fastcc void @wacom_exit_report(ptr noundef %wacom) #8
  br label %cleanup

if.end50:                                         ; preds = %lor.lhs.false.i
  %191 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %pen_input, align 8
  %193 = ptrtoint ptr %type.i76 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %type.i76, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %194)
  %cmp.i88 = icmp eq i32 %194, 9
  br i1 %cmp.i88, label %cond.true.i91, label %if.end50.cond.end.i93_crit_edge

if.end50.cond.end.i93_crit_edge:                  ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end.i93

cond.true.i91:                                    ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #10
  %195 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %195)
  %196 = load i8, ptr %arrayidx3.i, align 1
  %197 = and i8 %196, 1
  %and.i90 = zext i8 %197 to i32
  br label %cond.end.i93

cond.end.i93:                                     ; preds = %cond.true.i91, %if.end50.cond.end.i93_crit_edge
  %cond.i92 = phi i32 [ %and.i90, %cond.true.i91 ], [ 0, %if.end50.cond.end.i93_crit_edge ]
  %198 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %198)
  %199 = load i8, ptr %arrayidx3.i, align 1
  %200 = lshr i8 %199, 1
  %201 = and i8 %200, 15
  %202 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %202)
  %203 = load i8, ptr %data1, align 1
  %204 = zext i8 %203 to i64
  call void @__sanitizer_cov_trace_switch(i64 %204, ptr @__sancov_gen_cov_switch_values.243)
  switch i8 %203, label %cond.end.i93.cleanup_crit_edge [
    i8 2, label %cond.end.i93.if.end.i94_crit_edge
    i8 16, label %cond.end.i93.if.end.i94_crit_edge130
  ]

cond.end.i93.if.end.i94_crit_edge130:             ; preds = %cond.end.i93
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i94

cond.end.i93.if.end.i94_crit_edge:                ; preds = %cond.end.i93
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i94

cond.end.i93.cleanup_crit_edge:                   ; preds = %cond.end.i93
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end.i94:                                       ; preds = %cond.end.i93.if.end.i94_crit_edge, %cond.end.i93.if.end.i94_crit_edge130
  %shared.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %205 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %shared.i.i, align 4
  %touch_down.i.i = getelementptr inbounds %struct.wacom_shared, ptr %206, i32 0, i32 1
  %207 = ptrtoint ptr %touch_down.i.i to i32
  call void @__asan_load1_noabort(i32 %207)
  %208 = load i8, ptr %touch_down.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %208)
  %tobool.not.i.i = icmp eq i8 %208, 0
  br i1 %tobool.not.i.i, label %if.end.i94.if.end22.i_crit_edge, label %delay_pen_events.exit.i

if.end.i94.if.end22.i_crit_edge:                  ; preds = %if.end.i94
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end22.i

delay_pen_events.exit.i:                          ; preds = %if.end.i94
  %209 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %209)
  %tobool1.i.not.i = icmp eq i8 %209, 0
  br i1 %tobool1.i.not.i, label %delay_pen_events.exit.i.if.end22.i_crit_edge, label %delay_pen_events.exit.i.cleanup_crit_edge

delay_pen_events.exit.i.cleanup_crit_edge:        ; preds = %delay_pen_events.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

delay_pen_events.exit.i.if.end22.i_crit_edge:     ; preds = %delay_pen_events.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end22.i

if.end22.i:                                       ; preds = %delay_pen_events.exit.i.if.end22.i_crit_edge, %if.end.i94.if.end22.i_crit_edge
  %arrayidx23.i95 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 %cond.i92
  %210 = ptrtoint ptr %arrayidx23.i95 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %arrayidx23.i95, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %211)
  %tobool.not.i96 = icmp eq i32 %211, 0
  br i1 %tobool.not.i96, label %if.then24.i98, label %if.end25.i

if.then24.i98:                                    ; preds = %if.end22.i
  %hdev.i.i = getelementptr i8, ptr %wacom, i32 912
  %212 = ptrtoint ptr %hdev.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %hdev.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %194)
  %cmp.i.i97 = icmp eq i32 %194, 39
  %arrayidx2.i.i = getelementptr %struct.hid_device, ptr %213, i32 0, i32 15, i32 2, i32 2, i32 8
  %arrayidx4.i.i = getelementptr %struct.hid_device, ptr %213, i32 0, i32 15, i32 2, i32 2, i32 5
  %r.0.in.i.i = select i1 %cmp.i.i97, ptr %arrayidx2.i.i, ptr %arrayidx4.i.i
  %214 = ptrtoint ptr %r.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %r.0.i.i = load ptr, ptr %r.0.in.i.i, align 4
  %tobool.not.i542.i = icmp eq ptr %r.0.i.i, null
  br i1 %tobool.not.i542.i, label %if.then24.i98.cleanup_crit_edge, label %if.then5.i.i

if.then24.i98.cleanup_crit_edge:                  ; preds = %if.then24.i98
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then5.i.i:                                     ; preds = %if.then24.i98
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @hid_hw_request(ptr noundef %213, ptr noundef nonnull %r.0.i.i, i32 noundef 1) #8
  br label %cleanup

if.end25.i:                                       ; preds = %if.end22.i
  %215 = and i32 %211, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %215)
  %tobool30.not.i = icmp eq i32 %215, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %194)
  %cmp33.i = icmp eq i32 %194, 26
  %or.cond586.i = select i1 %tobool30.not.i, i1 %cmp33.i, i1 false
  br i1 %or.cond586.i, label %if.end25.i.cleanup_crit_edge, label %lor.lhs.false.i100

if.end25.i.cleanup_crit_edge:                     ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

lor.lhs.false.i100:                               ; preds = %if.end25.i
  %arrayidx35.i99 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 5, i32 %cond.i92
  %216 = ptrtoint ptr %arrayidx35.i99 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx35.i99, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 327, i32 %217)
  %cmp36.i = icmp eq i32 %217, 327
  br i1 %cmp36.i, label %land.lhs.true38.i, label %lor.lhs.false70.i

land.lhs.true38.i:                                ; preds = %lor.lhs.false.i100
  %218 = zext i32 %194 to i64
  call void @__sanitizer_cov_trace_switch(i64 %218, ptr @__sancov_gen_cov_switch_values.244)
  switch i32 %194, label %land.lhs.true38.i.if.end80.i_crit_edge [
    i32 11, label %land.lhs.true38.i.cleanup_crit_edge
    i32 10, label %land.lhs.true38.i.cleanup_crit_edge131
    i32 14, label %land.lhs.true38.i.cleanup_crit_edge132
    i32 13, label %land.lhs.true38.i.cleanup_crit_edge133
    i32 18, label %land.lhs.true38.i.cleanup_crit_edge134
    i32 17, label %land.lhs.true38.i.cleanup_crit_edge135
    i32 21, label %land.lhs.true38.i.cleanup_crit_edge136
    i32 20, label %land.lhs.true38.i.cleanup_crit_edge137
    i32 33, label %land.lhs.true74.i
  ]

land.lhs.true38.i.cleanup_crit_edge137:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.cleanup_crit_edge136:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.cleanup_crit_edge135:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.cleanup_crit_edge134:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.cleanup_crit_edge133:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.cleanup_crit_edge132:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.cleanup_crit_edge131:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.cleanup_crit_edge:              ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true38.i.if.end80.i_crit_edge:           ; preds = %land.lhs.true38.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80.i

lor.lhs.false70.i:                                ; preds = %lor.lhs.false.i100
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %194)
  %cmp72.i = icmp eq i32 %194, 33
  %219 = and i8 %199, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %219)
  %tobool78.not.i = icmp eq i8 %219, 0
  %or.cond587.i = select i1 %cmp72.i, i1 %tobool78.not.i, i1 false
  br i1 %or.cond587.i, label %lor.lhs.false70.i.cleanup_crit_edge, label %lor.lhs.false70.i.if.end80.i_crit_edge

lor.lhs.false70.i.if.end80.i_crit_edge:           ; preds = %lor.lhs.false70.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80.i

lor.lhs.false70.i.cleanup_crit_edge:              ; preds = %lor.lhs.false70.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true74.i:                                ; preds = %land.lhs.true38.i
  %.old.i = and i8 %199, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.old.i)
  %tobool78.not.old.i = icmp eq i8 %.old.i, 0
  br i1 %tobool78.not.old.i, label %land.lhs.true74.i.cleanup_crit_edge, label %land.lhs.true74.i.if.end80.i_crit_edge

land.lhs.true74.i.if.end80.i_crit_edge:           ; preds = %land.lhs.true74.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end80.i

land.lhs.true74.i.cleanup_crit_edge:              ; preds = %land.lhs.true74.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end80.i:                                       ; preds = %land.lhs.true74.i.if.end80.i_crit_edge, %lor.lhs.false70.i.if.end80.i_crit_edge, %land.lhs.true38.i.if.end80.i_crit_edge
  %arrayidx81.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %220 = ptrtoint ptr %arrayidx81.i to i32
  call void @__asan_load2_noabort(i32 %220)
  %221 = load i16, ptr %arrayidx81.i, align 2
  %conv83.i = zext i16 %221 to i32
  %shl.i101 = shl nuw nsw i32 %conv83.i, 1
  %arrayidx84.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 9
  %222 = ptrtoint ptr %arrayidx84.i to i32
  call void @__asan_load1_noabort(i32 %222)
  %223 = load i8, ptr %arrayidx84.i, align 1
  %224 = lshr i8 %223, 1
  %225 = and i8 %224, 1
  %and87.i = zext i8 %225 to i32
  %or.i102 = or i32 %shl.i101, %and87.i
  %arrayidx88.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %226 = ptrtoint ptr %arrayidx88.i to i32
  call void @__asan_load2_noabort(i32 %226)
  %227 = load i16, ptr %arrayidx88.i, align 2
  %conv90.i = zext i16 %227 to i32
  %shl91.i = shl nuw nsw i32 %conv90.i, 1
  %conv93.i = zext i8 %223 to i32
  %and94.i = and i32 %conv93.i, 1
  %or95.i = or i32 %shl91.i, %and94.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %194)
  %cmp100.i = icmp slt i32 %194, 10
  %x.0.i = select i1 %cmp100.i, i32 %conv83.i, i32 %or.i102
  %y.0.i = select i1 %cmp100.i, i32 %conv90.i, i32 %or95.i
  %distance.0.v.i = select i1 %cmp100.i, i32 3, i32 2
  %distance.0.i = lshr i32 %conv93.i, %distance.0.v.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %194)
  %cmp108.i = icmp eq i32 %194, 39
  br i1 %cmp108.i, label %if.then110.i, label %if.end80.i.if.end111.i_crit_edge

if.end80.i.if.end111.i_crit_edge:                 ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end111.i

if.then110.i:                                     ; preds = %if.end80.i
  call void @__sanitizer_cov_trace_pc() #10
  %distance_max.i103 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 4
  %228 = ptrtoint ptr %distance_max.i103 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %distance_max.i103, align 4
  %sub.i = sub i32 %229, %distance.0.i
  br label %if.end111.i

if.end111.i:                                      ; preds = %if.then110.i, %if.end80.i.if.end111.i_crit_edge
  %distance.1.i = phi i32 [ %sub.i, %if.then110.i ], [ %distance.0.i, %if.end80.i.if.end111.i_crit_edge ]
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 0, i32 noundef %x.0.i) #8
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 1, i32 noundef %y.0.i) #8
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 25, i32 noundef %distance.1.i) #8
  %conv112.i = zext i8 %201 to i32
  %230 = zext i32 %conv112.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %230, ptr @__sancov_gen_cov_switch_values.245)
  switch i32 %conv112.i, label %if.end111.i.sw.epilog.i_crit_edge [
    i32 0, label %if.end111.i.sw.bb.i_crit_edge
    i32 1, label %if.end111.i.sw.bb.i_crit_edge138
    i32 2, label %if.end111.i.sw.bb.i_crit_edge139
    i32 3, label %if.end111.i.sw.bb.i_crit_edge140
    i32 10, label %sw.bb156.i
    i32 5, label %sw.bb178.i
    i32 4, label %sw.bb232.i
    i32 6, label %sw.bb265.i
    i32 8, label %sw.bb303.i
  ]

if.end111.i.sw.bb.i_crit_edge140:                 ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

if.end111.i.sw.bb.i_crit_edge139:                 ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

if.end111.i.sw.bb.i_crit_edge138:                 ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

if.end111.i.sw.bb.i_crit_edge:                    ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb.i

if.end111.i.sw.epilog.i_crit_edge:                ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %if.end111.i.sw.bb.i_crit_edge, %if.end111.i.sw.bb.i_crit_edge138, %if.end111.i.sw.bb.i_crit_edge139, %if.end111.i.sw.bb.i_crit_edge140
  %arrayidx113.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %231 = ptrtoint ptr %arrayidx113.i to i32
  call void @__asan_load1_noabort(i32 %231)
  %232 = load i8, ptr %arrayidx113.i, align 1
  %conv114.i = zext i8 %232 to i32
  %shl115.i = shl nuw nsw i32 %conv114.i, 3
  %arrayidx116.i104 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %233 = ptrtoint ptr %arrayidx116.i104 to i32
  call void @__asan_load1_noabort(i32 %233)
  %234 = load i8, ptr %arrayidx116.i104, align 1
  %235 = lshr i8 %234, 5
  %236 = and i8 %235, 6
  %237 = zext i8 %236 to i32
  %or120.i = or i32 %shl115.i, %237
  %238 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %238)
  %239 = load i8, ptr %arrayidx3.i, align 1
  %240 = and i8 %239, 1
  %and123.i = zext i8 %240 to i32
  %or124.i = or i32 %or120.i, %and123.i
  %pressure_max.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 3
  %241 = ptrtoint ptr %pressure_max.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %pressure_max.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2047, i32 %242)
  %cmp125.i = icmp slt i32 %242, 2047
  %shr128.i = lshr exact i32 %or120.i, 1
  %spec.select.i105 = select i1 %cmp125.i, i32 %shr128.i, i32 %or124.i
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 24, i32 noundef %spec.select.i105) #8
  %243 = ptrtoint ptr %type.i76 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %type.i76, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %244)
  %cmp131.not.i = icmp eq i32 %244, 39
  br i1 %cmp131.not.i, label %sw.bb.i.if.end147.i_crit_edge, label %if.then133.i

sw.bb.i.if.end147.i_crit_edge:                    ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end147.i

if.then133.i:                                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #10
  %245 = ptrtoint ptr %arrayidx116.i104 to i32
  call void @__asan_load1_noabort(i32 %245)
  %246 = load i8, ptr %arrayidx116.i104, align 1
  %conv135.i = zext i8 %246 to i32
  %shl136.i = shl nuw nsw i32 %conv135.i, 1
  %and137.i = and i32 %shl136.i, 126
  %arrayidx138.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %247 = ptrtoint ptr %arrayidx138.i to i32
  call void @__asan_load1_noabort(i32 %247)
  %248 = load i8, ptr %arrayidx138.i, align 1
  %249 = lshr i8 %248, 7
  %250 = zext i8 %249 to i32
  %or141.i = or i32 %250, -64
  %sub142.i = add nsw i32 %or141.i, %and137.i
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 26, i32 noundef %sub142.i) #8
  %251 = ptrtoint ptr %arrayidx138.i to i32
  call void @__asan_load1_noabort(i32 %251)
  %252 = load i8, ptr %arrayidx138.i, align 1
  %253 = and i8 %252, 127
  %and145.i = zext i8 %253 to i32
  %sub146.i = add nsw i32 %and145.i, -64
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 27, i32 noundef %sub146.i) #8
  br label %if.end147.i

if.end147.i:                                      ; preds = %if.then133.i, %sw.bb.i.if.end147.i_crit_edge
  %254 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %254)
  %255 = load i8, ptr %arrayidx3.i, align 1
  %256 = lshr i8 %255, 1
  %.lobit604.i = and i8 %256, 1
  %257 = zext i8 %.lobit604.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 331, i32 noundef %257) #8
  %258 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %258)
  %259 = load i8, ptr %arrayidx3.i, align 1
  %260 = lshr i8 %259, 2
  %.lobit605.i = and i8 %260, 1
  %261 = zext i8 %.lobit605.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 332, i32 noundef %261) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %spec.select.i105)
  %cmp154.i = icmp ugt i32 %spec.select.i105, 10
  %lnot.ext.i545.i = zext i1 %cmp154.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i545.i) #8
  br label %sw.epilog.i

sw.bb156.i:                                       ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx157.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %262 = ptrtoint ptr %arrayidx157.i to i32
  call void @__asan_load1_noabort(i32 %262)
  %263 = load i8, ptr %arrayidx157.i, align 1
  %conv158.i = zext i8 %263 to i32
  %shl159.i = shl nuw nsw i32 %conv158.i, 2
  %arrayidx160.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %264 = ptrtoint ptr %arrayidx160.i to i32
  call void @__asan_load1_noabort(i32 %264)
  %265 = load i8, ptr %arrayidx160.i, align 1
  %266 = lshr i8 %265, 6
  %267 = zext i8 %266 to i32
  %or164.i = or i32 %shl159.i, %267
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 8, i32 noundef %or164.i) #8
  %268 = ptrtoint ptr %arrayidx160.i to i32
  call void @__asan_load1_noabort(i32 %268)
  %269 = load i8, ptr %arrayidx160.i, align 1
  %conv166.i106 = zext i8 %269 to i32
  %shl167.i = shl nuw nsw i32 %conv166.i106, 1
  %and168.i = and i32 %shl167.i, 126
  %arrayidx169.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %270 = ptrtoint ptr %arrayidx169.i to i32
  call void @__asan_load1_noabort(i32 %270)
  %271 = load i8, ptr %arrayidx169.i, align 1
  %272 = lshr i8 %271, 7
  %273 = zext i8 %272 to i32
  %or172.i = or i32 %273, -64
  %sub173.i = add nsw i32 %or172.i, %and168.i
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 26, i32 noundef %sub173.i) #8
  %274 = ptrtoint ptr %arrayidx169.i to i32
  call void @__asan_load1_noabort(i32 %274)
  %275 = load i8, ptr %arrayidx169.i, align 1
  %276 = and i8 %275, 127
  %and176.i = zext i8 %276 to i32
  %sub177.i = add nsw i32 %and176.i, -64
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 27, i32 noundef %sub177.i) #8
  br label %sw.epilog.i

sw.bb178.i:                                       ; preds = %if.end111.i
  %277 = ptrtoint ptr %type.i76 to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load i32, ptr %type.i76, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %278)
  %cmp180.i = icmp sgt i32 %278, 9
  %arrayidx183.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %279 = ptrtoint ptr %arrayidx183.i to i32
  call void @__asan_load1_noabort(i32 %279)
  %280 = load i8, ptr %arrayidx183.i, align 1
  %conv184.i = zext i8 %280 to i32
  %shl185.i = shl nuw nsw i32 %conv184.i, 3
  %arrayidx186.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %281 = ptrtoint ptr %arrayidx186.i to i32
  call void @__asan_load1_noabort(i32 %281)
  %282 = load i8, ptr %arrayidx186.i, align 1
  %conv187.i = zext i8 %282 to i32
  %283 = lshr i32 %conv187.i, 5
  %or190.i = or i32 %283, %shl185.i
  %and193.i = and i32 %conv187.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and193.i)
  %tobool194.not.i = icmp eq i32 %and193.i, 0
  br i1 %cmp180.i, label %if.then182.i, label %if.else.i108

if.then182.i:                                     ; preds = %sw.bb178.i
  br i1 %tobool194.not.i, label %cond.false206.i, label %cond.true195.i

cond.true195.i:                                   ; preds = %if.then182.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 900, i32 %or190.i)
  %cmp196.i = icmp ugt i32 %or190.i, 900
  %sub199.i = add nsw i32 %or190.i, -1
  %div541.i = lshr i32 %sub199.i, 1
  br i1 %cmp196.i, label %cond.true198.i, label %cond.false201.i

cond.true198.i:                                   ; preds = %cond.true195.i
  call void @__sanitizer_cov_trace_pc() #10
  %sub200.i = add nsw i32 %div541.i, -1350
  br label %cond.end209.i

cond.false201.i:                                  ; preds = %cond.true195.i
  call void @__sanitizer_cov_trace_pc() #10
  %add.i107 = add nuw i32 %div541.i, 450
  br label %cond.end209.i

cond.false206.i:                                  ; preds = %if.then182.i
  call void @__sanitizer_cov_trace_pc() #10
  %div207539.i = lshr i32 %or190.i, 1
  %sub208.i = sub nsw i32 450, %div207539.i
  br label %cond.end209.i

cond.end209.i:                                    ; preds = %cond.false206.i, %cond.false201.i, %cond.true198.i
  %cond210.i = phi i32 [ %sub208.i, %cond.false206.i ], [ %sub200.i, %cond.true198.i ], [ %add.i107, %cond.false201.i ]
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 2, i32 noundef %cond210.i) #8
  br label %sw.epilog.i

if.else.i108:                                     ; preds = %sw.bb178.i
  call void @__sanitizer_cov_trace_pc() #10
  %sub224.i = add nsw i32 %or190.i, -1
  %sub227.i = sub nsw i32 0, %or190.i
  %cond230.in.i = select i1 %tobool194.not.i, i32 %sub227.i, i32 %sub224.i
  %cond230.i = lshr i32 %cond230.in.i, 1
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 5, i32 noundef %cond230.i) #8
  br label %sw.epilog.i

sw.bb232.i:                                       ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx233.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %284 = ptrtoint ptr %arrayidx233.i to i32
  call void @__asan_load1_noabort(i32 %284)
  %285 = load i8, ptr %arrayidx233.i, align 1
  %286 = and i8 %285, 1
  %287 = zext i8 %286 to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 272, i32 noundef %287) #8
  %288 = ptrtoint ptr %arrayidx233.i to i32
  call void @__asan_load1_noabort(i32 %288)
  %289 = load i8, ptr %arrayidx233.i, align 1
  %290 = lshr i8 %289, 1
  %.lobit600.i = and i8 %290, 1
  %291 = zext i8 %.lobit600.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 274, i32 noundef %291) #8
  %292 = ptrtoint ptr %arrayidx233.i to i32
  call void @__asan_load1_noabort(i32 %292)
  %293 = load i8, ptr %arrayidx233.i, align 1
  %294 = lshr i8 %293, 2
  %.lobit601.i = and i8 %294, 1
  %295 = zext i8 %.lobit601.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 273, i32 noundef %295) #8
  %296 = ptrtoint ptr %arrayidx233.i to i32
  call void @__asan_load1_noabort(i32 %296)
  %297 = load i8, ptr %arrayidx233.i, align 1
  %298 = lshr i8 %297, 5
  %.lobit602.i = and i8 %298, 1
  %299 = zext i8 %.lobit602.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 275, i32 noundef %299) #8
  %300 = ptrtoint ptr %arrayidx233.i to i32
  call void @__asan_load1_noabort(i32 %300)
  %301 = load i8, ptr %arrayidx233.i, align 1
  %302 = lshr i8 %301, 4
  %.lobit603.i = and i8 %302, 1
  %303 = zext i8 %.lobit603.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 276, i32 noundef %303) #8
  %arrayidx248.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %304 = ptrtoint ptr %arrayidx248.i to i32
  call void @__asan_load1_noabort(i32 %304)
  %305 = load i8, ptr %arrayidx248.i, align 1
  %conv249.i = zext i8 %305 to i32
  %shl250.i = shl nuw nsw i32 %conv249.i, 2
  %arrayidx251.i109 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %306 = ptrtoint ptr %arrayidx251.i109 to i32
  call void @__asan_load1_noabort(i32 %306)
  %307 = load i8, ptr %arrayidx251.i109, align 1
  %308 = lshr i8 %307, 6
  %309 = zext i8 %308 to i32
  %or255.i = or i32 %shl250.i, %309
  %310 = ptrtoint ptr %arrayidx233.i to i32
  call void @__asan_load1_noabort(i32 %310)
  %311 = load i8, ptr %arrayidx233.i, align 1
  %312 = and i8 %311, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %312)
  %tobool259.not.i = icmp eq i8 %312, 0
  %sub261.i = sub nsw i32 0, %or255.i
  %cond264.i = select i1 %tobool259.not.i, i32 %or255.i, i32 %sub261.i
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 6, i32 noundef %cond264.i) #8
  br label %sw.epilog.i

sw.bb265.i:                                       ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx266.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %313 = ptrtoint ptr %arrayidx266.i to i32
  call void @__asan_load1_noabort(i32 %313)
  %314 = load i8, ptr %arrayidx266.i, align 1
  %315 = and i8 %314, 1
  %316 = zext i8 %315 to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 272, i32 noundef %316) #8
  %317 = ptrtoint ptr %arrayidx266.i to i32
  call void @__asan_load1_noabort(i32 %317)
  %318 = load i8, ptr %arrayidx266.i, align 1
  %319 = lshr i8 %318, 1
  %.lobit596.i = and i8 %319, 1
  %320 = zext i8 %.lobit596.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 274, i32 noundef %320) #8
  %321 = ptrtoint ptr %arrayidx266.i to i32
  call void @__asan_load1_noabort(i32 %321)
  %322 = load i8, ptr %arrayidx266.i, align 1
  %323 = lshr i8 %322, 2
  %.lobit597.i = and i8 %323, 1
  %324 = zext i8 %.lobit597.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 273, i32 noundef %324) #8
  %arrayidx275.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %325 = ptrtoint ptr %arrayidx275.i to i32
  call void @__asan_load1_noabort(i32 %325)
  %326 = load i8, ptr %arrayidx275.i, align 1
  %conv276.i = zext i8 %326 to i32
  %327 = lshr i32 %conv276.i, 7
  %328 = shl i32 %conv276.i, 25
  %329 = ashr i32 %328, 31
  %sub283.i = add nsw i32 %329, %327
  tail call void @input_event(ptr noundef %192, i32 noundef 2, i32 noundef 8, i32 noundef %sub283.i) #8
  %330 = ptrtoint ptr %arrayidx266.i to i32
  call void @__asan_load1_noabort(i32 %330)
  %331 = load i8, ptr %arrayidx266.i, align 1
  %332 = lshr i8 %331, 3
  %.lobit598.i = and i8 %332, 1
  %333 = zext i8 %.lobit598.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 275, i32 noundef %333) #8
  %334 = ptrtoint ptr %arrayidx266.i to i32
  call void @__asan_load1_noabort(i32 %334)
  %335 = load i8, ptr %arrayidx266.i, align 1
  %336 = lshr i8 %335, 4
  %.lobit599.i = and i8 %336, 1
  %337 = zext i8 %.lobit599.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 276, i32 noundef %337) #8
  %338 = ptrtoint ptr %arrayidx275.i to i32
  call void @__asan_load1_noabort(i32 %338)
  %339 = load i8, ptr %arrayidx275.i, align 1
  %conv291.i = zext i8 %339 to i32
  %shl292.i110 = shl nuw nsw i32 %conv291.i, 1
  %and293.i = and i32 %shl292.i110, 126
  %arrayidx294.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %340 = ptrtoint ptr %arrayidx294.i to i32
  call void @__asan_load1_noabort(i32 %340)
  %341 = load i8, ptr %arrayidx294.i, align 1
  %342 = lshr i8 %341, 7
  %343 = zext i8 %342 to i32
  %or297.i = or i32 %343, -64
  %sub298.i = add nsw i32 %or297.i, %and293.i
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 26, i32 noundef %sub298.i) #8
  %344 = ptrtoint ptr %arrayidx294.i to i32
  call void @__asan_load1_noabort(i32 %344)
  %345 = load i8, ptr %arrayidx294.i, align 1
  %346 = and i8 %345, 127
  %and301.i = zext i8 %346 to i32
  %sub302.i = add nsw i32 %and301.i, -64
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 27, i32 noundef %sub302.i) #8
  br label %sw.epilog.i

sw.bb303.i:                                       ; preds = %if.end111.i
  %347 = ptrtoint ptr %arrayidx35.i99 to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load i32, ptr %arrayidx35.i99, align 4
  %349 = zext i32 %348 to i64
  call void @__sanitizer_cov_trace_switch(i64 %349, ptr @__sancov_gen_cov_switch_values.246)
  switch i32 %348, label %sw.bb303.i.sw.epilog.i_crit_edge [
    i32 326, label %if.then308.i
    i32 327, label %if.then346.i
  ]

sw.bb303.i.sw.epilog.i_crit_edge:                 ; preds = %sw.bb303.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog.i

if.then308.i:                                     ; preds = %sw.bb303.i
  %arrayidx309.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %350 = ptrtoint ptr %arrayidx309.i to i32
  call void @__asan_load1_noabort(i32 %350)
  %351 = load i8, ptr %arrayidx309.i, align 1
  %352 = lshr i8 %351, 2
  %.lobit591.i = and i8 %352, 1
  %353 = zext i8 %.lobit591.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 272, i32 noundef %353) #8
  %354 = ptrtoint ptr %arrayidx309.i to i32
  call void @__asan_load1_noabort(i32 %354)
  %355 = load i8, ptr %arrayidx309.i, align 1
  %356 = lshr i8 %355, 3
  %.lobit592.i = and i8 %356, 1
  %357 = zext i8 %.lobit592.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 274, i32 noundef %357) #8
  %358 = ptrtoint ptr %arrayidx309.i to i32
  call void @__asan_load1_noabort(i32 %358)
  %359 = load i8, ptr %arrayidx309.i, align 1
  %360 = lshr i8 %359, 4
  %.lobit593.i = and i8 %360, 1
  %361 = zext i8 %.lobit593.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 273, i32 noundef %361) #8
  %362 = ptrtoint ptr %arrayidx309.i to i32
  call void @__asan_load1_noabort(i32 %362)
  %363 = load i8, ptr %arrayidx309.i, align 1
  %conv319.i = zext i8 %363 to i32
  %and320.i = and i32 %conv319.i, 1
  %364 = shl i32 %conv319.i, 30
  %365 = ashr i32 %364, 31
  %sub325.i = add nsw i32 %365, %and320.i
  tail call void @input_event(ptr noundef %192, i32 noundef 2, i32 noundef 8, i32 noundef %sub325.i) #8
  %366 = ptrtoint ptr %type.i76 to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %type.i76, align 4
  %368 = add i32 %367, -10
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %368)
  %369 = icmp ult i32 %368, 3
  br i1 %369, label %if.then333.i, label %if.then308.i.sw.epilog.i_crit_edge

if.then308.i.sw.epilog.i_crit_edge:               ; preds = %if.then308.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog.i

if.then333.i:                                     ; preds = %if.then308.i
  call void @__sanitizer_cov_trace_pc() #10
  %370 = ptrtoint ptr %arrayidx309.i to i32
  call void @__asan_load1_noabort(i32 %370)
  %371 = load i8, ptr %arrayidx309.i, align 1
  %372 = lshr i8 %371, 6
  %.lobit594.i = and i8 %372, 1
  %373 = zext i8 %.lobit594.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 275, i32 noundef %373) #8
  %374 = ptrtoint ptr %arrayidx309.i to i32
  call void @__asan_load1_noabort(i32 %374)
  %375 = load i8, ptr %arrayidx309.i, align 1
  %376 = lshr i8 %375, 5
  %.lobit595.i = and i8 %376, 1
  %377 = zext i8 %.lobit595.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 276, i32 noundef %377) #8
  br label %sw.epilog.i

if.then346.i:                                     ; preds = %sw.bb303.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx347.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %378 = ptrtoint ptr %arrayidx347.i to i32
  call void @__asan_load1_noabort(i32 %378)
  %379 = load i8, ptr %arrayidx347.i, align 1
  %380 = and i8 %379, 1
  %381 = zext i8 %380 to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 272, i32 noundef %381) #8
  %382 = ptrtoint ptr %arrayidx347.i to i32
  call void @__asan_load1_noabort(i32 %382)
  %383 = load i8, ptr %arrayidx347.i, align 1
  %384 = lshr i8 %383, 1
  %.lobit.i = and i8 %384, 1
  %385 = zext i8 %.lobit.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 274, i32 noundef %385) #8
  %386 = ptrtoint ptr %arrayidx347.i to i32
  call void @__asan_load1_noabort(i32 %386)
  %387 = load i8, ptr %arrayidx347.i, align 1
  %388 = lshr i8 %387, 2
  %.lobit588.i = and i8 %388, 1
  %389 = zext i8 %.lobit588.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 273, i32 noundef %389) #8
  %390 = ptrtoint ptr %arrayidx347.i to i32
  call void @__asan_load1_noabort(i32 %390)
  %391 = load i8, ptr %arrayidx347.i, align 1
  %392 = lshr i8 %391, 4
  %.lobit589.i = and i8 %392, 1
  %393 = zext i8 %.lobit589.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 275, i32 noundef %393) #8
  %394 = ptrtoint ptr %arrayidx347.i to i32
  call void @__asan_load1_noabort(i32 %394)
  %395 = load i8, ptr %arrayidx347.i, align 1
  %396 = lshr i8 %395, 3
  %.lobit590.i = and i8 %396, 1
  %397 = zext i8 %.lobit590.i to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef 276, i32 noundef %397) #8
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.then346.i, %if.then333.i, %if.then308.i.sw.epilog.i_crit_edge, %sw.bb303.i.sw.epilog.i_crit_edge, %sw.bb265.i, %sw.bb232.i, %if.else.i108, %cond.end209.i, %sw.bb156.i, %if.end147.i, %if.end111.i.sw.epilog.i_crit_edge
  %398 = ptrtoint ptr %arrayidx23.i95 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load i32, ptr %arrayidx23.i95, align 4
  %and.i.i = shl i32 %399, 4
  %shl.i.i = and i32 %and.i.i, -65536
  %and1.i.i = and i32 %399, 4095
  %or.i.i = or i32 %shl.i.i, %and1.i.i
  tail call void @input_event(ptr noundef %192, i32 noundef 3, i32 noundef 40, i32 noundef %or.i.i) #8
  %400 = ptrtoint ptr %arrayidx35.i99 to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load i32, ptr %arrayidx35.i99, align 4
  tail call void @input_event(ptr noundef %192, i32 noundef 1, i32 noundef %401, i32 noundef 1) #8
  %arrayidx370.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 7, i32 %cond.i92
  %402 = ptrtoint ptr %arrayidx370.i to i32
  call void @__asan_load8_noabort(i32 %402)
  %403 = load i64, ptr %arrayidx370.i, align 8
  %conv371.i = trunc i64 %403 to i32
  tail call void @input_event(ptr noundef %192, i32 noundef 4, i32 noundef 0, i32 noundef %conv371.i) #8
  %reporting_data.i111 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 9
  %404 = ptrtoint ptr %reporting_data.i111 to i32
  call void @__asan_store1_noabort(i32 %404)
  store i8 1, ptr %reporting_data.i111, align 1
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog.i, %land.lhs.true74.i.cleanup_crit_edge, %lor.lhs.false70.i.cleanup_crit_edge, %land.lhs.true38.i.cleanup_crit_edge, %land.lhs.true38.i.cleanup_crit_edge131, %land.lhs.true38.i.cleanup_crit_edge132, %land.lhs.true38.i.cleanup_crit_edge133, %land.lhs.true38.i.cleanup_crit_edge134, %land.lhs.true38.i.cleanup_crit_edge135, %land.lhs.true38.i.cleanup_crit_edge136, %land.lhs.true38.i.cleanup_crit_edge137, %if.end25.i.cleanup_crit_edge, %if.then5.i.i, %if.then24.i98.cleanup_crit_edge, %delay_pen_events.exit.i.cleanup_crit_edge, %cond.end.i93.cleanup_crit_edge, %if.end95.i, %if.then87.i.cleanup_crit_edge, %if.then78.i, %if.end77.i.cleanup_crit_edge, %if.then24.i, %wacom_intuos_pad.exit, %if.then39, %do.body
  %retval.0 = phi i32 [ 0, %if.then39 ], [ 1, %wacom_intuos_pad.exit ], [ 0, %do.body ], [ 0, %if.then87.i.cleanup_crit_edge ], [ 0, %if.end77.i.cleanup_crit_edge ], [ 1, %if.end95.i ], [ 1, %if.then78.i ], [ 0, %if.then24.i ], [ 0, %lor.lhs.false70.i.cleanup_crit_edge ], [ 0, %if.end25.i.cleanup_crit_edge ], [ 0, %if.then5.i.i ], [ 0, %if.then24.i98.cleanup_crit_edge ], [ 0, %land.lhs.true74.i.cleanup_crit_edge ], [ 0, %land.lhs.true38.i.cleanup_crit_edge ], [ 0, %land.lhs.true38.i.cleanup_crit_edge131 ], [ 0, %land.lhs.true38.i.cleanup_crit_edge132 ], [ 0, %land.lhs.true38.i.cleanup_crit_edge133 ], [ 0, %land.lhs.true38.i.cleanup_crit_edge134 ], [ 0, %land.lhs.true38.i.cleanup_crit_edge135 ], [ 0, %land.lhs.true38.i.cleanup_crit_edge136 ], [ 0, %land.lhs.true38.i.cleanup_crit_edge137 ], [ 0, %delay_pen_events.exit.i.cleanup_crit_edge ], [ 1, %sw.epilog.i ], [ 0, %cond.end.i93.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_intuos_bt_irq(ptr noundef %wacom, i32 noundef %len) unnamed_addr #2 align 64 {
entry:
  %data = alloca [361 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 361, ptr nonnull %data) #8
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 360, i32 %len)
  %0 = icmp ugt i32 %len, 360
  %1 = sub i32 361, %len
  %2 = select i1 %0, i32 0, i32 %1
  %3 = getelementptr i8, ptr %data, i32 %len
  %4 = call ptr @memset(ptr %3, i32 255, i32 %2)
  %5 = call ptr @memcpy(ptr %data, ptr %data1, i32 %len)
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data, align 1
  %8 = zext i8 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.247)
  switch i8 %7, label %do.body [
    i8 4, label %sw.bb
    i8 3, label %entry.sw.bb4_crit_edge
  ]

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb4

sw.bb:                                            ; preds = %entry
  %add.ptr = getelementptr inbounds i8, ptr %data, i32 1
  %9 = call ptr @memcpy(ptr %data1, ptr %add.ptr, i32 10)
  %call.i = tail call fastcc i32 @wacom_intuos_irq(ptr noundef %wacom) #8
  %pen_input.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %10 = ptrtoint ptr %pen_input.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pen_input.i, align 8
  tail call void @input_event(ptr noundef %11, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %pad_input.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %12 = ptrtoint ptr %pad_input.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pad_input.i, align 8
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %sw.bb.sw.bb4_crit_edge, label %if.then.i

sw.bb.sw.bb4_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb4

if.then.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef nonnull %13, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then.i, %sw.bb.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge
  %i.0 = phi i32 [ 1, %entry.sw.bb4_crit_edge ], [ 11, %sw.bb.sw.bb4_crit_edge ], [ 11, %if.then.i ]
  %add.ptr6 = getelementptr i8, ptr %data, i32 %i.0
  %14 = call ptr @memcpy(ptr %data1, ptr %add.ptr6, i32 10)
  %call.i2 = tail call fastcc i32 @wacom_intuos_irq(ptr noundef %wacom) #8
  %pen_input.i3 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %15 = ptrtoint ptr %pen_input.i3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pen_input.i3, align 8
  tail call void @input_event(ptr noundef %16, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %pad_input.i4 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %17 = ptrtoint ptr %pad_input.i4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pad_input.i4, align 8
  %tobool.not.i5 = icmp eq ptr %18, null
  br i1 %tobool.not.i5, label %sw.bb4.wacom_intuos_bt_process_data.exit7_crit_edge, label %if.then.i6

sw.bb4.wacom_intuos_bt_process_data.exit7_crit_edge: ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_bt_process_data.exit7

if.then.i6:                                       ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef nonnull %18, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %wacom_intuos_bt_process_data.exit7

wacom_intuos_bt_process_data.exit7:               ; preds = %if.then.i6, %sw.bb4.wacom_intuos_bt_process_data.exit7_crit_edge
  %add7 = add nuw nsw i32 %i.0, 10
  %add.ptr9 = getelementptr i8, ptr %data, i32 %add7
  %19 = call ptr @memcpy(ptr %data1, ptr %add.ptr9, i32 10)
  %call.i9 = tail call fastcc i32 @wacom_intuos_irq(ptr noundef %wacom) #8
  %20 = ptrtoint ptr %pen_input.i3 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pen_input.i3, align 8
  tail call void @input_event(ptr noundef %21, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %22 = ptrtoint ptr %pad_input.i4 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pad_input.i4, align 8
  %tobool.not.i12 = icmp eq ptr %23, null
  br i1 %tobool.not.i12, label %wacom_intuos_bt_process_data.exit7.wacom_intuos_bt_process_data.exit14_crit_edge, label %if.then.i13

wacom_intuos_bt_process_data.exit7.wacom_intuos_bt_process_data.exit14_crit_edge: ; preds = %wacom_intuos_bt_process_data.exit7
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_bt_process_data.exit14

if.then.i13:                                      ; preds = %wacom_intuos_bt_process_data.exit7
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef nonnull %23, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %wacom_intuos_bt_process_data.exit14

wacom_intuos_bt_process_data.exit14:              ; preds = %if.then.i13, %wacom_intuos_bt_process_data.exit7.wacom_intuos_bt_process_data.exit14_crit_edge
  %add10 = or i32 %i.0, 20
  %arrayidx11 = getelementptr [361 x i8], ptr %data, i32 0, i32 %add10
  %24 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx11, align 1
  %conv12 = zext i8 %25 to i32
  %and = and i32 %conv12, 8
  %and13 = and i32 %conv12, 16
  %and16 = and i32 %conv12, 7
  %arrayidx17 = getelementptr [8 x i16], ptr @batcap_i4, i32 0, i32 %and16
  %26 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %arrayidx17, align 2
  %conv18 = zext i16 %27 to i32
  %bat_status3.i.i = getelementptr i8, ptr %wacom, i32 1432
  %28 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %bat_status3.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %29)
  %cmp.not.i.i = icmp eq i32 %29, -1
  br i1 %cmp.not.i.i, label %lor.lhs.false.i.i, label %wacom_intuos_bt_process_data.exit14.if.then.i.i_crit_edge

wacom_intuos_bt_process_data.exit14.if.then.i.i_crit_edge: ; preds = %wacom_intuos_bt_process_data.exit14
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %wacom_intuos_bt_process_data.exit14
  %battery_capacity.i.i = getelementptr i8, ptr %wacom, i32 1436
  %30 = ptrtoint ptr %battery_capacity.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %battery_capacity.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %conv18)
  %cmp4.not.i.i = icmp eq i32 %31, %conv18
  br i1 %cmp4.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %bat_charging6.i.i = getelementptr i8, ptr %wacom, i32 1440
  %32 = ptrtoint ptr %bat_charging6.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %bat_charging6.i.i, align 4
  %and.lobit16 = lshr exact i32 %and, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %and.lobit16)
  %cmp7.not.i.i = icmp eq i32 %33, %and.lobit16
  br i1 %cmp7.not.i.i, label %lor.lhs.false9.i.i, label %lor.lhs.false5.i.i.if.then.i.i_crit_edge

lor.lhs.false5.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false9.i.i:                               ; preds = %lor.lhs.false5.i.i
  %bat_connected10.i.i = getelementptr i8, ptr %wacom, i32 1444
  %34 = ptrtoint ptr %bat_connected10.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %bat_connected10.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %cmp13.not.i.i = icmp eq i32 %35, 1
  br i1 %cmp13.not.i.i, label %lor.rhs.i.i, label %lor.lhs.false9.i.i.if.then.i.i_crit_edge

lor.lhs.false9.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false9.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i:                                      ; preds = %lor.lhs.false9.i.i
  %ps_connected15.i.i = getelementptr i8, ptr %wacom, i32 1448
  %36 = ptrtoint ptr %ps_connected15.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ps_connected15.i.i, align 4
  %and13.lobit17 = lshr exact i32 %and13, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %and13.lobit17)
  %cmp18.not.i.i = icmp eq i32 %37, %and13.lobit17
  br i1 %cmp18.not.i.i, label %lor.rhs.i.i.cleanup_crit_edge, label %lor.rhs.i.i.if.then.i.i_crit_edge

lor.rhs.i.i.if.then.i.i_crit_edge:                ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i.cleanup_crit_edge:                    ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then.i.i:                                      ; preds = %lor.rhs.i.i.if.then.i.i_crit_edge, %lor.lhs.false9.i.i.if.then.i.i_crit_edge, %lor.lhs.false5.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.if.then.i.i_crit_edge, %wacom_intuos_bt_process_data.exit14.if.then.i.i_crit_edge
  %38 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 -1, ptr %bat_status3.i.i, align 4
  %battery_capacity23.i.i = getelementptr i8, ptr %wacom, i32 1436
  %39 = ptrtoint ptr %battery_capacity23.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %conv18, ptr %battery_capacity23.i.i, align 4
  %and.lobit = lshr exact i32 %and, 3
  %bat_charging26.i.i = getelementptr i8, ptr %wacom, i32 1440
  %40 = ptrtoint ptr %bat_charging26.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %and.lobit, ptr %bat_charging26.i.i, align 4
  %bat_connected29.i.i = getelementptr i8, ptr %wacom, i32 1444
  %41 = ptrtoint ptr %bat_connected29.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %bat_connected29.i.i, align 4
  %and13.lobit = lshr exact i32 %and13, 4
  %ps_connected32.i.i = getelementptr i8, ptr %wacom, i32 1448
  %42 = ptrtoint ptr %ps_connected32.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %and13.lobit, ptr %ps_connected32.i.i, align 4
  %battery33.i.i = getelementptr i8, ptr %wacom, i32 1364
  %43 = ptrtoint ptr %battery33.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %battery33.i.i, align 4
  %tobool34.not.i.i = icmp eq ptr %44, null
  br i1 %tobool34.not.i.i, label %if.then.i.i.cleanup_crit_edge, label %if.then35.i.i

if.then.i.i.cleanup_crit_edge:                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then35.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %44) #8
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_intuos_bt_irq.__UNIQUE_ID_ddebug252, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_intuos_bt_irq, %if.then)) #8
          to label %cleanup [label %if.then], !srcloc !728

if.then:                                          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %45 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pen_input, align 8
  %parent = getelementptr inbounds %struct.input_dev, ptr %46, i32 0, i32 40, i32 1
  %47 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %parent, align 8
  %conv27 = zext i8 %7 to i32
  %arrayidx28 = getelementptr inbounds [361 x i8], ptr %data, i32 0, i32 1
  %49 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx28, align 1
  %conv29 = zext i8 %50 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_intuos_bt_irq.__UNIQUE_ID_ddebug252, ptr noundef %48, ptr noundef nonnull @.str.36, i32 noundef %conv27, i32 noundef %conv29, i32 noundef %len) #8
  br label %cleanup

cleanup:                                          ; preds = %if.then, %do.body, %if.then35.i.i, %if.then.i.i.cleanup_crit_edge, %lor.rhs.i.i.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 361, ptr nonnull %data) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_bpt3_touch(ptr nocapture noundef readonly %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %arrayidx = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  %2 = and i8 %1, 7
  %and = zext i8 %2 to i32
  %3 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %4)
  %cmp.not = icmp eq i8 %4, 2
  br i1 %cmp.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %cmp555.not = icmp eq i8 %2, 0
  br i1 %cmp555.not, label %for.cond.preheader.cleanup_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %pad_input.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %type.i48 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 5
  %touch_input.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 13
  %shared.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  br label %for.body

for.body:                                         ; preds = %if.end19.for.body_crit_edge, %for.body.lr.ph
  %i.057 = phi i32 [ 0, %for.body.lr.ph ], [ %inc20, %if.end19.for.body_crit_edge ]
  %touch_changed.056 = phi i32 [ 0, %for.body.lr.ph ], [ %touch_changed.1, %if.end19.for.body_crit_edge ]
  %mul = shl i32 %i.057, 3
  %add = or i32 %mul, 2
  %arrayidx7 = getelementptr i8, ptr %data1, i32 %add
  %5 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx7, align 1
  %7 = add i8 %6, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %7)
  %8 = icmp ult i8 %7, 16
  br i1 %8, label %if.then13, label %if.else

if.then13:                                        ; preds = %for.body
  %9 = ptrtoint ptr %touch_input.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %touch_input.i, align 4
  %arrayidx.i = getelementptr i8, ptr %arrayidx7, i32 1
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i, align 1
  %conv3.i = zext i8 %6 to i32
  %call.i = tail call i32 @input_mt_get_slot_by_key(ptr noundef %10, i32 noundef %conv3.i) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then13.wacom_bpt3_touch_msg.exit_crit_edge, label %if.end.i

if.then13.wacom_bpt3_touch_msg.exit_crit_edge:    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_bpt3_touch_msg.exit

if.end.i:                                         ; preds = %if.then13
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %12)
  %tobool.not.i = icmp sgt i8 %12, -1
  br i1 %tobool.not.i, label %if.end45.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end.i
  %13 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i.i, label %if.then13.critedge.i, label %cond.true.i.i

cond.true.i.i:                                    ; preds = %land.rhs.i
  %14 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %shared.i.i, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %15, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool1.not.i.i = icmp eq i8 %17, 0
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 47, i32 noundef %call.i) #8
  %call11.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %10, i32 noundef 0, i1 noundef zeroext %tobool1.not.i.i) #8
  br i1 %tobool1.not.i.i, label %cond.true.i.i.if.then13.i_crit_edge, label %cond.true.i.i.wacom_bpt3_touch_msg.exit_crit_edge

cond.true.i.i.wacom_bpt3_touch_msg.exit_crit_edge: ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_bpt3_touch_msg.exit

cond.true.i.i.if.then13.i_crit_edge:              ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then13.i

if.then13.critedge.i:                             ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 47, i32 noundef %call.i) #8
  %call11.c83.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %10, i32 noundef 0, i1 noundef zeroext true) #8
  br label %if.then13.i

if.then13.i:                                      ; preds = %if.then13.critedge.i, %cond.true.i.i.if.then13.i_crit_edge
  %arrayidx14.i = getelementptr i8, ptr %arrayidx7, i32 2
  %18 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx14.i, align 1
  %conv15.i = zext i8 %19 to i32
  %shl.i = shl nuw nsw i32 %conv15.i, 4
  %arrayidx16.i = getelementptr i8, ptr %arrayidx7, i32 4
  %20 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx16.i, align 1
  %conv17.i = zext i8 %21 to i32
  %22 = lshr i32 %conv17.i, 4
  %or.i = or i32 %22, %shl.i
  %arrayidx18.i = getelementptr i8, ptr %arrayidx7, i32 3
  %23 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx18.i, align 1
  %conv19.i = zext i8 %24 to i32
  %shl20.i = shl nuw nsw i32 %conv19.i, 4
  %and23.i = and i32 %conv17.i, 15
  %or24.i = or i32 %shl20.i, %and23.i
  %25 = ptrtoint ptr %type.i48 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %type.i48, align 4
  %27 = add i32 %26, -20
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %27)
  %28 = icmp ult i32 %27, 20
  %arrayidx31.i = getelementptr i8, ptr %arrayidx7, i32 5
  %29 = ptrtoint ptr %arrayidx31.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx31.i, align 1
  %conv32.i = zext i8 %30 to i32
  br i1 %28, label %if.then30.i, label %if.else.i

if.then30.i:                                      ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #10
  %mul.i = mul nuw nsw i32 %conv32.i, 100
  %arrayidx33.i = getelementptr i8, ptr %arrayidx7, i32 6
  %31 = ptrtoint ptr %arrayidx33.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx33.i, align 1
  %conv34.i = zext i8 %32 to i32
  %mul35.i = mul nuw nsw i32 %conv34.i, 100
  br label %if.end44.i

if.else.i:                                        ; preds = %if.then13.i
  %absinfo.i.i = getelementptr inbounds %struct.input_dev, ptr %10, i32 0, i32 26
  %33 = ptrtoint ptr %absinfo.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %absinfo.i.i, align 8
  %tobool.not.i72.i = icmp eq ptr %34, null
  br i1 %tobool.not.i72.i, label %if.else.i.input_abs_get_res.exit80.i_crit_edge, label %cond.true.i78.i

if.else.i.input_abs_get_res.exit80.i_crit_edge:   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_get_res.exit80.i

cond.true.i78.i:                                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i.i = getelementptr %struct.input_absinfo, ptr %34, i32 53, i32 5
  %35 = ptrtoint ptr %resolution.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %resolution.i.i, align 4
  %resolution.i77.i = getelementptr %struct.input_absinfo, ptr %34, i32 54, i32 5
  %37 = ptrtoint ptr %resolution.i77.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %resolution.i77.i, align 4
  br label %input_abs_get_res.exit80.i

input_abs_get_res.exit80.i:                       ; preds = %cond.true.i78.i, %if.else.i.input_abs_get_res.exit80.i_crit_edge
  %cond.i7482.i = phi i32 [ %36, %cond.true.i78.i ], [ 0, %if.else.i.input_abs_get_res.exit80.i_crit_edge ]
  %cond.i79.i = phi i32 [ %38, %cond.true.i78.i ], [ 0, %if.else.i.input_abs_get_res.exit80.i_crit_edge ]
  %mul40.i = mul nuw nsw i32 %conv32.i, 2607
  %call41.i = tail call i32 @int_sqrt(i32 noundef %mul40.i) #8
  %mul42.i = shl i32 %call41.i, 1
  %mul43.i = mul i32 %mul42.i, %cond.i79.i
  %div.i = sdiv i32 %mul43.i, %cond.i7482.i
  br label %if.end44.i

if.end44.i:                                       ; preds = %input_abs_get_res.exit80.i, %if.then30.i
  %width.0.i = phi i32 [ %mul.i, %if.then30.i ], [ %mul42.i, %input_abs_get_res.exit80.i ]
  %height.0.i = phi i32 [ %mul35.i, %if.then30.i ], [ %div.i, %input_abs_get_res.exit80.i ]
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 53, i32 noundef %or.i) #8
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 54, i32 noundef %or24.i) #8
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 48, i32 noundef %width.0.i) #8
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 49, i32 noundef %height.0.i) #8
  br label %wacom_bpt3_touch_msg.exit

if.end45.critedge.i:                              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %10, i32 noundef 3, i32 noundef 47, i32 noundef %call.i) #8
  %call11.c.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %10, i32 noundef 0, i1 noundef zeroext false) #8
  br label %wacom_bpt3_touch_msg.exit

wacom_bpt3_touch_msg.exit:                        ; preds = %if.end45.critedge.i, %if.end44.i, %cond.true.i.i.wacom_bpt3_touch_msg.exit_crit_edge, %if.then13.wacom_bpt3_touch_msg.exit_crit_edge
  %inc = add i32 %touch_changed.056, 1
  br label %if.end19

if.else:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %6)
  %cmp14 = icmp eq i8 %6, -128
  br i1 %cmp14, label %if.then16, label %if.else.if.end19_crit_edge

if.else.if.end19_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end19

if.then16:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  %39 = ptrtoint ptr %pad_input.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pad_input.i, align 8
  %41 = ptrtoint ptr %type.i48 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %type.i48, align 4
  %43 = and i32 %42, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 38, i32 %43)
  %switch.i = icmp eq i32 %43, 38
  %arrayidx.i49 = getelementptr i8, ptr %arrayidx7, i32 1
  %44 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx.i49, align 1
  %46 = lshr i8 %45, 1
  %.lobit59.i = and i8 %46, 1
  %47 = zext i8 %.lobit59.i to i32
  %..i = select i1 %switch.i, i32 272, i32 278
  %.65.i = select i1 %switch.i, i32 278, i32 272
  tail call void @input_event(ptr noundef %40, i32 noundef 1, i32 noundef %..i, i32 noundef %47) #8
  %48 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %arrayidx.i49, align 1
  %50 = lshr i8 %49, 3
  %.lobit57.i = and i8 %50, 1
  %51 = zext i8 %.lobit57.i to i32
  tail call void @input_event(ptr noundef %40, i32 noundef 1, i32 noundef %.65.i, i32 noundef %51) #8
  %52 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %arrayidx.i49, align 1
  %54 = lshr i8 %53, 2
  %.lobit58.i = and i8 %54, 1
  %55 = zext i8 %.lobit58.i to i32
  tail call void @input_event(ptr noundef %40, i32 noundef 1, i32 noundef 277, i32 noundef %55) #8
  %56 = ptrtoint ptr %arrayidx.i49 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx.i49, align 1
  %58 = and i8 %57, 1
  %59 = zext i8 %58 to i32
  tail call void @input_event(ptr noundef %40, i32 noundef 1, i32 noundef 273, i32 noundef %59) #8
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.else.if.end19_crit_edge, %wacom_bpt3_touch_msg.exit
  %touch_changed.1 = phi i32 [ %inc, %wacom_bpt3_touch_msg.exit ], [ %touch_changed.056, %if.then16 ], [ %touch_changed.056, %if.else.if.end19_crit_edge ]
  %inc20 = add nuw nsw i32 %i.057, 1
  %exitcond.not = icmp eq i32 %inc20, %and
  br i1 %exitcond.not, label %for.end, label %if.end19.for.body_crit_edge

if.end19.for.body_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body

for.end:                                          ; preds = %if.end19
  %touch_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 13
  %60 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %touch_input, align 4
  %tobool.not = icmp eq ptr %61, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %touch_changed.1)
  %tobool22.not = icmp eq i32 %touch_changed.1, 0
  %or.cond47 = select i1 %tobool.not, i1 true, i1 %tobool22.not
  br i1 %or.cond47, label %for.end.cleanup_crit_edge, label %if.then23

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then23:                                        ; preds = %for.end
  tail call void @input_mt_sync_frame(ptr noundef nonnull %61) #8
  %62 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %touch_input, align 4
  %touch_max1.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 24
  %64 = ptrtoint ptr %touch_max1.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %touch_max1.i, align 4
  %66 = zext i32 %65 to i64
  call void @__sanitizer_cov_trace_switch(i64 %66, ptr @__sancov_gen_cov_switch_values.248)
  switch i32 %65, label %for.cond.preheader.i [
    i32 0, label %if.then23.wacom_wac_finger_count_touches.exit_crit_edge
    i32 1, label %if.then2.i
  ]

if.then23.wacom_wac_finger_count_touches.exit_crit_edge: ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit

for.cond.preheader.i:                             ; preds = %if.then23
  %mt.i = getelementptr inbounds %struct.input_dev, ptr %63, i32 0, i32 25
  %67 = ptrtoint ptr %mt.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %mt.i, align 4
  %num_slots.i = getelementptr inbounds %struct.input_mt, ptr %68, i32 0, i32 1
  %69 = ptrtoint ptr %num_slots.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %num_slots.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %cmp627.i = icmp sgt i32 %70, 0
  br i1 %cmp627.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.wacom_wac_finger_count_touches.exit_crit_edge

for.cond.preheader.i.wacom_wac_finger_count_touches.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

if.then2.i:                                       ; preds = %if.then23
  %arrayidx.i.i = getelementptr %struct.input_dev, ptr %63, i32 0, i32 27, i32 10
  %71 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %arrayidx.i.i, align 4
  %73 = and i32 %72, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %tobool3.not.i = icmp eq i32 %73, 0
  br i1 %tobool3.not.i, label %if.then2.i.wacom_wac_finger_count_touches.exit_crit_edge, label %land.rhs.i52

if.then2.i.wacom_wac_finger_count_touches.exit_crit_edge: ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit

land.rhs.i52:                                     ; preds = %if.then2.i
  %74 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %tobool.not.i.i51 = icmp eq i8 %74, 0
  br i1 %tobool.not.i.i51, label %land.rhs.i52.wacom_wac_finger_count_touches.exit_crit_edge, label %cond.true.i.i54

land.rhs.i52.wacom_wac_finger_count_touches.exit_crit_edge: ; preds = %land.rhs.i52
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit

cond.true.i.i54:                                  ; preds = %land.rhs.i52
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i.i53 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %75 = ptrtoint ptr %shared.i.i53 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %shared.i.i53, align 4
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %76, align 4, !range !727
  %79 = xor i8 %78, 1
  %80 = zext i8 %79 to i32
  br label %wacom_wac_finger_count_touches.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.029.i = phi i32 [ %inc12.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %count.028.i = phi i32 [ %spec.select.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %arrayidx.i24.i = getelementptr %struct.input_mt, ptr %68, i32 0, i32 6, i32 %i.029.i, i32 0, i32 9
  %81 = ptrtoint ptr %arrayidx.i24.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx.i24.i, align 4
  %83 = xor i32 %82, -1
  %.lobit.not.i = lshr i32 %83, 31
  %spec.select.i = add i32 %.lobit.not.i, %count.028.i
  %inc12.i = add nuw nsw i32 %i.029.i, 1
  %exitcond.not.i = icmp eq i32 %inc12.i, %70
  br i1 %exitcond.not.i, label %for.body.i.wacom_wac_finger_count_touches.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

for.body.i.wacom_wac_finger_count_touches.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit

wacom_wac_finger_count_touches.exit:              ; preds = %for.body.i.wacom_wac_finger_count_touches.exit_crit_edge, %cond.true.i.i54, %land.rhs.i52.wacom_wac_finger_count_touches.exit_crit_edge, %if.then2.i.wacom_wac_finger_count_touches.exit_crit_edge, %for.cond.preheader.i.wacom_wac_finger_count_touches.exit_crit_edge, %if.then23.wacom_wac_finger_count_touches.exit_crit_edge
  %retval.0.i = phi i32 [ %65, %if.then23.wacom_wac_finger_count_touches.exit_crit_edge ], [ 0, %if.then2.i.wacom_wac_finger_count_touches.exit_crit_edge ], [ %80, %cond.true.i.i54 ], [ 1, %land.rhs.i52.wacom_wac_finger_count_touches.exit_crit_edge ], [ 0, %for.cond.preheader.i.wacom_wac_finger_count_touches.exit_crit_edge ], [ %spec.select.i, %for.body.i.wacom_wac_finger_count_touches.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool25 = icmp ne i32 %retval.0.i, 0
  %shared = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %84 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %shared, align 4
  %touch_down = getelementptr inbounds %struct.wacom_shared, ptr %85, i32 0, i32 1
  %frombool = zext i1 %tobool25 to i8
  %86 = ptrtoint ptr %touch_down to i32
  call void @__asan_store1_noabort(i32 %86)
  store i8 %frombool, ptr %touch_down, align 1
  br label %cleanup

cleanup:                                          ; preds = %wacom_wac_finger_count_touches.exit, %for.end.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 1, %wacom_wac_finger_count_touches.exit ], [ 1, %for.end.cleanup_crit_edge ], [ 1, %for.cond.preheader.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_status_irq(ptr noundef %wacom_wac) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data2 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4
  %0 = ptrtoint ptr %data2 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -64, i8 %1)
  %cmp.not = icmp eq i8 %1, -64
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 5
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type, align 4
  %4 = and i32 %3, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 38, i32 %4)
  %switch = icmp eq i32 %4, 38
  br i1 %switch, label %land.lhs.true, label %if.end.if.end18_crit_edge

if.end.if.end18_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end
  %shared = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %5 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %shared, align 4
  %touch_input = getelementptr inbounds %struct.wacom_shared, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %touch_input, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %land.lhs.true.if.end18_crit_edge, label %land.lhs.true9

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end18

land.lhs.true9:                                   ; preds = %land.lhs.true
  %touch_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 24
  %9 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %touch_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool10.not = icmp eq i32 %10, 0
  br i1 %tobool10.not, label %land.lhs.true9.if.end18_crit_edge, label %if.then11

land.lhs.true9.if.end18_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end18

if.then11:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx14 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 8
  %11 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx14, align 1
  %13 = lshr i8 %12, 6
  %.lobit = and i8 %13, 1
  %14 = zext i8 %.lobit to i32
  tail call void @input_event(ptr noundef nonnull %8, i32 noundef 5, i32 noundef 14, i32 noundef %14) #8
  %15 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %shared, align 4
  %touch_input17 = getelementptr inbounds %struct.wacom_shared, ptr %16, i32 0, i32 4
  %17 = ptrtoint ptr %touch_input17 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %touch_input17, align 4
  tail call void @input_event(ptr noundef %18, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %if.end18

if.end18:                                         ; preds = %if.then11, %land.lhs.true9.if.end18_crit_edge, %land.lhs.true.if.end18_crit_edge, %if.end.if.end18_crit_edge
  %arrayidx19 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 9
  %19 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx19, align 1
  %21 = and i8 %20, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool22.not = icmp eq i8 %21, 0
  br i1 %tobool22.not, label %if.else, label %if.then23

if.then23:                                        ; preds = %if.end18
  %arrayidx24 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 8
  %22 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx24, align 1
  %conv25 = zext i8 %23 to i32
  %and26 = and i32 %conv25, 63
  %mul = mul nuw nsw i32 %and26, 100
  %div.lhs.trunc = trunc i32 %mul to i16
  %div26 = udiv i16 %div.lhs.trunc, 31
  %div.zext = zext i16 %div26 to i32
  %and29 = and i32 %conv25, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30 = icmp ne i32 %and29, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %mul)
  %24 = icmp ugt i32 %mul, 30
  %spec.select = select i1 %24, i1 true, i1 %tobool30
  %bat_status3.i.i = getelementptr i8, ptr %wacom_wac, i32 1432
  %25 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %bat_status3.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %cmp.not.i.i = icmp eq i32 %26, -1
  br i1 %cmp.not.i.i, label %lor.lhs.false.i.i, label %if.then23.if.then.i.i_crit_edge

if.then23.if.then.i.i_crit_edge:                  ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then23
  %battery_capacity.i.i = getelementptr i8, ptr %wacom_wac, i32 1436
  %27 = ptrtoint ptr %battery_capacity.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %battery_capacity.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %div.zext)
  %cmp4.not.i.i = icmp eq i32 %28, %div.zext
  br i1 %cmp4.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %bat_charging6.i.i = getelementptr i8, ptr %wacom_wac, i32 1440
  %29 = ptrtoint ptr %bat_charging6.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bat_charging6.i.i, align 4
  %and29.lobit27 = lshr i32 %conv25, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %and29.lobit27)
  %cmp7.not.i.i = icmp eq i32 %30, %and29.lobit27
  br i1 %cmp7.not.i.i, label %lor.lhs.false9.i.i, label %lor.lhs.false5.i.i.if.then.i.i_crit_edge

lor.lhs.false5.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false9.i.i:                               ; preds = %lor.lhs.false5.i.i
  %bat_connected10.i.i = getelementptr i8, ptr %wacom_wac, i32 1444
  %31 = ptrtoint ptr %bat_connected10.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %bat_connected10.i.i, align 4
  %conv12.i.i = zext i1 %spec.select to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %conv12.i.i)
  %cmp13.not.i.i = icmp eq i32 %32, %conv12.i.i
  br i1 %cmp13.not.i.i, label %lor.rhs.i.i, label %lor.lhs.false9.i.i.if.then.i.i_crit_edge

lor.lhs.false9.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false9.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i:                                      ; preds = %lor.lhs.false9.i.i
  %ps_connected15.i.i = getelementptr i8, ptr %wacom_wac, i32 1448
  %33 = ptrtoint ptr %ps_connected15.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ps_connected15.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %34)
  %cmp18.not.i.i = icmp eq i32 %34, 1
  br i1 %cmp18.not.i.i, label %lor.rhs.i.i.wacom_notify_battery.exit_crit_edge, label %lor.rhs.i.i.if.then.i.i_crit_edge

lor.rhs.i.i.if.then.i.i_crit_edge:                ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i.wacom_notify_battery.exit_crit_edge:  ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_notify_battery.exit

if.then.i.i:                                      ; preds = %lor.rhs.i.i.if.then.i.i_crit_edge, %lor.lhs.false9.i.i.if.then.i.i_crit_edge, %lor.lhs.false5.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.then23.if.then.i.i_crit_edge
  %35 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 -1, ptr %bat_status3.i.i, align 4
  %battery_capacity23.i.i = getelementptr i8, ptr %wacom_wac, i32 1436
  %36 = ptrtoint ptr %battery_capacity23.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %div.zext, ptr %battery_capacity23.i.i, align 4
  %and29.lobit = lshr i32 %conv25, 7
  %bat_charging26.i.i = getelementptr i8, ptr %wacom_wac, i32 1440
  %37 = ptrtoint ptr %bat_charging26.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %and29.lobit, ptr %bat_charging26.i.i, align 4
  %conv28.i.i = zext i1 %spec.select to i32
  %bat_connected29.i.i = getelementptr i8, ptr %wacom_wac, i32 1444
  %38 = ptrtoint ptr %bat_connected29.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %conv28.i.i, ptr %bat_connected29.i.i, align 4
  %ps_connected32.i.i = getelementptr i8, ptr %wacom_wac, i32 1448
  %39 = ptrtoint ptr %ps_connected32.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 1, ptr %ps_connected32.i.i, align 4
  %battery33.i.i = getelementptr i8, ptr %wacom_wac, i32 1364
  %40 = ptrtoint ptr %battery33.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %battery33.i.i, align 4
  %tobool34.not.i.i = icmp eq ptr %41, null
  br i1 %tobool34.not.i.i, label %if.then.i.i.wacom_notify_battery.exit_crit_edge, label %if.then35.i.i

if.then.i.i.wacom_notify_battery.exit_crit_edge:  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_notify_battery.exit

if.then35.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %41) #8
  br label %wacom_notify_battery.exit

wacom_notify_battery.exit:                        ; preds = %if.then35.i.i, %if.then.i.i.wacom_notify_battery.exit_crit_edge, %lor.rhs.i.i.wacom_notify_battery.exit_crit_edge
  %battery37 = getelementptr i8, ptr %wacom_wac, i32 1364
  %42 = ptrtoint ptr %battery37 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %battery37, align 4
  %tobool38.not = icmp eq ptr %43, null
  br i1 %tobool38.not, label %land.lhs.true39, label %wacom_notify_battery.exit.cleanup_crit_edge

wacom_notify_battery.exit.cleanup_crit_edge:      ; preds = %wacom_notify_battery.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true39:                                  ; preds = %wacom_notify_battery.exit
  %quirks = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 23
  %44 = ptrtoint ptr %quirks to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %quirks, align 4
  %and40 = and i32 %45, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.then42, label %land.lhs.true39.cleanup_crit_edge

land.lhs.true39.cleanup_crit_edge:                ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then42:                                        ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #10
  %or = or i32 %45, 8
  %46 = ptrtoint ptr %quirks to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %or, ptr %quirks, align 4
  %mode_change_work.i = getelementptr i8, ptr %wacom_wac, i32 1052
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %47 = load ptr, ptr @system_wq, align 4
  %call.i.i12.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %47, ptr noundef %mode_change_work.i) #8
  br label %cleanup

if.else:                                          ; preds = %if.end18
  %quirks45 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 23
  %48 = ptrtoint ptr %quirks45 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %quirks45, align 4
  %and46 = and i32 %49, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %if.else.cleanup_crit_edge, label %land.lhs.true48

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

land.lhs.true48:                                  ; preds = %if.else
  %battery50 = getelementptr i8, ptr %wacom_wac, i32 1364
  %50 = ptrtoint ptr %battery50 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %battery50, align 4
  %tobool51.not = icmp eq ptr %51, null
  br i1 %tobool51.not, label %land.lhs.true48.cleanup_crit_edge, label %if.then52

land.lhs.true48.cleanup_crit_edge:                ; preds = %land.lhs.true48
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then52:                                        ; preds = %land.lhs.true48
  %and54 = and i32 %49, -9
  %52 = ptrtoint ptr %quirks45 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %and54, ptr %quirks45, align 4
  %mode_change_work.i1 = getelementptr i8, ptr %wacom_wac, i32 1052
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %53 = load ptr, ptr @system_wq, align 4
  %call.i.i12.i2 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %53, ptr noundef %mode_change_work.i1) #8
  %bat_status3.i.i3 = getelementptr i8, ptr %wacom_wac, i32 1432
  %54 = ptrtoint ptr %bat_status3.i.i3 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %bat_status3.i.i3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %cmp.not.i.i4 = icmp eq i32 %55, 0
  br i1 %cmp.not.i.i4, label %lor.lhs.false.i.i7, label %if.then52.if.then.i.i23_crit_edge

if.then52.if.then.i.i23_crit_edge:                ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.lhs.false.i.i7:                               ; preds = %if.then52
  %battery_capacity.i.i5 = getelementptr i8, ptr %wacom_wac, i32 1436
  %56 = ptrtoint ptr %battery_capacity.i.i5 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %battery_capacity.i.i5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %cmp4.not.i.i6 = icmp eq i32 %57, 0
  br i1 %cmp4.not.i.i6, label %lor.lhs.false5.i.i10, label %lor.lhs.false.i.i7.if.then.i.i23_crit_edge

lor.lhs.false.i.i7.if.then.i.i23_crit_edge:       ; preds = %lor.lhs.false.i.i7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.lhs.false5.i.i10:                             ; preds = %lor.lhs.false.i.i7
  %bat_charging6.i.i8 = getelementptr i8, ptr %wacom_wac, i32 1440
  %58 = ptrtoint ptr %bat_charging6.i.i8 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %bat_charging6.i.i8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp7.not.i.i9 = icmp eq i32 %59, 0
  br i1 %cmp7.not.i.i9, label %lor.lhs.false9.i.i13, label %lor.lhs.false5.i.i10.if.then.i.i23_crit_edge

lor.lhs.false5.i.i10.if.then.i.i23_crit_edge:     ; preds = %lor.lhs.false5.i.i10
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.lhs.false9.i.i13:                             ; preds = %lor.lhs.false5.i.i10
  %bat_connected10.i.i11 = getelementptr i8, ptr %wacom_wac, i32 1444
  %60 = ptrtoint ptr %bat_connected10.i.i11 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %bat_connected10.i.i11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %cmp13.not.i.i12 = icmp eq i32 %61, 0
  br i1 %cmp13.not.i.i12, label %lor.rhs.i.i16, label %lor.lhs.false9.i.i13.if.then.i.i23_crit_edge

lor.lhs.false9.i.i13.if.then.i.i23_crit_edge:     ; preds = %lor.lhs.false9.i.i13
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.rhs.i.i16:                                    ; preds = %lor.lhs.false9.i.i13
  %ps_connected15.i.i14 = getelementptr i8, ptr %wacom_wac, i32 1448
  %62 = ptrtoint ptr %ps_connected15.i.i14 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %ps_connected15.i.i14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %cmp18.not.i.i15 = icmp eq i32 %63, 0
  br i1 %cmp18.not.i.i15, label %lor.rhs.i.i16.cleanup_crit_edge, label %lor.rhs.i.i16.if.then.i.i23_crit_edge

lor.rhs.i.i16.if.then.i.i23_crit_edge:            ; preds = %lor.rhs.i.i16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.rhs.i.i16.cleanup_crit_edge:                  ; preds = %lor.rhs.i.i16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then.i.i23:                                    ; preds = %lor.rhs.i.i16.if.then.i.i23_crit_edge, %lor.lhs.false9.i.i13.if.then.i.i23_crit_edge, %lor.lhs.false5.i.i10.if.then.i.i23_crit_edge, %lor.lhs.false.i.i7.if.then.i.i23_crit_edge, %if.then52.if.then.i.i23_crit_edge
  %64 = call ptr @memset(ptr %bat_status3.i.i3, i32 0, i32 20)
  %65 = ptrtoint ptr %battery50 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %battery50, align 4
  %tobool34.not.i.i22 = icmp eq ptr %66, null
  br i1 %tobool34.not.i.i22, label %if.then.i.i23.cleanup_crit_edge, label %if.then35.i.i24

if.then.i.i23.cleanup_crit_edge:                  ; preds = %if.then.i.i23
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then35.i.i24:                                  ; preds = %if.then.i.i23
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %66) #8
  br label %cleanup

cleanup:                                          ; preds = %if.then35.i.i24, %if.then.i.i23.cleanup_crit_edge, %lor.rhs.i.i16.cleanup_crit_edge, %land.lhs.true48.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then42, %land.lhs.true39.cleanup_crit_edge, %wacom_notify_battery.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_intuos_pro2_bt_irq(ptr noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %0 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -126, i8 %1)
  %switch = icmp slt i8 %1, -126
  br i1 %switch, label %if.end12, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_intuos_pro2_bt_irq.__UNIQUE_ID_ddebug259, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_intuos_pro2_bt_irq, %if.then9)) #8
          to label %cleanup [label %if.then9], !srcloc !728

if.then9:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %2 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pen_input, align 8
  %parent = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 40, i32 1
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 8
  %6 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data1, align 1
  %conv11 = zext i8 %7 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_intuos_pro2_bt_irq.__UNIQUE_ID_ddebug259, ptr noundef %5, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.37, i32 noundef %conv11) #8
  br label %cleanup

if.end12:                                         ; preds = %entry
  %pen_input1.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %8 = ptrtoint ptr %pen_input1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pen_input1.i, align 8
  %type.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 5
  %10 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %type.i, align 4
  %.off.i = add i32 %11, -23
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 99
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %arrayidx.i, align 1
  %14 = tail call i64 @llvm.bswap.i64(i64 %13) #8
  %arrayidx7.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 107
  br label %if.end.i

if.else.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx10.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 33
  %15 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %16 = load i64, ptr %arrayidx10.i, align 1
  %17 = tail call i64 @llvm.bswap.i64(i64 %16) #8
  %arrayidx14.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 41
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %arrayidx14.sink.i = phi ptr [ %arrayidx14.i, %if.else.i ], [ %arrayidx7.i, %if.then.i ]
  %.sink.i = phi i64 [ %17, %if.else.i ], [ %14, %if.then.i ]
  %pen_frames.0.i = phi i32 [ 4, %if.else.i ], [ 7, %if.then.i ]
  %pen_frame_len.0.i = phi i32 [ 8, %if.else.i ], [ 14, %if.then.i ]
  %18 = ptrtoint ptr %arrayidx14.sink.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 2)
  %19 = load i16, ptr %arrayidx14.sink.i, align 1
  %20 = tail call i16 @llvm.bswap.i16(i16 %19) #8
  %conv16.sink.i = zext i16 %20 to i32
  %21 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 7
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %.sink.i, ptr %21, align 8
  %23 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 6
  %shr.mask.i = and i64 %.sink.i, -4503599627370496
  call void @__sanitizer_cov_trace_const_cmp8(i64 4503599627370496, i64 %shr.mask.i)
  %cmp21.i = icmp eq i64 %shr.mask.i, 4503599627370496
  %shr26.i = lshr i64 %.sink.i, 32
  %24 = trunc i64 %shr26.i to i32
  %25 = and i32 %24, 1048575
  %conv30.i = select i1 %cmp21.i, i32 %25, i32 0
  %storemerge = or i32 %conv30.i, %conv16.sink.i
  %26 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %storemerge, ptr %23, align 4
  %tool66.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %distance_max158.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 4
  %shared183.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i
  %i.0287.i = phi i32 [ 0, %if.end.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %mul.i = mul nuw nsw i32 %i.0287.i, %pen_frame_len.0.i
  %add.i = or i32 %mul.i, 1
  %arrayidx34.i = getelementptr i8, ptr %data1, i32 %add.i
  %27 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx34.i, align 1
  %conv36.i = zext i8 %28 to i32
  %and37.i = and i32 %conv36.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37.i)
  %tobool.not.i = icmp eq i32 %and37.i, 0
  %and40.i = and i32 %conv36.i, 64
  %and40.lobit.i = lshr exact i32 %and40.i, 6
  %29 = trunc i32 %and40.lobit.i to i8
  %and45.i = and i32 %conv36.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and45.i)
  %tobool46.not.i = icmp eq i32 %and45.i, 0
  %and50.i = and i32 %conv36.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50.i)
  %tobool51.not.i = icmp eq i32 %and50.i, 0
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end55.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc.i

if.end55.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40.i)
  %tobool41.not.i = icmp eq i32 %and40.i, 0
  br i1 %tobool41.not.i, label %cleanup.i, label %if.end63.i

if.end63.i:                                       ; preds = %if.end55.i
  br i1 %tobool46.not.i, label %if.end63.i.if.end127.i_crit_edge, label %if.then65.i

if.end63.i.if.end127.i_crit_edge:                 ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end127.i

if.then65.i:                                      ; preds = %if.end63.i
  %30 = ptrtoint ptr %tool66.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %tool66.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool68.not.i = icmp eq i32 %31, 0
  br i1 %tobool68.not.i, label %if.then69.i, label %if.then65.i.if.end89.i_crit_edge

if.then65.i.if.end89.i_crit_edge:                 ; preds = %if.then65.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end89.i

if.then69.i:                                      ; preds = %if.then65.i
  br i1 %tobool51.not.i, label %if.else74.i, label %if.then69.i.if.end89.sink.split.i_crit_edge

if.then69.i.if.end89.sink.split.i_crit_edge:      ; preds = %if.then69.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end89.sink.split.i

if.else74.i:                                      ; preds = %if.then69.i
  %32 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool77.not.i = icmp eq i32 %33, 0
  br i1 %tobool77.not.i, label %if.else74.i.if.end89.sink.split.i_crit_edge, label %if.then78.i

if.else74.i.if.end89.sink.split.i_crit_edge:      ; preds = %if.else74.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end89.sink.split.i

if.then78.i:                                      ; preds = %if.else74.i
  call void @__sanitizer_cov_trace_pc() #10
  %call81.i = tail call fastcc i32 @wacom_intuos_get_tool_type(i32 noundef %33) #8
  br label %if.end89.sink.split.i

if.end89.sink.split.i:                            ; preds = %if.then78.i, %if.else74.i.if.end89.sink.split.i_crit_edge, %if.then69.i.if.end89.sink.split.i_crit_edge
  %.sink289.i = phi i32 [ %call81.i, %if.then78.i ], [ 321, %if.then69.i.if.end89.sink.split.i_crit_edge ], [ 320, %if.else74.i.if.end89.sink.split.i_crit_edge ]
  %34 = ptrtoint ptr %tool66.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %.sink289.i, ptr %tool66.i, align 4
  br label %if.end89.i

if.end89.i:                                       ; preds = %if.end89.sink.split.i, %if.then65.i.if.end89.i_crit_edge
  %arrayidx90.i = getelementptr i8, ptr %arrayidx34.i, i32 1
  %35 = ptrtoint ptr %arrayidx90.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 2)
  %36 = load i16, ptr %arrayidx90.i, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #8
  %conv92.i = zext i16 %37 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 0, i32 noundef %conv92.i) #8
  %arrayidx93.i = getelementptr i8, ptr %arrayidx34.i, i32 3
  %38 = ptrtoint ptr %arrayidx93.i to i32
  call void @__asan_loadN_noabort(i32 %38, i32 2)
  %39 = load i16, ptr %arrayidx93.i, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #8
  %conv95.i = zext i16 %40 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 1, i32 noundef %conv95.i) #8
  %41 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %type.i, align 4
  %.off277.i = add i32 %42, -23
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off277.i)
  %switch278.i = icmp ult i32 %.off277.i, 2
  br i1 %switch278.i, label %if.then105.i, label %if.end89.i.if.end127.i_crit_edge

if.end89.i.if.end127.i_crit_edge:                 ; preds = %if.end89.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end127.i

if.then105.i:                                     ; preds = %if.end89.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx106.i = getelementptr i8, ptr %arrayidx34.i, i32 9
  %43 = ptrtoint ptr %arrayidx106.i to i32
  call void @__asan_loadN_noabort(i32 %43, i32 2)
  %44 = load i16, ptr %arrayidx106.i, align 1
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #8
  %add109.i = add i16 %45, 450
  call void @__sanitizer_cov_trace_const_cmp2(i16 899, i16 %add109.i)
  %cmp112.i = icmp sgt i16 %add109.i, 899
  %sub.i = add i16 %45, -1350
  %spec.select.i = select i1 %cmp112.i, i16 %sub.i, i16 %add109.i
  %arrayidx118.i = getelementptr i8, ptr %arrayidx34.i, i32 7
  %46 = ptrtoint ptr %arrayidx118.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %arrayidx118.i, align 1
  %conv119.i = zext i8 %47 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 26, i32 noundef %conv119.i) #8
  %arrayidx120.i = getelementptr i8, ptr %arrayidx34.i, i32 8
  %48 = ptrtoint ptr %arrayidx120.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %arrayidx120.i, align 1
  %conv121.i = zext i8 %49 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 27, i32 noundef %conv121.i) #8
  %conv122.i = sext i16 %spec.select.i to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 2, i32 noundef %conv122.i) #8
  %arrayidx123.i = getelementptr i8, ptr %arrayidx34.i, i32 11
  %50 = ptrtoint ptr %arrayidx123.i to i32
  call void @__asan_loadN_noabort(i32 %50, i32 2)
  %51 = load i16, ptr %arrayidx123.i, align 1
  %52 = tail call i16 @llvm.bswap.i16(i16 %51) #8
  %conv125.i = zext i16 %52 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 8, i32 noundef %conv125.i) #8
  br label %if.end127.i

if.end127.i:                                      ; preds = %if.then105.i, %if.end89.i.if.end127.i_crit_edge, %if.end63.i.if.end127.i_crit_edge
  %53 = ptrtoint ptr %tool66.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %tool66.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool130.not.i = icmp eq i32 %54, 0
  br i1 %tobool130.not.i, label %if.end127.i.if.end181.i_crit_edge, label %if.then131.i

if.end127.i.if.end181.i_crit_edge:                ; preds = %if.end127.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end181.i

if.then131.i:                                     ; preds = %if.end127.i
  %arrayidx132.i = getelementptr i8, ptr %arrayidx34.i, i32 5
  %55 = ptrtoint ptr %arrayidx132.i to i32
  call void @__asan_loadN_noabort(i32 %55, i32 2)
  %56 = load i16, ptr %arrayidx132.i, align 1
  %57 = tail call i16 @llvm.bswap.i16(i16 %56) #8
  %conv134.i = zext i16 %57 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 24, i32 noundef %conv134.i) #8
  %58 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %type.i, align 4
  %.off279.i = add i32 %59, -23
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off279.i)
  %switch280.i = icmp ult i32 %.off279.i, 2
  br i1 %switch280.i, label %if.then144.i, label %if.else150.i

if.then144.i:                                     ; preds = %if.then131.i
  br i1 %tobool46.not.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.then144.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx147.i = getelementptr i8, ptr %arrayidx34.i, i32 13
  %60 = ptrtoint ptr %arrayidx147.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %arrayidx147.i, align 1
  %conv148.i = zext i8 %61 to i32
  br label %if.end161.i

cond.false.i:                                     ; preds = %if.then144.i
  call void @__sanitizer_cov_trace_pc() #10
  %62 = ptrtoint ptr %distance_max158.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %distance_max158.i, align 4
  br label %if.end161.i

if.else150.i:                                     ; preds = %if.then131.i
  br i1 %tobool46.not.i, label %cond.false156.i, label %cond.true153.i

cond.true153.i:                                   ; preds = %if.else150.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx154.i = getelementptr i8, ptr %arrayidx34.i, i32 7
  %64 = ptrtoint ptr %arrayidx154.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %arrayidx154.i, align 1
  %conv155.i = zext i8 %65 to i32
  br label %if.end161.i

cond.false156.i:                                  ; preds = %if.else150.i
  call void @__sanitizer_cov_trace_pc() #10
  %66 = ptrtoint ptr %distance_max158.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %distance_max158.i, align 4
  br label %if.end161.i

if.end161.i:                                      ; preds = %cond.false156.i, %cond.true153.i, %cond.false.i, %cond.true.i
  %cond160.sink.i = phi i32 [ %conv148.i, %cond.true.i ], [ %63, %cond.false.i ], [ %conv155.i, %cond.true153.i ], [ %67, %cond.false156.i ]
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 25, i32 noundef %cond160.sink.i) #8
  %68 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %arrayidx34.i, align 1
  %70 = and i8 %69, 9
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool.i.i = icmp ne i8 %70, 0
  %lnot.ext.i.i = zext i1 %tobool.i.i to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i.i) #8
  %71 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %arrayidx34.i, align 1
  %73 = lshr i8 %72, 1
  %.lobit.i = and i8 %73, 1
  %74 = zext i8 %.lobit.i to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 1, i32 noundef 331, i32 noundef %74) #8
  %75 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %arrayidx34.i, align 1
  %77 = lshr i8 %76, 2
  %.lobit286.i = and i8 %77, 1
  %78 = zext i8 %.lobit286.i to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 1, i32 noundef 332, i32 noundef %78) #8
  %79 = ptrtoint ptr %tool66.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %tool66.i, align 4
  tail call void @input_event(ptr noundef %9, i32 noundef 1, i32 noundef %80, i32 noundef 1) #8
  %81 = ptrtoint ptr %21 to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %21, align 8
  %conv177.i = trunc i64 %82 to i32
  tail call void @input_event(ptr noundef %9, i32 noundef 4, i32 noundef 0, i32 noundef %conv177.i) #8
  %83 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %23, align 4
  %and.i.i = shl i32 %84, 4
  %shl.i.i = and i32 %and.i.i, -65536
  %and1.i.i = and i32 %84, 4095
  %or.i.i = or i32 %shl.i.i, %and1.i.i
  tail call void @input_event(ptr noundef %9, i32 noundef 3, i32 noundef 40, i32 noundef %or.i.i) #8
  br label %if.end181.i

if.end181.i:                                      ; preds = %if.end161.i, %if.end127.i.if.end181.i_crit_edge
  %85 = ptrtoint ptr %shared183.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %shared183.i, align 4
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_store1_noabort(i32 %87)
  store i8 %29, ptr %86, align 4
  tail call void @input_event(ptr noundef %9, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %for.inc.i

cleanup.i:                                        ; preds = %if.end55.i
  call void @__sanitizer_cov_trace_pc() #10
  %88 = ptrtoint ptr %shared183.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %shared183.i, align 4
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_store1_noabort(i32 %90)
  store i8 0, ptr %89, align 4
  tail call fastcc void @wacom_exit_report(ptr noundef %wacom) #8
  tail call void @input_event(ptr noundef %9, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %91 = ptrtoint ptr %tool66.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 0, ptr %tool66.i, align 4
  %92 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 0, ptr %23, align 4
  %93 = ptrtoint ptr %21 to i32
  call void @__asan_store8_noabort(i32 %93)
  store i64 0, ptr %21, align 8
  br label %wacom_intuos_pro2_bt_pen.exit

for.inc.i:                                        ; preds = %if.end181.i, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.0287.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %pen_frames.0.i
  br i1 %exitcond.not.i, label %for.inc.i.wacom_intuos_pro2_bt_pen.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

for.inc.i.wacom_intuos_pro2_bt_pen.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_pro2_bt_pen.exit

wacom_intuos_pro2_bt_pen.exit:                    ; preds = %for.inc.i.wacom_intuos_pro2_bt_pen.exit_crit_edge, %cleanup.i
  %94 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %type.i, align 4
  %.off1 = add i32 %95, -23
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off1)
  %switch2 = icmp ult i32 %.off1, 2
  br i1 %switch2, label %if.then19, label %if.else

if.then19:                                        ; preds = %wacom_intuos_pro2_bt_pen.exit
  %touch_input1.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 13
  %96 = ptrtoint ptr %touch_input1.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %touch_input1.i, align 4
  %num_contacts_left9.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 17
  %absinfo.i.i = getelementptr inbounds %struct.input_dev, ptr %97, i32 0, i32 26
  %touch_max1.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 24
  br label %for.body.i8

for.body.i8:                                      ; preds = %cleanup76.i.for.body.i8_crit_edge, %if.then19
  %i.0153.i = phi i32 [ 0, %if.then19 ], [ %inc82.i, %cleanup76.i.for.body.i8_crit_edge ]
  %mul.i4 = mul nuw nsw i32 %i.0153.i, 43
  %add.i5 = add nuw nsw i32 %mul.i4, 109
  %arrayidx.i6 = getelementptr i8, ptr %data1, i32 %add.i5
  %98 = ptrtoint ptr %arrayidx.i6 to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %arrayidx.i6, align 1
  %conv.i = zext i8 %99 to i32
  %and.i = and i32 %conv.i, 127
  %and6.i = and i32 %conv.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool.not.i7 = icmp eq i32 %and6.i, 0
  br i1 %tobool.not.i7, label %for.body.i8.cleanup76.i_crit_edge, label %if.end.i9

for.body.i8.cleanup76.i_crit_edge:                ; preds = %for.body.i8
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup76.i

if.end.i9:                                        ; preds = %for.body.i8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool7.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool7.not.i, label %if.end10.i, label %if.end10.thread.i

if.end10.thread.i:                                ; preds = %if.end.i9
  call void @__sanitizer_cov_trace_pc() #10
  %100 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %and.i, ptr %num_contacts_left9.i, align 4
  %101 = tail call i32 @llvm.smin.i32(i32 %and.i, i32 5) #8
  br label %for.body17.preheader.i

if.end10.i:                                       ; preds = %if.end.i9
  %102 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %.pr.i = load i32, ptr %num_contacts_left9.i, align 4
  %103 = tail call i32 @llvm.smin.i32(i32 %.pr.i, i32 5) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr.i)
  %cmp15151.i = icmp sgt i32 %.pr.i, 0
  br i1 %cmp15151.i, label %if.end10.i.for.body17.preheader.i_crit_edge, label %if.end10.i.for.end.i_crit_edge

if.end10.i.for.end.i_crit_edge:                   ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

if.end10.i.for.body17.preheader.i_crit_edge:      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body17.preheader.i

for.body17.preheader.i:                           ; preds = %if.end10.i.for.body17.preheader.i_crit_edge, %if.end10.thread.i
  %104 = phi i32 [ %101, %if.end10.thread.i ], [ %103, %if.end10.i.for.body17.preheader.i_crit_edge ]
  %smax.i = tail call i32 @llvm.smax.i32(i32 %104, i32 1) #8
  br label %for.body17.i

for.body17.i:                                     ; preds = %cleanup.i13.for.body17.i_crit_edge, %for.body17.preheader.i
  %j.0152.i = phi i32 [ %inc.i11, %cleanup.i13.for.body17.i_crit_edge ], [ 0, %for.body17.preheader.i ]
  %mul18.i = shl i32 %j.0152.i, 3
  %add19.i = or i32 %mul18.i, 1
  %arrayidx20.i = getelementptr i8, ptr %arrayidx.i6, i32 %add19.i
  %105 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %arrayidx20.i, align 1
  %conv22.i = zext i8 %106 to i32
  %call.i = tail call i32 @input_mt_get_slot_by_key(ptr noundef %97, i32 noundef %conv22.i) #8
  %arrayidx23.i = getelementptr i8, ptr %arrayidx20.i, i32 2
  %107 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_loadN_noabort(i32 %107, i32 2)
  %108 = load i16, ptr %arrayidx23.i, align 1
  %109 = tail call i16 @llvm.bswap.i16(i16 %108) #8
  %arrayidx26.i = getelementptr i8, ptr %arrayidx20.i, i32 4
  %110 = ptrtoint ptr %arrayidx26.i to i32
  call void @__asan_loadN_noabort(i32 %110, i32 2)
  %111 = load i16, ptr %arrayidx26.i, align 1
  %112 = tail call i16 @llvm.bswap.i16(i16 %111) #8
  %113 = ptrtoint ptr %absinfo.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %absinfo.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %114, null
  br i1 %tobool.not.i.i, label %for.body17.i.input_abs_get_res.exit144.i_crit_edge, label %cond.true.i142.i

for.body17.i.input_abs_get_res.exit144.i_crit_edge: ; preds = %for.body17.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_get_res.exit144.i

cond.true.i142.i:                                 ; preds = %for.body17.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx29.i = getelementptr i8, ptr %arrayidx20.i, i32 6
  %115 = ptrtoint ptr %arrayidx29.i to i32
  call void @__asan_load1_noabort(i32 %115)
  %116 = load i8, ptr %arrayidx29.i, align 1
  %conv30.i10 = zext i8 %116 to i32
  %resolution.i.i = getelementptr %struct.input_absinfo, ptr %114, i32 53, i32 5
  %117 = ptrtoint ptr %resolution.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %resolution.i.i, align 4
  %mul32.i = mul i32 %118, %conv30.i10
  %resolution.i141.i = getelementptr %struct.input_absinfo, ptr %114, i32 54, i32 5
  %119 = ptrtoint ptr %resolution.i141.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %resolution.i141.i, align 4
  br label %input_abs_get_res.exit144.i

input_abs_get_res.exit144.i:                      ; preds = %cond.true.i142.i, %for.body17.i.input_abs_get_res.exit144.i_crit_edge
  %mul32149.i = phi i32 [ %mul32.i, %cond.true.i142.i ], [ 0, %for.body17.i.input_abs_get_res.exit144.i_crit_edge ]
  %cond.i143.i = phi i32 [ %120, %cond.true.i142.i ], [ 0, %for.body17.i.input_abs_get_res.exit144.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp37.i = icmp slt i32 %call.i, 0
  br i1 %cmp37.i, label %input_abs_get_res.exit144.i.cleanup.i13_crit_edge, label %if.end40.i

input_abs_get_res.exit144.i.cleanup.i13_crit_edge: ; preds = %input_abs_get_res.exit144.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i13

if.end40.i:                                       ; preds = %input_abs_get_res.exit144.i
  call void @__sanitizer_cov_trace_pc() #10
  %conv34150.in.in.i = getelementptr i8, ptr %arrayidx20.i, i32 7
  %121 = ptrtoint ptr %conv34150.in.in.i to i32
  call void @__asan_load1_noabort(i32 %121)
  %conv34150.in.i = load i8, ptr %conv34150.in.in.i, align 1
  %conv34150.i = zext i8 %conv34150.in.i to i32
  %mul36.i = mul i32 %cond.i143.i, %conv34150.i
  %conv28.i = zext i16 %112 to i32
  %conv25.i = zext i16 %109 to i32
  tail call void @input_event(ptr noundef %97, i32 noundef 3, i32 noundef 47, i32 noundef %call.i) #8
  %arrayidx41.i = getelementptr i8, ptr %arrayidx20.i, i32 1
  %122 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %arrayidx41.i, align 1
  %124 = and i8 %123, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %124)
  %tobool44.i = icmp ne i8 %124, 0
  %call45.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %97, i32 noundef 0, i1 noundef zeroext %tobool44.i) #8
  tail call void @input_event(ptr noundef %97, i32 noundef 3, i32 noundef 53, i32 noundef %conv25.i) #8
  tail call void @input_event(ptr noundef %97, i32 noundef 3, i32 noundef 54, i32 noundef %conv28.i) #8
  call void @__sanitizer_cov_trace_cmp4(i32 %mul32149.i, i32 %mul36.i)
  %cmp47.i = icmp sgt i32 %mul32149.i, %mul36.i
  %125 = tail call i32 @llvm.smax.i32(i32 %mul32149.i, i32 %mul36.i) #8
  tail call void @input_event(ptr noundef %97, i32 noundef 3, i32 noundef 48, i32 noundef %125) #8
  %126 = tail call i32 @llvm.smin.i32(i32 %mul32149.i, i32 %mul36.i) #8
  tail call void @input_event(ptr noundef %97, i32 noundef 3, i32 noundef 49, i32 noundef %126) #8
  %conv61.i = zext i1 %cmp47.i to i32
  tail call void @input_event(ptr noundef %97, i32 noundef 3, i32 noundef 52, i32 noundef %conv61.i) #8
  br label %cleanup.i13

cleanup.i13:                                      ; preds = %if.end40.i, %input_abs_get_res.exit144.i.cleanup.i13_crit_edge
  %inc.i11 = add nuw nsw i32 %j.0152.i, 1
  %exitcond.not.i12 = icmp eq i32 %inc.i11, %smax.i
  br i1 %exitcond.not.i12, label %cleanup.i13.for.end.i_crit_edge, label %cleanup.i13.for.body17.i_crit_edge

cleanup.i13.for.body17.i_crit_edge:               ; preds = %cleanup.i13
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body17.i

cleanup.i13.for.end.i_crit_edge:                  ; preds = %cleanup.i13
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.end.i:                                        ; preds = %cleanup.i13.for.end.i_crit_edge, %if.end10.i.for.end.i_crit_edge
  %127 = phi i32 [ %103, %if.end10.i.for.end.i_crit_edge ], [ %104, %cleanup.i13.for.end.i_crit_edge ]
  tail call void @input_mt_sync_frame(ptr noundef %97) #8
  %128 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %num_contacts_left9.i, align 4
  %sub.i14 = sub i32 %129, %127
  store i32 %sub.i14, ptr %num_contacts_left9.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i14)
  %cmp69.i = icmp slt i32 %sub.i14, 1
  br i1 %cmp69.i, label %if.then71.i, label %for.end.i.cleanup76.i_crit_edge

for.end.i.cleanup76.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup76.i

if.then71.i:                                      ; preds = %for.end.i
  %130 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 0, ptr %num_contacts_left9.i, align 4
  %131 = ptrtoint ptr %touch_input1.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %touch_input1.i, align 4
  %133 = ptrtoint ptr %touch_max1.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %touch_max1.i.i, align 4
  %135 = zext i32 %134 to i64
  call void @__sanitizer_cov_trace_switch(i64 %135, ptr @__sancov_gen_cov_switch_values.249)
  switch i32 %134, label %for.cond.preheader.i.i [
    i32 0, label %if.then71.i.wacom_wac_finger_count_touches.exit.i_crit_edge
    i32 1, label %if.then2.i.i
  ]

if.then71.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %if.then71.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

for.cond.preheader.i.i:                           ; preds = %if.then71.i
  %mt.i.i = getelementptr inbounds %struct.input_dev, ptr %132, i32 0, i32 25
  %136 = ptrtoint ptr %mt.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %mt.i.i, align 4
  %num_slots.i.i = getelementptr inbounds %struct.input_mt, ptr %137, i32 0, i32 1
  %138 = ptrtoint ptr %num_slots.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %num_slots.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %139)
  %cmp627.i.i = icmp sgt i32 %139, 0
  br i1 %cmp627.i.i, label %for.cond.preheader.i.i.for.body.i.i_crit_edge, label %for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge

for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

if.then2.i.i:                                     ; preds = %if.then71.i
  %arrayidx.i.i.i = getelementptr %struct.input_dev, ptr %132, i32 0, i32 27, i32 10
  %140 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %142 = and i32 %141, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %142)
  %tobool3.not.i.i = icmp eq i32 %142, 0
  br i1 %tobool3.not.i.i, label %if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, label %land.rhs.i.i

if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %143 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %143)
  %tobool.not.i.i.i = icmp eq i8 %143, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, label %cond.true.i.i.i

land.rhs.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

cond.true.i.i.i:                                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %144 = ptrtoint ptr %shared183.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %shared183.i, align 4
  %146 = ptrtoint ptr %145 to i32
  call void @__asan_load1_noabort(i32 %146)
  %147 = load i8, ptr %145, align 4, !range !727
  %148 = xor i8 %147, 1
  %149 = zext i8 %148 to i32
  br label %wacom_wac_finger_count_touches.exit.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %i.029.i.i = phi i32 [ %inc12.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %count.028.i.i = phi i32 [ %spec.select.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i24.i.i = getelementptr %struct.input_mt, ptr %137, i32 0, i32 6, i32 %i.029.i.i, i32 0, i32 9
  %150 = ptrtoint ptr %arrayidx.i24.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %arrayidx.i24.i.i, align 4
  %152 = xor i32 %151, -1
  %.lobit.not.i.i = lshr i32 %152, 31
  %spec.select.i.i = add i32 %.lobit.not.i.i, %count.028.i.i
  %inc12.i.i = add nuw nsw i32 %i.029.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc12.i.i, %139
  br i1 %exitcond.not.i.i, label %for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i

for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

wacom_wac_finger_count_touches.exit.i:            ; preds = %for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %cond.true.i.i.i, %land.rhs.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge, %if.then71.i.wacom_wac_finger_count_touches.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %134, %if.then71.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ 0, %if.then2.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ %149, %cond.true.i.i.i ], [ 1, %land.rhs.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ 0, %for.cond.preheader.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ %spec.select.i.i, %for.body.i.i.wacom_wac_finger_count_touches.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %tobool74.i = icmp ne i32 %retval.0.i.i, 0
  %153 = ptrtoint ptr %shared183.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %shared183.i, align 4
  %touch_down.i = getelementptr inbounds %struct.wacom_shared, ptr %154, i32 0, i32 1
  %frombool.i = zext i1 %tobool74.i to i8
  %155 = ptrtoint ptr %touch_down.i to i32
  call void @__asan_store1_noabort(i32 %155)
  store i8 %frombool.i, ptr %touch_down.i, align 1
  tail call void @input_event(ptr noundef %97, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %cleanup76.i

cleanup76.i:                                      ; preds = %wacom_wac_finger_count_touches.exit.i, %for.end.i.cleanup76.i_crit_edge, %for.body.i8.cleanup76.i_crit_edge
  %inc82.i = add nuw nsw i32 %i.0153.i, 1
  %exitcond154.not.i = icmp eq i32 %inc82.i, 4
  br i1 %exitcond154.not.i, label %for.end83.i, label %cleanup76.i.for.body.i8_crit_edge

cleanup76.i.for.body.i8_crit_edge:                ; preds = %cleanup76.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i8

for.end83.i:                                      ; preds = %cleanup76.i
  %156 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %num_contacts_left9.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %157)
  %cmp85.i = icmp eq i32 %157, 0
  br i1 %cmp85.i, label %if.then87.i, label %for.end83.i.wacom_intuos_pro2_bt_touch.exit_crit_edge

for.end83.i.wacom_intuos_pro2_bt_touch.exit_crit_edge: ; preds = %for.end83.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_pro2_bt_touch.exit

if.then87.i:                                      ; preds = %for.end83.i
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx88.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 281
  %158 = ptrtoint ptr %arrayidx88.i to i32
  call void @__asan_load1_noabort(i32 %158)
  %159 = load i8, ptr %arrayidx88.i, align 1
  %160 = xor i8 %159, -1
  %161 = lshr i8 %160, 7
  %.not.i = zext i8 %161 to i32
  tail call void @input_event(ptr noundef %97, i32 noundef 5, i32 noundef 14, i32 noundef %.not.i) #8
  tail call void @input_event(ptr noundef %97, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %wacom_intuos_pro2_bt_touch.exit

wacom_intuos_pro2_bt_touch.exit:                  ; preds = %if.then87.i, %for.end83.i.wacom_intuos_pro2_bt_touch.exit_crit_edge
  %pad_input1.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %162 = ptrtoint ptr %pad_input1.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %pad_input1.i, align 8
  %numbered_buttons.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 8
  %164 = ptrtoint ptr %numbered_buttons.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %numbered_buttons.i, align 4
  %arrayidx.i15 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 282
  %166 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_load1_noabort(i32 %166)
  %167 = load i8, ptr %arrayidx.i15, align 1
  %conv.i16 = zext i8 %167 to i32
  %arrayidx3.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 281
  %168 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %168)
  %169 = load i8, ptr %arrayidx3.i, align 1
  %170 = lshr i8 %169, 6
  %171 = and i8 %170, 1
  %172 = zext i8 %171 to i32
  %arrayidx5.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 285
  %173 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load1_noabort(i32 %173)
  %174 = load i8, ptr %arrayidx5.i, align 1
  %sub18.i = add i32 %165, -1
  %shl.i = shl nuw i32 %172, %sub18.i
  %or.i = or i32 %shl.i, %conv.i16
  %driver_data.i.i.i.i = getelementptr inbounds %struct.input_dev, ptr %163, i32 0, i32 40, i32 8
  %175 = ptrtoint ptr %driver_data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %driver_data.i.i.i.i, align 4
  %count.i.i = getelementptr inbounds %struct.wacom, ptr %176, i32 0, i32 12, i32 1
  %177 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %count.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %178)
  %cmp25.not.i.i = icmp eq i32 %178, 0
  br i1 %cmp25.not.i.i, label %wacom_intuos_pro2_bt_touch.exit.for.cond1.preheader.i.i_crit_edge, label %wacom_intuos_pro2_bt_touch.exit.for.body.i.i17_crit_edge

wacom_intuos_pro2_bt_touch.exit.for.body.i.i17_crit_edge: ; preds = %wacom_intuos_pro2_bt_touch.exit
  br label %for.body.i.i17

wacom_intuos_pro2_bt_touch.exit.for.cond1.preheader.i.i_crit_edge: ; preds = %wacom_intuos_pro2_bt_touch.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.cond1.preheader.i.i

for.cond1.preheader.i.i:                          ; preds = %for.body.i.i17.for.cond1.preheader.i.i_crit_edge, %wacom_intuos_pro2_bt_touch.exit.for.cond1.preheader.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %165)
  %cmp227.i.i = icmp sgt i32 %165, 0
  br i1 %cmp227.i.i, label %for.cond1.preheader.i.i.for.body3.i.i_crit_edge, label %for.cond1.preheader.i.i.wacom_intuos_pro2_bt_pad.exit_crit_edge

for.cond1.preheader.i.i.wacom_intuos_pro2_bt_pad.exit_crit_edge: ; preds = %for.cond1.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_pro2_bt_pad.exit

for.cond1.preheader.i.i.for.body3.i.i_crit_edge:  ; preds = %for.cond1.preheader.i.i
  br label %for.body3.i.i

for.body.i.i17:                                   ; preds = %for.body.i.i17.for.body.i.i17_crit_edge, %wacom_intuos_pro2_bt_touch.exit.for.body.i.i17_crit_edge
  %i.026.i.i = phi i32 [ %inc.i.i, %for.body.i.i17.for.body.i.i17_crit_edge ], [ 0, %wacom_intuos_pro2_bt_touch.exit.for.body.i.i17_crit_edge ]
  tail call fastcc void @wacom_update_led(ptr noundef %176, i32 noundef %165, i32 noundef %or.i, i32 noundef %i.026.i.i) #8
  %inc.i.i = add nuw i32 %i.026.i.i, 1
  %179 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %count.i.i, align 4
  %cmp.i.i = icmp ult i32 %inc.i.i, %180
  br i1 %cmp.i.i, label %for.body.i.i17.for.body.i.i17_crit_edge, label %for.body.i.i17.for.cond1.preheader.i.i_crit_edge

for.body.i.i17.for.cond1.preheader.i.i_crit_edge: ; preds = %for.body.i.i17
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.cond1.preheader.i.i

for.body.i.i17.for.body.i.i17_crit_edge:          ; preds = %for.body.i.i17
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i17

for.body3.i.i:                                    ; preds = %if.end.i.i.for.body3.i.i_crit_edge, %for.cond1.preheader.i.i.for.body3.i.i_crit_edge
  %i.128.i.i = phi i32 [ %inc6.i.i, %if.end.i.i.for.body3.i.i_crit_edge ], [ 0, %for.cond1.preheader.i.i.for.body3.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %i.128.i.i)
  %cmp.i.i.i = icmp ult i32 %i.128.i.i, 10
  br i1 %cmp.i.i.i, label %wacom_numbered_button_to_key.exit.i.i, label %if.else.i.i.i

if.else.i.i.i:                                    ; preds = %for.body3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %i.128.i.i)
  %cmp1.i.i.i = icmp ult i32 %i.128.i.i, 16
  br i1 %cmp1.i.i.i, label %if.then2.i.i.i, label %if.else4.i.i.i

if.then2.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %add3.i.i.i = add nuw nsw i32 %i.128.i.i, 294
  br label %if.then.i.i

if.else4.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %i.128.i.i)
  %cmp5.i.i.i = icmp ult i32 %i.128.i.i, 18
  %add8.i.i.i = add nuw i32 %i.128.i.i, 278
  br i1 %cmp5.i.i.i, label %if.else4.i.i.i.if.then.i.i_crit_edge, label %if.else4.i.i.i.if.end.i.i_crit_edge

if.else4.i.i.i.if.end.i.i_crit_edge:              ; preds = %if.else4.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i.i

if.else4.i.i.i.if.then.i.i_crit_edge:             ; preds = %if.else4.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

wacom_numbered_button_to_key.exit.i.i:            ; preds = %for.body3.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %add.i.i.i = add nuw nsw i32 %i.128.i.i, 256
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %wacom_numbered_button_to_key.exit.i.i, %if.else4.i.i.i.if.then.i.i_crit_edge, %if.then2.i.i.i
  %retval.0.i21.i.i = phi i32 [ %add.i.i.i, %wacom_numbered_button_to_key.exit.i.i ], [ %add3.i.i.i, %if.then2.i.i.i ], [ %add8.i.i.i, %if.else4.i.i.i.if.then.i.i_crit_edge ]
  %181 = lshr i32 %or.i, %i.128.i.i
  %182 = and i32 %181, 1
  tail call void @input_event(ptr noundef %163, i32 noundef 1, i32 noundef %retval.0.i21.i.i, i32 noundef %182) #8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.else4.i.i.i.if.end.i.i_crit_edge
  %inc6.i.i = add nuw nsw i32 %i.128.i.i, 1
  %exitcond.not.i.i18 = icmp eq i32 %inc6.i.i, %165
  br i1 %exitcond.not.i.i18, label %if.end.i.i.wacom_intuos_pro2_bt_pad.exit_crit_edge, label %if.end.i.i.for.body3.i.i_crit_edge

if.end.i.i.for.body3.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body3.i.i

if.end.i.i.wacom_intuos_pro2_bt_pad.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_pro2_bt_pad.exit

wacom_intuos_pro2_bt_pad.exit:                    ; preds = %if.end.i.i.wacom_intuos_pro2_bt_pad.exit_crit_edge, %for.cond1.preheader.i.i.wacom_intuos_pro2_bt_pad.exit_crit_edge
  %conv6.i = zext i8 %174 to i32
  %and7.i = and i32 %conv6.i, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %and7.i)
  %cmp.inv.i = icmp ugt i32 %and7.i, 12
  %spec.select.i19 = select i1 %cmp.inv.i, i32 84, i32 12
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %167)
  %tobool11.not.i = icmp ne i8 %167, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %171)
  %tobool12.not.i = icmp ne i8 %171, 0
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool12.not.i
  %and10.i = and i32 %conv6.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i)
  %tobool.i = icmp ne i32 %and10.i, 0
  %spec.select48.i = select i1 %or.cond.i, i1 true, i1 %tobool.i
  %ring.0.i = sub nsw i32 %spec.select.i19, %and7.i
  %cond.i = select i1 %tobool.i, i32 %ring.0.i, i32 0
  tail call void @input_event(ptr noundef %163, i32 noundef 3, i32 noundef 8, i32 noundef %cond.i) #8
  %arrayidx21.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 5, i32 1
  %183 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %arrayidx21.i, align 4
  %lnot.ext.i.i20 = zext i1 %spec.select48.i to i32
  tail call void @input_event(ptr noundef %163, i32 noundef 1, i32 noundef %184, i32 noundef %lnot.ext.i.i20) #8
  %cond27.i = select i1 %spec.select48.i, i32 15, i32 0
  tail call void @input_event(ptr noundef %163, i32 noundef 3, i32 noundef 40, i32 noundef %cond27.i) #8
  tail call void @input_event(ptr noundef %163, i32 noundef 4, i32 noundef 0, i32 noundef -1) #8
  tail call void @input_event(ptr noundef %163, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %arrayidx.i21 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 284
  %185 = ptrtoint ptr %arrayidx.i21 to i32
  call void @__asan_load1_noabort(i32 %185)
  %186 = load i8, ptr %arrayidx.i21, align 1
  %conv.i22 = zext i8 %186 to i32
  %and4.i = and i32 %conv.i22, 127
  %bat_status3.i.i.i = getelementptr i8, ptr %wacom, i32 1432
  %187 = ptrtoint ptr %bat_status3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %bat_status3.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %188)
  %cmp.not.i.i.i = icmp eq i32 %188, -1
  br i1 %cmp.not.i.i.i, label %lor.lhs.false.i.i.i, label %wacom_intuos_pro2_bt_pad.exit.if.then.i.i.i_crit_edge

wacom_intuos_pro2_bt_pad.exit.if.then.i.i.i_crit_edge: ; preds = %wacom_intuos_pro2_bt_pad.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %wacom_intuos_pro2_bt_pad.exit
  %battery_capacity.i.i.i = getelementptr i8, ptr %wacom, i32 1436
  %189 = ptrtoint ptr %battery_capacity.i.i.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %battery_capacity.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %190, i32 %and4.i)
  %cmp4.not.i.i.i = icmp eq i32 %190, %and4.i
  br i1 %cmp4.not.i.i.i, label %lor.lhs.false5.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.lhs.false5.i.i.i:                             ; preds = %lor.lhs.false.i.i.i
  %bat_charging6.i.i.i = getelementptr i8, ptr %wacom, i32 1440
  %191 = ptrtoint ptr %bat_charging6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %bat_charging6.i.i.i, align 4
  %and.lobit10.i = lshr i32 %conv.i22, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %192, i32 %and.lobit10.i)
  %cmp7.not.i.i.i = icmp eq i32 %192, %and.lobit10.i
  br i1 %cmp7.not.i.i.i, label %lor.lhs.false9.i.i.i, label %lor.lhs.false5.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false5.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %lor.lhs.false5.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.lhs.false9.i.i.i:                             ; preds = %lor.lhs.false5.i.i.i
  %bat_connected10.i.i.i = getelementptr i8, ptr %wacom, i32 1444
  %193 = ptrtoint ptr %bat_connected10.i.i.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %bat_connected10.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %194)
  %cmp13.not.i.i.i = icmp eq i32 %194, 1
  br i1 %cmp13.not.i.i.i, label %lor.rhs.i.i.i, label %lor.lhs.false9.i.i.i.if.then.i.i.i_crit_edge

lor.lhs.false9.i.i.i.if.then.i.i.i_crit_edge:     ; preds = %lor.lhs.false9.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.rhs.i.i.i:                                    ; preds = %lor.lhs.false9.i.i.i
  %ps_connected15.i.i.i = getelementptr i8, ptr %wacom, i32 1448
  %195 = ptrtoint ptr %ps_connected15.i.i.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %ps_connected15.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %196, i32 %192)
  %cmp18.not.i.i.i = icmp eq i32 %196, %192
  br i1 %cmp18.not.i.i.i, label %lor.rhs.i.i.i.cleanup_crit_edge, label %lor.rhs.i.i.i.if.then.i.i.i_crit_edge

lor.rhs.i.i.i.if.then.i.i.i_crit_edge:            ; preds = %lor.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i

lor.rhs.i.i.i.cleanup_crit_edge:                  ; preds = %lor.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then.i.i.i:                                    ; preds = %lor.rhs.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false9.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false5.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %wacom_intuos_pro2_bt_pad.exit.if.then.i.i.i_crit_edge
  %197 = ptrtoint ptr %bat_status3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %197)
  store i32 -1, ptr %bat_status3.i.i.i, align 4
  %battery_capacity23.i.i.i = getelementptr i8, ptr %wacom, i32 1436
  %198 = ptrtoint ptr %battery_capacity23.i.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %and4.i, ptr %battery_capacity23.i.i.i, align 4
  %and.lobit.i = lshr i32 %conv.i22, 7
  %bat_charging26.i.i.i = getelementptr i8, ptr %wacom, i32 1440
  %199 = ptrtoint ptr %bat_charging26.i.i.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %and.lobit.i, ptr %bat_charging26.i.i.i, align 4
  %bat_connected29.i.i.i = getelementptr i8, ptr %wacom, i32 1444
  %200 = ptrtoint ptr %bat_connected29.i.i.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 1, ptr %bat_connected29.i.i.i, align 4
  %ps_connected32.i.i.i = getelementptr i8, ptr %wacom, i32 1448
  %201 = ptrtoint ptr %ps_connected32.i.i.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 %and.lobit.i, ptr %ps_connected32.i.i.i, align 4
  %battery33.i.i.i = getelementptr i8, ptr %wacom, i32 1364
  %202 = ptrtoint ptr %battery33.i.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %battery33.i.i.i, align 4
  %tobool34.not.i.i.i = icmp eq ptr %203, null
  br i1 %tobool34.not.i.i.i, label %if.then.i.i.i.cleanup_crit_edge, label %if.then35.i.i.i

if.then.i.i.i.cleanup_crit_edge:                  ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then35.i.i.i:                                  ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %203) #8
  br label %cleanup

if.else:                                          ; preds = %wacom_intuos_pro2_bt_pen.exit
  %pad_input1.i23 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 14
  %204 = ptrtoint ptr %pad_input1.i23 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %pad_input1.i23, align 8
  %arrayidx.i24 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 44
  %206 = ptrtoint ptr %arrayidx.i24 to i32
  call void @__asan_load1_noabort(i32 %206)
  %207 = load i8, ptr %arrayidx.i24, align 1
  %conv.i25 = zext i8 %207 to i32
  %driver_data.i.i.i.i26 = getelementptr inbounds %struct.input_dev, ptr %205, i32 0, i32 40, i32 8
  %208 = ptrtoint ptr %driver_data.i.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %driver_data.i.i.i.i26, align 4
  %count.i.i27 = getelementptr inbounds %struct.wacom, ptr %209, i32 0, i32 12, i32 1
  %210 = ptrtoint ptr %count.i.i27 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %count.i.i27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %211)
  %cmp25.not.i.i28 = icmp eq i32 %211, 0
  br i1 %cmp25.not.i.i28, label %if.else.wacom_intuos_gen3_bt_pad.exit_crit_edge, label %if.else.for.body.i.i32_crit_edge

if.else.for.body.i.i32_crit_edge:                 ; preds = %if.else
  br label %for.body.i.i32

if.else.wacom_intuos_gen3_bt_pad.exit_crit_edge:  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_gen3_bt_pad.exit

for.body.i.i32:                                   ; preds = %for.body.i.i32.for.body.i.i32_crit_edge, %if.else.for.body.i.i32_crit_edge
  %i.026.i.i29 = phi i32 [ %inc.i.i30, %for.body.i.i32.for.body.i.i32_crit_edge ], [ 0, %if.else.for.body.i.i32_crit_edge ]
  tail call fastcc void @wacom_update_led(ptr noundef %209, i32 noundef 4, i32 noundef %conv.i25, i32 noundef %i.026.i.i29) #8
  %inc.i.i30 = add nuw i32 %i.026.i.i29, 1
  %212 = ptrtoint ptr %count.i.i27 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %count.i.i27, align 4
  %cmp.i.i31 = icmp ult i32 %inc.i.i30, %213
  br i1 %cmp.i.i31, label %for.body.i.i32.for.body.i.i32_crit_edge, label %for.body.i.i32.wacom_intuos_gen3_bt_pad.exit_crit_edge

for.body.i.i32.wacom_intuos_gen3_bt_pad.exit_crit_edge: ; preds = %for.body.i.i32
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_intuos_gen3_bt_pad.exit

for.body.i.i32.for.body.i.i32_crit_edge:          ; preds = %for.body.i.i32
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i32

wacom_intuos_gen3_bt_pad.exit:                    ; preds = %for.body.i.i32.wacom_intuos_gen3_bt_pad.exit_crit_edge, %if.else.wacom_intuos_gen3_bt_pad.exit_crit_edge
  %214 = and i32 %conv.i25, 1
  tail call void @input_event(ptr noundef %205, i32 noundef 1, i32 noundef 256, i32 noundef %214) #8
  %215 = lshr i32 %conv.i25, 1
  %216 = and i32 %215, 1
  tail call void @input_event(ptr noundef %205, i32 noundef 1, i32 noundef 257, i32 noundef %216) #8
  %217 = lshr i32 %conv.i25, 2
  %218 = and i32 %217, 1
  tail call void @input_event(ptr noundef %205, i32 noundef 1, i32 noundef 258, i32 noundef %218) #8
  %219 = lshr i32 %conv.i25, 3
  %220 = and i32 %219, 1
  tail call void @input_event(ptr noundef %205, i32 noundef 1, i32 noundef 259, i32 noundef %220) #8
  %arrayidx3.i33 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 5, i32 1
  %221 = ptrtoint ptr %arrayidx3.i33 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %arrayidx3.i33, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %207)
  %tobool.not.i34 = icmp eq i8 %207, 0
  %not.tobool.not.i = xor i1 %tobool.not.i34, true
  %lnot.ext.i.i35 = zext i1 %not.tobool.not.i to i32
  tail call void @input_event(ptr noundef %205, i32 noundef 1, i32 noundef %222, i32 noundef %lnot.ext.i.i35) #8
  %cond5.i = select i1 %tobool.not.i34, i32 0, i32 15
  tail call void @input_event(ptr noundef %205, i32 noundef 3, i32 noundef 40, i32 noundef %cond5.i) #8
  tail call void @input_event(ptr noundef %205, i32 noundef 4, i32 noundef 0, i32 noundef -1) #8
  tail call void @input_event(ptr noundef %205, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %arrayidx.i36 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 45
  %223 = ptrtoint ptr %arrayidx.i36 to i32
  call void @__asan_load1_noabort(i32 %223)
  %224 = load i8, ptr %arrayidx.i36, align 1
  %conv.i37 = zext i8 %224 to i32
  %and4.i38 = and i32 %conv.i37, 127
  %bat_status3.i.i.i39 = getelementptr i8, ptr %wacom, i32 1432
  %225 = ptrtoint ptr %bat_status3.i.i.i39 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %bat_status3.i.i.i39, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %226)
  %cmp.not.i.i.i40 = icmp eq i32 %226, -1
  br i1 %cmp.not.i.i.i40, label %lor.lhs.false.i.i.i43, label %wacom_intuos_gen3_bt_pad.exit.if.then.i.i.i61_crit_edge

wacom_intuos_gen3_bt_pad.exit.if.then.i.i.i61_crit_edge: ; preds = %wacom_intuos_gen3_bt_pad.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i61

lor.lhs.false.i.i.i43:                            ; preds = %wacom_intuos_gen3_bt_pad.exit
  %battery_capacity.i.i.i41 = getelementptr i8, ptr %wacom, i32 1436
  %227 = ptrtoint ptr %battery_capacity.i.i.i41 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %battery_capacity.i.i.i41, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %228, i32 %and4.i38)
  %cmp4.not.i.i.i42 = icmp eq i32 %228, %and4.i38
  br i1 %cmp4.not.i.i.i42, label %lor.lhs.false5.i.i.i47, label %lor.lhs.false.i.i.i43.if.then.i.i.i61_crit_edge

lor.lhs.false.i.i.i43.if.then.i.i.i61_crit_edge:  ; preds = %lor.lhs.false.i.i.i43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i61

lor.lhs.false5.i.i.i47:                           ; preds = %lor.lhs.false.i.i.i43
  %bat_charging6.i.i.i44 = getelementptr i8, ptr %wacom, i32 1440
  %229 = ptrtoint ptr %bat_charging6.i.i.i44 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %bat_charging6.i.i.i44, align 4
  %and.lobit10.i45 = lshr i32 %conv.i37, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %230, i32 %and.lobit10.i45)
  %cmp7.not.i.i.i46 = icmp eq i32 %230, %and.lobit10.i45
  br i1 %cmp7.not.i.i.i46, label %lor.lhs.false9.i.i.i50, label %lor.lhs.false5.i.i.i47.if.then.i.i.i61_crit_edge

lor.lhs.false5.i.i.i47.if.then.i.i.i61_crit_edge: ; preds = %lor.lhs.false5.i.i.i47
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i61

lor.lhs.false9.i.i.i50:                           ; preds = %lor.lhs.false5.i.i.i47
  %bat_connected10.i.i.i48 = getelementptr i8, ptr %wacom, i32 1444
  %231 = ptrtoint ptr %bat_connected10.i.i.i48 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %bat_connected10.i.i.i48, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %232)
  %cmp13.not.i.i.i49 = icmp eq i32 %232, 1
  br i1 %cmp13.not.i.i.i49, label %lor.rhs.i.i.i53, label %lor.lhs.false9.i.i.i50.if.then.i.i.i61_crit_edge

lor.lhs.false9.i.i.i50.if.then.i.i.i61_crit_edge: ; preds = %lor.lhs.false9.i.i.i50
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i61

lor.rhs.i.i.i53:                                  ; preds = %lor.lhs.false9.i.i.i50
  %ps_connected15.i.i.i51 = getelementptr i8, ptr %wacom, i32 1448
  %233 = ptrtoint ptr %ps_connected15.i.i.i51 to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %ps_connected15.i.i.i51, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %234, i32 %230)
  %cmp18.not.i.i.i52 = icmp eq i32 %234, %230
  br i1 %cmp18.not.i.i.i52, label %lor.rhs.i.i.i53.cleanup_crit_edge, label %lor.rhs.i.i.i53.if.then.i.i.i61_crit_edge

lor.rhs.i.i.i53.if.then.i.i.i61_crit_edge:        ; preds = %lor.rhs.i.i.i53
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i.i61

lor.rhs.i.i.i53.cleanup_crit_edge:                ; preds = %lor.rhs.i.i.i53
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then.i.i.i61:                                  ; preds = %lor.rhs.i.i.i53.if.then.i.i.i61_crit_edge, %lor.lhs.false9.i.i.i50.if.then.i.i.i61_crit_edge, %lor.lhs.false5.i.i.i47.if.then.i.i.i61_crit_edge, %lor.lhs.false.i.i.i43.if.then.i.i.i61_crit_edge, %wacom_intuos_gen3_bt_pad.exit.if.then.i.i.i61_crit_edge
  %235 = ptrtoint ptr %bat_status3.i.i.i39 to i32
  call void @__asan_store4_noabort(i32 %235)
  store i32 -1, ptr %bat_status3.i.i.i39, align 4
  %battery_capacity23.i.i.i54 = getelementptr i8, ptr %wacom, i32 1436
  %236 = ptrtoint ptr %battery_capacity23.i.i.i54 to i32
  call void @__asan_store4_noabort(i32 %236)
  store i32 %and4.i38, ptr %battery_capacity23.i.i.i54, align 4
  %and.lobit.i55 = lshr i32 %conv.i37, 7
  %bat_charging26.i.i.i56 = getelementptr i8, ptr %wacom, i32 1440
  %237 = ptrtoint ptr %bat_charging26.i.i.i56 to i32
  call void @__asan_store4_noabort(i32 %237)
  store i32 %and.lobit.i55, ptr %bat_charging26.i.i.i56, align 4
  %bat_connected29.i.i.i57 = getelementptr i8, ptr %wacom, i32 1444
  %238 = ptrtoint ptr %bat_connected29.i.i.i57 to i32
  call void @__asan_store4_noabort(i32 %238)
  store i32 1, ptr %bat_connected29.i.i.i57, align 4
  %ps_connected32.i.i.i58 = getelementptr i8, ptr %wacom, i32 1448
  %239 = ptrtoint ptr %ps_connected32.i.i.i58 to i32
  call void @__asan_store4_noabort(i32 %239)
  store i32 %and.lobit.i55, ptr %ps_connected32.i.i.i58, align 4
  %battery33.i.i.i59 = getelementptr i8, ptr %wacom, i32 1364
  %240 = ptrtoint ptr %battery33.i.i.i59 to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %battery33.i.i.i59, align 4
  %tobool34.not.i.i.i60 = icmp eq ptr %241, null
  br i1 %tobool34.not.i.i.i60, label %if.then.i.i.i61.cleanup_crit_edge, label %if.then35.i.i.i62

if.then.i.i.i61.cleanup_crit_edge:                ; preds = %if.then.i.i.i61
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then35.i.i.i62:                                ; preds = %if.then.i.i.i61
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %241) #8
  br label %cleanup

cleanup:                                          ; preds = %if.then35.i.i.i62, %if.then.i.i.i61.cleanup_crit_edge, %lor.rhs.i.i.i53.cleanup_crit_edge, %if.then35.i.i.i, %if.then.i.i.i.cleanup_crit_edge, %lor.rhs.i.i.i.cleanup_crit_edge, %if.then9, %do.body
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_tpc_irq(ptr noundef %wacom, i32 noundef %len) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %do.body

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_tpc_irq.__UNIQUE_ID_ddebug270, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_tpc_irq, %if.then5)) #8
          to label %do.end [label %if.then5], !srcloc !728

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %2 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pen_input, align 8
  %parent = getelementptr inbounds %struct.input_dev, ptr %3, i32 0, i32 40, i32 1
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 8
  %6 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data1, align 1
  %conv = zext i8 %7 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_tpc_irq.__UNIQUE_ID_ddebug270, ptr noundef %5, ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.38, i32 noundef %conv) #8
  br label %do.end

do.end:                                           ; preds = %if.then5, %do.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %len)
  %cmp = icmp eq i32 %len, 8
  br i1 %cmp, label %do.end.if.then12_crit_edge, label %lor.lhs.false

do.end.if.then12_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12

lor.lhs.false:                                    ; preds = %do.end
  %8 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %9)
  %cmp10 = icmp eq i8 %9, 2
  br i1 %cmp10, label %lor.lhs.false.if.then12_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

lor.lhs.false.if.then12_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12

if.then12:                                        ; preds = %lor.lhs.false.if.then12_crit_edge, %do.end.if.then12_crit_edge
  %10 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pen_input, align 8
  %arrayidx.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %13 to i32
  %and.i = lshr i32 %conv.i, 5
  %and.lobit.i = and i32 %and.i, 1
  %14 = trunc i32 %and.lobit.i to i8
  %shared.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %15 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %shared.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %16, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool2.not.i = icmp eq i8 %18, 0
  br i1 %tobool2.not.i, label %if.then.i, label %if.then12.if.end.i_crit_edge

if.then12.if.end.i_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

if.then.i:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #10
  %and5.i = and i32 %conv.i, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  %cond.i = select i1 %tobool6.not.i, i32 320, i32 321
  %tool.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %19 = ptrtoint ptr %tool.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %cond.i, ptr %tool.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then12.if.end.i_crit_edge
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %14, ptr %16, align 4
  %21 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %shared.i, align 4
  %touch_down.i.i = getelementptr inbounds %struct.wacom_shared, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %touch_down.i.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %touch_down.i.i, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.i.i = icmp eq i8 %24, 0
  br i1 %tobool.not.i.i, label %if.end.i.if.then12.i_crit_edge, label %delay_pen_events.exit.i

if.end.i.if.then12.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12.i

delay_pen_events.exit.i:                          ; preds = %if.end.i
  %25 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool1.i.not.i = icmp eq i8 %25, 0
  br i1 %tobool1.i.not.i, label %delay_pen_events.exit.i.if.then12.i_crit_edge, label %delay_pen_events.exit.i.cleanup_crit_edge

delay_pen_events.exit.i.cleanup_crit_edge:        ; preds = %delay_pen_events.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

delay_pen_events.exit.i.if.then12.i_crit_edge:    ; preds = %delay_pen_events.exit.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then12.i

if.then12.i:                                      ; preds = %delay_pen_events.exit.i.if.then12.i_crit_edge, %if.end.i.if.then12.i_crit_edge
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx.i, align 1
  %28 = lshr i8 %27, 1
  %.lobit.i = and i8 %28, 1
  %29 = zext i8 %.lobit.i to i32
  tail call void @input_event(ptr noundef %11, i32 noundef 1, i32 noundef 331, i32 noundef %29) #8
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx.i, align 1
  %32 = lshr i8 %31, 4
  %.lobit68.i = and i8 %32, 1
  %33 = zext i8 %.lobit68.i to i32
  tail call void @input_event(ptr noundef %11, i32 noundef 1, i32 noundef 332, i32 noundef %33) #8
  %arrayidx19.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %34 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %arrayidx19.i, align 2
  %36 = tail call i16 @llvm.bswap.i16(i16 %35) #8
  %conv21.i = zext i16 %36 to i32
  tail call void @input_event(ptr noundef %11, i32 noundef 3, i32 noundef 0, i32 noundef %conv21.i) #8
  %arrayidx22.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %37 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %arrayidx22.i, align 2
  %39 = tail call i16 @llvm.bswap.i16(i16 %38) #8
  %conv24.i = zext i16 %39 to i32
  tail call void @input_event(ptr noundef %11, i32 noundef 3, i32 noundef 1, i32 noundef %conv24.i) #8
  %arrayidx25.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 7
  %40 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %arrayidx25.i, align 1
  %42 = and i8 %41, 7
  %and27.i = zext i8 %42 to i32
  %shl.i = shl nuw nsw i32 %and27.i, 8
  %arrayidx28.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %43 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %arrayidx28.i, align 1
  %conv29.i = zext i8 %44 to i32
  %or.i = or i32 %shl.i, %conv29.i
  tail call void @input_event(ptr noundef %11, i32 noundef 3, i32 noundef 24, i32 noundef %or.i) #8
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx.i, align 1
  %47 = and i8 %46, 5
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool.i64.i = icmp ne i8 %47, 0
  %lnot.ext.i65.i = zext i1 %tobool.i64.i to i32
  tail call void @input_event(ptr noundef %11, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i65.i) #8
  %tool33.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 5
  %48 = ptrtoint ptr %tool33.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %tool33.i, align 4
  tail call void @input_event(ptr noundef %11, i32 noundef 1, i32 noundef %49, i32 noundef %and.lobit.i) #8
  br label %cleanup

if.else:                                          ; preds = %entry
  %touch_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 13
  %50 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %touch_input, align 4
  %tobool15.not = icmp eq ptr %51, null
  br i1 %tobool15.not, label %if.else.cleanup_crit_edge, label %do.body17

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

do.body17:                                        ; preds = %if.else
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_tpc_irq.__UNIQUE_ID_ddebug271, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_tpc_irq, %if.then29)) #8
          to label %do.end37 [label %if.then29], !srcloc !728

if.then29:                                        ; preds = %do.body17
  call void @__sanitizer_cov_trace_pc() #10
  %52 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %touch_input, align 4
  %parent32 = getelementptr inbounds %struct.input_dev, ptr %53, i32 0, i32 40, i32 1
  %54 = ptrtoint ptr %parent32 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %parent32, align 8
  %56 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %data1, align 1
  %conv34 = zext i8 %57 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_tpc_irq.__UNIQUE_ID_ddebug271, ptr noundef %55, ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.38, i32 noundef %conv34) #8
  br label %do.end37

do.end37:                                         ; preds = %if.then29, %do.body17
  %58 = zext i32 %len to i64
  call void @__sanitizer_cov_trace_switch(i64 %58, ptr @__sancov_gen_cov_switch_values.250)
  switch i32 %len, label %sw.default [
    i32 5, label %sw.bb
    i32 14, label %sw.bb39
  ]

sw.bb:                                            ; preds = %do.end37
  call void @__sanitizer_cov_trace_pc() #10
  %call38 = tail call fastcc i32 @wacom_tpc_single_touch(ptr noundef %wacom, i32 noundef 5)
  br label %cleanup

sw.bb39:                                          ; preds = %do.end37
  %59 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %touch_input, align 4
  %arrayidx.i69 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %shared.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %61 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %arrayidx.i69, align 1
  %63 = and i8 %62, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool.not.i = icmp eq i8 %63, 0
  br i1 %tobool.not.i, label %if.end.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %sw.bb39
  %64 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %tobool.not.i.i70 = icmp eq i8 %64, 0
  br i1 %tobool.not.i.i70, label %if.then.critedge.i, label %cond.true.i.i

cond.true.i.i:                                    ; preds = %land.rhs.i
  %65 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %shared.i.i, align 4
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %66, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool1.not.i.i = icmp eq i8 %68, 0
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 47, i32 noundef 0) #8
  %call4.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %60, i32 noundef 0, i1 noundef zeroext %tobool1.not.i.i) #8
  br i1 %tobool1.not.i.i, label %cond.true.i.i.if.then.i71_crit_edge, label %cond.true.i.i.if.end.i72_crit_edge

cond.true.i.i.if.end.i72_crit_edge:               ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i72

cond.true.i.i.if.then.i71_crit_edge:              ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i71

if.then.critedge.i:                               ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 47, i32 noundef 0) #8
  %call4.c1.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %60, i32 noundef 0, i1 noundef zeroext true) #8
  br label %if.then.i71

if.then.i71:                                      ; preds = %if.then.critedge.i, %cond.true.i.i.if.then.i71_crit_edge
  %arrayidx6.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %69 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %arrayidx6.i, align 2
  %71 = and i16 %70, -129
  %72 = tail call i16 @llvm.bswap.i16(i16 %71) #8
  %and9.i = zext i16 %72 to i32
  %arrayidx12.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %73 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %arrayidx12.i, align 2
  %75 = and i16 %74, -129
  %76 = tail call i16 @llvm.bswap.i16(i16 %75) #8
  %and15.i = zext i16 %76 to i32
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 53, i32 noundef %and9.i) #8
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 54, i32 noundef %and15.i) #8
  br label %if.end.i72

if.end.critedge.i:                                ; preds = %sw.bb39
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 47, i32 noundef 0) #8
  %call4.c.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %60, i32 noundef 0, i1 noundef zeroext false) #8
  br label %if.end.i72

if.end.i72:                                       ; preds = %if.end.critedge.i, %if.then.i71, %cond.true.i.i.if.end.i72_crit_edge
  %77 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %arrayidx.i69, align 1
  %79 = and i8 %78, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %tobool.not.1.i = icmp eq i8 %79, 0
  br i1 %tobool.not.1.i, label %if.end.critedge.1.i, label %land.rhs.1.i

land.rhs.1.i:                                     ; preds = %if.end.i72
  %80 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %tobool.not.i.1.i = icmp eq i8 %80, 0
  br i1 %tobool.not.i.1.i, label %if.then.critedge.1.i, label %cond.true.i.1.i

cond.true.i.1.i:                                  ; preds = %land.rhs.1.i
  %81 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %shared.i.i, align 4
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %82, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %84)
  %tobool1.not.i.1.i = icmp eq i8 %84, 0
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 47, i32 noundef 1) #8
  %call4.1.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %60, i32 noundef 0, i1 noundef zeroext %tobool1.not.i.1.i) #8
  br i1 %tobool1.not.i.1.i, label %cond.true.i.1.i.if.then.1.i_crit_edge, label %cond.true.i.1.i.if.end.1.i_crit_edge

cond.true.i.1.i.if.end.1.i_crit_edge:             ; preds = %cond.true.i.1.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.1.i

cond.true.i.1.i.if.then.1.i_crit_edge:            ; preds = %cond.true.i.1.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.1.i

if.then.critedge.1.i:                             ; preds = %land.rhs.1.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 47, i32 noundef 1) #8
  %call4.c1.1.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %60, i32 noundef 0, i1 noundef zeroext true) #8
  br label %if.then.1.i

if.then.1.i:                                      ; preds = %if.then.critedge.1.i, %cond.true.i.1.i.if.then.1.i_crit_edge
  %arrayidx6.1.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %85 = ptrtoint ptr %arrayidx6.1.i to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %arrayidx6.1.i, align 2
  %87 = and i16 %86, -129
  %88 = tail call i16 @llvm.bswap.i16(i16 %87) #8
  %and9.1.i = zext i16 %88 to i32
  %arrayidx12.1.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 8
  %89 = ptrtoint ptr %arrayidx12.1.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %arrayidx12.1.i, align 2
  %91 = and i16 %90, -129
  %92 = tail call i16 @llvm.bswap.i16(i16 %91) #8
  %and15.1.i = zext i16 %92 to i32
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 53, i32 noundef %and9.1.i) #8
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 54, i32 noundef %and15.1.i) #8
  br label %if.end.1.i

if.end.critedge.1.i:                              ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %60, i32 noundef 3, i32 noundef 47, i32 noundef 1) #8
  %call4.c.1.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %60, i32 noundef 0, i1 noundef zeroext false) #8
  br label %if.end.1.i

if.end.1.i:                                       ; preds = %if.end.critedge.1.i, %if.then.1.i, %cond.true.i.1.i.if.end.1.i_crit_edge
  tail call void @input_mt_sync_frame(ptr noundef %60) #8
  %93 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %touch_input, align 4
  %touch_max1.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 24
  %95 = ptrtoint ptr %touch_max1.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %touch_max1.i.i, align 4
  %97 = zext i32 %96 to i64
  call void @__sanitizer_cov_trace_switch(i64 %97, ptr @__sancov_gen_cov_switch_values.251)
  switch i32 %96, label %for.cond.preheader.i.i [
    i32 0, label %if.end.1.i.wacom_tpc_mt_touch.exit_crit_edge
    i32 1, label %if.then2.i.i
  ]

if.end.1.i.wacom_tpc_mt_touch.exit_crit_edge:     ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_tpc_mt_touch.exit

for.cond.preheader.i.i:                           ; preds = %if.end.1.i
  %mt.i.i = getelementptr inbounds %struct.input_dev, ptr %94, i32 0, i32 25
  %98 = ptrtoint ptr %mt.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %mt.i.i, align 4
  %num_slots.i.i = getelementptr inbounds %struct.input_mt, ptr %99, i32 0, i32 1
  %100 = ptrtoint ptr %num_slots.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %num_slots.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %cmp627.i.i = icmp sgt i32 %101, 0
  br i1 %cmp627.i.i, label %for.cond.preheader.i.i.for.body.i.i_crit_edge, label %for.cond.preheader.i.i.wacom_tpc_mt_touch.exit_crit_edge

for.cond.preheader.i.i.wacom_tpc_mt_touch.exit_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_tpc_mt_touch.exit

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

if.then2.i.i:                                     ; preds = %if.end.1.i
  %arrayidx.i.i.i = getelementptr %struct.input_dev, ptr %94, i32 0, i32 27, i32 10
  %102 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %104 = and i32 %103, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %104)
  %tobool3.not.i.i = icmp eq i32 %104, 0
  br i1 %tobool3.not.i.i, label %if.then2.i.i.wacom_tpc_mt_touch.exit_crit_edge, label %land.rhs.i.i

if.then2.i.i.wacom_tpc_mt_touch.exit_crit_edge:   ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_tpc_mt_touch.exit

land.rhs.i.i:                                     ; preds = %if.then2.i.i
  %105 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %105)
  %tobool.not.i.i.i = icmp eq i8 %105, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.wacom_tpc_mt_touch.exit_crit_edge, label %cond.true.i.i.i

land.rhs.i.i.wacom_tpc_mt_touch.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_tpc_mt_touch.exit

cond.true.i.i.i:                                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %106 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %shared.i.i, align 4
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %107, align 4, !range !727
  %110 = xor i8 %109, 1
  %111 = zext i8 %110 to i32
  br label %wacom_tpc_mt_touch.exit

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %i.029.i.i = phi i32 [ %inc12.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %count.028.i.i = phi i32 [ %spec.select.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i24.i.i = getelementptr %struct.input_mt, ptr %99, i32 0, i32 6, i32 %i.029.i.i, i32 0, i32 9
  %112 = ptrtoint ptr %arrayidx.i24.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx.i24.i.i, align 4
  %114 = xor i32 %113, -1
  %.lobit.not.i.i = lshr i32 %114, 31
  %spec.select.i.i = add i32 %.lobit.not.i.i, %count.028.i.i
  %inc12.i.i = add nuw nsw i32 %i.029.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc12.i.i, %101
  br i1 %exitcond.not.i.i, label %for.body.i.i.wacom_tpc_mt_touch.exit_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i

for.body.i.i.wacom_tpc_mt_touch.exit_crit_edge:   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_tpc_mt_touch.exit

wacom_tpc_mt_touch.exit:                          ; preds = %for.body.i.i.wacom_tpc_mt_touch.exit_crit_edge, %cond.true.i.i.i, %land.rhs.i.i.wacom_tpc_mt_touch.exit_crit_edge, %if.then2.i.i.wacom_tpc_mt_touch.exit_crit_edge, %for.cond.preheader.i.i.wacom_tpc_mt_touch.exit_crit_edge, %if.end.1.i.wacom_tpc_mt_touch.exit_crit_edge
  %retval.0.i.i = phi i32 [ %96, %if.end.1.i.wacom_tpc_mt_touch.exit_crit_edge ], [ 0, %if.then2.i.i.wacom_tpc_mt_touch.exit_crit_edge ], [ %111, %cond.true.i.i.i ], [ 1, %land.rhs.i.i.wacom_tpc_mt_touch.exit_crit_edge ], [ 0, %for.cond.preheader.i.i.wacom_tpc_mt_touch.exit_crit_edge ], [ %spec.select.i.i, %for.body.i.i.wacom_tpc_mt_touch.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %tobool17.i = icmp ne i32 %retval.0.i.i, 0
  %115 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %shared.i.i, align 4
  %touch_down.i = getelementptr inbounds %struct.wacom_shared, ptr %116, i32 0, i32 1
  %frombool18.i = zext i1 %tobool17.i to i8
  %117 = ptrtoint ptr %touch_down.i to i32
  call void @__asan_store1_noabort(i32 %117)
  store i8 %frombool18.i, ptr %touch_down.i, align 1
  br label %cleanup

sw.default:                                       ; preds = %do.end37
  %118 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %118)
  %119 = load i8, ptr %data1, align 1
  %120 = zext i8 %119 to i64
  call void @__sanitizer_cov_trace_switch(i64 %120, ptr @__sancov_gen_cov_switch_values.252)
  switch i8 %119, label %sw.default.cleanup_crit_edge [
    i8 6, label %sw.default.sw.bb43_crit_edge
    i8 15, label %sw.default.sw.bb43_crit_edge106
    i8 16, label %sw.default.sw.bb43_crit_edge107
    i8 18, label %sw.default.sw.bb43_crit_edge108
    i8 13, label %sw.default.sw.bb45_crit_edge
    i8 3, label %sw.default.sw.bb45_crit_edge109
  ]

sw.default.sw.bb45_crit_edge109:                  ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb45

sw.default.sw.bb45_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb45

sw.default.sw.bb43_crit_edge108:                  ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb43

sw.default.sw.bb43_crit_edge107:                  ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb43

sw.default.sw.bb43_crit_edge106:                  ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb43

sw.default.sw.bb43_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb43

sw.default.cleanup_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

sw.bb43:                                          ; preds = %sw.default.sw.bb43_crit_edge, %sw.default.sw.bb43_crit_edge106, %sw.default.sw.bb43_crit_edge107, %sw.default.sw.bb43_crit_edge108
  %call44 = tail call fastcc i32 @wacom_tpc_single_touch(ptr noundef %wacom, i32 noundef %len)
  br label %cleanup

sw.bb45:                                          ; preds = %sw.default.sw.bb45_crit_edge, %sw.default.sw.bb45_crit_edge109
  %121 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %touch_input, align 4
  %arrayidx.i74 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %123 = ptrtoint ptr %arrayidx.i74 to i32
  call void @__asan_load1_noabort(i32 %123)
  %124 = load i8, ptr %arrayidx.i74, align 1
  %type.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 5
  %125 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %type.i, align 4
  %.off.i = add i32 %126, -51
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  %spec.select.i = select i1 %switch.i, i32 -4, i32 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %124)
  %tobool.not.i75 = icmp eq i8 %124, 0
  br i1 %tobool.not.i75, label %sw.bb45.if.end8.i_crit_edge, label %if.then7.i

sw.bb45.if.end8.i_crit_edge:                      ; preds = %sw.bb45
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end8.i

if.then7.i:                                       ; preds = %sw.bb45
  call void @__sanitizer_cov_trace_pc() #10
  %conv.i76 = zext i8 %124 to i32
  %num_contacts_left.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 17
  %127 = ptrtoint ptr %num_contacts_left.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %conv.i76, ptr %num_contacts_left.i, align 4
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then7.i, %sw.bb45.if.end8.i_crit_edge
  %num_contacts_left9.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 17
  %128 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %num_contacts_left9.i, align 4
  %130 = tail call i32 @llvm.smin.i32(i32 %129, i32 5) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %129)
  %cmp121.i = icmp sgt i32 %129, 0
  br i1 %cmp121.i, label %for.body.lr.ph.i, label %if.end8.i.for.end.i_crit_edge

if.end8.i.for.end.i_crit_edge:                    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end8.i
  %add.i = add nsw i32 %spec.select.i, 11
  %shared.i.i77 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %smax.i = tail call i32 @llvm.smax.i32(i32 %130, i32 1) #8
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %cleanup.i.for.body.i_crit_edge ]
  %mul.i = mul nuw nsw i32 %i.02.i, %add.i
  %add14.i = add nuw nsw i32 %mul.i, 3
  %arrayidx15.i = getelementptr i8, ptr %data1, i32 %add14.i
  %131 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %arrayidx15.i, align 1
  %133 = and i8 %132, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %133)
  %tobool17.not.i = icmp eq i8 %133, 0
  br i1 %tobool17.not.i, label %for.body.i.land.end.i_crit_edge, label %land.rhs.i79

for.body.i.land.end.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end.i

land.rhs.i79:                                     ; preds = %for.body.i
  %134 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %134)
  %tobool.not.i.i78 = icmp eq i8 %134, 0
  br i1 %tobool.not.i.i78, label %land.rhs.i79.land.end.i_crit_edge, label %cond.true.i.i81

land.rhs.i79.land.end.i_crit_edge:                ; preds = %land.rhs.i79
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.end.i

cond.true.i.i81:                                  ; preds = %land.rhs.i79
  call void @__sanitizer_cov_trace_pc() #10
  %135 = ptrtoint ptr %shared.i.i77 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %shared.i.i77, align 4
  %137 = ptrtoint ptr %136 to i32
  call void @__asan_load1_noabort(i32 %137)
  %138 = load i8, ptr %136, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %138)
  %tobool1.not.i.i80 = icmp eq i8 %138, 0
  br label %land.end.i

land.end.i:                                       ; preds = %cond.true.i.i81, %land.rhs.i79.land.end.i_crit_edge, %for.body.i.land.end.i_crit_edge
  %139 = phi i1 [ false, %for.body.i.land.end.i_crit_edge ], [ %tobool1.not.i.i80, %cond.true.i.i81 ], [ true, %land.rhs.i79.land.end.i_crit_edge ]
  %add19.i = add nuw nsw i32 %mul.i, 4
  %arrayidx20.i = getelementptr i8, ptr %data1, i32 %add19.i
  %140 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_loadN_noabort(i32 %140, i32 2)
  %141 = load i16, ptr %arrayidx20.i, align 1
  %142 = tail call i16 @llvm.bswap.i16(i16 %141) #8
  %conv22.i = zext i16 %142 to i32
  %call23.i = tail call i32 @input_mt_get_slot_by_key(ptr noundef %122, i32 noundef %conv22.i) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %cmp24.i = icmp slt i32 %call23.i, 0
  br i1 %cmp24.i, label %land.end.i.cleanup.i_crit_edge, label %if.end27.i

land.end.i.cleanup.i_crit_edge:                   ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i

if.end27.i:                                       ; preds = %land.end.i
  tail call void @input_event(ptr noundef %122, i32 noundef 3, i32 noundef 47, i32 noundef %call23.i) #8
  %call29.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %122, i32 noundef 0, i1 noundef zeroext %139) #8
  br i1 %139, label %if.then31.i, label %if.end27.i.cleanup.i_crit_edge

if.end27.i.cleanup.i_crit_edge:                   ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.i

if.then31.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #10
  %add32.i = add nsw i32 %add14.i, %spec.select.i
  %add33.i = add nsw i32 %add32.i, 7
  %arrayidx34.i = getelementptr i8, ptr %data1, i32 %add33.i
  %143 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_loadN_noabort(i32 %143, i32 2)
  %144 = load i16, ptr %arrayidx34.i, align 1
  %145 = tail call i16 @llvm.bswap.i16(i16 %144) #8
  %conv36.i = zext i16 %145 to i32
  %add38.i = add nsw i32 %add32.i, 9
  %arrayidx39.i = getelementptr i8, ptr %data1, i32 %add38.i
  %146 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_loadN_noabort(i32 %146, i32 2)
  %147 = load i16, ptr %arrayidx39.i, align 1
  %148 = tail call i16 @llvm.bswap.i16(i16 %147) #8
  %conv41.i = zext i16 %148 to i32
  tail call void @input_event(ptr noundef %122, i32 noundef 3, i32 noundef 53, i32 noundef %conv36.i) #8
  tail call void @input_event(ptr noundef %122, i32 noundef 3, i32 noundef 54, i32 noundef %conv41.i) #8
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then31.i, %if.end27.i.cleanup.i_crit_edge, %land.end.i.cleanup.i_crit_edge
  %inc.i = add nuw nsw i32 %i.02.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %smax.i
  br i1 %exitcond.not.i, label %cleanup.i.for.end.i_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

cleanup.i.for.end.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.end.i:                                        ; preds = %cleanup.i.for.end.i_crit_edge, %if.end8.i.for.end.i_crit_edge
  tail call void @input_mt_sync_frame(ptr noundef %122) #8
  %149 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %num_contacts_left9.i, align 4
  %sub.i = sub i32 %150, %130
  store i32 %sub.i, ptr %num_contacts_left9.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i)
  %cmp48.i = icmp slt i32 %sub.i, 1
  br i1 %cmp48.i, label %if.then50.i, label %for.end.i.cleanup_crit_edge

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then50.i:                                      ; preds = %for.end.i
  %151 = ptrtoint ptr %num_contacts_left9.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 0, ptr %num_contacts_left9.i, align 4
  %152 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %touch_input, align 4
  %touch_max1.i.i82 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 24
  %154 = ptrtoint ptr %touch_max1.i.i82 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %touch_max1.i.i82, align 4
  %156 = zext i32 %155 to i64
  call void @__sanitizer_cov_trace_switch(i64 %156, ptr @__sancov_gen_cov_switch_values.253)
  switch i32 %155, label %for.cond.preheader.i.i86 [
    i32 0, label %if.then50.i.wacom_wac_finger_count_touches.exit.i_crit_edge
    i32 1, label %if.then2.i.i89
  ]

if.then50.i.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %if.then50.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

for.cond.preheader.i.i86:                         ; preds = %if.then50.i
  %mt.i.i83 = getelementptr inbounds %struct.input_dev, ptr %153, i32 0, i32 25
  %157 = ptrtoint ptr %mt.i.i83 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %mt.i.i83, align 4
  %num_slots.i.i84 = getelementptr inbounds %struct.input_mt, ptr %158, i32 0, i32 1
  %159 = ptrtoint ptr %num_slots.i.i84 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %num_slots.i.i84, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %160)
  %cmp627.i.i85 = icmp sgt i32 %160, 0
  br i1 %cmp627.i.i85, label %for.cond.preheader.i.i86.for.body.i.i100_crit_edge, label %for.cond.preheader.i.i86.wacom_wac_finger_count_touches.exit.i_crit_edge

for.cond.preheader.i.i86.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i86
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

for.cond.preheader.i.i86.for.body.i.i100_crit_edge: ; preds = %for.cond.preheader.i.i86
  br label %for.body.i.i100

if.then2.i.i89:                                   ; preds = %if.then50.i
  %arrayidx.i.i.i87 = getelementptr %struct.input_dev, ptr %153, i32 0, i32 27, i32 10
  %161 = ptrtoint ptr %arrayidx.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load volatile i32, ptr %arrayidx.i.i.i87, align 4
  %163 = and i32 %162, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %163)
  %tobool3.not.i.i88 = icmp eq i32 %163, 0
  br i1 %tobool3.not.i.i88, label %if.then2.i.i89.wacom_wac_finger_count_touches.exit.i_crit_edge, label %land.rhs.i.i91

if.then2.i.i89.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %if.then2.i.i89
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

land.rhs.i.i91:                                   ; preds = %if.then2.i.i89
  %164 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %164)
  %tobool.not.i.i.i90 = icmp eq i8 %164, 0
  br i1 %tobool.not.i.i.i90, label %land.rhs.i.i91.wacom_wac_finger_count_touches.exit.i_crit_edge, label %cond.true.i.i.i92

land.rhs.i.i91.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %land.rhs.i.i91
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

cond.true.i.i.i92:                                ; preds = %land.rhs.i.i91
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %165 = ptrtoint ptr %shared.i.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %shared.i.i.i, align 4
  %167 = ptrtoint ptr %166 to i32
  call void @__asan_load1_noabort(i32 %167)
  %168 = load i8, ptr %166, align 4, !range !727
  %169 = xor i8 %168, 1
  %170 = zext i8 %169 to i32
  br label %wacom_wac_finger_count_touches.exit.i

for.body.i.i100:                                  ; preds = %for.body.i.i100.for.body.i.i100_crit_edge, %for.cond.preheader.i.i86.for.body.i.i100_crit_edge
  %i.029.i.i93 = phi i32 [ %inc12.i.i98, %for.body.i.i100.for.body.i.i100_crit_edge ], [ 0, %for.cond.preheader.i.i86.for.body.i.i100_crit_edge ]
  %count.028.i.i94 = phi i32 [ %spec.select.i.i97, %for.body.i.i100.for.body.i.i100_crit_edge ], [ 0, %for.cond.preheader.i.i86.for.body.i.i100_crit_edge ]
  %arrayidx.i24.i.i95 = getelementptr %struct.input_mt, ptr %158, i32 0, i32 6, i32 %i.029.i.i93, i32 0, i32 9
  %171 = ptrtoint ptr %arrayidx.i24.i.i95 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %arrayidx.i24.i.i95, align 4
  %173 = xor i32 %172, -1
  %.lobit.not.i.i96 = lshr i32 %173, 31
  %spec.select.i.i97 = add i32 %.lobit.not.i.i96, %count.028.i.i94
  %inc12.i.i98 = add nuw nsw i32 %i.029.i.i93, 1
  %exitcond.not.i.i99 = icmp eq i32 %inc12.i.i98, %160
  br i1 %exitcond.not.i.i99, label %for.body.i.i100.wacom_wac_finger_count_touches.exit.i_crit_edge, label %for.body.i.i100.for.body.i.i100_crit_edge

for.body.i.i100.for.body.i.i100_crit_edge:        ; preds = %for.body.i.i100
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i.i100

for.body.i.i100.wacom_wac_finger_count_touches.exit.i_crit_edge: ; preds = %for.body.i.i100
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_wac_finger_count_touches.exit.i

wacom_wac_finger_count_touches.exit.i:            ; preds = %for.body.i.i100.wacom_wac_finger_count_touches.exit.i_crit_edge, %cond.true.i.i.i92, %land.rhs.i.i91.wacom_wac_finger_count_touches.exit.i_crit_edge, %if.then2.i.i89.wacom_wac_finger_count_touches.exit.i_crit_edge, %for.cond.preheader.i.i86.wacom_wac_finger_count_touches.exit.i_crit_edge, %if.then50.i.wacom_wac_finger_count_touches.exit.i_crit_edge
  %retval.0.i.i101 = phi i32 [ %155, %if.then50.i.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ 0, %if.then2.i.i89.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ %170, %cond.true.i.i.i92 ], [ 1, %land.rhs.i.i91.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ 0, %for.cond.preheader.i.i86.wacom_wac_finger_count_touches.exit.i_crit_edge ], [ %spec.select.i.i97, %for.body.i.i100.wacom_wac_finger_count_touches.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i101)
  %tobool53.i = icmp ne i32 %retval.0.i.i101, 0
  %shared.i102 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %174 = ptrtoint ptr %shared.i102 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %shared.i102, align 4
  %touch_down.i103 = getelementptr inbounds %struct.wacom_shared, ptr %175, i32 0, i32 1
  %frombool54.i = zext i1 %tobool53.i to i8
  %176 = ptrtoint ptr %touch_down.i103 to i32
  call void @__asan_store1_noabort(i32 %176)
  store i8 %frombool54.i, ptr %touch_down.i103, align 1
  br label %cleanup

cleanup:                                          ; preds = %wacom_wac_finger_count_touches.exit.i, %for.end.i.cleanup_crit_edge, %sw.bb43, %sw.default.cleanup_crit_edge, %wacom_tpc_mt_touch.exit, %sw.bb, %if.else.cleanup_crit_edge, %if.then12.i, %delay_pen_events.exit.i.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge
  %retval.0 = phi i32 [ %call44, %sw.bb43 ], [ 1, %wacom_tpc_mt_touch.exit ], [ %call38, %sw.bb ], [ 0, %if.else.cleanup_crit_edge ], [ 0, %sw.default.cleanup_crit_edge ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 1, %if.then12.i ], [ 0, %delay_pen_events.exit.i.cleanup_crit_edge ], [ 1, %for.end.i.cleanup_crit_edge ], [ 1, %wacom_wac_finger_count_touches.exit.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_bamboo_pad_irq(ptr noundef %wacom, i32 noundef %len) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %len to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.254)
  switch i32 %len, label %entry.cleanup_crit_edge [
    i32 32, label %entry.lor.lhs.false3_crit_edge
    i32 64, label %entry.lor.lhs.false3_crit_edge26
  ]

entry.lor.lhs.false3_crit_edge26:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %lor.lhs.false3

entry.lor.lhs.false3_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %lor.lhs.false3

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

lor.lhs.false3:                                   ; preds = %entry.lor.lhs.false3_crit_edge, %entry.lor.lhs.false3_crit_edge26
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %1 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %2)
  %cmp4.not = icmp eq i8 %2, 16
  br i1 %cmp4.not, label %if.end, label %lor.lhs.false3.cleanup_crit_edge

lor.lhs.false3.cleanup_crit_edge:                 ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false3
  %arrayidx6 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %3 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx6, align 1
  %5 = and i8 %4, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.end.if.end10_crit_edge, label %if.then8

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end10

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %6 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 3, ptr %arrayidx6, align 1
  %shared.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %7 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %shared.i, align 4
  %pen.i = getelementptr inbounds %struct.wacom_shared, ptr %8, i32 0, i32 5
  %9 = ptrtoint ptr %pen.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pen.i, align 4
  %call.i = tail call i32 @hid_input_report(ptr noundef %10, i32 noundef 0, ptr noundef %arrayidx6, i32 noundef 8, i32 noundef 1) #8
  %11 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %4, ptr %arrayidx6, align 1
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end.if.end10_crit_edge
  %12 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx6, align 1
  %14 = and i8 %13, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool14.not = icmp eq i8 %14, 0
  br i1 %tobool14.not, label %if.end10.cleanup_crit_edge, label %if.then15

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then15:                                        ; preds = %if.end10
  %arrayidx16 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 9
  %touch_input.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 13
  %15 = ptrtoint ptr %touch_input.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %touch_input.i, align 4
  %17 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx16, align 1
  %touch_max.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 24
  %19 = ptrtoint ptr %touch_max.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %touch_max.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp10.not.i = icmp eq i32 %20, 0
  %.pre.i = zext i8 %18 to i32
  br i1 %cmp10.not.i, label %if.then15.for.end.i_crit_edge, label %for.body.lr.ph.i

if.then15.for.end.i_crit_edge:                    ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.then15
  %shared.i.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %add.ptr.i = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 10
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %id.011.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %shl.i = shl nuw i32 1, %id.011.i
  %and.i = and i32 %shl.i, %.pre.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.inc.critedge.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %for.body.i
  %21 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.i.i = icmp eq i8 %21, 0
  br i1 %tobool.not.i.i, label %if.end.critedge.i, label %cond.true.i.i

cond.true.i.i:                                    ; preds = %land.rhs.i
  %22 = ptrtoint ptr %shared.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %shared.i.i, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %23, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool1.not.i.i = icmp eq i8 %25, 0
  tail call void @input_event(ptr noundef %16, i32 noundef 3, i32 noundef 47, i32 noundef %id.011.i) #8
  %call3.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %16, i32 noundef 0, i1 noundef zeroext %tobool1.not.i.i) #8
  br i1 %tobool1.not.i.i, label %cond.true.i.i.if.end.i_crit_edge, label %cond.true.i.i.for.inc.i_crit_edge

cond.true.i.i.for.inc.i_crit_edge:                ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc.i

cond.true.i.i.if.end.i_crit_edge:                 ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

if.end.critedge.i:                                ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %16, i32 noundef 3, i32 noundef 47, i32 noundef %id.011.i) #8
  %call3.c9.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %16, i32 noundef 0, i1 noundef zeroext true) #8
  br label %if.end.i

if.end.i:                                         ; preds = %if.end.critedge.i, %cond.true.i.i.if.end.i_crit_edge
  %mul.i = mul i32 %id.011.i, 3
  %add.ptr5.i = getelementptr i8, ptr %add.ptr.i, i32 %mul.i
  %26 = ptrtoint ptr %add.ptr5.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %add.ptr5.i, align 1
  %conv7.i = zext i8 %27 to i32
  %arrayidx8.i = getelementptr i8, ptr %add.ptr5.i, i32 1
  %28 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx8.i, align 1
  %conv9.i = zext i8 %29 to i32
  %and10.i = shl nuw nsw i32 %conv9.i, 8
  %shl11.i = and i32 %and10.i, 3840
  %or.i = or i32 %shl11.i, %conv7.i
  %arrayidx12.i = getelementptr i8, ptr %add.ptr5.i, i32 2
  %30 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx12.i, align 1
  %conv13.i = zext i8 %31 to i32
  %shl14.i = shl nuw nsw i32 %conv13.i, 4
  %32 = lshr i32 %conv9.i, 4
  %or17.i = or i32 %shl14.i, %32
  tail call void @input_event(ptr noundef %16, i32 noundef 3, i32 noundef 53, i32 noundef %or.i) #8
  tail call void @input_event(ptr noundef %16, i32 noundef 3, i32 noundef 54, i32 noundef %or17.i) #8
  br label %for.inc.i

for.inc.critedge.i:                               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %16, i32 noundef 3, i32 noundef 47, i32 noundef %id.011.i) #8
  %call3.c.i = tail call zeroext i1 @input_mt_report_slot_state(ptr noundef %16, i32 noundef 0, i1 noundef zeroext false) #8
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.inc.critedge.i, %if.end.i, %cond.true.i.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %id.011.i, 1
  %33 = ptrtoint ptr %touch_max.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %touch_max.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %34
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then15.for.end.i_crit_edge
  tail call void @input_mt_sync_frame(ptr noundef %16) #8
  %and19.i = lshr i32 %.pre.i, 6
  %and19.lobit.i = and i32 %and19.i, 1
  tail call void @input_event(ptr noundef %16, i32 noundef 1, i32 noundef 272, i32 noundef %and19.lobit.i) #8
  %and21.lobit.i = lshr i32 %.pre.i, 7
  tail call void @input_event(ptr noundef %16, i32 noundef 1, i32 noundef 273, i32 noundef %and21.lobit.i) #8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool22.not.i = icmp eq i8 %18, 0
  br i1 %tobool22.not.i, label %for.end.i.wacom_bamboo_pad_touch_event.exit_crit_edge, label %land.rhs23.i

for.end.i.wacom_bamboo_pad_touch_event.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_bamboo_pad_touch_event.exit

land.rhs23.i:                                     ; preds = %for.end.i
  %35 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool.not.i3.i = icmp eq i8 %35, 0
  br i1 %tobool.not.i3.i, label %land.rhs23.i.wacom_bamboo_pad_touch_event.exit_crit_edge, label %cond.true.i6.i

land.rhs23.i.wacom_bamboo_pad_touch_event.exit_crit_edge: ; preds = %land.rhs23.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_bamboo_pad_touch_event.exit

cond.true.i6.i:                                   ; preds = %land.rhs23.i
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i4.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %36 = ptrtoint ptr %shared.i4.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %shared.i4.i, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %37, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool1.not.i5.i = icmp eq i8 %39, 0
  br label %wacom_bamboo_pad_touch_event.exit

wacom_bamboo_pad_touch_event.exit:                ; preds = %cond.true.i6.i, %land.rhs23.i.wacom_bamboo_pad_touch_event.exit_crit_edge, %for.end.i.wacom_bamboo_pad_touch_event.exit_crit_edge
  %40 = phi i1 [ false, %for.end.i.wacom_bamboo_pad_touch_event.exit_crit_edge ], [ %tobool1.not.i5.i, %cond.true.i6.i ], [ true, %land.rhs23.i.wacom_bamboo_pad_touch_event.exit_crit_edge ]
  %shared.i25 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %41 = ptrtoint ptr %shared.i25 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %shared.i25, align 4
  %touch_down.i = getelementptr inbounds %struct.wacom_shared, ptr %42, i32 0, i32 1
  %frombool27.i = zext i1 %40 to i8
  %43 = ptrtoint ptr %touch_down.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %frombool27.i, ptr %touch_down.i, align 1
  br label %cleanup

cleanup:                                          ; preds = %wacom_bamboo_pad_touch_event.exit, %if.end10.cleanup_crit_edge, %lor.lhs.false3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %wacom_bamboo_pad_touch_event.exit ], [ 0, %entry.cleanup_crit_edge ], [ 0, %lor.lhs.false3.cleanup_crit_edge ], [ 0, %if.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_wireless_irq(ptr noundef %wacom, i32 noundef %len) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %len)
  %cmp.not = icmp eq i32 %len, 32
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %0 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -128, i8 %1)
  %cmp2.not = icmp eq i8 %1, -128
  br i1 %cmp2.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx4 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx4, align 1
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.end
  %shared = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %5 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %shared, align 4
  %type = getelementptr inbounds %struct.wacom_shared, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %type, align 4
  %9 = and i32 %8, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 38, i32 %9)
  %switch = icmp eq i32 %9, 38
  br i1 %switch, label %land.lhs.true, label %if.then6.if.end27_crit_edge

if.then6.if.end27_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end27

land.lhs.true:                                    ; preds = %if.then6
  %touch_input = getelementptr inbounds %struct.wacom_shared, ptr %6, i32 0, i32 4
  %10 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %touch_input, align 4
  %tobool15.not = icmp eq ptr %11, null
  br i1 %tobool15.not, label %land.lhs.true.if.end27_crit_edge, label %land.lhs.true16

land.lhs.true.if.end27_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end27

land.lhs.true16:                                  ; preds = %land.lhs.true
  %touch_max = getelementptr inbounds %struct.wacom_shared, ptr %6, i32 0, i32 2
  %12 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %touch_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool18.not = icmp eq i32 %13, 0
  br i1 %tobool18.not, label %land.lhs.true16.if.end27_crit_edge, label %if.then19

land.lhs.true16.if.end27_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end27

if.then19:                                        ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx22 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %14 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx22, align 1
  %16 = lshr i8 %15, 6
  %.lobit28 = and i8 %16, 1
  %17 = zext i8 %.lobit28 to i32
  tail call void @input_event(ptr noundef nonnull %11, i32 noundef 5, i32 noundef 14, i32 noundef %17) #8
  %18 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %shared, align 4
  %touch_input26 = getelementptr inbounds %struct.wacom_shared, ptr %19, i32 0, i32 4
  %20 = ptrtoint ptr %touch_input26 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %touch_input26, align 4
  tail call void @input_event(ptr noundef %21, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  br label %if.end27

if.end27:                                         ; preds = %if.then19, %land.lhs.true16.if.end27_crit_edge, %land.lhs.true.if.end27_crit_edge, %if.then6.if.end27_crit_edge
  %arrayidx28 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 6
  %22 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_loadN_noabort(i32 %22, i32 2)
  %23 = load i16, ptr %arrayidx28, align 1
  %conv29 = zext i16 %23 to i32
  %arrayidx30 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %24 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx30, align 1
  %26 = and i8 %25, 63
  %27 = zext i8 %26 to i16
  %div.lhs.trunc = mul nuw nsw i16 %27, 100
  %div26 = udiv i16 %div.lhs.trunc, 31
  %div.zext = zext i16 %div26 to i32
  %pid38 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 16
  %28 = ptrtoint ptr %pid38 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pid38, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %conv29)
  %cmp39.not = icmp eq i32 %29, %conv29
  br i1 %cmp39.not, label %if.end27.if.end43_crit_edge, label %if.then41

if.end27.if.end43_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end43

if.then41:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #10
  %30 = ptrtoint ptr %pid38 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %conv29, ptr %pid38, align 8
  %mode_change_work.i = getelementptr i8, ptr %wacom, i32 1008
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %31 = load ptr, ptr @system_wq, align 4
  %call.i.i12.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %31, ptr noundef %mode_change_work.i) #8
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end27.if.end43_crit_edge
  %bat_status3.i.i = getelementptr i8, ptr %wacom, i32 1432
  %32 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %bat_status3.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %cmp.not.i.i = icmp eq i32 %33, -1
  br i1 %cmp.not.i.i, label %lor.lhs.false.i.i, label %if.end43.if.then.i.i_crit_edge

if.end43.if.then.i.i_crit_edge:                   ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.end43
  %battery_capacity.i.i = getelementptr i8, ptr %wacom, i32 1436
  %34 = ptrtoint ptr %battery_capacity.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %battery_capacity.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %div.zext)
  %cmp4.not.i.i = icmp eq i32 %35, %div.zext
  br i1 %cmp4.not.i.i, label %lor.lhs.false5.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false5.i.i:                               ; preds = %lor.lhs.false.i.i
  %bat_charging6.i.i = getelementptr i8, ptr %wacom, i32 1440
  %36 = ptrtoint ptr %bat_charging6.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %bat_charging6.i.i, align 4
  %.lobit27 = lshr i8 %25, 7
  %38 = zext i8 %.lobit27 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %38)
  %cmp7.not.i.i = icmp eq i32 %37, %38
  br i1 %cmp7.not.i.i, label %lor.lhs.false9.i.i, label %lor.lhs.false5.i.i.if.then.i.i_crit_edge

lor.lhs.false5.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false5.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.lhs.false9.i.i:                               ; preds = %lor.lhs.false5.i.i
  %bat_connected10.i.i = getelementptr i8, ptr %wacom, i32 1444
  %39 = ptrtoint ptr %bat_connected10.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %bat_connected10.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %40)
  %cmp13.not.i.i = icmp eq i32 %40, 1
  br i1 %cmp13.not.i.i, label %lor.rhs.i.i, label %lor.lhs.false9.i.i.if.then.i.i_crit_edge

lor.lhs.false9.i.i.if.then.i.i_crit_edge:         ; preds = %lor.lhs.false9.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i:                                      ; preds = %lor.lhs.false9.i.i
  %ps_connected15.i.i = getelementptr i8, ptr %wacom, i32 1448
  %41 = ptrtoint ptr %ps_connected15.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ps_connected15.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp18.not.i.i = icmp eq i32 %42, 0
  br i1 %cmp18.not.i.i, label %lor.rhs.i.i.cleanup_crit_edge, label %lor.rhs.i.i.if.then.i.i_crit_edge

lor.rhs.i.i.if.then.i.i_crit_edge:                ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i

lor.rhs.i.i.cleanup_crit_edge:                    ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then.i.i:                                      ; preds = %lor.rhs.i.i.if.then.i.i_crit_edge, %lor.lhs.false9.i.i.if.then.i.i_crit_edge, %lor.lhs.false5.i.i.if.then.i.i_crit_edge, %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.end43.if.then.i.i_crit_edge
  %43 = ptrtoint ptr %bat_status3.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 -1, ptr %bat_status3.i.i, align 4
  %battery_capacity23.i.i = getelementptr i8, ptr %wacom, i32 1436
  %44 = ptrtoint ptr %battery_capacity23.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %div.zext, ptr %battery_capacity23.i.i, align 4
  %.lobit = lshr i8 %25, 7
  %45 = zext i8 %.lobit to i32
  %bat_charging26.i.i = getelementptr i8, ptr %wacom, i32 1440
  %46 = ptrtoint ptr %bat_charging26.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %bat_charging26.i.i, align 4
  %bat_connected29.i.i = getelementptr i8, ptr %wacom, i32 1444
  %47 = ptrtoint ptr %bat_connected29.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 1, ptr %bat_connected29.i.i, align 4
  %ps_connected32.i.i = getelementptr i8, ptr %wacom, i32 1448
  %48 = ptrtoint ptr %ps_connected32.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %ps_connected32.i.i, align 4
  %battery33.i.i = getelementptr i8, ptr %wacom, i32 1364
  %49 = ptrtoint ptr %battery33.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %battery33.i.i, align 4
  %tobool34.not.i.i = icmp eq ptr %50, null
  br i1 %tobool34.not.i.i, label %if.then.i.i.cleanup_crit_edge, label %if.then.i.i.cleanup.sink.split_crit_edge

if.then.i.i.cleanup.sink.split_crit_edge:         ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.sink.split

if.then.i.i.cleanup_crit_edge:                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.else:                                          ; preds = %if.end
  %pid45 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 16
  %51 = ptrtoint ptr %pid45 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %pid45, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %cmp46.not = icmp eq i32 %52, 0
  br i1 %cmp46.not, label %if.else.cleanup_crit_edge, label %if.then48

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then48:                                        ; preds = %if.else
  %53 = ptrtoint ptr %pid45 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %pid45, align 8
  %mode_change_work.i1 = getelementptr i8, ptr %wacom, i32 1008
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %54 = load ptr, ptr @system_wq, align 4
  %call.i.i12.i2 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %54, ptr noundef %mode_change_work.i1) #8
  %bat_status3.i.i3 = getelementptr i8, ptr %wacom, i32 1432
  %55 = ptrtoint ptr %bat_status3.i.i3 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %bat_status3.i.i3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %cmp.not.i.i4 = icmp eq i32 %56, 0
  br i1 %cmp.not.i.i4, label %lor.lhs.false.i.i7, label %if.then48.if.then.i.i23_crit_edge

if.then48.if.then.i.i23_crit_edge:                ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.lhs.false.i.i7:                               ; preds = %if.then48
  %battery_capacity.i.i5 = getelementptr i8, ptr %wacom, i32 1436
  %57 = ptrtoint ptr %battery_capacity.i.i5 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %battery_capacity.i.i5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp4.not.i.i6 = icmp eq i32 %58, 0
  br i1 %cmp4.not.i.i6, label %lor.lhs.false5.i.i10, label %lor.lhs.false.i.i7.if.then.i.i23_crit_edge

lor.lhs.false.i.i7.if.then.i.i23_crit_edge:       ; preds = %lor.lhs.false.i.i7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.lhs.false5.i.i10:                             ; preds = %lor.lhs.false.i.i7
  %bat_charging6.i.i8 = getelementptr i8, ptr %wacom, i32 1440
  %59 = ptrtoint ptr %bat_charging6.i.i8 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %bat_charging6.i.i8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp7.not.i.i9 = icmp eq i32 %60, 0
  br i1 %cmp7.not.i.i9, label %lor.lhs.false9.i.i13, label %lor.lhs.false5.i.i10.if.then.i.i23_crit_edge

lor.lhs.false5.i.i10.if.then.i.i23_crit_edge:     ; preds = %lor.lhs.false5.i.i10
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.lhs.false9.i.i13:                             ; preds = %lor.lhs.false5.i.i10
  %bat_connected10.i.i11 = getelementptr i8, ptr %wacom, i32 1444
  %61 = ptrtoint ptr %bat_connected10.i.i11 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %bat_connected10.i.i11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %cmp13.not.i.i12 = icmp eq i32 %62, 0
  br i1 %cmp13.not.i.i12, label %lor.rhs.i.i16, label %lor.lhs.false9.i.i13.if.then.i.i23_crit_edge

lor.lhs.false9.i.i13.if.then.i.i23_crit_edge:     ; preds = %lor.lhs.false9.i.i13
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.rhs.i.i16:                                    ; preds = %lor.lhs.false9.i.i13
  %ps_connected15.i.i14 = getelementptr i8, ptr %wacom, i32 1448
  %63 = ptrtoint ptr %ps_connected15.i.i14 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %ps_connected15.i.i14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp18.not.i.i15 = icmp eq i32 %64, 0
  br i1 %cmp18.not.i.i15, label %lor.rhs.i.i16.cleanup_crit_edge, label %lor.rhs.i.i16.if.then.i.i23_crit_edge

lor.rhs.i.i16.if.then.i.i23_crit_edge:            ; preds = %lor.rhs.i.i16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i.i23

lor.rhs.i.i16.cleanup_crit_edge:                  ; preds = %lor.rhs.i.i16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.then.i.i23:                                    ; preds = %lor.rhs.i.i16.if.then.i.i23_crit_edge, %lor.lhs.false9.i.i13.if.then.i.i23_crit_edge, %lor.lhs.false5.i.i10.if.then.i.i23_crit_edge, %lor.lhs.false.i.i7.if.then.i.i23_crit_edge, %if.then48.if.then.i.i23_crit_edge
  %battery33.i.i21 = getelementptr i8, ptr %wacom, i32 1364
  %65 = call ptr @memset(ptr %bat_status3.i.i3, i32 0, i32 20)
  %66 = ptrtoint ptr %battery33.i.i21 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %battery33.i.i21, align 4
  %tobool34.not.i.i22 = icmp eq ptr %67, null
  br i1 %tobool34.not.i.i22, label %if.then.i.i23.cleanup_crit_edge, label %if.then.i.i23.cleanup.sink.split_crit_edge

if.then.i.i23.cleanup.sink.split_crit_edge:       ; preds = %if.then.i.i23
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup.sink.split

if.then.i.i23.cleanup_crit_edge:                  ; preds = %if.then.i.i23
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.then.i.i23.cleanup.sink.split_crit_edge, %if.then.i.i.cleanup.sink.split_crit_edge
  %.sink = phi ptr [ %50, %if.then.i.i.cleanup.sink.split_crit_edge ], [ %67, %if.then.i.i23.cleanup.sink.split_crit_edge ]
  tail call void @power_supply_changed(ptr noundef nonnull %.sink) #8
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.then.i.i23.cleanup_crit_edge, %lor.rhs.i.i16.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then.i.i.cleanup_crit_edge, %lor.rhs.i.i.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_remote_status_irq(ptr noundef %wacom_wac) unnamed_addr #2 align 64 {
entry:
  %remote_data = alloca %struct.wacom_remote_data, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4
  %remote2 = getelementptr i8, ptr %wacom_wac, i32 1240
  %0 = ptrtoint ptr %remote2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %remote2, align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %remote_data) #8
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %3)
  %cmp.not = icmp eq i8 %3, 16
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds i8, ptr %remote_data, i32 4
  %5 = call ptr @memset(ptr %4, i32 0, i32 36)
  %arrayidx6 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 6
  %6 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx6, align 1
  %conv7 = zext i8 %7 to i32
  %shl = shl nuw nsw i32 %conv7, 16
  %arrayidx9 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 5
  %8 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx9, align 1
  %conv10 = zext i8 %9 to i32
  %shl11 = shl nuw nsw i32 %conv10, 8
  %add12 = or i32 %shl11, %shl
  %arrayidx14 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 4
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx14, align 1
  %conv15 = zext i8 %11 to i32
  %add16 = or i32 %add12, %conv15
  %arrayidx18 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 2
  %12 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx18, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool = icmp ne i8 %13, 0
  %frombool = zext i1 %tobool to i8
  %14 = ptrtoint ptr %remote_data to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %add16, ptr %remote_data, align 4
  %connected25 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 0, i32 1
  %15 = ptrtoint ptr %connected25 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %frombool, ptr %connected25, align 4
  %arrayidx6.1 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 12
  %16 = ptrtoint ptr %arrayidx6.1 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx6.1, align 1
  %conv7.1 = zext i8 %17 to i32
  %shl.1 = shl nuw nsw i32 %conv7.1, 16
  %arrayidx9.1 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 11
  %18 = ptrtoint ptr %arrayidx9.1 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx9.1, align 1
  %conv10.1 = zext i8 %19 to i32
  %shl11.1 = shl nuw nsw i32 %conv10.1, 8
  %add12.1 = or i32 %shl11.1, %shl.1
  %arrayidx14.1 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 10
  %20 = ptrtoint ptr %arrayidx14.1 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx14.1, align 1
  %conv15.1 = zext i8 %21 to i32
  %add16.1 = or i32 %add12.1, %conv15.1
  %arrayidx18.1 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 8
  %22 = ptrtoint ptr %arrayidx18.1 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx18.1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.1 = icmp ne i8 %23, 0
  %frombool.1 = zext i1 %tobool.1 to i8
  %arrayidx20.1 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 1
  %24 = ptrtoint ptr %arrayidx20.1 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %add16.1, ptr %arrayidx20.1, align 4
  %connected25.1 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 1, i32 1
  %25 = ptrtoint ptr %connected25.1 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %frombool.1, ptr %connected25.1, align 4
  %arrayidx6.2 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 18
  %26 = ptrtoint ptr %arrayidx6.2 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx6.2, align 1
  %conv7.2 = zext i8 %27 to i32
  %shl.2 = shl nuw nsw i32 %conv7.2, 16
  %arrayidx9.2 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 17
  %28 = ptrtoint ptr %arrayidx9.2 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx9.2, align 1
  %conv10.2 = zext i8 %29 to i32
  %shl11.2 = shl nuw nsw i32 %conv10.2, 8
  %add12.2 = or i32 %shl11.2, %shl.2
  %arrayidx14.2 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 16
  %30 = ptrtoint ptr %arrayidx14.2 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx14.2, align 1
  %conv15.2 = zext i8 %31 to i32
  %add16.2 = or i32 %add12.2, %conv15.2
  %arrayidx18.2 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 14
  %32 = ptrtoint ptr %arrayidx18.2 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx18.2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.2 = icmp ne i8 %33, 0
  %frombool.2 = zext i1 %tobool.2 to i8
  %arrayidx20.2 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 2
  %34 = ptrtoint ptr %arrayidx20.2 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %add16.2, ptr %arrayidx20.2, align 4
  %connected25.2 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 2, i32 1
  %35 = ptrtoint ptr %connected25.2 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %frombool.2, ptr %connected25.2, align 4
  %arrayidx6.3 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 24
  %36 = ptrtoint ptr %arrayidx6.3 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx6.3, align 1
  %conv7.3 = zext i8 %37 to i32
  %shl.3 = shl nuw nsw i32 %conv7.3, 16
  %arrayidx9.3 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 23
  %38 = ptrtoint ptr %arrayidx9.3 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx9.3, align 1
  %conv10.3 = zext i8 %39 to i32
  %shl11.3 = shl nuw nsw i32 %conv10.3, 8
  %add12.3 = or i32 %shl11.3, %shl.3
  %arrayidx14.3 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 22
  %40 = ptrtoint ptr %arrayidx14.3 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %arrayidx14.3, align 1
  %conv15.3 = zext i8 %41 to i32
  %add16.3 = or i32 %add12.3, %conv15.3
  %arrayidx18.3 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 20
  %42 = ptrtoint ptr %arrayidx18.3 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %arrayidx18.3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool.3 = icmp ne i8 %43, 0
  %frombool.3 = zext i1 %tobool.3 to i8
  %arrayidx20.3 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 3
  %44 = ptrtoint ptr %arrayidx20.3 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %add16.3, ptr %arrayidx20.3, align 4
  %connected25.3 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 3, i32 1
  %45 = ptrtoint ptr %connected25.3 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %frombool.3, ptr %connected25.3, align 4
  %arrayidx6.4 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 30
  %46 = ptrtoint ptr %arrayidx6.4 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %arrayidx6.4, align 1
  %conv7.4 = zext i8 %47 to i32
  %shl.4 = shl nuw nsw i32 %conv7.4, 16
  %arrayidx9.4 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 29
  %48 = ptrtoint ptr %arrayidx9.4 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %arrayidx9.4, align 1
  %conv10.4 = zext i8 %49 to i32
  %shl11.4 = shl nuw nsw i32 %conv10.4, 8
  %add12.4 = or i32 %shl11.4, %shl.4
  %arrayidx14.4 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 28
  %50 = ptrtoint ptr %arrayidx14.4 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %arrayidx14.4, align 1
  %conv15.4 = zext i8 %51 to i32
  %add16.4 = or i32 %add12.4, %conv15.4
  %arrayidx18.4 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 26
  %52 = ptrtoint ptr %arrayidx18.4 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %arrayidx18.4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool.4 = icmp ne i8 %53, 0
  %frombool.4 = zext i1 %tobool.4 to i8
  %arrayidx20.4 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 4
  %54 = ptrtoint ptr %arrayidx20.4 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %add16.4, ptr %arrayidx20.4, align 4
  %connected25.4 = getelementptr inbounds [5 x %struct.anon.79], ptr %remote_data, i32 0, i32 4, i32 1
  %55 = ptrtoint ptr %connected25.4 to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %frombool.4, ptr %connected25.4, align 4
  %call31 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %1) #8
  %remote_fifo = getelementptr inbounds %struct.wacom_remote, ptr %1, i32 0, i32 1
  %call35 = call i32 @__kfifo_in(ptr noundef %remote_fifo, ptr noundef nonnull %remote_data, i32 noundef 40) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %call35)
  %cmp36.not = icmp eq i32 %call35, 40
  call void @_raw_spin_unlock_irqrestore(ptr noundef %1, i32 noundef %call31) #8
  br i1 %cmp36.not, label %if.end43, label %if.then38

if.then38:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %hdev = getelementptr i8, ptr %wacom_wac, i32 912
  %56 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.hid_device, ptr %57, i32 0, i32 18
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.40) #11
  br label %cleanup

if.end43:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %mode_change_work.i = getelementptr i8, ptr %wacom_wac, i32 1096
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %58 = load ptr, ptr @system_wq, align 4
  %call.i.i12.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %58, ptr noundef %mode_change_work.i) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %if.then38, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %remote_data) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_remote_irq(ptr nocapture noundef %wacom_wac) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4
  %remote2 = getelementptr i8, ptr %wacom_wac, i32 1240
  %0 = ptrtoint ptr %remote2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %remote2, align 8
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %data1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %3)
  %cmp.not = icmp eq i8 %3, 17
  br i1 %cmp.not, label %if.end10, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @wacom_remote_irq.__UNIQUE_ID_ddebug251, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wacom_remote_irq, %if.then7)) #8
          to label %cleanup [label %if.then7], !srcloc !728

if.then7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #10
  %hdev = getelementptr i8, ptr %wacom_wac, i32 912
  %4 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.hid_device, ptr %5, i32 0, i32 18
  %6 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %data1, align 1
  %conv9 = zext i8 %7 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @wacom_remote_irq.__UNIQUE_ID_ddebug251, ptr noundef %dev, ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.42, i32 noundef %conv9) #8
  br label %cleanup

if.end10:                                         ; preds = %entry
  %arrayidx11 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 3
  %8 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx11, align 1
  %conv12 = zext i8 %9 to i32
  %arrayidx13 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 4
  %10 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx13, align 1
  %conv14 = zext i8 %11 to i32
  %shl = shl nuw nsw i32 %conv14, 8
  %add = or i32 %shl, %conv12
  %arrayidx15 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 5
  %12 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx15, align 1
  %conv16 = zext i8 %13 to i32
  %shl17 = shl nuw nsw i32 %conv16, 16
  %add18 = or i32 %add, %shl17
  %id = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 6
  %14 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 15, ptr %id, align 4
  %call26 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %1) #8
  %serial34 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 0, i32 1
  %15 = ptrtoint ptr %serial34 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %serial34, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %add18)
  %cmp35 = icmp eq i32 %16, %add18
  br i1 %cmp35, label %if.end10.lor.lhs.false_crit_edge, label %for.inc

if.end10.lor.lhs.false_crit_edge:                 ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #10
  br label %lor.lhs.false

for.inc:                                          ; preds = %if.end10
  %serial34.1 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 1, i32 1
  %17 = ptrtoint ptr %serial34.1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %serial34.1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %add18)
  %cmp35.1 = icmp eq i32 %18, %add18
  br i1 %cmp35.1, label %for.inc.lor.lhs.false_crit_edge, label %for.inc.1

for.inc.lor.lhs.false_crit_edge:                  ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #10
  br label %lor.lhs.false

for.inc.1:                                        ; preds = %for.inc
  %serial34.2 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 2, i32 1
  %19 = ptrtoint ptr %serial34.2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %serial34.2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %add18)
  %cmp35.2 = icmp eq i32 %20, %add18
  br i1 %cmp35.2, label %for.inc.1.lor.lhs.false_crit_edge, label %for.inc.2

for.inc.1.lor.lhs.false_crit_edge:                ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #10
  br label %lor.lhs.false

for.inc.2:                                        ; preds = %for.inc.1
  %serial34.3 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 3, i32 1
  %21 = ptrtoint ptr %serial34.3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %serial34.3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %add18)
  %cmp35.3 = icmp eq i32 %22, %add18
  br i1 %cmp35.3, label %for.inc.2.lor.lhs.false_crit_edge, label %for.inc.3

for.inc.2.lor.lhs.false_crit_edge:                ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #10
  br label %lor.lhs.false

for.inc.3:                                        ; preds = %for.inc.2
  %serial34.4 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 4, i32 1
  %23 = ptrtoint ptr %serial34.4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %serial34.4, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %add18)
  %cmp35.4 = icmp eq i32 %24, %add18
  br i1 %cmp35.4, label %for.inc.3.lor.lhs.false_crit_edge, label %for.inc.3.out_crit_edge

for.inc.3.out_crit_edge:                          ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #10
  br label %out

for.inc.3.lor.lhs.false_crit_edge:                ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #10
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.inc.3.lor.lhs.false_crit_edge, %for.inc.2.lor.lhs.false_crit_edge, %for.inc.1.lor.lhs.false_crit_edge, %for.inc.lor.lhs.false_crit_edge, %if.end10.lor.lhs.false_crit_edge
  %i.058.lcssa = phi i32 [ 0, %if.end10.lor.lhs.false_crit_edge ], [ 1, %for.inc.lor.lhs.false_crit_edge ], [ 2, %for.inc.1.lor.lhs.false_crit_edge ], [ 3, %for.inc.2.lor.lhs.false_crit_edge ], [ 4, %for.inc.3.lor.lhs.false_crit_edge ]
  %registered = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 3
  %25 = ptrtoint ptr %registered to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %registered, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool43.not = icmp eq i8 %26, 0
  br i1 %tobool43.not, label %lor.lhs.false.out_crit_edge, label %if.end45

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %out

if.end45:                                         ; preds = %lor.lhs.false
  %input48 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 2
  %27 = ptrtoint ptr %input48 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %input48, align 4
  %arrayidx49 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 9
  %29 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx49, align 1
  %31 = and i8 %30, 1
  %32 = zext i8 %31 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 256, i32 noundef %32) #8
  %33 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx49, align 1
  %35 = lshr i8 %34, 1
  %.lobit = and i8 %35, 1
  %36 = zext i8 %.lobit to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 257, i32 noundef %36) #8
  %37 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %arrayidx49, align 1
  %39 = lshr i8 %38, 2
  %.lobit41 = and i8 %39, 1
  %40 = zext i8 %.lobit41 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 258, i32 noundef %40) #8
  %41 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx49, align 1
  %43 = lshr i8 %42, 3
  %.lobit42 = and i8 %43, 1
  %44 = zext i8 %.lobit42 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 259, i32 noundef %44) #8
  %45 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx49, align 1
  %47 = lshr i8 %46, 4
  %.lobit43 = and i8 %47, 1
  %48 = zext i8 %.lobit43 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 260, i32 noundef %48) #8
  %49 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx49, align 1
  %51 = lshr i8 %50, 5
  %.lobit44 = and i8 %51, 1
  %52 = zext i8 %.lobit44 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 261, i32 noundef %52) #8
  %53 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %arrayidx49, align 1
  %55 = lshr i8 %54, 6
  %.lobit45 = and i8 %55, 1
  %56 = zext i8 %.lobit45 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 262, i32 noundef %56) #8
  %57 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %arrayidx49, align 1
  %.lobit46 = lshr i8 %58, 7
  %59 = zext i8 %.lobit46 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 263, i32 noundef %59) #8
  %arrayidx72 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 10
  %60 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %arrayidx72, align 1
  %62 = and i8 %61, 1
  %63 = zext i8 %62 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 264, i32 noundef %63) #8
  %64 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %arrayidx72, align 1
  %66 = lshr i8 %65, 1
  %.lobit47 = and i8 %66, 1
  %67 = zext i8 %.lobit47 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 265, i32 noundef %67) #8
  %68 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %arrayidx72, align 1
  %70 = lshr i8 %69, 2
  %.lobit48 = and i8 %70, 1
  %71 = zext i8 %.lobit48 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 304, i32 noundef %71) #8
  %72 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %arrayidx72, align 1
  %74 = lshr i8 %73, 3
  %.lobit49 = and i8 %74, 1
  %75 = zext i8 %.lobit49 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 305, i32 noundef %75) #8
  %76 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %arrayidx72, align 1
  %78 = lshr i8 %77, 4
  %.lobit50 = and i8 %78, 1
  %79 = zext i8 %.lobit50 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 306, i32 noundef %79) #8
  %80 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %arrayidx72, align 1
  %82 = lshr i8 %81, 5
  %.lobit51 = and i8 %82, 1
  %83 = zext i8 %.lobit51 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 307, i32 noundef %83) #8
  %84 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %arrayidx72, align 1
  %86 = lshr i8 %85, 6
  %.lobit52 = and i8 %86, 1
  %87 = zext i8 %.lobit52 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 308, i32 noundef %87) #8
  %88 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %arrayidx72, align 1
  %.lobit53 = lshr i8 %89, 7
  %90 = zext i8 %.lobit53 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 309, i32 noundef %90) #8
  %arrayidx96 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 11
  %91 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load1_noabort(i32 %91)
  %92 = load i8, ptr %arrayidx96, align 1
  %93 = and i8 %92, 1
  %94 = zext i8 %93 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 294, i32 noundef %94) #8
  %95 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %arrayidx96, align 1
  %97 = lshr i8 %96, 1
  %.lobit54 = and i8 %97, 1
  %98 = zext i8 %.lobit54 to i32
  tail call void @input_event(ptr noundef %28, i32 noundef 1, i32 noundef 295, i32 noundef %98) #8
  %arrayidx102 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 12
  %99 = ptrtoint ptr %arrayidx102 to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %arrayidx102, align 1
  %conv103 = zext i8 %100 to i32
  %and104 = and i32 %conv103, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and104)
  %tobool105.not = icmp eq i32 %and104, 0
  %and109 = and i32 %conv103, 127
  %sub = add nsw i32 %and109, -1
  %.sink = select i1 %tobool105.not, i32 0, i32 %sub
  tail call void @input_event(ptr noundef %28, i32 noundef 3, i32 noundef 8, i32 noundef %.sink) #8
  %arrayidx111 = getelementptr %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 4, i32 7
  %101 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %arrayidx111, align 1
  %conv112 = zext i8 %102 to i32
  %and113 = and i32 %conv112, 127
  %103 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %arrayidx49, align 1
  %105 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %arrayidx72, align 1
  %or1 = or i8 %106, %104
  %107 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %arrayidx96, align 1
  %109 = and i8 %108, 3
  %or1292 = or i8 %or1, %109
  %110 = ptrtoint ptr %arrayidx102 to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %arrayidx102, align 1
  %or1323 = or i8 %or1292, %111
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %or1323)
  %tobool133.not = icmp eq i8 %or1323, 0
  %.sink62 = select i1 %tobool133.not, i32 0, i32 15
  tail call void @input_event(ptr noundef %28, i32 noundef 3, i32 noundef 40, i32 noundef %.sink62) #8
  tail call void @input_event(ptr noundef %28, i32 noundef 4, i32 noundef 0, i32 noundef %add18) #8
  tail call void @input_event(ptr noundef %28, i32 noundef 0, i32 noundef 0, i32 noundef 0) #8
  %112 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load1_noabort(i32 %112)
  %113 = load i8, ptr %arrayidx96, align 1
  %114 = lshr i8 %113, 6
  %led = getelementptr i8, ptr %wacom_wac, i32 1292
  %115 = ptrtoint ptr %serial34 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %serial34, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %116, i32 %add18)
  %cmp147 = icmp eq i32 %116, %add18
  br i1 %cmp147, label %if.then149, label %if.end45.for.inc153_crit_edge

if.end45.for.inc153_crit_edge:                    ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc153

if.then149:                                       ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #10
  %117 = ptrtoint ptr %led to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %led, align 4
  %119 = ptrtoint ptr %118 to i32
  call void @__asan_store1_noabort(i32 %119)
  store i8 %114, ptr %118, align 4
  br label %for.inc153

for.inc153:                                       ; preds = %if.then149, %if.end45.for.inc153_crit_edge
  %serial146.1 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 1, i32 1
  %120 = ptrtoint ptr %serial146.1 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %serial146.1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %121, i32 %add18)
  %cmp147.1 = icmp eq i32 %121, %add18
  br i1 %cmp147.1, label %if.then149.1, label %for.inc153.for.inc153.1_crit_edge

for.inc153.for.inc153.1_crit_edge:                ; preds = %for.inc153
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc153.1

if.then149.1:                                     ; preds = %for.inc153
  call void @__sanitizer_cov_trace_pc() #10
  %122 = ptrtoint ptr %led to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %led, align 4
  %arrayidx151.1 = getelementptr %struct.wacom_group_leds, ptr %123, i32 1
  %124 = ptrtoint ptr %arrayidx151.1 to i32
  call void @__asan_store1_noabort(i32 %124)
  store i8 %114, ptr %arrayidx151.1, align 4
  br label %for.inc153.1

for.inc153.1:                                     ; preds = %if.then149.1, %for.inc153.for.inc153.1_crit_edge
  %serial146.2 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 2, i32 1
  %125 = ptrtoint ptr %serial146.2 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %serial146.2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %126, i32 %add18)
  %cmp147.2 = icmp eq i32 %126, %add18
  br i1 %cmp147.2, label %if.then149.2, label %for.inc153.1.for.inc153.2_crit_edge

for.inc153.1.for.inc153.2_crit_edge:              ; preds = %for.inc153.1
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc153.2

if.then149.2:                                     ; preds = %for.inc153.1
  call void @__sanitizer_cov_trace_pc() #10
  %127 = ptrtoint ptr %led to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %led, align 4
  %arrayidx151.2 = getelementptr %struct.wacom_group_leds, ptr %128, i32 2
  %129 = ptrtoint ptr %arrayidx151.2 to i32
  call void @__asan_store1_noabort(i32 %129)
  store i8 %114, ptr %arrayidx151.2, align 4
  br label %for.inc153.2

for.inc153.2:                                     ; preds = %if.then149.2, %for.inc153.1.for.inc153.2_crit_edge
  %serial146.3 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 3, i32 1
  %130 = ptrtoint ptr %serial146.3 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %serial146.3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %131, i32 %add18)
  %cmp147.3 = icmp eq i32 %131, %add18
  br i1 %cmp147.3, label %if.then149.3, label %for.inc153.2.for.inc153.3_crit_edge

for.inc153.2.for.inc153.3_crit_edge:              ; preds = %for.inc153.2
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc153.3

if.then149.3:                                     ; preds = %for.inc153.2
  call void @__sanitizer_cov_trace_pc() #10
  %132 = ptrtoint ptr %led to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %led, align 4
  %arrayidx151.3 = getelementptr %struct.wacom_group_leds, ptr %133, i32 3
  %134 = ptrtoint ptr %arrayidx151.3 to i32
  call void @__asan_store1_noabort(i32 %134)
  store i8 %114, ptr %arrayidx151.3, align 4
  br label %for.inc153.3

for.inc153.3:                                     ; preds = %if.then149.3, %for.inc153.2.for.inc153.3_crit_edge
  %serial146.4 = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 4, i32 1
  %135 = ptrtoint ptr %serial146.4 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %serial146.4, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %136, i32 %add18)
  %cmp147.4 = icmp eq i32 %136, %add18
  br i1 %cmp147.4, label %if.then149.4, label %for.inc153.3.for.inc153.4_crit_edge

for.inc153.3.for.inc153.4_crit_edge:              ; preds = %for.inc153.3
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.inc153.4

if.then149.4:                                     ; preds = %for.inc153.3
  call void @__sanitizer_cov_trace_pc() #10
  %137 = ptrtoint ptr %led to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %led, align 4
  %arrayidx151.4 = getelementptr %struct.wacom_group_leds, ptr %138, i32 4
  %139 = ptrtoint ptr %arrayidx151.4 to i32
  call void @__asan_store1_noabort(i32 %139)
  store i8 %114, ptr %arrayidx151.4, align 4
  br label %for.inc153.4

for.inc153.4:                                     ; preds = %if.then149.4, %for.inc153.3.for.inc153.4_crit_edge
  %bat_status3.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 4
  %140 = ptrtoint ptr %bat_status3.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %bat_status3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %141)
  %cmp.not.i = icmp eq i32 %141, -1
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %for.inc153.4.if.then.i_crit_edge

for.inc153.4.if.then.i_crit_edge:                 ; preds = %for.inc153.4
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %for.inc153.4
  %battery_capacity.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 5
  %142 = ptrtoint ptr %battery_capacity.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %battery_capacity.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %143, i32 %and113)
  %cmp4.not.i = icmp eq i32 %143, %and113
  br i1 %cmp4.not.i, label %lor.lhs.false5.i, label %lor.lhs.false.i.if.then.i_crit_edge

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %bat_charging6.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 6
  %144 = ptrtoint ptr %bat_charging6.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %bat_charging6.i, align 4
  %and116.lobit55 = lshr i32 %conv112, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %145, i32 %and116.lobit55)
  %cmp7.not.i = icmp eq i32 %145, %and116.lobit55
  br i1 %cmp7.not.i, label %lor.lhs.false9.i, label %lor.lhs.false5.i.if.then.i_crit_edge

lor.lhs.false5.i.if.then.i_crit_edge:             ; preds = %lor.lhs.false5.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i

lor.lhs.false9.i:                                 ; preds = %lor.lhs.false5.i
  %bat_connected10.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 7
  %146 = ptrtoint ptr %bat_connected10.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %bat_connected10.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %147)
  %cmp13.not.i = icmp eq i32 %147, 1
  br i1 %cmp13.not.i, label %lor.rhs.i, label %lor.lhs.false9.i.if.then.i_crit_edge

lor.lhs.false9.i.if.then.i_crit_edge:             ; preds = %lor.lhs.false9.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i

lor.rhs.i:                                        ; preds = %lor.lhs.false9.i
  %ps_connected15.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 8
  %148 = ptrtoint ptr %ps_connected15.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %ps_connected15.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %149, i32 %145)
  %cmp18.not.i = icmp eq i32 %149, %145
  br i1 %cmp18.not.i, label %lor.rhs.i.out_crit_edge, label %lor.rhs.i.if.then.i_crit_edge

lor.rhs.i.if.then.i_crit_edge:                    ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i

lor.rhs.i.out_crit_edge:                          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %out

if.then.i:                                        ; preds = %lor.rhs.i.if.then.i_crit_edge, %lor.lhs.false9.i.if.then.i_crit_edge, %lor.lhs.false5.i.if.then.i_crit_edge, %lor.lhs.false.i.if.then.i_crit_edge, %for.inc153.4.if.then.i_crit_edge
  %150 = ptrtoint ptr %bat_status3.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 -1, ptr %bat_status3.i, align 4
  %battery_capacity23.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 5
  %151 = ptrtoint ptr %battery_capacity23.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %and113, ptr %battery_capacity23.i, align 4
  %and116.lobit = lshr i32 %conv112, 7
  %bat_charging26.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 6
  %152 = ptrtoint ptr %bat_charging26.i to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 %and116.lobit, ptr %bat_charging26.i, align 4
  %bat_connected29.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 7
  %153 = ptrtoint ptr %bat_connected29.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 1, ptr %bat_connected29.i, align 4
  %ps_connected32.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 8
  %154 = ptrtoint ptr %ps_connected32.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 %and116.lobit, ptr %ps_connected32.i, align 4
  %battery33.i = getelementptr %struct.wacom_remote, ptr %1, i32 0, i32 3, i32 %i.058.lcssa, i32 4, i32 2
  %155 = ptrtoint ptr %battery33.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %battery33.i, align 4
  %tobool34.not.i = icmp eq ptr %156, null
  br i1 %tobool34.not.i, label %if.then.i.out_crit_edge, label %if.then35.i

if.then.i.out_crit_edge:                          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %out

if.then35.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @power_supply_changed(ptr noundef nonnull %156) #8
  br label %out

out:                                              ; preds = %if.then35.i, %if.then.i.out_crit_edge, %lor.rhs.i.out_crit_edge, %lor.lhs.false.out_crit_edge, %for.inc.3.out_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %1, i32 noundef %call26) #8
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then7, %do.body
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @wacom_setup_device_quirks(ptr noundef %wacom) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 5
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.255)
  switch i32 %1, label %lor.lhs.false9 [
    i32 2, label %entry.if.then_crit_edge
    i32 3, label %entry.if.then_crit_edge317
    i32 7, label %entry.if.then_crit_edge318
  ]

entry.if.then_crit_edge318:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

entry.if.then_crit_edge317:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

lor.lhs.false9:                                   ; preds = %entry
  %3 = add i32 %1, -10
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %3)
  %4 = icmp ult i32 %3, 27
  br i1 %4, label %lor.lhs.false9.if.then_crit_edge, label %lor.lhs.false9.if.end16_crit_edge

lor.lhs.false9.if.end16_crit_edge:                ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end16

lor.lhs.false9.if.then_crit_edge:                 ; preds = %lor.lhs.false9
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false9.if.then_crit_edge, %entry.if.then_crit_edge, %entry.if.then_crit_edge317, %entry.if.then_crit_edge318
  %device_type = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 13
  %5 = ptrtoint ptr %device_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %device_type, align 4
  %and = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then.if.end16_crit_edge, label %if.then14

if.then.if.end16_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end16

if.then14:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  %or = or i32 %6, 4
  %7 = ptrtoint ptr %device_type to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or, ptr %device_type, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.then.if.end16_crit_edge, %lor.lhs.false9.if.end16_crit_edge
  %device_type17 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 13
  %8 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %device_type17, align 4
  %and18 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  br i1 %tobool19.not, label %if.end16.if.end24_crit_edge, label %land.lhs.true20

if.end16.if.end24_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end24

land.lhs.true20:                                  ; preds = %if.end16
  %x_max = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 1
  %10 = ptrtoint ptr %x_max to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %x_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool21.not = icmp eq i32 %11, 0
  br i1 %tobool21.not, label %if.then22, label %land.lhs.true20.if.end24_crit_edge

land.lhs.true20.if.end24_crit_edge:               ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end24

if.then22:                                        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #10
  %12 = ptrtoint ptr %x_max to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1023, ptr %x_max, align 4
  %y_max = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 2
  %13 = ptrtoint ptr %y_max to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1023, ptr %y_max, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %land.lhs.true20.if.end24_crit_edge, %if.end16.if.end24_crit_edge
  %14 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.256)
  switch i32 %1, label %if.end24.if.end91_crit_edge [
    i32 41, label %if.end24.if.then36_crit_edge
    i32 40, label %if.end24.if.then36_crit_edge319
    i32 39, label %if.end24.if.then36_crit_edge320
    i32 38, label %if.end24.if.then36_crit_edge321
    i32 22, label %if.end24.if.then36_crit_edge322
    i32 21, label %if.end24.if.then36_crit_edge323
    i32 20, label %if.end24.if.then36_crit_edge324
    i32 19, label %if.end24.if.then36_crit_edge325
    i32 18, label %if.end24.if.then36_crit_edge326
    i32 17, label %if.end24.if.then36_crit_edge327
    i32 37, label %if.end24.land.lhs.true75_crit_edge
    i32 44, label %if.then84
    i32 46, label %if.end109.thread311
  ]

if.end24.land.lhs.true75_crit_edge:               ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true75

if.end24.if.then36_crit_edge327:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge326:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge325:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge324:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge323:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge322:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge321:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge320:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge319:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.then36_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then36

if.end24.if.end91_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end91

if.then36:                                        ; preds = %if.end24.if.then36_crit_edge, %if.end24.if.then36_crit_edge319, %if.end24.if.then36_crit_edge320, %if.end24.if.then36_crit_edge321, %if.end24.if.then36_crit_edge322, %if.end24.if.then36_crit_edge323, %if.end24.if.then36_crit_edge324, %if.end24.if.then36_crit_edge325, %if.end24.if.then36_crit_edge326, %if.end24.if.then36_crit_edge327
  %pktlen = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 27
  %15 = ptrtoint ptr %pktlen to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pktlen, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.257)
  switch i32 %16, label %if.then36.if.end72_crit_edge [
    i32 64, label %if.then38
    i32 20, label %if.then67
  ]

if.then36.if.end72_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end72

if.then38:                                        ; preds = %if.then36
  %touch_max = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 24
  %18 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %touch_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool39.not = icmp eq i32 %19, 0
  br i1 %tobool39.not, label %if.then38.if.end43_crit_edge, label %if.then40

if.then38.if.end43_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end43

if.then40:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #10
  %or42 = or i32 %9, 2
  %20 = ptrtoint ptr %device_type17 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or42, ptr %device_type17, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then40, %if.then38.if.end43_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 37, i32 %1)
  %cmp45 = icmp ugt i32 %1, 37
  br i1 %cmp45, label %if.end52, label %if.end43.if.else_crit_edge

if.end43.if.else_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else

if.end52:                                         ; preds = %if.end43
  %21 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %device_type17, align 4
  %or51 = or i32 %22, 4
  store i32 %or51, ptr %device_type17, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %1)
  %cmp54 = icmp eq i32 %1, 39
  br i1 %cmp54, label %if.end72.thread, label %if.end52.if.else_crit_edge

if.end52.if.else_crit_edge:                       ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.else

if.end72.thread:                                  ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #10
  %x_max56 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 1
  %23 = ptrtoint ptr %x_max56 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %x_max56, align 4
  %div = sdiv i32 %24, 10
  store i32 %div, ptr %x_max56, align 4
  %y_max58 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 2
  %25 = ptrtoint ptr %y_max58 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %y_max58, align 4
  %div59 = sdiv i32 %26, 10
  store i32 %div59, ptr %y_max58, align 4
  br label %sw.epilog

if.else:                                          ; preds = %if.end52.if.else_crit_edge, %if.end43.if.else_crit_edge
  %x_max61 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 1
  %27 = ptrtoint ptr %x_max61 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 4096, ptr %x_max61, align 4
  %y_max62 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 2
  %28 = ptrtoint ptr %y_max62 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 4096, ptr %y_max62, align 4
  br label %if.end72

if.then67:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #10
  %or69 = or i32 %9, 4
  %29 = ptrtoint ptr %device_type17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or69, ptr %device_type17, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then67, %if.else, %if.then36.if.end72_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 37, i32 %1)
  %cond = icmp eq i32 %1, 37
  br i1 %cond, label %if.end72.land.lhs.true75_crit_edge, label %if.end72.if.end91_crit_edge

if.end72.if.end91_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end91

if.end72.land.lhs.true75_crit_edge:               ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #10
  br label %land.lhs.true75

land.lhs.true75:                                  ; preds = %if.end72.land.lhs.true75_crit_edge, %if.end24.land.lhs.true75_crit_edge
  %pktlen76 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 27
  %30 = ptrtoint ptr %pktlen76 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pktlen76, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %31)
  %cmp77 = icmp eq i32 %31, 64
  br i1 %cmp77, label %if.then78, label %land.lhs.true75.sw.epilog_crit_edge

land.lhs.true75.sw.epilog_crit_edge:              ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.then78:                                        ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #10
  %32 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %device_type17, align 4
  %or80 = or i32 %33, 4
  store i32 %or80, ptr %device_type17, align 4
  br label %sw.epilog

if.then84:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  %34 = ptrtoint ptr %device_type17 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 2, ptr %device_type17, align 4
  br label %sw.epilog

if.end109.thread311:                              ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #10
  %35 = ptrtoint ptr %device_type17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 4, ptr %device_type17, align 4
  br label %sw.epilog

if.end91:                                         ; preds = %if.end72.if.end91_crit_edge, %if.end24.if.end91_crit_edge
  %.off = add i32 %1, -23
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then97, label %if.end101

if.then97:                                        ; preds = %if.end91
  %36 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %device_type17, align 4
  %or99 = or i32 %37, 7
  store i32 %or99, ptr %device_type17, align 4
  %quirks = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 23
  %38 = ptrtoint ptr %quirks to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %quirks, align 4
  %or100 = or i32 %39, 8
  store i32 %or100, ptr %quirks, align 4
  %40 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %40, ptr @__sancov_gen_cov_switch_values.258)
  switch i32 %1, label %if.then97.sw.epilog_crit_edge [
    i32 5, label %if.then97.sw.bb_crit_edge
    i32 6, label %if.then97.sw.bb_crit_edge328
    i32 7, label %if.then97.sw.bb_crit_edge329
    i32 8, label %if.then97.sw.bb_crit_edge330
    i32 26, label %if.then97.sw.bb_crit_edge331
    i32 27, label %if.then97.sw.bb_crit_edge332
    i32 28, label %if.then97.sw.bb_crit_edge333
    i32 29, label %if.then97.sw.bb_crit_edge334
    i32 30, label %if.then97.sw.bb_crit_edge335
    i32 31, label %if.then97.sw.bb_crit_edge336
    i32 32, label %if.then97.sw.bb_crit_edge337
    i32 33, label %if.then97.sw.bb_crit_edge338
    i32 34, label %if.then97.sw.bb_crit_edge339
    i32 35, label %if.then97.sw.bb_crit_edge340
    i32 42, label %if.then97.sw.bb_crit_edge341
    i32 43, label %if.then97.sw.bb_crit_edge342
    i32 47, label %if.then97.sw.bb_crit_edge343
    i32 48, label %if.then97.sw.bb_crit_edge344
    i32 49, label %if.then97.sw.bb_crit_edge345
    i32 50, label %if.then97.sw.bb_crit_edge346
    i32 51, label %if.then97.sw.bb_crit_edge347
    i32 52, label %if.then97.sw.bb_crit_edge348
  ]

if.then97.sw.bb_crit_edge348:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge347:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge346:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge345:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge344:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge343:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge342:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge341:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge340:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge339:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge338:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge337:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge336:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge335:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge334:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge333:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge332:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge331:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge330:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge329:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge328:                     ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.bb_crit_edge:                        ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.then97.sw.epilog_crit_edge:                    ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.end101:                                        ; preds = %if.end91
  %41 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.259)
  switch i32 %1, label %if.end101.sw.epilog_crit_edge [
    i32 25, label %if.end109.thread
    i32 5, label %if.end101.sw.bb_crit_edge
    i32 6, label %if.end101.sw.bb_crit_edge349
    i32 7, label %if.end101.sw.bb_crit_edge350
    i32 8, label %if.end101.sw.bb_crit_edge351
    i32 26, label %if.end101.sw.bb_crit_edge352
    i32 27, label %if.end101.sw.bb_crit_edge353
    i32 28, label %if.end101.sw.bb_crit_edge354
    i32 29, label %if.end101.sw.bb_crit_edge355
    i32 30, label %if.end101.sw.bb_crit_edge356
    i32 31, label %if.end101.sw.bb_crit_edge357
    i32 32, label %if.end101.sw.bb_crit_edge358
    i32 33, label %if.end101.sw.bb_crit_edge359
    i32 34, label %if.end101.sw.bb_crit_edge360
    i32 35, label %if.end101.sw.bb_crit_edge361
    i32 42, label %if.end101.sw.bb_crit_edge362
    i32 43, label %if.end101.sw.bb_crit_edge363
    i32 47, label %if.end101.sw.bb_crit_edge364
    i32 48, label %if.end101.sw.bb_crit_edge365
    i32 49, label %if.end101.sw.bb_crit_edge366
    i32 50, label %if.end101.sw.bb_crit_edge367
    i32 51, label %if.end101.sw.bb_crit_edge368
    i32 52, label %if.end101.sw.bb_crit_edge369
  ]

if.end101.sw.bb_crit_edge369:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge368:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge367:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge366:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge365:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge364:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge363:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge362:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge361:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge360:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge359:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge358:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge357:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge356:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge355:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge354:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge353:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge352:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge351:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge350:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge349:                     ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.bb_crit_edge:                        ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end101.sw.epilog_crit_edge:                    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

if.end109.thread:                                 ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #10
  %42 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %device_type17, align 4
  %or106 = or i32 %43, 5
  store i32 %or106, ptr %device_type17, align 4
  %quirks107 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 23
  %44 = ptrtoint ptr %quirks107 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %quirks107, align 4
  %or108 = or i32 %45, 8
  store i32 %or108, ptr %quirks107, align 4
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end101.sw.bb_crit_edge, %if.end101.sw.bb_crit_edge349, %if.end101.sw.bb_crit_edge350, %if.end101.sw.bb_crit_edge351, %if.end101.sw.bb_crit_edge352, %if.end101.sw.bb_crit_edge353, %if.end101.sw.bb_crit_edge354, %if.end101.sw.bb_crit_edge355, %if.end101.sw.bb_crit_edge356, %if.end101.sw.bb_crit_edge357, %if.end101.sw.bb_crit_edge358, %if.end101.sw.bb_crit_edge359, %if.end101.sw.bb_crit_edge360, %if.end101.sw.bb_crit_edge361, %if.end101.sw.bb_crit_edge362, %if.end101.sw.bb_crit_edge363, %if.end101.sw.bb_crit_edge364, %if.end101.sw.bb_crit_edge365, %if.end101.sw.bb_crit_edge366, %if.end101.sw.bb_crit_edge367, %if.end101.sw.bb_crit_edge368, %if.end101.sw.bb_crit_edge369, %if.then97.sw.bb_crit_edge, %if.then97.sw.bb_crit_edge328, %if.then97.sw.bb_crit_edge329, %if.then97.sw.bb_crit_edge330, %if.then97.sw.bb_crit_edge331, %if.then97.sw.bb_crit_edge332, %if.then97.sw.bb_crit_edge333, %if.then97.sw.bb_crit_edge334, %if.then97.sw.bb_crit_edge335, %if.then97.sw.bb_crit_edge336, %if.then97.sw.bb_crit_edge337, %if.then97.sw.bb_crit_edge338, %if.then97.sw.bb_crit_edge339, %if.then97.sw.bb_crit_edge340, %if.then97.sw.bb_crit_edge341, %if.then97.sw.bb_crit_edge342, %if.then97.sw.bb_crit_edge343, %if.then97.sw.bb_crit_edge344, %if.then97.sw.bb_crit_edge345, %if.then97.sw.bb_crit_edge346, %if.then97.sw.bb_crit_edge347, %if.then97.sw.bb_crit_edge348
  %46 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %device_type17, align 4
  %or112 = or i32 %47, 16
  store i32 %or112, ptr %device_type17, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %if.end109.thread, %if.end101.sw.epilog_crit_edge, %if.then97.sw.epilog_crit_edge, %if.end109.thread311, %if.then84, %if.then78, %land.lhs.true75.sw.epilog_crit_edge, %if.end72.thread
  %cmp88300304307309 = phi i1 [ false, %if.end109.thread ], [ false, %if.then97.sw.epilog_crit_edge ], [ false, %sw.bb ], [ true, %if.end109.thread311 ], [ false, %land.lhs.true75.sw.epilog_crit_edge ], [ false, %if.then78 ], [ false, %if.end72.thread ], [ false, %if.then84 ], [ false, %if.end101.sw.epilog_crit_edge ]
  %hdev = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 3
  %48 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %hdev, align 8
  %bus = getelementptr inbounds %struct.hid_device, ptr %49, i32 0, i32 8
  %50 = ptrtoint ptr %bus to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %bus, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 5, i16 %51)
  %cmp113 = icmp eq i16 %51, 5
  br i1 %cmp113, label %if.then115, label %sw.epilog.if.end118_crit_edge

sw.epilog.if.end118_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end118

if.then115:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #10
  %quirks116 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 23
  %52 = ptrtoint ptr %quirks116 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %quirks116, align 4
  %or117 = or i32 %53, 8
  store i32 %or117, ptr %quirks116, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.then115, %sw.epilog.if.end118_crit_edge
  %54 = and i32 %1, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %54)
  %switch282 = icmp eq i32 %54, 40
  br i1 %switch282, label %land.lhs.true126, label %if.end138

land.lhs.true126:                                 ; preds = %if.end118
  %pktlen127 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 27
  %55 = ptrtoint ptr %pktlen127 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %pktlen127, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %56)
  %cmp128 = icmp eq i32 %56, 20
  br i1 %cmp128, label %if.then130, label %land.lhs.true126.if.end150_crit_edge

land.lhs.true126.if.end150_crit_edge:             ; preds = %land.lhs.true126
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end150

if.then130:                                       ; preds = %land.lhs.true126
  call void @__sanitizer_cov_trace_pc() #10
  %x_max131 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 1
  %57 = ptrtoint ptr %x_max131 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %x_max131, align 4
  %shl = shl i32 %58, 5
  store i32 %shl, ptr %x_max131, align 4
  %y_max132 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 2
  %59 = ptrtoint ptr %y_max132 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %y_max132, align 4
  %shl133 = shl i32 %60, 5
  store i32 %shl133, ptr %y_max132, align 4
  %x_fuzz = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 18
  %61 = ptrtoint ptr %x_fuzz to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %x_fuzz, align 4
  %shl134 = shl i32 %62, 5
  store i32 %shl134, ptr %x_fuzz, align 4
  %y_fuzz = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 19
  %63 = ptrtoint ptr %y_fuzz to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %y_fuzz, align 4
  %shl135 = shl i32 %64, 5
  store i32 %shl135, ptr %y_fuzz, align 4
  br label %if.end150.sink.split

if.end138:                                        ; preds = %if.end118
  call void @__sanitizer_cov_trace_const_cmp4(i32 45, i32 %1)
  %cmp140 = icmp eq i32 %1, 45
  br i1 %cmp140, label %if.then142, label %if.end138.if.end150_crit_edge

if.end138.if.end150_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end150

if.then142:                                       ; preds = %if.end138
  %65 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %device_type17, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %66)
  %cmp144 = icmp eq i32 %66, 8
  br i1 %cmp144, label %if.then142.if.end150.sink.split_crit_edge, label %if.then142.if.end150_crit_edge

if.then142.if.end150_crit_edge:                   ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end150

if.then142.if.end150.sink.split_crit_edge:        ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end150.sink.split

if.end150.sink.split:                             ; preds = %if.then142.if.end150.sink.split_crit_edge, %if.then130
  %.sink315 = phi i32 [ 1, %if.then130 ], [ 8, %if.then142.if.end150.sink.split_crit_edge ]
  %quirks147 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 23
  %67 = ptrtoint ptr %quirks147 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %quirks147, align 4
  %or137 = or i32 %68, %.sink315
  store i32 %or137, ptr %quirks147, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.end150.sink.split, %if.then142.if.end150_crit_edge, %if.end138.if.end150_crit_edge, %land.lhs.true126.if.end150_crit_edge
  br i1 %cmp88300304307309, label %if.then154, label %if.end150.if.end157_crit_edge

if.end150.if.end157_crit_edge:                    ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end157

if.then154:                                       ; preds = %if.end150
  call void @__sanitizer_cov_trace_pc() #10
  %69 = ptrtoint ptr %device_type17 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %device_type17, align 4
  %or156 = or i32 %70, 8
  store i32 %or156, ptr %device_type17, align 4
  br label %if.end157

if.end157:                                        ; preds = %if.then154, %if.end150.if.end157_crit_edge
  %product = getelementptr inbounds %struct.hid_device, ptr %49, i32 0, i32 11
  %71 = ptrtoint ptr %product to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %product, align 8
  %73 = zext i32 %72 to i64
  call void @__sanitizer_cov_trace_switch(i64 %73, ptr @__sancov_gen_cov_switch_values.260)
  switch i32 %72, label %if.end157.if.end196_crit_edge [
    i32 898, label %if.end157.if.then166_crit_edge
    i32 893, label %if.end157.if.then166_crit_edge370
  ]

if.end157.if.then166_crit_edge370:                ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then166

if.end157.if.then166_crit_edge:                   ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then166

if.end157.if.end196_crit_edge:                    ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end196

if.then166:                                       ; preds = %if.end157.if.then166_crit_edge, %if.end157.if.then166_crit_edge370
  %quirks167 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 23
  %74 = ptrtoint ptr %quirks167 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %quirks167, align 4
  %and168 = and i32 %75, -17
  store i32 %and168, ptr %quirks167, align 4
  %pen_input = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 12
  %76 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %pen_input, align 8
  %add.ptr.i = getelementptr %struct.input_dev, ptr %77, i32 0, i32 6, i32 10
  %78 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %add.ptr.i, align 4
  %and.i = and i32 %79, -5
  store i32 %and.i, ptr %add.ptr.i, align 4
  %80 = load ptr, ptr %pen_input, align 8
  %add.ptr.i283 = getelementptr %struct.input_dev, ptr %80, i32 0, i32 6, i32 10
  %81 = ptrtoint ptr %add.ptr.i283 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %add.ptr.i283, align 4
  %and.i284 = and i32 %82, -9
  store i32 %and.i284, ptr %add.ptr.i283, align 4
  %83 = load ptr, ptr %pen_input, align 8
  %add.ptr.i285 = getelementptr %struct.input_dev, ptr %83, i32 0, i32 6, i32 10
  %84 = ptrtoint ptr %add.ptr.i285 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %add.ptr.i285, align 4
  %and.i286 = and i32 %85, -17
  store i32 %and.i286, ptr %add.ptr.i285, align 4
  %86 = load ptr, ptr %pen_input, align 8
  %absbit = getelementptr inbounds %struct.input_dev, ptr %86, i32 0, i32 8
  %87 = ptrtoint ptr %absbit to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %absbit, align 4
  %and.i287 = and i32 %88, -5
  store i32 %and.i287, ptr %absbit, align 4
  %89 = load ptr, ptr %pen_input, align 8
  %absbit178 = getelementptr inbounds %struct.input_dev, ptr %89, i32 0, i32 8
  %90 = ptrtoint ptr %absbit178 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %absbit178, align 4
  %and.i288 = and i32 %91, -33554433
  store i32 %and.i288, ptr %absbit178, align 4
  %92 = load ptr, ptr %pen_input, align 8
  %absbit181 = getelementptr inbounds %struct.input_dev, ptr %92, i32 0, i32 8
  %93 = ptrtoint ptr %absbit181 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %absbit181, align 4
  %and.i289 = and i32 %94, -67108865
  store i32 %and.i289, ptr %absbit181, align 4
  %95 = load ptr, ptr %pen_input, align 8
  %absbit184 = getelementptr inbounds %struct.input_dev, ptr %95, i32 0, i32 8
  %96 = ptrtoint ptr %absbit184 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %absbit184, align 4
  %and.i290 = and i32 %97, -134217729
  store i32 %and.i290, ptr %absbit184, align 4
  %98 = load ptr, ptr %pen_input, align 8
  %absbit187 = getelementptr inbounds %struct.input_dev, ptr %98, i32 0, i32 8
  %99 = ptrtoint ptr %absbit187 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %absbit187, align 4
  %and.i291 = and i32 %100, -257
  store i32 %and.i291, ptr %absbit187, align 4
  %101 = load ptr, ptr %pen_input, align 8
  %add.ptr.i292 = getelementptr %struct.input_dev, ptr %101, i32 0, i32 8, i32 1
  %102 = ptrtoint ptr %add.ptr.i292 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %add.ptr.i292, align 4
  %and.i293 = and i32 %103, -257
  store i32 %and.i293, ptr %add.ptr.i292, align 4
  %104 = load ptr, ptr %pen_input, align 8
  %mscbit = getelementptr inbounds %struct.input_dev, ptr %104, i32 0, i32 9
  %105 = ptrtoint ptr %mscbit to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %mscbit, align 4
  %and.i294 = and i32 %106, -2
  store i32 %and.i294, ptr %mscbit, align 4
  %107 = load ptr, ptr %pen_input, align 8
  %evbit = getelementptr inbounds %struct.input_dev, ptr %107, i32 0, i32 5
  %108 = ptrtoint ptr %evbit to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %evbit, align 4
  %and.i295 = and i32 %109, -17
  store i32 %and.i295, ptr %evbit, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then166, %if.end157.if.end196_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @wacom_setup_pen_input_capabilities(ptr noundef %input_dev, ptr noundef readonly %wacom_wac) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %device_type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 13
  %0 = ptrtoint ptr %device_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %device_type, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  %and3 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  %propbit6 = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 4
  %2 = ptrtoint ptr %propbit6 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %propbit6, align 4
  %. = select i1 %tobool4.not, i32 1, i32 2
  %or.i157 = or i32 %3, %.
  store i32 %or.i157, ptr %propbit6, align 4
  %type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 5
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 53, i32 %5)
  %cmp = icmp eq i32 %5, 53
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end10

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %evbit = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 5
  %6 = ptrtoint ptr %evbit to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %evbit, align 8
  %or = or i32 %7, 10
  store i32 %or, ptr %evbit, align 8
  %add.ptr.i = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 10
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr.i, align 4
  %or.i158 = or i32 %9, 1024
  store i32 %or.i158, ptr %add.ptr.i, align 4
  %add.ptr.i159 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 8, i32 1
  %10 = ptrtoint ptr %add.ptr.i159 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %add.ptr.i159, align 4
  %or.i160 = or i32 %11, 256
  store i32 %or.i160, ptr %add.ptr.i159, align 4
  %offset_left = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 9
  %12 = ptrtoint ptr %offset_left to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %offset_left, align 4
  %x_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 1
  %14 = ptrtoint ptr %x_max to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %x_max, align 4
  %offset_right = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 10
  %16 = ptrtoint ptr %offset_right to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %offset_right, align 4
  %sub = sub i32 %15, %17
  %x_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 18
  %18 = ptrtoint ptr %x_fuzz to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %x_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 0, i32 noundef %13, i32 noundef %sub, i32 noundef %19, i32 noundef 0) #8
  %offset_top = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 11
  %20 = ptrtoint ptr %offset_top to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %offset_top, align 4
  %y_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 2
  %22 = ptrtoint ptr %y_max to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %y_max, align 4
  %offset_bottom = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 12
  %24 = ptrtoint ptr %offset_bottom to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %offset_bottom, align 4
  %sub14 = sub i32 %23, %25
  %y_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 19
  %26 = ptrtoint ptr %y_fuzz to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %y_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 1, i32 noundef %21, i32 noundef %sub14, i32 noundef %27, i32 noundef 0) #8
  %pressure_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 3
  %28 = ptrtoint ptr %pressure_max to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pressure_max, align 4
  %pressure_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 20
  %30 = ptrtoint ptr %pressure_fuzz to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pressure_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 24, i32 noundef 0, i32 noundef %29, i32 noundef %31, i32 noundef 0) #8
  %x_resolution = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 6
  %32 = ptrtoint ptr %x_resolution to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %x_resolution, align 4
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %absinfo.i = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 26
  %34 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i = icmp eq ptr %35, null
  br i1 %tobool.not.i, label %if.end10.input_abs_set_res.exit_crit_edge, label %if.then.i

if.end10.input_abs_set_res.exit_crit_edge:        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit

if.then.i:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i = getelementptr %struct.input_absinfo, ptr %35, i32 0, i32 5
  %36 = ptrtoint ptr %resolution.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %33, ptr %resolution.i, align 4
  br label %input_abs_set_res.exit

input_abs_set_res.exit:                           ; preds = %if.then.i, %if.end10.input_abs_set_res.exit_crit_edge
  %y_resolution = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 7
  %37 = ptrtoint ptr %y_resolution to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %y_resolution, align 4
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %39 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i209 = icmp eq ptr %40, null
  br i1 %tobool.not.i209, label %input_abs_set_res.exit.input_abs_set_res.exit212_crit_edge, label %if.then.i211

input_abs_set_res.exit.input_abs_set_res.exit212_crit_edge: ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit212

if.then.i211:                                     ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i210 = getelementptr %struct.input_absinfo, ptr %40, i32 1, i32 5
  %41 = ptrtoint ptr %resolution.i210 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %38, ptr %resolution.i210, align 4
  br label %input_abs_set_res.exit212

input_abs_set_res.exit212:                        ; preds = %if.then.i211, %input_abs_set_res.exit.input_abs_set_res.exit212_crit_edge
  %42 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %type, align 4
  %44 = zext i32 %43 to i64
  call void @__sanitizer_cov_trace_switch(i64 %44, ptr @__sancov_gen_cov_switch_values.261)
  switch i32 %43, label %input_abs_set_res.exit212.cleanup_crit_edge [
    i32 2, label %sw.bb
    i32 36, label %input_abs_set_res.exit212.sw.bb18_crit_edge
    i32 3, label %input_abs_set_res.exit212.sw.bb18_crit_edge228
    i32 1, label %input_abs_set_res.exit212.sw.bb19_crit_edge
    i32 30, label %input_abs_set_res.exit212.sw.bb36_crit_edge
    i32 29, label %input_abs_set_res.exit212.sw.bb36_crit_edge229
    i32 28, label %input_abs_set_res.exit212.sw.bb36_crit_edge230
    i32 27, label %input_abs_set_res.exit212.sw.bb36_crit_edge231
    i32 26, label %input_abs_set_res.exit212.sw.bb36_crit_edge232
    i32 34, label %input_abs_set_res.exit212.sw.bb36_crit_edge233
    i32 33, label %input_abs_set_res.exit212.sw.bb36_crit_edge234
    i32 35, label %input_abs_set_res.exit212.sw.bb36_crit_edge235
    i32 31, label %input_abs_set_res.exit212.sw.bb36_crit_edge236
    i32 32, label %input_abs_set_res.exit212.sw.bb36_crit_edge237
    i32 11, label %input_abs_set_res.exit212.sw.bb37_crit_edge
    i32 12, label %input_abs_set_res.exit212.sw.bb37_crit_edge238
    i32 10, label %input_abs_set_res.exit212.sw.bb37_crit_edge239
    i32 14, label %input_abs_set_res.exit212.sw.bb37_crit_edge240
    i32 15, label %input_abs_set_res.exit212.sw.bb37_crit_edge241
    i32 16, label %input_abs_set_res.exit212.sw.bb37_crit_edge242
    i32 13, label %input_abs_set_res.exit212.sw.bb37_crit_edge243
    i32 9, label %input_abs_set_res.exit212.sw.bb38_crit_edge
    i32 18, label %input_abs_set_res.exit212.sw.bb39_crit_edge
    i32 19, label %input_abs_set_res.exit212.sw.bb39_crit_edge244
    i32 21, label %input_abs_set_res.exit212.sw.bb39_crit_edge245
    i32 22, label %input_abs_set_res.exit212.sw.bb39_crit_edge246
    i32 17, label %input_abs_set_res.exit212.sw.bb39_crit_edge247
    i32 20, label %input_abs_set_res.exit212.sw.bb39_crit_edge248
    i32 23, label %input_abs_set_res.exit212.sw.bb39_crit_edge249
    i32 24, label %input_abs_set_res.exit212.sw.bb39_crit_edge250
    i32 42, label %input_abs_set_res.exit212.sw.bb42_crit_edge
    i32 43, label %input_abs_set_res.exit212.sw.bb42_crit_edge251
    i32 50, label %input_abs_set_res.exit212.sw.bb42_crit_edge252
    i32 51, label %input_abs_set_res.exit212.sw.bb42_crit_edge253
    i32 52, label %input_abs_set_res.exit212.sw.bb42_crit_edge254
    i32 49, label %input_abs_set_res.exit212.sw.bb42_crit_edge255
    i32 47, label %input_abs_set_res.exit212.sw.bb42_crit_edge256
    i32 48, label %input_abs_set_res.exit212.sw.bb42_crit_edge257
    i32 7, label %input_abs_set_res.exit212.sw.bb45_crit_edge
    i32 8, label %input_abs_set_res.exit212.sw.bb45_crit_edge258
    i32 5, label %input_abs_set_res.exit212.sw.bb45_crit_edge259
    i32 6, label %input_abs_set_res.exit212.sw.bb45_crit_edge260
    i32 4, label %sw.bb54
    i32 0, label %input_abs_set_res.exit212.sw.bb57_crit_edge
    i32 38, label %input_abs_set_res.exit212.sw.bb64_crit_edge
    i32 41, label %input_abs_set_res.exit212.sw.bb64_crit_edge261
    i32 37, label %input_abs_set_res.exit212.sw.bb64_crit_edge262
    i32 39, label %input_abs_set_res.exit212.sw.bb64_crit_edge263
    i32 25, label %input_abs_set_res.exit212.sw.bb64_crit_edge264
    i32 44, label %sw.bb84
  ]

input_abs_set_res.exit212.sw.bb64_crit_edge264:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb64

input_abs_set_res.exit212.sw.bb64_crit_edge263:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb64

input_abs_set_res.exit212.sw.bb64_crit_edge262:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb64

input_abs_set_res.exit212.sw.bb64_crit_edge261:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb64

input_abs_set_res.exit212.sw.bb64_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb64

input_abs_set_res.exit212.sw.bb57_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb57

input_abs_set_res.exit212.sw.bb45_crit_edge260:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb45

input_abs_set_res.exit212.sw.bb45_crit_edge259:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb45

input_abs_set_res.exit212.sw.bb45_crit_edge258:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb45

input_abs_set_res.exit212.sw.bb45_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb45

input_abs_set_res.exit212.sw.bb42_crit_edge257:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb42_crit_edge256:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb42_crit_edge255:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb42_crit_edge254:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb42_crit_edge253:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb42_crit_edge252:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb42_crit_edge251:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb42_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb42

input_abs_set_res.exit212.sw.bb39_crit_edge250:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb39_crit_edge249:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb39_crit_edge248:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb39_crit_edge247:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb39_crit_edge246:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb39_crit_edge245:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb39_crit_edge244:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb39_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb39

input_abs_set_res.exit212.sw.bb38_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb38

input_abs_set_res.exit212.sw.bb37_crit_edge243:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb37

input_abs_set_res.exit212.sw.bb37_crit_edge242:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb37

input_abs_set_res.exit212.sw.bb37_crit_edge241:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb37

input_abs_set_res.exit212.sw.bb37_crit_edge240:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb37

input_abs_set_res.exit212.sw.bb37_crit_edge239:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb37

input_abs_set_res.exit212.sw.bb37_crit_edge238:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb37

input_abs_set_res.exit212.sw.bb37_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb37

input_abs_set_res.exit212.sw.bb36_crit_edge237:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge236:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge235:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge234:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge233:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge232:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge231:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge230:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge229:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb36_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb36

input_abs_set_res.exit212.sw.bb19_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb19

input_abs_set_res.exit212.sw.bb18_crit_edge228:   ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb18

input_abs_set_res.exit212.sw.bb18_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb18

input_abs_set_res.exit212.cleanup_crit_edge:      ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

sw.bb:                                            ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  %45 = ptrtoint ptr %add.ptr.i159 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %add.ptr.i159, align 4
  %and.i = and i32 %46, -257
  store i32 %and.i, ptr %add.ptr.i159, align 4
  br label %sw.bb18

sw.bb18:                                          ; preds = %sw.bb, %input_abs_set_res.exit212.sw.bb18_crit_edge, %input_abs_set_res.exit212.sw.bb18_crit_edge228
  %distance_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 4
  %47 = ptrtoint ptr %distance_max to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %distance_max, align 4
  %distance_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 21
  %49 = ptrtoint ptr %distance_fuzz to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %distance_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 25, i32 noundef 0, i32 noundef %48, i32 noundef %50, i32 noundef 0) #8
  br label %sw.bb19

sw.bb19:                                          ; preds = %sw.bb18, %input_abs_set_res.exit212.sw.bb19_crit_edge
  tail call void @input_set_capability(ptr noundef %input_dev, i32 noundef 2, i32 noundef 8) #8
  %add.ptr.i162 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 8
  %51 = ptrtoint ptr %add.ptr.i162 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %add.ptr.i162, align 4
  %or.i167 = or i32 %52, 458752
  store i32 %or.i167, ptr %add.ptr.i162, align 4
  %53 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %add.ptr.i, align 4
  %or.i177 = or i32 %54, 6211
  store i32 %or.i177, ptr %add.ptr.i, align 4
  br label %cleanup

sw.bb36:                                          ; preds = %input_abs_set_res.exit212.sw.bb36_crit_edge, %input_abs_set_res.exit212.sw.bb36_crit_edge229, %input_abs_set_res.exit212.sw.bb36_crit_edge230, %input_abs_set_res.exit212.sw.bb36_crit_edge231, %input_abs_set_res.exit212.sw.bb36_crit_edge232, %input_abs_set_res.exit212.sw.bb36_crit_edge233, %input_abs_set_res.exit212.sw.bb36_crit_edge234, %input_abs_set_res.exit212.sw.bb36_crit_edge235, %input_abs_set_res.exit212.sw.bb36_crit_edge236, %input_abs_set_res.exit212.sw.bb36_crit_edge237
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 2, i32 noundef -900, i32 noundef 899, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %55 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i214 = icmp eq ptr %56, null
  br i1 %tobool.not.i214, label %sw.bb36.input_abs_set_res.exit217_crit_edge, label %if.then.i216

sw.bb36.input_abs_set_res.exit217_crit_edge:      ; preds = %sw.bb36
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit217

if.then.i216:                                     ; preds = %sw.bb36
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i215 = getelementptr %struct.input_absinfo, ptr %56, i32 2, i32 5
  %57 = ptrtoint ptr %resolution.i215 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 287, ptr %resolution.i215, align 4
  br label %input_abs_set_res.exit217

input_abs_set_res.exit217:                        ; preds = %if.then.i216, %sw.bb36.input_abs_set_res.exit217_crit_edge
  tail call fastcc void @wacom_setup_cintiq(ptr noundef %wacom_wac)
  br label %cleanup

sw.bb37:                                          ; preds = %input_abs_set_res.exit212.sw.bb37_crit_edge, %input_abs_set_res.exit212.sw.bb37_crit_edge238, %input_abs_set_res.exit212.sw.bb37_crit_edge239, %input_abs_set_res.exit212.sw.bb37_crit_edge240, %input_abs_set_res.exit212.sw.bb37_crit_edge241, %input_abs_set_res.exit212.sw.bb37_crit_edge242, %input_abs_set_res.exit212.sw.bb37_crit_edge243
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 2, i32 noundef -900, i32 noundef 899, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %58 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i219 = icmp eq ptr %59, null
  br i1 %tobool.not.i219, label %sw.bb37.sw.bb38_crit_edge, label %if.then.i221

sw.bb37.sw.bb38_crit_edge:                        ; preds = %sw.bb37
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb38

if.then.i221:                                     ; preds = %sw.bb37
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i220 = getelementptr %struct.input_absinfo, ptr %59, i32 2, i32 5
  %60 = ptrtoint ptr %resolution.i220 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 287, ptr %resolution.i220, align 4
  br label %sw.bb38

sw.bb38:                                          ; preds = %if.then.i221, %sw.bb37.sw.bb38_crit_edge, %input_abs_set_res.exit212.sw.bb38_crit_edge
  tail call fastcc void @wacom_setup_intuos(ptr noundef %wacom_wac)
  br label %cleanup

sw.bb39:                                          ; preds = %input_abs_set_res.exit212.sw.bb39_crit_edge, %input_abs_set_res.exit212.sw.bb39_crit_edge244, %input_abs_set_res.exit212.sw.bb39_crit_edge245, %input_abs_set_res.exit212.sw.bb39_crit_edge246, %input_abs_set_res.exit212.sw.bb39_crit_edge247, %input_abs_set_res.exit212.sw.bb39_crit_edge248, %input_abs_set_res.exit212.sw.bb39_crit_edge249, %input_abs_set_res.exit212.sw.bb39_crit_edge250
  %distance_max40 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 4
  %61 = ptrtoint ptr %distance_max40 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %distance_max40, align 4
  %distance_fuzz41 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 21
  %63 = ptrtoint ptr %distance_fuzz41 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %distance_fuzz41, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 25, i32 noundef 0, i32 noundef %62, i32 noundef %64, i32 noundef 0) #8
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 2, i32 noundef -900, i32 noundef 899, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %65 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i224 = icmp eq ptr %66, null
  br i1 %tobool.not.i224, label %sw.bb39.input_abs_set_res.exit227_crit_edge, label %if.then.i226

sw.bb39.input_abs_set_res.exit227_crit_edge:      ; preds = %sw.bb39
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit227

if.then.i226:                                     ; preds = %sw.bb39
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i225 = getelementptr %struct.input_absinfo, ptr %66, i32 2, i32 5
  %67 = ptrtoint ptr %resolution.i225 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 287, ptr %resolution.i225, align 4
  br label %input_abs_set_res.exit227

input_abs_set_res.exit227:                        ; preds = %if.then.i226, %sw.bb39.input_abs_set_res.exit227_crit_edge
  tail call fastcc void @wacom_setup_intuos(ptr noundef %wacom_wac)
  br label %cleanup

sw.bb42:                                          ; preds = %input_abs_set_res.exit212.sw.bb42_crit_edge, %input_abs_set_res.exit212.sw.bb42_crit_edge251, %input_abs_set_res.exit212.sw.bb42_crit_edge252, %input_abs_set_res.exit212.sw.bb42_crit_edge253, %input_abs_set_res.exit212.sw.bb42_crit_edge254, %input_abs_set_res.exit212.sw.bb42_crit_edge255, %input_abs_set_res.exit212.sw.bb42_crit_edge256, %input_abs_set_res.exit212.sw.bb42_crit_edge257
  %68 = ptrtoint ptr %add.ptr.i159 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %add.ptr.i159, align 4
  %and.i179 = and i32 %69, -257
  store i32 %and.i179, ptr %add.ptr.i159, align 4
  br label %sw.bb45

sw.bb45:                                          ; preds = %sw.bb42, %input_abs_set_res.exit212.sw.bb45_crit_edge, %input_abs_set_res.exit212.sw.bb45_crit_edge258, %input_abs_set_res.exit212.sw.bb45_crit_edge259, %input_abs_set_res.exit212.sw.bb45_crit_edge260
  %70 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %add.ptr.i, align 4
  %or.i187 = or i32 %71, 6147
  store i32 %or.i187, ptr %add.ptr.i, align 4
  br label %cleanup

sw.bb54:                                          ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  %72 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %add.ptr.i, align 4
  %or.i189 = or i32 %73, 4096
  store i32 %or.i189, ptr %add.ptr.i, align 4
  br label %sw.bb57

sw.bb57:                                          ; preds = %sw.bb54, %input_abs_set_res.exit212.sw.bb57_crit_edge
  %74 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %add.ptr.i, align 4
  %or.i195 = or i32 %75, 2051
  store i32 %or.i195, ptr %add.ptr.i, align 4
  br label %cleanup

sw.bb64:                                          ; preds = %input_abs_set_res.exit212.sw.bb64_crit_edge, %input_abs_set_res.exit212.sw.bb64_crit_edge261, %input_abs_set_res.exit212.sw.bb64_crit_edge262, %input_abs_set_res.exit212.sw.bb64_crit_edge263, %input_abs_set_res.exit212.sw.bb64_crit_edge264
  %76 = zext i32 %43 to i64
  call void @__sanitizer_cov_trace_switch(i64 %76, ptr @__sancov_gen_cov_switch_values.262)
  switch i32 %43, label %if.else70 [
    i32 39, label %sw.bb64.if.then69_crit_edge
    i32 25, label %sw.bb64.if.then69_crit_edge265
  ]

sw.bb64.if.then69_crit_edge265:                   ; preds = %sw.bb64
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then69

sw.bb64.if.then69_crit_edge:                      ; preds = %sw.bb64
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then69

if.then69:                                        ; preds = %sw.bb64.if.then69_crit_edge, %sw.bb64.if.then69_crit_edge265
  tail call fastcc void @wacom_setup_basic_pro_pen(ptr noundef %wacom_wac)
  br label %cleanup

if.else70:                                        ; preds = %sw.bb64
  call void @__sanitizer_cov_trace_pc() #10
  %77 = ptrtoint ptr %add.ptr.i159 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %add.ptr.i159, align 4
  %and.i197 = and i32 %78, -257
  store i32 %and.i197, ptr %add.ptr.i159, align 4
  %79 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %add.ptr.i, align 4
  %or.i205 = or i32 %80, 6147
  store i32 %or.i205, ptr %add.ptr.i, align 4
  %distance_max81 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 4
  %81 = ptrtoint ptr %distance_max81 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %distance_max81, align 4
  %distance_fuzz82 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 21
  %83 = ptrtoint ptr %distance_fuzz82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %distance_fuzz82, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 25, i32 noundef 0, i32 noundef %82, i32 noundef %84, i32 noundef 0) #8
  br label %cleanup

sw.bb84:                                          ; preds = %input_abs_set_res.exit212
  call void @__sanitizer_cov_trace_pc() #10
  %85 = ptrtoint ptr %add.ptr.i159 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %add.ptr.i159, align 4
  %and.i207 = and i32 %86, -257
  store i32 %and.i207, ptr %add.ptr.i159, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.bb84, %if.else70, %if.then69, %sw.bb57, %sw.bb45, %input_abs_set_res.exit227, %sw.bb38, %input_abs_set_res.exit217, %sw.bb19, %input_abs_set_res.exit212.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -19, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.then69 ], [ 0, %if.else70 ], [ 0, %input_abs_set_res.exit212.cleanup_crit_edge ], [ 0, %sw.bb84 ], [ 0, %sw.bb57 ], [ 0, %sw.bb45 ], [ 0, %input_abs_set_res.exit227 ], [ 0, %sw.bb38 ], [ 0, %input_abs_set_res.exit217 ], [ 0, %sw.bb19 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_set_abs_params(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_set_capability(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_setup_cintiq(ptr nocapture noundef readonly %wacom_wac) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  tail call void @input_set_capability(ptr noundef %1, i32 noundef 4, i32 noundef 0) #8
  %add.ptr.i.i = getelementptr %struct.input_dev, ptr %1, i32 0, i32 6, i32 10
  %2 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i.i, align 4
  %or.i15.i = or i32 %3, 6145
  store i32 %or.i15.i, ptr %add.ptr.i.i, align 4
  %distance_max.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 4
  %4 = ptrtoint ptr %distance_max.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %distance_max.i, align 4
  %distance_fuzz.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 21
  %6 = ptrtoint ptr %distance_fuzz.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %distance_fuzz.i, align 4
  tail call void @input_set_abs_params(ptr noundef %1, i32 noundef 25, i32 noundef 0, i32 noundef %5, i32 noundef %7, i32 noundef 0) #8
  %8 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr.i.i, align 4
  %or.i25 = or i32 %9, 30
  store i32 %or.i25, ptr %add.ptr.i.i, align 4
  tail call void @input_set_abs_params(ptr noundef %1, i32 noundef 8, i32 noundef 0, i32 noundef 1023, i32 noundef 0, i32 noundef 0) #8
  %tilt_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 22
  %10 = ptrtoint ptr %tilt_fuzz to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tilt_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %1, i32 noundef 26, i32 noundef -64, i32 noundef 63, i32 noundef %11, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %1) #8
  %absinfo.i = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 26
  %12 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %entry.input_abs_set_res.exit_crit_edge, label %if.then.i

entry.input_abs_set_res.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i = getelementptr %struct.input_absinfo, ptr %13, i32 26, i32 5
  %14 = ptrtoint ptr %resolution.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 57, ptr %resolution.i, align 4
  br label %input_abs_set_res.exit

input_abs_set_res.exit:                           ; preds = %if.then.i, %entry.input_abs_set_res.exit_crit_edge
  %15 = ptrtoint ptr %tilt_fuzz to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %tilt_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %1, i32 noundef 27, i32 noundef -64, i32 noundef 63, i32 noundef %16, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %1) #8
  %17 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i27 = icmp eq ptr %18, null
  br i1 %tobool.not.i27, label %input_abs_set_res.exit.input_abs_set_res.exit30_crit_edge, label %if.then.i29

input_abs_set_res.exit.input_abs_set_res.exit30_crit_edge: ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit30

if.then.i29:                                      ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i28 = getelementptr %struct.input_absinfo, ptr %18, i32 27, i32 5
  %19 = ptrtoint ptr %resolution.i28 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 57, ptr %resolution.i28, align 4
  br label %input_abs_set_res.exit30

input_abs_set_res.exit30:                         ; preds = %if.then.i29, %input_abs_set_res.exit.input_abs_set_res.exit30_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_setup_intuos(ptr nocapture noundef readonly %wacom_wac) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  tail call void @input_set_capability(ptr noundef %1, i32 noundef 2, i32 noundef 8) #8
  tail call fastcc void @wacom_setup_cintiq(ptr noundef %wacom_wac)
  %add.ptr.i = getelementptr %struct.input_dev, ptr %1, i32 0, i32 6, i32 8
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i, align 4
  %or.i31 = or i32 %3, 2031616
  store i32 %or.i31, ptr %add.ptr.i, align 4
  %add.ptr.i32 = getelementptr %struct.input_dev, ptr %1, i32 0, i32 6, i32 10
  %4 = ptrtoint ptr %add.ptr.i32 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i32, align 4
  %or.i35 = or i32 %5, 192
  store i32 %or.i35, ptr %add.ptr.i32, align 4
  tail call void @input_set_abs_params(ptr noundef %1, i32 noundef 5, i32 noundef -900, i32 noundef 899, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %1) #8
  %absinfo.i = getelementptr inbounds %struct.input_dev, ptr %1, i32 0, i32 26
  %6 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %entry.input_abs_set_res.exit_crit_edge, label %if.then.i

entry.input_abs_set_res.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i = getelementptr %struct.input_absinfo, ptr %7, i32 5, i32 5
  %8 = ptrtoint ptr %resolution.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 287, ptr %resolution.i, align 4
  br label %input_abs_set_res.exit

input_abs_set_res.exit:                           ; preds = %if.then.i, %entry.input_abs_set_res.exit_crit_edge
  tail call void @input_set_abs_params(ptr noundef %1, i32 noundef 6, i32 noundef -1023, i32 noundef 1023, i32 noundef 0, i32 noundef 0) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_setup_basic_pro_pen(ptr nocapture noundef readonly %wacom_wac) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  tail call void @input_set_capability(ptr noundef %1, i32 noundef 4, i32 noundef 0) #8
  %add.ptr.i = getelementptr %struct.input_dev, ptr %1, i32 0, i32 6, i32 10
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i, align 4
  %or.i15 = or i32 %3, 6145
  store i32 %or.i15, ptr %add.ptr.i, align 4
  %distance_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 4
  %4 = ptrtoint ptr %distance_max to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %distance_max, align 4
  %distance_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 21
  %6 = ptrtoint ptr %distance_fuzz to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %distance_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %1, i32 noundef 25, i32 noundef 0, i32 noundef %5, i32 noundef %7, i32 noundef 0) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @wacom_setup_touch_input_capabilities(ptr noundef %input_dev, ptr noundef %wacom_wac) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %device_type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 13
  %0 = ptrtoint ptr %device_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %device_type, align 4
  %and = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  %and3 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  %propbit6 = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 4
  %2 = ptrtoint ptr %propbit6 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %propbit6, align 4
  %. = select i1 %tobool4.not, i32 1, i32 2
  %or.i174 = or i32 %3, %.
  store i32 %or.i174, ptr %propbit6, align 4
  %type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 5
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 53, i32 %5)
  %cmp = icmp eq i32 %5, 53
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end10

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %evbit = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 5
  %6 = ptrtoint ptr %evbit to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %evbit, align 8
  %or = or i32 %7, 10
  store i32 %or, ptr %evbit, align 8
  %add.ptr.i = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 10
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr.i, align 4
  %or.i175 = or i32 %9, 1024
  store i32 %or.i175, ptr %add.ptr.i, align 4
  %touch_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 24
  %10 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %touch_max, align 4
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.263)
  switch i32 %11, label %if.then17 [
    i32 1, label %if.then13
    i32 0, label %if.end10.if.end25_crit_edge
  ]

if.end10.if.end25_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end25

if.then13:                                        ; preds = %if.end10
  %x_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 1
  %13 = ptrtoint ptr %x_max to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %x_max, align 4
  %x_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 18
  %15 = ptrtoint ptr %x_fuzz to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %x_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 0, i32 noundef 0, i32 noundef %14, i32 noundef %16, i32 noundef 0) #8
  %y_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 2
  %17 = ptrtoint ptr %y_max to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %y_max, align 4
  %y_fuzz = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 19
  %19 = ptrtoint ptr %y_fuzz to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %y_fuzz, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 1, i32 noundef 0, i32 noundef %18, i32 noundef %20, i32 noundef 0) #8
  %x_resolution = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 6
  %21 = ptrtoint ptr %x_resolution to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %x_resolution, align 4
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %absinfo.i = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 26
  %23 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i = icmp eq ptr %24, null
  br i1 %tobool.not.i, label %if.then13.input_abs_set_res.exit_crit_edge, label %if.then.i

if.then13.input_abs_set_res.exit_crit_edge:       ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit

if.then.i:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i = getelementptr %struct.input_absinfo, ptr %24, i32 0, i32 5
  %25 = ptrtoint ptr %resolution.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %22, ptr %resolution.i, align 4
  br label %input_abs_set_res.exit

input_abs_set_res.exit:                           ; preds = %if.then.i, %if.then13.input_abs_set_res.exit_crit_edge
  %y_resolution = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 7
  %26 = ptrtoint ptr %y_resolution to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %y_resolution, align 4
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %28 = ptrtoint ptr %absinfo.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %absinfo.i, align 8
  %tobool.not.i184 = icmp eq ptr %29, null
  br i1 %tobool.not.i184, label %input_abs_set_res.exit.if.end25_crit_edge, label %if.then.i186

input_abs_set_res.exit.if.end25_crit_edge:        ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end25

if.then.i186:                                     ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i185 = getelementptr %struct.input_absinfo, ptr %29, i32 1, i32 5
  %30 = ptrtoint ptr %resolution.i185 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %27, ptr %resolution.i185, align 4
  br label %if.end25

if.then17:                                        ; preds = %if.end10
  %x_max18 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 1
  %31 = ptrtoint ptr %x_max18 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %x_max18, align 4
  %x_fuzz19 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 18
  %33 = ptrtoint ptr %x_fuzz19 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %x_fuzz19, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 53, i32 noundef 0, i32 noundef %32, i32 noundef %34, i32 noundef 0) #8
  %y_max20 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 2
  %35 = ptrtoint ptr %y_max20 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %y_max20, align 4
  %y_fuzz21 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 19
  %37 = ptrtoint ptr %y_fuzz21 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %y_fuzz21, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 54, i32 noundef 0, i32 noundef %36, i32 noundef %38, i32 noundef 0) #8
  %x_resolution22 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 6
  %39 = ptrtoint ptr %x_resolution22 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %x_resolution22, align 4
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %absinfo.i188 = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 26
  %41 = ptrtoint ptr %absinfo.i188 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %absinfo.i188, align 8
  %tobool.not.i189 = icmp eq ptr %42, null
  br i1 %tobool.not.i189, label %if.then17.input_abs_set_res.exit192_crit_edge, label %if.then.i191

if.then17.input_abs_set_res.exit192_crit_edge:    ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit192

if.then.i191:                                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i190 = getelementptr %struct.input_absinfo, ptr %42, i32 53, i32 5
  %43 = ptrtoint ptr %resolution.i190 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %40, ptr %resolution.i190, align 4
  br label %input_abs_set_res.exit192

input_abs_set_res.exit192:                        ; preds = %if.then.i191, %if.then17.input_abs_set_res.exit192_crit_edge
  %y_resolution23 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 7
  %44 = ptrtoint ptr %y_resolution23 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %y_resolution23, align 4
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %46 = ptrtoint ptr %absinfo.i188 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %absinfo.i188, align 8
  %tobool.not.i194 = icmp eq ptr %47, null
  br i1 %tobool.not.i194, label %input_abs_set_res.exit192.if.end25_crit_edge, label %if.then.i196

input_abs_set_res.exit192.if.end25_crit_edge:     ; preds = %input_abs_set_res.exit192
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end25

if.then.i196:                                     ; preds = %input_abs_set_res.exit192
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i195 = getelementptr %struct.input_absinfo, ptr %47, i32 54, i32 5
  %48 = ptrtoint ptr %resolution.i195 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %45, ptr %resolution.i195, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then.i196, %input_abs_set_res.exit192.if.end25_crit_edge, %if.then.i186, %input_abs_set_res.exit.if.end25_crit_edge, %if.end10.if.end25_crit_edge
  %49 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %type, align 4
  %51 = zext i32 %50 to i64
  call void @__sanitizer_cov_trace_switch(i64 %51, ptr @__sancov_gen_cov_switch_values.264)
  switch i32 %50, label %if.end25.cleanup_crit_edge [
    i32 23, label %if.end25.sw.bb_crit_edge
    i32 24, label %if.end25.sw.bb_crit_edge210
    i32 18, label %if.end25.sw.bb48_crit_edge
    i32 19, label %if.end25.sw.bb48_crit_edge211
    i32 21, label %if.end25.sw.bb48_crit_edge212
    i32 22, label %if.end25.sw.bb48_crit_edge213
    i32 17, label %if.end25.sw.bb48_crit_edge214
    i32 20, label %if.end25.sw.bb48_crit_edge215
    i32 42, label %sw.bb52
    i32 43, label %if.end25.sw.bb56_crit_edge
    i32 50, label %if.end25.sw.bb72_crit_edge
    i32 51, label %if.end25.sw.bb72_crit_edge216
    i32 52, label %if.end25.sw.bb72_crit_edge217
    i32 49, label %if.end25.sw.bb72_crit_edge218
    i32 44, label %sw.bb90
    i32 40, label %if.end25.sw.bb82_crit_edge
    i32 38, label %if.end25.sw.bb76_crit_edge
    i32 39, label %if.end25.sw.bb76_crit_edge219
    i32 41, label %if.end25.sw.bb82_crit_edge220
  ]

if.end25.sw.bb82_crit_edge220:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb82

if.end25.sw.bb76_crit_edge219:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb76

if.end25.sw.bb76_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb76

if.end25.sw.bb82_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb82

if.end25.sw.bb72_crit_edge218:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb72

if.end25.sw.bb72_crit_edge217:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb72

if.end25.sw.bb72_crit_edge216:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb72

if.end25.sw.bb72_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb72

if.end25.sw.bb56_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb56

if.end25.sw.bb48_crit_edge215:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

if.end25.sw.bb48_crit_edge214:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

if.end25.sw.bb48_crit_edge213:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

if.end25.sw.bb48_crit_edge212:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

if.end25.sw.bb48_crit_edge211:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

if.end25.sw.bb48_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

if.end25.sw.bb_crit_edge210:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end25.sw.bb_crit_edge:                         ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

sw.bb:                                            ; preds = %if.end25.sw.bb_crit_edge, %if.end25.sw.bb_crit_edge210
  %52 = ptrtoint ptr %evbit to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %evbit, align 8
  %or29 = or i32 %53, 32
  store i32 %or29, ptr %evbit, align 8
  %swbit = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 13
  %54 = ptrtoint ptr %swbit to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %swbit, align 4
  %or.i176 = or i32 %55, 16384
  store i32 %or.i176, ptr %swbit, align 4
  %shared = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %56 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %shared, align 4
  %touch = getelementptr inbounds %struct.wacom_shared, ptr %57, i32 0, i32 6
  %58 = ptrtoint ptr %touch to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %touch, align 4
  %product = getelementptr inbounds %struct.hid_device, ptr %59, i32 0, i32 11
  %60 = ptrtoint ptr %product to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %product, align 8
  %62 = zext i32 %61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %62, ptr @__sancov_gen_cov_switch_values.265)
  switch i32 %61, label %sw.bb.if.end47_crit_edge [
    i32 865, label %sw.bb.if.end47.sink.split_crit_edge
    i32 864, label %if.then38
    i32 915, label %if.then44
  ]

sw.bb.if.end47.sink.split_crit_edge:              ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end47.sink.split

sw.bb.if.end47_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end47

if.then38:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end47.sink.split

if.then44:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end47.sink.split

if.end47.sink.split:                              ; preds = %if.then44, %if.then38, %sw.bb.if.end47.sink.split_crit_edge
  %.sink209 = phi i32 [ 8960, %if.then38 ], [ 6400, %if.then44 ], [ 12440, %sw.bb.if.end47.sink.split_crit_edge ]
  %.sink208 = phi i32 [ 5920, %if.then38 ], [ 4000, %if.then44 ], [ 8640, %sw.bb.if.end47.sink.split_crit_edge ]
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 53, i32 noundef 0, i32 noundef %.sink209, i32 noundef 4, i32 noundef 0) #8
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 54, i32 noundef 0, i32 noundef %.sink208, i32 noundef 4, i32 noundef 0) #8
  br label %if.end47

if.end47:                                         ; preds = %if.end47.sink.split, %sw.bb.if.end47_crit_edge
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %absinfo.i198 = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 26
  %63 = ptrtoint ptr %absinfo.i198 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %absinfo.i198, align 8
  %tobool.not.i199 = icmp eq ptr %64, null
  br i1 %tobool.not.i199, label %if.end47.input_abs_set_res.exit202_crit_edge, label %if.then.i201

if.end47.input_abs_set_res.exit202_crit_edge:     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit202

if.then.i201:                                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i200 = getelementptr %struct.input_absinfo, ptr %64, i32 53, i32 5
  %65 = ptrtoint ptr %resolution.i200 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 40, ptr %resolution.i200, align 4
  br label %input_abs_set_res.exit202

input_abs_set_res.exit202:                        ; preds = %if.then.i201, %if.end47.input_abs_set_res.exit202_crit_edge
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %66 = ptrtoint ptr %absinfo.i198 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %absinfo.i198, align 8
  %tobool.not.i204 = icmp eq ptr %67, null
  br i1 %tobool.not.i204, label %input_abs_set_res.exit202.sw.bb48_crit_edge, label %if.then.i206

input_abs_set_res.exit202.sw.bb48_crit_edge:      ; preds = %input_abs_set_res.exit202
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb48

if.then.i206:                                     ; preds = %input_abs_set_res.exit202
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i205 = getelementptr %struct.input_absinfo, ptr %67, i32 54, i32 5
  %68 = ptrtoint ptr %resolution.i205 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 40, ptr %resolution.i205, align 4
  br label %sw.bb48

sw.bb48:                                          ; preds = %if.then.i206, %input_abs_set_res.exit202.sw.bb48_crit_edge, %if.end25.sw.bb48_crit_edge, %if.end25.sw.bb48_crit_edge211, %if.end25.sw.bb48_crit_edge212, %if.end25.sw.bb48_crit_edge213, %if.end25.sw.bb48_crit_edge214, %if.end25.sw.bb48_crit_edge215
  %x_max49 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 1
  %69 = ptrtoint ptr %x_max49 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %x_max49, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 48, i32 noundef 0, i32 noundef %70, i32 noundef 0, i32 noundef 0) #8
  %y_max50 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 2
  %71 = ptrtoint ptr %y_max50 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %y_max50, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 49, i32 noundef 0, i32 noundef %72, i32 noundef 0, i32 noundef 0) #8
  %73 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %touch_max, align 4
  %call = tail call i32 @input_mt_init_slots(ptr noundef %input_dev, i32 noundef %74, i32 noundef 1) #8
  br label %cleanup

sw.bb52:                                          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  %x_max53 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 1
  %75 = ptrtoint ptr %x_max53 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %x_max53, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 48, i32 noundef 0, i32 noundef %76, i32 noundef 0, i32 noundef 0) #8
  %77 = ptrtoint ptr %x_max53 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %x_max53, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 50, i32 noundef 0, i32 noundef %78, i32 noundef 0, i32 noundef 0) #8
  %y_max55 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 2
  %79 = ptrtoint ptr %y_max55 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %y_max55, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 51, i32 noundef 0, i32 noundef %80, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 52, i32 noundef 0, i32 noundef 1, i32 noundef 0, i32 noundef 0) #8
  br label %sw.bb56

sw.bb56:                                          ; preds = %sw.bb52, %if.end25.sw.bb56_crit_edge
  %shared57 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 11
  %81 = ptrtoint ptr %shared57 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %shared57, align 4
  %touch58 = getelementptr inbounds %struct.wacom_shared, ptr %82, i32 0, i32 6
  %83 = ptrtoint ptr %touch58 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %touch58, align 4
  %product59 = getelementptr inbounds %struct.hid_device, ptr %84, i32 0, i32 11
  %85 = ptrtoint ptr %product59 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %product59, align 8
  %87 = zext i32 %86 to i64
  call void @__sanitizer_cov_trace_switch(i64 %87, ptr @__sancov_gen_cov_switch_values.266)
  switch i32 %86, label %sw.bb56.sw.bb72_crit_edge [
    i32 812, label %sw.bb56.if.then65_crit_edge
    i32 246, label %sw.bb56.if.then65_crit_edge221
  ]

sw.bb56.if.then65_crit_edge221:                   ; preds = %sw.bb56
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then65

sw.bb56.if.then65_crit_edge:                      ; preds = %sw.bb56
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then65

sw.bb56.sw.bb72_crit_edge:                        ; preds = %sw.bb56
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb72

if.then65:                                        ; preds = %sw.bb56.if.then65_crit_edge, %sw.bb56.if.then65_crit_edge221
  %88 = ptrtoint ptr %evbit to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %evbit, align 8
  %or68 = or i32 %89, 32
  store i32 %or68, ptr %evbit, align 8
  %swbit69 = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 13
  %90 = ptrtoint ptr %swbit69 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %swbit69, align 4
  %or.i177 = or i32 %91, 16384
  store i32 %or.i177, ptr %swbit69, align 4
  %has_mute_touch_switch = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 23
  %92 = ptrtoint ptr %has_mute_touch_switch to i32
  call void @__asan_store1_noabort(i32 %92)
  store i8 1, ptr %has_mute_touch_switch, align 8
  %is_soft_touch_switch = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 24
  %93 = ptrtoint ptr %is_soft_touch_switch to i32
  call void @__asan_store1_noabort(i32 %93)
  store i8 1, ptr %is_soft_touch_switch, align 1
  br label %sw.bb72

sw.bb72:                                          ; preds = %if.then65, %sw.bb56.sw.bb72_crit_edge, %if.end25.sw.bb72_crit_edge, %if.end25.sw.bb72_crit_edge216, %if.end25.sw.bb72_crit_edge217, %if.end25.sw.bb72_crit_edge218
  %94 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %touch_max, align 4
  %call74 = tail call i32 @input_mt_init_slots(ptr noundef %input_dev, i32 noundef %95, i32 noundef 2) #8
  br label %cleanup

sw.bb76:                                          ; preds = %if.end25.sw.bb76_crit_edge, %if.end25.sw.bb76_crit_edge219
  %96 = ptrtoint ptr %evbit to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %evbit, align 8
  %or79 = or i32 %97, 32
  store i32 %or79, ptr %evbit, align 8
  %swbit80 = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 13
  %98 = ptrtoint ptr %swbit80 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %swbit80, align 4
  %or.i178 = or i32 %99, 16384
  store i32 %or.i178, ptr %swbit80, align 4
  br label %sw.bb82

sw.bb82:                                          ; preds = %sw.bb76, %if.end25.sw.bb82_crit_edge, %if.end25.sw.bb82_crit_edge220
  %pktlen = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 27
  %100 = ptrtoint ptr %pktlen to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %pktlen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %101)
  %cmp83 = icmp eq i32 %101, 64
  br i1 %cmp83, label %if.then84, label %sw.bb82.if.end87_crit_edge

sw.bb82.if.end87_crit_edge:                       ; preds = %sw.bb82
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end87

if.then84:                                        ; preds = %sw.bb82
  call void @__sanitizer_cov_trace_pc() #10
  %x_max85 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 1
  %102 = ptrtoint ptr %x_max85 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %x_max85, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 48, i32 noundef 0, i32 noundef %103, i32 noundef 0, i32 noundef 0) #8
  %y_max86 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 2
  %104 = ptrtoint ptr %y_max86 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %y_max86, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 49, i32 noundef 0, i32 noundef %105, i32 noundef 0, i32 noundef 0) #8
  br label %if.end87

if.end87:                                         ; preds = %if.then84, %sw.bb82.if.end87_crit_edge
  %106 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %touch_max, align 4
  %call89 = tail call i32 @input_mt_init_slots(ptr noundef %input_dev, i32 noundef %107, i32 noundef 1) #8
  br label %cleanup

sw.bb90:                                          ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #10
  %108 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %touch_max, align 4
  %call92 = tail call i32 @input_mt_init_slots(ptr noundef %input_dev, i32 noundef %109, i32 noundef 1) #8
  %add.ptr.i179 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 8
  %110 = ptrtoint ptr %add.ptr.i179 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %add.ptr.i179, align 4
  %or.i182 = or i32 %111, 196608
  store i32 %or.i182, ptr %add.ptr.i179, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.bb90, %if.end87, %sw.bb72, %sw.bb48, %if.end25.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -19, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %sw.bb72 ], [ 0, %if.end25.cleanup_crit_edge ], [ 0, %sw.bb90 ], [ 0, %if.end87 ], [ 0, %sw.bb48 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @input_mt_init_slots(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @wacom_setup_pad_input_capabilities(ptr noundef %input_dev, ptr nocapture noundef %wacom_wac) local_unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 5
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 53, i32 %1)
  %cmp = icmp eq i32 %1, 53
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %numbered_buttons = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 8
  %2 = ptrtoint ptr %numbered_buttons to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %numbered_buttons, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp2 = icmp sgt i32 %3, 0
  br i1 %cmp2, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #10
  %device_type = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 13
  %4 = ptrtoint ptr %device_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %device_type, align 4
  %or = or i32 %5, 4
  store i32 %or, ptr %device_type, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %device_type3 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 13
  %6 = ptrtoint ptr %device_type3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %device_type3, align 4
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 46, i32 %1)
  %cmp7 = icmp eq i32 %1, 46
  br i1 %cmp7, label %land.lhs.true8, label %if.end5.if.end11_crit_edge

if.end5.if.end11_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end11

land.lhs.true8:                                   ; preds = %if.end5
  %pad_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 14
  %8 = ptrtoint ptr %pad_input to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pad_input, align 8
  %cmp9 = icmp eq ptr %9, %input_dev
  br i1 %cmp9, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end11_crit_edge

land.lhs.true8.if.end11_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end11

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end11:                                         ; preds = %land.lhs.true8.if.end11_crit_edge, %if.end5.if.end11_crit_edge
  %evbit = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 5
  %10 = ptrtoint ptr %evbit to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %evbit, align 8
  %or12 = or i32 %11, 10
  store i32 %or12, ptr %evbit, align 8
  %add.ptr.i = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 8, i32 1
  %12 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %add.ptr.i, align 4
  %or.i = or i32 %13, 256
  store i32 %or.i, ptr %add.ptr.i, align 4
  %absinfo = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 26
  %14 = ptrtoint ptr %absinfo to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %absinfo, align 8
  %tobool13.not = icmp eq ptr %15, null
  br i1 %tobool13.not, label %if.end11.if.then21_crit_edge, label %land.lhs.true14

if.end11.if.then21_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then21

land.lhs.true14:                                  ; preds = %if.end11
  %minimum = getelementptr inbounds %struct.input_absinfo, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %minimum to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %minimum, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool17.not = icmp eq i32 %17, 0
  br i1 %tobool17.not, label %lor.lhs.false, label %land.lhs.true14.if.end22_crit_edge

land.lhs.true14.if.end22_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end22

lor.lhs.false:                                    ; preds = %land.lhs.true14
  %maximum = getelementptr inbounds %struct.input_absinfo, ptr %15, i32 0, i32 2
  %18 = ptrtoint ptr %maximum to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %maximum, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool20.not = icmp eq i32 %19, 0
  br i1 %tobool20.not, label %lor.lhs.false.if.then21_crit_edge, label %lor.lhs.false.if.end22_crit_edge

lor.lhs.false.if.end22_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end22

lor.lhs.false.if.then21_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then21

if.then21:                                        ; preds = %lor.lhs.false.if.then21_crit_edge, %if.end11.if.then21_crit_edge
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef 0, i32 noundef 0) #8
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %lor.lhs.false.if.end22_crit_edge, %land.lhs.true14.if.end22_crit_edge
  %20 = ptrtoint ptr %absinfo to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %absinfo, align 8
  %tobool24.not = icmp eq ptr %21, null
  br i1 %tobool24.not, label %if.end22.if.then35_crit_edge, label %land.lhs.true25

if.end22.if.then35_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then35

land.lhs.true25:                                  ; preds = %if.end22
  %minimum28 = getelementptr %struct.input_absinfo, ptr %21, i32 1, i32 1
  %22 = ptrtoint ptr %minimum28 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %minimum28, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool29.not = icmp eq i32 %23, 0
  br i1 %tobool29.not, label %lor.lhs.false30, label %land.lhs.true25.if.end36_crit_edge

land.lhs.true25.if.end36_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end36

lor.lhs.false30:                                  ; preds = %land.lhs.true25
  %maximum33 = getelementptr %struct.input_absinfo, ptr %21, i32 1, i32 2
  %24 = ptrtoint ptr %maximum33 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %maximum33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool34.not = icmp eq i32 %25, 0
  br i1 %tobool34.not, label %lor.lhs.false30.if.then35_crit_edge, label %lor.lhs.false30.if.end36_crit_edge

lor.lhs.false30.if.end36_crit_edge:               ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end36

lor.lhs.false30.if.then35_crit_edge:              ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then35

if.then35:                                        ; preds = %lor.lhs.false30.if.then35_crit_edge, %if.end22.if.then35_crit_edge
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 1, i32 noundef 0, i32 noundef 1, i32 noundef 0, i32 noundef 0) #8
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %lor.lhs.false30.if.end36_crit_edge, %land.lhs.true25.if.end36_crit_edge
  %keybit = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 6
  %add.ptr.i192 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 10
  %26 = ptrtoint ptr %add.ptr.i192 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %add.ptr.i192, align 4
  %or.i193 = or i32 %27, 2048
  store i32 %or.i193, ptr %add.ptr.i192, align 4
  %numbered_buttons38 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 8
  %28 = ptrtoint ptr %numbered_buttons38 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %numbered_buttons38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp10.i = icmp sgt i32 %29, 0
  br i1 %cmp10.i, label %if.end36.for.body.i_crit_edge, label %if.end36.wacom_setup_numbered_buttons.exit_crit_edge

if.end36.wacom_setup_numbered_buttons.exit_crit_edge: ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_setup_numbered_buttons.exit

if.end36.for.body.i_crit_edge:                    ; preds = %if.end36
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %if.end36.for.body.i_crit_edge
  %i.011.i = phi i32 [ %inc.i, %if.end.i.for.body.i_crit_edge ], [ 0, %if.end36.for.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %i.011.i)
  %cmp.i.i = icmp ult i32 %i.011.i, 10
  br i1 %cmp.i.i, label %wacom_numbered_button_to_key.exit.i, label %if.else.i.i

if.else.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %i.011.i)
  %cmp1.i.i = icmp ult i32 %i.011.i, 16
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else4.i.i

if.then2.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #10
  %add3.i.i = add nuw nsw i32 %i.011.i, 294
  br label %if.then.i

if.else4.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %i.011.i)
  %cmp5.i.i = icmp ult i32 %i.011.i, 18
  %add8.i.i = add nuw i32 %i.011.i, 278
  br i1 %cmp5.i.i, label %if.else4.i.i.if.then.i_crit_edge, label %if.else4.i.i.if.end.i_crit_edge

if.else4.i.i.if.end.i_crit_edge:                  ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end.i

if.else4.i.i.if.then.i_crit_edge:                 ; preds = %if.else4.i.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then.i

wacom_numbered_button_to_key.exit.i:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #10
  %add.i.i = add nuw nsw i32 %i.011.i, 256
  br label %if.then.i

if.then.i:                                        ; preds = %wacom_numbered_button_to_key.exit.i, %if.else4.i.i.if.then.i_crit_edge, %if.then2.i.i
  %retval.0.i6.i = phi i32 [ %add.i.i, %wacom_numbered_button_to_key.exit.i ], [ %add3.i.i, %if.then2.i.i ], [ %add8.i.i, %if.else4.i.i.if.then.i_crit_edge ]
  %rem.i.i = and i32 %retval.0.i6.i, 31
  %shl.i.i = shl nuw i32 1, %rem.i.i
  %div2.i.i = lshr i32 %retval.0.i6.i, 5
  %add.ptr.i.i = getelementptr i32, ptr %keybit, i32 %div2.i.i
  %30 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr.i.i, align 4
  %or.i.i = or i32 %shl.i.i, %31
  store i32 %or.i.i, ptr %add.ptr.i.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.else4.i.i.if.end.i_crit_edge
  %inc.i = add nuw nsw i32 %i.011.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %29
  br i1 %exitcond.not.i, label %if.end.i.wacom_setup_numbered_buttons.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %for.body.i

if.end.i.wacom_setup_numbered_buttons.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %wacom_setup_numbered_buttons.exit

wacom_setup_numbered_buttons.exit:                ; preds = %if.end.i.wacom_setup_numbered_buttons.exit_crit_edge, %if.end36.wacom_setup_numbered_buttons.exit_crit_edge
  %32 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %type, align 4
  %34 = zext i32 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.267)
  switch i32 %33, label %wacom_setup_numbered_buttons.exit.cleanup_crit_edge [
    i32 31, label %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge
    i32 32, label %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge266
    i32 28, label %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge267
    i32 7, label %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge268
    i32 2, label %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge269
    i32 36, label %sw.bb40
    i32 3, label %sw.bb49
    i32 29, label %sw.bb54
    i32 30, label %sw.bb70
    i32 27, label %sw.bb88
    i32 26, label %wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge
    i32 34, label %wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge270
    i32 33, label %wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge271
    i32 35, label %sw.bb100
    i32 11, label %wacom_setup_numbered_buttons.exit.sw.bb101_crit_edge
    i32 12, label %wacom_setup_numbered_buttons.exit.sw.bb101_crit_edge272
    i32 10, label %wacom_setup_numbered_buttons.exit.sw.bb102_crit_edge
    i32 18, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge
    i32 19, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge273
    i32 21, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge274
    i32 22, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge275
    i32 17, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge276
    i32 20, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge277
    i32 23, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge278
    i32 24, label %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge279
    i32 15, label %sw.bb104
    i32 14, label %wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge
    i32 16, label %wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge280
    i32 13, label %wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge281
    i32 38, label %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge
    i32 41, label %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge282
    i32 40, label %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge283
    i32 39, label %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge284
    i32 46, label %sw.bb119
    i32 25, label %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge285
    i32 53, label %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge286
  ]

wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge286: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge285: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge284: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb108

wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge283: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb108

wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge282: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb108

wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb108

wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge281: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb107

wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge280: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb107

wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb107

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge279: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge278: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge277: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge276: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge275: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge274: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge273: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb103

wacom_setup_numbered_buttons.exit.sw.bb102_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb102

wacom_setup_numbered_buttons.exit.sw.bb101_crit_edge272: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb101

wacom_setup_numbered_buttons.exit.sw.bb101_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb101

wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge271: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb99

wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge270: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb99

wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb99

wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge269: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge268: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge267: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge266: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

wacom_setup_numbered_buttons.exit.cleanup_crit_edge: ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

sw.bb40:                                          ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  %add.ptr.i194 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 8
  %35 = ptrtoint ptr %add.ptr.i194 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %add.ptr.i194, align 4
  %or.i201 = or i32 %36, 6488064
  store i32 %or.i201, ptr %add.ptr.i194, align 4
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 8, i32 noundef 0, i32 noundef 71, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb49:                                          ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  %add.ptr.i202 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 8
  %37 = ptrtoint ptr %add.ptr.i202 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %add.ptr.i202, align 4
  %or.i205 = or i32 %38, 6291456
  store i32 %or.i205, ptr %add.ptr.i202, align 4
  tail call void @input_set_capability(ptr noundef %input_dev, i32 noundef 2, i32 noundef 8) #8
  br label %sw.epilog

sw.bb54:                                          ; preds = %wacom_setup_numbered_buttons.exit
  %add.ptr.i206 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 4
  %39 = ptrtoint ptr %add.ptr.i206 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %add.ptr.i206, align 4
  %or.i209 = or i32 %40, 3145728
  store i32 %or.i209, ptr %add.ptr.i206, align 4
  %add.ptr.i210 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 6
  %41 = ptrtoint ptr %add.ptr.i210 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %add.ptr.i210, align 4
  %or.i211 = or i32 %42, 1024
  store i32 %or.i211, ptr %add.ptr.i210, align 4
  %add.ptr.i212 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 19
  %43 = ptrtoint ptr %add.ptr.i212 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %add.ptr.i212, align 4
  %or.i213 = or i32 %44, 16777216
  store i32 %or.i213, ptr %add.ptr.i212, align 4
  %add.ptr.i214 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 11
  %45 = ptrtoint ptr %add.ptr.i214 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %add.ptr.i214, align 4
  %or.i215 = or i32 %46, 64
  store i32 %or.i215, ptr %add.ptr.i214, align 4
  %oPid = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 26
  %47 = ptrtoint ptr %oPid to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %oPid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool65.not = icmp eq i32 %48, 0
  br i1 %tobool65.not, label %if.then66, label %sw.bb54.if.end69_crit_edge

sw.bb54.if.end69_crit_edge:                       ; preds = %sw.bb54
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end69

if.then66:                                        ; preds = %sw.bb54
  call void @__sanitizer_cov_trace_pc() #10
  %add.ptr.i216 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 18
  %49 = ptrtoint ptr %add.ptr.i216 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %add.ptr.i216, align 4
  %or.i217 = or i32 %50, 1
  store i32 %or.i217, ptr %add.ptr.i216, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.then66, %sw.bb54.if.end69_crit_edge
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 8, i32 noundef 0, i32 noundef 71, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 6, i32 noundef 0, i32 noundef 71, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb70:                                          ; preds = %wacom_setup_numbered_buttons.exit
  %add.ptr.i218 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 4
  %51 = ptrtoint ptr %add.ptr.i218 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %add.ptr.i218, align 4
  %or.i221 = or i32 %52, 3145728
  store i32 %or.i221, ptr %add.ptr.i218, align 4
  %add.ptr.i222 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 6
  %53 = ptrtoint ptr %add.ptr.i222 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %add.ptr.i222, align 4
  %or.i223 = or i32 %54, 1024
  store i32 %or.i223, ptr %add.ptr.i222, align 4
  %add.ptr.i224 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 19
  %55 = ptrtoint ptr %add.ptr.i224 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %add.ptr.i224, align 4
  %or.i225 = or i32 %56, 16777216
  store i32 %or.i225, ptr %add.ptr.i224, align 4
  %add.ptr.i226 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 18
  %57 = ptrtoint ptr %add.ptr.i226 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %add.ptr.i226, align 4
  %or.i227 = or i32 %58, 1
  store i32 %or.i227, ptr %add.ptr.i226, align 4
  %oPid81 = getelementptr inbounds %struct.wacom_wac, ptr %wacom_wac, i32 0, i32 10, i32 26
  %59 = ptrtoint ptr %oPid81 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %oPid81, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool82.not = icmp eq i32 %60, 0
  br i1 %tobool82.not, label %if.then83, label %sw.bb70.if.end86_crit_edge

sw.bb70.if.end86_crit_edge:                       ; preds = %sw.bb70
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end86

if.then83:                                        ; preds = %sw.bb70
  call void @__sanitizer_cov_trace_pc() #10
  %or.i229 = or i32 %58, 9
  %61 = ptrtoint ptr %add.ptr.i226 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %or.i229, ptr %add.ptr.i226, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then83, %sw.bb70.if.end86_crit_edge
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 0, i32 noundef -2048, i32 noundef 2048, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %62 = ptrtoint ptr %absinfo to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %absinfo, align 8
  %tobool.not.i = icmp eq ptr %63, null
  br i1 %tobool.not.i, label %if.end86.input_abs_set_res.exit_crit_edge, label %if.then.i252

if.end86.input_abs_set_res.exit_crit_edge:        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit

if.then.i252:                                     ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i = getelementptr %struct.input_absinfo, ptr %63, i32 0, i32 5
  %64 = ptrtoint ptr %resolution.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 1024, ptr %resolution.i, align 4
  br label %input_abs_set_res.exit

input_abs_set_res.exit:                           ; preds = %if.then.i252, %if.end86.input_abs_set_res.exit_crit_edge
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 1, i32 noundef -2048, i32 noundef 2048, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %65 = ptrtoint ptr %absinfo to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %absinfo, align 8
  %tobool.not.i255 = icmp eq ptr %66, null
  br i1 %tobool.not.i255, label %input_abs_set_res.exit.input_abs_set_res.exit259_crit_edge, label %if.then.i257

input_abs_set_res.exit.input_abs_set_res.exit259_crit_edge: ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit259

if.then.i257:                                     ; preds = %input_abs_set_res.exit
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i256 = getelementptr %struct.input_absinfo, ptr %66, i32 1, i32 5
  %67 = ptrtoint ptr %resolution.i256 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 1024, ptr %resolution.i256, align 4
  br label %input_abs_set_res.exit259

input_abs_set_res.exit259:                        ; preds = %if.then.i257, %input_abs_set_res.exit.input_abs_set_res.exit259_crit_edge
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 2, i32 noundef -2048, i32 noundef 2048, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_alloc_absinfo(ptr noundef %input_dev) #8
  %68 = ptrtoint ptr %absinfo to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %absinfo, align 8
  %tobool.not.i261 = icmp eq ptr %69, null
  br i1 %tobool.not.i261, label %input_abs_set_res.exit259.input_abs_set_res.exit265_crit_edge, label %if.then.i263

input_abs_set_res.exit259.input_abs_set_res.exit265_crit_edge: ; preds = %input_abs_set_res.exit259
  call void @__sanitizer_cov_trace_pc() #10
  br label %input_abs_set_res.exit265

if.then.i263:                                     ; preds = %input_abs_set_res.exit259
  call void @__sanitizer_cov_trace_pc() #10
  %resolution.i262 = getelementptr %struct.input_absinfo, ptr %69, i32 2, i32 5
  %70 = ptrtoint ptr %resolution.i262 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 1024, ptr %resolution.i262, align 4
  br label %input_abs_set_res.exit265

input_abs_set_res.exit265:                        ; preds = %if.then.i263, %input_abs_set_res.exit259.input_abs_set_res.exit265_crit_edge
  %propbit = getelementptr inbounds %struct.input_dev, ptr %input_dev, i32 0, i32 4
  %71 = ptrtoint ptr %propbit to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %propbit, align 4
  %or.i230 = or i32 %72, 64
  store i32 %or.i230, ptr %propbit, align 4
  br label %sw.epilog

sw.bb88:                                          ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  %add.ptr.i231 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 4
  %73 = ptrtoint ptr %add.ptr.i231 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %add.ptr.i231, align 4
  %or.i234 = or i32 %74, 3145728
  store i32 %or.i234, ptr %add.ptr.i231, align 4
  %add.ptr.i235 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 6
  %75 = ptrtoint ptr %add.ptr.i235 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %add.ptr.i235, align 4
  %or.i236 = or i32 %76, 1024
  store i32 %or.i236, ptr %add.ptr.i235, align 4
  %add.ptr.i237 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 18
  %77 = ptrtoint ptr %add.ptr.i237 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %add.ptr.i237, align 4
  %or.i238 = or i32 %78, 1
  store i32 %or.i238, ptr %add.ptr.i237, align 4
  %add.ptr.i239 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 11
  %79 = ptrtoint ptr %add.ptr.i239 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %add.ptr.i239, align 4
  %or.i240 = or i32 %80, 64
  store i32 %or.i240, ptr %add.ptr.i239, align 4
  br label %sw.bb99

sw.bb99:                                          ; preds = %sw.bb88, %wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge, %wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge270, %wacom_setup_numbered_buttons.exit.sw.bb99_crit_edge271
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 3, i32 noundef 0, i32 noundef 4096, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 4, i32 noundef 0, i32 noundef 4096, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb100:                                         ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 8, i32 noundef 0, i32 noundef 71, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb101:                                         ; preds = %wacom_setup_numbered_buttons.exit.sw.bb101_crit_edge, %wacom_setup_numbered_buttons.exit.sw.bb101_crit_edge272
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 4, i32 noundef 0, i32 noundef 4096, i32 noundef 0, i32 noundef 0) #8
  br label %sw.bb102

sw.bb102:                                         ; preds = %sw.bb101, %wacom_setup_numbered_buttons.exit.sw.bb102_crit_edge
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 3, i32 noundef 0, i32 noundef 4096, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb103:                                         ; preds = %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge, %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge273, %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge274, %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge275, %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge276, %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge277, %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge278, %wacom_setup_numbered_buttons.exit.sw.bb103_crit_edge279
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 8, i32 noundef 0, i32 noundef 71, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb104:                                         ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  %81 = ptrtoint ptr %add.ptr.i192 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %add.ptr.i192, align 4
  %or.i242 = or i32 %82, 2048
  store i32 %or.i242, ptr %add.ptr.i192, align 4
  br label %sw.bb107

sw.bb107:                                         ; preds = %sw.bb104, %wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge, %wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge280, %wacom_setup_numbered_buttons.exit.sw.bb107_crit_edge281
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 8, i32 noundef 0, i32 noundef 71, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.bb108:                                         ; preds = %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge, %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge282, %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge283, %wacom_setup_numbered_buttons.exit.sw.bb108_crit_edge284
  %83 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %add.ptr.i, align 4
  %and.i = and i32 %84, -257
  store i32 %and.i, ptr %add.ptr.i, align 4
  %add.ptr.i244 = getelementptr %struct.input_dev, ptr %input_dev, i32 0, i32 6, i32 8
  %85 = ptrtoint ptr %add.ptr.i244 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %add.ptr.i244, align 4
  %or.i251 = or i32 %86, 6488064
  store i32 %or.i251, ptr %add.ptr.i244, align 4
  br label %sw.epilog

sw.bb119:                                         ; preds = %wacom_setup_numbered_buttons.exit
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_set_capability(ptr noundef %input_dev, i32 noundef 4, i32 noundef 0) #8
  tail call void @input_set_abs_params(ptr noundef %input_dev, i32 noundef 8, i32 noundef 0, i32 noundef 71, i32 noundef 0, i32 noundef 0) #8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb119, %sw.bb108, %sw.bb107, %sw.bb103, %sw.bb102, %sw.bb100, %sw.bb99, %input_abs_set_res.exit265, %if.end69, %sw.bb49, %sw.bb40, %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge, %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge266, %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge267, %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge268, %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge269, %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge285, %wacom_setup_numbered_buttons.exit.sw.epilog_crit_edge286
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %wacom_setup_numbered_buttons.exit.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %land.lhs.true8.cleanup_crit_edge ], [ -19, %wacom_setup_numbered_buttons.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hidinput_calc_abs_res(ptr noundef, i16 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_event(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_update_led(ptr noundef %wacom, i32 noundef %button_count, i32 noundef %mask, i32 noundef %group) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 2, i32 10, i32 5
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 29, i32 %1)
  %cmp = icmp eq i32 %1, 29
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %group)
  %cmp.i = icmp eq i32 %group, 0
  %shr.i = ashr i32 %mask, 8
  %spec.select.i = select i1 %cmp.i, i32 %shr.i, i32 %mask
  %hdev.i = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 3
  %call.i = tail call ptr @wacom_led_find(ptr noundef %wacom, i32 noundef %group, i32 noundef 0) #8
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %do.end.i, label %land.lhs.true.i

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #10
  %2 = ptrtoint ptr %hdev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hdev.i, align 8
  %dev.i = getelementptr inbounds %struct.hid_device, ptr %3, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.i, ptr noundef nonnull @.str.8, i32 noundef 0, i32 noundef %group) #11
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %if.then
  %and.i = and i32 %spec.select.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  %held7.i = getelementptr inbounds %struct.wacom_led, ptr %call.i, i32 0, i32 7
  br i1 %tobool5.not.i, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  %4 = ptrtoint ptr %held7.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %held7.i, align 2
  %trigger.i = getelementptr inbounds %struct.wacom_led, ptr %call.i, i32 0, i32 1
  tail call void @led_trigger_event(ptr noundef %trigger.i, i32 noundef 255) #8
  br label %for.inc.i

if.else.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #10
  %5 = ptrtoint ptr %held7.i to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %held7.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i, %if.then6.i, %do.end.i
  %call.1.i = tail call ptr @wacom_led_find(ptr noundef %wacom, i32 noundef %group, i32 noundef 1) #8
  %tobool.not.1.i = icmp eq ptr %call.1.i, null
  br i1 %tobool.not.1.i, label %do.end.1.i, label %land.lhs.true.1.i

land.lhs.true.1.i:                                ; preds = %for.inc.i
  %and.1.i = and i32 %spec.select.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i)
  %tobool5.not.1.i = icmp eq i32 %and.1.i, 0
  %held7.1.i = getelementptr inbounds %struct.wacom_led, ptr %call.1.i, i32 0, i32 7
  br i1 %tobool5.not.1.i, label %if.else.1.i, label %if.then6.1.i

if.then6.1.i:                                     ; preds = %land.lhs.true.1.i
  call void @__sanitizer_cov_trace_pc() #10
  %6 = ptrtoint ptr %held7.1.i to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %held7.1.i, align 2
  %trigger.1.i = getelementptr inbounds %struct.wacom_led, ptr %call.1.i, i32 0, i32 1
  tail call void @led_trigger_event(ptr noundef %trigger.1.i, i32 noundef 255) #8
  br label %for.inc.1.i

if.else.1.i:                                      ; preds = %land.lhs.true.1.i
  call void @__sanitizer_cov_trace_pc() #10
  %7 = ptrtoint ptr %held7.1.i to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %held7.1.i, align 2
  br label %for.inc.1.i

do.end.1.i:                                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #10
  %8 = ptrtoint ptr %hdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %hdev.i, align 8
  %dev.1.i = getelementptr inbounds %struct.hid_device, ptr %9, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.1.i, ptr noundef nonnull @.str.8, i32 noundef 1, i32 noundef %group) #11
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %do.end.1.i, %if.else.1.i, %if.then6.1.i
  %call.2.i = tail call ptr @wacom_led_find(ptr noundef %wacom, i32 noundef %group, i32 noundef 2) #8
  %tobool.not.2.i = icmp eq ptr %call.2.i, null
  br i1 %tobool.not.2.i, label %do.end.2.i, label %land.lhs.true.2.i

land.lhs.true.2.i:                                ; preds = %for.inc.1.i
  %and.2.i = and i32 %spec.select.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2.i)
  %tobool5.not.2.i = icmp eq i32 %and.2.i, 0
  %held7.2.i = getelementptr inbounds %struct.wacom_led, ptr %call.2.i, i32 0, i32 7
  br i1 %tobool5.not.2.i, label %if.else.2.i, label %if.then6.2.i

if.then6.2.i:                                     ; preds = %land.lhs.true.2.i
  call void @__sanitizer_cov_trace_pc() #10
  %10 = ptrtoint ptr %held7.2.i to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 1, ptr %held7.2.i, align 2
  %trigger.2.i = getelementptr inbounds %struct.wacom_led, ptr %call.2.i, i32 0, i32 1
  tail call void @led_trigger_event(ptr noundef %trigger.2.i, i32 noundef 255) #8
  br label %cleanup

if.else.2.i:                                      ; preds = %land.lhs.true.2.i
  call void @__sanitizer_cov_trace_pc() #10
  %11 = ptrtoint ptr %held7.2.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %held7.2.i, align 2
  br label %cleanup

do.end.2.i:                                       ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #10
  %12 = ptrtoint ptr %hdev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hdev.i, align 8
  %dev.2.i = getelementptr inbounds %struct.hid_device, ptr %13, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev.2.i, ptr noundef nonnull @.str.8, i32 noundef 2, i32 noundef %group) #11
  br label %cleanup

if.end:                                           ; preds = %entry
  %count.i = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 12, i32 1
  %14 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %count.i, align 4
  %led1 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 12
  %16 = ptrtoint ptr %led1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %led1, align 4
  %arrayidx = getelementptr %struct.wacom_group_leds, ptr %17, i32 %group
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx, align 4
  %conv = zext i8 %19 to i32
  %call2 = tail call ptr @wacom_led_find(ptr noundef %wacom, i32 noundef %group, i32 noundef %conv) #8
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %do.end, label %if.end4

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %hdev = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 3
  %20 = ptrtoint ptr %hdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hdev, align 8
  %dev = getelementptr inbounds %struct.hid_device, ptr %21, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str, i32 noundef %conv, i32 noundef %group) #11
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 23, i32 %1)
  %cmp4.i = icmp eq i32 %1, 23
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %1)
  %cmp.i56 = icmp eq i32 %1, 26
  %sub.i = sub i32 1, %group
  %spec.select.i57 = select i1 %cmp.i56, i32 %sub.i, i32 %group
  %div.i = udiv i32 %button_count, %15
  %mul.i = mul i32 %div.i, %spec.select.i57
  %mul.op.i = shl nuw i32 1, %mul.i
  %shl.i = select i1 %cmp4.i, i32 256, i32 %mul.op.i
  %and.i58 = and i32 %shl.i, %mask
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i58)
  %tobool.i.not = icmp eq i32 %and.i58, 0
  %held = getelementptr inbounds %struct.wacom_led, ptr %call2, i32 0, i32 7
  br i1 %tobool.i.not, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #10
  %22 = ptrtoint ptr %held to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 0, ptr %held, align 2
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %23 = ptrtoint ptr %held to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %held, align 2, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool9.not = icmp eq i8 %24, 0
  br i1 %tobool9.not, label %if.end14, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end14:                                         ; preds = %if.end7
  %call15 = tail call ptr @wacom_led_next(ptr noundef %wacom, ptr noundef nonnull %call2) #8
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %do.end20, label %if.end23

do.end20:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #10
  %hdev21 = getelementptr inbounds %struct.wacom, ptr %wacom, i32 0, i32 3
  %25 = ptrtoint ptr %hdev21 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdev21, align 8
  %dev22 = getelementptr inbounds %struct.hid_device, ptr %26, i32 0, i32 18
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev22, ptr noundef nonnull @.str.6, i32 noundef %group) #11
  br label %cleanup

if.end23:                                         ; preds = %if.end14
  %cmp24 = icmp eq ptr %call15, %call2
  br i1 %cmp24, label %if.end23.cleanup_crit_edge, label %if.end27

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end27:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #10
  %held28 = getelementptr inbounds %struct.wacom_led, ptr %call15, i32 0, i32 7
  %27 = ptrtoint ptr %held28 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 1, ptr %held28, align 2
  %trigger = getelementptr inbounds %struct.wacom_led, ptr %call15, i32 0, i32 1
  %call29 = tail call i32 @wacom_leds_brightness_get(ptr noundef nonnull %call15) #8
  tail call void @led_trigger_event(ptr noundef %trigger, i32 noundef %call29) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.end23.cleanup_crit_edge, %do.end20, %if.end7.cleanup_crit_edge, %if.then6, %do.end, %do.end.2.i, %if.else.2.i, %if.then6.2.i
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @wacom_led_find(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @wacom_led_next(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @led_trigger_event(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wacom_leds_brightness_get(ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @wacom_s32tou(i32 noundef %value, i8 noundef zeroext %n) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = zext i8 %n to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.268)
  switch i8 %n, label %sw.epilog [
    i8 8, label %sw.bb
    i8 16, label %sw.bb3
    i8 32, label %entry.return_crit_edge
  ]

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %return

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %conv2 = and i32 %value, 255
  br label %return

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %conv5 = and i32 %value, 65535
  br label %return

sw.epilog:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %conv = zext i8 %n to i32
  %sub = add nsw i32 %conv, -1
  %shl = shl nuw i32 1, %sub
  %and = and i32 %shl, %value
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %shl9 = shl nsw i32 -1, %conv
  %neg = xor i32 %shl9, -1
  %and10 = select i1 %tobool.not, i32 -1, i32 %neg
  %cond = and i32 %and10, %value
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb3, %sw.bb, %entry.return_crit_edge
  %retval.0 = phi i32 [ %cond, %sw.epilog ], [ %conv5, %sw.bb3 ], [ %conv2, %sw.bb ], [ %value, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @input_mt_get_slot_by_key(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @input_mt_report_slot_state(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @wacom_intuos_get_tool_type(i32 noundef %tool_id) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %tool_id to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.269)
  switch i32 %tool_id, label %sw.default [
    i32 2066, label %entry.sw.epilog_crit_edge
    i32 2049, label %entry.sw.epilog_crit_edge7
    i32 75778, label %entry.sw.epilog_crit_edge8
    i32 18, label %entry.sw.epilog_crit_edge9
    i32 2082, label %entry.sw.bb1_crit_edge
    i32 2114, label %entry.sw.bb1_crit_edge10
    i32 2130, label %entry.sw.bb1_crit_edge11
    i32 2083, label %entry.sw.bb1_crit_edge12
    i32 2067, label %entry.sw.bb1_crit_edge13
    i32 2181, label %entry.sw.bb1_crit_edge14
    i32 2050, label %entry.sw.bb1_crit_edge15
    i32 2052, label %entry.sw.bb1_crit_edge16
    i32 2274, label %entry.sw.bb1_crit_edge17
    i32 34, label %entry.sw.bb1_crit_edge18
    i32 67588, label %entry.sw.bb1_crit_edge19
    i32 67650, label %entry.sw.bb1_crit_edge20
    i32 83970, label %entry.sw.bb1_crit_edge21
    i32 92162, label %entry.sw.bb1_crit_edge22
    i32 100354, label %entry.sw.bb1_crit_edge23
    i32 67586, label %entry.sw.bb1_crit_edge24
    i32 2098, label %entry.sw.bb2_crit_edge
    i32 50, label %entry.sw.bb2_crit_edge25
    i32 7, label %entry.sw.bb3_crit_edge
    i32 156, label %entry.sw.bb3_crit_edge26
    i32 148, label %entry.sw.bb3_crit_edge27
    i32 23, label %entry.sw.bb3_crit_edge28
    i32 2054, label %entry.sw.bb3_crit_edge29
    i32 150, label %entry.sw.bb4_crit_edge
    i32 151, label %entry.sw.bb4_crit_edge30
    i32 6, label %entry.sw.bb4_crit_edge31
    i32 2090, label %entry.sw.bb5_crit_edge
    i32 2122, label %entry.sw.bb5_crit_edge32
    i32 2138, label %entry.sw.bb5_crit_edge33
    i32 2330, label %entry.sw.bb5_crit_edge34
    i32 3354, label %entry.sw.bb5_crit_edge35
    i32 250, label %entry.sw.bb5_crit_edge36
    i32 2091, label %entry.sw.bb5_crit_edge37
    i32 2075, label %entry.sw.bb5_crit_edge38
    i32 2331, label %entry.sw.bb5_crit_edge39
    i32 2060, label %entry.sw.bb5_crit_edge40
    i32 2058, label %entry.sw.bb5_crit_edge41
    i32 2314, label %entry.sw.bb5_crit_edge42
    i32 83978, label %entry.sw.bb5_crit_edge43
    i32 67850, label %entry.sw.bb5_crit_edge44
    i32 67596, label %entry.sw.bb5_crit_edge45
    i32 67658, label %entry.sw.bb5_crit_edge46
    i32 92170, label %entry.sw.bb5_crit_edge47
    i32 100362, label %entry.sw.bb5_crit_edge48
    i32 67594, label %entry.sw.bb5_crit_edge49
    i32 3346, label %entry.sw.bb6_crit_edge
    i32 2322, label %entry.sw.bb6_crit_edge50
    i32 274, label %entry.sw.bb6_crit_edge51
    i32 2323, label %entry.sw.bb6_crit_edge52
    i32 2306, label %entry.sw.bb6_crit_edge53
    i32 67842, label %entry.sw.bb6_crit_edge54
  ]

entry.sw.bb6_crit_edge54:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb6

entry.sw.bb6_crit_edge53:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb6

entry.sw.bb6_crit_edge52:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb6

entry.sw.bb6_crit_edge51:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb6

entry.sw.bb6_crit_edge50:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb6

entry.sw.bb6_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb6

entry.sw.bb5_crit_edge49:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge48:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge47:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge46:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge45:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge44:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge43:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge42:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge41:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge40:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge39:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge38:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge37:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge36:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge35:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge34:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge33:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge32:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb5_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb5

entry.sw.bb4_crit_edge31:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb4

entry.sw.bb4_crit_edge30:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb4

entry.sw.bb4_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb4

entry.sw.bb3_crit_edge29:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb3

entry.sw.bb3_crit_edge28:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb3

entry.sw.bb3_crit_edge27:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb3

entry.sw.bb3_crit_edge26:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb3

entry.sw.bb2_crit_edge25:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb2

entry.sw.bb1_crit_edge24:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge23:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge22:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge21:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge20:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge19:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge18:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge17:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge16:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge15:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge14:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge13:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge12:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge11:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge10:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.bb1

entry.sw.epilog_crit_edge9:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

entry.sw.epilog_crit_edge8:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

entry.sw.epilog_crit_edge7:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge10, %entry.sw.bb1_crit_edge11, %entry.sw.bb1_crit_edge12, %entry.sw.bb1_crit_edge13, %entry.sw.bb1_crit_edge14, %entry.sw.bb1_crit_edge15, %entry.sw.bb1_crit_edge16, %entry.sw.bb1_crit_edge17, %entry.sw.bb1_crit_edge18, %entry.sw.bb1_crit_edge19, %entry.sw.bb1_crit_edge20, %entry.sw.bb1_crit_edge21, %entry.sw.bb1_crit_edge22, %entry.sw.bb1_crit_edge23, %entry.sw.bb1_crit_edge24
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge25
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge26, %entry.sw.bb3_crit_edge27, %entry.sw.bb3_crit_edge28, %entry.sw.bb3_crit_edge29
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry.sw.bb4_crit_edge, %entry.sw.bb4_crit_edge30, %entry.sw.bb4_crit_edge31
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry.sw.bb5_crit_edge, %entry.sw.bb5_crit_edge32, %entry.sw.bb5_crit_edge33, %entry.sw.bb5_crit_edge34, %entry.sw.bb5_crit_edge35, %entry.sw.bb5_crit_edge36, %entry.sw.bb5_crit_edge37, %entry.sw.bb5_crit_edge38, %entry.sw.bb5_crit_edge39, %entry.sw.bb5_crit_edge40, %entry.sw.bb5_crit_edge41, %entry.sw.bb5_crit_edge42, %entry.sw.bb5_crit_edge43, %entry.sw.bb5_crit_edge44, %entry.sw.bb5_crit_edge45, %entry.sw.bb5_crit_edge46, %entry.sw.bb5_crit_edge47, %entry.sw.bb5_crit_edge48, %entry.sw.bb5_crit_edge49
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry.sw.bb6_crit_edge, %entry.sw.bb6_crit_edge50, %entry.sw.bb6_crit_edge51, %entry.sw.bb6_crit_edge52, %entry.sw.bb6_crit_edge53, %entry.sw.bb6_crit_edge54
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge7, %entry.sw.epilog_crit_edge8, %entry.sw.epilog_crit_edge9
  %tool_type.0 = phi i32 [ 320, %sw.default ], [ 324, %sw.bb6 ], [ 321, %sw.bb5 ], [ 327, %sw.bb4 ], [ 326, %sw.bb3 ], [ 322, %sw.bb2 ], [ 320, %sw.bb1 ], [ 323, %entry.sw.epilog_crit_edge ], [ 323, %entry.sw.epilog_crit_edge7 ], [ 323, %entry.sw.epilog_crit_edge8 ], [ 323, %entry.sw.epilog_crit_edge9 ]
  ret i32 %tool_type.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_mt_sync_frame(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @power_supply_changed(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wacom_exit_report(ptr nocapture noundef %wacom) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %pen_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 12
  %0 = ptrtoint ptr %pen_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pen_input, align 8
  %type = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 5
  %2 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %3)
  %cmp = icmp eq i32 %3, 9
  br i1 %cmp, label %cond.true, label %entry.cond.end_crit_edge

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %arrayidx = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx, align 1
  %6 = and i8 %5, 1
  %and = zext i8 %6 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %and, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 25, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 26, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 27, i32 noundef 0) #8
  %arrayidx3 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 5, i32 %cond
  %7 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 325, i32 %8)
  %cmp4 = icmp sgt i32 %8, 325
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 272, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 274, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 273, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 275, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 276, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 6, i32 noundef 0) #8
  br label %if.end10.sink.split

if.else:                                          ; preds = %cond.end
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 24, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 331, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 332, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 8, i32 noundef 0) #8
  %9 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %10)
  %cmp7 = icmp sgt i32 %10, 9
  br i1 %cmp7, label %if.else.if.end10.sink.split_crit_edge, label %if.else.if.end10_crit_edge

if.else.if.end10_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end10

if.else.if.end10.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end10.sink.split

if.end10.sink.split:                              ; preds = %if.else.if.end10.sink.split_crit_edge, %if.then
  %.sink = phi i32 [ 5, %if.then ], [ 2, %if.else.if.end10.sink.split_crit_edge ]
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef %.sink, i32 noundef 0) #8
  br label %if.end10

if.end10:                                         ; preds = %if.end10.sink.split, %if.else.if.end10_crit_edge
  %11 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx3, align 4
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef %12, i32 noundef 0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 40, i32 noundef 0) #8
  %arrayidx13 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 7, i32 %cond
  %13 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx13, align 8
  %conv14 = trunc i64 %14 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 4, i32 noundef 0, i32 noundef %conv14) #8
  %arrayidx15 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 6, i32 %cond
  %15 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %arrayidx15, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hid_hw_request(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @int_sqrt(i32 noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @wacom_tpc_single_touch(ptr nocapture noundef readonly %wacom, i32 noundef %len) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %data1 = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 4
  %touch_input = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 13
  %0 = ptrtoint ptr %touch_input to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %touch_input, align 4
  %2 = load i8, ptr @touch_arbitration, align 1, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not.i = icmp eq i8 %2, 0
  br i1 %tobool.not.i, label %entry.report_touch_events.exit_crit_edge, label %cond.true.i

entry.report_touch_events.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %report_touch_events.exit

cond.true.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %shared.i = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %3 = ptrtoint ptr %shared.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %shared.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %4, align 4, !range !727
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool1.not.i = icmp eq i8 %6, 0
  br label %report_touch_events.exit

report_touch_events.exit:                         ; preds = %cond.true.i, %entry.report_touch_events.exit_crit_edge
  %cond.i = phi i1 [ %tobool1.not.i, %cond.true.i ], [ true, %entry.report_touch_events.exit_crit_edge ]
  %touch_max = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 10, i32 24
  %7 = ptrtoint ptr %touch_max to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %touch_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp = icmp ugt i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %len)
  %cmp2 = icmp ugt i32 %len, 14
  %or.cond = or i1 %cmp2, %cmp
  br i1 %or.cond, label %report_touch_events.exit.cleanup_crit_edge, label %if.end

report_touch_events.exit.cleanup_crit_edge:       ; preds = %report_touch_events.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %report_touch_events.exit
  %9 = zext i32 %len to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.270)
  switch i32 %len, label %if.else31 [
    i32 5, label %if.then4
    i32 10, label %if.then15
  ]

if.then4:                                         ; preds = %if.end
  br i1 %cond.i, label %land.end, label %if.then4.if.end51_crit_edge

if.then4.if.end51_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

land.end:                                         ; preds = %if.then4
  %10 = ptrtoint ptr %data1 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %data1, align 1
  %12 = and i8 %11, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool5.not = icmp eq i8 %12, 0
  %arrayidx7 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %13 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_loadN_noabort(i32 %13, i32 2)
  %14 = load i16, ptr %arrayidx7, align 1
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #8
  %arrayidx10 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %16 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_loadN_noabort(i32 %16, i32 2)
  %17 = load i16, ptr %arrayidx10, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #8
  br i1 %tobool5.not, label %land.end.if.end51_crit_edge, label %land.end.if.then50_crit_edge

land.end.if.then50_crit_edge:                     ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then50

land.end.if.end51_crit_edge:                      ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

if.then15:                                        ; preds = %if.end
  br i1 %cond.i, label %land.end23, label %if.then15.if.end51_crit_edge

if.then15.if.end51_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

land.end23:                                       ; preds = %if.then15
  %arrayidx19 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %19 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx19, align 1
  %21 = and i8 %20, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool22.not = icmp eq i8 %21, 0
  %arrayidx25 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 3
  %22 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_loadN_noabort(i32 %22, i32 2)
  %23 = load i16, ptr %arrayidx25, align 1
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #8
  %arrayidx28 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 5
  %25 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_loadN_noabort(i32 %25, i32 2)
  %26 = load i16, ptr %arrayidx28, align 1
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #8
  br i1 %tobool22.not, label %land.end23.if.end51_crit_edge, label %land.end23.if.then50_crit_edge

land.end23.if.then50_crit_edge:                   ; preds = %land.end23
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then50

land.end23.if.end51_crit_edge:                    ; preds = %land.end23
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

if.else31:                                        ; preds = %if.end
  br i1 %cond.i, label %if.end48, label %if.else31.if.end51_crit_edge

if.else31.if.end51_crit_edge:                     ; preds = %if.else31
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

if.end48:                                         ; preds = %if.else31
  %arrayidx35 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 1
  %28 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx35, align 1
  %30 = and i8 %29, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool38.not = icmp eq i8 %30, 0
  %arrayidx41 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 2
  %31 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %arrayidx41, align 2
  %33 = tail call i16 @llvm.bswap.i16(i16 %32) #8
  %arrayidx44 = getelementptr %struct.wacom_wac, ptr %wacom, i32 0, i32 4, i32 4
  %34 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %arrayidx44, align 2
  %36 = tail call i16 @llvm.bswap.i16(i16 %35) #8
  br i1 %tobool38.not, label %if.end48.if.end51_crit_edge, label %if.end48.if.then50_crit_edge

if.end48.if.then50_crit_edge:                     ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then50

if.end48.if.end51_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

if.then50:                                        ; preds = %if.end48.if.then50_crit_edge, %land.end23.if.then50_crit_edge, %land.end.if.then50_crit_edge
  %y.0.in84 = phi i16 [ %18, %land.end.if.then50_crit_edge ], [ %36, %if.end48.if.then50_crit_edge ], [ %27, %land.end23.if.then50_crit_edge ]
  %x.0.in83 = phi i16 [ %15, %land.end.if.then50_crit_edge ], [ %33, %if.end48.if.then50_crit_edge ], [ %24, %land.end23.if.then50_crit_edge ]
  %y.0 = zext i16 %y.0.in84 to i32
  %x.0 = zext i16 %x.0.in83 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 0, i32 noundef %x.0) #8
  tail call void @input_event(ptr noundef %1, i32 noundef 3, i32 noundef 1, i32 noundef %y.0) #8
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end48.if.end51_crit_edge, %if.else31.if.end51_crit_edge, %land.end23.if.end51_crit_edge, %if.then15.if.end51_crit_edge, %land.end.if.end51_crit_edge, %if.then4.if.end51_crit_edge
  %prox.0.in81 = phi i1 [ false, %land.end.if.end51_crit_edge ], [ true, %if.then50 ], [ false, %if.end48.if.end51_crit_edge ], [ false, %land.end23.if.end51_crit_edge ], [ false, %if.else31.if.end51_crit_edge ], [ false, %if.then4.if.end51_crit_edge ], [ false, %if.then15.if.end51_crit_edge ]
  %lnot.ext.i = zext i1 %prox.0.in81 to i32
  tail call void @input_event(ptr noundef %1, i32 noundef 1, i32 noundef 330, i32 noundef %lnot.ext.i) #8
  %shared = getelementptr inbounds %struct.wacom_wac, ptr %wacom, i32 0, i32 11
  %37 = ptrtoint ptr %shared to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %shared, align 4
  %touch_down = getelementptr inbounds %struct.wacom_shared, ptr %38, i32 0, i32 1
  %frombool55 = zext i1 %prox.0.in81 to i8
  %39 = ptrtoint ptr %touch_down to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %frombool55, ptr %touch_down, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end51, %report_touch_events.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.end51 ], [ 0, %report_touch_events.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hid_input_report(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__kfifo_in(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @input_alloc_absinfo(ptr noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umin.i16(i16, i16) #7

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #8

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #9 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 356)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #9 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 356)
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind }
attributes #9 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #10 = { nomerge }
attributes #11 = { cold nounwind }

!llvm.asan.globals = !{!0, !2, !3, !5, !7, !8, !10, !12, !13, !14, !15, !16, !17, !18, !20, !21, !22, !24, !25, !26, !27, !29, !30, !31, !32, !33, !35, !36, !37, !39, !40, !41, !43, !44, !45, !47, !48, !49, !50, !52, !53, !54, !55, !57, !58, !60, !61, !63, !65, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !81, !82, !83, !85, !87, !88, !90, !91, !92, !94, !96, !97, !98, !99, !101, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !178, !180, !182, !184, !186, !188, !190, !192, !194, !196, !198, !200, !202, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294, !296, !298, !300, !302, !304, !306, !308, !310, !312, !314, !316, !318, !320, !322, !324, !326, !328, !330, !332, !334, !336, !338, !340, !342, !344, !346, !348, !350, !352, !354, !356, !358, !360, !362, !364, !366, !368, !370, !372, !374, !376, !378, !380, !382, !384, !386, !388, !390, !392, !394, !396, !398, !400, !402, !404, !406, !408, !410, !412, !414, !416, !418, !420, !422, !424, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !448, !450, !452, !454, !456, !458, !460, !462, !464, !466, !468, !470, !472, !474, !476, !478, !480, !482, !484, !486, !488, !490, !492, !494, !496, !498, !500, !502, !504, !506, !508, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !568, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610, !612, !614, !616, !618, !620, !622, !624, !626, !628, !630, !632, !634, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676, !678, !680, !682, !684, !686, !688, !690, !692, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714, !716}
!llvm.module.flags = !{!718, !719, !720, !721, !722, !723, !724, !725}
!llvm.ident = !{!726}

!0 = !{ptr @__param_touch_arbitration, !1, !"__param_touch_arbitration", i1 false, i1 false}
!1 = !{!"../drivers/hid/wacom_wac.c", i32 34, i32 1}
!2 = !{ptr @__UNIQUE_ID_touch_arbitrationtype237, !1, !"__UNIQUE_ID_touch_arbitrationtype237", i1 false, i1 false}
!3 = !{ptr @__UNIQUE_ID_touch_arbitration238, !4, !"__UNIQUE_ID_touch_arbitration238", i1 false, i1 false}
!4 = !{!"../drivers/hid/wacom_wac.c", i32 35, i32 1}
!5 = !{ptr @wacom_ids, !6, !"wacom_ids", i1 false, i1 false}
!6 = !{!"../drivers/hid/wacom_wac.c", i32 4812, i32 28}
!7 = !{ptr @__param_str_touch_arbitration, !1, !"__param_str_touch_arbitration", i1 false, i1 false}
!8 = !{ptr @touch_arbitration, !9, !"touch_arbitration", i1 false, i1 false}
!9 = !{!"../drivers/hid/wacom_wac.c", i32 33, i32 13}
!10 = !{ptr @.str, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../drivers/hid/wacom_wac.c", i32 4035, i32 3}
!12 = !{ptr @.str.1, !11, !"<string literal>", i1 false, i1 false}
!13 = !{ptr @.str.2, !11, !"<string literal>", i1 false, i1 false}
!14 = !{ptr @.str.3, !11, !"<string literal>", i1 false, i1 false}
!15 = !{ptr @.str.4, !11, !"<string literal>", i1 false, i1 false}
!16 = !{ptr @wacom_update_led._entry, !11, !"_entry", i1 false, i1 false}
!17 = !{ptr @wacom_update_led._entry_ptr, !11, !"_entry_ptr", i1 false, i1 false}
!18 = !{ptr @.str.6, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../drivers/hid/wacom_wac.c", i32 4050, i32 3}
!20 = !{ptr @wacom_update_led._entry.5, !19, !"_entry", i1 false, i1 false}
!21 = !{ptr @wacom_update_led._entry_ptr.7, !19, !"_entry_ptr", i1 false, i1 false}
!22 = !{ptr @.str.8, !23, !"<string literal>", i1 false, i1 false}
!23 = !{!"../drivers/hid/wacom_wac.c", i32 3986, i32 4}
!24 = !{ptr @.str.9, !23, !"<string literal>", i1 false, i1 false}
!25 = !{ptr @wacom_24hd_update_leds._entry, !23, !"_entry", i1 false, i1 false}
!26 = !{ptr @wacom_24hd_update_leds._entry_ptr, !23, !"_entry_ptr", i1 false, i1 false}
!27 = !{ptr @.str.10, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../drivers/hid/wacom_wac.c", i32 2364, i32 4}
!29 = !{ptr @.str.11, !28, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @.str.12, !28, !"<string literal>", i1 false, i1 false}
!31 = !{ptr @wacom_wac_pen_event._entry, !28, !"_entry", i1 false, i1 false}
!32 = !{ptr @wacom_wac_pen_event._entry_ptr, !28, !"_entry_ptr", i1 false, i1 false}
!33 = !{ptr @.str.14, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../drivers/hid/wacom_wac.c", i32 2371, i32 4}
!35 = !{ptr @wacom_wac_pen_event._entry.13, !34, !"_entry", i1 false, i1 false}
!36 = !{ptr @wacom_wac_pen_event._entry_ptr.15, !34, !"_entry_ptr", i1 false, i1 false}
!37 = !{ptr @.str.17, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/hid/wacom_wac.c", i32 2378, i32 4}
!39 = !{ptr @wacom_wac_pen_event._entry.16, !38, !"_entry", i1 false, i1 false}
!40 = !{ptr @wacom_wac_pen_event._entry_ptr.18, !38, !"_entry_ptr", i1 false, i1 false}
!41 = !{ptr @.str.20, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../drivers/hid/wacom_wac.c", i32 2385, i32 4}
!43 = !{ptr @wacom_wac_pen_event._entry.19, !42, !"_entry", i1 false, i1 false}
!44 = !{ptr @wacom_wac_pen_event._entry_ptr.21, !42, !"_entry_ptr", i1 false, i1 false}
!45 = !{ptr @.str.22, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../drivers/hid/wacom_wac.c", i32 2652, i32 4}
!47 = !{ptr @.str.23, !46, !"<string literal>", i1 false, i1 false}
!48 = !{ptr @wacom_wac_finger_event._entry, !46, !"_entry", i1 false, i1 false}
!49 = !{ptr @wacom_wac_finger_event._entry_ptr, !46, !"_entry_ptr", i1 false, i1 false}
!50 = !{ptr @.str.24, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/hid/wacom_wac.c", i32 124, i32 3}
!52 = !{ptr @.str.25, !51, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @.str.26, !51, !"<string literal>", i1 false, i1 false}
!54 = !{ptr @wacom_penpartner_irq.__UNIQUE_ID_ddebug239, !51, !"__UNIQUE_ID_ddebug239", i1 false, i1 false}
!55 = !{ptr @.str.27, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../drivers/hid/wacom_wac.c", i32 140, i32 3}
!57 = !{ptr @wacom_pl_irq.__UNIQUE_ID_ddebug240, !56, !"__UNIQUE_ID_ddebug240", i1 false, i1 false}
!58 = !{ptr @.str.28, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../drivers/hid/wacom_wac.c", i32 316, i32 4}
!60 = !{ptr @wacom_graphire_irq.__UNIQUE_ID_ddebug244, !59, !"__UNIQUE_ID_ddebug244", i1 false, i1 false}
!61 = !{ptr @wacom_graphire_irq.__UNIQUE_ID_ddebug245, !62, !"__UNIQUE_ID_ddebug245", i1 false, i1 false}
!62 = !{!"../drivers/hid/wacom_wac.c", i32 322, i32 3}
!63 = !{ptr @batcap_gr, !64, !"batcap_gr", i1 false, i1 false}
!64 = !{!"../drivers/hid/wacom_wac.c", i32 48, i32 23}
!65 = !{ptr @.str.29, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../drivers/hid/wacom_wac.c", i32 199, i32 3}
!67 = !{ptr @wacom_ptu_irq.__UNIQUE_ID_ddebug241, !66, !"__UNIQUE_ID_ddebug241", i1 false, i1 false}
!68 = !{ptr @.str.30, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/hid/wacom_wac.c", i32 228, i32 2}
!70 = !{ptr @.str.31, !69, !"<string literal>", i1 false, i1 false}
!71 = !{ptr @wacom_dtu_irq.__UNIQUE_ID_ddebug242, !69, !"__UNIQUE_ID_ddebug242", i1 false, i1 false}
!72 = !{ptr @.str.32, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/hid/wacom_wac.c", i32 259, i32 3}
!74 = !{ptr @.str.33, !73, !"<string literal>", i1 false, i1 false}
!75 = !{ptr @wacom_dtus_irq.__UNIQUE_ID_ddebug243, !73, !"__UNIQUE_ID_ddebug243", i1 false, i1 false}
!76 = !{ptr @.str.34, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../drivers/hid/wacom_wac.c", i32 1031, i32 3}
!78 = !{ptr @wacom_intuos_irq.__UNIQUE_ID_ddebug250, !77, !"__UNIQUE_ID_ddebug250", i1 false, i1 false}
!79 = !{ptr @.str.35, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/hid/wacom_wac.c", i32 1227, i32 3}
!81 = !{ptr @.str.36, !80, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @wacom_intuos_bt_irq.__UNIQUE_ID_ddebug252, !80, !"__UNIQUE_ID_ddebug252", i1 false, i1 false}
!83 = !{ptr @batcap_i4, !84, !"batcap_i4", i1 false, i1 false}
!84 = !{!"../drivers/hid/wacom_wac.c", i32 53, i32 23}
!85 = !{ptr @.str.37, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../drivers/hid/wacom_wac.c", i32 1506, i32 3}
!87 = !{ptr @wacom_intuos_pro2_bt_irq.__UNIQUE_ID_ddebug259, !86, !"__UNIQUE_ID_ddebug259", i1 false, i1 false}
!88 = !{ptr @.str.38, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/hid/wacom_wac.c", i32 1745, i32 3}
!90 = !{ptr @.str.39, !89, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @wacom_tpc_irq.__UNIQUE_ID_ddebug270, !89, !"__UNIQUE_ID_ddebug270", i1 false, i1 false}
!92 = !{ptr @wacom_tpc_irq.__UNIQUE_ID_ddebug271, !93, !"__UNIQUE_ID_ddebug271", i1 false, i1 false}
!93 = !{!"../drivers/hid/wacom_wac.c", i32 1753, i32 3}
!94 = !{ptr @.str.40, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../drivers/hid/wacom_wac.c", i32 1171, i32 3}
!96 = !{ptr @.str.41, !95, !"<string literal>", i1 false, i1 false}
!97 = !{ptr @wacom_remote_status_irq._entry, !95, !"_entry", i1 false, i1 false}
!98 = !{ptr @wacom_remote_status_irq._entry_ptr, !95, !"_entry_ptr", i1 false, i1 false}
!99 = !{ptr @.str.42, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/hid/wacom_wac.c", i32 1066, i32 3}
!101 = !{ptr @wacom_remote_irq.__UNIQUE_ID_ddebug251, !100, !"__UNIQUE_ID_ddebug251", i1 false, i1 false}
!102 = !{ptr @.str.43, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../drivers/hid/wacom_wac.c", i32 4253, i32 4}
!104 = !{ptr @wacom_features_0x00, !105, !"wacom_features_0x00", i1 false, i1 false}
!105 = !{!"../drivers/hid/wacom_wac.c", i32 4252, i32 36}
!106 = !{ptr @.str.44, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/hid/wacom_wac.c", i32 4367, i32 4}
!108 = !{ptr @wacom_features_0x03, !109, !"wacom_features_0x03", i1 false, i1 false}
!109 = !{!"../drivers/hid/wacom_wac.c", i32 4366, i32 36}
!110 = !{ptr @.str.45, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../drivers/hid/wacom_wac.c", i32 4256, i32 4}
!112 = !{ptr @wacom_features_0x10, !113, !"wacom_features_0x10", i1 false, i1 false}
!113 = !{!"../drivers/hid/wacom_wac.c", i32 4255, i32 36}
!114 = !{ptr @.str.46, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../drivers/hid/wacom_wac.c", i32 4262, i32 4}
!116 = !{ptr @wacom_features_0x11, !117, !"wacom_features_0x11", i1 false, i1 false}
!117 = !{!"../drivers/hid/wacom_wac.c", i32 4261, i32 36}
!118 = !{ptr @.str.47, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/hid/wacom_wac.c", i32 4265, i32 4}
!120 = !{ptr @wacom_features_0x12, !121, !"wacom_features_0x12", i1 false, i1 false}
!121 = !{!"../drivers/hid/wacom_wac.c", i32 4264, i32 36}
!122 = !{ptr @.str.48, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/hid/wacom_wac.c", i32 4268, i32 4}
!124 = !{ptr @wacom_features_0x13, !125, !"wacom_features_0x13", i1 false, i1 false}
!125 = !{!"../drivers/hid/wacom_wac.c", i32 4267, i32 36}
!126 = !{ptr @.str.49, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../drivers/hid/wacom_wac.c", i32 4271, i32 4}
!128 = !{ptr @wacom_features_0x14, !129, !"wacom_features_0x14", i1 false, i1 false}
!129 = !{!"../drivers/hid/wacom_wac.c", i32 4270, i32 36}
!130 = !{ptr @.str.50, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../drivers/hid/wacom_wac.c", i32 4274, i32 4}
!132 = !{ptr @wacom_features_0x15, !133, !"wacom_features_0x15", i1 false, i1 false}
!133 = !{!"../drivers/hid/wacom_wac.c", i32 4273, i32 36}
!134 = !{ptr @.str.51, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/hid/wacom_wac.c", i32 4277, i32 4}
!136 = !{ptr @wacom_features_0x16, !137, !"wacom_features_0x16", i1 false, i1 false}
!137 = !{!"../drivers/hid/wacom_wac.c", i32 4276, i32 36}
!138 = !{ptr @.str.52, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../drivers/hid/wacom_wac.c", i32 4280, i32 4}
!140 = !{ptr @wacom_features_0x17, !141, !"wacom_features_0x17", i1 false, i1 false}
!141 = !{!"../drivers/hid/wacom_wac.c", i32 4279, i32 36}
!142 = !{ptr @.str.53, !143, !"<string literal>", i1 false, i1 false}
!143 = !{!"../drivers/hid/wacom_wac.c", i32 4283, i32 4}
!144 = !{ptr @wacom_features_0x18, !145, !"wacom_features_0x18", i1 false, i1 false}
!145 = !{!"../drivers/hid/wacom_wac.c", i32 4282, i32 36}
!146 = !{ptr @.str.54, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../drivers/hid/wacom_wac.c", i32 4286, i32 4}
!148 = !{ptr @wacom_features_0x19, !149, !"wacom_features_0x19", i1 false, i1 false}
!149 = !{!"../drivers/hid/wacom_wac.c", i32 4285, i32 36}
!150 = !{ptr @.str.55, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../drivers/hid/wacom_wac.c", i32 4316, i32 4}
!152 = !{ptr @wacom_features_0x20, !153, !"wacom_features_0x20", i1 false, i1 false}
!153 = !{!"../drivers/hid/wacom_wac.c", i32 4315, i32 36}
!154 = !{ptr @.str.56, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../drivers/hid/wacom_wac.c", i32 4319, i32 4}
!156 = !{ptr @wacom_features_0x21, !157, !"wacom_features_0x21", i1 false, i1 false}
!157 = !{!"../drivers/hid/wacom_wac.c", i32 4318, i32 36}
!158 = !{ptr @.str.57, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../drivers/hid/wacom_wac.c", i32 4322, i32 4}
!160 = !{ptr @wacom_features_0x22, !161, !"wacom_features_0x22", i1 false, i1 false}
!161 = !{!"../drivers/hid/wacom_wac.c", i32 4321, i32 36}
!162 = !{ptr @.str.58, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../drivers/hid/wacom_wac.c", i32 4325, i32 4}
!164 = !{ptr @wacom_features_0x23, !165, !"wacom_features_0x23", i1 false, i1 false}
!165 = !{!"../drivers/hid/wacom_wac.c", i32 4324, i32 36}
!166 = !{ptr @.str.59, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/hid/wacom_wac.c", i32 4328, i32 4}
!168 = !{ptr @wacom_features_0x24, !169, !"wacom_features_0x24", i1 false, i1 false}
!169 = !{!"../drivers/hid/wacom_wac.c", i32 4327, i32 36}
!170 = !{ptr @.str.60, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../drivers/hid/wacom_wac.c", i32 4424, i32 4}
!172 = !{ptr @wacom_features_0x26, !173, !"wacom_features_0x26", i1 false, i1 false}
!173 = !{!"../drivers/hid/wacom_wac.c", i32 4423, i32 36}
!174 = !{ptr @.str.61, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/hid/wacom_wac.c", i32 4427, i32 4}
!176 = !{ptr @wacom_features_0x27, !177, !"wacom_features_0x27", i1 false, i1 false}
!177 = !{!"../drivers/hid/wacom_wac.c", i32 4426, i32 36}
!178 = !{ptr @.str.62, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../drivers/hid/wacom_wac.c", i32 4430, i32 4}
!180 = !{ptr @wacom_features_0x28, !181, !"wacom_features_0x28", i1 false, i1 false}
!181 = !{!"../drivers/hid/wacom_wac.c", i32 4429, i32 36}
!182 = !{ptr @.str.63, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/hid/wacom_wac.c", i32 4433, i32 4}
!184 = !{ptr @wacom_features_0x29, !185, !"wacom_features_0x29", i1 false, i1 false}
!185 = !{!"../drivers/hid/wacom_wac.c", i32 4432, i32 36}
!186 = !{ptr @.str.64, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../drivers/hid/wacom_wac.c", i32 4436, i32 4}
!188 = !{ptr @wacom_features_0x2A, !189, !"wacom_features_0x2A", i1 false, i1 false}
!189 = !{!"../drivers/hid/wacom_wac.c", i32 4435, i32 36}
!190 = !{ptr @.str.65, !191, !"<string literal>", i1 false, i1 false}
!191 = !{!"../drivers/hid/wacom_wac.c", i32 4331, i32 4}
!192 = !{ptr @wacom_features_0x30, !193, !"wacom_features_0x30", i1 false, i1 false}
!193 = !{!"../drivers/hid/wacom_wac.c", i32 4330, i32 36}
!194 = !{ptr @.str.66, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../drivers/hid/wacom_wac.c", i32 4334, i32 4}
!196 = !{ptr @wacom_features_0x31, !197, !"wacom_features_0x31", i1 false, i1 false}
!197 = !{!"../drivers/hid/wacom_wac.c", i32 4333, i32 36}
!198 = !{ptr @.str.67, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../drivers/hid/wacom_wac.c", i32 4337, i32 4}
!200 = !{ptr @wacom_features_0x32, !201, !"wacom_features_0x32", i1 false, i1 false}
!201 = !{!"../drivers/hid/wacom_wac.c", i32 4336, i32 36}
!202 = !{ptr @.str.68, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/hid/wacom_wac.c", i32 4340, i32 4}
!204 = !{ptr @wacom_features_0x33, !205, !"wacom_features_0x33", i1 false, i1 false}
!205 = !{!"../drivers/hid/wacom_wac.c", i32 4339, i32 36}
!206 = !{ptr @.str.69, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../drivers/hid/wacom_wac.c", i32 4343, i32 4}
!208 = !{ptr @wacom_features_0x34, !209, !"wacom_features_0x34", i1 false, i1 false}
!209 = !{!"../drivers/hid/wacom_wac.c", i32 4342, i32 36}
!210 = !{ptr @.str.70, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/hid/wacom_wac.c", i32 4346, i32 4}
!212 = !{ptr @wacom_features_0x35, !213, !"wacom_features_0x35", i1 false, i1 false}
!213 = !{!"../drivers/hid/wacom_wac.c", i32 4345, i32 36}
!214 = !{ptr @.str.71, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/hid/wacom_wac.c", i32 4349, i32 4}
!216 = !{ptr @wacom_features_0x37, !217, !"wacom_features_0x37", i1 false, i1 false}
!217 = !{!"../drivers/hid/wacom_wac.c", i32 4348, i32 36}
!218 = !{ptr @.str.72, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../drivers/hid/wacom_wac.c", i32 4352, i32 4}
!220 = !{ptr @wacom_features_0x38, !221, !"wacom_features_0x38", i1 false, i1 false}
!221 = !{!"../drivers/hid/wacom_wac.c", i32 4351, i32 36}
!222 = !{ptr @.str.73, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/hid/wacom_wac.c", i32 4355, i32 4}
!224 = !{ptr @wacom_features_0x39, !225, !"wacom_features_0x39", i1 false, i1 false}
!225 = !{!"../drivers/hid/wacom_wac.c", i32 4354, i32 36}
!226 = !{ptr @.str.74, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../drivers/hid/wacom_wac.c", i32 4480, i32 4}
!228 = !{ptr @wacom_features_0x3F, !229, !"wacom_features_0x3F", i1 false, i1 false}
!229 = !{!"../drivers/hid/wacom_wac.c", i32 4479, i32 36}
!230 = !{ptr @.str.75, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../drivers/hid/wacom_wac.c", i32 4370, i32 4}
!232 = !{ptr @wacom_features_0x41, !233, !"wacom_features_0x41", i1 false, i1 false}
!233 = !{!"../drivers/hid/wacom_wac.c", i32 4369, i32 36}
!234 = !{ptr @.str.76, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../drivers/hid/wacom_wac.c", i32 4373, i32 4}
!236 = !{ptr @wacom_features_0x42, !237, !"wacom_features_0x42", i1 false, i1 false}
!237 = !{!"../drivers/hid/wacom_wac.c", i32 4372, i32 36}
!238 = !{ptr @.str.77, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/hid/wacom_wac.c", i32 4376, i32 4}
!240 = !{ptr @wacom_features_0x43, !241, !"wacom_features_0x43", i1 false, i1 false}
!241 = !{!"../drivers/hid/wacom_wac.c", i32 4375, i32 36}
!242 = !{ptr @.str.78, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../drivers/hid/wacom_wac.c", i32 4379, i32 4}
!244 = !{ptr @wacom_features_0x44, !245, !"wacom_features_0x44", i1 false, i1 false}
!245 = !{!"../drivers/hid/wacom_wac.c", i32 4378, i32 36}
!246 = !{ptr @.str.79, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../drivers/hid/wacom_wac.c", i32 4382, i32 4}
!248 = !{ptr @wacom_features_0x45, !249, !"wacom_features_0x45", i1 false, i1 false}
!249 = !{!"../drivers/hid/wacom_wac.c", i32 4381, i32 36}
!250 = !{ptr @wacom_features_0x47, !251, !"wacom_features_0x47", i1 false, i1 false}
!251 = !{!"../drivers/hid/wacom_wac.c", i32 4632, i32 36}
!252 = !{ptr @.str.80, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../drivers/hid/wacom_wac.c", i32 4529, i32 4}
!254 = !{ptr @wacom_features_0x57, !255, !"wacom_features_0x57", i1 false, i1 false}
!255 = !{!"../drivers/hid/wacom_wac.c", i32 4528, i32 36}
!256 = !{ptr @.str.81, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../drivers/hid/wacom_wac.c", i32 4534, i32 4}
!258 = !{ptr @wacom_features_0x59, !259, !"wacom_features_0x59", i1 false, i1 false}
!259 = !{!"../drivers/hid/wacom_wac.c", i32 4533, i32 36}
!260 = !{ptr @.str.82, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/hid/wacom_wac.c", i32 4554, i32 4}
!262 = !{ptr @wacom_features_0x5B, !263, !"wacom_features_0x5B", i1 false, i1 false}
!263 = !{!"../drivers/hid/wacom_wac.c", i32 4553, i32 36}
!264 = !{ptr @wacom_features_0x5D, !265, !"wacom_features_0x5D", i1 false, i1 false}
!265 = !{!"../drivers/hid/wacom_wac.c", i32 4539, i32 36}
!266 = !{ptr @wacom_features_0x5E, !267, !"wacom_features_0x5E", i1 false, i1 false}
!267 = !{!"../drivers/hid/wacom_wac.c", i32 4559, i32 36}
!268 = !{ptr @.str.83, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/hid/wacom_wac.c", i32 4289, i32 4}
!270 = !{ptr @wacom_features_0x60, !271, !"wacom_features_0x60", i1 false, i1 false}
!271 = !{!"../drivers/hid/wacom_wac.c", i32 4288, i32 36}
!272 = !{ptr @.str.84, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/hid/wacom_wac.c", i32 4292, i32 4}
!274 = !{ptr @wacom_features_0x61, !275, !"wacom_features_0x61", i1 false, i1 false}
!275 = !{!"../drivers/hid/wacom_wac.c", i32 4291, i32 36}
!276 = !{ptr @.str.85, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/hid/wacom_wac.c", i32 4295, i32 4}
!278 = !{ptr @wacom_features_0x62, !279, !"wacom_features_0x62", i1 false, i1 false}
!279 = !{!"../drivers/hid/wacom_wac.c", i32 4294, i32 36}
!280 = !{ptr @.str.86, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../drivers/hid/wacom_wac.c", i32 4298, i32 4}
!282 = !{ptr @wacom_features_0x63, !283, !"wacom_features_0x63", i1 false, i1 false}
!283 = !{!"../drivers/hid/wacom_wac.c", i32 4297, i32 36}
!284 = !{ptr @.str.87, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../drivers/hid/wacom_wac.c", i32 4301, i32 4}
!286 = !{ptr @wacom_features_0x64, !287, !"wacom_features_0x64", i1 false, i1 false}
!287 = !{!"../drivers/hid/wacom_wac.c", i32 4300, i32 36}
!288 = !{ptr @.str.88, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../drivers/hid/wacom_wac.c", i32 4304, i32 4}
!290 = !{ptr @wacom_features_0x65, !291, !"wacom_features_0x65", i1 false, i1 false}
!291 = !{!"../drivers/hid/wacom_wac.c", i32 4303, i32 36}
!292 = !{ptr @.str.89, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../drivers/hid/wacom_wac.c", i32 4307, i32 4}
!294 = !{ptr @wacom_features_0x69, !295, !"wacom_features_0x69", i1 false, i1 false}
!295 = !{!"../drivers/hid/wacom_wac.c", i32 4306, i32 36}
!296 = !{ptr @.str.90, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../drivers/hid/wacom_wac.c", i32 4310, i32 4}
!298 = !{ptr @wacom_features_0x6A, !299, !"wacom_features_0x6A", i1 false, i1 false}
!299 = !{!"../drivers/hid/wacom_wac.c", i32 4309, i32 36}
!300 = !{ptr @.str.91, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../drivers/hid/wacom_wac.c", i32 4313, i32 4}
!302 = !{ptr @wacom_features_0x6B, !303, !"wacom_features_0x6B", i1 false, i1 false}
!303 = !{!"../drivers/hid/wacom_wac.c", i32 4312, i32 36}
!304 = !{ptr @.str.92, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../drivers/hid/wacom_wac.c", i32 4259, i32 4}
!306 = !{ptr @wacom_features_0x81, !307, !"wacom_features_0x81", i1 false, i1 false}
!307 = !{!"../drivers/hid/wacom_wac.c", i32 4258, i32 36}
!308 = !{ptr @.str.93, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/hid/wacom_wac.c", i32 4636, i32 4}
!310 = !{ptr @wacom_features_0x84, !311, !"wacom_features_0x84", i1 false, i1 false}
!311 = !{!"../drivers/hid/wacom_wac.c", i32 4635, i32 36}
!312 = !{ptr @.str.94, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/hid/wacom_wac.c", i32 4564, i32 4}
!314 = !{ptr @wacom_features_0x90, !315, !"wacom_features_0x90", i1 false, i1 false}
!315 = !{!"../drivers/hid/wacom_wac.c", i32 4563, i32 36}
!316 = !{ptr @.str.95, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../drivers/hid/wacom_wac.c", i32 4567, i32 4}
!318 = !{ptr @wacom_features_0x93, !319, !"wacom_features_0x93", i1 false, i1 false}
!319 = !{!"../drivers/hid/wacom_wac.c", i32 4566, i32 36}
!320 = !{ptr @.str.96, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../drivers/hid/wacom_wac.c", i32 4570, i32 4}
!322 = !{ptr @wacom_features_0x97, !323, !"wacom_features_0x97", i1 false, i1 false}
!323 = !{!"../drivers/hid/wacom_wac.c", i32 4569, i32 36}
!324 = !{ptr @.str.97, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../drivers/hid/wacom_wac.c", i32 4573, i32 4}
!326 = !{ptr @wacom_features_0x9A, !327, !"wacom_features_0x9A", i1 false, i1 false}
!327 = !{!"../drivers/hid/wacom_wac.c", i32 4572, i32 36}
!328 = !{ptr @.str.98, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/hid/wacom_wac.c", i32 4576, i32 4}
!330 = !{ptr @wacom_features_0x9F, !331, !"wacom_features_0x9F", i1 false, i1 false}
!331 = !{!"../drivers/hid/wacom_wac.c", i32 4575, i32 36}
!332 = !{ptr @.str.99, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../drivers/hid/wacom_wac.c", i32 4385, i32 4}
!334 = !{ptr @wacom_features_0xB0, !335, !"wacom_features_0xB0", i1 false, i1 false}
!335 = !{!"../drivers/hid/wacom_wac.c", i32 4384, i32 36}
!336 = !{ptr @.str.100, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../drivers/hid/wacom_wac.c", i32 4388, i32 4}
!338 = !{ptr @wacom_features_0xB1, !339, !"wacom_features_0xB1", i1 false, i1 false}
!339 = !{!"../drivers/hid/wacom_wac.c", i32 4387, i32 36}
!340 = !{ptr @.str.101, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../drivers/hid/wacom_wac.c", i32 4391, i32 4}
!342 = !{ptr @wacom_features_0xB2, !343, !"wacom_features_0xB2", i1 false, i1 false}
!343 = !{!"../drivers/hid/wacom_wac.c", i32 4390, i32 36}
!344 = !{ptr @.str.102, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/hid/wacom_wac.c", i32 4394, i32 4}
!346 = !{ptr @wacom_features_0xB3, !347, !"wacom_features_0xB3", i1 false, i1 false}
!347 = !{!"../drivers/hid/wacom_wac.c", i32 4393, i32 36}
!348 = !{ptr @.str.103, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../drivers/hid/wacom_wac.c", i32 4397, i32 4}
!350 = !{ptr @wacom_features_0xB4, !351, !"wacom_features_0xB4", i1 false, i1 false}
!351 = !{!"../drivers/hid/wacom_wac.c", i32 4396, i32 36}
!352 = !{ptr @.str.104, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../drivers/hid/wacom_wac.c", i32 4400, i32 4}
!354 = !{ptr @wacom_features_0xB5, !355, !"wacom_features_0xB5", i1 false, i1 false}
!355 = !{!"../drivers/hid/wacom_wac.c", i32 4399, i32 36}
!356 = !{ptr @.str.105, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../drivers/hid/wacom_wac.c", i32 4403, i32 4}
!358 = !{ptr @wacom_features_0xB7, !359, !"wacom_features_0xB7", i1 false, i1 false}
!359 = !{!"../drivers/hid/wacom_wac.c", i32 4402, i32 36}
!360 = !{ptr @.str.106, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/hid/wacom_wac.c", i32 4406, i32 4}
!362 = !{ptr @wacom_features_0xB8, !363, !"wacom_features_0xB8", i1 false, i1 false}
!363 = !{!"../drivers/hid/wacom_wac.c", i32 4405, i32 36}
!364 = !{ptr @.str.107, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../drivers/hid/wacom_wac.c", i32 4409, i32 4}
!366 = !{ptr @wacom_features_0xB9, !367, !"wacom_features_0xB9", i1 false, i1 false}
!367 = !{!"../drivers/hid/wacom_wac.c", i32 4408, i32 36}
!368 = !{ptr @.str.108, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../drivers/hid/wacom_wac.c", i32 4412, i32 4}
!370 = !{ptr @wacom_features_0xBA, !371, !"wacom_features_0xBA", i1 false, i1 false}
!371 = !{!"../drivers/hid/wacom_wac.c", i32 4411, i32 36}
!372 = !{ptr @.str.109, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../drivers/hid/wacom_wac.c", i32 4415, i32 4}
!374 = !{ptr @wacom_features_0xBB, !375, !"wacom_features_0xBB", i1 false, i1 false}
!375 = !{!"../drivers/hid/wacom_wac.c", i32 4414, i32 36}
!376 = !{ptr @.str.110, !377, !"<string literal>", i1 false, i1 false}
!377 = !{!"../drivers/hid/wacom_wac.c", i32 4418, i32 4}
!378 = !{ptr @wacom_features_0xBC, !379, !"wacom_features_0xBC", i1 false, i1 false}
!379 = !{!"../drivers/hid/wacom_wac.c", i32 4417, i32 36}
!380 = !{ptr @wacom_features_0xBD, !381, !"wacom_features_0xBD", i1 false, i1 false}
!381 = !{!"../drivers/hid/wacom_wac.c", i32 4420, i32 36}
!382 = !{ptr @.str.111, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../drivers/hid/wacom_wac.c", i32 4361, i32 4}
!384 = !{ptr @wacom_features_0xC0, !385, !"wacom_features_0xC0", i1 false, i1 false}
!385 = !{!"../drivers/hid/wacom_wac.c", i32 4360, i32 36}
!386 = !{ptr @.str.112, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/hid/wacom_wac.c", i32 4364, i32 4}
!388 = !{ptr @wacom_features_0xC2, !389, !"wacom_features_0xC2", i1 false, i1 false}
!389 = !{!"../drivers/hid/wacom_wac.c", i32 4363, i32 36}
!390 = !{ptr @.str.113, !391, !"<string literal>", i1 false, i1 false}
!391 = !{!"../drivers/hid/wacom_wac.c", i32 4358, i32 4}
!392 = !{ptr @wacom_features_0xC4, !393, !"wacom_features_0xC4", i1 false, i1 false}
!393 = !{!"../drivers/hid/wacom_wac.c", i32 4357, i32 36}
!394 = !{ptr @.str.114, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../drivers/hid/wacom_wac.c", i32 4483, i32 4}
!396 = !{ptr @wacom_features_0xC5, !397, !"wacom_features_0xC5", i1 false, i1 false}
!397 = !{!"../drivers/hid/wacom_wac.c", i32 4482, i32 36}
!398 = !{ptr @.str.115, !399, !"<string literal>", i1 false, i1 false}
!399 = !{!"../drivers/hid/wacom_wac.c", i32 4486, i32 4}
!400 = !{ptr @wacom_features_0xC6, !401, !"wacom_features_0xC6", i1 false, i1 false}
!401 = !{!"../drivers/hid/wacom_wac.c", i32 4485, i32 36}
!402 = !{ptr @.str.116, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../drivers/hid/wacom_wac.c", i32 4504, i32 4}
!404 = !{ptr @wacom_features_0xC7, !405, !"wacom_features_0xC7", i1 false, i1 false}
!405 = !{!"../drivers/hid/wacom_wac.c", i32 4503, i32 36}
!406 = !{ptr @.str.117, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/hid/wacom_wac.c", i32 4544, i32 4}
!408 = !{ptr @wacom_features_0xCC, !409, !"wacom_features_0xCC", i1 false, i1 false}
!409 = !{!"../drivers/hid/wacom_wac.c", i32 4543, i32 36}
!410 = !{ptr @.str.118, !411, !"<string literal>", i1 false, i1 false}
!411 = !{!"../drivers/hid/wacom_wac.c", i32 4507, i32 4}
!412 = !{ptr @wacom_features_0xCE, !413, !"wacom_features_0xCE", i1 false, i1 false}
!413 = !{!"../drivers/hid/wacom_wac.c", i32 4506, i32 36}
!414 = !{ptr @.str.119, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../drivers/hid/wacom_wac.c", i32 4638, i32 4}
!416 = !{ptr @wacom_features_0xD0, !417, !"wacom_features_0xD0", i1 false, i1 false}
!417 = !{!"../drivers/hid/wacom_wac.c", i32 4637, i32 36}
!418 = !{ptr @.str.120, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../drivers/hid/wacom_wac.c", i32 4641, i32 4}
!420 = !{ptr @wacom_features_0xD1, !421, !"wacom_features_0xD1", i1 false, i1 false}
!421 = !{!"../drivers/hid/wacom_wac.c", i32 4640, i32 36}
!422 = !{ptr @.str.121, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../drivers/hid/wacom_wac.c", i32 4644, i32 4}
!424 = !{ptr @wacom_features_0xD2, !425, !"wacom_features_0xD2", i1 false, i1 false}
!425 = !{!"../drivers/hid/wacom_wac.c", i32 4643, i32 36}
!426 = !{ptr @.str.122, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../drivers/hid/wacom_wac.c", i32 4647, i32 4}
!428 = !{ptr @wacom_features_0xD3, !429, !"wacom_features_0xD3", i1 false, i1 false}
!429 = !{!"../drivers/hid/wacom_wac.c", i32 4646, i32 36}
!430 = !{ptr @.str.123, !431, !"<string literal>", i1 false, i1 false}
!431 = !{!"../drivers/hid/wacom_wac.c", i32 4650, i32 4}
!432 = !{ptr @wacom_features_0xD4, !433, !"wacom_features_0xD4", i1 false, i1 false}
!433 = !{!"../drivers/hid/wacom_wac.c", i32 4649, i32 36}
!434 = !{ptr @.str.124, !435, !"<string literal>", i1 false, i1 false}
!435 = !{!"../drivers/hid/wacom_wac.c", i32 4653, i32 4}
!436 = !{ptr @wacom_features_0xD5, !437, !"wacom_features_0xD5", i1 false, i1 false}
!437 = !{!"../drivers/hid/wacom_wac.c", i32 4652, i32 36}
!438 = !{ptr @.str.125, !439, !"<string literal>", i1 false, i1 false}
!439 = !{!"../drivers/hid/wacom_wac.c", i32 4656, i32 4}
!440 = !{ptr @wacom_features_0xD6, !441, !"wacom_features_0xD6", i1 false, i1 false}
!441 = !{!"../drivers/hid/wacom_wac.c", i32 4655, i32 36}
!442 = !{ptr @.str.126, !443, !"<string literal>", i1 false, i1 false}
!443 = !{!"../drivers/hid/wacom_wac.c", i32 4659, i32 4}
!444 = !{ptr @wacom_features_0xD7, !445, !"wacom_features_0xD7", i1 false, i1 false}
!445 = !{!"../drivers/hid/wacom_wac.c", i32 4658, i32 36}
!446 = !{ptr @.str.127, !447, !"<string literal>", i1 false, i1 false}
!447 = !{!"../drivers/hid/wacom_wac.c", i32 4662, i32 4}
!448 = !{ptr @wacom_features_0xD8, !449, !"wacom_features_0xD8", i1 false, i1 false}
!449 = !{!"../drivers/hid/wacom_wac.c", i32 4661, i32 36}
!450 = !{ptr @.str.128, !451, !"<string literal>", i1 false, i1 false}
!451 = !{!"../drivers/hid/wacom_wac.c", i32 4665, i32 4}
!452 = !{ptr @wacom_features_0xDA, !453, !"wacom_features_0xDA", i1 false, i1 false}
!453 = !{!"../drivers/hid/wacom_wac.c", i32 4664, i32 36}
!454 = !{ptr @.str.129, !455, !"<string literal>", i1 false, i1 false}
!455 = !{!"../drivers/hid/wacom_wac.c", i32 4668, i32 4}
!456 = !{ptr @wacom_features_0xDB, !457, !"wacom_features_0xDB", i1 false, i1 false}
!457 = !{!"../drivers/hid/wacom_wac.c", i32 4667, i32 36}
!458 = !{ptr @.str.130, !459, !"<string literal>", i1 false, i1 false}
!459 = !{!"../drivers/hid/wacom_wac.c", i32 4671, i32 11}
!460 = !{ptr @wacom_features_0xDD, !461, !"wacom_features_0xDD", i1 false, i1 false}
!461 = !{!"../drivers/hid/wacom_wac.c", i32 4670, i32 36}
!462 = !{ptr @.str.131, !463, !"<string literal>", i1 false, i1 false}
!463 = !{!"../drivers/hid/wacom_wac.c", i32 4674, i32 11}
!464 = !{ptr @wacom_features_0xDE, !465, !"wacom_features_0xDE", i1 false, i1 false}
!465 = !{!"../drivers/hid/wacom_wac.c", i32 4673, i32 36}
!466 = !{ptr @.str.132, !467, !"<string literal>", i1 false, i1 false}
!467 = !{!"../drivers/hid/wacom_wac.c", i32 4677, i32 11}
!468 = !{ptr @wacom_features_0xDF, !469, !"wacom_features_0xDF", i1 false, i1 false}
!469 = !{!"../drivers/hid/wacom_wac.c", i32 4676, i32 36}
!470 = !{ptr @.str.133, !471, !"<string literal>", i1 false, i1 false}
!471 = !{!"../drivers/hid/wacom_wac.c", i32 4579, i32 4}
!472 = !{ptr @wacom_features_0xE2, !473, !"wacom_features_0xE2", i1 false, i1 false}
!473 = !{!"../drivers/hid/wacom_wac.c", i32 4578, i32 36}
!474 = !{ptr @.str.134, !475, !"<string literal>", i1 false, i1 false}
!475 = !{!"../drivers/hid/wacom_wac.c", i32 4582, i32 4}
!476 = !{ptr @wacom_features_0xE3, !477, !"wacom_features_0xE3", i1 false, i1 false}
!477 = !{!"../drivers/hid/wacom_wac.c", i32 4581, i32 36}
!478 = !{ptr @.str.135, !479, !"<string literal>", i1 false, i1 false}
!479 = !{!"../drivers/hid/wacom_wac.c", i32 4585, i32 4}
!480 = !{ptr @wacom_features_0xE5, !481, !"wacom_features_0xE5", i1 false, i1 false}
!481 = !{!"../drivers/hid/wacom_wac.c", i32 4584, i32 36}
!482 = !{ptr @.str.136, !483, !"<string literal>", i1 false, i1 false}
!483 = !{!"../drivers/hid/wacom_wac.c", i32 4588, i32 4}
!484 = !{ptr @wacom_features_0xE6, !485, !"wacom_features_0xE6", i1 false, i1 false}
!485 = !{!"../drivers/hid/wacom_wac.c", i32 4587, i32 36}
!486 = !{ptr @.str.137, !487, !"<string literal>", i1 false, i1 false}
!487 = !{!"../drivers/hid/wacom_wac.c", i32 4591, i32 4}
!488 = !{ptr @wacom_features_0xEC, !489, !"wacom_features_0xEC", i1 false, i1 false}
!489 = !{!"../drivers/hid/wacom_wac.c", i32 4590, i32 36}
!490 = !{ptr @.str.138, !491, !"<string literal>", i1 false, i1 false}
!491 = !{!"../drivers/hid/wacom_wac.c", i32 4594, i32 4}
!492 = !{ptr @wacom_features_0xED, !493, !"wacom_features_0xED", i1 false, i1 false}
!493 = !{!"../drivers/hid/wacom_wac.c", i32 4593, i32 36}
!494 = !{ptr @.str.139, !495, !"<string literal>", i1 false, i1 false}
!495 = !{!"../drivers/hid/wacom_wac.c", i32 4597, i32 4}
!496 = !{ptr @wacom_features_0xEF, !497, !"wacom_features_0xEF", i1 false, i1 false}
!497 = !{!"../drivers/hid/wacom_wac.c", i32 4596, i32 36}
!498 = !{ptr @.str.140, !499, !"<string literal>", i1 false, i1 false}
!499 = !{!"../drivers/hid/wacom_wac.c", i32 4511, i32 4}
!500 = !{ptr @wacom_features_0xF0, !501, !"wacom_features_0xF0", i1 false, i1 false}
!501 = !{!"../drivers/hid/wacom_wac.c", i32 4510, i32 36}
!502 = !{ptr @.str.141, !503, !"<string literal>", i1 false, i1 false}
!503 = !{!"../drivers/hid/wacom_wac.c", i32 4451, i32 4}
!504 = !{ptr @wacom_features_0xF4, !505, !"wacom_features_0xF4", i1 false, i1 false}
!505 = !{!"../drivers/hid/wacom_wac.c", i32 4450, i32 36}
!506 = !{ptr @.str.142, !507, !"<string literal>", i1 false, i1 false}
!507 = !{!"../drivers/hid/wacom_wac.c", i32 4462, i32 4}
!508 = !{ptr @wacom_features_0xF6, !509, !"wacom_features_0xF6", i1 false, i1 false}
!509 = !{!"../drivers/hid/wacom_wac.c", i32 4461, i32 36}
!510 = !{ptr @wacom_features_0xF8, !511, !"wacom_features_0xF8", i1 false, i1 false}
!511 = !{!"../drivers/hid/wacom_wac.c", i32 4455, i32 36}
!512 = !{ptr @.str.143, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../drivers/hid/wacom_wac.c", i32 4549, i32 4}
!514 = !{ptr @wacom_features_0xFA, !515, !"wacom_features_0xFA", i1 false, i1 false}
!515 = !{!"../drivers/hid/wacom_wac.c", i32 4548, i32 36}
!516 = !{ptr @.str.144, !517, !"<string literal>", i1 false, i1 false}
!517 = !{!"../drivers/hid/wacom_wac.c", i32 4514, i32 4}
!518 = !{ptr @wacom_features_0xFB, !519, !"wacom_features_0xFB", i1 false, i1 false}
!519 = !{!"../drivers/hid/wacom_wac.c", i32 4513, i32 36}
!520 = !{ptr @.str.145, !521, !"<string literal>", i1 false, i1 false}
!521 = !{!"../drivers/hid/wacom_wac.c", i32 4600, i32 4}
!522 = !{ptr @wacom_features_0x100, !523, !"wacom_features_0x100", i1 false, i1 false}
!523 = !{!"../drivers/hid/wacom_wac.c", i32 4599, i32 36}
!524 = !{ptr @.str.146, !525, !"<string literal>", i1 false, i1 false}
!525 = !{!"../drivers/hid/wacom_wac.c", i32 4603, i32 4}
!526 = !{ptr @wacom_features_0x101, !527, !"wacom_features_0x101", i1 false, i1 false}
!527 = !{!"../drivers/hid/wacom_wac.c", i32 4602, i32 36}
!528 = !{ptr @.str.147, !529, !"<string literal>", i1 false, i1 false}
!529 = !{!"../drivers/hid/wacom_wac.c", i32 4606, i32 4}
!530 = !{ptr @wacom_features_0x10D, !531, !"wacom_features_0x10D", i1 false, i1 false}
!531 = !{!"../drivers/hid/wacom_wac.c", i32 4605, i32 36}
!532 = !{ptr @.str.148, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../drivers/hid/wacom_wac.c", i32 4609, i32 4}
!534 = !{ptr @wacom_features_0x10E, !535, !"wacom_features_0x10E", i1 false, i1 false}
!535 = !{!"../drivers/hid/wacom_wac.c", i32 4608, i32 36}
!536 = !{ptr @.str.149, !537, !"<string literal>", i1 false, i1 false}
!537 = !{!"../drivers/hid/wacom_wac.c", i32 4612, i32 4}
!538 = !{ptr @wacom_features_0x10F, !539, !"wacom_features_0x10F", i1 false, i1 false}
!539 = !{!"../drivers/hid/wacom_wac.c", i32 4611, i32 36}
!540 = !{ptr @.str.150, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../drivers/hid/wacom_wac.c", i32 4615, i32 4}
!542 = !{ptr @wacom_features_0x116, !543, !"wacom_features_0x116", i1 false, i1 false}
!543 = !{!"../drivers/hid/wacom_wac.c", i32 4614, i32 36}
!544 = !{ptr @.str.151, !545, !"<string literal>", i1 false, i1 false}
!545 = !{!"../drivers/hid/wacom_wac.c", i32 4618, i32 4}
!546 = !{ptr @wacom_features_0x12C, !547, !"wacom_features_0x12C", i1 false, i1 false}
!547 = !{!"../drivers/hid/wacom_wac.c", i32 4617, i32 36}
!548 = !{ptr @.str.152, !549, !"<string literal>", i1 false, i1 false}
!549 = !{!"../drivers/hid/wacom_wac.c", i32 4680, i32 4}
!550 = !{ptr @wacom_features_0x300, !551, !"wacom_features_0x300", i1 false, i1 false}
!551 = !{!"../drivers/hid/wacom_wac.c", i32 4679, i32 36}
!552 = !{ptr @.str.153, !553, !"<string literal>", i1 false, i1 false}
!553 = !{!"../drivers/hid/wacom_wac.c", i32 4683, i32 4}
!554 = !{ptr @wacom_features_0x301, !555, !"wacom_features_0x301", i1 false, i1 false}
!555 = !{!"../drivers/hid/wacom_wac.c", i32 4682, i32 36}
!556 = !{ptr @.str.154, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../drivers/hid/wacom_wac.c", i32 4686, i32 4}
!558 = !{ptr @wacom_features_0x302, !559, !"wacom_features_0x302", i1 false, i1 false}
!559 = !{!"../drivers/hid/wacom_wac.c", i32 4685, i32 36}
!560 = !{ptr @.str.155, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../drivers/hid/wacom_wac.c", i32 4690, i32 4}
!562 = !{ptr @wacom_features_0x303, !563, !"wacom_features_0x303", i1 false, i1 false}
!563 = !{!"../drivers/hid/wacom_wac.c", i32 4689, i32 36}
!564 = !{ptr @.str.156, !565, !"<string literal>", i1 false, i1 false}
!565 = !{!"../drivers/hid/wacom_wac.c", i32 4489, i32 4}
!566 = !{ptr @wacom_features_0x304, !567, !"wacom_features_0x304", i1 false, i1 false}
!567 = !{!"../drivers/hid/wacom_wac.c", i32 4488, i32 36}
!568 = !{ptr @.str.157, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../drivers/hid/wacom_wac.c", i32 4701, i32 4}
!570 = !{ptr @wacom_features_0x307, !571, !"wacom_features_0x307", i1 false, i1 false}
!571 = !{!"../drivers/hid/wacom_wac.c", i32 4700, i32 36}
!572 = !{ptr @.str.158, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../drivers/hid/wacom_wac.c", i32 4707, i32 4}
!574 = !{ptr @wacom_features_0x309, !575, !"wacom_features_0x309", i1 false, i1 false}
!575 = !{!"../drivers/hid/wacom_wac.c", i32 4706, i32 36}
!576 = !{ptr @.str.159, !577, !"<string literal>", i1 false, i1 false}
!577 = !{!"../drivers/hid/wacom_wac.c", i32 4711, i32 4}
!578 = !{ptr @wacom_features_0x30A, !579, !"wacom_features_0x30A", i1 false, i1 false}
!579 = !{!"../drivers/hid/wacom_wac.c", i32 4710, i32 36}
!580 = !{ptr @.str.160, !581, !"<string literal>", i1 false, i1 false}
!581 = !{!"../drivers/hid/wacom_wac.c", i32 4717, i32 4}
!582 = !{ptr @wacom_features_0x30C, !583, !"wacom_features_0x30C", i1 false, i1 false}
!583 = !{!"../drivers/hid/wacom_wac.c", i32 4716, i32 36}
!584 = !{ptr @.str.161, !585, !"<string literal>", i1 false, i1 false}
!585 = !{!"../drivers/hid/wacom_wac.c", i32 4694, i32 4}
!586 = !{ptr @wacom_features_0x30E, !587, !"wacom_features_0x30E", i1 false, i1 false}
!587 = !{!"../drivers/hid/wacom_wac.c", i32 4693, i32 36}
!588 = !{ptr @.str.162, !589, !"<string literal>", i1 false, i1 false}
!589 = !{!"../drivers/hid/wacom_wac.c", i32 4439, i32 4}
!590 = !{ptr @wacom_features_0x314, !591, !"wacom_features_0x314", i1 false, i1 false}
!591 = !{!"../drivers/hid/wacom_wac.c", i32 4438, i32 36}
!592 = !{ptr @.str.163, !593, !"<string literal>", i1 false, i1 false}
!593 = !{!"../drivers/hid/wacom_wac.c", i32 4443, i32 4}
!594 = !{ptr @wacom_features_0x315, !595, !"wacom_features_0x315", i1 false, i1 false}
!595 = !{!"../drivers/hid/wacom_wac.c", i32 4442, i32 36}
!596 = !{ptr @.str.164, !597, !"<string literal>", i1 false, i1 false}
!597 = !{!"../drivers/hid/wacom_wac.c", i32 4447, i32 4}
!598 = !{ptr @wacom_features_0x317, !599, !"wacom_features_0x317", i1 false, i1 false}
!599 = !{!"../drivers/hid/wacom_wac.c", i32 4446, i32 36}
!600 = !{ptr @.str.165, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../drivers/hid/wacom_wac.c", i32 4721, i32 4}
!602 = !{ptr @wacom_features_0x318, !603, !"wacom_features_0x318", i1 false, i1 false}
!603 = !{!"../drivers/hid/wacom_wac.c", i32 4720, i32 36}
!604 = !{ptr @.str.166, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../drivers/hid/wacom_wac.c", i32 4724, i32 4}
!606 = !{ptr @wacom_features_0x319, !607, !"wacom_features_0x319", i1 false, i1 false}
!607 = !{!"../drivers/hid/wacom_wac.c", i32 4723, i32 36}
!608 = !{ptr @.str.167, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../drivers/hid/wacom_wac.c", i32 4736, i32 4}
!610 = !{ptr @wacom_features_0x323, !611, !"wacom_features_0x323", i1 false, i1 false}
!611 = !{!"../drivers/hid/wacom_wac.c", i32 4735, i32 36}
!612 = !{ptr @.str.168, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../drivers/hid/wacom_wac.c", i32 4727, i32 4}
!614 = !{ptr @wacom_features_0x325, !615, !"wacom_features_0x325", i1 false, i1 false}
!615 = !{!"../drivers/hid/wacom_wac.c", i32 4726, i32 36}
!616 = !{ptr @.str.169, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../drivers/hid/wacom_wac.c", i32 4733, i32 4}
!618 = !{ptr @wacom_features_0x326, !619, !"wacom_features_0x326", i1 false, i1 false}
!619 = !{!"../drivers/hid/wacom_wac.c", i32 4732, i32 36}
!620 = !{ptr @.str.170, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../drivers/hid/wacom_wac.c", i32 4466, i32 4}
!622 = !{ptr @wacom_features_0x32A, !623, !"wacom_features_0x32A", i1 false, i1 false}
!623 = !{!"../drivers/hid/wacom_wac.c", i32 4465, i32 36}
!624 = !{ptr @.str.171, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../drivers/hid/wacom_wac.c", i32 4471, i32 4}
!626 = !{ptr @wacom_features_0x32B, !627, !"wacom_features_0x32B", i1 false, i1 false}
!627 = !{!"../drivers/hid/wacom_wac.c", i32 4470, i32 36}
!628 = !{ptr @wacom_features_0x32C, !629, !"wacom_features_0x32C", i1 false, i1 false}
!629 = !{!"../drivers/hid/wacom_wac.c", i32 4476, i32 36}
!630 = !{ptr @.str.172, !631, !"<string literal>", i1 false, i1 false}
!631 = !{!"../drivers/hid/wacom_wac.c", i32 4519, i32 4}
!632 = !{ptr @wacom_features_0x32F, !633, !"wacom_features_0x32F", i1 false, i1 false}
!633 = !{!"../drivers/hid/wacom_wac.c", i32 4518, i32 36}
!634 = !{ptr @.str.173, !635, !"<string literal>", i1 false, i1 false}
!635 = !{!"../drivers/hid/wacom_wac.c", i32 4740, i32 4}
!636 = !{ptr @wacom_features_0x331, !637, !"wacom_features_0x331", i1 false, i1 false}
!637 = !{!"../drivers/hid/wacom_wac.c", i32 4739, i32 36}
!638 = !{ptr @.str.174, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../drivers/hid/wacom_wac.c", i32 4494, i32 4}
!640 = !{ptr @wacom_features_0x333, !641, !"wacom_features_0x333", i1 false, i1 false}
!641 = !{!"../drivers/hid/wacom_wac.c", i32 4493, i32 36}
!642 = !{ptr @wacom_features_0x335, !643, !"wacom_features_0x335", i1 false, i1 false}
!643 = !{!"../drivers/hid/wacom_wac.c", i32 4499, i32 36}
!644 = !{ptr @.str.175, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../drivers/hid/wacom_wac.c", i32 4524, i32 4}
!646 = !{ptr @wacom_features_0x336, !647, !"wacom_features_0x336", i1 false, i1 false}
!647 = !{!"../drivers/hid/wacom_wac.c", i32 4523, i32 36}
!648 = !{ptr @.str.176, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../drivers/hid/wacom_wac.c", i32 4744, i32 4}
!650 = !{ptr @wacom_features_0x33B, !651, !"wacom_features_0x33B", i1 false, i1 false}
!651 = !{!"../drivers/hid/wacom_wac.c", i32 4743, i32 36}
!652 = !{ptr @.str.177, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../drivers/hid/wacom_wac.c", i32 4748, i32 4}
!654 = !{ptr @wacom_features_0x33C, !655, !"wacom_features_0x33C", i1 false, i1 false}
!655 = !{!"../drivers/hid/wacom_wac.c", i32 4747, i32 36}
!656 = !{ptr @.str.178, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../drivers/hid/wacom_wac.c", i32 4752, i32 4}
!658 = !{ptr @wacom_features_0x33D, !659, !"wacom_features_0x33D", i1 false, i1 false}
!659 = !{!"../drivers/hid/wacom_wac.c", i32 4751, i32 36}
!660 = !{ptr @.str.179, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../drivers/hid/wacom_wac.c", i32 4756, i32 4}
!662 = !{ptr @wacom_features_0x33E, !663, !"wacom_features_0x33E", i1 false, i1 false}
!663 = !{!"../drivers/hid/wacom_wac.c", i32 4755, i32 36}
!664 = !{ptr @.str.180, !665, !"<string literal>", i1 false, i1 false}
!665 = !{!"../drivers/hid/wacom_wac.c", i32 4760, i32 4}
!666 = !{ptr @wacom_features_0x343, !667, !"wacom_features_0x343", i1 false, i1 false}
!667 = !{!"../drivers/hid/wacom_wac.c", i32 4759, i32 36}
!668 = !{ptr @wacom_features_0x360, !669, !"wacom_features_0x360", i1 false, i1 false}
!669 = !{!"../drivers/hid/wacom_wac.c", i32 4764, i32 36}
!670 = !{ptr @wacom_features_0x361, !671, !"wacom_features_0x361", i1 false, i1 false}
!671 = !{!"../drivers/hid/wacom_wac.c", i32 4767, i32 36}
!672 = !{ptr @.str.181, !673, !"<string literal>", i1 false, i1 false}
!673 = !{!"../drivers/hid/wacom_wac.c", i32 4771, i32 4}
!674 = !{ptr @wacom_features_0x377, !675, !"wacom_features_0x377", i1 false, i1 false}
!675 = !{!"../drivers/hid/wacom_wac.c", i32 4770, i32 36}
!676 = !{ptr @.str.182, !677, !"<string literal>", i1 false, i1 false}
!677 = !{!"../drivers/hid/wacom_wac.c", i32 4774, i32 4}
!678 = !{ptr @wacom_features_0x379, !679, !"wacom_features_0x379", i1 false, i1 false}
!679 = !{!"../drivers/hid/wacom_wac.c", i32 4773, i32 36}
!680 = !{ptr @.str.183, !681, !"<string literal>", i1 false, i1 false}
!681 = !{!"../drivers/hid/wacom_wac.c", i32 4777, i32 4}
!682 = !{ptr @wacom_features_0x37A, !683, !"wacom_features_0x37A", i1 false, i1 false}
!683 = !{!"../drivers/hid/wacom_wac.c", i32 4776, i32 36}
!684 = !{ptr @.str.184, !685, !"<string literal>", i1 false, i1 false}
!685 = !{!"../drivers/hid/wacom_wac.c", i32 4780, i32 4}
!686 = !{ptr @wacom_features_0x37B, !687, !"wacom_features_0x37B", i1 false, i1 false}
!687 = !{!"../drivers/hid/wacom_wac.c", i32 4779, i32 36}
!688 = !{ptr @wacom_features_0x393, !689, !"wacom_features_0x393", i1 false, i1 false}
!689 = !{!"../drivers/hid/wacom_wac.c", i32 4782, i32 36}
!690 = !{ptr @wacom_features_0x3c6, !691, !"wacom_features_0x3c6", i1 false, i1 false}
!691 = !{!"../drivers/hid/wacom_wac.c", i32 4786, i32 36}
!692 = !{ptr @wacom_features_0x3c8, !693, !"wacom_features_0x3c8", i1 false, i1 false}
!693 = !{!"../drivers/hid/wacom_wac.c", i32 4789, i32 36}
!694 = !{ptr @.str.185, !695, !"<string literal>", i1 false, i1 false}
!695 = !{!"../drivers/hid/wacom_wac.c", i32 4621, i32 4}
!696 = !{ptr @wacom_features_0x4001, !697, !"wacom_features_0x4001", i1 false, i1 false}
!697 = !{!"../drivers/hid/wacom_wac.c", i32 4620, i32 36}
!698 = !{ptr @.str.186, !699, !"<string literal>", i1 false, i1 false}
!699 = !{!"../drivers/hid/wacom_wac.c", i32 4624, i32 4}
!700 = !{ptr @wacom_features_0x4004, !701, !"wacom_features_0x4004", i1 false, i1 false}
!701 = !{!"../drivers/hid/wacom_wac.c", i32 4623, i32 36}
!702 = !{ptr @.str.187, !703, !"<string literal>", i1 false, i1 false}
!703 = !{!"../drivers/hid/wacom_wac.c", i32 4627, i32 4}
!704 = !{ptr @wacom_features_0x5000, !705, !"wacom_features_0x5000", i1 false, i1 false}
!705 = !{!"../drivers/hid/wacom_wac.c", i32 4626, i32 36}
!706 = !{ptr @.str.188, !707, !"<string literal>", i1 false, i1 false}
!707 = !{!"../drivers/hid/wacom_wac.c", i32 4630, i32 4}
!708 = !{ptr @wacom_features_0x5002, !709, !"wacom_features_0x5002", i1 false, i1 false}
!709 = !{!"../drivers/hid/wacom_wac.c", i32 4629, i32 36}
!710 = !{ptr @.str.189, !711, !"<string literal>", i1 false, i1 false}
!711 = !{!"../drivers/hid/wacom_wac.c", i32 4698, i32 4}
!712 = !{ptr @wacom_features_0x6004, !713, !"wacom_features_0x6004", i1 false, i1 false}
!713 = !{!"../drivers/hid/wacom_wac.c", i32 4697, i32 36}
!714 = !{ptr @.str.190, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../drivers/hid/wacom_wac.c", i32 4794, i32 4}
!716 = !{ptr @wacom_features_HID_ANY_ID, !717, !"wacom_features_HID_ANY_ID", i1 false, i1 false}
!717 = !{!"../drivers/hid/wacom_wac.c", i32 4793, i32 36}
!718 = !{i32 1, !"wchar_size", i32 2}
!719 = !{i32 1, !"min_enum_size", i32 4}
!720 = !{i32 8, !"branch-target-enforcement", i32 0}
!721 = !{i32 8, !"sign-return-address", i32 0}
!722 = !{i32 8, !"sign-return-address-all", i32 0}
!723 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!724 = !{i32 7, !"uwtable", i32 1}
!725 = !{i32 7, !"frame-pointer", i32 2}
!726 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!727 = !{i8 0, i8 2}
!728 = !{i64 2148902467, i64 2148902472, i64 2148902485, i64 2148902529, i64 2148902563, i64 2148902584}
