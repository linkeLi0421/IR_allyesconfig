; ModuleID = '/llk/IR_all_yes/drivers/infiniband/hw/mlx5/main.c_pt.bc'
source_filename = "../drivers/infiniband/hw/mlx5/main.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.mlx5_ib_profile = type { [20 x %struct.mlx5_ib_stage] }
%struct.mlx5_ib_stage = type { ptr, ptr }
%struct.auxiliary_driver = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.device_driver, ptr }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.ib_device_ops = type { ptr, i32, i32, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.uapi_definition = type { i8, i8, %union.anon.181, %union.anon.184 }
%union.anon.181 = type { %struct.anon.183 }
%struct.anon.183 = type { i16, i8, i8, i8 }
%union.anon.184 = type { ptr }
%struct.uverbs_object_def = type { i16, ptr, i32, ptr }
%struct.anon.182 = type { i16 }
%struct.uverbs_method_def = type { i16, i32, i32, ptr, ptr }
%struct.uverbs_attr_def = type { i16, %struct.uverbs_attr_spec }
%struct.uverbs_attr_spec = type { i8, i8, %union.anon.185, %union.anon.189 }
%union.anon.185 = type { %struct.anon.186 }
%struct.anon.186 = type { i16, i16 }
%union.anon.189 = type { %struct.anon.190, [4 x i8] }
%struct.anon.190 = type { ptr }
%struct.uverbs_obj_type_class = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.uverbs_obj_idr_type = type { %struct.uverbs_obj_type, ptr }
%struct.uverbs_obj_type = type { ptr, i32 }
%struct.anon.187 = type { i16, i8 }
%struct.ib_cq_init_attr = type { i32, i32, i32 }
%struct.auxiliary_device_id = type { [32 x i8], i32 }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mlx5_ib_multiport_info = type { %struct.list_head, ptr, ptr, %struct.notifier_block, %struct.completion, i64, i32, i8, i8 }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.mlx5_ib_dev = type { %struct.ib_device, ptr, %struct.notifier_block, i32, %struct.mutex, i8, i8, %struct.umr_common, %struct.mlx5_ib_resources, %struct.atomic_t, %struct.mlx5_mr_cache, %struct.timer_list, %struct.mutex, %struct.ib_odp_caps, i64, %struct.mutex, %struct.mlx5_ib_pf_eq, %struct.xarray, i32, ptr, %struct.spinlock, %struct.list_head, ptr, %struct.mlx5_sq_bfreg, %struct.mlx5_sq_bfreg, %struct.mlx5_sq_bfreg, %struct.mlx5_ib_delay_drop, ptr, %struct.mlx5_ib_lb_state, i8, %struct.list_head, i64, %struct.mlx5_dm, i16, %struct.mlx5_srq_table, %struct.mlx5_qp_table, %struct.mlx5_async_ctx, %struct.mlx5_devx_event_table, %struct.mlx5_var_table, %struct.xarray, [2 x %struct.mlx5_port_caps], i16 }
%struct.ib_device = type { ptr, %struct.ib_device_ops, [64 x i8], %struct.callback_head, %struct.list_head, %struct.rw_semaphore, %struct.spinlock, %struct.rw_semaphore, %struct.xarray, %struct.mutex, %struct.rwlock_t, ptr, i32, %union.anon.180, [4 x ptr], i64, [64 x i8], i64, i32, i8, i8, i32, %struct.ib_device_attr, ptr, %struct.rdmacg_device, i32, %struct.spinlock, [3 x %struct.list_head], ptr, ptr, %struct.refcount_struct, %struct.completion, %struct.work_struct, ptr, %struct.mutex, %struct.xarray, [16 x i8], i32, i32 }
%struct.callback_head = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%union.anon.180 = type { %struct.ib_core_device }
%struct.ib_core_device = type { %struct.device, %struct.possible_net_t, ptr, %struct.list_head, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.possible_net_t = type { ptr }
%struct.ib_device_attr = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, i32, i32, %struct.ib_odp_caps, i64, i64, %struct.ib_rss_caps, i32, i32, %struct.ib_tm_caps, %struct.ib_cq_caps, i64, i32 }
%struct.ib_rss_caps = type { i32, i32, i32 }
%struct.ib_tm_caps = type { i32, i32, i32, i32, i32 }
%struct.ib_cq_caps = type { i16, i16 }
%struct.rdmacg_device = type { %struct.list_head, %struct.list_head, ptr }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.umr_common = type { ptr, ptr, ptr, %struct.semaphore }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.mlx5_ib_resources = type { ptr, i32, i32, ptr, ptr, ptr, [2 x %struct.mlx5_ib_port_resources] }
%struct.mlx5_ib_port_resources = type { ptr, %struct.work_struct }
%struct.mlx5_mr_cache = type { ptr, [23 x %struct.mlx5_cache_ent], ptr, i32 }
%struct.mlx5_cache_ent = type { %struct.list_head, %struct.spinlock, [4 x i8], i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, ptr, %struct.work_struct, %struct.delayed_work }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.ib_odp_caps = type { i64, %struct.anon.171 }
%struct.anon.171 = type { i32, i32, i32, i32 }
%struct.mlx5_ib_pf_eq = type { %struct.notifier_block, ptr, ptr, %struct.work_struct, %struct.spinlock, ptr, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.mlx5_sq_bfreg = type { ptr, ptr, i8, i32, i32 }
%struct.mlx5_ib_delay_drop = type { ptr, %struct.work_struct, %struct.mutex, i32, i8, %struct.atomic_t, %struct.atomic_t, ptr }
%struct.mlx5_ib_lb_state = type { %struct.mutex, i32, i32, i8 }
%struct.mlx5_dm = type { ptr, %struct.spinlock, [8 x i32] }
%struct.mlx5_srq_table = type { %struct.notifier_block, %struct.xarray }
%struct.mlx5_qp_table = type { %struct.notifier_block, %struct.spinlock, %struct.xarray }
%struct.mlx5_async_ctx = type { ptr, %struct.atomic_t, %struct.wait_queue_head }
%struct.mlx5_devx_event_table = type { %struct.mlx5_nb, %struct.mutex, %struct.xarray }
%struct.mlx5_nb = type { %struct.notifier_block, i8 }
%struct.mlx5_var_table = type { %struct.mutex, ptr, i64, i32, i64 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.mlx5_port_caps = type { i8, i8 }
%struct.mlx5_core_dev = type { ptr, i32, ptr, %struct.mutex, i32, i8, [64 x i8], %struct.mlx5_cmd, %struct.anon.193, ptr, i64, i32, ptr, i32, i32, %struct.mutex, i32, %struct.mlx5_priv, %struct.mlx5_profile, i32, %struct.mlx5e_resources, ptr, ptr, ptr, %struct.anon.195, ptr, ptr, %struct.mlx5_clock, ptr, ptr, ptr, i32, ptr }
%struct.mlx5_cmd = type { %struct.mlx5_nb, i32, ptr, i32, i32, ptr, i32, i16, i8, i8, i32, i32, ptr, %struct.spinlock, %struct.spinlock, i8, i32, [32 x i8], ptr, %struct.semaphore, %struct.semaphore, i32, i16, [32 x ptr], ptr, %struct.mlx5_cmd_debug, [5 x %struct.cmd_msg_cache], i32, ptr }
%struct.mlx5_cmd_debug = type { ptr, ptr, ptr, i8, i16, i16 }
%struct.cmd_msg_cache = type { %struct.spinlock, %struct.list_head, i32, i32 }
%struct.anon.193 = type { [38 x ptr], [20 x i32], [3 x [18 x i32]], [64 x i32], [18 x i32], i8 }
%struct.mlx5_priv = type { ptr, ptr, %struct.mlx5_nb, ptr, %struct.xarray, i32, %struct.atomic_t, %struct.list_head, i32, i32, %struct.mlx5_core_health, %struct.list_head, ptr, ptr, ptr, ptr, %struct.mutex, i32, %struct.mutex, %struct.list_head, ptr, %struct.list_head, %struct.spinlock, ptr, i32, ptr, ptr, ptr, ptr, %struct.mlx5_core_sriov, ptr, i32, ptr, ptr, %struct.mlx5_core_roce, %struct.mlx5_fc_stats, %struct.mlx5_rl_table, ptr, %struct.mlx5_bfreg_data, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mlx5_core_health = type { ptr, ptr, %struct.timer_list, i32, i32, i8, i32, i32, %struct.spinlock, ptr, i32, %struct.work_struct, %struct.work_struct, ptr, ptr, %struct.delayed_work }
%struct.mlx5_core_sriov = type { ptr, i32, i16 }
%struct.mlx5_core_roce = type { ptr, ptr, ptr }
%struct.mlx5_fc_stats = type { %struct.spinlock, %struct.idr, %struct.list_head, %struct.llist_head, %struct.llist_head, ptr, %struct.delayed_work, i32, i32, ptr, i32, i32, i8, i32, %struct.mlx5_fc_pool }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.llist_head = type { ptr }
%struct.mlx5_fc_pool = type { ptr, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32 }
%struct.mlx5_rl_table = type { %struct.mutex, i16, i32, i32, ptr, i64 }
%struct.mlx5_bfreg_data = type { %struct.mlx5_bfreg_head, %struct.mlx5_bfreg_head }
%struct.mlx5_bfreg_head = type { %struct.mutex, %struct.list_head }
%struct.mlx5_profile = type { i64, i8, [23 x %struct.anon.194] }
%struct.anon.194 = type { i32, i32 }
%struct.mlx5e_resources = type { %struct.mlx5e_hw_objs, %struct.devlink_port, ptr }
%struct.mlx5e_hw_objs = type { i32, %struct.mlx5_td, i32, %struct.mlx5_sq_bfreg }
%struct.mlx5_td = type { %struct.mutex, %struct.list_head, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, %struct.spinlock, i32, i32, ptr, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex, ptr }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.151 }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%union.anon.151 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.anon.195 = type { %struct.mlx5_rsvd_gids, i32 }
%struct.mlx5_rsvd_gids = type { i32, i32, %struct.ida }
%struct.ida = type { %struct.xarray }
%struct.mlx5_clock = type { %struct.mlx5_nb, %struct.seqlock_t, %struct.hwtstamp_config, ptr, %struct.ptp_clock_info, %struct.mlx5_pps, %struct.mlx5_timer }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mlx5_pps = type { [8 x i8], %struct.work_struct, [8 x i64], i8 }
%struct.mlx5_timer = type { %struct.cyclecounter, %struct.timecounter, i32, i32, %struct.delayed_work }
%struct.cyclecounter = type { ptr, i64, i32, i32 }
%struct.timecounter = type { ptr, i64, i64, i64, i64 }
%struct.mlx5_ib_port = type { %struct.mlx5_ib_counters, %struct.mlx5_ib_multiport, ptr, %struct.mlx5_roce, ptr }
%struct.mlx5_ib_counters = type { ptr, ptr, i32, i32, i32, i32, i16, [3 x %struct.mlx5_ib_op_fc] }
%struct.mlx5_ib_op_fc = type { ptr, [2 x ptr] }
%struct.mlx5_ib_multiport = type { ptr, %struct.spinlock }
%struct.mlx5_roce = type { %struct.rwlock_t, ptr, %struct.notifier_block, %struct.atomic_t, i32, ptr, i32 }
%struct.ib_gid_attr = type { ptr, ptr, %union.ib_gid, i32, i16, i32 }
%union.ib_gid = type { %struct.anon.167 }
%struct.anon.167 = type { i64, i64 }
%struct.ib_port_attr = type { i64, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, i8, i8, i16, i8, i16 }
%struct.mlx5_hca_vport_context = type { i32, i8, i8, i8, i32, i32, i32, i8, i64, i64, i64, i32, i32, i16, i16, i16, i8, i8, i8, i16, i8, i16, i16, i8 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.109, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.20 }
%struct.llist_node = type { ptr }
%union.anon.20 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.22 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.109 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.142, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.166, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.142 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.hlist_head = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%union.anon.166 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.mlx5_reg_node_desc = type { [64 x i8] }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.192, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.192 = type { ptr }
%struct.mlx5_ib_flow_db = type { [34 x %struct.mlx5_ib_flow_prio], [34 x %struct.mlx5_ib_flow_prio], [2 x %struct.mlx5_ib_flow_prio], [1 x %struct.mlx5_ib_flow_prio], [16 x %struct.mlx5_ib_flow_prio], [34 x %struct.mlx5_ib_flow_prio], [34 x %struct.mlx5_ib_flow_prio], [3 x %struct.mlx5_ib_flow_prio], ptr, %struct.mutex }
%struct.mlx5_ib_flow_prio = type { ptr, i32 }
%struct.ib_srq_init_attr = type { ptr, ptr, %struct.ib_srq_attr, i32, %struct.anon.173 }
%struct.ib_srq_attr = type { i32, i32, i32 }
%struct.anon.173 = type { ptr, %union.anon.174 }
%union.anon.174 = type { %struct.anon.175 }
%struct.anon.175 = type { ptr }
%struct.ib_pd = type { i32, i32, ptr, ptr, %struct.atomic_t, i32, ptr, %struct.rdma_restrack_entry }
%struct.rdma_restrack_entry = type { i8, i8, %struct.kref, %struct.completion, ptr, ptr, i32, i8, i32 }
%struct.ib_qp_init_attr = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.ib_qp_cap, i32, i32, i32, i32, ptr, i32 }
%struct.ib_qp_cap = type { i32, i32, i32, i32, i32, i32 }
%struct.ib_qp_attr = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ib_qp_cap, %struct.rdma_ah_attr, %struct.rdma_ah_attr, i16, i16, i8, i8, i8, i8, i8, i32, i8, i8, i8, i32, i8, i32, ptr }
%struct.rdma_ah_attr = type { %struct.ib_global_route, i8, i8, i32, i8, i32, %union.anon.172 }
%struct.ib_global_route = type { ptr, %union.ib_gid, i32, i8, i8, i8 }
%union.anon.172 = type { %struct.opa_ah_attr }
%struct.opa_ah_attr = type { i32, i8, i8 }
%struct.mlx5_ib_event_work = type { %struct.work_struct, %union.anon.200, i8, i32, ptr }
%union.anon.200 = type { ptr }
%struct.ib_event = type { ptr, %union.anon.131, i32 }
%union.anon.131 = type { ptr }
%struct.mlx5_eswitch_rep = type { [2 x %struct.mlx5_eswitch_rep_data], i16, i16, i16, i32, ptr }
%struct.mlx5_eswitch_rep_data = type { ptr, %struct.atomic_t }
%struct.mlx5_ib_cq = type { %struct.ib_cq, %struct.mlx5_core_cq, %struct.mlx5_ib_cq_buf, %struct.mlx5_db, %struct.spinlock, %struct.mutex, ptr, ptr, i32, %struct.list_head, %struct.list_head, i32, %struct.list_head, i32, %struct.work_struct, i16 }
%struct.ib_cq = type { ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.atomic_t, i32, ptr, %struct.list_head, %union.anon.141, ptr, ptr, i64, i8, i32, %struct.rdma_restrack_entry }
%union.anon.141 = type { %struct.work_struct }
%struct.mlx5_core_cq = type { i32, i32, ptr, ptr, ptr, %struct.refcount_struct, %struct.completion, i32, i32, ptr, ptr, i32, i32, ptr, i32, %struct.anon.209, i32, %struct.list_head, ptr, i16 }
%struct.anon.209 = type { %struct.list_head, ptr, ptr }
%struct.mlx5_ib_cq_buf = type { %struct.mlx5_frag_buf_ctrl, %struct.mlx5_frag_buf, ptr, i32, i32 }
%struct.mlx5_frag_buf_ctrl = type { ptr, i32, i16, i16, i8, i8, i8 }
%struct.mlx5_frag_buf = type { ptr, i32, i32, i8 }
%struct.mlx5_db = type { ptr, %union.anon.208, i32, i32 }
%union.anon.208 = type { ptr }
%struct.mlx5_eqe = type { i8, i8, i8, i8, [7 x i32], %union.ev_data, i16, i8, i8 }
%union.ev_data = type <{ %struct.mlx5_eqe_gpio, [12 x i8] }>
%struct.mlx5_eqe_gpio = type { [2 x i32], i64 }
%struct.mlx5_ib_query_device_resp = type { i32, i32, %struct.mlx5_ib_tso_caps, %struct.mlx5_ib_rss_caps, %struct.mlx5_ib_cqe_comp_caps, %struct.mlx5_packet_pacing_caps, i32, i32, %struct.mlx5_ib_sw_parsing_caps, %struct.mlx5_ib_striding_rq_caps, i32, %struct.mlx5_ib_dci_streams_caps, i16 }
%struct.mlx5_ib_tso_caps = type { i32, i32 }
%struct.mlx5_ib_rss_caps = type { i64, i8, [7 x i8] }
%struct.mlx5_ib_cqe_comp_caps = type { i32, i32 }
%struct.mlx5_packet_pacing_caps = type { i32, i32, i32, i8, [3 x i8] }
%struct.mlx5_ib_sw_parsing_caps = type { i32, i32 }
%struct.mlx5_ib_striding_rq_caps = type { i32, i32, i32, i32, i32, i32 }
%struct.mlx5_ib_dci_streams_caps = type { i8, i8 }
%struct.ib_udata = type { ptr, ptr, i32, i32 }
%struct.mlx5_init_seg = type { i32, i32, [2 x i32], i32, i32, i32, [120 x i32], i32, %struct.health_buffer, [878 x i32], i32, i32, i32, i32, [2 x i32], i32, [11 x i32], i32, i32, [1006 x i32], i64, i32, i32 }
%struct.health_buffer = type { [6 x i32], [2 x i32], i32, i32, [1 x i32], i32, i32, i32, i8, [3 x i8], i8, i8, i16 }
%struct.ib_device_modify = type { i64, [64 x i8] }
%struct.ib_port_modify = type { i32, i32, i8 }
%struct.mlx5_ib_alloc_ucontext_req_v2 = type { i32, i32, i32, i32, i8, i8, i16, i32, i64 }
%struct.mlx5_ib_alloc_ucontext_resp = type { i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i32, i32, i8, i8, i8, i8, i64, i32, i32, i32, i32 }
%struct.mlx5_ib_ucontext = type { %struct.ib_ucontext, %struct.list_head, %struct.mutex, %struct.mlx5_bfreg_info, i8, i32, i64, i16, %struct.atomic_t }
%struct.ib_ucontext = type { ptr, ptr, %struct.ib_rdmacg_object, %struct.rdma_restrack_entry, %struct.xarray }
%struct.ib_rdmacg_object = type { ptr }
%struct.mlx5_bfreg_info = type { ptr, i32, ptr, %struct.mutex, i32, i8, i32, i32, i32, i32 }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.11, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.11 = type { %struct.anon.12 }
%struct.anon.12 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type { ptr }
%struct.page = type { i32, %union.anon.2, %union.anon.124, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.124 = type { %struct.atomic_t }
%struct.mlx5_user_mmap_entry = type { %struct.rdma_user_mmap_entry, i8, i64, i32 }
%struct.rdma_user_mmap_entry = type { %struct.kref, ptr, i32, i32, i8 }
%struct.mlx5_ib_alloc_pd_resp = type { i32 }
%struct.uverbs_attr_bundle = type { %struct.ib_udata, %struct.ib_udata, ptr, ptr, ptr, [2 x i32], [0 x %struct.uverbs_attr] }
%struct.uverbs_attr = type { %union.anon.127 }
%union.anon.127 = type { %struct.uverbs_ptr_attr }
%struct.uverbs_ptr_attr = type { %union.anon.128, i16, i16, i8 }
%union.anon.128 = type { i64 }
%struct.mlx5_ib_pd = type { %struct.ib_pd, i32, i16 }
%struct.ib_qp = type { ptr, ptr, ptr, ptr, %struct.spinlock, i32, %struct.list_head, %struct.list_head, ptr, ptr, %struct.list_head, %struct.atomic_t, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, i32, i8, %struct.rdma_restrack_entry, ptr }
%struct.mlx5_ib_qp = type { %struct.ib_qp, %union.anon.207, %struct.mlx5_frag_buf, %struct.mlx5_db, %struct.mlx5_ib_wq, i8, i8, %struct.mlx5_ib_wq, %struct.mutex, i32, i32, i8, i32, %struct.mlx5_bf, i8, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mlx5_rate_limit, i32, i32, i32, i32, i16 }
%union.anon.207 = type { %struct.mlx5_ib_raw_packet_qp }
%struct.mlx5_ib_raw_packet_qp = type { %struct.mlx5_ib_sq, %struct.mlx5_ib_rq }
%struct.mlx5_ib_sq = type { %struct.mlx5_ib_qp_base, ptr, %struct.mlx5_ib_ubuffer, ptr, ptr, i32, i8 }
%struct.mlx5_ib_qp_base = type { ptr, %struct.mlx5_core_qp, %struct.mlx5_ib_ubuffer }
%struct.mlx5_core_qp = type { %struct.mlx5_core_rsc_common, ptr, i32, ptr, i32, i16 }
%struct.mlx5_core_rsc_common = type { i32, %struct.refcount_struct, %struct.completion }
%struct.mlx5_ib_ubuffer = type { ptr, i32, i64 }
%struct.mlx5_ib_rq = type { %struct.mlx5_ib_qp_base, ptr, %struct.mlx5_ib_ubuffer, ptr, i32, i8, i32 }
%struct.mlx5_ib_wq = type { %struct.mlx5_frag_buf_ctrl, ptr, ptr, ptr, ptr, i16, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, i16, i16, ptr }
%struct.mlx5_bf = type { i32, i32, ptr }
%struct.mlx5_rate_limit = type { i32, i32, i16 }
%struct.ib_uobject = type { i64, ptr, ptr, ptr, %struct.list_head, %struct.ib_rdmacg_object, i32, %struct.kref, %struct.atomic_t, %struct.callback_head, ptr }
%struct.ib_port_immutable = type { i32, i32, i32, i32 }
%union.devlink_param_value = type { i32, [28 x i8] }
%struct.mlx5_adev = type { %struct.auxiliary_device, ptr, i32 }
%struct.auxiliary_device = type { %struct.device, ptr, i32 }
%struct.file = type { %union.anon.15, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.15 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }

@__UNIQUE_ID_author558 = internal constant [44 x i8] c"mlx5_ib.author=Eli Cohen <eli@mellanox.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_description559 = internal constant [89 x i8] c"mlx5_ib.description=Mellanox 5th generation network adapters (ConnectX series) IB driver\00", section ".modinfo", align 1
@__UNIQUE_ID_file560 = internal constant [48 x i8] c"mlx5_ib.file=drivers/infiniband/hw/mlx5/mlx5_ib\00", section ".modinfo", align 1
@__UNIQUE_ID_license561 = internal constant [29 x i8] c"mlx5_ib.license=Dual BSD/GPL\00", section ".modinfo", align 1
@mlx5_ib_multiport_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @mlx5_ib_multiport_mutex, i64 52), ptr getelementptr (i8, ptr @mlx5_ib_multiport_mutex, i64 52) }, ptr @mlx5_ib_multiport_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.1, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@raw_eth_profile = dso_local constant { %struct.mlx5_ib_profile, [32 x i8] } { %struct.mlx5_ib_profile { [20 x %struct.mlx5_ib_stage] [%struct.mlx5_ib_stage { ptr @mlx5_ib_stage_init_init, ptr @mlx5_ib_stage_init_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_fs_init, ptr @mlx5_ib_fs_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_caps_init, ptr @mlx5_ib_stage_caps_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_raw_eth_non_default_cb, ptr null }, %struct.mlx5_ib_stage { ptr @mlx5_ib_roce_init, ptr @mlx5_ib_roce_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_init_qp_table, ptr @mlx5_cleanup_qp_table }, %struct.mlx5_ib_stage { ptr @mlx5_init_srq_table, ptr @mlx5_cleanup_srq_table }, %struct.mlx5_ib_stage { ptr @mlx5_ib_dev_res_init, ptr @mlx5_ib_dev_res_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_dev_notifier_init, ptr @mlx5_ib_stage_dev_notifier_cleanup }, %struct.mlx5_ib_stage zeroinitializer, %struct.mlx5_ib_stage { ptr @mlx5_ib_counters_init, ptr @mlx5_ib_counters_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_cong_debugfs_init, ptr @mlx5_ib_stage_cong_debugfs_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_uar_init, ptr @mlx5_ib_stage_uar_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_bfrag_init, ptr @mlx5_ib_stage_bfrag_cleanup }, %struct.mlx5_ib_stage { ptr null, ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_devx_init, ptr @mlx5_ib_devx_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_ib_reg_init, ptr @mlx5_ib_stage_ib_reg_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_post_ib_reg_umr_init, ptr null }, %struct.mlx5_ib_stage zeroinitializer, %struct.mlx5_ib_stage { ptr @mlx5_ib_restrack_init, ptr null }] }, [32 x i8] zeroinitializer }, align 32
@mlx5r_driver = internal global { %struct.auxiliary_driver, [56 x i8] } { %struct.auxiliary_driver { ptr @mlx5r_probe, ptr @mlx5r_remove, ptr null, ptr null, ptr null, ptr @.str.141, %struct.device_driver zeroinitializer, ptr @mlx5r_id_table }, [56 x i8] zeroinitializer }, align 32
@mlx5r_mp_driver = internal global { %struct.auxiliary_driver, [56 x i8] } { %struct.auxiliary_driver { ptr @mlx5r_mp_probe, ptr @mlx5r_mp_remove, ptr null, ptr null, ptr null, ptr @.str.154, %struct.device_driver zeroinitializer, ptr @mlx5r_mp_id_table }, [56 x i8] zeroinitializer }, align 32
@mlx5_ib_event_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@xlt_emergency_page = external dso_local local_unnamed_addr global ptr, align 4
@__initcall__kmod_mlx5_ib__604_4568_mlx5_ib_init6 = internal global ptr @mlx5_ib_init, section ".initcall6.init", align 4
@__exitcall_mlx5_ib_cleanup = internal global ptr @mlx5_ib_cleanup, section ".exitcall.exit", align 4
@.str = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"mlx5_ib_multiport_mutex.wait_lock\00", [62 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mlx5_ib_multiport_mutex\00", [40 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@mlx5_get_gid_table_len._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.2, ptr @.str.3, ptr @.str.4, i32 1194, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\014gid table length is zero\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mlx5_get_gid_table_len\00", [41 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/mlx5/driver.h\00", [36 x i8] zeroinitializer }, align 32
@mlx5_get_gid_table_len._entry_ptr = internal global ptr @mlx5_get_gid_table_len._entry, section ".printk_index", align 4
@translate_active_width.__UNIQUE_ID_ddebug566 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, i8 1, i8 50, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.5 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mlx5_ib\00", [24 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"translate_active_width\00", [41 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"drivers/infiniband/hw/mlx5/main.c\00", [62 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"%s:%d:(pid %d): Invalid active_width %d, setting width to default value: 4x\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx5_mtu_to_ib_mtu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.10, ptr @.str.7, i32 1240, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"\014invalid mtu\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mlx5_mtu_to_ib_mtu\00", [45 x i8] zeroinitializer }, align 32
@mlx5_mtu_to_ib_mtu._entry_ptr = internal global ptr @mlx5_mtu_to_ib_mtu._entry, section ".printk_index", align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.11 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.13 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_init_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.14 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&dev->port[i].mp.mpi_lock\00", [38 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_init_init.__key.15 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.16 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"&dev->port[i].roce.netdev_lock\00", [33 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_init_init.__key.17 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.18 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&dev->cap_mask_mutex\00", [43 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_init_init.__key.19 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.20 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"&dev->reset_flow_resource_lock\00", [33 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_init_init.__key.21 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.22 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"&dev->dm.lock\00", [18 x i8] zeroinitializer }, align 32
@mlx5_ib_unaffiliated_port_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @mlx5_ib_unaffiliated_port_list, ptr @mlx5_ib_unaffiliated_port_list }, [24 x i8] zeroinitializer }, align 32
@mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug589 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.23, ptr @.str.7, ptr @.str.24, i8 3, i8 55, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.23 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"mlx5_ib_init_multiport_master\00", [34 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"removing port from unaffiliated list.\0A\00", [57 x i8] zeroinitializer }, align 32
@mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug590 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.23, ptr @.str.7, ptr @.str.25, i8 3, i8 55, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.25 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s:%d:(pid %d): port %d bound\0A\00", [33 x i8] zeroinitializer }, align 32
@mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug591 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.23, ptr @.str.7, ptr @.str.26, i8 3, i8 57, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.26 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"%s:%d:(pid %d): no free port found for port %d\0A\00", [48 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @mlx5_ib_dev_list, ptr @mlx5_ib_dev_list }, [24 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@mlx5_ib_bind_slave_port.__UNIQUE_ID_ddebug588 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.27, ptr @.str.7, ptr @.str.28, i8 3, i8 34, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.27 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mlx5_ib_bind_slave_port\00", [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%s:%d:(pid %d): port %u already affiliated.\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx5_ib_bind_slave_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.27, ptr @.str.7, i32 3225, ptr @.str.30, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"%s:%d:(pid %d): failed adding netdev notifier for port %u\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@mlx5_ib_bind_slave_port._entry_ptr = internal global ptr @mlx5_ib_bind_slave_port._entry, section ".printk_index", align 4
@mlx5_ib_event_slave_port.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.32 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"(work_completion)(&work->work)\00", [33 x i8] zeroinitializer }, align 32
@mlx5_ib_handle_event._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.34, ptr @.str.7, i32 2707, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s:%d:(pid %d): warning: event on port %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"mlx5_ib_handle_event\00", [43 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@mlx5_ib_handle_event._entry_ptr = internal global ptr @mlx5_ib_handle_event._entry, section ".printk_index", align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@mlx5_ib_unbind_slave_port.__UNIQUE_ID_ddebug587 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.36, ptr @.str.7, ptr @.str.37, i8 3, i8 28, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.36 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"mlx5_ib_unbind_slave_port\00", [38 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s:%d:(pid %d): unaffiliated port %u\0A\00", [58 x i8] zeroinitializer }, align 32
@mlx5_ib_unbind_slave_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.36, ptr @.str.7, i32 3192, ptr @.str.30, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s:%d:(pid %d): Failed to unaffiliate port %u\0A\00", [49 x i8] zeroinitializer }, align 32
@mlx5_ib_unbind_slave_port._entry_ptr = internal global ptr @mlx5_ib_unbind_slave_port._entry, section ".printk_index", align 4
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@set_has_smi_cap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.40, ptr @.str.41, ptr @.str.7, i32 2775, ptr @.str.30, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"%s:%d:(pid %d): query_hca_vport_context for port=%d failed %d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"set_has_smi_cap\00", [16 x i8] zeroinitializer }, align 32
@set_has_smi_cap._entry_ptr = internal global ptr @set_has_smi_cap._entry, section ".printk_index", align 4
@xa_init_flags.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.42 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&xa->xa_lock\00", [19 x i8] zeroinitializer }, align 32
@mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug592 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.43, ptr @.str.7, ptr @.str.44, i8 3, i8 64, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.43 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"mlx5_ib_cleanup_multiport_master\00", [63 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s:%d:(pid %d): unbinding port_num: %u\0A\00", [56 x i8] zeroinitializer }, align 32
@mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug593 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.43, ptr @.str.7, ptr @.str.45, i8 3, i8 66, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.45 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s:%d:(pid %d): removing from devlist\0A\00", [57 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_ipoib_enhanced_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 0, i32 0, i8 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_rn_get_params, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, [148 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_sriov_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 0, i32 0, i8 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_set_vf_link_state, ptr @mlx5_ib_get_vf_config, ptr @mlx5_ib_get_vf_stats, ptr @mlx5_ib_get_vf_guid, ptr @mlx5_ib_set_vf_guid, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, [148 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_mw_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 0, i32 0, i8 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_alloc_mw, ptr @mlx5_ib_dealloc_mw, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 0, i32 88, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, [148 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_xrc_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 0, i32 0, i8 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_alloc_xrcd, ptr @mlx5_ib_dealloc_xrcd, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 164 }, [148 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_dm_ops = external dso_local constant %struct.ib_device_ops, align 4
@mlx5_ib_dev_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 1, i32 1, i8 0, ptr @mlx5_attr_group, ptr null, ptr @mlx5_ib_post_send_nodrain, ptr @mlx5_ib_post_recv_nodrain, ptr @mlx5_ib_drain_rq, ptr @mlx5_ib_drain_sq, ptr @mlx5_ib_poll_cq, ptr null, ptr @mlx5_ib_arm_cq, ptr @mlx5_ib_post_srq_recv, ptr @mlx5_ib_process_mad, ptr @mlx5_ib_query_device, ptr @mlx5_ib_modify_device, ptr @get_dev_fw_str, ptr null, ptr null, ptr @mlx5_ib_modify_port, ptr null, ptr @mlx5_ib_port_link_layer, ptr null, ptr null, ptr null, ptr @mlx5_ib_query_gid, ptr @mlx5_ib_add_gid, ptr @mlx5_ib_del_gid, ptr @mlx5_ib_query_pkey, ptr @mlx5_ib_alloc_ucontext, ptr @mlx5_ib_dealloc_ucontext, ptr @mlx5_ib_mmap, ptr @mlx5_ib_mmap_free, ptr @mlx5_ib_disassociate_ucontext, ptr @mlx5_ib_alloc_pd, ptr @mlx5_ib_dealloc_pd, ptr @mlx5_ib_create_ah, ptr @mlx5_ib_create_ah, ptr null, ptr @mlx5_ib_query_ah, ptr @mlx5_ib_destroy_ah, ptr @mlx5_ib_create_srq, ptr @mlx5_ib_modify_srq, ptr @mlx5_ib_query_srq, ptr @mlx5_ib_destroy_srq, ptr @mlx5_ib_create_qp, ptr @mlx5_ib_modify_qp, ptr @mlx5_ib_query_qp, ptr @mlx5_ib_destroy_qp, ptr @mlx5_ib_create_cq, ptr @mlx5_ib_modify_cq, ptr @mlx5_ib_destroy_cq, ptr @mlx5_ib_resize_cq, ptr @mlx5_ib_get_dma_mr, ptr @mlx5_ib_reg_user_mr, ptr @mlx5_ib_reg_user_mr_dmabuf, ptr @mlx5_ib_rereg_user_mr, ptr @mlx5_ib_dereg_mr, ptr @mlx5_ib_alloc_mr, ptr @mlx5_ib_alloc_mr_integrity, ptr null, ptr @mlx5_ib_map_mr_sg, ptr @mlx5_ib_check_mr_status, ptr null, ptr null, ptr @mlx5_ib_mcg_attach, ptr @mlx5_ib_mcg_detach, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_map_mr_sg_pi, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_enable_driver, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_query_ucontext, ptr null, i32 80, i32 132, i32 648, i32 0, i32 120, i32 1000, i32 0, i32 424, i32 400, i32 0 }, [148 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_caps_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.46 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"&dev->lb.mutex\00", [17 x i8] zeroinitializer }, align 32
@mlx5_attr_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr null, ptr null, ptr @mlx5_class_attributes, ptr null }, [44 x i8] zeroinitializer }, align 32
@mlx5_class_attributes = internal global { [6 x ptr], [40 x i8] } { [6 x ptr] [ptr @dev_attr_hw_rev, ptr @dev_attr_hca_type, ptr @dev_attr_board_id, ptr @dev_attr_fw_pages, ptr @dev_attr_reg_pages, ptr null], [40 x i8] zeroinitializer }, align 32
@dev_attr_hw_rev = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.47, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @hw_rev_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_hca_type = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.49, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @hca_type_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_board_id = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.51, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @board_id_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_fw_pages = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.53, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @fw_pages_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_reg_pages = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.55, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @reg_pages_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"hw_rev\00", [25 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%x\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"hca_type\00", [23 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"MT%d\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"board_id\00", [23 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%.*s\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"fw_pages\00", [23 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%d\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"reg_pages\00", [22 x i8] zeroinitializer }, align 32
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.56 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%d.%d.%04d\00", [21 x i8] zeroinitializer }, align 32
@set_port_caps_atomic._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.61, ptr @.str.7, i32 1529, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"%s:%d:(pid %d): trying to change bitmask 0x%X but change supported 0x%X\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"set_port_caps_atomic\00", [43 x i8] zeroinitializer }, align 32
@set_port_caps_atomic._entry_ptr = internal global ptr @set_port_caps_atomic._entry, section ".printk_index", align 4
@set_roce_addr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @.str.63, ptr @.str.7, i32 595, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s:%d:(pid %d): Unexpected GID type %u\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"set_roce_addr\00", [18 x i8] zeroinitializer }, align 32
@set_roce_addr._entry_ptr = internal global ptr @set_roce_addr._entry, section ".printk_index", align 4
@mlx5_ib_alloc_ucontext.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.64 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"&bfregi->lock\00", [18 x i8] zeroinitializer }, align 32
@mlx5_ib_alloc_ucontext.__key.65 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.66 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&context->db_page_mutex\00", [40 x i8] zeroinitializer }, align 32
@calc_total_bfregs.__UNIQUE_ID_ddebug570 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.67, ptr @.str.7, ptr @.str.68, i8 1, i8 -104, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"calc_total_bfregs\00", [46 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [132 x i8], [60 x i8] } { [132 x i8] c"%s:%d:(pid %d): uar_4k: fw support %s, lib support %s, user requested %d bfregs, allocated %d, total bfregs %d, using %d sys pages\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"yes\00", [28 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"no\00", [29 x i8] zeroinitializer }, align 32
@allocate_uars.__UNIQUE_ID_ddebug571 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.71, ptr @.str.7, ptr @.str.72, i8 1, i8 -100, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.71 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"allocate_uars\00", [18 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s:%d:(pid %d): allocated uar %d\0A\00", [62 x i8] zeroinitializer }, align 32
@allocate_uars._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.71, ptr @.str.7, i32 1663, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s:%d:(pid %d): failed to free uar %d\0A\00", [57 x i8] zeroinitializer }, align 32
@allocate_uars._entry_ptr = internal global ptr @allocate_uars._entry, section ".printk_index", align 4
@print_lib_caps.__UNIQUE_ID_ddebug567 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.74, ptr @.str.7, ptr @.str.75, i8 1, i8 -115, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.74 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"print_lib_caps\00", [17 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%s:%d:(pid %d): MLX5_LIB_CAP_4K_UAR = %s\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"y\00", [30 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"n\00", [30 x i8] zeroinitializer }, align 32
@uar_mmap._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str.7, i32 2178, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s:%d:(pid %d): invalid uar index %lu, max=%d\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"uar_mmap\00", [23 x i8] zeroinitializer }, align 32
@uar_mmap._entry_ptr = internal global ptr @uar_mmap._entry, section ".printk_index", align 4
@uar_mmap._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.79, ptr @.str.7, i32 2203, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"%s:%d:(pid %d): invalid bfreg_dyn_idx %u, max=%u\0A\00", [46 x i8] zeroinitializer }, align 32
@uar_mmap._entry_ptr.82 = internal global ptr @uar_mmap._entry.80, section ".printk_index", align 4
@uar_mmap._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.79, ptr @.str.7, i32 2212, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"%s:%d:(pid %d): wrong offset, idx %lu is busy, bfregn=%u\0A\00", [38 x i8] zeroinitializer }, align 32
@uar_mmap._entry_ptr.85 = internal global ptr @uar_mmap._entry.83, section ".printk_index", align 4
@uar_mmap._entry.86 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.79, ptr @.str.7, i32 2223, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%s:%d:(pid %d): UAR alloc failed\0A\00", [62 x i8] zeroinitializer }, align 32
@uar_mmap._entry_ptr.88 = internal global ptr @uar_mmap._entry.86, section ".printk_index", align 4
@uar_mmap.__UNIQUE_ID_ddebug580 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.79, ptr @.str.7, ptr @.str.89, i8 2, i8 45, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.89 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s:%d:(pid %d): uar idx 0x%lx, pfn %pa\0A\00", [56 x i8] zeroinitializer }, align 32
@uar_mmap._entry.90 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.91, ptr @.str.79, ptr @.str.7, i32 2238, ptr @.str.30, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"%s:%d:(pid %d): rdma_user_mmap_io failed with error=%d, mmap_cmd=%s\0A\00", [59 x i8] zeroinitializer }, align 32
@uar_mmap._entry_ptr.92 = internal global ptr @uar_mmap._entry.90, section ".printk_index", align 4
@.str.93 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"WC\00", [29 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"best effort WC\00", [17 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"NC\00", [29 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@mlx5_ib_mcg_attach.__UNIQUE_ID_ddebug583 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.97, ptr @.str.7, ptr @.str.98, i8 2, i8 90, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.97 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mlx5_ib_mcg_attach\00", [45 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"%s:%d:(pid %d): Attaching a multi cast group to underlay QP is not supported\0A\00", [50 x i8] zeroinitializer }, align 32
@mlx5_ib_mcg_attach._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.99, ptr @.str.97, ptr @.str.7, i32 2417, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%s:%d:(pid %d): failed attaching QPN 0x%x, MGID %pI6\0A\00", [42 x i8] zeroinitializer }, align 32
@mlx5_ib_mcg_attach._entry_ptr = internal global ptr @mlx5_ib_mcg_attach._entry, section ".printk_index", align 4
@mlx5_ib_mcg_detach._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.101, ptr @.str.7, i32 2433, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%s:%d:(pid %d): failed detaching QPN 0x%x, MGID %pI6\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mlx5_ib_mcg_detach\00", [45 x i8] zeroinitializer }, align 32
@mlx5_ib_mcg_detach._entry_ptr = internal global ptr @mlx5_ib_mcg_detach._entry, section ".printk_index", align 4
@mlx5_ib_enable_driver.__UNIQUE_ID_ddebug594 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.102, ptr @.str.7, ptr @.str.103, i8 3, i8 -97, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.102 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"mlx5_ib_enable_driver\00", [42 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s:%d:(pid %d): Write-Combining %s\00", [61 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"supported\00", [22 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"not supported\00", [18 x i8] zeroinitializer }, align 32
@mlx5_ib_devx_defs = external dso_local constant [0 x %struct.uapi_definition], align 4
@mlx5_ib_flow_defs = external dso_local constant [0 x %struct.uapi_definition], align 4
@mlx5_ib_qos_defs = external dso_local constant [0 x %struct.uapi_definition], align 4
@mlx5_ib_std_types_defs = external dso_local constant [0 x %struct.uapi_definition], align 4
@mlx5_ib_dm_defs = external dso_local constant [0 x %struct.uapi_definition], align 4
@mlx5_ib_flow_action = internal constant { %struct.uverbs_object_def, [16 x i8] } { %struct.uverbs_object_def { i16 13, ptr null, i32 1, ptr @_object_methods_UVERBS_OBJECT_FLOW_ACTION3612 }, [16 x i8] zeroinitializer }, align 32
@mlx5_ib_query_context = internal constant { %struct.uverbs_object_def, [16 x i8] } { %struct.uverbs_object_def { i16 0, ptr null, i32 1, ptr @_object_methods_UVERBS_OBJECT_DEVICE3622 }, [16 x i8] zeroinitializer }, align 32
@mlx5_ib_object_MLX5_IB_OBJECT_VAR = internal constant { %struct.uverbs_object_def, [16 x i8] } { %struct.uverbs_object_def { i16 4102, ptr @.compoundliteral.108, i32 2, ptr @_object_methods_MLX5_IB_OBJECT_VAR3475 }, [16 x i8] zeroinitializer }, align 32
@mlx5_ib_object_MLX5_IB_OBJECT_UAR = internal constant { %struct.uverbs_object_def, [16 x i8] } { %struct.uverbs_object_def { i16 4104, ptr @.compoundliteral.114, i32 2, ptr @_object_methods_MLX5_IB_OBJECT_UAR3605 }, [16 x i8] zeroinitializer }, align 32
@mlx5_ib_defs = internal constant { <{ %struct.uapi_definition, %struct.uapi_definition, %struct.uapi_definition, %struct.uapi_definition, %struct.uapi_definition, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, %struct.uapi_definition, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, %struct.uapi_definition }>, [60 x i8] } { <{ %struct.uapi_definition, %struct.uapi_definition, %struct.uapi_definition, %struct.uapi_definition, %struct.uapi_definition, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, %struct.uapi_definition, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 }, %struct.uapi_definition }> <{ %struct.uapi_definition { i8 4, i8 0, %union.anon.181 zeroinitializer, %union.anon.184 { ptr @mlx5_ib_devx_defs } }, %struct.uapi_definition { i8 4, i8 0, %union.anon.181 zeroinitializer, %union.anon.184 { ptr @mlx5_ib_flow_defs } }, %struct.uapi_definition { i8 4, i8 0, %union.anon.181 zeroinitializer, %union.anon.184 { ptr @mlx5_ib_qos_defs } }, %struct.uapi_definition { i8 4, i8 0, %union.anon.181 zeroinitializer, %union.anon.184 { ptr @mlx5_ib_std_types_defs } }, %struct.uapi_definition { i8 4, i8 0, %union.anon.181 zeroinitializer, %union.anon.184 { ptr @mlx5_ib_dm_defs } }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 } { i8 3, i8 0, { %struct.anon.182, [4 x i8] } { %struct.anon.182 { i16 13 }, [4 x i8] undef }, %union.anon.184 { ptr @mlx5_ib_flow_action } }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 } { i8 3, i8 0, { %struct.anon.182, [4 x i8] } { %struct.anon.182 zeroinitializer, [4 x i8] undef }, %union.anon.184 { ptr @mlx5_ib_query_context } }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 } { i8 3, i8 0, { %struct.anon.182, [4 x i8] } { %struct.anon.182 { i16 4102 }, [4 x i8] undef }, %union.anon.184 { ptr @mlx5_ib_object_MLX5_IB_OBJECT_VAR } }, %struct.uapi_definition { i8 5, i8 1, %union.anon.181 zeroinitializer, %union.anon.184 { ptr @var_is_supported } }, { i8, i8, { %struct.anon.182, [4 x i8] }, %union.anon.184 } { i8 3, i8 0, { %struct.anon.182, [4 x i8] } { %struct.anon.182 { i16 4104 }, [4 x i8] undef }, %union.anon.184 { ptr @mlx5_ib_object_MLX5_IB_OBJECT_UAR } }, %struct.uapi_definition zeroinitializer }>, [60 x i8] zeroinitializer }, align 32
@_object_methods_UVERBS_OBJECT_FLOW_ACTION3612 = internal constant { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @mlx5_ib_method_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE], [28 x i8] zeroinitializer }, align 32
@mlx5_ib_method_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE = internal constant { %struct.uverbs_method_def, [44 x i8] } { %struct.uverbs_method_def { i16 0, i32 0, i32 1, ptr @_method_attrs_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE, ptr null }, [44 x i8] zeroinitializer }, align 32
@_method_attrs_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE = internal constant { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.compoundliteral], [28 x i8] zeroinitializer }, align 32
@.compoundliteral = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4096, %struct.uverbs_attr_spec { i8 1, i8 0, %union.anon.185 { %struct.anon.186 { i16 8, i16 4 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@_object_methods_UVERBS_OBJECT_DEVICE3622 = internal constant { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @mlx5_ib_method_UVERBS_METHOD_QUERY_CONTEXT], [28 x i8] zeroinitializer }, align 32
@mlx5_ib_method_UVERBS_METHOD_QUERY_CONTEXT = internal constant { %struct.uverbs_method_def, [44 x i8] } { %struct.uverbs_method_def { i16 4, i32 0, i32 1, ptr @_method_attrs_UVERBS_METHOD_QUERY_CONTEXT, ptr null }, [44 x i8] zeroinitializer }, align 32
@_method_attrs_UVERBS_METHOD_QUERY_CONTEXT = internal constant { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.compoundliteral.107], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.107 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4096, %struct.uverbs_attr_spec { i8 2, i8 -96, %union.anon.185 { %struct.anon.186 { i16 72, i16 72 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@uverbs_idr_class = external dso_local constant %struct.uverbs_obj_type_class, align 4
@.compoundliteral.108 = internal constant { %struct.uverbs_obj_idr_type, [20 x i8] } { %struct.uverbs_obj_idr_type { %struct.uverbs_obj_type { ptr @uverbs_idr_class, i32 56 }, ptr @mmap_obj_cleanup }, [20 x i8] zeroinitializer }, align 32
@_object_methods_MLX5_IB_OBJECT_VAR3475 = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_ALLOC, ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_DESTROY], [24 x i8] zeroinitializer }, align 32
@mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_ALLOC = internal constant { %struct.uverbs_method_def, [44 x i8] } { %struct.uverbs_method_def { i16 4096, i32 0, i32 4, ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_ALLOC, ptr @mlx5_ib_handler_MLX5_IB_METHOD_VAR_OBJ_ALLOC }, [44 x i8] zeroinitializer }, align 32
@mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_DESTROY = internal constant { %struct.uverbs_method_def, [44 x i8] } { %struct.uverbs_method_def { i16 4097, i32 0, i32 1, ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_DESTROY, ptr @uverbs_destroy_def_handler }, [44 x i8] zeroinitializer }, align 32
@_method_attrs_MLX5_IB_METHOD_VAR_OBJ_ALLOC = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.compoundliteral.109, ptr @.compoundliteral.110, ptr @.compoundliteral.111, ptr @.compoundliteral.112], [16 x i8] zeroinitializer }, align 32
@.compoundliteral.109 = internal constant { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } }, [44 x i8] } { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } } { i16 4096, { i8, i8, { %struct.anon.187 }, %union.anon.189 } { i8 3, i8 32, { %struct.anon.187 } { %struct.anon.187 { i16 4102, i8 2 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.110 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4099, %struct.uverbs_attr_spec { i8 2, i8 32, %union.anon.185 { %struct.anon.186 { i16 4, i16 4 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.111 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4098, %struct.uverbs_attr_spec { i8 2, i8 32, %union.anon.185 { %struct.anon.186 { i16 4, i16 4 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.112 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4097, %struct.uverbs_attr_spec { i8 2, i8 32, %union.anon.185 { %struct.anon.186 { i16 8, i16 8 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@_method_attrs_MLX5_IB_METHOD_VAR_OBJ_DESTROY = internal constant { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.compoundliteral.113], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.113 = internal constant { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } }, [44 x i8] } { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } } { i16 4096, { i8, i8, { %struct.anon.187 }, %union.anon.189 } { i8 3, i8 32, { %struct.anon.187 } { %struct.anon.187 { i16 4102, i8 3 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.114 = internal constant { %struct.uverbs_obj_idr_type, [20 x i8] } { %struct.uverbs_obj_idr_type { %struct.uverbs_obj_type { ptr @uverbs_idr_class, i32 56 }, ptr @mmap_obj_cleanup }, [20 x i8] zeroinitializer }, align 32
@_object_methods_MLX5_IB_OBJECT_UAR3605 = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_ALLOC, ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_DESTROY], [24 x i8] zeroinitializer }, align 32
@mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_ALLOC = internal constant { %struct.uverbs_method_def, [44 x i8] } { %struct.uverbs_method_def { i16 4096, i32 0, i32 5, ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_ALLOC, ptr @mlx5_ib_handler_MLX5_IB_METHOD_UAR_OBJ_ALLOC }, [44 x i8] zeroinitializer }, align 32
@mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_DESTROY = internal constant { %struct.uverbs_method_def, [44 x i8] } { %struct.uverbs_method_def { i16 4097, i32 0, i32 1, ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_DESTROY, ptr @uverbs_destroy_def_handler }, [44 x i8] zeroinitializer }, align 32
@_method_attrs_MLX5_IB_METHOD_UAR_OBJ_ALLOC = internal constant { [5 x ptr], [44 x i8] } { [5 x ptr] [ptr @.compoundliteral.115, ptr @.compoundliteral.116, ptr @.compoundliteral.117, ptr @.compoundliteral.118, ptr @.compoundliteral.119], [44 x i8] zeroinitializer }, align 32
@.compoundliteral.115 = internal constant { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } }, [44 x i8] } { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } } { i16 4096, { i8, i8, { %struct.anon.187 }, %union.anon.189 } { i8 3, i8 32, { %struct.anon.187 } { %struct.anon.187 { i16 4104, i8 2 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.116 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4097, %struct.uverbs_attr_spec { i8 1, i8 32, %union.anon.185 { %struct.anon.186 { i16 8, i16 8 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.117 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4100, %struct.uverbs_attr_spec { i8 2, i8 32, %union.anon.185 { %struct.anon.186 { i16 4, i16 4 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.118 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4099, %struct.uverbs_attr_spec { i8 2, i8 32, %union.anon.185 { %struct.anon.186 { i16 4, i16 4 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@.compoundliteral.119 = internal constant { %struct.uverbs_attr_def, [44 x i8] } { %struct.uverbs_attr_def { i16 4098, %struct.uverbs_attr_spec { i8 2, i8 32, %union.anon.185 { %struct.anon.186 { i16 8, i16 8 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@_method_attrs_MLX5_IB_METHOD_UAR_OBJ_DESTROY = internal constant { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.compoundliteral.120], [28 x i8] zeroinitializer }, align 32
@.compoundliteral.120 = internal constant { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } }, [44 x i8] } { { i16, { i8, i8, { %struct.anon.187 }, %union.anon.189 } } { i16 4096, { i8, i8, { %struct.anon.187 }, %union.anon.189 } { i8 3, i8 32, { %struct.anon.187 } { %struct.anon.187 { i16 4104, i8 3 } }, %union.anon.189 zeroinitializer } }, [44 x i8] zeroinitializer }, align 32
@mlx5_ib_init_var_table.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.121 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&var_table->bitmap_lock\00", [40 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_port_rep_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 0, i32 0, i8 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_rep_query_port, ptr null, ptr @mlx5_port_rep_immutable, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_rep_query_pkey, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, [148 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_common_roce_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 0, i32 0, i8 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_get_netdev, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_create_wq, ptr @mlx5_ib_destroy_wq, ptr @mlx5_ib_modify_wq, ptr @mlx5_ib_create_rwq_ind_table, ptr @mlx5_ib_destroy_rwq_ind_table, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 32, i32 0, i32 0, i32 0 }, [148 x i8] zeroinitializer }, align 32
@__const.mlx5_ib_dev_res_init.cq_attr = private unnamed_addr constant %struct.ib_cq_init_attr { i32 1, i32 0, i32 0 }, align 4
@mlx5_ib_dev_res_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.122 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"(work_completion)(&devr->ports[port].pkey_change_work)\00", [41 x i8] zeroinitializer }, align 32
@ib_destroy_srq.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.123 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/rdma/ib_verbs.h\00", [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Destroy of kernel SRQ shouldn't fail\00", [59 x i8] zeroinitializer }, align 32
@ib_destroy_cq.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.125 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Destroy of kernel CQ shouldn't fail\00", [60 x i8] zeroinitializer }, align 32
@ib_dealloc_pd.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.126 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Destroy of kernel PD shouldn't fail\00", [60 x i8] zeroinitializer }, align 32
@mlx5_ib_event.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.127, ptr @.str.128, ptr @.str.7, i32 4039, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%s:%d:(pid %d): mr cache cleanup failed\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"mlx5_ib_stage_pre_ib_reg_umr_cleanup\00", [59 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry_ptr = internal global ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry, section ".printk_index", align 4
@.str.129 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mlx5_%d\00", [24 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mlx5_bond_%d\00", [19 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug595 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.131, ptr @.str.7, ptr @.str.132, i8 3, i8 -5, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.131 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"mlx5_ib_stage_post_ib_reg_umr_init\00", [61 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%s:%d:(pid %d): Couldn't create PD for sync UMR QP\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug596 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.131, ptr @.str.7, ptr @.str.133, i8 3, i8 -4, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.133 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%s:%d:(pid %d): Couldn't create CQ for sync UMR QP\0A\00", [44 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug597 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.131, ptr @.str.7, ptr @.str.134, i8 4, i8 0, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.134 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%s:%d:(pid %d): Couldn't create sync UMR QP\0A\00", [51 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug598 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.131, ptr @.str.7, ptr @.str.135, i8 4, i8 2, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.135 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s:%d:(pid %d): Couldn't modify UMR QP\0A\00", [56 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug599 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.131, ptr @.str.7, ptr @.str.136, i8 4, i8 5, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.136 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s:%d:(pid %d): Couldn't modify umr QP to rtr\0A\00", [49 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug600 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.131, ptr @.str.7, ptr @.str.137, i8 4, i8 7, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.137 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s:%d:(pid %d): Couldn't modify umr QP to rts\0A\00", [49 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.131, ptr @.str.7, i32 4136, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%s:%d:(pid %d): mr cache init failed %d\0A\00", [55 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_post_ib_reg_umr_init._entry_ptr = internal global ptr @mlx5_ib_stage_post_ib_reg_umr_init._entry, section ".printk_index", align 4
@sema_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.139 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"(*sem).lock\00", [20 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"semaphore->lock\00", [16 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"rdma\00", [27 x i8] zeroinitializer }, align 32
@mlx5r_id_table = internal constant { [2 x %struct.auxiliary_device_id], [56 x i8] } { [2 x %struct.auxiliary_device_id] [%struct.auxiliary_device_id { [32 x i8] c"mlx5_core.rdma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0 }, %struct.auxiliary_device_id zeroinitializer], [56 x i8] zeroinitializer }, align 32
@pf_profile = internal constant { %struct.mlx5_ib_profile, [32 x i8] } { %struct.mlx5_ib_profile { [20 x %struct.mlx5_ib_stage] [%struct.mlx5_ib_stage { ptr @mlx5_ib_stage_init_init, ptr @mlx5_ib_stage_init_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_fs_init, ptr @mlx5_ib_fs_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_caps_init, ptr @mlx5_ib_stage_caps_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_non_default_cb, ptr null }, %struct.mlx5_ib_stage { ptr @mlx5_ib_roce_init, ptr @mlx5_ib_roce_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_init_qp_table, ptr @mlx5_cleanup_qp_table }, %struct.mlx5_ib_stage { ptr @mlx5_init_srq_table, ptr @mlx5_cleanup_srq_table }, %struct.mlx5_ib_stage { ptr @mlx5_ib_dev_res_init, ptr @mlx5_ib_dev_res_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_dev_notifier_init, ptr @mlx5_ib_stage_dev_notifier_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_odp_init_one, ptr @mlx5_ib_odp_cleanup_one }, %struct.mlx5_ib_stage { ptr @mlx5_ib_counters_init, ptr @mlx5_ib_counters_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_cong_debugfs_init, ptr @mlx5_ib_stage_cong_debugfs_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_uar_init, ptr @mlx5_ib_stage_uar_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_bfrag_init, ptr @mlx5_ib_stage_bfrag_cleanup }, %struct.mlx5_ib_stage { ptr null, ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_devx_init, ptr @mlx5_ib_devx_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_ib_reg_init, ptr @mlx5_ib_stage_ib_reg_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_post_ib_reg_umr_init, ptr null }, %struct.mlx5_ib_stage { ptr @mlx5_ib_stage_delay_drop_init, ptr @mlx5_ib_stage_delay_drop_cleanup }, %struct.mlx5_ib_stage { ptr @mlx5_ib_restrack_init, ptr null }] }, [32 x i8] zeroinitializer }, align 32
@mlx5_ib_dev_port_ops = internal constant { %struct.ib_device_ops, [148 x i8] } { %struct.ib_device_ops { ptr null, i32 0, i32 0, i8 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mlx5_ib_query_port, ptr null, ptr @mlx5_port_immutable, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, [148 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_delay_drop_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.142 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&dev->delay_drop.lock\00", [42 x i8] zeroinitializer }, align 32
@mlx5_ib_stage_delay_drop_init.__key.143 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.144 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"(work_completion)(&dev->delay_drop.delay_drop_work)\00", [44 x i8] zeroinitializer }, align 32
@mlx5_debugfs_root = external dso_local local_unnamed_addr global ptr, align 4
@.str.145 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"delay_drop\00", [21 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"num_timeout_events\00", [45 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"num_rqs\00", [24 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"timeout\00", [24 x i8] zeroinitializer }, align 32
@fops_delay_drop_timeout = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr null, ptr @delay_drop_timeout_read, ptr @delay_drop_timeout_write, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr @simple_open, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@delay_drop_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.149, ptr @.str.150, ptr @.str.7, i32 2603, ptr @.str.35, ptr @.str.31 }, [40 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%s:%d:(pid %d): Failed to set delay drop, timeout=%u\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"delay_drop_handler\00", [45 x i8] zeroinitializer }, align 32
@delay_drop_handler._entry_ptr = internal global ptr @delay_drop_handler._entry, section ".printk_index", align 4
@.str.151 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%u\0A\00", [28 x i8] zeroinitializer }, align 32
@delay_drop_timeout_write.__UNIQUE_ID_ddebug586 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.152, ptr @.str.7, ptr @.str.153, i8 3, i8 13, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.152 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"delay_drop_timeout_write\00", [39 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"%s:%d:(pid %d): Round delay drop timeout to %u usec\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"multiport\00", [22 x i8] zeroinitializer }, align 32
@mlx5r_mp_id_table = internal constant { [2 x %struct.auxiliary_device_id], [56 x i8] } { [2 x %struct.auxiliary_device_id] [%struct.auxiliary_device_id { [32 x i8] c"mlx5_core.multiport\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0 }, %struct.auxiliary_device_id zeroinitializer], [56 x i8] zeroinitializer }, align 32
@mlx5r_mp_probe.__UNIQUE_ID_ddebug601 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.5, ptr @.str.155, ptr @.str.7, ptr @.str.156, i8 4, i8 81, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.155 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mlx5r_mp_probe\00", [17 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"no suitable IB device found to bind to, added to unaffiliated list.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"mlx5_ib_event_wq\00", [47 x i8] zeroinitializer }, align 32
@switch.table.uar_mmap = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.94, ptr null, ptr @.str.93, ptr @.str.95], [16 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.158 = internal global [7 x i64] [i64 5, i64 16, i64 256, i64 512, i64 1024, i64 2048, i64 4096]
@__sancov_gen_cov_switch_values.159 = internal global [7 x i64] [i64 5, i64 16, i64 256, i64 512, i64 1024, i64 2048, i64 4096]
@__sancov_gen_cov_switch_values.160 = internal global [7 x i64] [i64 5, i64 8, i64 1, i64 2, i64 4, i64 8, i64 15]
@__sancov_gen_cov_switch_values.161 = internal global [16 x i64] [i64 14, i64 32, i64 1, i64 2, i64 8, i64 16, i64 32, i64 64, i64 128, i64 256, i64 512, i64 1024, i64 2048, i64 4096, i64 8192, i64 65536]
@__sancov_gen_cov_switch_values.162 = internal global [28 x i64] [i64 26, i64 32, i64 1, i64 2, i64 4, i64 8, i64 16, i64 64, i64 128, i64 256, i64 4096, i64 8192, i64 16384, i64 32768, i64 65536, i64 262144, i64 1048576, i64 2097152, i64 4194304, i64 8388608, i64 16777216, i64 33554432, i64 67108864, i64 134217728, i64 268435456, i64 536870912, i64 1073741824, i64 2147483648]
@__sancov_gen_cov_switch_values.163 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.164 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.165 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 2, i64 4, i64 5, i64 6]
@__sancov_gen_cov_switch_values.166 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 4]
@__sancov_gen_cov_switch_values.167 = internal global [5 x i64] [i64 3, i64 32, i64 9, i64 34, i64 128]
@__sancov_gen_cov_switch_values.168 = internal global [9 x i64] [i64 7, i64 8, i64 1, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.169 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.170 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.171 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.172 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.173 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.174 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.175 = internal global [9 x i64] [i64 7, i64 8, i64 0, i64 1, i64 2, i64 3, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.176 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 4]
@__sancov_gen_cov_switch_values.177 = internal global [7 x i64] [i64 5, i64 8, i64 1, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.178 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 2, i64 3, i64 6]
@___asan_gen_.179 = private unnamed_addr constant [24 x i8] c"mlx5_ib_multiport_mutex\00", align 1
@___asan_gen_.182 = private unnamed_addr constant [16 x i8] c"raw_eth_profile\00", align 1
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4327, i32 30 }
@___asan_gen_.185 = private unnamed_addr constant [13 x i8] c"mlx5r_driver\00", align 1
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4515, i32 32 }
@___asan_gen_.188 = private unnamed_addr constant [16 x i8] c"mlx5r_mp_driver\00", align 1
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4508, i32 32 }
@___asan_gen_.191 = private unnamed_addr constant [17 x i8] c"mlx5_ib_event_wq\00", align 1
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 73, i32 33 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 79, i32 8 }
@___asan_gen_.210 = private unnamed_addr constant [31 x i8] c"../include/linux/mlx5/driver.h\00", align 1
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.210, i32 1194, i32 3 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1223, i32 3 }
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1240, i32 3 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.240, i32 695, i32 2 }
@___asan_gen_.240 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.240, i32 723, i32 2 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3662, i32 3 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3663, i32 3 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3686, i32 2 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3688, i32 2 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3693, i32 2 }
@___asan_gen_.272 = private unnamed_addr constant [31 x i8] c"mlx5_ib_unaffiliated_port_list\00", align 1
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 74, i32 8 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3292, i32 5 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3294, i32 5 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3300, i32 4 }
@___asan_gen_.287 = private unnamed_addr constant [17 x i8] c"mlx5_ib_dev_list\00", align 1
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 75, i32 8 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3207, i32 3 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3224, i32 3 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2749, i32 2 }
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2707, i32 3 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3186, i32 2 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3191, i32 3 }
@___asan_gen_.342 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.342, i32 87, i32 2 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2774, i32 6 }
@___asan_gen_.357 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.357, i32 378, i32 2 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3327, i32 5 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3337, i32 2 }
@___asan_gen_.368 = private unnamed_addr constant [31 x i8] c"mlx5_ib_dev_ipoib_enhanced_ops\00", align 1
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3784, i32 35 }
@___asan_gen_.371 = private unnamed_addr constant [22 x i8] c"mlx5_ib_dev_sriov_ops\00", align 1
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3788, i32 35 }
@___asan_gen_.374 = private unnamed_addr constant [19 x i8] c"mlx5_ib_dev_mw_ops\00", align 1
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3796, i32 35 }
@___asan_gen_.377 = private unnamed_addr constant [20 x i8] c"mlx5_ib_dev_xrc_ops\00", align 1
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3803, i32 35 }
@___asan_gen_.380 = private unnamed_addr constant [16 x i8] c"mlx5_ib_dev_ops\00", align 1
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3714, i32 35 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3878, i32 3 }
@___asan_gen_.389 = private unnamed_addr constant [16 x i8] c"mlx5_attr_group\00", align 1
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2511, i32 37 }
@___asan_gen_.392 = private unnamed_addr constant [22 x i8] c"mlx5_class_attributes\00", align 1
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2502, i32 26 }
@___asan_gen_.395 = private unnamed_addr constant [16 x i8] c"dev_attr_hw_rev\00", align 1
@___asan_gen_.398 = private unnamed_addr constant [18 x i8] c"dev_attr_hca_type\00", align 1
@___asan_gen_.401 = private unnamed_addr constant [18 x i8] c"dev_attr_board_id\00", align 1
@___asan_gen_.404 = private unnamed_addr constant [18 x i8] c"dev_attr_fw_pages\00", align 1
@___asan_gen_.407 = private unnamed_addr constant [19 x i8] c"dev_attr_reg_pages\00", align 1
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2489, i32 8 }
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2487, i32 25 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2479, i32 8 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2477, i32 25 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2500, i32 8 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2497, i32 25 }
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2459, i32 8 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2457, i32 25 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2469, i32 8 }
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.441, i32 230, i32 6 }
@___asan_gen_.441 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.441, i32 214, i32 2 }
@___asan_gen_.444 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.444, i32 174, i32 2 }
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2989, i32 40 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1528, i32 3 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 595, i32 3 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1918, i32 2 }
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1946, i32 2 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1629, i32 2 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1651, i32 3 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1663, i32 4 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 1587, i32 2 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2177, i32 3 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2202, i32 4 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2212, i32 4 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2223, i32 4 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2231, i32 2 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2236, i32 3 }
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2087, i32 10 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2089, i32 10 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2091, i32 10 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2410, i32 3 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2416, i32 3 }
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2432, i32 3 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3708, i32 2 }
@___asan_gen_.593 = private unnamed_addr constant [20 x i8] c"mlx5_ib_flow_action\00", align 1
@___asan_gen_.596 = private unnamed_addr constant [22 x i8] c"mlx5_ib_query_context\00", align 1
@___asan_gen_.599 = private unnamed_addr constant [34 x i8] c"mlx5_ib_object_MLX5_IB_OBJECT_VAR\00", align 1
@___asan_gen_.602 = private unnamed_addr constant [34 x i8] c"mlx5_ib_object_MLX5_IB_OBJECT_UAR\00", align 1
@___asan_gen_.605 = private unnamed_addr constant [13 x i8] c"mlx5_ib_defs\00", align 1
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3624, i32 37 }
@___asan_gen_.608 = private unnamed_addr constant [46 x i8] c"_object_methods_UVERBS_OBJECT_FLOW_ACTION3612\00", align 1
@___asan_gen_.611 = private unnamed_addr constant [52 x i8] c"mlx5_ib_method_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE\00", align 1
@___asan_gen_.614 = private unnamed_addr constant [51 x i8] c"_method_attrs_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE\00", align 1
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3607, i32 1 }
@___asan_gen_.617 = private unnamed_addr constant [17 x i8] c".compoundliteral\00", align 1
@___asan_gen_.618 = private unnamed_addr constant [41 x i8] c"_object_methods_UVERBS_OBJECT_DEVICE3622\00", align 1
@___asan_gen_.621 = private unnamed_addr constant [43 x i8] c"mlx5_ib_method_UVERBS_METHOD_QUERY_CONTEXT\00", align 1
@___asan_gen_.624 = private unnamed_addr constant [42 x i8] c"_method_attrs_UVERBS_METHOD_QUERY_CONTEXT\00", align 1
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3614, i32 1 }
@___asan_gen_.627 = private unnamed_addr constant [21 x i8] c".compoundliteral.107\00", align 1
@___asan_gen_.628 = private unnamed_addr constant [21 x i8] c".compoundliteral.108\00", align 1
@___asan_gen_.629 = private unnamed_addr constant [39 x i8] c"_object_methods_MLX5_IB_OBJECT_VAR3475\00", align 1
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3472, i32 1 }
@___asan_gen_.632 = private unnamed_addr constant [44 x i8] c"mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_ALLOC\00", align 1
@___asan_gen_.635 = private unnamed_addr constant [46 x i8] c"mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_DESTROY\00", align 1
@___asan_gen_.638 = private unnamed_addr constant [43 x i8] c"_method_attrs_MLX5_IB_METHOD_VAR_OBJ_ALLOC\00", align 1
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3449, i32 1 }
@___asan_gen_.641 = private unnamed_addr constant [21 x i8] c".compoundliteral.109\00", align 1
@___asan_gen_.642 = private unnamed_addr constant [21 x i8] c".compoundliteral.110\00", align 1
@___asan_gen_.643 = private unnamed_addr constant [21 x i8] c".compoundliteral.111\00", align 1
@___asan_gen_.644 = private unnamed_addr constant [21 x i8] c".compoundliteral.112\00", align 1
@___asan_gen_.645 = private unnamed_addr constant [45 x i8] c"_method_attrs_MLX5_IB_METHOD_VAR_OBJ_DESTROY\00", align 1
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3465, i32 1 }
@___asan_gen_.648 = private unnamed_addr constant [21 x i8] c".compoundliteral.113\00", align 1
@___asan_gen_.649 = private unnamed_addr constant [21 x i8] c".compoundliteral.114\00", align 1
@___asan_gen_.650 = private unnamed_addr constant [39 x i8] c"_object_methods_MLX5_IB_OBJECT_UAR3605\00", align 1
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3602, i32 1 }
@___asan_gen_.653 = private unnamed_addr constant [44 x i8] c"mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_ALLOC\00", align 1
@___asan_gen_.656 = private unnamed_addr constant [46 x i8] c"mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_DESTROY\00", align 1
@___asan_gen_.659 = private unnamed_addr constant [43 x i8] c"_method_attrs_MLX5_IB_METHOD_UAR_OBJ_ALLOC\00", align 1
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3576, i32 1 }
@___asan_gen_.662 = private unnamed_addr constant [21 x i8] c".compoundliteral.115\00", align 1
@___asan_gen_.663 = private unnamed_addr constant [21 x i8] c".compoundliteral.116\00", align 1
@___asan_gen_.664 = private unnamed_addr constant [21 x i8] c".compoundliteral.117\00", align 1
@___asan_gen_.665 = private unnamed_addr constant [21 x i8] c".compoundliteral.118\00", align 1
@___asan_gen_.666 = private unnamed_addr constant [21 x i8] c".compoundliteral.119\00", align 1
@___asan_gen_.667 = private unnamed_addr constant [45 x i8] c"_method_attrs_MLX5_IB_METHOD_UAR_OBJ_DESTROY\00", align 1
@___asan_gen_.669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3595, i32 1 }
@___asan_gen_.670 = private unnamed_addr constant [21 x i8] c".compoundliteral.120\00", align 1
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3829, i32 2 }
@___asan_gen_.677 = private unnamed_addr constant [25 x i8] c"mlx5_ib_dev_port_rep_ops\00", align 1
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3903, i32 35 }
@___asan_gen_.680 = private unnamed_addr constant [28 x i8] c"mlx5_ib_dev_common_roce_ops\00", align 1
@___asan_gen_.682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3915, i32 35 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2864, i32 3 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.699, i32 3688, i32 2 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.699, i32 3936, i32 2 }
@___asan_gen_.699 = private unnamed_addr constant [27 x i8] c"../include/rdma/ib_verbs.h\00", align 1
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.699, i32 3498, i32 2 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2729, i32 2 }
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4039, i32 3 }
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4027, i32 10 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4029, i32 10 }
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4076, i32 3 }
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4083, i32 3 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4097, i32 3 }
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4107, i32 3 }
@___asan_gen_.736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4117, i32 3 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4125, i32 3 }
@___asan_gen_.745 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4136, i32 3 }
@___asan_gen_.748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.753, i32 33, i32 31 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.753, i32 34, i32 28 }
@___asan_gen_.753 = private unnamed_addr constant [29 x i8] c"../include/linux/semaphore.h\00", align 1
@___asan_gen_.754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.753, i32 35, i32 39 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4516, i32 10 }
@___asan_gen_.758 = private unnamed_addr constant [15 x i8] c"mlx5r_id_table\00", align 1
@___asan_gen_.760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4500, i32 41 }
@___asan_gen_.761 = private unnamed_addr constant [11 x i8] c"pf_profile\00", align 1
@___asan_gen_.763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4264, i32 37 }
@___asan_gen_.764 = private unnamed_addr constant [21 x i8] c"mlx5_ib_dev_port_ops\00", align 1
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3892, i32 35 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4170, i32 2 }
@___asan_gen_.773 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4174, i32 2 }
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4181, i32 28 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4184, i32 26 }
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4186, i32 26 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4188, i32 22 }
@___asan_gen_.791 = private unnamed_addr constant [24 x i8] c"fops_delay_drop_timeout\00", align 1
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3132, i32 37 }
@___asan_gen_.794 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 2602, i32 3 }
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3107, i32 37 }
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 3124, i32 3 }
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4509, i32 10 }
@___asan_gen_.815 = private unnamed_addr constant [18 x i8] c"mlx5r_mp_id_table\00", align 1
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4495, i32 41 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4420, i32 3 }
@___asan_gen_.824 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.825 = private constant [37 x i8] c"../drivers/infiniband/hw/mlx5/main.c\00", align 1
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 4530, i32 21 }
@___asan_gen_.827 = private unnamed_addr constant [22 x i8] c"switch.table.uar_mmap\00", align 1
@llvm.compiler.used = appending global [253 x ptr] [ptr @__UNIQUE_ID_author558, ptr @__UNIQUE_ID_description559, ptr @__UNIQUE_ID_file560, ptr @__UNIQUE_ID_license561, ptr @__exitcall_mlx5_ib_cleanup, ptr @__initcall__kmod_mlx5_ib__604_4568_mlx5_ib_init6, ptr @allocate_uars._entry, ptr @allocate_uars._entry_ptr, ptr @delay_drop_handler._entry, ptr @delay_drop_handler._entry_ptr, ptr @mlx5_get_gid_table_len._entry, ptr @mlx5_get_gid_table_len._entry_ptr, ptr @mlx5_ib_bind_slave_port._entry, ptr @mlx5_ib_bind_slave_port._entry_ptr, ptr @mlx5_ib_cleanup, ptr @mlx5_ib_handle_event._entry, ptr @mlx5_ib_handle_event._entry_ptr, ptr @mlx5_ib_mcg_attach._entry, ptr @mlx5_ib_mcg_attach._entry_ptr, ptr @mlx5_ib_mcg_detach._entry, ptr @mlx5_ib_mcg_detach._entry_ptr, ptr @mlx5_ib_stage_post_ib_reg_umr_init._entry, ptr @mlx5_ib_stage_post_ib_reg_umr_init._entry_ptr, ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry, ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry_ptr, ptr @mlx5_ib_unbind_slave_port._entry, ptr @mlx5_ib_unbind_slave_port._entry_ptr, ptr @mlx5_mtu_to_ib_mtu._entry, ptr @mlx5_mtu_to_ib_mtu._entry_ptr, ptr @set_has_smi_cap._entry, ptr @set_has_smi_cap._entry_ptr, ptr @set_port_caps_atomic._entry, ptr @set_port_caps_atomic._entry_ptr, ptr @set_roce_addr._entry, ptr @set_roce_addr._entry_ptr, ptr @uar_mmap._entry, ptr @uar_mmap._entry.80, ptr @uar_mmap._entry.83, ptr @uar_mmap._entry.86, ptr @uar_mmap._entry.90, ptr @uar_mmap._entry_ptr, ptr @uar_mmap._entry_ptr.82, ptr @uar_mmap._entry_ptr.85, ptr @uar_mmap._entry_ptr.88, ptr @uar_mmap._entry_ptr.92, ptr @mlx5_ib_multiport_mutex, ptr @raw_eth_profile, ptr @mlx5r_driver, ptr @mlx5r_mp_driver, ptr @mlx5_ib_event_wq, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @mlx5_ib_stage_init_init.__key, ptr @.str.14, ptr @mlx5_ib_stage_init_init.__key.15, ptr @.str.16, ptr @mlx5_ib_stage_init_init.__key.17, ptr @.str.18, ptr @mlx5_ib_stage_init_init.__key.19, ptr @.str.20, ptr @mlx5_ib_stage_init_init.__key.21, ptr @.str.22, ptr @mlx5_ib_unaffiliated_port_list, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @mlx5_ib_dev_list, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @mlx5_ib_event_slave_port.__key, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @init_completion.__key, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @xa_init_flags.__key, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @mlx5_ib_dev_ipoib_enhanced_ops, ptr @mlx5_ib_dev_sriov_ops, ptr @mlx5_ib_dev_mw_ops, ptr @mlx5_ib_dev_xrc_ops, ptr @mlx5_ib_dev_ops, ptr @mlx5_ib_stage_caps_init.__key, ptr @.str.46, ptr @mlx5_attr_group, ptr @mlx5_class_attributes, ptr @dev_attr_hw_rev, ptr @dev_attr_hca_type, ptr @dev_attr_board_id, ptr @dev_attr_fw_pages, ptr @dev_attr_reg_pages, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @mlx5_ib_alloc_ucontext.__key, ptr @.str.64, ptr @mlx5_ib_alloc_ucontext.__key.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.81, ptr @.str.84, ptr @.str.87, ptr @.str.89, ptr @.str.91, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @mlx5_ib_flow_action, ptr @mlx5_ib_query_context, ptr @mlx5_ib_object_MLX5_IB_OBJECT_VAR, ptr @mlx5_ib_object_MLX5_IB_OBJECT_UAR, ptr @mlx5_ib_defs, ptr @_object_methods_UVERBS_OBJECT_FLOW_ACTION3612, ptr @mlx5_ib_method_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE, ptr @_method_attrs_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE, ptr @.compoundliteral, ptr @_object_methods_UVERBS_OBJECT_DEVICE3622, ptr @mlx5_ib_method_UVERBS_METHOD_QUERY_CONTEXT, ptr @_method_attrs_UVERBS_METHOD_QUERY_CONTEXT, ptr @.compoundliteral.107, ptr @.compoundliteral.108, ptr @_object_methods_MLX5_IB_OBJECT_VAR3475, ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_ALLOC, ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_DESTROY, ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_ALLOC, ptr @.compoundliteral.109, ptr @.compoundliteral.110, ptr @.compoundliteral.111, ptr @.compoundliteral.112, ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_DESTROY, ptr @.compoundliteral.113, ptr @.compoundliteral.114, ptr @_object_methods_MLX5_IB_OBJECT_UAR3605, ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_ALLOC, ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_DESTROY, ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_ALLOC, ptr @.compoundliteral.115, ptr @.compoundliteral.116, ptr @.compoundliteral.117, ptr @.compoundliteral.118, ptr @.compoundliteral.119, ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_DESTROY, ptr @.compoundliteral.120, ptr @mlx5_ib_init_var_table.__key, ptr @.str.121, ptr @mlx5_ib_dev_port_rep_ops, ptr @mlx5_ib_dev_common_roce_ops, ptr @mlx5_ib_dev_res_init.__key, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @mlx5_ib_event.__key, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @sema_init.__key, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @mlx5r_id_table, ptr @pf_profile, ptr @mlx5_ib_dev_port_ops, ptr @mlx5_ib_stage_delay_drop_init.__key, ptr @.str.142, ptr @mlx5_ib_stage_delay_drop_init.__key.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @fops_delay_drop_timeout, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @mlx5r_mp_id_table, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @switch.table.uar_mmap], section "llvm.metadata"
@0 = internal global [227 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_multiport_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @raw_eth_profile to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5r_driver to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5r_mp_driver to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_event_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_get_gid_table_len._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_mtu_to_ib_mtu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_init_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_init_init.__key.15 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_init_init.__key.17 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_init_init.__key.19 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_init_init.__key.21 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_unaffiliated_port_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_bind_slave_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_event_slave_port.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_handle_event._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_unbind_slave_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_has_smi_cap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xa_init_flags.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_ipoib_enhanced_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_sriov_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_mw_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_xrc_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_caps_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_attr_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_class_attributes to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_hw_rev to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_hca_type to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_board_id to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_fw_pages to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_reg_pages to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_port_caps_atomic._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_roce_addr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_alloc_ucontext.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_alloc_ucontext.__key.65 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 132, i32 192, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @allocate_uars._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uar_mmap._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uar_mmap._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uar_mmap._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uar_mmap._entry.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @uar_mmap._entry.90 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_mcg_attach._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_mcg_detach._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_flow_action to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_query_context to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_object_MLX5_IB_OBJECT_VAR to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_object_MLX5_IB_OBJECT_UAR to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_defs to i32), i32 132, i32 192, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_object_methods_UVERBS_OBJECT_FLOW_ACTION3612 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_method_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_method_attrs_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_object_methods_UVERBS_OBJECT_DEVICE3622 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_method_UVERBS_METHOD_QUERY_CONTEXT to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_method_attrs_UVERBS_METHOD_QUERY_CONTEXT to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.107 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.108 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_object_methods_MLX5_IB_OBJECT_VAR3475 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_ALLOC to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_DESTROY to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_ALLOC to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.109 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.110 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.111 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.112 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_DESTROY to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.113 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.114 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_object_methods_MLX5_IB_OBJECT_UAR3605 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_ALLOC to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_DESTROY to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_ALLOC to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.115 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.116 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.117 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.118 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.119 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_DESTROY to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.compoundliteral.120 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_init_var_table.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_port_rep_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_common_roce_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_res_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_event.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_post_ib_reg_umr_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sema_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5r_id_table to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pf_profile to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_dev_port_ops to i32), i32 524, i32 672, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_delay_drop_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5_ib_stage_delay_drop_init.__key.143 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fops_delay_drop_timeout to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @delay_drop_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mlx5r_mp_id_table to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.uar_mmap to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 ptrtoint (ptr @___asan_gen_.825 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_ib_get_ibdev_from_mpi(ptr nocapture noundef readonly %mpi) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @mlx5_ib_multiport_mutex, i32 noundef 0) #16
  %ibdev = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 1
  %0 = ptrtoint ptr %ibdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ibdev, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @mlx5_ib_multiport_mutex) #16
  ret ptr %1
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mlx5_ib_get_native_port_mdev(ptr nocapture noundef readonly %ibdev, i32 noundef %ib_port_num, ptr noundef writeonly %native_port_num) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev.i, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i, align 8
  %add.ptr.i = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i, align 4
  %6 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %6)
  %switch.selectcmp.i.i = icmp eq i32 %6, 256
  %add.ptr.i.i = getelementptr i32, ptr %3, i32 48
  %7 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i.i, align 4
  %9 = and i32 %8, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %10 = icmp ne i32 %9, 0
  %or.cond = select i1 %10, i1 %switch.selectcmp.i.i, i1 false
  %tobool7.not = icmp eq ptr %native_port_num, null
  br i1 %or.cond, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  br i1 %tobool7.not, label %if.then.if.end_crit_edge, label %if.then4

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %native_port_num to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %ib_port_num, ptr %native_port_num, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then.if.end_crit_edge
  %12 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mdev.i, align 8
  br label %cleanup

if.end6:                                          ; preds = %entry
  br i1 %tobool7.not, label %if.end6.if.end9_crit_edge, label %if.then8

if.end6.if.end9_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %native_port_num to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %native_port_num, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end6.if.end9_crit_edge
  %port10 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %15 = ptrtoint ptr %port10 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %port10, align 8
  %sub = add i32 %ib_port_num, -1
  %mpi_lock = getelementptr %struct.mlx5_ib_port, ptr %16, i32 %sub, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock) #16
  %17 = ptrtoint ptr %port10 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %port10, align 8
  %mp14 = getelementptr %struct.mlx5_ib_port, ptr %18, i32 %sub, i32 1
  %19 = ptrtoint ptr %mp14 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mp14, align 4
  %tobool16.not = icmp eq ptr %20, null
  br i1 %tobool16.not, label %if.end9.if.end23_crit_edge, label %land.lhs.true

if.end9.if.end23_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

land.lhs.true:                                    ; preds = %if.end9
  %unaffiliate = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %20, i32 0, i32 8
  %21 = ptrtoint ptr %unaffiliate to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %unaffiliate, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool17.not = icmp eq i8 %22, 0
  br i1 %tobool17.not, label %if.then18, label %land.lhs.true.if.end23_crit_edge

land.lhs.true.if.end23_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

if.then18:                                        ; preds = %land.lhs.true
  %mdev19 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %20, i32 0, i32 2
  %23 = ptrtoint ptr %mdev19 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mdev19, align 4
  %is_master = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %20, i32 0, i32 7
  %25 = ptrtoint ptr %is_master to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %is_master, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool20.not = icmp eq i8 %26, 0
  br i1 %tobool20.not, label %if.then21, label %if.then18.if.end23_crit_edge

if.then18.if.end23_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

if.then21:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  %mdev_refcnt = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %20, i32 0, i32 6
  %27 = ptrtoint ptr %mdev_refcnt to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %mdev_refcnt, align 8
  %inc = add i32 %28, 1
  store i32 %inc, ptr %mdev_refcnt, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.then18.if.end23_crit_edge, %land.lhs.true.if.end23_crit_edge, %if.end9.if.end23_crit_edge
  %mdev.0 = phi ptr [ null, %land.lhs.true.if.end23_crit_edge ], [ %24, %if.then18.if.end23_crit_edge ], [ %24, %if.then21 ], [ null, %if.end9.if.end23_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end
  %retval.0 = phi ptr [ %13, %if.end ], [ %mdev.0, %if.end23 ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mlx5_ib_port_link_layer(ptr nocapture noundef readonly %device, i32 noundef %port_num) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr, align 4
  %shr = lshr i32 %5, 8
  %and = and i32 %shr, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and)
  %switch.selectcmp.i = icmp eq i32 %and, 1
  %switch.select.i = select i1 %switch.selectcmp.i, i32 2, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %switch.selectcmp2.i = icmp eq i32 %and, 0
  %switch.select3.i = select i1 %switch.selectcmp2.i, i32 1, i32 %switch.select.i
  ret i32 %switch.select3.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_ib_put_native_port_mdev(ptr nocapture noundef readonly %ibdev, i32 noundef %port_num) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev.i, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i, align 8
  %add.ptr.i = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i, align 4
  %6 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %6)
  %switch.selectcmp.i.i = icmp eq i32 %6, 256
  %add.ptr.i.i = getelementptr i32, ptr %3, i32 48
  %7 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i.i, align 4
  %9 = and i32 %8, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %10 = icmp ne i32 %9, 0
  %or.cond = select i1 %10, i1 %switch.selectcmp.i.i, i1 false
  br i1 %or.cond, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %port2 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %11 = ptrtoint ptr %port2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %port2, align 8
  %sub = add i32 %port_num, -1
  %mpi_lock = getelementptr %struct.mlx5_ib_port, ptr %12, i32 %sub, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock) #16
  %13 = ptrtoint ptr %port2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %port2, align 8
  %mp6 = getelementptr %struct.mlx5_ib_port, ptr %14, i32 %sub, i32 1
  %15 = ptrtoint ptr %mp6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mp6, align 4
  %is_master = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 7
  %17 = ptrtoint ptr %is_master to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %is_master, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool8.not = icmp eq i8 %18, 0
  br i1 %tobool8.not, label %if.end10, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end10:                                         ; preds = %if.end
  %mdev_refcnt = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 6
  %19 = ptrtoint ptr %mdev_refcnt to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %mdev_refcnt, align 8
  %dec = add i32 %20, -1
  store i32 %dec, ptr %mdev_refcnt, align 8
  %unaffiliate = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 8
  %21 = ptrtoint ptr %unaffiliate to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %unaffiliate, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool11.not = icmp eq i8 %22, 0
  br i1 %tobool11.not, label %if.end10.out_crit_edge, label %if.then12

if.end10.out_crit_edge:                           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  %unref_comp = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 4
  tail call void @complete(ptr noundef %unref_comp) #16
  br label %out

out:                                              ; preds = %if.then12, %if.end10.out_crit_edge, %if.end.out_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @mlx5_get_roce_udp_sport_min(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %attr) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %gid_type = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 3
  %0 = ptrtoint ptr %gid_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %gid_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp.not = icmp eq i32 %1, 2
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %arrayidx = getelementptr %struct.mlx5_core_dev, ptr %3, i32 0, i32 8, i32 0, i32 4
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 8
  %add.ptr = getelementptr i32, ptr %5, i32 6
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr, align 4
  %conv = trunc i32 %7 to i16
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i16 [ %conv, %if.end ], [ 0, %entry.return_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_ib_query_port(ptr noundef %ibdev, i32 noundef %port, ptr noundef %props) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i, align 4
  %6 = and i32 %5, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %7 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %7)
  %switch.selectcmp.i.i.i = icmp eq i32 %7, 256
  %..i = select i1 %switch.selectcmp.i.i.i, i32 2, i32 1
  %retval.0.i = select i1 %.not.i, i32 0, i32 %..i
  %8 = zext i32 %retval.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values)
  switch i32 %retval.0.i, label %entry.if.end16_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
  ]

entry.if.end16_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call i32 @mlx5_query_mad_ifc_port(ptr noundef %ibdev, i32 noundef %port, ptr noundef %props) #16
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call fastcc i32 @mlx5_query_hca_port(ptr noundef %ibdev, i32 noundef %port, ptr noundef %props)
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call5 = tail call fastcc i32 @mlx5_query_port_roce(ptr noundef %ibdev, i32 noundef %port, ptr noundef %props)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb2, %sw.bb
  %ret.0 = phi i32 [ %call5, %sw.bb4 ], [ %call3, %sw.bb2 ], [ %call1, %sw.bb ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool.not = icmp ne i32 %ret.0, 0
  %tobool6.not = icmp eq ptr %props, null
  %or.cond = or i1 %tobool6.not, %tobool.not
  br i1 %or.cond, label %sw.epilog.if.end16_crit_edge, label %if.then

sw.epilog.if.end16_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.then:                                          ; preds = %sw.epilog
  %9 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i34 = getelementptr inbounds %struct.mlx5_core_dev, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %caps.i.i34 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %caps.i.i34, align 8
  %add.ptr.i.i35 = getelementptr i32, ptr %12, i32 13
  %13 = ptrtoint ptr %add.ptr.i.i35 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %add.ptr.i.i35, align 4
  %15 = and i32 %14, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %15)
  %switch.selectcmp.i.i.i36 = icmp eq i32 %15, 256
  %add.ptr.i.i.i = getelementptr i32, ptr %12, i32 48
  %16 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %add.ptr.i.i.i, align 4
  %18 = and i32 %17, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %19 = icmp ne i32 %18, 0
  %or.cond.i = select i1 %19, i1 %switch.selectcmp.i.i.i36, i1 false
  br i1 %or.cond.i, label %if.end6.i, label %if.then.mlx5_ib_get_native_port_mdev.exit_crit_edge

if.then.mlx5_ib_get_native_port_mdev.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_get_native_port_mdev.exit

if.end6.i:                                        ; preds = %if.then
  %port10.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %20 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %port10.i, align 8
  %sub.i = add i32 %port, -1
  %mpi_lock.i = getelementptr %struct.mlx5_ib_port, ptr %21, i32 %sub.i, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i) #16
  %22 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %port10.i, align 8
  %mp14.i = getelementptr %struct.mlx5_ib_port, ptr %23, i32 %sub.i, i32 1
  %24 = ptrtoint ptr %mp14.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mp14.i, align 4
  %tobool16.not.i = icmp eq ptr %25, null
  br i1 %tobool16.not.i, label %if.end6.i.if.end23.i_crit_edge, label %land.lhs.true.i

if.end6.i.if.end23.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

land.lhs.true.i:                                  ; preds = %if.end6.i
  %unaffiliate.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %25, i32 0, i32 8
  %26 = ptrtoint ptr %unaffiliate.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %unaffiliate.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool17.not.i = icmp eq i8 %27, 0
  br i1 %tobool17.not.i, label %if.then18.i, label %land.lhs.true.i.if.end23.i_crit_edge

land.lhs.true.i.if.end23.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then18.i:                                      ; preds = %land.lhs.true.i
  %mdev19.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %25, i32 0, i32 2
  %28 = ptrtoint ptr %mdev19.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mdev19.i, align 4
  %is_master.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %25, i32 0, i32 7
  %30 = ptrtoint ptr %is_master.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %is_master.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool20.not.i = icmp eq i8 %31, 0
  br i1 %tobool20.not.i, label %if.then21.i, label %if.then18.i.if.end23.i_crit_edge

if.then18.i.if.end23.i_crit_edge:                 ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then21.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  %mdev_refcnt.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %25, i32 0, i32 6
  %32 = ptrtoint ptr %mdev_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %mdev_refcnt.i, align 8
  %inc.i = add i32 %33, 1
  store i32 %inc.i, ptr %mdev_refcnt.i, align 8
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then21.i, %if.then18.i.if.end23.i_crit_edge, %land.lhs.true.i.if.end23.i_crit_edge, %if.end6.i.if.end23.i_crit_edge
  %mdev.0.i = phi ptr [ null, %land.lhs.true.i.if.end23.i_crit_edge ], [ %29, %if.then18.i.if.end23.i_crit_edge ], [ %29, %if.then21.i ], [ null, %if.end6.i.if.end23.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i) #16
  br label %mlx5_ib_get_native_port_mdev.exit

mlx5_ib_get_native_port_mdev.exit:                ; preds = %if.end23.i, %if.then.mlx5_ib_get_native_port_mdev.exit_crit_edge
  %retval.0.i37 = phi ptr [ %mdev.0.i, %if.end23.i ], [ %10, %if.then.mlx5_ib_get_native_port_mdev.exit_crit_edge ]
  %tobool9.not = icmp eq ptr %retval.0.i37, null
  br i1 %tobool9.not, label %if.end.thread, label %if.then14

if.end.thread:                                    ; preds = %mlx5_ib_get_native_port_mdev.exit
  call void @__sanitizer_cov_trace_pc() #18
  %34 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mdev.i.i, align 8
  %call1256 = tail call i32 @mlx5_core_reserved_gids_count(ptr noundef %35) #16
  br label %if.end15

if.then14:                                        ; preds = %mlx5_ib_get_native_port_mdev.exit
  %call12 = tail call i32 @mlx5_core_reserved_gids_count(ptr noundef nonnull %retval.0.i37) #16
  %36 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i39 = getelementptr inbounds %struct.mlx5_core_dev, ptr %37, i32 0, i32 8
  %38 = ptrtoint ptr %caps.i.i39 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %caps.i.i39, align 8
  %add.ptr.i.i40 = getelementptr i32, ptr %39, i32 13
  %40 = ptrtoint ptr %add.ptr.i.i40 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %add.ptr.i.i40, align 4
  %42 = and i32 %41, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %42)
  %switch.selectcmp.i.i.i41 = icmp eq i32 %42, 256
  %add.ptr.i.i.i42 = getelementptr i32, ptr %39, i32 48
  %43 = ptrtoint ptr %add.ptr.i.i.i42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %add.ptr.i.i.i42, align 4
  %45 = and i32 %44, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %46 = icmp ne i32 %45, 0
  %or.cond.i43 = select i1 %46, i1 %switch.selectcmp.i.i.i41, i1 false
  br i1 %or.cond.i43, label %if.end.i, label %if.then14.if.end15_crit_edge

if.then14.if.end15_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end.i:                                         ; preds = %if.then14
  %port2.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %47 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %port2.i, align 8
  %sub.i44 = add i32 %port, -1
  %mpi_lock.i45 = getelementptr %struct.mlx5_ib_port, ptr %48, i32 %sub.i44, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i45) #16
  %49 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %port2.i, align 8
  %mp6.i = getelementptr %struct.mlx5_ib_port, ptr %50, i32 %sub.i44, i32 1
  %51 = ptrtoint ptr %mp6.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %mp6.i, align 4
  %is_master.i46 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %52, i32 0, i32 7
  %53 = ptrtoint ptr %is_master.i46 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %is_master.i46, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool8.not.i = icmp eq i8 %54, 0
  br i1 %tobool8.not.i, label %if.end10.i, label %if.end.i.out.i_crit_edge

if.end.i.out.i_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.end10.i:                                       ; preds = %if.end.i
  %mdev_refcnt.i47 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %52, i32 0, i32 6
  %55 = ptrtoint ptr %mdev_refcnt.i47 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %mdev_refcnt.i47, align 8
  %dec.i = add i32 %56, -1
  store i32 %dec.i, ptr %mdev_refcnt.i47, align 8
  %unaffiliate.i48 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %52, i32 0, i32 8
  %57 = ptrtoint ptr %unaffiliate.i48 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %unaffiliate.i48, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool11.not.i = icmp eq i8 %58, 0
  br i1 %tobool11.not.i, label %if.end10.i.out.i_crit_edge, label %if.then12.i

if.end10.i.out.i_crit_edge:                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %unref_comp.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %52, i32 0, i32 4
  tail call void @complete(ptr noundef %unref_comp.i) #16
  br label %out.i

out.i:                                            ; preds = %if.then12.i, %if.end10.i.out.i_crit_edge, %if.end.i.out.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i45) #16
  br label %if.end15

if.end15:                                         ; preds = %out.i, %if.then14.if.end15_crit_edge, %if.end.thread
  %call1257 = phi i32 [ %call1256, %if.end.thread ], [ %call12, %if.then14.if.end15_crit_edge ], [ %call12, %out.i ]
  %gid_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 5
  %59 = ptrtoint ptr %gid_tbl_len to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %gid_tbl_len, align 8
  %sub = sub i32 %60, %call1257
  store i32 %sub, ptr %gid_tbl_len, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %sw.epilog.if.end16_crit_edge, %entry.if.end16_crit_edge
  %ret.053 = phi i32 [ 0, %if.end15 ], [ %ret.0, %sw.epilog.if.end16_crit_edge ], [ -22, %entry.if.end16_crit_edge ]
  ret i32 %ret.053
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_port(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx5_query_hca_port(ptr noundef %ibdev, i32 noundef %port, ptr noundef %props) unnamed_addr #0 align 64 {
entry:
  %max_mtu = alloca i16, align 2
  %oper_mtu = alloca i16, align 2
  %ib_link_width_oper = alloca i16, align 2
  %vl_hw_cap = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %max_mtu) #16
  %2 = ptrtoint ptr %max_mtu to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %max_mtu, align 2, !annotation !403
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %oper_mtu) #16
  %3 = ptrtoint ptr %oper_mtu to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %oper_mtu, align 2, !annotation !403
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ib_link_width_oper) #16
  %4 = ptrtoint ptr %ib_link_width_oper to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %ib_link_width_oper, align 2, !annotation !403
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %vl_hw_cap) #16
  %5 = ptrtoint ptr %vl_hw_cap to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 -1, ptr %vl_hw_cap, align 1, !annotation !403
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %6 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 80) #19
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end:                                           ; preds = %entry
  %conv = trunc i32 %port to i8
  %call3 = tail call i32 @mlx5_query_hca_vport_context(ptr noundef %1, i8 noundef zeroext 0, i8 noundef zeroext %conv, i16 noundef zeroext 0, ptr noundef nonnull %call7.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end6:                                          ; preds = %if.end
  %lid = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 15
  %7 = ptrtoint ptr %lid to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %lid, align 4
  %conv7 = zext i16 %8 to i32
  %lid8 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 13
  %9 = ptrtoint ptr %lid8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %conv7, ptr %lid8, align 8
  %lmc = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 17
  %10 = ptrtoint ptr %lmc to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %lmc, align 1
  %lmc9 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 14
  %12 = ptrtoint ptr %lmc9 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %lmc9, align 4
  %sm_lid = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 19
  %13 = ptrtoint ptr %sm_lid to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %sm_lid, align 2
  %conv10 = zext i16 %14 to i32
  %sm_lid11 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 12
  %15 = ptrtoint ptr %sm_lid11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv10, ptr %sm_lid11, align 4
  %sm_sl = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 20
  %16 = ptrtoint ptr %sm_sl to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %sm_sl, align 4
  %sm_sl12 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 16
  %18 = ptrtoint ptr %sm_sl12 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %sm_sl12, align 2
  %vport_state = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 6
  %19 = ptrtoint ptr %vport_state to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vport_state, align 8
  %state = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 1
  %21 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %state, align 8
  %port_physical_state = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 7
  %22 = ptrtoint ptr %port_physical_state to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %port_physical_state, align 4
  %phys_state = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 21
  %24 = ptrtoint ptr %phys_state to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %phys_state, align 4
  %cap_mask1 = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 11
  %25 = ptrtoint ptr %cap_mask1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cap_mask1, align 8
  %port_cap_flags = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 7
  %27 = ptrtoint ptr %port_cap_flags to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %port_cap_flags, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %28 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %29, i32 11
  %30 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr, align 4
  %conv13 = trunc i32 %31 to i16
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %conv13)
  %cmp.i = icmp ugt i16 %conv13, 4
  br i1 %cmp.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.2) #20
  br label %mlx5_get_gid_table_len.exit

if.end.i:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i = and i32 %31, 65535
  %mul.i = shl nuw nsw i32 8, %conv.i
  br label %mlx5_get_gid_table_len.exit

mlx5_get_gid_table_len.exit:                      ; preds = %if.end.i, %do.end.i
  %retval.0.i = phi i32 [ 0, %do.end.i ], [ %mul.i, %if.end.i ]
  %gid_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 5
  %32 = ptrtoint ptr %gid_tbl_len to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %retval.0.i, ptr %gid_tbl_len, align 8
  %33 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %caps, align 8
  %add.ptr20 = getelementptr i32, ptr %34, i32 14
  %35 = ptrtoint ptr %add.ptr20 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %add.ptr20, align 4
  %shr21 = lshr i32 %36, 24
  %and22 = and i32 %shr21, 31
  %shl = shl nuw i32 1, %and22
  %max_msg_sz = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 8
  %37 = ptrtoint ptr %max_msg_sz to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %shl, ptr %max_msg_sz, align 4
  %38 = load ptr, ptr %caps, align 8
  %add.ptr28 = getelementptr i32, ptr %38, i32 12
  %39 = ptrtoint ptr %add.ptr28 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %add.ptr28, align 4
  %and30 = and i32 %40, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and30)
  %cmp.i109 = icmp ugt i32 %and30, 5
  %shl.i = shl i32 128, %and30
  %conv.i110 = trunc i32 %shl.i to i16
  %retval.0.i111 = select i1 %cmp.i109, i16 0, i16 %conv.i110
  %pkey_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 11
  %41 = ptrtoint ptr %pkey_tbl_len to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %retval.0.i111, ptr %pkey_tbl_len, align 8
  %pkey_violation_counter = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 22
  %42 = ptrtoint ptr %pkey_violation_counter to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %pkey_violation_counter, align 8
  %conv32 = zext i16 %43 to i32
  %bad_pkey_cntr = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 9
  %44 = ptrtoint ptr %bad_pkey_cntr to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %conv32, ptr %bad_pkey_cntr, align 8
  %qkey_violation_counter = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 21
  %45 = ptrtoint ptr %qkey_violation_counter to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %qkey_violation_counter, align 2
  %conv33 = zext i16 %46 to i32
  %qkey_viol_cntr = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 10
  %47 = ptrtoint ptr %qkey_viol_cntr to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %conv33, ptr %qkey_viol_cntr, align 4
  %subnet_timeout = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 18
  %48 = ptrtoint ptr %subnet_timeout to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %subnet_timeout, align 8
  %subnet_timeout34 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 17
  %50 = ptrtoint ptr %subnet_timeout34 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %subnet_timeout34, align 1
  %init_type_reply = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 16
  %51 = ptrtoint ptr %init_type_reply to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %init_type_reply, align 2
  %init_type_reply35 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 18
  %53 = ptrtoint ptr %init_type_reply35 to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %52, ptr %init_type_reply35, align 8
  %54 = ptrtoint ptr %port_cap_flags to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %port_cap_flags, align 8
  %and37 = and i32 %55, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37)
  %tobool38.not = icmp eq i32 %and37, 0
  br i1 %tobool38.not, label %mlx5_get_gid_table_len.exit.if.end40_crit_edge, label %if.then39

mlx5_get_gid_table_len.exit.if.end40_crit_edge:   ; preds = %mlx5_get_gid_table_len.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40

if.then39:                                        ; preds = %mlx5_get_gid_table_len.exit
  call void @__sanitizer_cov_trace_pc() #18
  %cap_mask2 = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %call7.i.i, i32 0, i32 13
  %56 = ptrtoint ptr %cap_mask2 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %cap_mask2, align 8
  %port_cap_flags2 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 22
  %58 = ptrtoint ptr %port_cap_flags2 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %port_cap_flags2, align 2
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %mlx5_get_gid_table_len.exit.if.end40_crit_edge
  %active_speed = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 20
  %call42 = call i32 @mlx5_query_ib_port_oper(ptr noundef %1, ptr noundef nonnull %ib_link_width_oper, ptr noundef %active_speed, i8 noundef zeroext %conv) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.end45, label %if.end40.out_crit_edge

if.end40.out_crit_edge:                           ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end45:                                         ; preds = %if.end40
  %59 = ptrtoint ptr %ib_link_width_oper to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %ib_link_width_oper, align 2
  %active_width = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 19
  %conv.i112 = zext i16 %60 to i32
  %and.i = and i32 %conv.i112, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end45.translate_active_width.exit_crit_edge

if.end45.translate_active_width.exit_crit_edge:   ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #18
  br label %translate_active_width.exit

if.else.i:                                        ; preds = %if.end45
  %and2.i = and i32 %conv.i112, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %if.else5.i, label %if.else.i.translate_active_width.exit_crit_edge

if.else.i.translate_active_width.exit_crit_edge:  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %translate_active_width.exit

if.else5.i:                                       ; preds = %if.else.i
  %and7.i = and i32 %conv.i112, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.else10.i, label %if.else5.i.translate_active_width.exit_crit_edge

if.else5.i.translate_active_width.exit_crit_edge: ; preds = %if.else5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %translate_active_width.exit

if.else10.i:                                      ; preds = %if.else5.i
  %and12.i = and i32 %conv.i112, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  br i1 %tobool13.not.i, label %if.else15.i, label %if.else10.i.translate_active_width.exit_crit_edge

if.else10.i.translate_active_width.exit_crit_edge: ; preds = %if.else10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %translate_active_width.exit

if.else15.i:                                      ; preds = %if.else10.i
  %and17.i = and i32 %conv.i112, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %do.body.i, label %if.else15.i.translate_active_width.exit_crit_edge

if.else15.i.translate_active_width.exit_crit_edge: ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %translate_active_width.exit

do.body.i:                                        ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @translate_active_width.__UNIQUE_ID_ddebug566, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_query_hca_port, %if.then25.i)) #16
          to label %translate_active_width.exit [label %if.then25.i], !srcloc !404

if.then25.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %61 = getelementptr inbounds %struct.ib_device, ptr %ibdev, i32 0, i32 13
  %62 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 2
  %64 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %65, i32 0, i32 68
  %66 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %pid.i, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @translate_active_width.__UNIQUE_ID_ddebug566, ptr noundef %61, ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.6, i32 noundef 1224, i32 noundef %67, i32 noundef %conv.i112) #16
  br label %translate_active_width.exit

translate_active_width.exit:                      ; preds = %if.then25.i, %do.body.i, %if.else15.i.translate_active_width.exit_crit_edge, %if.else10.i.translate_active_width.exit_crit_edge, %if.else5.i.translate_active_width.exit_crit_edge, %if.else.i.translate_active_width.exit_crit_edge, %if.end45.translate_active_width.exit_crit_edge
  %.sink.i = phi i8 [ 1, %if.end45.translate_active_width.exit_crit_edge ], [ 16, %if.else.i.translate_active_width.exit_crit_edge ], [ 2, %if.else5.i.translate_active_width.exit_crit_edge ], [ 4, %if.else10.i.translate_active_width.exit_crit_edge ], [ 8, %if.else15.i.translate_active_width.exit_crit_edge ], [ 2, %do.body.i ], [ 2, %if.then25.i ]
  %68 = ptrtoint ptr %active_width to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %.sink.i, ptr %active_width, align 1
  call void @mlx5_query_port_max_mtu(ptr noundef %1, ptr noundef nonnull %max_mtu, i8 noundef zeroext %conv) #16
  %69 = ptrtoint ptr %max_mtu to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %max_mtu, align 2
  %71 = zext i16 %70 to i64
  call void @__sanitizer_cov_trace_switch(i64 %71, ptr @__sancov_gen_cov_switch_values.158)
  switch i16 %70, label %do.end.i114 [
    i16 256, label %translate_active_width.exit.mlx5_mtu_to_ib_mtu.exit_crit_edge
    i16 512, label %sw.bb1.i
    i16 1024, label %sw.bb2.i
    i16 2048, label %sw.bb3.i
    i16 4096, label %sw.bb4.i
  ]

translate_active_width.exit.mlx5_mtu_to_ib_mtu.exit_crit_edge: ; preds = %translate_active_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit

sw.bb1.i:                                         ; preds = %translate_active_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit

sw.bb2.i:                                         ; preds = %translate_active_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit

sw.bb3.i:                                         ; preds = %translate_active_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit

sw.bb4.i:                                         ; preds = %translate_active_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit

do.end.i114:                                      ; preds = %translate_active_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call.i113 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9) #20
  br label %mlx5_mtu_to_ib_mtu.exit

mlx5_mtu_to_ib_mtu.exit:                          ; preds = %do.end.i114, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %translate_active_width.exit.mlx5_mtu_to_ib_mtu.exit_crit_edge
  %retval.0.i115 = phi i32 [ -1, %do.end.i114 ], [ 5, %sw.bb4.i ], [ 4, %sw.bb3.i ], [ 3, %sw.bb2.i ], [ 2, %sw.bb1.i ], [ 1, %translate_active_width.exit.mlx5_mtu_to_ib_mtu.exit_crit_edge ]
  %max_mtu49 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 2
  %72 = ptrtoint ptr %max_mtu49 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %retval.0.i115, ptr %max_mtu49, align 4
  call void @mlx5_query_port_oper_mtu(ptr noundef %1, ptr noundef nonnull %oper_mtu, i8 noundef zeroext %conv) #16
  %73 = ptrtoint ptr %oper_mtu to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %oper_mtu, align 2
  %75 = zext i16 %74 to i64
  call void @__sanitizer_cov_trace_switch(i64 %75, ptr @__sancov_gen_cov_switch_values.159)
  switch i16 %74, label %do.end.i121 [
    i16 256, label %mlx5_mtu_to_ib_mtu.exit.mlx5_mtu_to_ib_mtu.exit123_crit_edge
    i16 512, label %sw.bb1.i116
    i16 1024, label %sw.bb2.i117
    i16 2048, label %sw.bb3.i118
    i16 4096, label %sw.bb4.i119
  ]

mlx5_mtu_to_ib_mtu.exit.mlx5_mtu_to_ib_mtu.exit123_crit_edge: ; preds = %mlx5_mtu_to_ib_mtu.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit123

sw.bb1.i116:                                      ; preds = %mlx5_mtu_to_ib_mtu.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit123

sw.bb2.i117:                                      ; preds = %mlx5_mtu_to_ib_mtu.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit123

sw.bb3.i118:                                      ; preds = %mlx5_mtu_to_ib_mtu.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit123

sw.bb4.i119:                                      ; preds = %mlx5_mtu_to_ib_mtu.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_mtu_to_ib_mtu.exit123

do.end.i121:                                      ; preds = %mlx5_mtu_to_ib_mtu.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call.i120 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9) #20
  br label %mlx5_mtu_to_ib_mtu.exit123

mlx5_mtu_to_ib_mtu.exit123:                       ; preds = %do.end.i121, %sw.bb4.i119, %sw.bb3.i118, %sw.bb2.i117, %sw.bb1.i116, %mlx5_mtu_to_ib_mtu.exit.mlx5_mtu_to_ib_mtu.exit123_crit_edge
  %retval.0.i122 = phi i32 [ -1, %do.end.i121 ], [ 5, %sw.bb4.i119 ], [ 4, %sw.bb3.i118 ], [ 3, %sw.bb2.i117 ], [ 2, %sw.bb1.i116 ], [ 1, %mlx5_mtu_to_ib_mtu.exit.mlx5_mtu_to_ib_mtu.exit123_crit_edge ]
  %active_mtu = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 3
  %76 = ptrtoint ptr %active_mtu to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %retval.0.i122, ptr %active_mtu, align 8
  %call54 = call i32 @mlx5_query_port_vl_hw_cap(ptr noundef %1, ptr noundef nonnull %vl_hw_cap, i8 noundef zeroext %conv) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.end57, label %mlx5_mtu_to_ib_mtu.exit123.out_crit_edge

mlx5_mtu_to_ib_mtu.exit123.out_crit_edge:         ; preds = %mlx5_mtu_to_ib_mtu.exit123
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end57:                                         ; preds = %mlx5_mtu_to_ib_mtu.exit123
  %77 = ptrtoint ptr %vl_hw_cap to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %vl_hw_cap, align 1
  %max_vl_num = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 15
  %79 = zext i8 %78 to i64
  call void @__sanitizer_cov_trace_switch(i64 %79, ptr @__sancov_gen_cov_switch_values.160)
  switch i8 %78, label %if.end57.out_crit_edge [
    i8 1, label %if.end57.return.sink.split.i_crit_edge
    i8 2, label %sw.bb1.i124
    i8 4, label %sw.bb2.i125
    i8 8, label %sw.bb3.i126
    i8 15, label %sw.bb4.i127
  ]

if.end57.return.sink.split.i_crit_edge:           ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %return.sink.split.i

if.end57.out_crit_edge:                           ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

sw.bb1.i124:                                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %return.sink.split.i

sw.bb2.i125:                                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %return.sink.split.i

sw.bb3.i126:                                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %return.sink.split.i

sw.bb4.i127:                                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %return.sink.split.i

return.sink.split.i:                              ; preds = %sw.bb4.i127, %sw.bb3.i126, %sw.bb2.i125, %sw.bb1.i124, %if.end57.return.sink.split.i_crit_edge
  %.sink.i128 = phi i8 [ 2, %sw.bb1.i124 ], [ 3, %sw.bb2.i125 ], [ 4, %sw.bb3.i126 ], [ 5, %sw.bb4.i127 ], [ %78, %if.end57.return.sink.split.i_crit_edge ]
  %80 = ptrtoint ptr %max_vl_num to i32
  call void @__asan_store1_noabort(i32 %80)
  store i8 %.sink.i128, ptr %max_vl_num, align 1
  br label %out

out:                                              ; preds = %return.sink.split.i, %if.end57.out_crit_edge, %mlx5_mtu_to_ib_mtu.exit123.out_crit_edge, %if.end40.out_crit_edge, %if.end.out_crit_edge, %entry.out_crit_edge
  %err.0 = phi i32 [ %call3, %if.end.out_crit_edge ], [ %call42, %if.end40.out_crit_edge ], [ %call54, %mlx5_mtu_to_ib_mtu.exit123.out_crit_edge ], [ -12, %entry.out_crit_edge ], [ -22, %if.end57.out_crit_edge ], [ 0, %return.sink.split.i ]
  call void @kfree(ptr noundef %call7.i.i) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %vl_hw_cap) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ib_link_width_oper) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %oper_mtu) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %max_mtu) #16
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx5_query_port_roce(ptr nocapture noundef readonly %device, i32 noundef %port_num, ptr nocapture noundef %props) unnamed_addr #0 align 64 {
entry:
  %out = alloca [16 x i32], align 4
  %qkey_viol_cntr = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %out) #16
  %0 = call ptr @memset(ptr %out, i32 0, i32 64)
  %mdev.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 1
  %1 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %4, i32 13
  %5 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %add.ptr.i.i, align 4
  %7 = and i32 %6, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %7)
  %switch.selectcmp.i.i.i = icmp eq i32 %7, 256
  %add.ptr.i.i.i = getelementptr i32, ptr %4, i32 48
  %8 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr.i.i.i, align 4
  %10 = and i32 %9, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %11 = icmp ne i32 %10, 0
  %or.cond.i = select i1 %11, i1 %switch.selectcmp.i.i.i, i1 false
  br i1 %or.cond.i, label %if.end6.i, label %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge

entry.mlx5_ib_get_native_port_mdev.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_get_native_port_mdev.exit

if.end6.i:                                        ; preds = %entry
  %port10.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 22
  %12 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %port10.i, align 8
  %sub.i = add i32 %port_num, -1
  %mpi_lock.i = getelementptr %struct.mlx5_ib_port, ptr %13, i32 %sub.i, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i) #16
  %14 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %port10.i, align 8
  %mp14.i = getelementptr %struct.mlx5_ib_port, ptr %15, i32 %sub.i, i32 1
  %16 = ptrtoint ptr %mp14.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mp14.i, align 4
  %tobool16.not.i = icmp eq ptr %17, null
  br i1 %tobool16.not.i, label %if.end6.i.if.end23.i_crit_edge, label %land.lhs.true.i138

if.end6.i.if.end23.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

land.lhs.true.i138:                               ; preds = %if.end6.i
  %unaffiliate.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %17, i32 0, i32 8
  %18 = ptrtoint ptr %unaffiliate.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %unaffiliate.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool17.not.i = icmp eq i8 %19, 0
  br i1 %tobool17.not.i, label %if.then18.i, label %land.lhs.true.i138.if.end23.i_crit_edge

land.lhs.true.i138.if.end23.i_crit_edge:          ; preds = %land.lhs.true.i138
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then18.i:                                      ; preds = %land.lhs.true.i138
  %mdev19.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %17, i32 0, i32 2
  %20 = ptrtoint ptr %mdev19.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mdev19.i, align 4
  %is_master.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %17, i32 0, i32 7
  %22 = ptrtoint ptr %is_master.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %is_master.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool20.not.i = icmp eq i8 %23, 0
  br i1 %tobool20.not.i, label %if.then21.i, label %if.then18.i.if.end23.i_crit_edge

if.then18.i.if.end23.i_crit_edge:                 ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then21.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  %mdev_refcnt.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %17, i32 0, i32 6
  %24 = ptrtoint ptr %mdev_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %mdev_refcnt.i, align 8
  %inc.i = add i32 %25, 1
  store i32 %inc.i, ptr %mdev_refcnt.i, align 8
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then21.i, %if.then18.i.if.end23.i_crit_edge, %land.lhs.true.i138.if.end23.i_crit_edge, %if.end6.i.if.end23.i_crit_edge
  %mdev.0.i = phi ptr [ null, %land.lhs.true.i138.if.end23.i_crit_edge ], [ %21, %if.then18.i.if.end23.i_crit_edge ], [ %21, %if.then21.i ], [ null, %if.end6.i.if.end23.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i) #16
  br label %mlx5_ib_get_native_port_mdev.exit

mlx5_ib_get_native_port_mdev.exit:                ; preds = %if.end23.i, %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge
  %mdev_port_num.0 = phi i32 [ 1, %if.end23.i ], [ %port_num, %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge ]
  %retval.0.i = phi ptr [ %mdev.0.i, %if.end23.i ], [ %2, %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %if.then, label %mlx5_ib_get_native_port_mdev.exit.if.end_crit_edge

mlx5_ib_get_native_port_mdev.exit.if.end_crit_edge: ; preds = %mlx5_ib_get_native_port_mdev.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %mlx5_ib_get_native_port_mdev.exit
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mdev.i.i, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %mlx5_ib_get_native_port_mdev.exit.if.end_crit_edge
  %mdev_port_num.1 = phi i32 [ 1, %if.then ], [ %mdev_port_num.0, %mlx5_ib_get_native_port_mdev.exit.if.end_crit_edge ]
  %mdev.0 = phi ptr [ %27, %if.then ], [ %retval.0.i, %mlx5_ib_get_native_port_mdev.exit.if.end_crit_edge ]
  %port_num.addr.0 = phi i32 [ 1, %if.then ], [ %port_num, %mlx5_ib_get_native_port_mdev.exit.if.end_crit_edge ]
  %is_rep = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 5
  %28 = ptrtoint ptr %is_rep to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load = load i8, ptr %is_rep, align 8
  %29 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool3.not = icmp eq i8 %29, 0
  %conv = trunc i32 %mdev_port_num.1 to i8
  %conv.sink = select i1 %tobool3.not, i8 %conv, i8 1
  %call7 = call i32 @mlx5_query_port_ptys(ptr noundef %mdev.0, ptr noundef nonnull %out, i32 noundef 64, i32 noundef 4, i8 noundef zeroext %conv.sink) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool9.not = icmp eq i32 %call7, 0
  br i1 %tobool9.not, label %if.end11, label %out90

if.end11:                                         ; preds = %if.end
  %add.ptr = getelementptr inbounds i32, ptr %out, i32 2
  %30 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool13.not = icmp eq i32 %31, 0
  br i1 %tobool13.not, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.end11
  %add.ptr18 = getelementptr inbounds i32, ptr %out, i32 8
  %32 = ptrtoint ptr %add.ptr18 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %add.ptr18, align 4
  %active_width190 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 19
  %34 = ptrtoint ptr %active_width190 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 2, ptr %active_width190, align 1
  %active_speed191 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 20
  %35 = ptrtoint ptr %active_speed191 to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 4, ptr %active_speed191, align 2
  %36 = zext i32 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.161)
  switch i32 %33, label %cond.true.i.translate_eth_proto_oper.exit_crit_edge [
    i32 1, label %cond.true.i.cond.end.sink.split.i_crit_edge
    i32 2, label %cond.true.i.cond.end.sink.split.i_crit_edge197
    i32 8, label %sw.bb1.i.i
    i32 16, label %sw.bb2.i.i
    i32 32, label %sw.bb3.i.i
    i32 64, label %sw.bb4.i.i
    i32 128, label %sw.bb5.i.i
    i32 256, label %sw.bb6.i.i
    i32 512, label %sw.bb7.i.i
    i32 1024, label %sw.bb8.i.i
    i32 2048, label %sw.bb9.i.i
    i32 4096, label %sw.bb10.i.i
    i32 8192, label %sw.bb11.i.i
    i32 65536, label %sw.bb12.i.i
  ]

cond.true.i.cond.end.sink.split.i_crit_edge197:   ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

cond.true.i.cond.end.sink.split.i_crit_edge:      ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

cond.true.i.translate_eth_proto_oper.exit_crit_edge: ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %translate_eth_proto_oper.exit

sw.bb1.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb2.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb3.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb4.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb5.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb6.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb7.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb8.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb9.i.i:                                       ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb10.i.i:                                      ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb11.i.i:                                      ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb12.i.i:                                      ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

cond.false.i:                                     ; preds = %if.end11
  %add.ptr22 = getelementptr inbounds i32, ptr %out, i32 9
  %37 = ptrtoint ptr %add.ptr22 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %add.ptr22, align 4
  %active_width = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 19
  %39 = ptrtoint ptr %active_width to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 2, ptr %active_width, align 1
  %active_speed = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 20
  %40 = ptrtoint ptr %active_speed to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 4, ptr %active_speed, align 2
  %41 = zext i32 %38 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.162)
  switch i32 %38, label %cond.false.i.translate_eth_proto_oper.exit_crit_edge [
    i32 1, label %cond.false.i.cond.end.sink.split.i_crit_edge
    i32 2, label %cond.false.i.cond.end.sink.split.i_crit_edge198
    i32 16777216, label %cond.false.i.cond.end.sink.split.i_crit_edge199
    i32 33554432, label %cond.false.i.cond.end.sink.split.i_crit_edge200
    i32 67108864, label %cond.false.i.sw.bb1.i1.i_crit_edge
    i32 4, label %cond.false.i.sw.bb1.i1.i_crit_edge201
    i32 8, label %cond.false.i.sw.bb1.i1.i_crit_edge202
    i32 16, label %cond.false.i.sw.bb1.i1.i_crit_edge203
    i32 4096, label %cond.false.i.sw.bb1.i1.i_crit_edge204
    i32 8192, label %cond.false.i.sw.bb1.i1.i_crit_edge205
    i32 16384, label %cond.false.i.sw.bb1.i1.i_crit_edge206
    i32 134217728, label %cond.false.i.sw.bb2.i2.i_crit_edge
    i32 268435456, label %cond.false.i.sw.bb2.i2.i_crit_edge207
    i32 536870912, label %cond.false.i.sw.bb2.i2.i_crit_edge208
    i32 64, label %cond.false.i.sw.bb3.i3.i_crit_edge
    i32 128, label %cond.false.i.sw.bb3.i3.i_crit_edge209
    i32 32768, label %cond.false.i.sw.bb3.i3.i_crit_edge210
    i32 65536, label %cond.false.i.sw.bb3.i3.i_crit_edge211
    i32 1073741824, label %cond.false.i.sw.bb4.i4.i_crit_edge
    i32 -2147483648, label %cond.false.i.sw.bb4.i4.i_crit_edge212
    i32 262144, label %cond.false.i.sw.bb4.i4.i_crit_edge213
    i32 256, label %sw.bb5.i5.i
    i32 1048576, label %cond.false.i.sw.bb6.i6.i_crit_edge
    i32 2097152, label %cond.false.i.sw.bb6.i6.i_crit_edge214
    i32 4194304, label %cond.false.i.sw.bb6.i6.i_crit_edge215
    i32 8388608, label %cond.false.i.sw.bb6.i6.i_crit_edge216
  ]

cond.false.i.sw.bb6.i6.i_crit_edge216:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb6.i6.i

cond.false.i.sw.bb6.i6.i_crit_edge215:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb6.i6.i

cond.false.i.sw.bb6.i6.i_crit_edge214:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb6.i6.i

cond.false.i.sw.bb6.i6.i_crit_edge:               ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb6.i6.i

cond.false.i.sw.bb4.i4.i_crit_edge213:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb4.i4.i

cond.false.i.sw.bb4.i4.i_crit_edge212:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb4.i4.i

cond.false.i.sw.bb4.i4.i_crit_edge:               ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb4.i4.i

cond.false.i.sw.bb3.i3.i_crit_edge211:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i3.i

cond.false.i.sw.bb3.i3.i_crit_edge210:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i3.i

cond.false.i.sw.bb3.i3.i_crit_edge209:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i3.i

cond.false.i.sw.bb3.i3.i_crit_edge:               ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i3.i

cond.false.i.sw.bb2.i2.i_crit_edge208:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i2.i

cond.false.i.sw.bb2.i2.i_crit_edge207:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i2.i

cond.false.i.sw.bb2.i2.i_crit_edge:               ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i2.i

cond.false.i.sw.bb1.i1.i_crit_edge206:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i1.i

cond.false.i.sw.bb1.i1.i_crit_edge205:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i1.i

cond.false.i.sw.bb1.i1.i_crit_edge204:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i1.i

cond.false.i.sw.bb1.i1.i_crit_edge203:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i1.i

cond.false.i.sw.bb1.i1.i_crit_edge202:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i1.i

cond.false.i.sw.bb1.i1.i_crit_edge201:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i1.i

cond.false.i.sw.bb1.i1.i_crit_edge:               ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i1.i

cond.false.i.cond.end.sink.split.i_crit_edge200:  ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

cond.false.i.cond.end.sink.split.i_crit_edge199:  ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

cond.false.i.cond.end.sink.split.i_crit_edge198:  ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

cond.false.i.cond.end.sink.split.i_crit_edge:     ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

cond.false.i.translate_eth_proto_oper.exit_crit_edge: ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %translate_eth_proto_oper.exit

sw.bb1.i1.i:                                      ; preds = %cond.false.i.sw.bb1.i1.i_crit_edge, %cond.false.i.sw.bb1.i1.i_crit_edge201, %cond.false.i.sw.bb1.i1.i_crit_edge202, %cond.false.i.sw.bb1.i1.i_crit_edge203, %cond.false.i.sw.bb1.i1.i_crit_edge204, %cond.false.i.sw.bb1.i1.i_crit_edge205, %cond.false.i.sw.bb1.i1.i_crit_edge206
  br label %cond.end.sink.split.i

sw.bb2.i2.i:                                      ; preds = %cond.false.i.sw.bb2.i2.i_crit_edge, %cond.false.i.sw.bb2.i2.i_crit_edge207, %cond.false.i.sw.bb2.i2.i_crit_edge208
  br label %cond.end.sink.split.i

sw.bb3.i3.i:                                      ; preds = %cond.false.i.sw.bb3.i3.i_crit_edge, %cond.false.i.sw.bb3.i3.i_crit_edge209, %cond.false.i.sw.bb3.i3.i_crit_edge210, %cond.false.i.sw.bb3.i3.i_crit_edge211
  br label %cond.end.sink.split.i

sw.bb4.i4.i:                                      ; preds = %cond.false.i.sw.bb4.i4.i_crit_edge, %cond.false.i.sw.bb4.i4.i_crit_edge212, %cond.false.i.sw.bb4.i4.i_crit_edge213
  br label %cond.end.sink.split.i

sw.bb5.i5.i:                                      ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.sink.split.i

sw.bb6.i6.i:                                      ; preds = %cond.false.i.sw.bb6.i6.i_crit_edge, %cond.false.i.sw.bb6.i6.i_crit_edge214, %cond.false.i.sw.bb6.i6.i_crit_edge215, %cond.false.i.sw.bb6.i6.i_crit_edge216
  br label %cond.end.sink.split.i

cond.end.sink.split.i:                            ; preds = %sw.bb6.i6.i, %sw.bb5.i5.i, %sw.bb4.i4.i, %sw.bb3.i3.i, %sw.bb2.i2.i, %sw.bb1.i1.i, %cond.false.i.cond.end.sink.split.i_crit_edge, %cond.false.i.cond.end.sink.split.i_crit_edge198, %cond.false.i.cond.end.sink.split.i_crit_edge199, %cond.false.i.cond.end.sink.split.i_crit_edge200, %sw.bb12.i.i, %sw.bb11.i.i, %sw.bb10.i.i, %sw.bb9.i.i, %sw.bb8.i.i, %sw.bb7.i.i, %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %cond.true.i.cond.end.sink.split.i_crit_edge, %cond.true.i.cond.end.sink.split.i_crit_edge197
  %active_speed195 = phi ptr [ %active_speed191, %sw.bb1.i.i ], [ %active_speed191, %sw.bb2.i.i ], [ %active_speed191, %sw.bb3.i.i ], [ %active_speed191, %sw.bb4.i.i ], [ %active_speed191, %sw.bb5.i.i ], [ %active_speed191, %sw.bb6.i.i ], [ %active_speed191, %sw.bb7.i.i ], [ %active_speed191, %sw.bb8.i.i ], [ %active_speed191, %sw.bb9.i.i ], [ %active_speed191, %sw.bb10.i.i ], [ %active_speed191, %sw.bb11.i.i ], [ %active_speed191, %sw.bb12.i.i ], [ %active_speed191, %cond.true.i.cond.end.sink.split.i_crit_edge ], [ %active_speed191, %cond.true.i.cond.end.sink.split.i_crit_edge197 ], [ %active_speed, %sw.bb1.i1.i ], [ %active_speed, %sw.bb2.i2.i ], [ %active_speed, %sw.bb3.i3.i ], [ %active_speed, %sw.bb4.i4.i ], [ %active_speed, %sw.bb5.i5.i ], [ %active_speed, %sw.bb6.i6.i ], [ %active_speed, %cond.false.i.cond.end.sink.split.i_crit_edge ], [ %active_speed, %cond.false.i.cond.end.sink.split.i_crit_edge198 ], [ %active_speed, %cond.false.i.cond.end.sink.split.i_crit_edge199 ], [ %active_speed, %cond.false.i.cond.end.sink.split.i_crit_edge200 ]
  %active_width193 = phi ptr [ %active_width190, %sw.bb1.i.i ], [ %active_width190, %sw.bb2.i.i ], [ %active_width190, %sw.bb3.i.i ], [ %active_width190, %sw.bb4.i.i ], [ %active_width190, %sw.bb5.i.i ], [ %active_width190, %sw.bb6.i.i ], [ %active_width190, %sw.bb7.i.i ], [ %active_width190, %sw.bb8.i.i ], [ %active_width190, %sw.bb9.i.i ], [ %active_width190, %sw.bb10.i.i ], [ %active_width190, %sw.bb11.i.i ], [ %active_width190, %sw.bb12.i.i ], [ %active_width190, %cond.true.i.cond.end.sink.split.i_crit_edge ], [ %active_width190, %cond.true.i.cond.end.sink.split.i_crit_edge197 ], [ %active_width, %sw.bb1.i1.i ], [ %active_width, %sw.bb2.i2.i ], [ %active_width, %sw.bb3.i3.i ], [ %active_width, %sw.bb4.i4.i ], [ %active_width, %sw.bb5.i5.i ], [ %active_width, %sw.bb6.i6.i ], [ %active_width, %cond.false.i.cond.end.sink.split.i_crit_edge ], [ %active_width, %cond.false.i.cond.end.sink.split.i_crit_edge198 ], [ %active_width, %cond.false.i.cond.end.sink.split.i_crit_edge199 ], [ %active_width, %cond.false.i.cond.end.sink.split.i_crit_edge200 ]
  %.sink19.i.sink.i = phi i8 [ 1, %sw.bb1.i.i ], [ 1, %sw.bb2.i.i ], [ 2, %sw.bb3.i.i ], [ 1, %sw.bb4.i.i ], [ 16, %sw.bb5.i.i ], [ 1, %sw.bb6.i.i ], [ 2, %sw.bb7.i.i ], [ 16, %sw.bb8.i.i ], [ 1, %sw.bb9.i.i ], [ 2, %sw.bb10.i.i ], [ 16, %sw.bb11.i.i ], [ 2, %sw.bb12.i.i ], [ 1, %cond.true.i.cond.end.sink.split.i_crit_edge ], [ 1, %cond.true.i.cond.end.sink.split.i_crit_edge197 ], [ 1, %sw.bb1.i1.i ], [ 1, %sw.bb2.i2.i ], [ 2, %sw.bb3.i3.i ], [ 1, %sw.bb4.i4.i ], [ 2, %sw.bb5.i5.i ], [ 2, %sw.bb6.i6.i ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge198 ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge199 ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge200 ]
  %.sink.i7.sink.i = phi i16 [ 2, %sw.bb1.i.i ], [ 4, %sw.bb2.i.i ], [ 4, %sw.bb3.i.i ], [ 32, %sw.bb4.i.i ], [ 32, %sw.bb5.i.i ], [ 64, %sw.bb6.i.i ], [ 32, %sw.bb7.i.i ], [ 64, %sw.bb8.i.i ], [ 128, %sw.bb9.i.i ], [ 64, %sw.bb10.i.i ], [ 128, %sw.bb11.i.i ], [ 128, %sw.bb12.i.i ], [ 1, %cond.true.i.cond.end.sink.split.i_crit_edge ], [ 1, %cond.true.i.cond.end.sink.split.i_crit_edge197 ], [ 4, %sw.bb1.i1.i ], [ 32, %sw.bb2.i2.i ], [ 4, %sw.bb3.i3.i ], [ 64, %sw.bb4.i4.i ], [ 16, %sw.bb5.i5.i ], [ 32, %sw.bb6.i6.i ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge198 ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge199 ], [ 1, %cond.false.i.cond.end.sink.split.i_crit_edge200 ]
  %42 = ptrtoint ptr %active_width193 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %.sink19.i.sink.i, ptr %active_width193, align 1
  %43 = ptrtoint ptr %active_speed195 to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %.sink.i7.sink.i, ptr %active_speed195, align 2
  br label %translate_eth_proto_oper.exit

translate_eth_proto_oper.exit:                    ; preds = %cond.end.sink.split.i, %cond.false.i.translate_eth_proto_oper.exit_crit_edge, %cond.true.i.translate_eth_proto_oper.exit_crit_edge
  %44 = ptrtoint ptr %is_rep to i32
  call void @__asan_load1_noabort(i32 %44)
  %bf.load30 = load i8, ptr %is_rep, align 8
  %45 = and i8 %bf.load30, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool33.not = icmp eq i8 %45, 0
  br i1 %tobool33.not, label %land.lhs.true, label %translate_eth_proto_oper.exit.if.end47_crit_edge

translate_eth_proto_oper.exit.if.end47_crit_edge: ; preds = %translate_eth_proto_oper.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

land.lhs.true:                                    ; preds = %translate_eth_proto_oper.exit
  %46 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mdev.i.i, align 8
  %roce_en = getelementptr inbounds %struct.mlx5_core_dev, ptr %47, i32 0, i32 24, i32 1
  %48 = ptrtoint ptr %roce_en to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %roce_en, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool35.not = icmp eq i32 %49, 0
  br i1 %tobool35.not, label %land.lhs.true.if.end47_crit_edge, label %if.then36

land.lhs.true.if.end47_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

if.then36:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %qkey_viol_cntr) #16
  %50 = ptrtoint ptr %qkey_viol_cntr to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 -1, ptr %qkey_viol_cntr, align 2, !annotation !403
  %port_cap_flags = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 7
  %51 = ptrtoint ptr %port_cap_flags to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %port_cap_flags, align 8
  %or = or i32 %52, 65536
  store i32 %or, ptr %port_cap_flags, align 8
  %ip_gids = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 6
  %53 = ptrtoint ptr %ip_gids to i32
  call void @__asan_load1_noabort(i32 %53)
  %bf.load37 = load i8, ptr %ip_gids, align 4
  %bf.set = or i8 %bf.load37, -128
  store i8 %bf.set, ptr %ip_gids, align 4
  %54 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mdev.i.i, align 8
  %arrayidx = getelementptr %struct.mlx5_core_dev, ptr %55, i32 0, i32 8, i32 0, i32 4
  %56 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx, align 8
  %add.ptr41 = getelementptr i32, ptr %57, i32 7
  %58 = ptrtoint ptr %add.ptr41 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %add.ptr41, align 4
  %and43 = and i32 %59, 65535
  %gid_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 5
  %60 = ptrtoint ptr %gid_tbl_len to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %and43, ptr %gid_tbl_len, align 8
  %call44 = call i32 @mlx5_query_nic_vport_qkey_viol_cntr(ptr noundef %mdev.0, ptr noundef nonnull %qkey_viol_cntr) #16
  %61 = ptrtoint ptr %qkey_viol_cntr to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %qkey_viol_cntr, align 2
  %conv45 = zext i16 %62 to i32
  %qkey_viol_cntr46 = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 10
  %63 = ptrtoint ptr %qkey_viol_cntr46 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %conv45, ptr %qkey_viol_cntr46, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %qkey_viol_cntr) #16
  br label %if.end47

if.end47:                                         ; preds = %if.then36, %land.lhs.true.if.end47_crit_edge, %translate_eth_proto_oper.exit.if.end47_crit_edge
  %max_mtu = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 2
  %64 = ptrtoint ptr %max_mtu to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 5, ptr %max_mtu, align 4
  %65 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %mdev.i.i, align 8
  %caps49 = getelementptr inbounds %struct.mlx5_core_dev, ptr %66, i32 0, i32 8
  %67 = ptrtoint ptr %caps49 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %caps49, align 8
  %add.ptr54 = getelementptr i32, ptr %68, i32 14
  %69 = ptrtoint ptr %add.ptr54 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %add.ptr54, align 4
  %shr55 = lshr i32 %70, 24
  %and56 = and i32 %shr55, 31
  %shl = shl nuw i32 1, %and56
  %max_msg_sz = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 8
  %71 = ptrtoint ptr %max_msg_sz to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %shl, ptr %max_msg_sz, align 4
  %pkey_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 11
  %72 = ptrtoint ptr %pkey_tbl_len to i32
  call void @__asan_store2_noabort(i32 %72)
  store i16 1, ptr %pkey_tbl_len, align 8
  %state = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 1
  %73 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 1, ptr %state, align 8
  %phys_state = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 21
  %74 = ptrtoint ptr %phys_state to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 3, ptr %phys_state, align 4
  br i1 %tobool.not, label %if.end47.if.end93_crit_edge, label %if.end59

if.end47.if.end93_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end93

if.end59:                                         ; preds = %if.end47
  %call60 = call ptr @mlx5_ib_get_netdev(ptr noundef %device, i32 noundef %port_num.addr.0)
  %tobool61.not = icmp eq ptr %call60, null
  br i1 %tobool61.not, label %if.end59.if.then92_crit_edge, label %if.end63

if.end59.if.then92_crit_edge:                     ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then92

if.end63:                                         ; preds = %if.end59
  %75 = ptrtoint ptr %is_rep to i32
  call void @__asan_load1_noabort(i32 %75)
  %bf.load64 = load i8, ptr %is_rep, align 8
  %76 = and i8 %bf.load64, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool67.not = icmp eq i8 %76, 0
  br i1 %tobool67.not, label %if.end63.if.end73_crit_edge, label %if.then68

if.end63.if.end73_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end73

if.then68:                                        ; preds = %if.end63
  %77 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i.i.i.i = and i32 %77, -16384
  %78 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 1
  %79 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %80, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #16, !srcloc !405
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i = call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i, label %if.then68.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then68.rcu_read_lock.exit_crit_edge:           ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then68
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.11, i32 noundef 696, ptr noundef nonnull @.str.12) #16
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then68.rcu_read_lock.exit_crit_edge
  %call69 = call ptr @netdev_master_upper_dev_get_rcu(ptr noundef nonnull %call60) #16
  %tobool70.not = icmp eq ptr %call69, null
  br i1 %tobool70.not, label %rcu_read_lock.exit.if.end72_crit_edge, label %do.body1.i

rcu_read_lock.exit.if.end72_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end72

do.body1.i:                                       ; preds = %rcu_read_lock.exit
  %81 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !406
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %call60, i32 0, i32 118
  %82 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pcpu_refcnt.i, align 4
  %84 = ptrtoint ptr %83 to i32
  %85 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 3
  %87 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %88
  %89 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %90, %84
  %91 = inttoptr i32 %add.i to ptr
  %92 = ptrtoint ptr %91 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %91, align 4
  %add13.i = add i32 %93, -1
  store i32 %add13.i, ptr %91, align 4
  %94 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !407
  %and.i.i.i = and i32 %94, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.body1.i149_crit_edge, !prof !408

do.body1.i.do.body1.i149_crit_edge:               ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body1.i149

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @warn_bogus_irq_restore() #16
  br label %do.body1.i149

do.body1.i149:                                    ; preds = %if.then28.i, %do.body1.i.do.body1.i149_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %81) #16, !srcloc !409
  %95 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !406
  %pcpu_refcnt.i141 = getelementptr inbounds %struct.net_device, ptr %call69, i32 0, i32 118
  %96 = ptrtoint ptr %pcpu_refcnt.i141 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %pcpu_refcnt.i141, align 4
  %98 = ptrtoint ptr %97 to i32
  %99 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i142 = and i32 %99, -16384
  %100 = inttoptr i32 %and.i.i142 to ptr
  %cpu.i143 = getelementptr inbounds %struct.thread_info, ptr %100, i32 0, i32 3
  %101 = ptrtoint ptr %cpu.i143 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %cpu.i143, align 4
  %arrayidx.i144 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %102
  %103 = ptrtoint ptr %arrayidx.i144 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %arrayidx.i144, align 4
  %add.i145 = add i32 %104, %98
  %105 = inttoptr i32 %add.i145 to ptr
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %105, align 4
  %add13.i146 = add i32 %107, 1
  store i32 %add13.i146, ptr %105, align 4
  %108 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !407
  %and.i.i.i147 = and i32 %108, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i147)
  %tobool24.not.i148 = icmp eq i32 %and.i.i.i147, 0
  br i1 %tobool24.not.i148, label %if.then28.i150, label %do.body1.i149.dev_hold.exit_crit_edge, !prof !408

do.body1.i149.dev_hold.exit_crit_edge:            ; preds = %do.body1.i149
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_hold.exit

if.then28.i150:                                   ; preds = %do.body1.i149
  call void @__sanitizer_cov_trace_pc() #18
  call void @warn_bogus_irq_restore() #16
  br label %dev_hold.exit

dev_hold.exit:                                    ; preds = %if.then28.i150, %do.body1.i149.dev_hold.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %95) #16, !srcloc !409
  br label %if.end72

if.end72:                                         ; preds = %dev_hold.exit, %rcu_read_lock.exit.if.end72_crit_edge
  %ndev.0 = phi ptr [ %call69, %dev_hold.exit ], [ %call60, %rcu_read_lock.exit.if.end72_crit_edge ]
  %call.i152 = call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i152, label %if.end72.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i155

if.end72.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true.i155:                               ; preds = %if.end72
  %call1.i153 = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i153)
  %tobool.not.i154 = icmp eq i32 %call1.i153, 0
  br i1 %tobool.not.i154, label %land.lhs.true.i155.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i157

land.lhs.true.i155.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i155
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true2.i157:                              ; preds = %land.lhs.true.i155
  %.b4.i156 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i156, label %land.lhs.true2.i157.rcu_read_unlock.exit_crit_edge, label %if.then.i158

land.lhs.true2.i157.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i157
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

if.then.i158:                                     ; preds = %land.lhs.true2.i157
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.11, i32 noundef 724, ptr noundef nonnull @.str.13) #16
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i158, %land.lhs.true2.i157.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i155.rcu_read_unlock.exit_crit_edge, %if.end72.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #16, !srcloc !410
  %109 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i.i.i.i159 = and i32 %109, -16384
  %110 = inttoptr i32 %and.i.i.i.i.i159 to ptr
  %preempt_count.i.i.i.i160 = getelementptr inbounds %struct.thread_info, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %preempt_count.i.i.i.i160 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %preempt_count.i.i.i.i160, align 4
  %sub.i.i.i = add i32 %112, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i160, align 4
  call void @rcu_read_unlock_strict() #16
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  br label %if.end73

if.end73:                                         ; preds = %rcu_read_unlock.exit, %if.end63.if.end73_crit_edge
  %ndev.1 = phi ptr [ %ndev.0, %rcu_read_unlock.exit ], [ %call60, %if.end63.if.end73_crit_edge ]
  %state.i = getelementptr inbounds %struct.net_device, ptr %ndev.1, i32 0, i32 6
  %113 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %114, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end73.if.end82_crit_edge, label %land.lhs.true76

if.end73.if.end82_crit_edge:                      ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

land.lhs.true76:                                  ; preds = %if.end73
  %115 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %state.i, align 4
  %117 = and i32 %116, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %117)
  %tobool.not.i162 = icmp eq i32 %117, 0
  br i1 %tobool.not.i162, label %if.then79, label %land.lhs.true76.if.end82_crit_edge

land.lhs.true76.if.end82_crit_edge:               ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

if.then79:                                        ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #18
  %118 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 4, ptr %state, align 8
  %119 = ptrtoint ptr %phys_state to i32
  call void @__asan_store1_noabort(i32 %119)
  store i8 5, ptr %phys_state, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.then79, %land.lhs.true76.if.end82_crit_edge, %if.end73.if.end82_crit_edge
  %mtu = getelementptr inbounds %struct.net_device, ptr %ndev.1, i32 0, i32 20
  %120 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %mtu, align 4
  %sub.i163 = add i32 %121, -96
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i163)
  %cmp.not.i = icmp slt i32 %sub.i163, 4096
  br i1 %cmp.not.i, label %if.else.i, label %if.end82.do.body1.i174_crit_edge

if.end82.do.body1.i174_crit_edge:                 ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body1.i174

if.else.i:                                        ; preds = %if.end82
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %sub.i163)
  %cmp2.not.i = icmp slt i32 %sub.i163, 2048
  br i1 %cmp2.not.i, label %if.else4.i, label %if.else.i.do.body1.i174_crit_edge

if.else.i.do.body1.i174_crit_edge:                ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body1.i174

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %sub.i163)
  %cmp6.not.i = icmp slt i32 %sub.i163, 1024
  br i1 %cmp6.not.i, label %if.else8.i, label %if.else4.i.do.body1.i174_crit_edge

if.else4.i.do.body1.i174_crit_edge:               ; preds = %if.else4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body1.i174

if.else8.i:                                       ; preds = %if.else4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %sub.i163)
  %cmp10.not.i = icmp slt i32 %sub.i163, 512
  br i1 %cmp10.not.i, label %if.else12.i, label %if.else8.i.do.body1.i174_crit_edge

if.else8.i.do.body1.i174_crit_edge:               ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body1.i174

if.else12.i:                                      ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %sub.i163)
  %cmp14.not.i = icmp sgt i32 %sub.i163, 255
  %..i = zext i1 %cmp14.not.i to i32
  br label %do.body1.i174

do.body1.i174:                                    ; preds = %if.else12.i, %if.else8.i.do.body1.i174_crit_edge, %if.else4.i.do.body1.i174_crit_edge, %if.else.i.do.body1.i174_crit_edge, %if.end82.do.body1.i174_crit_edge
  %retval.0.i164 = phi i32 [ 5, %if.end82.do.body1.i174_crit_edge ], [ 4, %if.else.i.do.body1.i174_crit_edge ], [ 3, %if.else4.i.do.body1.i174_crit_edge ], [ 2, %if.else8.i.do.body1.i174_crit_edge ], [ %..i, %if.else12.i ]
  %122 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !406
  %pcpu_refcnt.i166 = getelementptr inbounds %struct.net_device, ptr %ndev.1, i32 0, i32 118
  %123 = ptrtoint ptr %pcpu_refcnt.i166 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %pcpu_refcnt.i166, align 4
  %125 = ptrtoint ptr %124 to i32
  %126 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i167 = and i32 %126, -16384
  %127 = inttoptr i32 %and.i.i167 to ptr
  %cpu.i168 = getelementptr inbounds %struct.thread_info, ptr %127, i32 0, i32 3
  %128 = ptrtoint ptr %cpu.i168 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %cpu.i168, align 4
  %arrayidx.i169 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %129
  %130 = ptrtoint ptr %arrayidx.i169 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %arrayidx.i169, align 4
  %add.i170 = add i32 %131, %125
  %132 = inttoptr i32 %add.i170 to ptr
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %132, align 4
  %add13.i171 = add i32 %134, -1
  store i32 %add13.i171, ptr %132, align 4
  %135 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !407
  %and.i.i.i172 = and i32 %135, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i172)
  %tobool24.not.i173 = icmp eq i32 %and.i.i.i172, 0
  br i1 %tobool24.not.i173, label %if.then28.i175, label %do.body1.i174.out90.thread_crit_edge, !prof !408

do.body1.i174.out90.thread_crit_edge:             ; preds = %do.body1.i174
  call void @__sanitizer_cov_trace_pc() #18
  br label %out90.thread

if.then28.i175:                                   ; preds = %do.body1.i174
  call void @__sanitizer_cov_trace_pc() #18
  call void @warn_bogus_irq_restore() #16
  br label %out90.thread

out90.thread:                                     ; preds = %if.then28.i175, %do.body1.i174.out90.thread_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %122) #16, !srcloc !409
  %136 = ptrtoint ptr %max_mtu to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %max_mtu, align 4
  %138 = call i32 @llvm.umin.i32(i32 %137, i32 %retval.0.i164)
  %active_mtu = getelementptr inbounds %struct.ib_port_attr, ptr %props, i32 0, i32 3
  %139 = ptrtoint ptr %active_mtu to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 %138, ptr %active_mtu, align 8
  br label %if.then92

out90:                                            ; preds = %if.end
  br i1 %tobool.not, label %out90.if.end93_crit_edge, label %out90.if.then92_crit_edge

out90.if.then92_crit_edge:                        ; preds = %out90
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then92

out90.if.end93_crit_edge:                         ; preds = %out90
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end93

if.then92:                                        ; preds = %out90.if.then92_crit_edge, %out90.thread, %if.end59.if.then92_crit_edge
  %140 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i179 = getelementptr inbounds %struct.mlx5_core_dev, ptr %141, i32 0, i32 8
  %142 = ptrtoint ptr %caps.i.i179 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %caps.i.i179, align 8
  %add.ptr.i.i180 = getelementptr i32, ptr %143, i32 13
  %144 = ptrtoint ptr %add.ptr.i.i180 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %add.ptr.i.i180, align 4
  %146 = and i32 %145, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %146)
  %switch.selectcmp.i.i.i181 = icmp eq i32 %146, 256
  %add.ptr.i.i.i182 = getelementptr i32, ptr %143, i32 48
  %147 = ptrtoint ptr %add.ptr.i.i.i182 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %add.ptr.i.i.i182, align 4
  %149 = and i32 %148, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %149)
  %150 = icmp ne i32 %149, 0
  %or.cond.i183 = select i1 %150, i1 %switch.selectcmp.i.i.i181, i1 false
  br i1 %or.cond.i183, label %if.end.i, label %if.then92.if.end93_crit_edge

if.then92.if.end93_crit_edge:                     ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end93

if.end.i:                                         ; preds = %if.then92
  %port2.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 22
  %151 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %port2.i, align 8
  %sub.i184 = add i32 %port_num.addr.0, -1
  %mpi_lock.i185 = getelementptr %struct.mlx5_ib_port, ptr %152, i32 %sub.i184, i32 1, i32 1
  call void @_raw_spin_lock(ptr noundef %mpi_lock.i185) #16
  %153 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %port2.i, align 8
  %mp6.i = getelementptr %struct.mlx5_ib_port, ptr %154, i32 %sub.i184, i32 1
  %155 = ptrtoint ptr %mp6.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %mp6.i, align 4
  %is_master.i186 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %156, i32 0, i32 7
  %157 = ptrtoint ptr %is_master.i186 to i32
  call void @__asan_load1_noabort(i32 %157)
  %158 = load i8, ptr %is_master.i186, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %158)
  %tobool8.not.i = icmp eq i8 %158, 0
  br i1 %tobool8.not.i, label %if.end10.i, label %if.end.i.out.i_crit_edge

if.end.i.out.i_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.end10.i:                                       ; preds = %if.end.i
  %mdev_refcnt.i187 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %156, i32 0, i32 6
  %159 = ptrtoint ptr %mdev_refcnt.i187 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %mdev_refcnt.i187, align 8
  %dec.i = add i32 %160, -1
  store i32 %dec.i, ptr %mdev_refcnt.i187, align 8
  %unaffiliate.i188 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %156, i32 0, i32 8
  %161 = ptrtoint ptr %unaffiliate.i188 to i32
  call void @__asan_load1_noabort(i32 %161)
  %162 = load i8, ptr %unaffiliate.i188, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %162)
  %tobool11.not.i = icmp eq i8 %162, 0
  br i1 %tobool11.not.i, label %if.end10.i.out.i_crit_edge, label %if.then12.i

if.end10.i.out.i_crit_edge:                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %unref_comp.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %156, i32 0, i32 4
  call void @complete(ptr noundef %unref_comp.i) #16
  br label %out.i

out.i:                                            ; preds = %if.then12.i, %if.end10.i.out.i_crit_edge, %if.end.i.out.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %mpi_lock.i185) #16
  br label %if.end93

if.end93:                                         ; preds = %out.i, %if.then92.if.end93_crit_edge, %out90.if.end93_crit_edge, %if.end47.if.end93_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %out) #16
  ret i32 %call7
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_core_reserved_gids_count(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mlx5_ib_enable_lb(ptr noundef %dev, i1 noundef zeroext %td, i1 noundef zeroext %qp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %lb = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28
  tail call void @mutex_lock_nested(ptr noundef %lb, i32 noundef 0) #16
  br i1 %td, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %user_td = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 1
  %0 = ptrtoint ptr %user_td to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %user_td, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %user_td, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  br i1 %qp, label %if.then4, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %qps = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 2
  %2 = ptrtoint ptr %qps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %qps, align 4
  %inc6 = add i32 %3, 1
  store i32 %inc6, ptr %qps, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  %user_td9 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 1
  %4 = ptrtoint ptr %user_td9 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %user_td9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %5)
  %cmp = icmp eq i32 %5, 2
  br i1 %cmp, label %if.end7.if.then13_crit_edge, label %lor.lhs.false

if.end7.if.then13_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then13

lor.lhs.false:                                    ; preds = %if.end7
  %qps11 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 2
  %6 = ptrtoint ptr %qps11 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %qps11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp12 = icmp eq i32 %7, 1
  br i1 %cmp12, label %lor.lhs.false.if.then13_crit_edge, label %lor.lhs.false.if.end20_crit_edge

lor.lhs.false.if.end20_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

lor.lhs.false.if.then13_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then13

if.then13:                                        ; preds = %lor.lhs.false.if.then13_crit_edge, %if.end7.if.then13_crit_edge
  %enabled = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 3
  %8 = ptrtoint ptr %enabled to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %enabled, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool15.not = icmp eq i8 %9, 0
  br i1 %tobool15.not, label %if.then16, label %if.then13.if.end20_crit_edge

if.then13.if.end20_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then16:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %10 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mdev, align 8
  %call = tail call i32 @mlx5_nic_vport_update_local_lb(ptr noundef %11, i1 noundef zeroext true) #16
  %12 = ptrtoint ptr %enabled to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %enabled, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %if.then13.if.end20_crit_edge, %lor.lhs.false.if.end20_crit_edge
  %err.0 = phi i32 [ 0, %if.then13.if.end20_crit_edge ], [ %call, %if.then16 ], [ 0, %lor.lhs.false.if.end20_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lb) #16
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_nic_vport_update_local_lb(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mlx5_ib_disable_lb(ptr noundef %dev, i1 noundef zeroext %td, i1 noundef zeroext %qp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %lb = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28
  tail call void @mutex_lock_nested(ptr noundef %lb, i32 noundef 0) #16
  br i1 %td, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %user_td = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 1
  %0 = ptrtoint ptr %user_td to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %user_td, align 4
  %dec = add i32 %1, -1
  store i32 %dec, ptr %user_td, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  br i1 %qp, label %if.then4, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %qps = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 2
  %2 = ptrtoint ptr %qps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %qps, align 4
  %dec6 = add i32 %3, -1
  store i32 %dec6, ptr %qps, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  %user_td9 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 1
  %4 = ptrtoint ptr %user_td9 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %user_td9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %land.lhs.true, label %if.end7.if.end20_crit_edge

if.end7.if.end20_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

land.lhs.true:                                    ; preds = %if.end7
  %qps11 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 2
  %6 = ptrtoint ptr %qps11 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %qps11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp12 = icmp eq i32 %7, 0
  br i1 %cmp12, label %if.then13, label %land.lhs.true.if.end20_crit_edge

land.lhs.true.if.end20_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then13:                                        ; preds = %land.lhs.true
  %enabled = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 3
  %8 = ptrtoint ptr %enabled to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %enabled, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool15.not = icmp eq i8 %9, 0
  br i1 %tobool15.not, label %if.then13.if.end20_crit_edge, label %if.then16

if.then13.if.end20_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then16:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %10 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mdev, align 8
  %call = tail call i32 @mlx5_nic_vport_update_local_lb(ptr noundef %11, i1 noundef zeroext false) #16
  %12 = ptrtoint ptr %enabled to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %enabled, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %if.then13.if.end20_crit_edge, %land.lhs.true.if.end20_crit_edge, %if.end7.if.end20_crit_edge
  tail call void @mutex_unlock(ptr noundef %lb) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mlx5_ib_remove(ptr noundef %dev, ptr nocapture noundef readonly %profile, i32 noundef %stage) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ib_active = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 5
  %0 = ptrtoint ptr %ib_active to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %ib_active, align 8
  %bf.clear = and i8 %bf.load, 127
  store i8 %bf.clear, ptr %ib_active, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %stage)
  %tobool.not13 = icmp eq i32 %stage, 0
  br i1 %tobool.not13, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body:                                       ; preds = %if.end.while.body_crit_edge, %entry.while.body_crit_edge
  %stage.addr.014 = phi i32 [ %dec, %if.end.while.body_crit_edge ], [ %stage, %entry.while.body_crit_edge ]
  %dec = add i32 %stage.addr.014, -1
  %cleanup = getelementptr [20 x %struct.mlx5_ib_stage], ptr %profile, i32 0, i32 %dec, i32 1
  %1 = ptrtoint ptr %cleanup to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cleanup, align 4
  %tobool2.not = icmp eq ptr %2, null
  br i1 %tobool2.not, label %while.body.if.end_crit_edge, label %if.then

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void %2(ptr noundef %dev) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body.if.end_crit_edge
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %entry.while.end_crit_edge
  %port = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 22
  %3 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %port, align 8
  tail call void @kfree(ptr noundef %4) #16
  tail call void @ib_dealloc_device(ptr noundef %dev) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ib_dealloc_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__mlx5_ib_add(ptr noundef %dev, ptr noundef %profile) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %profile1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %profile1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %profile, ptr %profile1, align 8
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.035 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr [20 x %struct.mlx5_ib_stage], ptr %profile, i32 0, i32 %i.035
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  %call = tail call i32 %2(ptr noundef %dev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %if.then.for.inc_crit_edge, label %while.cond.preheader

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

while.cond.preheader:                             ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.035)
  %tobool8.not37 = icmp eq i32 %i.035, 0
  br i1 %tobool8.not37, label %while.cond.preheader.cleanup17_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.cleanup17_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup17

for.inc:                                          ; preds = %if.then.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.035, 1
  %exitcond.not = icmp eq i32 %inc, 20
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  %ib_active = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 5
  %3 = ptrtoint ptr %ib_active to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %ib_active, align 8
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %ib_active, align 8
  br label %cleanup17

while.body:                                       ; preds = %if.end16.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %i.138 = phi i32 [ %dec, %if.end16.while.body_crit_edge ], [ %i.035, %while.cond.preheader.while.body_crit_edge ]
  %dec = add nsw i32 %i.138, -1
  %cleanup = getelementptr [20 x %struct.mlx5_ib_stage], ptr %profile, i32 0, i32 %dec, i32 1
  %4 = ptrtoint ptr %cleanup to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cleanup, align 4
  %tobool11.not = icmp eq ptr %5, null
  br i1 %tobool11.not, label %while.body.if.end16_crit_edge, label %if.then12

while.body.if.end16_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.then12:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void %5(ptr noundef %dev) #16
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %while.body.if.end16_crit_edge
  %tobool8.not = icmp eq i32 %dec, 0
  br i1 %tobool8.not, label %if.end16.cleanup17_crit_edge, label %if.end16.while.body_crit_edge

if.end16.while.body_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

if.end16.cleanup17_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup17

cleanup17:                                        ; preds = %if.end16.cleanup17_crit_edge, %for.end, %while.cond.preheader.cleanup17_crit_edge
  %retval.0 = phi i32 [ 0, %for.end ], [ -12, %while.cond.preheader.cleanup17_crit_edge ], [ -12, %if.end16.cleanup17_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_init_init(ptr noundef %dev) #0 align 64 {
entry:
  %vport_ctx.i = alloca %struct.mlx5_hca_vport_context, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  %node_type = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 20
  %2 = ptrtoint ptr %node_type to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %node_type, align 1
  %local_dma_lkey = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 18
  %3 = ptrtoint ptr %local_dma_lkey to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %local_dma_lkey, align 8
  %num_ports = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 3
  %4 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_ports, align 8
  %phys_port_cnt = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 21
  %6 = ptrtoint ptr %phys_port_cnt to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %phys_port_cnt, align 8
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 8
  %parent = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13, i32 0, i32 0, i32 1
  %9 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %parent, align 8
  %lag_flags = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 38
  %10 = ptrtoint ptr %lag_flags to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 1, ptr %lag_flags, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp113 = icmp sgt i32 %5, 0
  br i1 %cmp113, label %do.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

do.body.lr.ph:                                    ; preds = %entry
  %port = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 22
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %do.body.lr.ph
  %i.0114 = phi i32 [ 0, %do.body.lr.ph ], [ %add, %do.body.do.body_crit_edge ]
  %11 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %port, align 8
  %mpi_lock = getelementptr %struct.mlx5_ib_port, ptr %12, i32 %i.0114, i32 1, i32 1
  tail call void @__raw_spin_lock_init(ptr noundef %mpi_lock, ptr noundef nonnull @.str.14, ptr noundef nonnull @mlx5_ib_stage_init_init.__key, i16 noundef signext 3) #16
  %13 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %port, align 8
  %roce = getelementptr %struct.mlx5_ib_port, ptr %14, i32 %i.0114, i32 3
  tail call void @__rwlock_init(ptr noundef %roce, ptr noundef nonnull @.str.16, ptr noundef nonnull @mlx5_ib_stage_init_init.__key.15) #16
  %15 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %port, align 8
  %dev15 = getelementptr %struct.mlx5_ib_port, ptr %16, i32 %i.0114, i32 3, i32 5
  %17 = ptrtoint ptr %dev15 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %dev, ptr %dev15, align 4
  %add = add nuw nsw i32 %i.0114, 1
  %18 = load ptr, ptr %port, align 8
  %native_port_num = getelementptr %struct.mlx5_ib_port, ptr %18, i32 %i.0114, i32 3, i32 6
  %19 = ptrtoint ptr %native_port_num to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %add, ptr %native_port_num, align 4
  %20 = load ptr, ptr %port, align 8
  %last_port_state = getelementptr %struct.mlx5_ib_port, ptr %20, i32 %i.0114, i32 3, i32 4
  %21 = ptrtoint ptr %last_port_state to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %last_port_state, align 4
  %22 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_ports, align 8
  %cmp = icmp slt i32 %add, %23
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.body.for.end_crit_edge

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

for.end:                                          ; preds = %do.body.for.end_crit_edge, %entry.for.end_crit_edge
  %call22 = tail call fastcc i32 @mlx5_ib_init_multiport_master(ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool.not = icmp eq i32 %call22, 0
  br i1 %tobool.not, label %if.end, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %for.end
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %vport_ctx.i) #16
  %24 = call ptr @memset(ptr %vport_ctx.i, i32 255, i32 80)
  %has_smi17.i = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %vport_ctx.i, i32 0, i32 2
  %arrayidx.i = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 40, i32 0
  %25 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %arrayidx.i, align 2
  %26 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mdev1, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %27, i32 0, i32 8
  %28 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %caps.i, align 8
  %add.ptr.i = getelementptr i32, ptr %29, i32 13
  %30 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr.i, align 4
  %32 = and i32 %31, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp2.i = icmp eq i32 %32, 0
  br i1 %cmp2.i, label %if.then.i, label %if.end.for.inc.i_crit_edge

if.end.for.inc.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %if.end
  %33 = and i32 %31, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.i = icmp eq i32 %33, 0
  br i1 %tobool.not.i, label %if.then.i.for.inc.sink.split.i_crit_edge, label %if.then12.i

if.then.i.for.inc.sink.split.i_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.sink.split.i

if.then12.i:                                      ; preds = %if.then.i
  %call.i = call i32 @mlx5_query_hca_vport_context(ptr noundef %27, i8 noundef zeroext 0, i8 noundef zeroext 1, i16 noundef zeroext 0, ptr noundef nonnull %vport_ctx.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool14.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool14.not.i, label %if.end.i, label %if.then12.i.set_has_smi_cap.exit_crit_edge

if.then12.i.set_has_smi_cap.exit_crit_edge:       ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %set_has_smi_cap.exit

if.end.i:                                         ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #18
  %34 = ptrtoint ptr %has_smi17.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %has_smi17.i, align 1, !range !402
  br label %for.inc.sink.split.i

for.inc.sink.split.i:                             ; preds = %if.end.i, %if.then.i.for.inc.sink.split.i_crit_edge
  %.sink.i = phi i8 [ %35, %if.end.i ], [ 1, %if.then.i.for.inc.sink.split.i_crit_edge ]
  %36 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %.sink.i, ptr %arrayidx.i, align 2
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.inc.sink.split.i, %if.end.for.inc.i_crit_edge
  %arrayidx.1.i = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 40, i32 1
  %37 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %arrayidx.1.i, align 2
  %38 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mdev1, align 8
  %caps.1.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %39, i32 0, i32 8
  %40 = ptrtoint ptr %caps.1.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %caps.1.i, align 8
  %add.ptr.1.i = getelementptr i32, ptr %41, i32 13
  %42 = ptrtoint ptr %add.ptr.1.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %add.ptr.1.i, align 4
  %44 = and i32 %43, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp2.1.i = icmp eq i32 %44, 0
  br i1 %cmp2.1.i, label %if.then.1.i, label %for.inc.i.if.end26_crit_edge

for.inc.i.if.end26_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.then.1.i:                                      ; preds = %for.inc.i
  %45 = and i32 %43, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool.not.1.i = icmp eq i32 %45, 0
  br i1 %tobool.not.1.i, label %if.then.1.i.if.end26.sink.split_crit_edge, label %if.then12.1.i

if.then.1.i.if.end26.sink.split_crit_edge:        ; preds = %if.then.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26.sink.split

if.then12.1.i:                                    ; preds = %if.then.1.i
  %call.1.i = call i32 @mlx5_query_hca_vport_context(ptr noundef %39, i8 noundef zeroext 0, i8 noundef zeroext 2, i16 noundef zeroext 0, ptr noundef nonnull %vport_ctx.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.1.i)
  %tobool14.not.1.i = icmp eq i32 %call.1.i, 0
  br i1 %tobool14.not.1.i, label %if.end.1.i, label %if.then12.1.i.set_has_smi_cap.exit_crit_edge

if.then12.1.i.set_has_smi_cap.exit_crit_edge:     ; preds = %if.then12.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %set_has_smi_cap.exit

if.end.1.i:                                       ; preds = %if.then12.1.i
  call void @__sanitizer_cov_trace_pc() #18
  %46 = ptrtoint ptr %has_smi17.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %has_smi17.i, align 1, !range !402
  br label %if.end26.sink.split

set_has_smi_cap.exit:                             ; preds = %if.then12.1.i.set_has_smi_cap.exit_crit_edge, %if.then12.i.set_has_smi_cap.exit_crit_edge
  %port.046.lcssa.i = phi i32 [ 1, %if.then12.i.set_has_smi_cap.exit_crit_edge ], [ 2, %if.then12.1.i.set_has_smi_cap.exit_crit_edge ]
  %call.lcssa.i = phi i32 [ %call.i, %if.then12.i.set_has_smi_cap.exit_crit_edge ], [ %call.1.i, %if.then12.1.i.set_has_smi_cap.exit_crit_edge ]
  %48 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %49 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 2
  %51 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 68
  %53 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %pid.i, align 8
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %48, ptr noundef nonnull @.str.40, ptr noundef nonnull @.str.41, i32 noundef 2775, i32 noundef %54, i32 noundef %port.046.lcssa.i, i32 noundef %call.lcssa.i) #20
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %vport_ctx.i) #16
  br label %err_mp

if.end26.sink.split:                              ; preds = %if.end.1.i, %if.then.1.i.if.end26.sink.split_crit_edge
  %.sink = phi i8 [ %47, %if.end.1.i ], [ 1, %if.then.1.i.if.end26.sink.split_crit_edge ]
  %55 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %.sink, ptr %arrayidx.1.i, align 2
  br label %if.end26

if.end26:                                         ; preds = %if.end26.sink.split, %for.inc.i.if.end26_crit_edge
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %vport_ctx.i) #16
  %pkey_table_len = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 41
  %56 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %mdev1, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %57, i32 0, i32 8
  %58 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %59, i32 13
  %60 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %add.ptr.i.i.i, align 4
  %62 = and i32 %61, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %.not.i.i = icmp eq i32 %62, 0
  %63 = and i32 %61, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %63)
  %switch.selectcmp.i.i.i.i = icmp eq i32 %63, 256
  %..i.i = select i1 %switch.selectcmp.i.i.i.i, i32 2, i32 1
  %retval.0.i.i = select i1 %.not.i.i, i32 0, i32 %..i.i
  %64 = zext i32 %retval.0.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %64, ptr @__sancov_gen_cov_switch_values.163)
  switch i32 %retval.0.i.i, label %if.end26.err_mp_crit_edge [
    i32 0, label %mlx5_query_max_pkeys.exit
    i32 1, label %if.end26.mlx5_query_max_pkeys.exit.thread_crit_edge
    i32 2, label %if.end26.mlx5_query_max_pkeys.exit.thread_crit_edge115
  ]

if.end26.mlx5_query_max_pkeys.exit.thread_crit_edge115: ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_query_max_pkeys.exit.thread

if.end26.mlx5_query_max_pkeys.exit.thread_crit_edge: ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_query_max_pkeys.exit.thread

if.end26.err_mp_crit_edge:                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_mp

mlx5_query_max_pkeys.exit.thread:                 ; preds = %if.end26.mlx5_query_max_pkeys.exit.thread_crit_edge, %if.end26.mlx5_query_max_pkeys.exit.thread_crit_edge115
  %add.ptr.i95 = getelementptr i32, ptr %59, i32 12
  %65 = ptrtoint ptr %add.ptr.i95 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %add.ptr.i95, align 4
  %and.i = and i32 %66, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and.i)
  %cmp.i.i = icmp ugt i32 %and.i, 5
  %shl.i.i = shl i32 128, %and.i
  %conv.i.i = trunc i32 %shl.i.i to i16
  %retval.0.i10.i = select i1 %cmp.i.i, i16 0, i16 %conv.i.i
  %67 = ptrtoint ptr %pkey_table_len to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 %retval.0.i10.i, ptr %pkey_table_len, align 2
  br label %if.end31

mlx5_query_max_pkeys.exit:                        ; preds = %if.end26
  %call3.i = call i32 @mlx5_query_mad_ifc_max_pkeys(ptr noundef %dev, ptr noundef %pkey_table_len) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool29.not = icmp eq i32 %call3.i, 0
  br i1 %tobool29.not, label %mlx5_query_max_pkeys.exit.if.end31_crit_edge, label %mlx5_query_max_pkeys.exit.err_mp_crit_edge

mlx5_query_max_pkeys.exit.err_mp_crit_edge:       ; preds = %mlx5_query_max_pkeys.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_mp

mlx5_query_max_pkeys.exit.if.end31_crit_edge:     ; preds = %mlx5_query_max_pkeys.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.end31:                                         ; preds = %mlx5_query_max_pkeys.exit.if.end31_crit_edge, %mlx5_query_max_pkeys.exit.thread
  %68 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %mdev1, align 8
  %caps.i98 = getelementptr inbounds %struct.mlx5_core_dev, ptr %69, i32 0, i32 8
  %70 = ptrtoint ptr %caps.i98 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %caps.i98, align 8
  %add.ptr.i99 = getelementptr i32, ptr %71, i32 13
  %72 = ptrtoint ptr %add.ptr.i99 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %add.ptr.i99, align 4
  %74 = and i32 %73, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %.not = icmp eq i32 %74, 0
  br i1 %.not, label %if.then34, label %if.end31.if.end35_crit_edge

if.end31.if.end35_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end35

if.then34:                                        ; preds = %if.end31
  %is_switch.i.i.i = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 19
  %75 = ptrtoint ptr %is_switch.i.i.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %bf.load.i.i.i = load i8, ptr %is_switch.i.i.i, align 4
  %76 = xor i8 %bf.load.i.i.i, -1
  %77 = lshr i8 %76, 7
  %.not.i.i101 = zext i8 %77 to i32
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %if.then34
  %bf.load.i.i9.i = phi i8 [ %bf.load.i.i9.pr.i, %for.body.i ], [ %bf.load.i.i.i, %if.then34 ]
  %port.0.i = phi i32 [ %inc.i, %for.body.i ], [ %.not.i.i101, %if.then34 ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.load.i.i9.i)
  %tobool.i.i.i = icmp slt i8 %bf.load.i.i9.i, 0
  br i1 %tobool.i.i.i, label %for.cond.i.rdma_end_port.exit.i_crit_edge, label %cond.false.i.i

for.cond.i.rdma_end_port.exit.i_crit_edge:        ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rdma_end_port.exit.i

cond.false.i.i:                                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  %78 = ptrtoint ptr %phys_port_cnt to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %phys_port_cnt, align 8
  br label %rdma_end_port.exit.i

rdma_end_port.exit.i:                             ; preds = %cond.false.i.i, %for.cond.i.rdma_end_port.exit.i_crit_edge
  %cond.i.i = phi i32 [ %79, %cond.false.i.i ], [ 0, %for.cond.i.rdma_end_port.exit.i_crit_edge ]
  %cmp.not.i = icmp ugt i32 %port.0.i, %cond.i.i
  br i1 %cmp.not.i, label %rdma_end_port.exit.i.if.end35_crit_edge, label %for.body.i

rdma_end_port.exit.i.if.end35_crit_edge:          ; preds = %rdma_end_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end35

for.body.i:                                       ; preds = %rdma_end_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %call3.i102 = call i32 @mlx5_query_ext_port_caps(ptr noundef %dev, i32 noundef %port.0.i) #16
  %inc.i = add i32 %port.0.i, 1
  %80 = ptrtoint ptr %is_switch.i.i.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %bf.load.i.i9.pr.i = load i8, ptr %is_switch.i.i.i, align 4
  br label %for.cond.i

if.end35:                                         ; preds = %rdma_end_port.exit.i.if.end35_crit_edge, %if.end31.if.end35_crit_edge
  %call36 = call i32 @mlx5_comp_vectors_count(ptr noundef %1) #16
  %num_comp_vectors = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 12
  %81 = ptrtoint ptr %num_comp_vectors to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %call36, ptr %num_comp_vectors, align 4
  %cap_mask_mutex = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 4
  call void @__mutex_init(ptr noundef %cap_mask_mutex, ptr noundef nonnull @.str.18, ptr noundef nonnull @mlx5_ib_stage_init_init.__key.17) #16
  %qp_list = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 21
  %82 = ptrtoint ptr %qp_list to i32
  call void @__asan_store4_noabort(i32 %82)
  store volatile ptr %qp_list, ptr %qp_list, align 4
  %prev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 21, i32 1
  %83 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %qp_list, ptr %prev.i, align 4
  %reset_flow_resource_lock = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 20
  call void @__raw_spin_lock_init(ptr noundef %reset_flow_resource_lock, ptr noundef nonnull @.str.20, ptr noundef nonnull @mlx5_ib_stage_init_init.__key.19, i16 noundef signext 3) #16
  %odp_mkeys = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 17
  call void @__raw_spin_lock_init(ptr noundef %odp_mkeys, ptr noundef nonnull @.str.42, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #16
  %xa_flags.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 17, i32 1
  %84 = ptrtoint ptr %xa_flags.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 0, ptr %xa_flags.i.i, align 4
  %xa_head.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 17, i32 2
  %85 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr null, ptr %xa_head.i.i, align 4
  %sig_mrs = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 39
  call void @__raw_spin_lock_init(ptr noundef %sig_mrs, ptr noundef nonnull @.str.42, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #16
  %xa_flags.i.i103 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 39, i32 1
  %86 = ptrtoint ptr %xa_flags.i.i103 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 0, ptr %xa_flags.i.i103, align 4
  %xa_head.i.i104 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 39, i32 2
  %87 = ptrtoint ptr %xa_head.i.i104 to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr null, ptr %xa_head.i.i104, align 4
  %mkey_var = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 9
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %mkey_var, i32 noundef 4) #16
  %88 = ptrtoint ptr %mkey_var to i32
  call void @__asan_store4_noabort(i32 %88)
  store volatile i32 0, ptr %mkey_var, align 4
  %dm = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 32
  %lock = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 32, i32 1
  call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.22, ptr noundef nonnull @mlx5_ib_stage_init_init.__key.21, i16 noundef signext 3) #16
  %89 = ptrtoint ptr %dm to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %1, ptr %dm, align 8
  br label %cleanup

err_mp:                                           ; preds = %mlx5_query_max_pkeys.exit.err_mp_crit_edge, %if.end26.err_mp_crit_edge, %set_has_smi_cap.exit
  %err.0 = phi i32 [ %call.lcssa.i, %set_has_smi_cap.exit ], [ %call3.i, %mlx5_query_max_pkeys.exit.err_mp_crit_edge ], [ -22, %if.end26.err_mp_crit_edge ]
  call fastcc void @mlx5_ib_cleanup_multiport_master(ptr noundef %dev)
  br label %cleanup

cleanup:                                          ; preds = %err_mp, %if.end35, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %err_mp ], [ 0, %if.end35 ], [ %call22, %for.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_init_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @mlx5_ib_cleanup_multiport_master(ptr noundef %dev)
  %xa_head.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 17, i32 2
  %0 = ptrtoint ptr %xa_head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xa_head.i, align 4
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %entry.if.end_crit_edge, label %do.end, !prof !411

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3643, i32 noundef 9, ptr noundef null) #16
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %cap_mask_mutex = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 4
  tail call void @mutex_destroy(ptr noundef %cap_mask_mutex) #16
  %xa_head.i93 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 39, i32 2
  %2 = ptrtoint ptr %xa_head.i93 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %xa_head.i93, align 4
  %cmp.i94 = icmp eq ptr %3, null
  br i1 %cmp.i94, label %if.end.if.end45_crit_edge, label %do.end39, !prof !411

if.end.if.end45_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

do.end39:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3645, i32 noundef 9, ptr noundef null) #16
  br label %if.end45

if.end45:                                         ; preds = %do.end39, %if.end.if.end45_crit_edge
  %memic_alloc_pages = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 32, i32 2
  %call.i = tail call i32 @_find_first_bit_be(ptr noundef %memic_alloc_pages, i32 noundef 256) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %call.i)
  %cmp4.i = icmp eq i32 %call.i, 256
  br i1 %cmp4.i, label %if.end45.if.end78_crit_edge, label %do.end72, !prof !411

if.end45.if.end78_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end78

do.end72:                                         ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3646, i32 noundef 9, ptr noundef null) #16
  br label %if.end78

if.end78:                                         ; preds = %do.end72, %if.end45.if.end78_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_fs_init(ptr noundef) #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_fs_cleanup(ptr nocapture noundef readonly %dev) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %flow_db = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 19
  %0 = ptrtoint ptr %flow_db to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %flow_db, align 8
  tail call void @kfree(ptr noundef %1) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_caps_init(ptr noundef %dev) #0 align 64 {
entry:
  %tmp.i.i = alloca i64, align 8
  %in.i.i = alloca %struct.mlx5_reg_node_desc, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %3, i32 16
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr, align 4
  %6 = and i32 %5, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_ipoib_enhanced_ops) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %coredev_type.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %coredev_type.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %coredev_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i = icmp eq i32 %8, 0
  br i1 %cmp.i, label %if.then2, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_sriov_ops) #16
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %9 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %caps, align 8
  %add.ptr10 = getelementptr i32, ptr %10, i32 16
  %11 = ptrtoint ptr %add.ptr10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr10, align 4
  %shr11 = lshr i32 %12, 20
  %13 = trunc i32 %shr11 to i8
  %conv = and i8 %13, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %conv)
  %switch.selectcmp.i = icmp eq i8 %conv, 1
  %switch.select.i = select i1 %switch.selectcmp.i, i8 32, i8 96
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %conv)
  %switch.selectcmp2.i = icmp eq i8 %conv, 2
  %switch.select3.i = select i1 %switch.selectcmp2.i, i8 0, i8 %switch.select.i
  %umr_fence = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 29
  %14 = ptrtoint ptr %umr_fence to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %switch.select3.i, ptr %umr_fence, align 4
  %15 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %caps, align 8
  %add.ptr19 = getelementptr i32, ptr %16, i32 17
  %17 = ptrtoint ptr %add.ptr19 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %add.ptr19, align 4
  %19 = and i32 %18, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool22.not = icmp eq i32 %19, 0
  br i1 %tobool22.not, label %if.end4.if.end25_crit_edge, label %if.then23

if.end4.if.end25_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then23:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_mw_ops) #16
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end4.if.end25_crit_edge
  %20 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %caps, align 8
  %add.ptr31 = getelementptr i32, ptr %21, i32 17
  %22 = ptrtoint ptr %add.ptr31 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %add.ptr31, align 4
  %24 = and i32 %23, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool34.not = icmp eq i32 %24, 0
  br i1 %tobool34.not, label %if.end25.if.end37_crit_edge, label %if.then35

if.end25.if.end37_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

if.then35:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_xrc_ops) #16
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end25.if.end37_crit_edge
  %arrayidx40 = getelementptr %struct.mlx5_core_dev, ptr %1, i32 0, i32 8, i32 0, i32 15
  %25 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx40, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %28)
  %tobool46.not = icmp sgt i32 %28, -1
  br i1 %tobool46.not, label %lor.lhs.false, label %if.end37.if.then56_crit_edge

if.end37.if.then56_crit_edge:                     ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then56

lor.lhs.false:                                    ; preds = %if.end37
  %29 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mdev1, align 8
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, ptr %30, i32 0, i32 8
  %31 = ptrtoint ptr %caps48 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %caps48, align 8
  %add.ptr53 = getelementptr i64, ptr %32, i32 16
  %33 = ptrtoint ptr %add.ptr53 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %add.ptr53, align 8
  %and54 = and i64 %34, 256
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and54)
  %tobool55.not = icmp eq i64 %and54, 0
  br i1 %tobool55.not, label %lor.lhs.false.if.end58_crit_edge, label %lor.lhs.false.if.then56_crit_edge

lor.lhs.false.if.then56_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then56

lor.lhs.false.if.end58_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end58

if.then56:                                        ; preds = %lor.lhs.false.if.then56_crit_edge, %if.end37.if.then56_crit_edge
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_dm_ops) #16
  br label %if.end58

if.end58:                                         ; preds = %if.then56, %lor.lhs.false.if.end58_crit_edge
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_ops) #16
  %driver_def = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 29
  %35 = ptrtoint ptr %driver_def to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @mlx5_ib_defs, ptr %driver_def, align 4
  %node_desc.i = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %in.i.i) #16
  %36 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mdev1, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %37, i32 0, i32 8
  %38 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %39, i32 13
  %40 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %add.ptr.i.i.i, align 4
  %42 = and i32 %41, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %.not.i.i = icmp eq i32 %42, 0
  br i1 %.not.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i.i = tail call i32 @mlx5_query_mad_ifc_node_desc(ptr noundef %dev, ptr noundef %node_desc.i) #16
  br label %mlx5_query_node_desc.exit.i

if.end.i.i:                                       ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  %43 = call ptr @memset(ptr %in.i.i, i32 0, i32 64)
  %call2.i.i = call i32 @mlx5_core_access_reg(ptr noundef %37, ptr noundef nonnull %in.i.i, i32 noundef 64, ptr noundef %node_desc.i, i32 noundef 64, i16 noundef zeroext 24577, i32 noundef 0, i32 noundef 0) #16
  br label %mlx5_query_node_desc.exit.i

mlx5_query_node_desc.exit.i:                      ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %call1.i.i, %if.then.i.i ], [ %call2.i.i, %if.end.i.i ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %in.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %tobool.not.i = icmp eq i32 %retval.0.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %mlx5_query_node_desc.exit.i.cleanup_crit_edge

mlx5_query_node_desc.exit.i.cleanup_crit_edge:    ; preds = %mlx5_query_node_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %mlx5_query_node_desc.exit.i
  %44 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mdev1, align 8
  %pdev.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pdev.i, align 8
  %revision.i = getelementptr inbounds %struct.pci_dev, ptr %47, i32 0, i32 12
  %48 = ptrtoint ptr %revision.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %revision.i, align 4
  %rev_id.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %45, i32 0, i32 5
  %50 = ptrtoint ptr %rev_id.i to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %rev_id.i, align 4
  %node_guid.i = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i.i) #16
  %51 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 -1, ptr %tmp.i.i, align 8, !annotation !403
  %52 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %mdev1, align 8
  %caps.i.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %53, i32 0, i32 8
  %54 = ptrtoint ptr %caps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %caps.i.i.i.i, align 8
  %add.ptr.i.i.i.i = getelementptr i32, ptr %55, i32 13
  %56 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %58 = and i32 %57, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %.not.i.i.i = icmp eq i32 %58, 0
  %59 = and i32 %57, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %59)
  %switch.selectcmp.i.i.i.i.i = icmp eq i32 %59, 256
  %..i.i.i = select i1 %switch.selectcmp.i.i.i.i.i, i32 2, i32 1
  %retval.0.i.i.i = select i1 %.not.i.i.i, i32 0, i32 %..i.i.i
  %60 = zext i32 %retval.0.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %60, ptr @__sancov_gen_cov_switch_values.164)
  switch i32 %retval.0.i.i.i, label %if.end.i.init_node_data.exit.thread143_crit_edge [
    i32 0, label %init_node_data.exit
    i32 1, label %sw.bb2.i.i
    i32 2, label %sw.bb4.i.i
  ]

if.end.i.init_node_data.exit.thread143_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %init_node_data.exit.thread143

sw.bb2.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call3.i.i = call i32 @mlx5_query_hca_vport_node_guid(ptr noundef %53, ptr noundef nonnull %tmp.i.i) #16
  br label %sw.epilog.i.i

sw.bb4.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call6.i.i = call i32 @mlx5_query_nic_vport_node_guid(ptr noundef %53, ptr noundef nonnull %tmp.i.i) #16
  br label %sw.epilog.i.i

sw.epilog.i.i:                                    ; preds = %sw.bb4.i.i, %sw.bb2.i.i
  %err.0.i.i = phi i32 [ %call6.i.i, %sw.bb4.i.i ], [ %call3.i.i, %sw.bb2.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i.i)
  %tobool.not.i.i = icmp eq i32 %err.0.i.i, 0
  br i1 %tobool.not.i.i, label %init_node_data.exit.thread146, label %sw.epilog.i.i.init_node_data.exit.thread143_crit_edge

sw.epilog.i.i.init_node_data.exit.thread143_crit_edge: ; preds = %sw.epilog.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %init_node_data.exit.thread143

init_node_data.exit.thread146:                    ; preds = %sw.epilog.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %61 = ptrtoint ptr %tmp.i.i to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %tmp.i.i, align 8
  %63 = ptrtoint ptr %node_guid.i to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %62, ptr %node_guid.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #16
  br label %if.end64

init_node_data.exit.thread143:                    ; preds = %sw.epilog.i.i.init_node_data.exit.thread143_crit_edge, %if.end.i.init_node_data.exit.thread143_crit_edge
  %retval.0.i12.i.ph = phi i32 [ %err.0.i.i, %sw.epilog.i.i.init_node_data.exit.thread143_crit_edge ], [ -22, %if.end.i.init_node_data.exit.thread143_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #16
  br label %cleanup

init_node_data.exit:                              ; preds = %if.end.i
  %call1.i10.i = call i32 @mlx5_query_mad_ifc_node_guid(ptr noundef %dev, ptr noundef %node_guid.i) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i10.i)
  %tobool62.not = icmp eq i32 %call1.i10.i, 0
  br i1 %tobool62.not, label %init_node_data.exit.if.end64_crit_edge, label %init_node_data.exit.cleanup_crit_edge

init_node_data.exit.cleanup_crit_edge:            ; preds = %init_node_data.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

init_node_data.exit.if.end64_crit_edge:           ; preds = %init_node_data.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end64

if.end64:                                         ; preds = %init_node_data.exit.if.end64_crit_edge, %init_node_data.exit.thread146
  %64 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %mdev1, align 8
  %caps66 = getelementptr inbounds %struct.mlx5_core_dev, ptr %65, i32 0, i32 8
  %66 = ptrtoint ptr %caps66 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %caps66, align 8
  %add.ptr71 = getelementptr i32, ptr %67, i32 13
  %68 = ptrtoint ptr %add.ptr71 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %add.ptr71, align 4
  %70 = and i32 %69, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %70)
  %cmp = icmp eq i32 %70, 256
  br i1 %cmp, label %land.lhs.true, label %if.end64.if.end97_crit_edge

if.end64.if.end97_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end97

land.lhs.true:                                    ; preds = %if.end64
  %add.ptr81 = getelementptr i32, ptr %67, i32 31
  %71 = ptrtoint ptr %add.ptr81 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %add.ptr81, align 4
  %73 = and i32 %72, 1610612736
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %land.lhs.true.if.end97_crit_edge, label %do.body

land.lhs.true.if.end97_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end97

do.body:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %lb = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28
  call void @__mutex_init(ptr noundef %lb, ptr noundef nonnull @.str.46, ptr noundef nonnull @mlx5_ib_stage_caps_init.__key) #16
  br label %if.end97

if.end97:                                         ; preds = %do.body, %land.lhs.true.if.end97_crit_edge, %if.end64.if.end97_crit_edge
  %75 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %mdev1, align 8
  %caps99 = getelementptr inbounds %struct.mlx5_core_dev, ptr %76, i32 0, i32 8
  %77 = ptrtoint ptr %caps99 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %caps99, align 8
  %add.ptr104 = getelementptr i64, ptr %78, i32 16
  %79 = ptrtoint ptr %add.ptr104 to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %add.ptr104, align 8
  %and105 = and i64 %80, 8192
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and105)
  %tobool106.not = icmp eq i64 %and105, 0
  br i1 %tobool106.not, label %if.end97.if.end112_crit_edge, label %if.then107

if.end97.if.end112_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end112

if.then107:                                       ; preds = %if.end97
  %arrayidx.i = getelementptr %struct.mlx5_core_dev, ptr %76, i32 0, i32 8, i32 0, i32 19
  %81 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx.i, align 4
  %add.ptr.i = getelementptr i32, ptr %82, i32 1
  %83 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %add.ptr.i, align 4
  %conv.i = and i32 %84, 31
  %shr9.i = lshr i32 %84, 8
  %conv11.i = and i32 %shr9.i, 31
  %bar_addr.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %76, i32 0, i32 13
  %85 = ptrtoint ptr %bar_addr.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %bar_addr.i, align 8
  %conv13.i = zext i32 %86 to i64
  %add.ptr19.i = getelementptr i64, ptr %82, i32 1
  %87 = ptrtoint ptr %add.ptr19.i to i32
  call void @__asan_load8_noabort(i32 %87)
  %88 = load i64, ptr %add.ptr19.i, align 8
  %add.i = add i64 %88, %conv13.i
  %hw_start_addr.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 38, i32 2
  %89 = ptrtoint ptr %hw_start_addr.i to i32
  call void @__asan_store8_noabort(i32 %89)
  store i64 %add.i, ptr %hw_start_addr.i, align 8
  %sh_prom.i = zext i32 %conv.i to i64
  %mul.i = shl nuw nsw i64 4096, %sh_prom.i
  %shl23.i = shl nuw i32 1, %conv11.i
  %stride_size.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 38, i32 3
  %90 = ptrtoint ptr %stride_size.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %shl23.i, ptr %stride_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %mul.i)
  %cmp164.i.i.i = icmp ult i64 %mul.i, 4294967296
  br i1 %cmp164.i.i.i, label %if.then168.i.i.i, label %if.else174.i.i.i, !prof !411

if.then168.i.i.i:                                 ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #18
  %conv169.i.i.i = trunc i64 %mul.i to i32
  %div172.i.i41.i = lshr i32 %conv169.i.i.i, %conv11.i
  %conv173.i.i.i = zext i32 %div172.i.i41.i to i64
  br label %mlx5_ib_init_var_table.exit

if.else174.i.i.i:                                 ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #18
  %91 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %shl23.i, i64 %mul.i) #21, !srcloc !412
  %asmresult1.i.i.i.i = extractvalue { i64, i64 } %91, 1
  br label %mlx5_ib_init_var_table.exit

mlx5_ib_init_var_table.exit:                      ; preds = %if.else174.i.i.i, %if.then168.i.i.i
  %dividend.addr.0.i.i.i = phi i64 [ %conv173.i.i.i, %if.then168.i.i.i ], [ %asmresult1.i.i.i.i, %if.else174.i.i.i ]
  %var_table2.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 38
  %num_var_hw_entries.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 38, i32 4
  %92 = ptrtoint ptr %num_var_hw_entries.i to i32
  call void @__asan_store8_noabort(i32 %92)
  store i64 %dividend.addr.0.i.i.i, ptr %num_var_hw_entries.i, align 8
  call void @__mutex_init(ptr noundef %var_table2.i, ptr noundef nonnull @.str.121, ptr noundef nonnull @mlx5_ib_init_var_table.__key) #16
  %93 = ptrtoint ptr %num_var_hw_entries.i to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %num_var_hw_entries.i, align 8
  %conv27.i = trunc i64 %94 to i32
  %call28.i = call ptr @bitmap_zalloc(i32 noundef %conv27.i, i32 noundef 3264) #16
  %bitmap.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 38, i32 1
  %95 = ptrtoint ptr %bitmap.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %call28.i, ptr %bitmap.i, align 4
  %tobool.not.i140.not = icmp eq ptr %call28.i, null
  br i1 %tobool.not.i140.not, label %mlx5_ib_init_var_table.exit.cleanup_crit_edge, label %mlx5_ib_init_var_table.exit.if.end112_crit_edge

mlx5_ib_init_var_table.exit.if.end112_crit_edge:  ; preds = %mlx5_ib_init_var_table.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end112

mlx5_ib_init_var_table.exit.cleanup_crit_edge:    ; preds = %mlx5_ib_init_var_table.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end112:                                        ; preds = %mlx5_ib_init_var_table.exit.if.end112_crit_edge, %if.end97.if.end112_crit_edge
  %use_cq_dim = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 19
  %96 = ptrtoint ptr %use_cq_dim to i32
  call void @__asan_load1_noabort(i32 %96)
  %bf.load = load i8, ptr %use_cq_dim, align 4
  %bf.set = or i8 %bf.load, 32
  store i8 %bf.set, ptr %use_cq_dim, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end112, %mlx5_ib_init_var_table.exit.cleanup_crit_edge, %init_node_data.exit.cleanup_crit_edge, %init_node_data.exit.thread143, %mlx5_query_node_desc.exit.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end112 ], [ %call1.i10.i, %init_node_data.exit.cleanup_crit_edge ], [ -12, %mlx5_ib_init_var_table.exit.cleanup_crit_edge ], [ %retval.0.i12.i.ph, %init_node_data.exit.thread143 ], [ %retval.0.i.i, %mlx5_query_node_desc.exit.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_caps_cleanup(ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bitmap = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 38, i32 1
  %0 = ptrtoint ptr %bitmap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bitmap, align 4
  tail call void @bitmap_free(ptr noundef %1) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_raw_eth_non_default_cb(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_port_rep_ops) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_roce_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr, align 4
  %6 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %6)
  %switch.selectcmp.i = icmp eq i32 %6, 256
  br i1 %switch.selectcmp.i, label %if.then, label %entry.cleanup11_crit_edge

entry.cleanup11_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup11

if.then:                                          ; preds = %entry
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_common_roce_ops) #16
  %7 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mdev1, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %10, i32 48
  %11 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr.i.i.i, align 4
  %13 = and i32 %12, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %.not.i = icmp eq i32 %13, 0
  %shr.i = lshr i32 %12, 16
  %and.i = and i32 %shr.i, 255
  %and.i.op = add nsw i32 %and.i, -1
  %sub = select i1 %.not.i, i32 0, i32 %and.i.op
  %port.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 22
  %14 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %port.i, align 8
  %nb.i = getelementptr %struct.mlx5_ib_port, ptr %15, i32 %sub, i32 3, i32 2
  %16 = ptrtoint ptr %nb.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @mlx5_netdev_event, ptr %nb.i, align 4
  %17 = load ptr, ptr %port.i, align 8
  %nb4.i = getelementptr %struct.mlx5_ib_port, ptr %17, i32 %sub, i32 3, i32 2
  %call.i = tail call i32 @register_netdevice_notifier(ptr noundef %nb4.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end, label %mlx5_add_netdev_notifier.exit

mlx5_add_netdev_notifier.exit:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %port.i, align 8
  %nb8.i = getelementptr %struct.mlx5_ib_port, ptr %19, i32 %sub, i32 3, i32 2
  %20 = ptrtoint ptr %nb8.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %nb8.i, align 4
  br label %cleanup11

if.end:                                           ; preds = %if.then
  %is_rep.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 5
  %21 = ptrtoint ptr %is_rep.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %bf.load.i = load i8, ptr %is_rep.i, align 8
  %22 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i25 = icmp eq i8 %22, 0
  br i1 %tobool.not.i25, label %land.lhs.true.i, label %if.end.if.end3.i_crit_edge

if.end.if.end3.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3.i

land.lhs.true.i:                                  ; preds = %if.end
  %profile.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 27
  %23 = ptrtoint ptr %profile.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %profile.i, align 8
  %cmp.not.i = icmp eq ptr %24, @raw_eth_profile
  br i1 %cmp.not.i, label %land.lhs.true.i.if.end3.i_crit_edge, label %if.then.i27

land.lhs.true.i.if.end3.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3.i

if.then.i27:                                      ; preds = %land.lhs.true.i
  %25 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mdev1, align 8
  %call.i26 = tail call i32 @mlx5_nic_vport_enable_roce(ptr noundef %26) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i26)
  %tobool1.not.i = icmp eq i32 %call.i26, 0
  br i1 %tobool1.not.i, label %if.then.i27.if.end3.i_crit_edge, label %if.then.i27.cleanup_crit_edge

if.then.i27.cleanup_crit_edge:                    ; preds = %if.then.i27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i27.if.end3.i_crit_edge:                  ; preds = %if.then.i27
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then.i27.if.end3.i_crit_edge, %land.lhs.true.i.if.end3.i_crit_edge, %if.end.if.end3.i_crit_edge
  %27 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mdev1, align 8
  %call.i.i = tail call ptr @mlx5_get_flow_namespace(ptr noundef %28, i32 noundef 1) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end3.i.cleanup11_crit_edge, label %lor.lhs.false.i.i

if.end3.i.cleanup11_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup11

lor.lhs.false.i.i:                                ; preds = %if.end3.i
  %call2.i.i = tail call zeroext i1 @mlx5_lag_is_active(ptr noundef %28) #16
  br i1 %call2.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.cleanup11_crit_edge

lor.lhs.false.i.i.cleanup11_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup11

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %call3.i.i = tail call i32 @mlx5_cmd_create_vport_lag(ptr noundef %28) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end6.i.i, label %if.end.i.i.err_disable_roce.i_crit_edge

if.end.i.i.err_disable_roce.i_crit_edge:          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_disable_roce.i

if.end6.i.i:                                      ; preds = %if.end.i.i
  %call7.i.i = tail call ptr @mlx5_create_lag_demux_flow_table(ptr noundef nonnull %call.i.i, i32 noundef 0, i32 noundef 0) #16
  %cmp.i.i.i = icmp ugt ptr %call7.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %mlx5_eth_lag_init.exit.i, label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %flow_db.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 19
  %29 = ptrtoint ptr %flow_db.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %flow_db.i.i, align 8
  %lag_demux_ft.i.i = getelementptr inbounds %struct.mlx5_ib_flow_db, ptr %30, i32 0, i32 8
  %31 = ptrtoint ptr %lag_demux_ft.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call7.i.i, ptr %lag_demux_ft.i.i, align 4
  %32 = ptrtoint ptr %is_rep.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load.i.i = load i8, ptr %is_rep.i, align 8
  %bf.set.i.i = or i8 %bf.load.i.i, 32
  store i8 %bf.set.i.i, ptr %is_rep.i, align 8
  br label %cleanup11

mlx5_eth_lag_init.exit.i:                         ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %33 = ptrtoint ptr %call7.i.i to i32
  %call12.i.i = tail call i32 @mlx5_cmd_destroy_vport_lag(ptr noundef %28) #16
  br label %err_disable_roce.i

err_disable_roce.i:                               ; preds = %mlx5_eth_lag_init.exit.i, %if.end.i.i.err_disable_roce.i_crit_edge
  %retval.0.i34.i = phi i32 [ %33, %mlx5_eth_lag_init.exit.i ], [ %call3.i.i, %if.end.i.i.err_disable_roce.i_crit_edge ]
  %34 = ptrtoint ptr %is_rep.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %bf.load9.i = load i8, ptr %is_rep.i, align 8
  %35 = and i8 %bf.load9.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool12.not.i = icmp eq i8 %35, 0
  br i1 %tobool12.not.i, label %land.lhs.true13.i, label %err_disable_roce.i.mlx5_enable_eth.exit_crit_edge

err_disable_roce.i.mlx5_enable_eth.exit_crit_edge: ; preds = %err_disable_roce.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_enable_eth.exit

land.lhs.true13.i:                                ; preds = %err_disable_roce.i
  %profile14.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 27
  %36 = ptrtoint ptr %profile14.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %profile14.i, align 8
  %cmp15.not.i = icmp eq ptr %37, @raw_eth_profile
  br i1 %cmp15.not.i, label %land.lhs.true13.i.mlx5_enable_eth.exit_crit_edge, label %if.then16.i

land.lhs.true13.i.mlx5_enable_eth.exit_crit_edge: ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_enable_eth.exit

if.then16.i:                                      ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mdev1, align 8
  %call18.i = tail call i32 @mlx5_nic_vport_disable_roce(ptr noundef %39) #16
  br label %mlx5_enable_eth.exit

mlx5_enable_eth.exit:                             ; preds = %if.then16.i, %land.lhs.true13.i.mlx5_enable_eth.exit_crit_edge, %err_disable_roce.i.mlx5_enable_eth.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i34.i)
  %tobool7.not = icmp eq i32 %retval.0.i34.i, 0
  br i1 %tobool7.not, label %mlx5_enable_eth.exit.cleanup11_crit_edge, label %mlx5_enable_eth.exit.cleanup_crit_edge

mlx5_enable_eth.exit.cleanup_crit_edge:           ; preds = %mlx5_enable_eth.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mlx5_enable_eth.exit.cleanup11_crit_edge:         ; preds = %mlx5_enable_eth.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup11

cleanup:                                          ; preds = %mlx5_enable_eth.exit.cleanup_crit_edge, %if.then.i27.cleanup_crit_edge
  %retval.0.i2840 = phi i32 [ %retval.0.i34.i, %mlx5_enable_eth.exit.cleanup_crit_edge ], [ %call.i26, %if.then.i27.cleanup_crit_edge ]
  %40 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %port.i, align 8
  %nb.i30 = getelementptr %struct.mlx5_ib_port, ptr %41, i32 %sub, i32 3, i32 2
  %42 = ptrtoint ptr %nb.i30 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %nb.i30, align 4
  %tobool.not.i31 = icmp eq ptr %43, null
  br i1 %tobool.not.i31, label %cleanup.cleanup11_crit_edge, label %if.then.i34

cleanup.cleanup11_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup11

if.then.i34:                                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  %call.i32 = tail call i32 @unregister_netdevice_notifier(ptr noundef %nb.i30) #16
  %44 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %port.i, align 8
  %nb8.i33 = getelementptr %struct.mlx5_ib_port, ptr %45, i32 %sub, i32 3, i32 2
  %46 = ptrtoint ptr %nb8.i33 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %nb8.i33, align 4
  br label %cleanup11

cleanup11:                                        ; preds = %if.then.i34, %cleanup.cleanup11_crit_edge, %mlx5_enable_eth.exit.cleanup11_crit_edge, %if.end11.i.i, %lor.lhs.false.i.i.cleanup11_crit_edge, %if.end3.i.cleanup11_crit_edge, %mlx5_add_netdev_notifier.exit, %entry.cleanup11_crit_edge
  %retval.0 = phi i32 [ %call.i, %mlx5_add_netdev_notifier.exit ], [ 0, %mlx5_enable_eth.exit.cleanup11_crit_edge ], [ 0, %entry.cleanup11_crit_edge ], [ %retval.0.i2840, %cleanup.cleanup11_crit_edge ], [ %retval.0.i2840, %if.then.i34 ], [ 0, %if.end11.i.i ], [ 0, %lor.lhs.false.i.i.cleanup11_crit_edge ], [ 0, %if.end3.i.cleanup11_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_roce_cleanup(ptr nocapture noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr, align 4
  %6 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %6)
  %switch.selectcmp.i = icmp eq i32 %6, 256
  br i1 %switch.selectcmp.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %lag_active.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 5
  %7 = ptrtoint ptr %lag_active.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load.i.i = load i8, ptr %lag_active.i.i, align 8
  %8 = and i8 %bf.load.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i.i, label %if.then.mlx5_eth_lag_cleanup.exit.i_crit_edge, label %if.then.i.i

if.then.mlx5_eth_lag_cleanup.exit.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_eth_lag_cleanup.exit.i

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %bf.clear4.i.i = and i8 %bf.load.i.i, -33
  %9 = ptrtoint ptr %lag_active.i.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %bf.clear4.i.i, ptr %lag_active.i.i, align 8
  %flow_db.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 19
  %10 = ptrtoint ptr %flow_db.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %flow_db.i.i, align 8
  %lag_demux_ft.i.i = getelementptr inbounds %struct.mlx5_ib_flow_db, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %lag_demux_ft.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %lag_demux_ft.i.i, align 4
  %call.i.i = tail call i32 @mlx5_destroy_flow_table(ptr noundef %13) #16
  %14 = ptrtoint ptr %flow_db.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %flow_db.i.i, align 8
  %lag_demux_ft6.i.i = getelementptr inbounds %struct.mlx5_ib_flow_db, ptr %15, i32 0, i32 8
  %16 = ptrtoint ptr %lag_demux_ft6.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %lag_demux_ft6.i.i, align 4
  %call7.i.i = tail call i32 @mlx5_cmd_destroy_vport_lag(ptr noundef %1) #16
  br label %mlx5_eth_lag_cleanup.exit.i

mlx5_eth_lag_cleanup.exit.i:                      ; preds = %if.then.i.i, %if.then.mlx5_eth_lag_cleanup.exit.i_crit_edge
  %17 = ptrtoint ptr %lag_active.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load.i = load i8, ptr %lag_active.i.i, align 8
  %18 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i = icmp eq i8 %18, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %mlx5_eth_lag_cleanup.exit.i.mlx5_disable_eth.exit_crit_edge

mlx5_eth_lag_cleanup.exit.i.mlx5_disable_eth.exit_crit_edge: ; preds = %mlx5_eth_lag_cleanup.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_disable_eth.exit

land.lhs.true.i:                                  ; preds = %mlx5_eth_lag_cleanup.exit.i
  %profile.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 27
  %19 = ptrtoint ptr %profile.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %profile.i, align 8
  %cmp.not.i = icmp eq ptr %20, @raw_eth_profile
  br i1 %cmp.not.i, label %land.lhs.true.i.mlx5_disable_eth.exit_crit_edge, label %if.then.i

land.lhs.true.i.mlx5_disable_eth.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_disable_eth.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mdev1, align 8
  %call.i = tail call i32 @mlx5_nic_vport_disable_roce(ptr noundef %22) #16
  br label %mlx5_disable_eth.exit

mlx5_disable_eth.exit:                            ; preds = %if.then.i, %land.lhs.true.i.mlx5_disable_eth.exit_crit_edge, %mlx5_eth_lag_cleanup.exit.i.mlx5_disable_eth.exit_crit_edge
  %23 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mdev1, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %24, i32 0, i32 8
  %25 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %26, i32 48
  %27 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %add.ptr.i.i.i, align 4
  %29 = and i32 %28, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %.not.i = icmp eq i32 %29, 0
  %shr.i = lshr i32 %28, 16
  %and.i = and i32 %shr.i, 255
  %and.i.op = add nsw i32 %and.i, -1
  %sub = select i1 %.not.i, i32 0, i32 %and.i.op
  %port.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 22
  %30 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %port.i, align 8
  %nb.i = getelementptr %struct.mlx5_ib_port, ptr %31, i32 %sub, i32 3, i32 2
  %32 = ptrtoint ptr %nb.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %nb.i, align 4
  %tobool.not.i7 = icmp eq ptr %33, null
  br i1 %tobool.not.i7, label %mlx5_disable_eth.exit.if.end_crit_edge, label %if.then.i9

mlx5_disable_eth.exit.if.end_crit_edge:           ; preds = %mlx5_disable_eth.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i9:                                       ; preds = %mlx5_disable_eth.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call.i8 = tail call i32 @unregister_netdevice_notifier(ptr noundef %nb.i) #16
  %34 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %port.i, align 8
  %nb8.i = getelementptr %struct.mlx5_ib_port, ptr %35, i32 %sub, i32 3, i32 2
  %36 = ptrtoint ptr %nb8.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %nb8.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.i9, %mlx5_disable_eth.exit.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_init_qp_table(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_cleanup_qp_table(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_init_srq_table(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_cleanup_srq_table(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_dev_res_init(ptr noundef %dev) #0 align 64 {
entry:
  %attr = alloca %struct.ib_srq_init_attr, align 4
  %cq_attr = alloca %struct.ib_cq_init_attr, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %devr1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %attr) #16
  %0 = getelementptr inbounds %struct.ib_srq_init_attr, ptr %attr, i32 0, i32 2
  %1 = getelementptr inbounds %struct.ib_srq_init_attr, ptr %attr, i32 0, i32 2, i32 1
  %2 = getelementptr inbounds %struct.ib_srq_init_attr, ptr %attr, i32 0, i32 3
  %3 = getelementptr inbounds %struct.ib_srq_init_attr, ptr %attr, i32 0, i32 4
  %4 = call ptr @memset(ptr %attr, i32 255, i32 32)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %cq_attr) #16
  %5 = call ptr @memcpy(ptr %cq_attr, ptr @__const.mlx5_ib_dev_res_init.cq_attr, i32 12)
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %6 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %9, i32 17
  %10 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %add.ptr, align 4
  %12 = and i32 %11, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not = icmp eq i32 %12, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @__ib_alloc_pd(ptr noundef %dev, i32 noundef 0, ptr noundef nonnull @.str.5) #16
  %p0 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 3
  %13 = ptrtoint ptr %p0 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call, ptr %p0, align 4
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %call to i32
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %call8 = call ptr @__ib_create_cq(ptr noundef %dev, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef nonnull %cq_attr, ptr noundef nonnull @.str.5) #16
  %15 = ptrtoint ptr %devr1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call8, ptr %devr1, align 4
  %cmp.i118 = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i118, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %call8 to i32
  br label %error1

if.end14:                                         ; preds = %if.end7
  %17 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mdev, align 8
  %xrcdn0 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 1
  %call16 = call i32 @mlx5_cmd_xrcd_alloc(ptr noundef %18, ptr noundef %xrcdn0, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %if.end14.error2_crit_edge

if.end14.error2_crit_edge:                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %error2

if.end19:                                         ; preds = %if.end14
  %19 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mdev, align 8
  %xrcdn1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 2
  %call21 = call i32 @mlx5_cmd_xrcd_alloc(ptr noundef %20, ptr noundef %xrcdn1, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end19.error3_crit_edge

if.end19.error3_crit_edge:                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %error3

if.end24:                                         ; preds = %if.end19
  %21 = call ptr @memset(ptr %attr, i32 0, i32 32)
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %1, align 4
  %23 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %0, align 4
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 1, ptr %2, align 4
  %25 = ptrtoint ptr %devr1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %devr1, align 4
  %27 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %26, ptr %3, align 4
  %28 = ptrtoint ptr %p0 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %p0, align 4
  %device.i = getelementptr inbounds %struct.ib_pd, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %device.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %device.i, align 4
  %create_srq.i = getelementptr inbounds %struct.ib_device, ptr %31, i32 0, i32 1, i32 42
  %32 = ptrtoint ptr %create_srq.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %create_srq.i, align 4
  %tobool.not.i = icmp eq ptr %33, null
  br i1 %tobool.not.i, label %ib_create_srq.exit.thread, label %ib_create_srq.exit

ib_create_srq.exit.thread:                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %s0135 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 4
  %34 = ptrtoint ptr %s0135 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr inttoptr (i32 -95 to ptr), ptr %s0135, align 4
  br label %err_create

ib_create_srq.exit:                               ; preds = %if.end24
  %call1.i = call ptr @ib_create_srq_user(ptr noundef %29, ptr noundef nonnull %attr, ptr noundef null, ptr noundef null) #16
  %s0 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 4
  %35 = ptrtoint ptr %s0 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %call1.i, ptr %s0, align 4
  %cmp.i119 = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i119, label %ib_create_srq.exit.err_create_crit_edge, label %if.end35

ib_create_srq.exit.err_create_crit_edge:          ; preds = %ib_create_srq.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_create

if.end35:                                         ; preds = %ib_create_srq.exit
  %36 = call ptr @memset(ptr %attr, i32 0, i32 32)
  %37 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 1, ptr %1, align 4
  %38 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 1, ptr %0, align 4
  %39 = ptrtoint ptr %p0 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %p0, align 4
  %device.i120 = getelementptr inbounds %struct.ib_pd, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %device.i120 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %device.i120, align 4
  %create_srq.i121 = getelementptr inbounds %struct.ib_device, ptr %42, i32 0, i32 1, i32 42
  %43 = ptrtoint ptr %create_srq.i121 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %create_srq.i121, align 4
  %tobool.not.i122 = icmp eq ptr %44, null
  br i1 %tobool.not.i122, label %ib_create_srq.exit126.thread, label %ib_create_srq.exit126

ib_create_srq.exit126.thread:                     ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #18
  %s1139 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 5
  %45 = ptrtoint ptr %s1139 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr inttoptr (i32 -95 to ptr), ptr %s1139, align 4
  br label %if.then45

ib_create_srq.exit126:                            ; preds = %if.end35
  %call1.i123 = call ptr @ib_create_srq_user(ptr noundef %40, ptr noundef nonnull %attr, ptr noundef null, ptr noundef null) #16
  %s1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 5
  %46 = ptrtoint ptr %s1 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call1.i123, ptr %s1, align 4
  %cmp.i127 = icmp ugt ptr %call1.i123, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i127, label %ib_create_srq.exit126.if.then45_crit_edge, label %do.body.preheader

ib_create_srq.exit126.if.then45_crit_edge:        ; preds = %ib_create_srq.exit126
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then45

do.body.preheader:                                ; preds = %ib_create_srq.exit126
  call void @__sanitizer_cov_trace_pc() #18
  %pkey_change_work = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 0, i32 1
  call void @__init_work(ptr noundef %pkey_change_work, i32 noundef 0) #16
  %47 = ptrtoint ptr %pkey_change_work to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 -64, ptr %pkey_change_work, align 4
  %lockdep_map = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 0, i32 1, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.122, ptr noundef nonnull @mlx5_ib_dev_res_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry59 = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 0, i32 1, i32 1
  %48 = ptrtoint ptr %entry59 to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %entry59, ptr %entry59, align 4
  %prev.i = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 0, i32 1, i32 1, i32 1
  %49 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %entry59, ptr %prev.i, align 4
  %func = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 0, i32 1, i32 2
  %50 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @pkey_change_handler, ptr %func, align 4
  %pkey_change_work.1 = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 1, i32 1
  call void @__init_work(ptr noundef %pkey_change_work.1, i32 noundef 0) #16
  %51 = ptrtoint ptr %pkey_change_work.1 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 -64, ptr %pkey_change_work.1, align 4
  %lockdep_map.1 = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 1, i32 1, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map.1, ptr noundef nonnull @.str.122, ptr noundef nonnull @mlx5_ib_dev_res_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry59.1 = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 1, i32 1, i32 1
  %52 = ptrtoint ptr %entry59.1 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %entry59.1, ptr %entry59.1, align 4
  %prev.i.1 = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 1, i32 1, i32 1, i32 1
  %53 = ptrtoint ptr %prev.i.1 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %entry59.1, ptr %prev.i.1, align 4
  %func.1 = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 1, i32 1, i32 2
  %54 = ptrtoint ptr %func.1 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @pkey_change_handler, ptr %func.1, align 4
  br label %cleanup

if.then45:                                        ; preds = %ib_create_srq.exit126.if.then45_crit_edge, %ib_create_srq.exit126.thread
  %retval.0.i125141 = phi ptr [ inttoptr (i32 -95 to ptr), %ib_create_srq.exit126.thread ], [ %call1.i123, %ib_create_srq.exit126.if.then45_crit_edge ]
  %55 = ptrtoint ptr %s0 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %s0, align 4
  call fastcc void @ib_destroy_srq(ptr noundef %56)
  br label %err_create

err_create:                                       ; preds = %if.then45, %ib_create_srq.exit.err_create_crit_edge, %ib_create_srq.exit.thread
  %ret.0.in = phi ptr [ %retval.0.i125141, %if.then45 ], [ inttoptr (i32 -95 to ptr), %ib_create_srq.exit.thread ], [ %call1.i, %ib_create_srq.exit.err_create_crit_edge ]
  %ret.0 = ptrtoint ptr %ret.0.in to i32
  %57 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %mdev, align 8
  %59 = ptrtoint ptr %xrcdn1 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %xrcdn1, align 4
  %call66 = call i32 @mlx5_cmd_xrcd_dealloc(ptr noundef %58, i32 noundef %60, i16 noundef zeroext 0) #16
  br label %error3

error3:                                           ; preds = %err_create, %if.end19.error3_crit_edge
  %ret.1 = phi i32 [ %call21, %if.end19.error3_crit_edge ], [ %ret.0, %err_create ]
  %61 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %mdev, align 8
  %63 = ptrtoint ptr %xrcdn0 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %xrcdn0, align 4
  %call69 = call i32 @mlx5_cmd_xrcd_dealloc(ptr noundef %62, i32 noundef %64, i16 noundef zeroext 0) #16
  br label %error2

error2:                                           ; preds = %error3, %if.end14.error2_crit_edge
  %ret.2 = phi i32 [ %call16, %if.end14.error2_crit_edge ], [ %ret.1, %error3 ]
  %65 = ptrtoint ptr %devr1 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %devr1, align 4
  %call.i = call i32 @ib_destroy_cq_user(ptr noundef %66, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i128 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i128, label %error2.error1_crit_edge, label %land.rhs.i

error2.error1_crit_edge:                          ; preds = %error2
  call void @__sanitizer_cov_trace_pc() #18
  br label %error1

land.rhs.i:                                       ; preds = %error2
  %.b38.i = load i1, ptr @ib_destroy_cq.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.error1_crit_edge, label %if.then.i, !prof !411

land.rhs.i.error1_crit_edge:                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %error1

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_destroy_cq.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3936, i32 noundef 9, ptr noundef nonnull @.str.125) #16
  br label %error1

error1:                                           ; preds = %if.then.i, %land.rhs.i.error1_crit_edge, %error2.error1_crit_edge, %if.then11
  %ret.3 = phi i32 [ %16, %if.then11 ], [ %ret.2, %error2.error1_crit_edge ], [ %ret.2, %land.rhs.i.error1_crit_edge ], [ %ret.2, %if.then.i ]
  %67 = ptrtoint ptr %p0 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %p0, align 4
  %call.i129 = call i32 @ib_dealloc_pd_user(ptr noundef %68, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i129)
  %tobool.not.i130 = icmp eq i32 %call.i129, 0
  br i1 %tobool.not.i130, label %error1.cleanup_crit_edge, label %land.rhs.i132

error1.cleanup_crit_edge:                         ; preds = %error1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.rhs.i132:                                    ; preds = %error1
  %.b38.i131 = load i1, ptr @ib_dealloc_pd.__already_done, align 1
  br i1 %.b38.i131, label %land.rhs.i132.cleanup_crit_edge, label %if.then.i133, !prof !411

land.rhs.i132.cleanup_crit_edge:                  ; preds = %land.rhs.i132
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i133:                                     ; preds = %land.rhs.i132
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_dealloc_pd.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3498, i32 noundef 9, ptr noundef nonnull @.str.126) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i133, %land.rhs.i132.cleanup_crit_edge, %error1.cleanup_crit_edge, %do.body.preheader, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %14, %if.then4 ], [ -95, %entry.cleanup_crit_edge ], [ %ret.3, %error1.cleanup_crit_edge ], [ %ret.3, %land.rhs.i132.cleanup_crit_edge ], [ %ret.3, %if.then.i133 ], [ 0, %do.body.preheader ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %cq_attr) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %attr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_dev_res_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pkey_change_work = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 0, i32 1
  %call = tail call zeroext i1 @cancel_work_sync(ptr noundef %pkey_change_work) #16
  %pkey_change_work.1 = getelementptr %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 6, i32 1, i32 1
  %call.1 = tail call zeroext i1 @cancel_work_sync(ptr noundef %pkey_change_work.1) #16
  %devr1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8
  %s1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 5
  %0 = ptrtoint ptr %s1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %s1, align 4
  %call.i = tail call i32 @ib_destroy_srq_user(ptr noundef %1, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %entry.ib_destroy_srq.exit_crit_edge, label %land.rhs.i

entry.ib_destroy_srq.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_destroy_srq.exit

land.rhs.i:                                       ; preds = %entry
  %.b38.i = load i1, ptr @ib_destroy_srq.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.ib_destroy_srq.exit_crit_edge, label %if.then.i, !prof !411

land.rhs.i.ib_destroy_srq.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_destroy_srq.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_destroy_srq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3688, i32 noundef 9, ptr noundef nonnull @.str.124) #16
  br label %ib_destroy_srq.exit

ib_destroy_srq.exit:                              ; preds = %if.then.i, %land.rhs.i.ib_destroy_srq.exit_crit_edge, %entry.ib_destroy_srq.exit_crit_edge
  %s0 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 4
  %2 = ptrtoint ptr %s0 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s0, align 4
  %call.i15 = tail call i32 @ib_destroy_srq_user(ptr noundef %3, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i15)
  %tobool.not.i16 = icmp eq i32 %call.i15, 0
  br i1 %tobool.not.i16, label %ib_destroy_srq.exit.ib_destroy_srq.exit20_crit_edge, label %land.rhs.i18

ib_destroy_srq.exit.ib_destroy_srq.exit20_crit_edge: ; preds = %ib_destroy_srq.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_destroy_srq.exit20

land.rhs.i18:                                     ; preds = %ib_destroy_srq.exit
  %.b38.i17 = load i1, ptr @ib_destroy_srq.__already_done, align 1
  br i1 %.b38.i17, label %land.rhs.i18.ib_destroy_srq.exit20_crit_edge, label %if.then.i19, !prof !411

land.rhs.i18.ib_destroy_srq.exit20_crit_edge:     ; preds = %land.rhs.i18
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_destroy_srq.exit20

if.then.i19:                                      ; preds = %land.rhs.i18
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_destroy_srq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3688, i32 noundef 9, ptr noundef nonnull @.str.124) #16
  br label %ib_destroy_srq.exit20

ib_destroy_srq.exit20:                            ; preds = %if.then.i19, %land.rhs.i18.ib_destroy_srq.exit20_crit_edge, %ib_destroy_srq.exit.ib_destroy_srq.exit20_crit_edge
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %4 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mdev, align 8
  %xrcdn1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 2
  %6 = ptrtoint ptr %xrcdn1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %xrcdn1, align 4
  %call2 = tail call i32 @mlx5_cmd_xrcd_dealloc(ptr noundef %5, i32 noundef %7, i16 noundef zeroext 0) #16
  %8 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mdev, align 8
  %xrcdn0 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 1
  %10 = ptrtoint ptr %xrcdn0 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %xrcdn0, align 4
  %call4 = tail call i32 @mlx5_cmd_xrcd_dealloc(ptr noundef %9, i32 noundef %11, i16 noundef zeroext 0) #16
  %12 = ptrtoint ptr %devr1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %devr1, align 4
  %call.i21 = tail call i32 @ib_destroy_cq_user(ptr noundef %13, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i21)
  %tobool.not.i22 = icmp eq i32 %call.i21, 0
  br i1 %tobool.not.i22, label %ib_destroy_srq.exit20.ib_destroy_cq.exit_crit_edge, label %land.rhs.i24

ib_destroy_srq.exit20.ib_destroy_cq.exit_crit_edge: ; preds = %ib_destroy_srq.exit20
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_destroy_cq.exit

land.rhs.i24:                                     ; preds = %ib_destroy_srq.exit20
  %.b38.i23 = load i1, ptr @ib_destroy_cq.__already_done, align 1
  br i1 %.b38.i23, label %land.rhs.i24.ib_destroy_cq.exit_crit_edge, label %if.then.i25, !prof !411

land.rhs.i24.ib_destroy_cq.exit_crit_edge:        ; preds = %land.rhs.i24
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_destroy_cq.exit

if.then.i25:                                      ; preds = %land.rhs.i24
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_destroy_cq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3936, i32 noundef 9, ptr noundef nonnull @.str.125) #16
  br label %ib_destroy_cq.exit

ib_destroy_cq.exit:                               ; preds = %if.then.i25, %land.rhs.i24.ib_destroy_cq.exit_crit_edge, %ib_destroy_srq.exit20.ib_destroy_cq.exit_crit_edge
  %p0 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 8, i32 3
  %14 = ptrtoint ptr %p0 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %p0, align 4
  %call.i26 = tail call i32 @ib_dealloc_pd_user(ptr noundef %15, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i26)
  %tobool.not.i27 = icmp eq i32 %call.i26, 0
  br i1 %tobool.not.i27, label %ib_destroy_cq.exit.ib_dealloc_pd.exit_crit_edge, label %land.rhs.i29

ib_destroy_cq.exit.ib_dealloc_pd.exit_crit_edge:  ; preds = %ib_destroy_cq.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_dealloc_pd.exit

land.rhs.i29:                                     ; preds = %ib_destroy_cq.exit
  %.b38.i28 = load i1, ptr @ib_dealloc_pd.__already_done, align 1
  br i1 %.b38.i28, label %land.rhs.i29.ib_dealloc_pd.exit_crit_edge, label %if.then.i30, !prof !411

land.rhs.i29.ib_dealloc_pd.exit_crit_edge:        ; preds = %land.rhs.i29
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_dealloc_pd.exit

if.then.i30:                                      ; preds = %land.rhs.i29
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_dealloc_pd.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3498, i32 noundef 9, ptr noundef nonnull @.str.126) #16
  br label %ib_dealloc_pd.exit

ib_dealloc_pd.exit:                               ; preds = %if.then.i30, %land.rhs.i29.ib_dealloc_pd.exit_crit_edge, %ib_destroy_cq.exit.ib_dealloc_pd.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_dev_notifier_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev_events = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 2
  %0 = ptrtoint ptr %mdev_events to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @mlx5_ib_event, ptr %mdev_events, align 4
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %1 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mdev, align 8
  %call = tail call i32 @mlx5_notifier_register(ptr noundef %2, ptr noundef %mdev_events) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_dev_notifier_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %mdev_events = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 2
  %call = tail call i32 @mlx5_notifier_unregister(ptr noundef %1, ptr noundef %mdev_events) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_counters_init(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_counters_cleanup(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_cong_debugfs_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %3, i32 48
  %4 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i.i, align 4
  %6 = and i32 %5, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %shr.i = lshr i32 %5, 16
  %and.i = and i32 %shr.i, 255
  %and.i.op = add nsw i32 %and.i, -1
  %sub = select i1 %.not.i, i32 0, i32 %and.i.op
  tail call void @mlx5_ib_init_cong_debugfs(ptr noundef %dev, i32 noundef %sub) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_cong_debugfs_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %3, i32 48
  %4 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i.i, align 4
  %6 = and i32 %5, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %shr.i = lshr i32 %5, 16
  %and.i = and i32 %shr.i, 255
  %and.i.op = add nsw i32 %and.i, -1
  %sub = select i1 %.not.i, i32 0, i32 %and.i.op
  tail call void @mlx5_ib_cleanup_cong_debugfs(ptr noundef %dev, i32 noundef %sub) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_uar_init(ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %call = tail call ptr @mlx5_get_uars_page(ptr noundef %1) #16
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %uar = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 17, i32 39
  %4 = ptrtoint ptr %uar to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call, ptr %uar, align 4
  %5 = load ptr, ptr %mdev, align 8
  %uar4 = getelementptr inbounds %struct.mlx5_core_dev, ptr %5, i32 0, i32 17, i32 39
  %6 = ptrtoint ptr %uar4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %uar4, align 4
  %cmp.i.i = icmp ugt ptr %7, inttoptr (i32 -4096 to ptr)
  %8 = ptrtoint ptr %7 to i32
  %spec.select.i = select i1 %cmp.i.i, i32 %8, i32 0
  ret i32 %spec.select.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_uar_cleanup(ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %uar = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 17, i32 39
  %2 = ptrtoint ptr %uar to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %uar, align 4
  tail call void @mlx5_put_uars_page(ptr noundef %1, ptr noundef %3) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_bfrag_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %bfreg = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 23
  %call = tail call i32 @mlx5_alloc_bfreg(ptr noundef %1, ptr noundef %bfreg, i1 noundef zeroext false, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %fp_bfreg = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 25
  %call2 = tail call i32 @mlx5_alloc_bfreg(ptr noundef %3, ptr noundef %fp_bfreg, i1 noundef zeroext false, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.then4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mdev, align 8
  tail call void @mlx5_free_bfreg(ptr noundef %5, ptr noundef %bfreg) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call2, %if.then4 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_bfrag_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %fp_bfreg = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 25
  tail call void @mlx5_free_bfreg(ptr noundef %1, ptr noundef %fp_bfreg) #16
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %bfreg = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 23
  tail call void @mlx5_free_bfreg(ptr noundef %3, ptr noundef %bfreg) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_pre_ib_reg_umr_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mlx5_mr_cache_cleanup(ptr noundef %dev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %1 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 68
  %5 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %0, ptr noundef nonnull @.str.127, ptr noundef nonnull @.str.128, i32 noundef 4039, i32 noundef %6) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %umrc = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7
  %qp = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7, i32 2
  %7 = ptrtoint ptr %qp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %qp, align 4
  %tobool2.not = icmp eq ptr %8, null
  br i1 %tobool2.not, label %if.end.if.end7_crit_edge, label %if.then3

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 @ib_destroy_qp_user(ptr noundef nonnull %8, ptr noundef null) #16
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %if.end.if.end7_crit_edge
  %cq = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7, i32 1
  %9 = ptrtoint ptr %cq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cq, align 4
  %tobool9.not = icmp eq ptr %10, null
  br i1 %tobool9.not, label %if.end7.if.end13_crit_edge, label %if.then10

if.end7.if.end13_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @ib_free_cq(ptr noundef nonnull %10) #16
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end7.if.end13_crit_edge
  %11 = ptrtoint ptr %umrc to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %umrc, align 4
  %tobool15.not = icmp eq ptr %12, null
  br i1 %tobool15.not, label %if.end13.if.end19_crit_edge, label %if.then16

if.end13.if.end19_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.then16:                                        ; preds = %if.end13
  %call.i29 = tail call i32 @ib_dealloc_pd_user(ptr noundef nonnull %12, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i29)
  %tobool.not.i = icmp eq i32 %call.i29, 0
  br i1 %tobool.not.i, label %if.then16.if.end19_crit_edge, label %land.rhs.i

if.then16.if.end19_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

land.rhs.i:                                       ; preds = %if.then16
  %.b38.i = load i1, ptr @ib_dealloc_pd.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.if.end19_crit_edge, label %if.then.i, !prof !411

land.rhs.i.if.end19_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_dealloc_pd.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3498, i32 noundef 9, ptr noundef nonnull @.str.126) #16
  br label %if.end19

if.end19:                                         ; preds = %if.then.i, %land.rhs.i.if.end19_crit_edge, %if.then16.if.end19_crit_edge, %if.end13.if.end19_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_devx_init(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_devx_cleanup(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_ib_reg_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %call = tail call zeroext i1 @mlx5_lag_is_active(ptr noundef %1) #16
  %.str.130..str.129 = select i1 %call, ptr @.str.130, ptr @.str.129
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %pdev = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 8
  %dev2 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %call3 = tail call i32 @ib_register_device(ptr noundef %dev, ptr noundef nonnull %.str.130..str.129, ptr noundef %dev2) #16
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_ib_reg_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @ib_unregister_device(ptr noundef %dev) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_post_ib_reg_umr_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 216) #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i245 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 72) #19
  %tobool.not = icmp eq ptr %call7.i.i, null
  %tobool2.not = icmp eq ptr %call7.i.i245, null
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool2.not
  br i1 %or.cond, label %entry.error_0_crit_edge, label %if.end

entry.error_0_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %error_0

if.end:                                           ; preds = %entry
  %call3 = tail call ptr @__ib_alloc_pd(ptr noundef %dev, i32 noundef 0, ptr noundef nonnull @.str.5) #16
  %cmp.i = icmp ugt ptr %call3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.body, label %if.end15

do.body:                                          ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug595, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_stage_post_ib_reg_umr_init, %if.then10)) #16
          to label %do.end [label %if.then10], !srcloc !404

if.then10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %2 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %3 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 68
  %7 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug595, ptr noundef %2, ptr noundef nonnull @.str.132, ptr noundef nonnull @.str.131, i32 noundef 4076, i32 noundef %8) #16
  br label %do.end

do.end:                                           ; preds = %if.then10, %do.body
  %9 = ptrtoint ptr %call3 to i32
  br label %error_0

if.end15:                                         ; preds = %if.end
  %call.i = tail call ptr @__ib_alloc_cq(ptr noundef %dev, ptr noundef null, i32 noundef 128, i32 noundef 0, i32 noundef 0, ptr noundef nonnull @.str.5) #16
  %cmp.i246 = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i246, label %do.body20, label %if.end41

do.body20:                                        ; preds = %if.end15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug596, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_stage_post_ib_reg_umr_init, %if.then32)) #16
          to label %do.end39 [label %if.then32], !srcloc !404

if.then32:                                        ; preds = %do.body20
  call void @__sanitizer_cov_trace_pc() #18
  %10 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %11 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i247 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i247 to ptr
  %task35 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task35 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task35, align 8
  %pid36 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 68
  %15 = ptrtoint ptr %pid36 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pid36, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug596, ptr noundef %10, ptr noundef nonnull @.str.133, ptr noundef nonnull @.str.131, i32 noundef 4083, i32 noundef %16) #16
  br label %do.end39

do.end39:                                         ; preds = %if.then32, %do.body20
  %17 = ptrtoint ptr %call.i to i32
  br label %error_2

if.end41:                                         ; preds = %if.end15
  %send_cq = getelementptr inbounds %struct.ib_qp_init_attr, ptr %call7.i.i245, i32 0, i32 2
  %18 = ptrtoint ptr %send_cq to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call.i, ptr %send_cq, align 8
  %recv_cq = getelementptr inbounds %struct.ib_qp_init_attr, ptr %call7.i.i245, i32 0, i32 3
  %19 = ptrtoint ptr %recv_cq to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call.i, ptr %recv_cq, align 4
  %sq_sig_type = getelementptr inbounds %struct.ib_qp_init_attr, ptr %call7.i.i245, i32 0, i32 7
  %20 = ptrtoint ptr %sq_sig_type to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %sq_sig_type, align 8
  %cap = getelementptr inbounds %struct.ib_qp_init_attr, ptr %call7.i.i245, i32 0, i32 6
  %21 = ptrtoint ptr %cap to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 128, ptr %cap, align 8
  %max_send_sge = getelementptr inbounds %struct.ib_qp_init_attr, ptr %call7.i.i245, i32 0, i32 6, i32 2
  %22 = ptrtoint ptr %max_send_sge to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %max_send_sge, align 8
  %qp_type = getelementptr inbounds %struct.ib_qp_init_attr, ptr %call7.i.i245, i32 0, i32 8
  %23 = ptrtoint ptr %qp_type to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 4096, ptr %qp_type, align 4
  %port_num = getelementptr inbounds %struct.ib_qp_init_attr, ptr %call7.i.i245, i32 0, i32 10
  %24 = ptrtoint ptr %port_num to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 1, ptr %port_num, align 4
  %call.i248 = tail call ptr @ib_create_qp_kernel(ptr noundef %call3, ptr noundef nonnull %call7.i.i245, ptr noundef nonnull @.str.5) #16
  %cmp.i249 = icmp ugt ptr %call.i248, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i249, label %do.body46, label %if.end67

do.body46:                                        ; preds = %if.end41
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug597, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_stage_post_ib_reg_umr_init, %if.then58)) #16
          to label %do.end65 [label %if.then58], !srcloc !404

if.then58:                                        ; preds = %do.body46
  call void @__sanitizer_cov_trace_pc() #18
  %25 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %26 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i250 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i250 to ptr
  %task61 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task61 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task61, align 8
  %pid62 = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 68
  %30 = ptrtoint ptr %pid62 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pid62, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug597, ptr noundef %25, ptr noundef nonnull @.str.134, ptr noundef nonnull @.str.131, i32 noundef 4097, i32 noundef %31) #16
  br label %do.end65

do.end65:                                         ; preds = %if.then58, %do.body46
  %32 = ptrtoint ptr %call.i248 to i32
  br label %error_3

if.end67:                                         ; preds = %if.end41
  %33 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 1, ptr %call7.i.i, align 8
  %port_num68 = getelementptr inbounds %struct.ib_qp_attr, ptr %call7.i.i, i32 0, i32 19
  %34 = ptrtoint ptr %port_num68 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 1, ptr %port_num68, align 4
  %call69 = tail call i32 @ib_modify_qp(ptr noundef %call.i248, ptr noundef nonnull %call7.i.i, i32 noundef 49) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call69)
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %if.end92, label %do.body72

do.body72:                                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug598, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_stage_post_ib_reg_umr_init, %if.then84)) #16
          to label %error_4 [label %if.then84], !srcloc !404

if.then84:                                        ; preds = %do.body72
  call void @__sanitizer_cov_trace_pc() #18
  %35 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %36 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i251 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i251 to ptr
  %task87 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task87 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task87, align 8
  %pid88 = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 68
  %40 = ptrtoint ptr %pid88 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pid88, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug598, ptr noundef %35, ptr noundef nonnull @.str.135, ptr noundef nonnull @.str.131, i32 noundef 4107, i32 noundef %41) #16
  br label %error_4

if.end92:                                         ; preds = %if.end67
  %42 = call ptr @memset(ptr %call7.i.i, i32 0, i32 216)
  %43 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 2, ptr %call7.i.i, align 8
  %path_mtu = getelementptr inbounds %struct.ib_qp_attr, ptr %call7.i.i, i32 0, i32 2
  %44 = ptrtoint ptr %path_mtu to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 1, ptr %path_mtu, align 8
  %call94 = tail call i32 @ib_modify_qp(ptr noundef %call.i248, ptr noundef nonnull %call7.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %if.end117, label %do.body97

do.body97:                                        ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug599, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_stage_post_ib_reg_umr_init, %if.then109)) #16
          to label %error_4 [label %if.then109], !srcloc !404

if.then109:                                       ; preds = %do.body97
  call void @__sanitizer_cov_trace_pc() #18
  %45 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %46 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i252 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i252 to ptr
  %task112 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %task112 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task112, align 8
  %pid113 = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 68
  %50 = ptrtoint ptr %pid113 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %pid113, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug599, ptr noundef %45, ptr noundef nonnull @.str.136, ptr noundef nonnull @.str.131, i32 noundef 4117, i32 noundef %51) #16
  br label %error_4

if.end117:                                        ; preds = %if.end92
  %52 = call ptr @memset(ptr %call7.i.i, i32 0, i32 216)
  %53 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 3, ptr %call7.i.i, align 8
  %call119 = tail call i32 @ib_modify_qp(ptr noundef %call.i248, ptr noundef nonnull %call7.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call119)
  %tobool120.not = icmp eq i32 %call119, 0
  br i1 %tobool120.not, label %if.end142, label %do.body122

do.body122:                                       ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug600, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_stage_post_ib_reg_umr_init, %if.then134)) #16
          to label %error_4 [label %if.then134], !srcloc !404

if.then134:                                       ; preds = %do.body122
  call void @__sanitizer_cov_trace_pc() #18
  %54 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %55 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i253 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i253 to ptr
  %task137 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %task137 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %task137, align 8
  %pid138 = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 68
  %59 = ptrtoint ptr %pid138 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %pid138, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug600, ptr noundef %54, ptr noundef nonnull @.str.137, ptr noundef nonnull @.str.131, i32 noundef 4125, i32 noundef %60) #16
  br label %error_4

if.end142:                                        ; preds = %if.end117
  %umrc = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7
  %qp143 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7, i32 2
  %61 = ptrtoint ptr %qp143 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %call.i248, ptr %qp143, align 4
  %cq145 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7, i32 1
  %62 = ptrtoint ptr %cq145 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %call.i, ptr %cq145, align 4
  %63 = ptrtoint ptr %umrc to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call3, ptr %umrc, align 4
  %sem = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7, i32 3
  tail call fastcc void @sema_init(ptr noundef %sem)
  %call149 = tail call i32 @mlx5_mr_cache_init(ptr noundef %dev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call149)
  %tobool150.not = icmp eq i32 %call149, 0
  br i1 %tobool150.not, label %if.end159, label %do.end154

do.end154:                                        ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #18
  %64 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %65 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i254 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i254 to ptr
  %task157 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 2
  %67 = ptrtoint ptr %task157 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %task157, align 8
  %pid158 = getelementptr inbounds %struct.task_struct, ptr %68, i32 0, i32 68
  %69 = ptrtoint ptr %pid158 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %pid158, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %64, ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.131, i32 noundef 4136, i32 noundef %70, i32 noundef %call149) #20
  br label %error_4

if.end159:                                        ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  tail call void @kfree(ptr noundef nonnull %call7.i.i245) #16
  br label %cleanup

error_4:                                          ; preds = %do.end154, %if.then134, %do.body122, %if.then109, %do.body97, %if.then84, %do.body72
  %ret.0 = phi i32 [ %call69, %if.then84 ], [ %call94, %if.then109 ], [ %call119, %if.then134 ], [ %call149, %do.end154 ], [ %call69, %do.body72 ], [ %call94, %do.body97 ], [ %call119, %do.body122 ]
  %call.i255 = tail call i32 @ib_destroy_qp_user(ptr noundef %call.i248, ptr noundef null) #16
  %qp162 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7, i32 2
  %71 = ptrtoint ptr %qp162 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %qp162, align 4
  br label %error_3

error_3:                                          ; preds = %error_4, %do.end65
  %ret.1 = phi i32 [ %32, %do.end65 ], [ %ret.0, %error_4 ]
  tail call void @ib_free_cq(ptr noundef %call.i) #16
  %cq164 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7, i32 1
  %72 = ptrtoint ptr %cq164 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr null, ptr %cq164, align 4
  br label %error_2

error_2:                                          ; preds = %error_3, %do.end39
  %ret.2 = phi i32 [ %17, %do.end39 ], [ %ret.1, %error_3 ]
  %call.i256 = tail call i32 @ib_dealloc_pd_user(ptr noundef %call3, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i256)
  %tobool.not.i = icmp eq i32 %call.i256, 0
  br i1 %tobool.not.i, label %error_2.ib_dealloc_pd.exit_crit_edge, label %land.rhs.i

error_2.ib_dealloc_pd.exit_crit_edge:             ; preds = %error_2
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_dealloc_pd.exit

land.rhs.i:                                       ; preds = %error_2
  %.b38.i = load i1, ptr @ib_dealloc_pd.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.ib_dealloc_pd.exit_crit_edge, label %if.then.i, !prof !411

land.rhs.i.ib_dealloc_pd.exit_crit_edge:          ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %ib_dealloc_pd.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_dealloc_pd.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3498, i32 noundef 9, ptr noundef nonnull @.str.126) #16
  br label %ib_dealloc_pd.exit

ib_dealloc_pd.exit:                               ; preds = %if.then.i, %land.rhs.i.ib_dealloc_pd.exit_crit_edge, %error_2.ib_dealloc_pd.exit_crit_edge
  %umrc165 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 7
  %73 = ptrtoint ptr %umrc165 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr null, ptr %umrc165, align 4
  br label %error_0

error_0:                                          ; preds = %ib_dealloc_pd.exit, %do.end, %entry.error_0_crit_edge
  %ret.3 = phi i32 [ %9, %do.end ], [ %ret.2, %ib_dealloc_pd.exit ], [ -12, %entry.error_0_crit_edge ]
  tail call void @kfree(ptr noundef %call7.i.i) #16
  tail call void @kfree(ptr noundef %call7.i.i245) #16
  br label %cleanup

cleanup:                                          ; preds = %error_0, %if.end159
  %retval.0 = phi i32 [ %ret.3, %error_0 ], [ 0, %if.end159 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_restrack_init(ptr noundef) #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_cleanup() #5 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @auxiliary_driver_unregister(ptr noundef nonnull @mlx5r_driver) #16
  tail call void @auxiliary_driver_unregister(ptr noundef nonnull @mlx5r_mp_driver) #16
  tail call void @mlx5r_rep_cleanup() #16
  %0 = load ptr, ptr @mlx5_ib_event_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xlt_emergency_page to i32))
  %1 = load ptr, ptr @xlt_emergency_page, align 4
  %2 = ptrtoint ptr %1 to i32
  tail call void @free_pages(i32 noundef %2, i32 noundef 0) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @auxiliary_driver_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5r_rep_cleanup() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_init() #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__get_free_pages(i32 noundef 3264, i32 noundef 0) #16
  %0 = inttoptr i32 %call to ptr
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @xlt_emergency_page to i32))
  store ptr %0, ptr @xlt_emergency_page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.157, i32 noundef 655362, i32 noundef 1) #16
  store ptr %call1, ptr @mlx5_ib_event_wq, align 4
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.cleanup.sink.split_crit_edge, label %if.end4

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @mlx5_ib_odp_init() #20
  %call6 = tail call i32 @mlx5r_rep_init() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end9, label %if.end4.rep_err_crit_edge

if.end4.rep_err_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %rep_err

if.end9:                                          ; preds = %if.end4
  %call10 = tail call i32 @__auxiliary_driver_register(ptr noundef nonnull @mlx5r_mp_driver, ptr noundef null, ptr noundef nonnull @.str.5) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.mp_err_crit_edge

if.end9.mp_err_crit_edge:                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %mp_err

if.end13:                                         ; preds = %if.end9
  %call14 = tail call i32 @__auxiliary_driver_register(ptr noundef nonnull @mlx5r_driver, ptr noundef null, ptr noundef nonnull @.str.5) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end13.cleanup_crit_edge, label %drv_err

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

drv_err:                                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @auxiliary_driver_unregister(ptr noundef nonnull @mlx5r_mp_driver) #16
  br label %mp_err

mp_err:                                           ; preds = %drv_err, %if.end9.mp_err_crit_edge
  %ret.0 = phi i32 [ %call10, %if.end9.mp_err_crit_edge ], [ %call14, %drv_err ]
  tail call void @mlx5r_rep_cleanup() #16
  br label %rep_err

rep_err:                                          ; preds = %mp_err, %if.end4.rep_err_crit_edge
  %ret.1 = phi i32 [ %call6, %if.end4.rep_err_crit_edge ], [ %ret.0, %mp_err ]
  %1 = load ptr, ptr @mlx5_ib_event_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %1) #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %rep_err, %if.end.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ %ret.1, %rep_err ], [ -12, %if.end.cleanup.sink.split_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xlt_emergency_page to i32))
  %2 = load ptr, ptr @xlt_emergency_page, align 4
  %3 = ptrtoint ptr %2 to i32
  tail call void @free_pages(i32 noundef %3, i32 noundef 0) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end13.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ 0, %if.end13.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_hca_vport_context(ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_ib_port_oper(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_query_port_max_mtu(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_query_port_oper_mtu(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_port_vl_hw_cap(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_port_ptys(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_nic_vport_qkey_viol_cntr(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @mlx5_ib_get_netdev(ptr nocapture noundef readonly %device, i32 noundef %port_num) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 1
  %0 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i, align 4
  %6 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %6)
  %switch.selectcmp.i.i.i = icmp eq i32 %6, 256
  %add.ptr.i.i.i = getelementptr i32, ptr %3, i32 48
  %7 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i.i.i, align 4
  %9 = and i32 %8, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %10 = icmp ne i32 %9, 0
  %or.cond.i = select i1 %10, i1 %switch.selectcmp.i.i.i, i1 false
  br i1 %or.cond.i, label %if.end6.i, label %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge

entry.mlx5_ib_get_native_port_mdev.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_get_native_port_mdev.exit

if.end6.i:                                        ; preds = %entry
  %port10.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 22
  %11 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %port10.i, align 8
  %sub.i = add i32 %port_num, -1
  %mpi_lock.i = getelementptr %struct.mlx5_ib_port, ptr %12, i32 %sub.i, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i) #16
  %13 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %port10.i, align 8
  %mp14.i = getelementptr %struct.mlx5_ib_port, ptr %14, i32 %sub.i, i32 1
  %15 = ptrtoint ptr %mp14.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mp14.i, align 4
  %tobool16.not.i = icmp eq ptr %16, null
  br i1 %tobool16.not.i, label %if.end6.i.if.end23.i_crit_edge, label %land.lhs.true.i

if.end6.i.if.end23.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

land.lhs.true.i:                                  ; preds = %if.end6.i
  %unaffiliate.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 8
  %17 = ptrtoint ptr %unaffiliate.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %unaffiliate.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool17.not.i = icmp eq i8 %18, 0
  br i1 %tobool17.not.i, label %if.then18.i, label %land.lhs.true.i.if.end23.i_crit_edge

land.lhs.true.i.if.end23.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then18.i:                                      ; preds = %land.lhs.true.i
  %mdev19.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 2
  %19 = ptrtoint ptr %mdev19.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mdev19.i, align 4
  %is_master.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 7
  %21 = ptrtoint ptr %is_master.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %is_master.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool20.not.i = icmp eq i8 %22, 0
  br i1 %tobool20.not.i, label %if.then21.i, label %if.then18.i.if.end23.i_crit_edge

if.then18.i.if.end23.i_crit_edge:                 ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then21.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  %mdev_refcnt.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %16, i32 0, i32 6
  %23 = ptrtoint ptr %mdev_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mdev_refcnt.i, align 8
  %inc.i = add i32 %24, 1
  store i32 %inc.i, ptr %mdev_refcnt.i, align 8
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then21.i, %if.then18.i.if.end23.i_crit_edge, %land.lhs.true.i.if.end23.i_crit_edge, %if.end6.i.if.end23.i_crit_edge
  %mdev.0.i = phi ptr [ null, %land.lhs.true.i.if.end23.i_crit_edge ], [ %20, %if.then18.i.if.end23.i_crit_edge ], [ %20, %if.then21.i ], [ null, %if.end6.i.if.end23.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i) #16
  br label %mlx5_ib_get_native_port_mdev.exit

mlx5_ib_get_native_port_mdev.exit:                ; preds = %if.end23.i, %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge
  %retval.0.i = phi ptr [ %mdev.0.i, %if.end23.i ], [ %1, %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %mlx5_ib_get_native_port_mdev.exit.cleanup_crit_edge, label %if.end

mlx5_ib_get_native_port_mdev.exit.cleanup_crit_edge: ; preds = %mlx5_ib_get_native_port_mdev.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %mlx5_ib_get_native_port_mdev.exit
  %call2 = tail call ptr @mlx5_lag_get_roce_netdev(ptr noundef nonnull %retval.0.i) #16
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end5, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end5:                                          ; preds = %if.end
  %port = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 22
  %25 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %port, align 8
  %sub = add i32 %port_num, -1
  %roce = getelementptr %struct.mlx5_ib_port, ptr %26, i32 %sub, i32 3
  tail call void @_raw_read_lock(ptr noundef %roce) #16
  %27 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %port, align 8
  %netdev = getelementptr %struct.mlx5_ib_port, ptr %28, i32 %sub, i32 3, i32 1
  %29 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %netdev, align 4
  %tobool10.not = icmp eq ptr %30, null
  br i1 %tobool10.not, label %if.end5.if.end12_crit_edge, label %do.body1.i

if.end5.if.end12_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

do.body1.i:                                       ; preds = %if.end5
  %31 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !406
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %30, i32 0, i32 118
  %32 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pcpu_refcnt.i, align 4
  %34 = ptrtoint ptr %33 to i32
  %35 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 3
  %37 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %38
  %39 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %40, %34
  %41 = inttoptr i32 %add.i to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  %add13.i = add i32 %43, 1
  store i32 %add13.i, ptr %41, align 4
  %44 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !407
  %and.i.i.i = and i32 %44, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.dev_hold.exit_crit_edge, !prof !408

do.body1.i.dev_hold.exit_crit_edge:               ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_hold.exit

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %dev_hold.exit

dev_hold.exit:                                    ; preds = %if.then28.i, %do.body1.i.dev_hold.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %31) #16, !srcloc !409
  br label %if.end12

if.end12:                                         ; preds = %dev_hold.exit, %if.end5.if.end12_crit_edge
  %45 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %port, align 8
  %roce16 = getelementptr %struct.mlx5_ib_port, ptr %46, i32 %sub, i32 3
  tail call void @_raw_read_unlock(ptr noundef %roce16) #16
  br label %out

out:                                              ; preds = %if.end12, %if.end.out_crit_edge
  %ndev.0 = phi ptr [ %call2, %if.end.out_crit_edge ], [ %30, %if.end12 ]
  %47 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i33 = getelementptr inbounds %struct.mlx5_core_dev, ptr %48, i32 0, i32 8
  %49 = ptrtoint ptr %caps.i.i33 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %caps.i.i33, align 8
  %add.ptr.i.i34 = getelementptr i32, ptr %50, i32 13
  %51 = ptrtoint ptr %add.ptr.i.i34 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %add.ptr.i.i34, align 4
  %53 = and i32 %52, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %53)
  %switch.selectcmp.i.i.i35 = icmp eq i32 %53, 256
  %add.ptr.i.i.i36 = getelementptr i32, ptr %50, i32 48
  %54 = ptrtoint ptr %add.ptr.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %add.ptr.i.i.i36, align 4
  %56 = and i32 %55, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %57 = icmp ne i32 %56, 0
  %or.cond.i37 = select i1 %57, i1 %switch.selectcmp.i.i.i35, i1 false
  br i1 %or.cond.i37, label %if.end.i, label %out.cleanup_crit_edge

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %out
  %port2.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 22
  %58 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %port2.i, align 8
  %sub.i38 = add i32 %port_num, -1
  %mpi_lock.i39 = getelementptr %struct.mlx5_ib_port, ptr %59, i32 %sub.i38, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i39) #16
  %60 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %port2.i, align 8
  %mp6.i = getelementptr %struct.mlx5_ib_port, ptr %61, i32 %sub.i38, i32 1
  %62 = ptrtoint ptr %mp6.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %mp6.i, align 4
  %is_master.i40 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %63, i32 0, i32 7
  %64 = ptrtoint ptr %is_master.i40 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %is_master.i40, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool8.not.i = icmp eq i8 %65, 0
  br i1 %tobool8.not.i, label %if.end10.i, label %if.end.i.out.i_crit_edge

if.end.i.out.i_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.end10.i:                                       ; preds = %if.end.i
  %mdev_refcnt.i41 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %63, i32 0, i32 6
  %66 = ptrtoint ptr %mdev_refcnt.i41 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %mdev_refcnt.i41, align 8
  %dec.i = add i32 %67, -1
  store i32 %dec.i, ptr %mdev_refcnt.i41, align 8
  %unaffiliate.i42 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %63, i32 0, i32 8
  %68 = ptrtoint ptr %unaffiliate.i42 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %unaffiliate.i42, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool11.not.i = icmp eq i8 %69, 0
  br i1 %tobool11.not.i, label %if.end10.i.out.i_crit_edge, label %if.then12.i

if.end10.i.out.i_crit_edge:                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %unref_comp.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %63, i32 0, i32 4
  tail call void @complete(ptr noundef %unref_comp.i) #16
  br label %out.i

out.i:                                            ; preds = %if.then12.i, %if.end10.i.out.i_crit_edge, %if.end.i.out.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i39) #16
  br label %cleanup

cleanup:                                          ; preds = %out.i, %out.cleanup_crit_edge, %mlx5_ib_get_native_port_mdev.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %mlx5_ib_get_native_port_mdev.exit.cleanup_crit_edge ], [ %ndev.0, %out.cleanup_crit_edge ], [ %ndev.0, %out.i ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @netdev_master_upper_dev_get_rcu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_lag_get_roce_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rwlock_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx5_ib_init_multiport_master(ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %3, i32 48
  %4 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i.i, align 4
  %6 = and i32 %5, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %shr.i = lshr i32 %5, 16
  %and.i = and i32 %shr.i, 255
  %and.i.op = add nsw i32 %and.i, -1
  %sub = select i1 %.not.i, i32 0, i32 %and.i.op
  %add.ptr.i = getelementptr i32, ptr %3, i32 13
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i, align 4
  %9 = and i32 %8, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %9)
  %switch.selectcmp.i.i = icmp eq i32 %9, 256
  %10 = and i32 %5, 65024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i = icmp ne i32 %10, 0
  %or.cond = select i1 %cmp.i, i1 %switch.selectcmp.i.i, i1 false
  br i1 %or.cond, label %if.end, label %entry.cleanup105_crit_edge

entry.cleanup105_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup105

if.end:                                           ; preds = %entry
  %sys_image_guid = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 31
  %call5 = tail call i32 @mlx5_query_nic_vport_system_image_guid(ptr noundef %1, ptr noundef %sys_image_guid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.cleanup105_crit_edge

if.end.cleanup105_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup105

if.end8:                                          ; preds = %if.end
  %11 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mdev, align 8
  %call10 = tail call i32 @mlx5_nic_vport_enable_roce(ptr noundef %12) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end8.cleanup105_crit_edge

if.end8.cleanup105_crit_edge:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup105

if.end13:                                         ; preds = %if.end8
  tail call void @mutex_lock_nested(ptr noundef nonnull @mlx5_ib_multiport_mutex, i32 noundef 0) #16
  %num_ports = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 3
  %13 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %num_ports, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp14190.not = icmp eq i32 %14, 0
  br i1 %cmp14190.not, label %if.end13.for.end104_crit_edge, label %for.body.lr.ph

if.end13.for.end104_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end104

for.body.lr.ph:                                   ; preds = %if.end13
  %15 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %port = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 22
  br label %for.body

for.body:                                         ; preds = %for.inc103.for.body_crit_edge, %for.body.lr.ph
  %i.0191 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc103.for.body_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0191, i32 %sub)
  %cmp15 = icmp eq i32 %i.0191, %sub
  br i1 %cmp15, label %if.then16, label %for.cond29.preheader

for.cond29.preheader:                             ; preds = %for.body
  %mpi.0187 = load ptr, ptr @mlx5_ib_unaffiliated_port_list, align 4
  %cmp30.not188 = icmp eq ptr %mpi.0187, @mlx5_ib_unaffiliated_port_list
  br i1 %cmp30.not188, label %for.cond29.preheader.do.body81_crit_edge, label %for.cond29.preheader.for.body31_crit_edge

for.cond29.preheader.for.body31_crit_edge:        ; preds = %for.cond29.preheader
  br label %for.body31

for.cond29.preheader.do.body81_crit_edge:         ; preds = %for.cond29.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body81

if.then16:                                        ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %16 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %16, i32 noundef 3520, i32 noundef 104) #19
  %tobool18.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool18.not, label %cleanup.thread182, label %if.end22

cleanup.thread182:                                ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef nonnull @mlx5_ib_multiport_mutex) #16
  %17 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mdev, align 8
  %call21 = tail call i32 @mlx5_nic_vport_disable_roce(ptr noundef %18) #16
  br label %cleanup105

if.end22:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  %is_master = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %call7.i.i, i32 0, i32 7
  %19 = ptrtoint ptr %is_master to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 1, ptr %is_master, align 4
  %20 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mdev, align 8
  %mdev24 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %call7.i.i, i32 0, i32 2
  %22 = ptrtoint ptr %mdev24 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %21, ptr %mdev24, align 4
  %23 = ptrtoint ptr %sys_image_guid to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %sys_image_guid, align 8
  %sys_image_guid26 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %call7.i.i, i32 0, i32 5
  %25 = ptrtoint ptr %sys_image_guid26 to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %sys_image_guid26, align 8
  %26 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %port, align 8
  %mp = getelementptr %struct.mlx5_ib_port, ptr %27, i32 %sub, i32 1
  %28 = ptrtoint ptr %mp to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %call7.i.i, ptr %mp, align 4
  %ibdev = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %call7.i.i, i32 0, i32 1
  %29 = ptrtoint ptr %ibdev to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %dev, ptr %ibdev, align 8
  br label %for.inc103

for.body31:                                       ; preds = %for.cond29.backedge.for.body31_crit_edge, %for.cond29.preheader.for.body31_crit_edge
  %mpi.0189 = phi ptr [ %mpi.0, %for.cond29.backedge.for.body31_crit_edge ], [ %mpi.0187, %for.cond29.preheader.for.body31_crit_edge ]
  %30 = ptrtoint ptr %sys_image_guid to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %sys_image_guid, align 8
  %sys_image_guid33 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi.0189, i32 0, i32 5
  %32 = ptrtoint ptr %sys_image_guid33 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %sys_image_guid33, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %31, i64 %33)
  %cmp34 = icmp eq i64 %31, %33
  br i1 %cmp34, label %land.lhs.true, label %for.body31.for.cond29.backedge_crit_edge

for.body31.for.cond29.backedge_crit_edge:         ; preds = %for.body31
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond29.backedge

land.lhs.true:                                    ; preds = %for.body31
  %mdev35 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi.0189, i32 0, i32 2
  %34 = ptrtoint ptr %mdev35 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mdev35, align 4
  %caps.i.i.i166 = getelementptr inbounds %struct.mlx5_core_dev, ptr %35, i32 0, i32 8
  %36 = ptrtoint ptr %caps.i.i.i166 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %caps.i.i.i166, align 8
  %add.ptr.i.i.i167 = getelementptr i32, ptr %37, i32 48
  %38 = ptrtoint ptr %add.ptr.i.i.i167 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %add.ptr.i.i.i167, align 4
  %40 = and i32 %39, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %.not.i168 = icmp eq i32 %40, 0
  %shr.i169 = lshr i32 %39, 16
  %and.i170 = and i32 %shr.i169, 255
  %and.i170.op = add nsw i32 %and.i170, -1
  %sub37 = select i1 %.not.i168, i32 0, i32 %and.i170.op
  call void @__sanitizer_cov_trace_cmp4(i32 %sub37, i32 %i.0191)
  %cmp38 = icmp eq i32 %sub37, %i.0191
  br i1 %cmp38, label %if.then39, label %land.lhs.true.for.cond29.backedge_crit_edge

land.lhs.true.for.cond29.backedge_crit_edge:      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond29.backedge

if.then39:                                        ; preds = %land.lhs.true
  %call40 = tail call fastcc zeroext i1 @mlx5_ib_bind_slave_port(ptr noundef %dev, ptr noundef %mpi.0189)
  br i1 %call40, label %do.body, label %if.then39.for.cond29.backedge_crit_edge

if.then39.for.cond29.backedge_crit_edge:          ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond29.backedge

for.cond29.backedge:                              ; preds = %if.then39.for.cond29.backedge_crit_edge, %land.lhs.true.for.cond29.backedge_crit_edge, %for.body31.for.cond29.backedge_crit_edge
  %41 = ptrtoint ptr %mpi.0189 to i32
  call void @__asan_load4_noabort(i32 %41)
  %mpi.0 = load ptr, ptr %mpi.0189, align 4
  %cmp30.not = icmp eq ptr %mpi.0, @mlx5_ib_unaffiliated_port_list
  br i1 %cmp30.not, label %for.cond29.backedge.do.body81_crit_edge, label %for.cond29.backedge.for.body31_crit_edge

for.cond29.backedge.for.body31_crit_edge:         ; preds = %for.cond29.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body31

for.cond29.backedge.do.body81_crit_edge:          ; preds = %for.cond29.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body81

do.body:                                          ; preds = %if.then39
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug589, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_init_multiport_master, %if.then51)) #16
          to label %do.body54 [label %if.then51], !srcloc !404

if.then51:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %mdev35.le = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi.0189, i32 0, i32 2
  %42 = ptrtoint ptr %mdev35.le to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %mdev35.le, align 4
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug589, ptr noundef %45, ptr noundef nonnull @.str.24) #16
  br label %do.body54

do.body54:                                        ; preds = %if.then51, %do.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug590, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_init_multiport_master, %if.then66)) #16
          to label %do.end72 [label %if.then66], !srcloc !404

if.then66:                                        ; preds = %do.body54
  call void @__sanitizer_cov_trace_pc() #18
  %46 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i172 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i172 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 68
  %50 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %pid, align 8
  %add69 = add nuw i32 %i.0191, 1
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug590, ptr noundef %15, ptr noundef nonnull @.str.25, ptr noundef nonnull @.str.23, i32 noundef 3294, i32 noundef %51, i32 noundef %add69) #16
  br label %do.end72

do.end72:                                         ; preds = %if.then66, %do.body54
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %mpi.0189) #16
  br i1 %call.i.i, label %if.end.i.i, label %do.end72.for.end.thread_crit_edge

do.end72.for.end.thread_crit_edge:                ; preds = %do.end72
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.thread

if.end.i.i:                                       ; preds = %do.end72
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %mpi.0189, i32 0, i32 1
  %52 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prev.i.i, align 4
  %54 = ptrtoint ptr %mpi.0189 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mpi.0189, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %53, ptr %prev1.i.i.i, align 4
  %57 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %55, ptr %53, align 4
  br label %for.end.thread

for.end.thread:                                   ; preds = %if.end.i.i, %do.end72.for.end.thread_crit_edge
  %58 = ptrtoint ptr %mpi.0189 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr inttoptr (i32 256 to ptr), ptr %mpi.0189, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %mpi.0189, i32 0, i32 1
  %59 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %for.inc103

do.body81:                                        ; preds = %for.cond29.backedge.do.body81_crit_edge, %for.cond29.preheader.do.body81_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug591, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_init_multiport_master, %if.then93)) #16
          to label %for.inc103 [label %if.then93], !srcloc !404

if.then93:                                        ; preds = %do.body81
  call void @__sanitizer_cov_trace_pc() #18
  %60 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i173 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i173 to ptr
  %task96 = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 2
  %62 = ptrtoint ptr %task96 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %task96, align 8
  %pid97 = getelementptr inbounds %struct.task_struct, ptr %63, i32 0, i32 68
  %64 = ptrtoint ptr %pid97 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %pid97, align 8
  %add98 = add nuw i32 %i.0191, 1
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug591, ptr noundef %15, ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.23, i32 noundef 3301, i32 noundef %65, i32 noundef %add98) #16
  br label %for.inc103

for.inc103:                                       ; preds = %if.then93, %do.body81, %for.end.thread, %if.end22
  %inc = add nuw i32 %i.0191, 1
  %66 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %num_ports, align 8
  %cmp14 = icmp ult i32 %inc, %67
  br i1 %cmp14, label %for.inc103.for.body_crit_edge, label %for.inc103.for.end104_crit_edge

for.inc103.for.end104_crit_edge:                  ; preds = %for.inc103
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end104

for.inc103.for.body_crit_edge:                    ; preds = %for.inc103
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end104:                                       ; preds = %for.inc103.for.end104_crit_edge, %if.end13.for.end104_crit_edge
  %ib_dev_list = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 30
  %68 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @mlx5_ib_dev_list, i32 0, i32 1), align 4
  %call.i.i174 = tail call zeroext i1 @__list_add_valid(ptr noundef %ib_dev_list, ptr noundef %68, ptr noundef nonnull @mlx5_ib_dev_list) #16
  br i1 %call.i.i174, label %if.end.i.i175, label %for.end104.list_add_tail.exit_crit_edge

for.end104.list_add_tail.exit_crit_edge:          ; preds = %for.end104
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i175:                                    ; preds = %for.end104
  call void @__sanitizer_cov_trace_pc() #18
  store ptr %ib_dev_list, ptr getelementptr inbounds (%struct.list_head, ptr @mlx5_ib_dev_list, i32 0, i32 1), align 4
  %69 = ptrtoint ptr %ib_dev_list to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr @mlx5_ib_dev_list, ptr %ib_dev_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 30, i32 1
  %70 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %68, ptr %prev3.i.i, align 4
  %71 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %71)
  store volatile ptr %ib_dev_list, ptr %68, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i175, %for.end104.list_add_tail.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @mlx5_ib_multiport_mutex) #16
  br label %cleanup105

cleanup105:                                       ; preds = %list_add_tail.exit, %cleanup.thread182, %if.end8.cleanup105_crit_edge, %if.end.cleanup105_crit_edge, %entry.cleanup105_crit_edge
  %retval.2 = phi i32 [ 0, %list_add_tail.exit ], [ 0, %entry.cleanup105_crit_edge ], [ %call5, %if.end.cleanup105_crit_edge ], [ %call10, %if.end8.cleanup105_crit_edge ], [ -12, %cleanup.thread182 ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_comp_vectors_count(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx5_ib_cleanup_multiport_master(ptr noundef %dev) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %3, i32 48
  %4 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i.i, align 4
  %6 = and i32 %5, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %shr.i = lshr i32 %5, 16
  %and.i = and i32 %shr.i, 255
  %and.i.op = add nsw i32 %and.i, -1
  %sub = select i1 %.not.i, i32 0, i32 %and.i.op
  %add.ptr.i = getelementptr i32, ptr %3, i32 13
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i, align 4
  %9 = and i32 %8, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %9)
  %switch.selectcmp.i.i = icmp eq i32 %9, 256
  %10 = and i32 %5, 65024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i = icmp ne i32 %10, 0
  %or.cond = select i1 %cmp.i, i1 %switch.selectcmp.i.i, i1 false
  br i1 %or.cond, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @mlx5_ib_multiport_mutex, i32 noundef 0) #16
  %num_ports = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 3
  %11 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_ports, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp497.not = icmp eq i32 %12, 0
  br i1 %cmp497.not, label %if.end.do.body36_crit_edge, label %for.body.lr.ph

if.end.do.body36_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body36

for.body.lr.ph:                                   ; preds = %if.end
  %port = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 22
  %13 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.098 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %14 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %port, align 8
  %mp = getelementptr %struct.mlx5_ib_port, ptr %15, i32 %i.098, i32 1
  %16 = ptrtoint ptr %mp to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mp, align 4
  %tobool5.not = icmp eq ptr %17, null
  br i1 %tobool5.not, label %for.body.for.inc_crit_edge, label %if.then6

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then6:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_cmp4(i32 %i.098, i32 %sub)
  %cmp7 = icmp eq i32 %i.098, %sub
  br i1 %cmp7, label %if.then8, label %do.body

if.then8:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %17) #16
  %18 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %port, align 8
  %mp15 = getelementptr %struct.mlx5_ib_port, ptr %19, i32 %sub, i32 1
  %20 = ptrtoint ptr %mp15 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %mp15, align 4
  br label %for.inc

do.body:                                          ; preds = %if.then6
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug592, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_cleanup_multiport_master, %if.then21)) #16
          to label %do.end [label %if.then21], !srcloc !404

if.then21:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %21 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i90 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i90 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 68
  %25 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pid, align 8
  %add24 = add nuw i32 %i.098, 1
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug592, ptr noundef %13, ptr noundef nonnull @.str.44, ptr noundef nonnull @.str.43, i32 noundef 3328, i32 noundef %26, i32 noundef %add24) #16
  br label %do.end

do.end:                                           ; preds = %if.then21, %do.body
  %27 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %port, align 8
  %mp28 = getelementptr %struct.mlx5_ib_port, ptr %28, i32 %i.098, i32 1
  %29 = ptrtoint ptr %mp28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mp28, align 4
  %31 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @mlx5_ib_unaffiliated_port_list, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %30, ptr noundef %31, ptr noundef nonnull @mlx5_ib_unaffiliated_port_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %do.end.list_add_tail.exit_crit_edge

do.end.list_add_tail.exit_crit_edge:              ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  store ptr %30, ptr getelementptr inbounds (%struct.list_head, ptr @mlx5_ib_unaffiliated_port_list, i32 0, i32 1), align 4
  %32 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr @mlx5_ib_unaffiliated_port_list, ptr %30, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %33 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %31, ptr %prev3.i.i, align 4
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %30, ptr %31, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %do.end.list_add_tail.exit_crit_edge
  %35 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %port, align 8
  %mp32 = getelementptr %struct.mlx5_ib_port, ptr %36, i32 %i.098, i32 1
  %37 = ptrtoint ptr %mp32 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mp32, align 4
  tail call fastcc void @mlx5_ib_unbind_slave_port(ptr noundef %dev, ptr noundef %38)
  br label %for.inc

for.inc:                                          ; preds = %list_add_tail.exit, %if.then8, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.098, 1
  %39 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %num_ports, align 8
  %cmp4 = icmp ult i32 %inc, %40
  br i1 %cmp4, label %for.inc.for.body_crit_edge, label %for.inc.do.body36_crit_edge

for.inc.do.body36_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body36

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

do.body36:                                        ; preds = %for.inc.do.body36_crit_edge, %if.end.do.body36_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug593, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_cleanup_multiport_master, %if.then48)) #16
          to label %do.end55 [label %if.then48], !srcloc !404

if.then48:                                        ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #18
  %41 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %42 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i91 = and i32 %42, -16384
  %43 = inttoptr i32 %and.i91 to ptr
  %task51 = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %task51 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %task51, align 8
  %pid52 = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 68
  %46 = ptrtoint ptr %pid52 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %pid52, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug593, ptr noundef %41, ptr noundef nonnull @.str.45, ptr noundef nonnull @.str.43, i32 noundef 3337, i32 noundef %47) #16
  br label %do.end55

do.end55:                                         ; preds = %if.then48, %do.body36
  %ib_dev_list = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 30
  %call.i.i92 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %ib_dev_list) #16
  br i1 %call.i.i92, label %if.end.i.i93, label %do.end55.list_del.exit_crit_edge

do.end55.list_del.exit_crit_edge:                 ; preds = %do.end55
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i93:                                     ; preds = %do.end55
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 30, i32 1
  %48 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %prev.i.i, align 4
  %50 = ptrtoint ptr %ib_dev_list to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ib_dev_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %49, ptr %prev1.i.i.i, align 4
  %53 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %51, ptr %49, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i93, %do.end55.list_del.exit_crit_edge
  %54 = ptrtoint ptr %ib_dev_list to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr inttoptr (i32 256 to ptr), ptr %ib_dev_list, align 4
  %prev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 30, i32 1
  %55 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @mlx5_ib_multiport_mutex) #16
  %56 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %mdev, align 8
  %call57 = tail call i32 @mlx5_nic_vport_disable_roce(ptr noundef %57) #16
  br label %cleanup

cleanup:                                          ; preds = %list_del.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_nic_vport_system_image_guid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_nic_vport_enable_roce(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_nic_vport_disable_roce(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @mlx5_ib_bind_slave_port(ptr noundef %ibdev, ptr noundef %mpi) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 2
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 4
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %3, i32 48
  %4 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i.i, align 4
  %6 = and i32 %5, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %shr.i = lshr i32 %5, 16
  %and.i = and i32 %shr.i, 255
  %retval.0.i113 = select i1 %.not.i, i32 1, i32 %and.i
  %sub = add nsw i32 %retval.0.i113, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %7 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @mlx5_ib_multiport_mutex, i32 0, i32 5), i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !408

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3203, i32 noundef 9, ptr noundef null) #16
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %port = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %8 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %port, align 8
  %mpi_lock = getelementptr %struct.mlx5_ib_port, ptr %9, i32 %sub, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock) #16
  %10 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %port, align 8
  %mp27 = getelementptr %struct.mlx5_ib_port, ptr %11, i32 %sub, i32 1
  %12 = ptrtoint ptr %mp27 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mp27, align 4
  %tobool29.not = icmp eq ptr %13, null
  br i1 %tobool29.not, label %if.end50, label %do.body31

do.body31:                                        ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_bind_slave_port.__UNIQUE_ID_ddebug588, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_bind_slave_port, %if.then41)) #16
          to label %do.end45 [label %if.then41], !srcloc !404

if.then41:                                        ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #18
  %14 = getelementptr inbounds %struct.ib_device, ptr %ibdev, i32 0, i32 13
  %15 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i114 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i114 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 68
  %19 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_bind_slave_port.__UNIQUE_ID_ddebug588, ptr noundef %14, ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.27, i32 noundef 3208, i32 noundef %20, i32 noundef %retval.0.i113) #16
  br label %do.end45

do.end45:                                         ; preds = %if.then41, %do.body31
  %21 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %port, align 8
  %mpi_lock49 = getelementptr %struct.mlx5_ib_port, ptr %22, i32 %sub, i32 1, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock49) #16
  br label %cleanup

if.end50:                                         ; preds = %if.end
  %23 = ptrtoint ptr %mp27 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %mpi, ptr %mp27, align 4
  %ibdev55 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 1
  %24 = ptrtoint ptr %ibdev55 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %ibdev, ptr %ibdev55, align 8
  %mdev_events = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 3
  %25 = ptrtoint ptr %mdev_events to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %mdev_events, align 8
  %26 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %port, align 8
  %mpi_lock59 = getelementptr %struct.mlx5_ib_port, ptr %27, i32 %sub, i32 1, i32 1
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock59) #16
  %mdev60 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %28 = ptrtoint ptr %mdev60 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mdev60, align 8
  %30 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mdev, align 4
  %call62 = tail call i32 @mlx5_nic_vport_affiliate_multiport(ptr noundef %29, ptr noundef %31) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %if.end65, label %if.end50.unbind_crit_edge

if.end50.unbind_crit_edge:                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #18
  br label %unbind

if.end65:                                         ; preds = %if.end50
  %32 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %port, align 8
  %nb.i = getelementptr %struct.mlx5_ib_port, ptr %33, i32 %sub, i32 3, i32 2
  %34 = ptrtoint ptr %nb.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @mlx5_netdev_event, ptr %nb.i, align 4
  %35 = load ptr, ptr %port, align 8
  %nb4.i = getelementptr %struct.mlx5_ib_port, ptr %35, i32 %sub, i32 3, i32 2
  %call.i115 = tail call i32 @register_netdevice_notifier(ptr noundef %nb4.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i115)
  %tobool.not.i = icmp eq i32 %call.i115, 0
  br i1 %tobool.not.i, label %if.end77, label %do.end71

do.end71:                                         ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %port, align 8
  %nb8.i = getelementptr %struct.mlx5_ib_port, ptr %37, i32 %sub, i32 3, i32 2
  %38 = ptrtoint ptr %nb8.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %nb8.i, align 4
  %39 = getelementptr inbounds %struct.ib_device, ptr %ibdev, i32 0, i32 13
  %40 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i116 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i116 to ptr
  %task74 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %task74 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task74, align 8
  %pid75 = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 68
  %44 = ptrtoint ptr %pid75 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pid75, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %39, ptr noundef nonnull @.str.29, ptr noundef nonnull @.str.27, i32 noundef 3225, i32 noundef %45, i32 noundef %retval.0.i113) #20
  br label %unbind

if.end77:                                         ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #18
  %46 = ptrtoint ptr %mdev_events to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @mlx5_ib_event_slave_port, ptr %mdev_events, align 8
  %47 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mdev, align 4
  %call82 = tail call i32 @mlx5_notifier_register(ptr noundef %48, ptr noundef %mdev_events) #16
  tail call void @mlx5_ib_init_cong_debugfs(ptr noundef %ibdev, i32 noundef %sub) #16
  br label %cleanup

unbind:                                           ; preds = %do.end71, %if.end50.unbind_crit_edge
  tail call fastcc void @mlx5_ib_unbind_slave_port(ptr noundef %ibdev, ptr noundef %mpi)
  br label %cleanup

cleanup:                                          ; preds = %unbind, %if.end77, %do.end45
  %retval.0 = phi i1 [ false, %do.end45 ], [ false, %unbind ], [ true, %if.end77 ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_nic_vport_affiliate_multiport(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_event_slave_port(ptr noundef %nb, i32 noundef %event, ptr noundef %param) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 2592, i32 noundef 60) #19
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__init_work(ptr noundef nonnull %call7.i, i32 noundef 0) #16
  %1 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -64, ptr %call7.i, align 8
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.32, ptr noundef nonnull @mlx5_ib_event_slave_port.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry5 = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 1
  %2 = ptrtoint ptr %entry5 to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %entry5, ptr %entry5, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 1, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %entry5, ptr %prev.i, align 8
  %func = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 2
  %4 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @mlx5_ib_handle_event, ptr %func, align 4
  %add.ptr = getelementptr i8, ptr %nb, i32 -16
  %5 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr, ptr %5, align 4
  %is_slave = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 2
  %7 = ptrtoint ptr %is_slave to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 1, ptr %is_slave, align 8
  %param7 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 4
  %8 = ptrtoint ptr %param7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %param, ptr %param7, align 8
  %event8 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 3
  %9 = ptrtoint ptr %event8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %event, ptr %event8, align 4
  %10 = load ptr, ptr @mlx5_ib_event_wq, align 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %10, ptr noundef nonnull %call7.i) #16
  br label %cleanup

cleanup:                                          ; preds = %do.body, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %do.body ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_notifier_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_init_cong_debugfs(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx5_ib_unbind_slave_port(ptr noundef %ibdev, ptr noundef %mpi) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 2
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 4
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %3, i32 48
  %4 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i.i, align 4
  %6 = and i32 %5, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %shr.i = lshr i32 %5, 16
  %and.i = and i32 %shr.i, 255
  %retval.0.i125 = select i1 %.not.i, i32 1, i32 %and.i
  %sub = add nsw i32 %retval.0.i125, -1
  %port1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %7 = ptrtoint ptr %port1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %port1, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %9 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @mlx5_ib_multiport_mutex, i32 0, i32 5), i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !408

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3148, i32 noundef 9, ptr noundef null) #16
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @mlx5_ib_cleanup_cong_debugfs(ptr noundef %ibdev, i32 noundef %sub) #16
  %mp = getelementptr %struct.mlx5_ib_port, ptr %8, i32 %sub, i32 1
  %mpi_lock = getelementptr %struct.mlx5_ib_port, ptr %8, i32 %sub, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock) #16
  %ibdev26 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 1
  %10 = ptrtoint ptr %ibdev26 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ibdev26, align 8
  %tobool27.not = icmp eq ptr %11, null
  br i1 %tobool27.not, label %if.then28, label %if.end31

if.then28:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock) #16
  br label %cleanup

if.end31:                                         ; preds = %if.end
  %12 = ptrtoint ptr %ibdev26 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %ibdev26, align 8
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock) #16
  %mdev_events = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 3
  %13 = ptrtoint ptr %mdev_events to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mdev_events, align 8
  %tobool35.not = icmp eq ptr %14, null
  br i1 %tobool35.not, label %if.end31.if.end40_crit_edge, label %if.then36

if.end31.if.end40_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40

if.then36:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mdev, align 4
  %call39 = tail call i32 @mlx5_notifier_unregister(ptr noundef %16, ptr noundef %mdev_events) #16
  br label %if.end40

if.end40:                                         ; preds = %if.then36, %if.end31.if.end40_crit_edge
  %17 = ptrtoint ptr %mdev_events to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %mdev_events, align 8
  %18 = ptrtoint ptr %port1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %port1, align 8
  %nb.i = getelementptr %struct.mlx5_ib_port, ptr %19, i32 %sub, i32 3, i32 2
  %20 = ptrtoint ptr %nb.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nb.i, align 4
  %tobool.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %if.end40.mlx5_remove_netdev_notifier.exit_crit_edge, label %if.then.i

if.end40.mlx5_remove_netdev_notifier.exit_crit_edge: ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_remove_netdev_notifier.exit

if.then.i:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  %call.i126 = tail call i32 @unregister_netdevice_notifier(ptr noundef %nb.i) #16
  %22 = ptrtoint ptr %port1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %port1, align 8
  %nb8.i = getelementptr %struct.mlx5_ib_port, ptr %23, i32 %sub, i32 3, i32 2
  %24 = ptrtoint ptr %nb8.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %nb8.i, align 4
  br label %mlx5_remove_netdev_notifier.exit

mlx5_remove_netdev_notifier.exit:                 ; preds = %if.then.i, %if.end40.mlx5_remove_netdev_notifier.exit_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock) #16
  %mdev_refcnt = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 6
  %25 = ptrtoint ptr %mdev_refcnt to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mdev_refcnt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool45.not = icmp eq i32 %26, 0
  br i1 %tobool45.not, label %mlx5_remove_netdev_notifier.exit.if.end54_crit_edge, label %if.then46

mlx5_remove_netdev_notifier.exit.if.end54_crit_edge: ; preds = %mlx5_remove_netdev_notifier.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

if.then46:                                        ; preds = %mlx5_remove_netdev_notifier.exit
  %unaffiliate = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 8
  %27 = ptrtoint ptr %unaffiliate to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 1, ptr %unaffiliate, align 1
  %unref_comp = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 4
  %28 = ptrtoint ptr %unref_comp to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %unref_comp, align 4
  %wait.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %mpi, i32 0, i32 4, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.39, ptr noundef nonnull @init_completion.__key) #16
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp49130 = icmp sgt i32 %26, 0
  br i1 %cmp49130, label %if.then46.for.body_crit_edge, label %if.then46.for.end_crit_edge

if.then46.for.end_crit_edge:                      ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.then46.for.body_crit_edge:                     ; preds = %if.then46
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then46.for.body_crit_edge
  %i.0131 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.then46.for.body_crit_edge ]
  tail call void @wait_for_completion(ptr noundef %unref_comp) #16
  %inc = add nuw nsw i32 %i.0131, 1
  %exitcond.not = icmp eq i32 %inc, %26
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.then46.for.end_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock) #16
  %29 = ptrtoint ptr %unaffiliate to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 0, ptr %unaffiliate, align 1
  br label %if.end54

if.end54:                                         ; preds = %for.end, %mlx5_remove_netdev_notifier.exit.if.end54_crit_edge
  %30 = ptrtoint ptr %mp to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %mp, align 4
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock) #16
  %31 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %mdev, align 4
  %call60 = tail call i32 @mlx5_nic_vport_unaffiliate_multiport(ptr noundef %32) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_unbind_slave_port.__UNIQUE_ID_ddebug587, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_unbind_slave_port, %if.then71)) #16
          to label %do.end75 [label %if.then71], !srcloc !404

if.then71:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #18
  %33 = getelementptr inbounds %struct.ib_device, ptr %ibdev, i32 0, i32 13
  %34 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i127 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i127 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 68
  %38 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_unbind_slave_port.__UNIQUE_ID_ddebug587, ptr noundef %33, ptr noundef nonnull @.str.37, ptr noundef nonnull @.str.36, i32 noundef 3186, i32 noundef %39, i32 noundef %retval.0.i125) #16
  br label %do.end75

do.end75:                                         ; preds = %if.then71, %if.end54
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool76.not = icmp eq i32 %call60, 0
  br i1 %tobool76.not, label %do.end75.if.end86_crit_edge, label %do.end80

do.end75.if.end86_crit_edge:                      ; preds = %do.end75
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end86

do.end80:                                         ; preds = %do.end75
  call void @__sanitizer_cov_trace_pc() #18
  %40 = getelementptr inbounds %struct.ib_device, ptr %ibdev, i32 0, i32 13
  %41 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i128 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i128 to ptr
  %task83 = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %task83 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task83, align 8
  %pid84 = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 68
  %45 = ptrtoint ptr %pid84 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pid84, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %40, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.36, i32 noundef 3192, i32 noundef %46, i32 noundef %retval.0.i125) #20
  br label %if.end86

if.end86:                                         ; preds = %do.end80, %do.end75.if.end86_crit_edge
  %47 = ptrtoint ptr %port1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %port1, align 8
  %last_port_state = getelementptr %struct.mlx5_ib_port, ptr %48, i32 %sub, i32 3, i32 4
  %49 = ptrtoint ptr %last_port_state to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 1, ptr %last_port_state, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end86, %if.then28
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_netdev_event(ptr noundef %this, i32 noundef %event, ptr nocapture noundef readonly %ptr) #0 align 64 {
entry:
  %attr.i = alloca %struct.ib_port_attr, align 8
  %ibev = alloca %struct.ib_event, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %this, i32 -48
  %0 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ptr, align 4
  %native_port_num = getelementptr i8, ptr %this, i32 24
  %2 = ptrtoint ptr %native_port_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %native_port_num, align 4
  %dev = getelementptr i8, ptr %this, i32 20
  %4 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev, align 4
  %mdev.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %9, i32 13
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %add.ptr.i.i, align 4
  %12 = and i32 %11, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %12)
  %switch.selectcmp.i.i.i = icmp eq i32 %12, 256
  %add.ptr.i.i.i = getelementptr i32, ptr %9, i32 48
  %13 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %add.ptr.i.i.i, align 4
  %15 = and i32 %14, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %16 = icmp ne i32 %15, 0
  %or.cond.i = select i1 %16, i1 %switch.selectcmp.i.i.i, i1 false
  br i1 %or.cond.i, label %if.end6.i, label %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge

entry.mlx5_ib_get_native_port_mdev.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_get_native_port_mdev.exit

if.end6.i:                                        ; preds = %entry
  %port10.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %5, i32 0, i32 22
  %17 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %port10.i, align 8
  %sub.i = add i32 %3, -1
  %mpi_lock.i = getelementptr %struct.mlx5_ib_port, ptr %18, i32 %sub.i, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i) #16
  %19 = ptrtoint ptr %port10.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %port10.i, align 8
  %mp14.i = getelementptr %struct.mlx5_ib_port, ptr %20, i32 %sub.i, i32 1
  %21 = ptrtoint ptr %mp14.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mp14.i, align 4
  %tobool16.not.i = icmp eq ptr %22, null
  br i1 %tobool16.not.i, label %if.end6.i.if.end23.i_crit_edge, label %land.lhs.true.i

if.end6.i.if.end23.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

land.lhs.true.i:                                  ; preds = %if.end6.i
  %unaffiliate.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %22, i32 0, i32 8
  %23 = ptrtoint ptr %unaffiliate.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %unaffiliate.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool17.not.i = icmp eq i8 %24, 0
  br i1 %tobool17.not.i, label %if.then18.i, label %land.lhs.true.i.if.end23.i_crit_edge

land.lhs.true.i.if.end23.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then18.i:                                      ; preds = %land.lhs.true.i
  %mdev19.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %22, i32 0, i32 2
  %25 = ptrtoint ptr %mdev19.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mdev19.i, align 4
  %is_master.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %22, i32 0, i32 7
  %27 = ptrtoint ptr %is_master.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %is_master.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool20.not.i = icmp eq i8 %28, 0
  br i1 %tobool20.not.i, label %if.then21.i, label %if.then18.i.if.end23.i_crit_edge

if.then18.i.if.end23.i_crit_edge:                 ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then21.i:                                      ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  %mdev_refcnt.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %22, i32 0, i32 6
  %29 = ptrtoint ptr %mdev_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mdev_refcnt.i, align 8
  %inc.i = add i32 %30, 1
  store i32 %inc.i, ptr %mdev_refcnt.i, align 8
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then21.i, %if.then18.i.if.end23.i_crit_edge, %land.lhs.true.i.if.end23.i_crit_edge, %if.end6.i.if.end23.i_crit_edge
  %mdev.0.i = phi ptr [ null, %land.lhs.true.i.if.end23.i_crit_edge ], [ %26, %if.then18.i.if.end23.i_crit_edge ], [ %26, %if.then21.i ], [ null, %if.end6.i.if.end23.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i) #16
  br label %mlx5_ib_get_native_port_mdev.exit

mlx5_ib_get_native_port_mdev.exit:                ; preds = %if.end23.i, %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge
  %retval.0.i = phi ptr [ %mdev.0.i, %if.end23.i ], [ %7, %entry.mlx5_ib_get_native_port_mdev.exit_crit_edge ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %mlx5_ib_get_native_port_mdev.exit.cleanup78_crit_edge, label %if.end

mlx5_ib_get_native_port_mdev.exit.cleanup78_crit_edge: ; preds = %mlx5_ib_get_native_port_mdev.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup78

if.end:                                           ; preds = %mlx5_ib_get_native_port_mdev.exit
  %31 = zext i32 %event to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.165)
  switch i32 %event, label %if.end.done_crit_edge [
    i32 5, label %sw.bb
    i32 6, label %sw.bb9
    i32 4, label %if.end.sw.bb17_crit_edge
    i32 1, label %if.end.sw.bb17_crit_edge178
    i32 2, label %if.end.sw.bb17_crit_edge179
  ]

if.end.sw.bb17_crit_edge179:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb17

if.end.sw.bb17_crit_edge178:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb17

if.end.sw.bb17_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb17

if.end.done_crit_edge:                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %done

sw.bb:                                            ; preds = %if.end
  %is_rep = getelementptr inbounds %struct.mlx5_ib_dev, ptr %5, i32 0, i32 5
  %32 = ptrtoint ptr %is_rep to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %is_rep, align 8
  %33 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool2.not = icmp eq i8 %33, 0
  br i1 %tobool2.not, label %if.end4, label %sw.bb.done_crit_edge

sw.bb.done_crit_edge:                             ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %done

if.end4:                                          ; preds = %sw.bb
  tail call void @_raw_write_lock(ptr noundef %add.ptr) #16
  %parent = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 133, i32 1
  %34 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %parent, align 8
  %36 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %retval.0.i, align 8
  %cmp = icmp eq ptr %35, %37
  br i1 %cmp, label %if.then6, label %if.end4.if.end7_crit_edge

if.end4.if.end7_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %netdev = getelementptr i8, ptr %this, i32 -4
  %38 = ptrtoint ptr %netdev to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %1, ptr %netdev, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end4.if.end7_crit_edge
  tail call void @_raw_write_unlock(ptr noundef %add.ptr) #16
  br label %done

sw.bb9:                                           ; preds = %if.end
  tail call void @_raw_write_lock(ptr noundef %add.ptr) #16
  %netdev11 = getelementptr i8, ptr %this, i32 -4
  %39 = ptrtoint ptr %netdev11 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %netdev11, align 4
  %cmp12 = icmp eq ptr %40, %1
  br i1 %cmp12, label %if.then13, label %sw.bb9.if.end15_crit_edge

sw.bb9.if.end15_crit_edge:                        ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.then13:                                        ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #18
  %41 = ptrtoint ptr %netdev11 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %netdev11, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %sw.bb9.if.end15_crit_edge
  tail call void @_raw_write_unlock(ptr noundef %add.ptr) #16
  br label %done

sw.bb17:                                          ; preds = %if.end.sw.bb17_crit_edge, %if.end.sw.bb17_crit_edge178, %if.end.sw.bb17_crit_edge179
  %call18 = tail call ptr @mlx5_lag_get_roce_netdev(ptr noundef nonnull %retval.0.i) #16
  %tobool19.not = icmp eq ptr %call18, null
  br i1 %tobool19.not, label %sw.bb17.if.end22_crit_edge, label %do.body1.i

sw.bb17.if.end22_crit_edge:                       ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

do.body1.i:                                       ; preds = %sw.bb17
  %call21 = tail call ptr @netdev_master_upper_dev_get(ptr noundef nonnull %call18) #16
  %42 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !406
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %call18, i32 0, i32 118
  %43 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pcpu_refcnt.i, align 4
  %45 = ptrtoint ptr %44 to i32
  %46 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 3
  %48 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %49
  %50 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %51, %45
  %52 = inttoptr i32 %add.i to ptr
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %52, align 4
  %add13.i = add i32 %54, -1
  store i32 %add13.i, ptr %52, align 4
  %55 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !407
  %and.i.i.i = and i32 %55, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.dev_put.exit_crit_edge, !prof !408

do.body1.i.dev_put.exit_crit_edge:                ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_put.exit

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %dev_put.exit

dev_put.exit:                                     ; preds = %if.then28.i, %do.body1.i.dev_put.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %42) #16, !srcloc !409
  br label %if.end22

if.end22:                                         ; preds = %dev_put.exit, %sw.bb17.if.end22_crit_edge
  %upper.0 = phi ptr [ %call21, %dev_put.exit ], [ null, %sw.bb17.if.end22_crit_edge ]
  %is_rep23 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %5, i32 0, i32 5
  %56 = ptrtoint ptr %is_rep23 to i32
  call void @__asan_load1_noabort(i32 %56)
  %bf.load24 = load i8, ptr %is_rep23, align 8
  %57 = and i8 %bf.load24, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %57)
  %tobool27.not = icmp eq i8 %57, 0
  br i1 %tobool27.not, label %if.end22.if.end30_crit_edge, label %if.then28

if.end22.if.end30_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end30

if.then28:                                        ; preds = %if.end22
  %num_ports.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %5, i32 0, i32 3
  %58 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %num_ports.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp53.i = icmp sgt i32 %59, 0
  br i1 %cmp53.i, label %for.body.lr.ph.i, label %if.then28.cleanup78_crit_edge

if.then28.cleanup78_crit_edge:                    ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup78

for.body.lr.ph.i:                                 ; preds = %if.then28
  %port1.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %5, i32 0, i32 22
  %cmp2.i = icmp eq ptr %upper.0, %1
  %tobool8.not.i = icmp eq ptr %upper.0, null
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.054.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i119, %for.inc.i.for.body.i_crit_edge ]
  %60 = ptrtoint ptr %port1.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %port1.i, align 8
  %rep.i = getelementptr %struct.mlx5_ib_port, ptr %61, i32 %i.054.i, i32 4
  %62 = ptrtoint ptr %rep.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %rep.i, align 4
  %tobool.not.i116 = icmp eq ptr %63, null
  br i1 %tobool.not.i116, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  br i1 %cmp2.i, label %land.lhs.true.i117, label %if.end.i.if.end7.i_crit_edge

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i

land.lhs.true.i117:                               ; preds = %if.end.i
  %vport.i = getelementptr inbounds %struct.mlx5_eswitch_rep, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %vport.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %vport.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %65)
  %cmp4.i = icmp eq i16 %65, -1
  br i1 %cmp4.i, label %if.then6.i, label %land.lhs.true.i117.if.end7.i_crit_edge

land.lhs.true.i117.if.end7.i_crit_edge:           ; preds = %land.lhs.true.i117
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i

if.then6.i:                                       ; preds = %land.lhs.true.i117
  call void @__sanitizer_cov_trace_pc() #18
  %add.i118 = add nuw nsw i32 %i.054.i, 1
  %roce.i = getelementptr %struct.mlx5_ib_port, ptr %61, i32 %i.054.i, i32 3
  br label %if.end30

if.end7.i:                                        ; preds = %land.lhs.true.i117.if.end7.i_crit_edge, %if.end.i.if.end7.i_crit_edge
  br i1 %tobool8.not.i, label %if.end7.i.if.end16.i_crit_edge, label %land.lhs.true9.i

if.end7.i.if.end16.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

land.lhs.true9.i:                                 ; preds = %if.end7.i
  %vport11.i = getelementptr inbounds %struct.mlx5_eswitch_rep, ptr %63, i32 0, i32 1
  %66 = ptrtoint ptr %vport11.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %vport11.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %67)
  %cmp13.i = icmp eq i16 %67, -1
  br i1 %cmp13.i, label %land.lhs.true9.i.for.inc.i_crit_edge, label %land.lhs.true9.i.if.end16.i_crit_edge

land.lhs.true9.i.if.end16.i_crit_edge:            ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

land.lhs.true9.i.for.inc.i_crit_edge:             ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end16.i:                                       ; preds = %land.lhs.true9.i.if.end16.i_crit_edge, %if.end7.i.if.end16.i_crit_edge
  %roce17.i = getelementptr %struct.mlx5_ib_port, ptr %61, i32 %i.054.i, i32 3
  tail call void @_raw_read_lock(ptr noundef %roce17.i) #16
  %68 = ptrtoint ptr %rep.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %rep.i, align 4
  %esw.i = getelementptr inbounds %struct.mlx5_eswitch_rep, ptr %69, i32 0, i32 5
  %70 = ptrtoint ptr %esw.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %esw.i, align 4
  %vport20.i = getelementptr inbounds %struct.mlx5_eswitch_rep, ptr %69, i32 0, i32 1
  %72 = ptrtoint ptr %vport20.i to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %vport20.i, align 4
  %call.i = tail call ptr @mlx5_ib_get_rep_netdev(ptr noundef %71, i16 noundef zeroext %73) #16
  %cmp21.i = icmp eq ptr %call.i, %1
  tail call void @_raw_read_unlock(ptr noundef %roce17.i) #16
  br i1 %cmp21.i, label %if.then23.i, label %if.end16.i.for.inc.i_crit_edge

if.end16.i.for.inc.i_crit_edge:                   ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then23.i:                                      ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  %add26.i = add nuw nsw i32 %i.054.i, 1
  br label %if.end30

for.inc.i:                                        ; preds = %if.end16.i.for.inc.i_crit_edge, %land.lhs.true9.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i119 = add nuw nsw i32 %i.054.i, 1
  %74 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %num_ports.i, align 8
  %cmp.i = icmp slt i32 %inc.i119, %75
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.cleanup78_crit_edge

for.inc.i.cleanup78_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup78

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.end30:                                         ; preds = %if.then23.i, %if.then6.i, %if.end22.if.end30_crit_edge
  %port_num.1 = phi i32 [ %3, %if.end22.if.end30_crit_edge ], [ %add.i118, %if.then6.i ], [ %add26.i, %if.then23.i ]
  %roce.0 = phi ptr [ %add.ptr, %if.end22.if.end30_crit_edge ], [ %roce.i, %if.then6.i ], [ %roce17.i, %if.then23.i ]
  %tobool31.not = icmp eq ptr %roce.0, null
  br i1 %tobool31.not, label %if.end30.cleanup78_crit_edge, label %if.end33

if.end30.cleanup78_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup78

if.end33:                                         ; preds = %if.end30
  %cmp34 = icmp eq ptr %upper.0, %1
  br i1 %cmp34, label %if.end33.land.lhs.true45_crit_edge, label %lor.lhs.false

if.end33.land.lhs.true45_crit_edge:               ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true45

lor.lhs.false:                                    ; preds = %if.end33
  %tobool35.not = icmp eq ptr %upper.0, null
  br i1 %tobool35.not, label %lor.lhs.false.land.lhs.true_crit_edge, label %lor.lhs.false36

lor.lhs.false.land.lhs.true_crit_edge:            ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %76 = ptrtoint ptr %is_rep23 to i32
  call void @__asan_load1_noabort(i32 %76)
  %bf.load38 = load i8, ptr %is_rep23, align 8
  %77 = and i8 %bf.load38, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool41.not = icmp eq i8 %77, 0
  br i1 %tobool41.not, label %lor.lhs.false36.done_crit_edge, label %lor.lhs.false36.land.lhs.true_crit_edge

lor.lhs.false36.land.lhs.true_crit_edge:          ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

lor.lhs.false36.done_crit_edge:                   ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #18
  br label %done

land.lhs.true:                                    ; preds = %lor.lhs.false36.land.lhs.true_crit_edge, %lor.lhs.false.land.lhs.true_crit_edge
  %netdev42 = getelementptr inbounds %struct.mlx5_roce, ptr %roce.0, i32 0, i32 1
  %78 = ptrtoint ptr %netdev42 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %netdev42, align 4
  %cmp43 = icmp eq ptr %1, %79
  br i1 %cmp43, label %land.lhs.true.land.lhs.true45_crit_edge, label %land.lhs.true.done_crit_edge

land.lhs.true.done_crit_edge:                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %done

land.lhs.true.land.lhs.true45_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true45

land.lhs.true45:                                  ; preds = %land.lhs.true.land.lhs.true45_crit_edge, %if.end33.land.lhs.true45_crit_edge
  %80 = ptrtoint ptr %is_rep23 to i32
  call void @__asan_load1_noabort(i32 %80)
  %bf.load46 = load i8, ptr %is_rep23, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load46)
  %tobool49.not = icmp sgt i8 %bf.load46, -1
  br i1 %tobool49.not, label %land.lhs.true45.done_crit_edge, label %if.then50

land.lhs.true45.done_crit_edge:                   ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #18
  br label %done

if.then50:                                        ; preds = %land.lhs.true45
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %ibev) #16
  %81 = getelementptr inbounds i8, ptr %ibev, i32 8
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 0, ptr %81, align 4
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %attr.i) #16
  %83 = call ptr @memset(ptr %attr.i, i32 0, i32 72)
  %query_port.i = getelementptr inbounds %struct.ib_device, ptr %5, i32 0, i32 1, i32 19
  %84 = ptrtoint ptr %query_port.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %query_port.i, align 4
  %call.i121 = call i32 %85(ptr noundef %5, i32 noundef %port_num.1, ptr noundef nonnull %attr.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i121)
  %tobool.not.i122 = icmp eq i32 %call.i121, 0
  br i1 %tobool.not.i122, label %if.end54, label %get_port_state.exit

get_port_state.exit:                              ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %attr.i) #16
  br label %cleanup.thread

if.end54:                                         ; preds = %if.then50
  %state1.i = getelementptr inbounds %struct.ib_port_attr, ptr %attr.i, i32 0, i32 1
  %86 = ptrtoint ptr %state1.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %state1.i, align 8
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %attr.i) #16
  %last_port_state = getelementptr inbounds %struct.mlx5_roce, ptr %roce.0, i32 0, i32 4
  %88 = ptrtoint ptr %last_port_state to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %last_port_state, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %89, i32 %87)
  %cmp55 = icmp eq i32 %89, %87
  br i1 %cmp55, label %if.end54.cleanup.thread_crit_edge, label %if.end58

if.end54.cleanup.thread_crit_edge:                ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread

if.end58:                                         ; preds = %if.end54
  %90 = ptrtoint ptr %last_port_state to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %87, ptr %last_port_state, align 4
  %91 = ptrtoint ptr %ibev to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %5, ptr %ibev, align 4
  %92 = zext i32 %87 to i64
  call void @__sanitizer_cov_trace_switch(i64 %92, ptr @__sancov_gen_cov_switch_values.166)
  switch i32 %87, label %if.end58.cleanup.thread_crit_edge [
    i32 1, label %if.end58.cleanup_crit_edge
    i32 4, label %if.then68
  ]

if.end58.cleanup_crit_edge:                       ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end58.cleanup.thread_crit_edge:                ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread

if.then68:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup.thread:                                   ; preds = %if.end58.cleanup.thread_crit_edge, %if.end54.cleanup.thread_crit_edge, %get_port_state.exit
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %ibev) #16
  br label %done

cleanup:                                          ; preds = %if.then68, %if.end58.cleanup_crit_edge
  %.sink = phi i32 [ 9, %if.then68 ], [ 10, %if.end58.cleanup_crit_edge ]
  %event65 = getelementptr inbounds %struct.ib_event, ptr %ibev, i32 0, i32 2
  %93 = ptrtoint ptr %event65 to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %.sink, ptr %event65, align 4
  %element = getelementptr inbounds %struct.ib_event, ptr %ibev, i32 0, i32 1
  %94 = ptrtoint ptr %element to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %port_num.1, ptr %element, align 4
  call void @ib_dispatch_event(ptr noundef nonnull %ibev) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %ibev) #16
  br label %done

done:                                             ; preds = %cleanup, %cleanup.thread, %land.lhs.true45.done_crit_edge, %land.lhs.true.done_crit_edge, %lor.lhs.false36.done_crit_edge, %if.end15, %if.end7, %sw.bb.done_crit_edge, %if.end.done_crit_edge
  %port_num.2 = phi i32 [ %3, %if.end.done_crit_edge ], [ %3, %if.end15 ], [ %3, %if.end7 ], [ %3, %sw.bb.done_crit_edge ], [ %port_num.1, %cleanup.thread ], [ %port_num.1, %cleanup ], [ %port_num.1, %land.lhs.true45.done_crit_edge ], [ %port_num.1, %land.lhs.true.done_crit_edge ], [ %port_num.1, %lor.lhs.false36.done_crit_edge ]
  %95 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i126 = getelementptr inbounds %struct.mlx5_core_dev, ptr %96, i32 0, i32 8
  %97 = ptrtoint ptr %caps.i.i126 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %caps.i.i126, align 8
  %add.ptr.i.i127 = getelementptr i32, ptr %98, i32 13
  %99 = ptrtoint ptr %add.ptr.i.i127 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %add.ptr.i.i127, align 4
  %101 = and i32 %100, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %101)
  %switch.selectcmp.i.i.i128 = icmp eq i32 %101, 256
  %add.ptr.i.i.i129 = getelementptr i32, ptr %98, i32 48
  %102 = ptrtoint ptr %add.ptr.i.i.i129 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %add.ptr.i.i.i129, align 4
  %104 = and i32 %103, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %104)
  %105 = icmp ne i32 %104, 0
  %or.cond.i130 = select i1 %105, i1 %switch.selectcmp.i.i.i128, i1 false
  br i1 %or.cond.i130, label %if.end.i135, label %done.cleanup78_crit_edge

done.cleanup78_crit_edge:                         ; preds = %done
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup78

if.end.i135:                                      ; preds = %done
  %port2.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %5, i32 0, i32 22
  %106 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %port2.i, align 8
  %sub.i131 = add i32 %port_num.2, -1
  %mpi_lock.i132 = getelementptr %struct.mlx5_ib_port, ptr %107, i32 %sub.i131, i32 1, i32 1
  call void @_raw_spin_lock(ptr noundef %mpi_lock.i132) #16
  %108 = ptrtoint ptr %port2.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %port2.i, align 8
  %mp6.i = getelementptr %struct.mlx5_ib_port, ptr %109, i32 %sub.i131, i32 1
  %110 = ptrtoint ptr %mp6.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %mp6.i, align 4
  %is_master.i133 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %111, i32 0, i32 7
  %112 = ptrtoint ptr %is_master.i133 to i32
  call void @__asan_load1_noabort(i32 %112)
  %113 = load i8, ptr %is_master.i133, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %113)
  %tobool8.not.i134 = icmp eq i8 %113, 0
  br i1 %tobool8.not.i134, label %if.end10.i, label %if.end.i135.out.i_crit_edge

if.end.i135.out.i_crit_edge:                      ; preds = %if.end.i135
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.end10.i:                                       ; preds = %if.end.i135
  %mdev_refcnt.i136 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %111, i32 0, i32 6
  %114 = ptrtoint ptr %mdev_refcnt.i136 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %mdev_refcnt.i136, align 8
  %dec.i = add i32 %115, -1
  store i32 %dec.i, ptr %mdev_refcnt.i136, align 8
  %unaffiliate.i137 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %111, i32 0, i32 8
  %116 = ptrtoint ptr %unaffiliate.i137 to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %unaffiliate.i137, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %117)
  %tobool11.not.i = icmp eq i8 %117, 0
  br i1 %tobool11.not.i, label %if.end10.i.out.i_crit_edge, label %if.then12.i

if.end10.i.out.i_crit_edge:                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %unref_comp.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %111, i32 0, i32 4
  call void @complete(ptr noundef %unref_comp.i) #16
  br label %out.i

out.i:                                            ; preds = %if.then12.i, %if.end10.i.out.i_crit_edge, %if.end.i135.out.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %mpi_lock.i132) #16
  br label %cleanup78

cleanup78:                                        ; preds = %out.i, %done.cleanup78_crit_edge, %if.end30.cleanup78_crit_edge, %for.inc.i.cleanup78_crit_edge, %if.then28.cleanup78_crit_edge, %mlx5_ib_get_native_port_mdev.exit.cleanup78_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdevice_notifier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @netdev_master_upper_dev_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ib_dispatch_event(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_get_rep_netdev(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_handle_event(ptr noundef %_work) #0 align 64 {
entry:
  %cq_armed_list.i = alloca %struct.list_head, align 4
  %ibev = alloca %struct.ib_event, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %ibev) #16
  %0 = ptrtoint ptr %ibev to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %ibev, align 4, !annotation !403
  %1 = getelementptr inbounds %struct.ib_event, ptr %ibev, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !403
  %3 = getelementptr inbounds %struct.ib_event, ptr %ibev, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !403
  %is_slave = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %_work, i32 0, i32 2
  %5 = ptrtoint ptr %is_slave to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_slave, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  %7 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %_work, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then:                                          ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @mlx5_ib_multiport_mutex, i32 noundef 0) #16
  %ibdev.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %ibdev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ibdev.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @mlx5_ib_multiport_mutex) #16
  %tobool1.not = icmp eq ptr %11, null
  br i1 %tobool1.not, label %if.then.out_crit_edge, label %if.then.if.end3_crit_edge

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then.out_crit_edge:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end3:                                          ; preds = %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  %ibdev.0 = phi ptr [ %11, %if.then.if.end3_crit_edge ], [ %9, %entry.if.end3_crit_edge ]
  %event = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %_work, i32 0, i32 3
  %12 = ptrtoint ptr %event to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %event, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.167)
  switch i32 %13, label %if.end3.out_crit_edge [
    i32 128, label %sw.bb
    i32 9, label %sw.bb6
    i32 34, label %sw.bb12
  ]

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

sw.bb:                                            ; preds = %if.end3
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 8, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cq_armed_list.i) #16
  %16 = getelementptr inbounds %struct.list_head, ptr %cq_armed_list.i, i32 0, i32 1
  %17 = ptrtoint ptr %cq_armed_list.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %cq_armed_list.i, ptr %cq_armed_list.i, align 4
  %18 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %cq_armed_list.i, ptr %16, align 4
  %reset_flow_resource_lock.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev.0, i32 0, i32 20
  %call2.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %reset_flow_resource_lock.i) #16
  %qp_list.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev.0, i32 0, i32 21
  %19 = ptrtoint ptr %qp_list.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn184.i = load ptr, ptr %qp_list.i, align 4
  %cmp7.not185.i = icmp eq ptr %.pn184.i, %qp_list.i
  br i1 %cmp7.not185.i, label %sw.bb.for.cond130.preheader.i_crit_edge, label %sw.bb.do.body10.i_crit_edge

sw.bb.do.body10.i_crit_edge:                      ; preds = %sw.bb
  br label %do.body10.i

sw.bb.for.cond130.preheader.i_crit_edge:          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond130.preheader.i

for.cond130.preheader.i:                          ; preds = %if.end118.i.for.cond130.preheader.i_crit_edge, %sw.bb.for.cond130.preheader.i_crit_edge
  %20 = ptrtoint ptr %cq_armed_list.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn177187.i = load ptr, ptr %cq_armed_list.i, align 4
  %cmp132.not188.i = icmp eq ptr %.pn177187.i, %cq_armed_list.i
  br i1 %cmp132.not188.i, label %for.cond130.preheader.i.mlx5_ib_handle_internal_error.exit_crit_edge, label %for.cond130.preheader.i.for.body135.i_crit_edge

for.cond130.preheader.i.for.body135.i_crit_edge:  ; preds = %for.cond130.preheader.i
  br label %for.body135.i

for.cond130.preheader.i.mlx5_ib_handle_internal_error.exit_crit_edge: ; preds = %for.cond130.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_handle_internal_error.exit

do.body10.i:                                      ; preds = %if.end118.i.do.body10.i_crit_edge, %sw.bb.do.body10.i_crit_edge
  %.pn186.i = phi ptr [ %.pn.i, %if.end118.i.do.body10.i_crit_edge ], [ %.pn184.i, %sw.bb.do.body10.i_crit_edge ]
  %lock.i = getelementptr i8, ptr %.pn186.i, i32 -208
  %call17.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #16
  %tail.i = getelementptr i8, ptr %.pn186.i, i32 -140
  %21 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tail.i, align 8
  %head.i = getelementptr i8, ptr %.pn186.i, i32 -144
  %23 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %head.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %24)
  %cmp24.not.i = icmp eq i32 %22, %24
  br i1 %cmp24.not.i, label %do.body10.i.if.end54.i_crit_edge, label %if.then.i

do.body10.i.if.end54.i_crit_edge:                 ; preds = %do.body10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54.i

if.then.i:                                        ; preds = %do.body10.i
  %send_cq.i = getelementptr i8, ptr %.pn186.i, i32 -932
  %25 = ptrtoint ptr %send_cq.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %send_cq.i, align 8
  %lock34.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %26, i32 0, i32 4
  %call36.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock34.i) #16
  %comp.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %26, i32 0, i32 1, i32 9
  %27 = ptrtoint ptr %comp.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %comp.i, align 8
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %if.then.i.if.end52.i_crit_edge, label %land.lhs.true.i

if.then.i.if.end52.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end52.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %29 = ptrtoint ptr %send_cq.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %send_cq.i, align 8
  %comp_handler.i = getelementptr inbounds %struct.ib_cq, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %comp_handler.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %comp_handler.i, align 8
  %tobool44.not.i = icmp eq ptr %32, null
  br i1 %tobool44.not.i, label %land.lhs.true.i.if.end52.i_crit_edge, label %if.then45.i

land.lhs.true.i.if.end52.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end52.i

if.then45.i:                                      ; preds = %land.lhs.true.i
  %reset_notify_added.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %26, i32 0, i32 1, i32 16
  %33 = ptrtoint ptr %reset_notify_added.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %reset_notify_added.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool47.not.i = icmp eq i32 %34, 0
  br i1 %tobool47.not.i, label %if.then48.i, label %if.then45.i.if.end52.i_crit_edge

if.then45.i.if.end52.i_crit_edge:                 ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end52.i

if.then48.i:                                      ; preds = %if.then45.i
  %35 = ptrtoint ptr %reset_notify_added.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 1, ptr %reset_notify_added.i, align 8
  %reset_notify.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %26, i32 0, i32 1, i32 17
  %36 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %16, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %reset_notify.i, ptr noundef %37, ptr noundef nonnull %cq_armed_list.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then48.i.if.end52.i_crit_edge

if.then48.i.if.end52.i_crit_edge:                 ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end52.i

if.end.i.i.i:                                     ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %reset_notify.i, ptr %16, align 4
  %39 = ptrtoint ptr %reset_notify.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %cq_armed_list.i, ptr %reset_notify.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %26, i32 0, i32 1, i32 17, i32 1
  %40 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %37, ptr %prev3.i.i.i, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %reset_notify.i, ptr %37, align 4
  br label %if.end52.i

if.end52.i:                                       ; preds = %if.end.i.i.i, %if.then48.i.if.end52.i_crit_edge, %if.then45.i.if.end52.i_crit_edge, %land.lhs.true.i.if.end52.i_crit_edge, %if.then.i.if.end52.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock34.i, i32 noundef %call36.i) #16
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.end52.i, %do.body10.i.if.end54.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call17.i) #16
  %lock64.i = getelementptr i8, ptr %.pn186.i, i32 -328
  %call66.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock64.i) #16
  %srq.i = getelementptr i8, ptr %.pn186.i, i32 -860
  %42 = ptrtoint ptr %srq.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %srq.i, align 8
  %tobool72.not.i = icmp eq ptr %43, null
  br i1 %tobool72.not.i, label %if.then73.i, label %if.end54.i.if.end118.i_crit_edge

if.end54.i.if.end118.i_crit_edge:                 ; preds = %if.end54.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end118.i

if.then73.i:                                      ; preds = %if.end54.i
  %tail75.i = getelementptr i8, ptr %.pn186.i, i32 -260
  %44 = ptrtoint ptr %tail75.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %tail75.i, align 8
  %head77.i = getelementptr i8, ptr %.pn186.i, i32 -264
  %46 = ptrtoint ptr %head77.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %head77.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %45, i32 %47)
  %cmp78.not.i = icmp eq i32 %45, %47
  br i1 %cmp78.not.i, label %if.then73.i.if.end118.i_crit_edge, label %if.then80.i

if.then73.i.if.end118.i_crit_edge:                ; preds = %if.then73.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end118.i

if.then80.i:                                      ; preds = %if.then73.i
  %recv_cq.i = getelementptr i8, ptr %.pn186.i, i32 -928
  %48 = ptrtoint ptr %recv_cq.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %recv_cq.i, align 4
  %lock90.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %49, i32 0, i32 4
  %call92.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock90.i) #16
  %comp98.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %49, i32 0, i32 1, i32 9
  %50 = ptrtoint ptr %comp98.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %comp98.i, align 8
  %tobool99.not.i = icmp eq ptr %51, null
  br i1 %tobool99.not.i, label %if.then80.i.if.end115.i_crit_edge, label %land.lhs.true100.i

if.then80.i.if.end115.i_crit_edge:                ; preds = %if.then80.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end115.i

land.lhs.true100.i:                               ; preds = %if.then80.i
  %52 = ptrtoint ptr %recv_cq.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %recv_cq.i, align 4
  %comp_handler103.i = getelementptr inbounds %struct.ib_cq, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %comp_handler103.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %comp_handler103.i, align 8
  %tobool104.not.i = icmp eq ptr %55, null
  br i1 %tobool104.not.i, label %land.lhs.true100.i.if.end115.i_crit_edge, label %if.then105.i

land.lhs.true100.i.if.end115.i_crit_edge:         ; preds = %land.lhs.true100.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end115.i

if.then105.i:                                     ; preds = %land.lhs.true100.i
  %reset_notify_added107.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %49, i32 0, i32 1, i32 16
  %56 = ptrtoint ptr %reset_notify_added107.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %reset_notify_added107.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool108.not.i = icmp eq i32 %57, 0
  br i1 %tobool108.not.i, label %if.then109.i, label %if.then105.i.if.end115.i_crit_edge

if.then105.i.if.end115.i_crit_edge:               ; preds = %if.then105.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end115.i

if.then109.i:                                     ; preds = %if.then105.i
  %58 = ptrtoint ptr %reset_notify_added107.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 1, ptr %reset_notify_added107.i, align 8
  %reset_notify113.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %49, i32 0, i32 1, i32 17
  %59 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %16, align 4
  %call.i.i180.i = call zeroext i1 @__list_add_valid(ptr noundef %reset_notify113.i, ptr noundef %60, ptr noundef nonnull %cq_armed_list.i) #16
  br i1 %call.i.i180.i, label %if.end.i.i182.i, label %if.then109.i.if.end115.i_crit_edge

if.then109.i.if.end115.i_crit_edge:               ; preds = %if.then109.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end115.i

if.end.i.i182.i:                                  ; preds = %if.then109.i
  call void @__sanitizer_cov_trace_pc() #18
  %61 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %reset_notify113.i, ptr %16, align 4
  %62 = ptrtoint ptr %reset_notify113.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %cq_armed_list.i, ptr %reset_notify113.i, align 4
  %prev3.i.i181.i = getelementptr inbounds %struct.mlx5_ib_cq, ptr %49, i32 0, i32 1, i32 17, i32 1
  %63 = ptrtoint ptr %prev3.i.i181.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %60, ptr %prev3.i.i181.i, align 4
  %64 = ptrtoint ptr %60 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %reset_notify113.i, ptr %60, align 4
  br label %if.end115.i

if.end115.i:                                      ; preds = %if.end.i.i182.i, %if.then109.i.if.end115.i_crit_edge, %if.then105.i.if.end115.i_crit_edge, %land.lhs.true100.i.if.end115.i_crit_edge, %if.then80.i.if.end115.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock90.i, i32 noundef %call92.i) #16
  br label %if.end118.i

if.end118.i:                                      ; preds = %if.end115.i, %if.then73.i.if.end118.i_crit_edge, %if.end54.i.if.end118.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock64.i, i32 noundef %call66.i) #16
  %65 = ptrtoint ptr %.pn186.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %.pn.i = load ptr, ptr %.pn186.i, align 4
  %cmp7.not.i = icmp eq ptr %.pn.i, %qp_list.i
  br i1 %cmp7.not.i, label %if.end118.i.for.cond130.preheader.i_crit_edge, label %if.end118.i.do.body10.i_crit_edge

if.end118.i.do.body10.i_crit_edge:                ; preds = %if.end118.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body10.i

if.end118.i.for.cond130.preheader.i_crit_edge:    ; preds = %if.end118.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond130.preheader.i

for.body135.i:                                    ; preds = %for.body135.i.for.body135.i_crit_edge, %for.cond130.preheader.i.for.body135.i_crit_edge
  %.pn177189.i = phi ptr [ %.pn177.i, %for.body135.i.for.body135.i_crit_edge ], [ %.pn177187.i, %for.cond130.preheader.i.for.body135.i_crit_edge ]
  %mcq.0.i = getelementptr i8, ptr %.pn177189.i, i32 -132
  %comp136.i = getelementptr i8, ptr %.pn177189.i, i32 -44
  %66 = ptrtoint ptr %comp136.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %comp136.i, align 4
  call void %67(ptr noundef %mcq.0.i, ptr noundef null) #16
  %68 = ptrtoint ptr %.pn177189.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %.pn177.i = load ptr, ptr %.pn177189.i, align 4
  %cmp132.not.i = icmp eq ptr %.pn177.i, %cq_armed_list.i
  br i1 %cmp132.not.i, label %for.body135.i.mlx5_ib_handle_internal_error.exit_crit_edge, label %for.body135.i.for.body135.i_crit_edge

for.body135.i.for.body135.i_crit_edge:            ; preds = %for.body135.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body135.i

for.body135.i.mlx5_ib_handle_internal_error.exit_crit_edge: ; preds = %for.body135.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_handle_internal_error.exit

mlx5_ib_handle_internal_error.exit:               ; preds = %for.body135.i.mlx5_ib_handle_internal_error.exit_crit_edge, %for.cond130.preheader.i.mlx5_ib_handle_internal_error.exit_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %reset_flow_resource_lock.i, i32 noundef %call2.i) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cq_armed_list.i) #16
  %param = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %_work, i32 0, i32 4
  %69 = ptrtoint ptr %param to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %param, align 4
  %71 = ptrtoint ptr %70 to i32
  %conv5 = and i32 %71, 255
  %72 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %conv5, ptr %1, align 4
  br label %sw.epilog

sw.bb6:                                           ; preds = %if.end3
  %param7 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %_work, i32 0, i32 4
  %73 = ptrtoint ptr %param7 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %param7, align 4
  %port1.i = getelementptr inbounds %struct.mlx5_eqe, ptr %74, i32 0, i32 5, i32 0, i32 1
  %75 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %port1.i, align 1
  %77 = lshr i8 %76, 4
  %78 = zext i8 %77 to i32
  %79 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %1, align 4
  %sub_type.i = getelementptr inbounds %struct.mlx5_eqe, ptr %74, i32 0, i32 3
  %80 = ptrtoint ptr %sub_type.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %sub_type.i, align 1
  %82 = zext i8 %81 to i64
  call void @__sanitizer_cov_trace_switch(i64 %82, ptr @__sancov_gen_cov_switch_values.168)
  switch i8 %81, label %sw.bb6.out_crit_edge [
    i8 4, label %sw.bb6.sw.bb.i_crit_edge
    i8 1, label %sw.bb6.sw.bb.i_crit_edge59
    i8 5, label %sw.bb6.sw.bb.i_crit_edge60
    i8 6, label %sw.bb8.i
    i8 7, label %sw.bb10.i
    i8 8, label %sw.bb13.i
    i8 9, label %sw.bb15.i
  ]

sw.bb6.sw.bb.i_crit_edge60:                       ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

sw.bb6.sw.bb.i_crit_edge59:                       ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

sw.bb6.sw.bb.i_crit_edge:                         ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i

sw.bb6.out_crit_edge:                             ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

sw.bb.i:                                          ; preds = %sw.bb6.sw.bb.i_crit_edge, %sw.bb6.sw.bb.i_crit_edge59, %sw.bb6.sw.bb.i_crit_edge60
  %mdev.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev.0, i32 0, i32 1
  %83 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %84, i32 0, i32 8
  %85 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %86, i32 13
  %87 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %add.ptr.i.i, align 4
  %89 = and i32 %88, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %89)
  %switch.selectcmp.i.i.i = icmp eq i32 %89, 256
  br i1 %switch.selectcmp.i.i.i, label %sw.bb.i.out_crit_edge, label %if.end.i

sw.bb.i.out_crit_edge:                            ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end.i:                                         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %81)
  %cmp6.i = icmp eq i8 %81, 4
  %cond.i = select i1 %cmp6.i, i32 9, i32 10
  %90 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %cond.i, ptr %3, align 4
  br label %sw.epilog

sw.bb8.i:                                         ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  %91 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 11, ptr %3, align 4
  br label %sw.epilog

sw.bb10.i:                                        ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  %92 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 12, ptr %3, align 4
  %sub.i = add nsw i32 %78, -1
  %pkey_change_work.i = getelementptr %struct.mlx5_ib_dev, ptr %ibdev.0, i32 0, i32 8, i32 6, i32 %sub.i, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %93 = load ptr, ptr @system_wq, align 4
  %call.i.i.i46 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %93, ptr noundef %pkey_change_work.i) #16
  br label %sw.epilog

sw.bb13.i:                                        ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  %94 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 18, ptr %3, align 4
  br label %sw.epilog

sw.bb15.i:                                        ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  %95 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 17, ptr %3, align 4
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.end3
  %param13 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %_work, i32 0, i32 4
  %96 = ptrtoint ptr %param13 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %param13, align 4
  %sub_type.i47 = getelementptr inbounds %struct.mlx5_eqe, ptr %97, i32 0, i32 3
  %98 = ptrtoint ptr %sub_type.i47 to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %sub_type.i47, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %99)
  %cond.i48 = icmp eq i8 %99, 1
  br i1 %cond.i48, label %sw.bb.i53, label %sw.bb12.out_crit_edge

sw.bb12.out_crit_edge:                            ; preds = %sw.bb12
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

sw.bb.i53:                                        ; preds = %sw.bb12
  %mdev.i.i49 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev.0, i32 0, i32 1
  %100 = ptrtoint ptr %mdev.i.i49 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %mdev.i.i49, align 8
  %caps.i.i50 = getelementptr inbounds %struct.mlx5_core_dev, ptr %101, i32 0, i32 8
  %102 = ptrtoint ptr %caps.i.i50 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %caps.i.i50, align 8
  %add.ptr.i.i51 = getelementptr i32, ptr %103, i32 13
  %104 = ptrtoint ptr %add.ptr.i.i51 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %add.ptr.i.i51, align 4
  %106 = and i32 %105, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %106)
  %switch.selectcmp.i.i.i52 = icmp eq i32 %106, 256
  br i1 %switch.selectcmp.i.i.i52, label %if.then.i55, label %sw.bb.i53.out_crit_edge

sw.bb.i53.out_crit_edge:                          ; preds = %sw.bb.i53
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then.i55:                                      ; preds = %sw.bb.i53
  call void @__sanitizer_cov_trace_pc() #18
  %delay_drop_work.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev.0, i32 0, i32 26, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %107 = load ptr, ptr @system_wq, align 4
  %call.i.i.i54 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %107, ptr noundef %delay_drop_work.i) #16
  br label %out

sw.epilog:                                        ; preds = %sw.bb15.i, %sw.bb13.i, %sw.bb10.i, %sw.bb8.i, %if.end.i, %mlx5_ib_handle_internal_error.exit
  %fatal.0.off0 = phi i1 [ true, %mlx5_ib_handle_internal_error.exit ], [ false, %sw.bb15.i ], [ false, %sw.bb13.i ], [ false, %sw.bb10.i ], [ false, %sw.bb8.i ], [ false, %if.end.i ]
  %108 = ptrtoint ptr %ibev to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %ibdev.0, ptr %ibev, align 4
  %109 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %1, align 4
  %is_switch.i.i.i = getelementptr inbounds %struct.ib_device, ptr %ibdev.0, i32 0, i32 19
  %111 = ptrtoint ptr %is_switch.i.i.i to i32
  call void @__asan_load1_noabort(i32 %111)
  %bf.load.i.i.i = load i8, ptr %is_switch.i.i.i, align 4
  %112 = xor i8 %bf.load.i.i.i, -1
  %113 = lshr i8 %112, 7
  %.not.i.i = zext i8 %113 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %110, i32 %.not.i.i)
  %cmp.not.i = icmp ult i32 %110, %.not.i.i
  br i1 %cmp.not.i, label %sw.epilog.do.end_crit_edge, label %land.rhs.i

sw.epilog.do.end_crit_edge:                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.rhs.i:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.load.i.i.i)
  %tobool.i.i.i = icmp slt i8 %bf.load.i.i.i, 0
  br i1 %tobool.i.i.i, label %land.rhs.i.rdma_is_port_valid.exit_crit_edge, label %cond.false.i.i

land.rhs.i.rdma_is_port_valid.exit_crit_edge:     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rdma_is_port_valid.exit

cond.false.i.i:                                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  %phys_port_cnt.i.i = getelementptr inbounds %struct.ib_device, ptr %ibdev.0, i32 0, i32 21
  %114 = ptrtoint ptr %phys_port_cnt.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %phys_port_cnt.i.i, align 8
  br label %rdma_is_port_valid.exit

rdma_is_port_valid.exit:                          ; preds = %cond.false.i.i, %land.rhs.i.rdma_is_port_valid.exit_crit_edge
  %cond.i.i = phi i32 [ %115, %cond.false.i.i ], [ 0, %land.rhs.i.rdma_is_port_valid.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond.i.i, i32 %110)
  %cmp2.i.not = icmp ult i32 %cond.i.i, %110
  br i1 %cmp2.i.not, label %rdma_is_port_valid.exit.do.end_crit_edge, label %if.end22

rdma_is_port_valid.exit.do.end_crit_edge:         ; preds = %rdma_is_port_valid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %rdma_is_port_valid.exit.do.end_crit_edge, %sw.epilog.do.end_crit_edge
  %116 = getelementptr inbounds %struct.ib_device, ptr %ibdev.0, i32 0, i32 13
  %117 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %117, -16384
  %118 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %118, i32 0, i32 2
  %119 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %120, i32 0, i32 68
  %121 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %pid, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %116, ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.34, i32 noundef 2707, i32 noundef %122, i32 noundef %110) #20
  br label %out

if.end22:                                         ; preds = %rdma_is_port_valid.exit
  %ib_active = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev.0, i32 0, i32 5
  %123 = ptrtoint ptr %ib_active to i32
  call void @__asan_load1_noabort(i32 %123)
  %bf.load = load i8, ptr %ib_active, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool23.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool23.not, label %if.end22.if.end25_crit_edge, label %if.then24

if.end22.if.end25_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then24:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  call void @ib_dispatch_event(ptr noundef nonnull %ibev) #16
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end22.if.end25_crit_edge
  br i1 %fatal.0.off0, label %if.then27, label %if.end25.out_crit_edge

if.end25.out_crit_edge:                           ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then27:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  %124 = ptrtoint ptr %ib_active to i32
  call void @__asan_load1_noabort(i32 %124)
  %bf.load29 = load i8, ptr %ib_active, align 8
  %bf.clear = and i8 %bf.load29, 127
  store i8 %bf.clear, ptr %ib_active, align 8
  br label %out

out:                                              ; preds = %if.then27, %if.end25.out_crit_edge, %do.end, %if.then.i55, %sw.bb.i53.out_crit_edge, %sw.bb12.out_crit_edge, %sw.bb.i.out_crit_edge, %sw.bb6.out_crit_edge, %if.end3.out_crit_edge, %if.then.out_crit_edge
  call void @kfree(ptr noundef %_work) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %ibev) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_cleanup_cong_debugfs(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_notifier_unregister(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_nic_vport_unaffiliate_multiport(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @unregister_netdevice_notifier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_max_pkeys(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_ext_port_caps(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ib_set_device_ops(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_rn_get_params(ptr noundef %device, i32 noundef %port_num, i32 noundef %type, ptr noundef %params) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %type)
  %cmp.not = icmp eq i32 %type, 1
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %call1 = tail call i32 @mlx5_rdma_rn_get_params(ptr noundef %1, ptr noundef %device, ptr noundef %params) #16
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ -95, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_rdma_rn_get_params(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_set_vf_link_state(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_get_vf_config(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_get_vf_stats(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_get_vf_guid(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_set_vf_guid(ptr noundef, i32 noundef, i32 noundef, i64 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_alloc_mw(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_dealloc_mw(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_alloc_xrcd(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_dealloc_xrcd(ptr noundef, ptr noundef) #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_post_send_nodrain(ptr noundef %ibqp, ptr noundef %wr, ptr noundef %bad_wr) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 @mlx5_ib_post_send(ptr noundef %ibqp, ptr noundef %wr, ptr noundef %bad_wr, i1 noundef zeroext false) #16
  ret i32 %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_post_recv_nodrain(ptr noundef %ibqp, ptr noundef %wr, ptr noundef %bad_wr) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 @mlx5_ib_post_recv(ptr noundef %ibqp, ptr noundef %wr, ptr noundef %bad_wr, i1 noundef zeroext false) #16
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_drain_rq(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_drain_sq(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_poll_cq(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_arm_cq(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_post_srq_recv(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_process_mad(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_query_device(ptr noundef %ibdev, ptr noundef %props, ptr noundef readonly %uhw) #0 align 64 {
entry:
  %tmp.i = alloca i64, align 8
  %resp = alloca %struct.mlx5_ib_query_device_resp, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %uhw, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %outlen = getelementptr inbounds %struct.ib_udata, ptr %uhw, i32 0, i32 3
  %0 = ptrtoint ptr %outlen to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %outlen, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %1, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %mdev1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %2 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev1, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %5, i32 18
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr, align 4
  %and = and i32 %7, 255
  %sh_prom = zext i32 %and to i64
  %add.ptr.i.i = getelementptr i32, ptr %5, i32 48
  %8 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr.i.i, align 4
  %10 = and i32 %9, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %.not = icmp ne i32 %10, 0
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %resp) #16
  %11 = call ptr @memset(ptr %resp, i32 0, i32 104)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %tobool4.not = icmp eq i32 %cond, 0
  %12 = add i32 %cond, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %12)
  %13 = icmp ult i32 %12, 7
  br i1 %13, label %cond.end.cleanup_crit_edge, label %if.end

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %response_length = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 1
  %14 = ptrtoint ptr %response_length to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 8, ptr %response_length, align 4
  br i1 %tobool.not, label %if.end.if.end12_crit_edge, label %land.lhs.true6

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

land.lhs.true6:                                   ; preds = %if.end
  %inlen = getelementptr inbounds %struct.ib_udata, ptr %uhw, i32 0, i32 2
  %15 = ptrtoint ptr %inlen to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %inlen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool7.not = icmp eq i32 %16, 0
  br i1 %tobool7.not, label %land.lhs.true6.if.end12_crit_edge, label %land.lhs.true8

land.lhs.true6.if.end12_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

land.lhs.true8:                                   ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %16)
  %cmp.i.i = icmp ugt i32 %16, 65535
  br i1 %cmp.i.i, label %land.lhs.true8.cleanup_crit_edge, label %if.end.i.i

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i.i:                                       ; preds = %land.lhs.true8
  %17 = ptrtoint ptr %uhw to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %uhw, align 4
  %call.i.i = tail call ptr @memdup_user(ptr noundef %18, i32 noundef %16) #16
  %cmp.i.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end.i.i.cleanup_crit_edge, label %ib_is_udata_cleared.exit

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

ib_is_udata_cleared.exit:                         ; preds = %if.end.i.i
  %call4.i.i = tail call ptr @memchr_inv(ptr noundef %call.i.i, i32 noundef 0, i32 noundef %16) #16
  %tobool.not.i.i = icmp eq ptr %call4.i.i, null
  tail call void @kfree(ptr noundef %call.i.i) #16
  br i1 %tobool.not.i.i, label %ib_is_udata_cleared.exit.if.end12_crit_edge, label %ib_is_udata_cleared.exit.cleanup_crit_edge

ib_is_udata_cleared.exit.cleanup_crit_edge:       ; preds = %ib_is_udata_cleared.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

ib_is_udata_cleared.exit.if.end12_crit_edge:      ; preds = %ib_is_udata_cleared.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.end12:                                         ; preds = %ib_is_udata_cleared.exit.if.end12_crit_edge, %land.lhs.true6.if.end12_crit_edge, %if.end.if.end12_crit_edge
  %19 = call ptr @memset(ptr %props, i32 0, i32 296)
  %sys_image_guid = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 1
  %20 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mdev1, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp.i) #16
  %22 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 -1, ptr %tmp.i, align 8, !annotation !403
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %21, i32 0, i32 8
  %23 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %24, i32 13
  %25 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %add.ptr.i.i.i, align 4
  %27 = and i32 %26, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %.not.i.i = icmp eq i32 %27, 0
  %28 = and i32 %26, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %28)
  %switch.selectcmp.i.i.i.i = icmp eq i32 %28, 256
  %..i.i = select i1 %switch.selectcmp.i.i.i.i, i32 2, i32 1
  %retval.0.i.i1342 = select i1 %.not.i.i, i32 0, i32 %..i.i
  %29 = zext i32 %retval.0.i.i1342 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.169)
  switch i32 %retval.0.i.i1342, label %if.end12.mlx5_query_system_image_guid.exit.thread_crit_edge [
    i32 0, label %mlx5_query_system_image_guid.exit
    i32 1, label %sw.bb4.i
    i32 2, label %sw.bb6.i
  ]

if.end12.mlx5_query_system_image_guid.exit.thread_crit_edge: ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_query_system_image_guid.exit.thread

sw.bb4.i:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %call5.i = call i32 @mlx5_query_hca_vport_system_image_guid(ptr noundef %21, ptr noundef nonnull %tmp.i) #16
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %call7.i = call i32 @mlx5_query_nic_vport_system_image_guid(ptr noundef %21, ptr noundef nonnull %tmp.i) #16
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb6.i, %sw.bb4.i
  %err.0.i = phi i32 [ %call7.i, %sw.bb6.i ], [ %call5.i, %sw.bb4.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i)
  %tobool.not.i = icmp eq i32 %err.0.i, 0
  br i1 %tobool.not.i, label %mlx5_query_system_image_guid.exit.thread1364, label %sw.epilog.i.mlx5_query_system_image_guid.exit.thread_crit_edge

sw.epilog.i.mlx5_query_system_image_guid.exit.thread_crit_edge: ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_query_system_image_guid.exit.thread

mlx5_query_system_image_guid.exit.thread1364:     ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %tmp.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %tmp.i, align 8
  %32 = ptrtoint ptr %sys_image_guid to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %sys_image_guid, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #16
  br label %if.end16

mlx5_query_system_image_guid.exit.thread:         ; preds = %sw.epilog.i.mlx5_query_system_image_guid.exit.thread_crit_edge, %if.end12.mlx5_query_system_image_guid.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ %err.0.i, %sw.epilog.i.mlx5_query_system_image_guid.exit.thread_crit_edge ], [ -22, %if.end12.mlx5_query_system_image_guid.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #16
  br label %cleanup

mlx5_query_system_image_guid.exit:                ; preds = %if.end12
  %call3.i = tail call i32 @mlx5_query_mad_ifc_system_image_guid(ptr noundef %ibdev, ptr noundef %sys_image_guid) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool14.not = icmp eq i32 %call3.i, 0
  br i1 %tobool14.not, label %mlx5_query_system_image_guid.exit.if.end16_crit_edge, label %mlx5_query_system_image_guid.exit.cleanup_crit_edge

mlx5_query_system_image_guid.exit.cleanup_crit_edge: ; preds = %mlx5_query_system_image_guid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mlx5_query_system_image_guid.exit.if.end16_crit_edge: ; preds = %mlx5_query_system_image_guid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.end16:                                         ; preds = %mlx5_query_system_image_guid.exit.if.end16_crit_edge, %mlx5_query_system_image_guid.exit.thread1364
  %pkey_table_len = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 41
  %33 = ptrtoint ptr %pkey_table_len to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %pkey_table_len, align 8
  %max_pkeys = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 38
  %35 = ptrtoint ptr %max_pkeys to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %max_pkeys, align 8
  %vendor_id = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 4
  %36 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mdev1, align 8
  %caps.i.i.i1343 = getelementptr inbounds %struct.mlx5_core_dev, ptr %37, i32 0, i32 8
  %38 = ptrtoint ptr %caps.i.i.i1343 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %caps.i.i.i1343, align 8
  %add.ptr.i.i.i1344 = getelementptr i32, ptr %39, i32 13
  %40 = ptrtoint ptr %add.ptr.i.i.i1344 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %add.ptr.i.i.i1344, align 4
  %42 = and i32 %41, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %.not.i.i1345 = icmp eq i32 %42, 0
  %43 = and i32 %41, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %43)
  %switch.selectcmp.i.i.i.i1346 = icmp eq i32 %43, 256
  %..i.i1347 = select i1 %switch.selectcmp.i.i.i.i1346, i32 2, i32 1
  %retval.0.i.i1348 = select i1 %.not.i.i1345, i32 0, i32 %..i.i1347
  %44 = zext i32 %retval.0.i.i1348 to i64
  call void @__sanitizer_cov_trace_switch(i64 %44, ptr @__sancov_gen_cov_switch_values.170)
  switch i32 %retval.0.i.i1348, label %if.end16.cleanup_crit_edge [
    i32 0, label %sw.bb.i1349
    i32 1, label %if.end16.sw.bb3.i_crit_edge
    i32 2, label %if.end16.sw.bb3.i_crit_edge1387
  ]

if.end16.sw.bb3.i_crit_edge1387:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

if.end16.sw.bb3.i_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3.i

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i1349:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  %call2.i = call i32 @mlx5_query_mad_ifc_vendor_id(ptr noundef %ibdev, ptr noundef %vendor_id) #16
  br label %mlx5_query_vendor_id.exit

sw.bb3.i:                                         ; preds = %if.end16.sw.bb3.i_crit_edge, %if.end16.sw.bb3.i_crit_edge1387
  %call4.i = call i32 @mlx5_core_query_vendor_id(ptr noundef %37, ptr noundef %vendor_id) #16
  br label %mlx5_query_vendor_id.exit

mlx5_query_vendor_id.exit:                        ; preds = %sw.bb3.i, %sw.bb.i1349
  %retval.0.i1350 = phi i32 [ %call4.i, %sw.bb3.i ], [ %call2.i, %sw.bb.i1349 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i1350)
  %tobool18.not = icmp eq i32 %retval.0.i1350, 0
  br i1 %tobool18.not, label %if.end20, label %mlx5_query_vendor_id.exit.cleanup_crit_edge

mlx5_query_vendor_id.exit.cleanup_crit_edge:      ; preds = %mlx5_query_vendor_id.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end20:                                         ; preds = %mlx5_query_vendor_id.exit
  %45 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %mdev1, align 8
  %iseg.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %46, i32 0, i32 12
  %47 = ptrtoint ptr %iseg.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %iseg.i, align 4
  %49 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %48) #16, !srcloc !413
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !414
  %conv.i.mask = and i32 %49, 65535
  %conv = zext i32 %conv.i.mask to i64
  %shl23 = shl nuw nsw i64 %conv, 32
  %50 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %mdev1, align 8
  %iseg.i1351 = getelementptr inbounds %struct.mlx5_core_dev, ptr %51, i32 0, i32 12
  %52 = ptrtoint ptr %iseg.i1351 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %iseg.i1351, align 4
  %54 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %53) #16, !srcloc !413
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !415
  %shr.i = and i32 %54, -65536
  %conv28 = sext i32 %shr.i to i64
  %or = or i64 %shl23, %conv28
  %55 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %mdev1, align 8
  %iseg.i1353 = getelementptr inbounds %struct.mlx5_core_dev, ptr %56, i32 0, i32 12
  %57 = ptrtoint ptr %iseg.i1353 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %iseg.i1353, align 4
  %cmdif_rev_fw_sub.i = getelementptr inbounds %struct.mlx5_init_seg, ptr %58, i32 0, i32 1
  %59 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %cmdif_rev_fw_sub.i) #16, !srcloc !413
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !416
  %conv.i1354.mask = and i32 %59, 65535
  %conv31 = zext i32 %conv.i1354.mask to i64
  %or32 = or i64 %or, %conv31
  %60 = ptrtoint ptr %props to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %or32, ptr %props, align 8
  %device_cap_flags = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 9
  %61 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 7200, ptr %device_cap_flags, align 8
  %62 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %caps, align 8
  %add.ptr38 = getelementptr i32, ptr %63, i32 17
  %64 = ptrtoint ptr %add.ptr38 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %add.ptr38, align 4
  %66 = and i32 %65, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool41.not = icmp eq i32 %66, 0
  %spec.store.select = select i1 %tobool41.not, i64 7200, i64 7202
  %67 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_store8_noabort(i32 %67)
  store i64 %spec.store.select, ptr %device_cap_flags, align 8
  %68 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %caps, align 8
  %add.ptr51 = getelementptr i32, ptr %69, i32 17
  %70 = ptrtoint ptr %add.ptr51 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %add.ptr51, align 4
  %72 = and i32 %71, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool54.not = icmp eq i32 %72, 0
  br i1 %tobool54.not, label %if.end20.if.end58_crit_edge, label %if.then55

if.end20.if.end58_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end58

if.then55:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  %or57 = or i64 %spec.store.select, 4
  %73 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_store8_noabort(i32 %73)
  store i64 %or57, ptr %device_cap_flags, align 8
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %if.end20.if.end58_crit_edge
  %74 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %caps, align 8
  %add.ptr64 = getelementptr i32, ptr %75, i32 17
  %76 = ptrtoint ptr %add.ptr64 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %add.ptr64, align 4
  %78 = and i32 %77, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool67.not = icmp eq i32 %78, 0
  br i1 %tobool67.not, label %if.end58.if.end71_crit_edge, label %if.then68

if.end58.if.end71_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end71

if.then68:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  %79 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %device_cap_flags, align 8
  %or70 = or i64 %80, 16
  store i64 %or70, ptr %device_cap_flags, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then68, %if.end58.if.end71_crit_edge
  %81 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %caps, align 8
  %add.ptr77 = getelementptr i32, ptr %82, i32 17
  %83 = ptrtoint ptr %add.ptr77 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %add.ptr77, align 4
  %85 = and i32 %84, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool80.not = icmp eq i32 %85, 0
  br i1 %tobool80.not, label %if.end71.if.end84_crit_edge, label %if.then81

if.end71.if.end84_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end84

if.then81:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #18
  %86 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %86)
  %87 = load i64, ptr %device_cap_flags, align 8
  %or83 = or i64 %87, 1048576
  store i64 %or83, ptr %device_cap_flags, align 8
  br label %if.end84

if.end84:                                         ; preds = %if.then81, %if.end71.if.end84_crit_edge
  %88 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %caps, align 8
  %add.ptr90 = getelementptr i32, ptr %89, i32 17
  %90 = ptrtoint ptr %add.ptr90 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %add.ptr90, align 4
  %92 = and i32 %91, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %tobool93.not = icmp eq i32 %92, 0
  br i1 %tobool93.not, label %if.end84.if.end108_crit_edge, label %if.then94

if.end84.if.end108_crit_edge:                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end108

if.then94:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #18
  %93 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %device_cap_flags, align 8
  %or96 = or i64 %94, 16908288
  store i64 %or96, ptr %device_cap_flags, align 8
  %95 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %caps, align 8
  %add.ptr102 = getelementptr i32, ptr %96, i32 7
  %97 = ptrtoint ptr %add.ptr102 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %add.ptr102, align 4
  %shr103 = lshr i32 %98, 16
  %and104 = and i32 %shr103, 63
  %shl105 = shl nuw i32 1, %and104
  %max_mw = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 26
  %99 = ptrtoint ptr %max_mw to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %shl105, ptr %max_mw, align 8
  %or107 = or i64 %94, 4311875584
  store i64 %or107, ptr %device_cap_flags, align 8
  br label %if.end108

if.end108:                                        ; preds = %if.then94, %if.end84.if.end108_crit_edge
  %100 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %mdev1, align 8
  %caps110 = getelementptr inbounds %struct.mlx5_core_dev, ptr %101, i32 0, i32 8
  %102 = ptrtoint ptr %caps110 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %caps110, align 8
  %add.ptr115 = getelementptr i32, ptr %103, i32 16
  %104 = ptrtoint ptr %add.ptr115 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %add.ptr115, align 4
  %106 = and i32 %105, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %106)
  %tobool118.not = icmp eq i32 %106, 0
  br i1 %tobool118.not, label %if.then119, label %if.end108.if.end122_crit_edge

if.end108.if.end122_crit_edge:                    ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end122

if.then119:                                       ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #18
  %107 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %device_cap_flags, align 8
  %or121 = or i64 %108, 2097152
  store i64 %or121, ptr %device_cap_flags, align 8
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %if.end108.if.end122_crit_edge
  %109 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %caps, align 8
  %add.ptr128 = getelementptr i32, ptr %110, i32 16
  %111 = ptrtoint ptr %add.ptr128 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %add.ptr128, align 4
  %113 = and i32 %112, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %113)
  %tobool131.not = icmp eq i32 %113, 0
  br i1 %tobool131.not, label %if.end122.if.end135_crit_edge, label %if.then132

if.end122.if.end135_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end135

if.then132:                                       ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  %114 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %114)
  %115 = load i64, ptr %device_cap_flags, align 8
  %or134 = or i64 %115, 1073741824
  store i64 %or134, ptr %device_cap_flags, align 8
  %sig_prot_cap = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 40
  %116 = ptrtoint ptr %sig_prot_cap to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 7, ptr %sig_prot_cap, align 4
  %sig_guard_cap = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 41
  %117 = ptrtoint ptr %sig_guard_cap to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 3, ptr %sig_guard_cap, align 8
  br label %if.end135

if.end135:                                        ; preds = %if.then132, %if.end122.if.end135_crit_edge
  %118 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %caps, align 8
  %add.ptr141 = getelementptr i32, ptr %119, i32 17
  %120 = ptrtoint ptr %add.ptr141 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %add.ptr141, align 4
  %122 = and i32 %121, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %122)
  %tobool144.not = icmp eq i32 %122, 0
  br i1 %tobool144.not, label %if.end135.if.end148_crit_edge, label %if.then145

if.end135.if.end148_crit_edge:                    ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end148

if.then145:                                       ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #18
  %123 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %123)
  %124 = load i64, ptr %device_cap_flags, align 8
  %or147 = or i64 %124, 4194304
  store i64 %or147, ptr %device_cap_flags, align 8
  br label %if.end148

if.end148:                                        ; preds = %if.then145, %if.end135.if.end148_crit_edge
  %125 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %mdev1, align 8
  %caps150 = getelementptr inbounds %struct.mlx5_core_dev, ptr %126, i32 0, i32 8
  %127 = ptrtoint ptr %caps150 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %caps150, align 8
  %add.ptr155 = getelementptr i32, ptr %128, i32 16
  %129 = ptrtoint ptr %add.ptr155 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %add.ptr155, align 4
  %131 = and i32 %130, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool158.not = icmp eq i32 %131, 0
  %brmerge = select i1 %tobool158.not, i1 true, i1 %.not
  br i1 %brmerge, label %if.else, label %if.then162

if.then162:                                       ; preds = %if.end148
  %arrayidx165 = getelementptr %struct.mlx5_core_dev, ptr %3, i32 0, i32 8, i32 0, i32 1
  %132 = ptrtoint ptr %arrayidx165 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %arrayidx165, align 4
  %134 = ptrtoint ptr %133 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %133, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %135)
  %tobool171.not = icmp sgt i32 %135, -1
  br i1 %tobool171.not, label %if.then162.if.end176_crit_edge, label %if.then172

if.then162.if.end176_crit_edge:                   ; preds = %if.then162
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end176

if.then172:                                       ; preds = %if.then162
  call void @__sanitizer_cov_trace_pc() #18
  %136 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %device_cap_flags, align 8
  %or174 = or i64 %137, 67108864
  store i64 %or174, ptr %device_cap_flags, align 8
  %raw_packet_caps = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 47
  %138 = ptrtoint ptr %raw_packet_caps to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %raw_packet_caps, align 8
  %or175 = or i32 %139, 4
  store i32 %or175, ptr %raw_packet_caps, align 8
  br label %if.end176

if.end176:                                        ; preds = %if.then172, %if.then162.if.end176_crit_edge
  %140 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %mdev1, align 8
  %arrayidx180 = getelementptr %struct.mlx5_core_dev, ptr %141, i32 0, i32 8, i32 0, i32 1
  %142 = ptrtoint ptr %arrayidx180 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %arrayidx180, align 4
  %144 = ptrtoint ptr %143 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %143, align 4
  %146 = and i32 %145, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %146)
  %tobool186.not = icmp eq i32 %146, 0
  br i1 %tobool186.not, label %if.end176.if.end190_crit_edge, label %if.then187

if.end176.if.end190_crit_edge:                    ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end190

if.then187:                                       ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #18
  %raw_packet_caps188 = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 47
  %147 = ptrtoint ptr %raw_packet_caps188 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %raw_packet_caps188, align 8
  %or189 = or i32 %148, 1
  store i32 %or189, ptr %raw_packet_caps188, align 8
  br label %if.end190

if.end190:                                        ; preds = %if.then187, %if.end176.if.end190_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %cond)
  %cmp191 = icmp ugt i32 %cond, 15
  br i1 %cmp191, label %if.then193, label %if.end190.if.end241_crit_edge

if.end190.if.end241_crit_edge:                    ; preds = %if.end190
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end241

if.then193:                                       ; preds = %if.end190
  %149 = ptrtoint ptr %arrayidx165 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %arrayidx165, align 4
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %150, align 4
  %shr200 = lshr i32 %152, 16
  %and201 = and i32 %shr200, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and201)
  %tobool203.not = icmp eq i32 %and201, 0
  br i1 %tobool203.not, label %if.then193.if.end212_crit_edge, label %if.then204

if.then193.if.end212_crit_edge:                   ; preds = %if.then193
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end212

if.then204:                                       ; preds = %if.then193
  call void @__sanitizer_cov_trace_pc() #18
  %shl206 = shl nuw i32 1, %and201
  %tso_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 2
  %153 = ptrtoint ptr %tso_caps to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %shl206, ptr %tso_caps, align 8
  %supported_qpts = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 2, i32 1
  %154 = ptrtoint ptr %supported_qpts to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %supported_qpts, align 4
  %or209 = or i32 %155, 256
  store i32 %or209, ptr %supported_qpts, align 4
  %156 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %response_length, align 4
  %add = add i32 %157, 8
  store i32 %add, ptr %response_length, align 4
  br label %if.end212

if.end212:                                        ; preds = %if.then204, %if.then193.if.end212_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %cond)
  %cmp213 = icmp ugt i32 %cond, 31
  br i1 %cmp213, label %if.then215, label %if.end212.if.end241_crit_edge

if.end212.if.end241_crit_edge:                    ; preds = %if.end212
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end241

if.then215:                                       ; preds = %if.end212
  %rss_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 3
  %rx_hash_function = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 3, i32 1
  %158 = ptrtoint ptr %rx_hash_function to i32
  call void @__asan_store1_noabort(i32 %158)
  store i8 1, ptr %rx_hash_function, align 8
  %159 = ptrtoint ptr %rss_caps to i32
  call void @__asan_store8_noabort(i32 %159)
  store i64 2147483903, ptr %rss_caps, align 8
  %160 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %mdev1, align 8
  %call218 = call i32 @mlx5_accel_ipsec_device_caps(ptr noundef %161) #16
  %and219 = and i32 %call218, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and219)
  %tobool220.not = icmp eq i32 %and219, 0
  br i1 %tobool220.not, label %if.then215.if.end241.sink.split_crit_edge, label %if.then221

if.then215.if.end241.sink.split_crit_edge:        ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end241.sink.split

if.then221:                                       ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #18
  %162 = ptrtoint ptr %rss_caps to i32
  call void @__asan_load8_noabort(i32 %162)
  %163 = load i64, ptr %rss_caps, align 8
  %or224 = or i64 %163, 256
  store i64 %or224, ptr %rss_caps, align 8
  br label %if.end241.sink.split

if.else:                                          ; preds = %if.end148
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %cond)
  %cmp229 = icmp ugt i32 %cond, 15
  br i1 %cmp229, label %if.end234, label %if.else.if.end241_crit_edge

if.else.if.end241_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end241

if.end234:                                        ; preds = %if.else
  %164 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %response_length, align 4
  %add233 = add i32 %165, 8
  store i32 %add233, ptr %response_length, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %cond)
  %cmp235 = icmp ugt i32 %cond, 31
  br i1 %cmp235, label %if.end234.if.end241.sink.split_crit_edge, label %if.end234.if.end241_crit_edge

if.end234.if.end241_crit_edge:                    ; preds = %if.end234
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end241

if.end234.if.end241.sink.split_crit_edge:         ; preds = %if.end234
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end241.sink.split

if.end241.sink.split:                             ; preds = %if.end234.if.end241.sink.split_crit_edge, %if.then221, %if.then215.if.end241.sink.split_crit_edge
  %166 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %response_length, align 4
  %add239 = add i32 %167, 16
  store i32 %add239, ptr %response_length, align 4
  br label %if.end241

if.end241:                                        ; preds = %if.end241.sink.split, %if.end234.if.end241_crit_edge, %if.else.if.end241_crit_edge, %if.end212.if.end241_crit_edge, %if.end190.if.end241_crit_edge
  %168 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %caps, align 8
  %add.ptr247 = getelementptr i32, ptr %169, i32 16
  %170 = ptrtoint ptr %add.ptr247 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %add.ptr247, align 4
  %172 = and i32 %171, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %172)
  %tobool250.not = icmp eq i32 %172, 0
  br i1 %tobool250.not, label %if.end241.if.end256_crit_edge, label %if.then251

if.end241.if.end256_crit_edge:                    ; preds = %if.end241
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end256

if.then251:                                       ; preds = %if.end241
  call void @__sanitizer_cov_trace_pc() #18
  %173 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %173)
  %174 = load i64, ptr %device_cap_flags, align 8
  %or255 = or i64 %174, 786432
  store i64 %or255, ptr %device_cap_flags, align 8
  br label %if.end256

if.end256:                                        ; preds = %if.then251, %if.end241.if.end256_crit_edge
  %175 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %mdev1, align 8
  %caps258 = getelementptr inbounds %struct.mlx5_core_dev, ptr %176, i32 0, i32 8
  %177 = ptrtoint ptr %caps258 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %caps258, align 8
  %add.ptr263 = getelementptr i32, ptr %178, i32 12
  %179 = ptrtoint ptr %add.ptr263 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %add.ptr263, align 4
  %181 = and i32 %180, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %181)
  %tobool266.not = icmp eq i32 %181, 0
  br i1 %tobool266.not, label %if.end256.if.end284_crit_edge, label %land.lhs.true267

if.end256.if.end284_crit_edge:                    ; preds = %if.end256
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end284

land.lhs.true267:                                 ; preds = %if.end256
  %add.ptr274 = getelementptr i32, ptr %178, i32 14
  %182 = ptrtoint ptr %add.ptr274 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %add.ptr274, align 4
  %184 = and i32 %183, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %184)
  %tobool277.not = icmp eq i32 %184, 0
  %brmerge1330 = select i1 %tobool277.not, i1 true, i1 %.not
  br i1 %brmerge1330, label %land.lhs.true267.if.end284_crit_edge, label %if.then281

land.lhs.true267.if.end284_crit_edge:             ; preds = %land.lhs.true267
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end284

if.then281:                                       ; preds = %land.lhs.true267
  call void @__sanitizer_cov_trace_pc() #18
  %raw_packet_caps282 = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 47
  %185 = ptrtoint ptr %raw_packet_caps282 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load i32, ptr %raw_packet_caps282, align 8
  %or283 = or i32 %186, 8
  store i32 %or283, ptr %raw_packet_caps282, align 8
  br label %if.end284

if.end284:                                        ; preds = %if.then281, %land.lhs.true267.if.end284_crit_edge, %if.end256.if.end284_crit_edge
  %187 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %caps, align 8
  %add.ptr290 = getelementptr i32, ptr %188, i32 16
  %189 = ptrtoint ptr %add.ptr290 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %add.ptr290, align 4
  %191 = and i32 %190, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %191)
  %tobool293.not = icmp eq i32 %191, 0
  br i1 %tobool293.not, label %if.end284.if.end307_crit_edge, label %land.lhs.true294

if.end284.if.end307_crit_edge:                    ; preds = %if.end284
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end307

land.lhs.true294:                                 ; preds = %if.end284
  %arrayidx297 = getelementptr %struct.mlx5_core_dev, ptr %3, i32 0, i32 8, i32 0, i32 6
  %192 = ptrtoint ptr %arrayidx297 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %arrayidx297, align 8
  %194 = ptrtoint ptr %193 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %193, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %195)
  %tobool303.not = icmp sgt i32 %195, -1
  br i1 %tobool303.not, label %land.lhs.true294.if.end307_crit_edge, label %if.then304

land.lhs.true294.if.end307_crit_edge:             ; preds = %land.lhs.true294
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end307

if.then304:                                       ; preds = %land.lhs.true294
  call void @__sanitizer_cov_trace_pc() #18
  %196 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %196)
  %197 = load i64, ptr %device_cap_flags, align 8
  %or306 = or i64 %197, 262144
  store i64 %or306, ptr %device_cap_flags, align 8
  br label %if.end307

if.end307:                                        ; preds = %if.then304, %land.lhs.true294.if.end307_crit_edge, %if.end284.if.end307_crit_edge
  %198 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %mdev1, align 8
  %caps309 = getelementptr inbounds %struct.mlx5_core_dev, ptr %199, i32 0, i32 8
  %200 = ptrtoint ptr %caps309 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %caps309, align 8
  %add.ptr314 = getelementptr i32, ptr %201, i32 16
  %202 = ptrtoint ptr %add.ptr314 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %add.ptr314, align 4
  %204 = and i32 %203, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %204)
  %tobool317.not = icmp eq i32 %204, 0
  br i1 %tobool317.not, label %if.end307.if.end337_crit_edge, label %land.lhs.true318

if.end307.if.end337_crit_edge:                    ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end337

land.lhs.true318:                                 ; preds = %if.end307
  %arrayidx322 = getelementptr %struct.mlx5_core_dev, ptr %199, i32 0, i32 8, i32 0, i32 1
  %205 = ptrtoint ptr %arrayidx322 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %arrayidx322, align 4
  %207 = ptrtoint ptr %206 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %206, align 4
  %209 = and i32 %208, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %209)
  %tobool328.not = icmp eq i32 %209, 0
  %brmerge1332 = select i1 %tobool328.not, i1 true, i1 %.not
  br i1 %brmerge1332, label %land.lhs.true318.if.end337_crit_edge, label %if.then332

land.lhs.true318.if.end337_crit_edge:             ; preds = %land.lhs.true318
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end337

if.then332:                                       ; preds = %land.lhs.true318
  call void @__sanitizer_cov_trace_pc() #18
  %210 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %210)
  %211 = load i64, ptr %device_cap_flags, align 8
  %or334 = or i64 %211, 17179869184
  store i64 %or334, ptr %device_cap_flags, align 8
  %raw_packet_caps335 = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 47
  %212 = ptrtoint ptr %raw_packet_caps335 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %raw_packet_caps335, align 8
  %or336 = or i32 %213, 2
  store i32 %or336, ptr %raw_packet_caps335, align 8
  br label %if.end337

if.end337:                                        ; preds = %if.then332, %land.lhs.true318.if.end337_crit_edge, %if.end307.if.end337_crit_edge
  %arrayidx340 = getelementptr %struct.mlx5_core_dev, ptr %3, i32 0, i32 8, i32 0, i32 15
  %214 = ptrtoint ptr %arrayidx340 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %arrayidx340, align 4
  %216 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %215, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %217)
  %tobool346.not = icmp sgt i32 %217, -1
  br i1 %tobool346.not, label %if.end337.if.end357_crit_edge, label %if.then347

if.end337.if.end357_crit_edge:                    ; preds = %if.end337
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end357

if.then347:                                       ; preds = %if.end337
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr353 = getelementptr i32, ptr %215, i32 5
  %218 = ptrtoint ptr %add.ptr353 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %add.ptr353, align 4
  %conv356 = zext i32 %219 to i64
  %max_dm_size = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 50
  %220 = ptrtoint ptr %max_dm_size to i32
  call void @__asan_store8_noabort(i32 %220)
  store i64 %conv356, ptr %max_dm_size, align 8
  br label %if.end357

if.end357:                                        ; preds = %if.then347, %if.end337.if.end357_crit_edge
  %221 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %mdev1, align 8
  %call359 = call ptr @mlx5_get_flow_namespace(ptr noundef %222, i32 noundef 0) #16
  %tobool360.not = icmp eq ptr %call359, null
  br i1 %tobool360.not, label %if.end357.if.end364_crit_edge, label %if.then361

if.end357.if.end364_crit_edge:                    ; preds = %if.end357
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end364

if.then361:                                       ; preds = %if.end357
  call void @__sanitizer_cov_trace_pc() #18
  %223 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %223)
  %224 = load i64, ptr %device_cap_flags, align 8
  %or363 = or i64 %224, 536870912
  store i64 %or363, ptr %device_cap_flags, align 8
  br label %if.end364

if.end364:                                        ; preds = %if.then361, %if.end357.if.end364_crit_edge
  %225 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %caps, align 8
  %add.ptr370 = getelementptr i32, ptr %226, i32 11
  %227 = ptrtoint ptr %add.ptr370 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %add.ptr370, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %228)
  %tobool373.not = icmp sgt i32 %228, -1
  br i1 %tobool373.not, label %if.end364.if.end377_crit_edge, label %if.then374

if.end364.if.end377_crit_edge:                    ; preds = %if.end364
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end377

if.then374:                                       ; preds = %if.end364
  call void @__sanitizer_cov_trace_pc() #18
  %229 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %229)
  %230 = load i64, ptr %device_cap_flags, align 8
  %or376 = or i64 %230, 68719476736
  store i64 %or376, ptr %device_cap_flags, align 8
  br label %if.end377

if.end377:                                        ; preds = %if.then374, %if.end364.if.end377_crit_edge
  %pdev = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 2
  %231 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %pdev, align 8
  %device = getelementptr inbounds %struct.pci_dev, ptr %232, i32 0, i32 8
  %233 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %233)
  %234 = load i16, ptr %device, align 2
  %conv378 = zext i16 %234 to i32
  %vendor_part_id = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 5
  %235 = ptrtoint ptr %vendor_part_id to i32
  call void @__asan_store4_noabort(i32 %235)
  store i32 %conv378, ptr %vendor_part_id, align 4
  %236 = load ptr, ptr %pdev, align 8
  %revision = getelementptr inbounds %struct.pci_dev, ptr %236, i32 0, i32 12
  %237 = ptrtoint ptr %revision to i32
  call void @__asan_load1_noabort(i32 %237)
  %238 = load i8, ptr %revision, align 4
  %conv380 = zext i8 %238 to i32
  %hw_ver = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 6
  %239 = ptrtoint ptr %hw_ver to i32
  call void @__asan_store4_noabort(i32 %239)
  store i32 %conv380, ptr %hw_ver, align 8
  %max_mr_size = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 2
  %240 = ptrtoint ptr %max_mr_size to i32
  call void @__asan_store8_noabort(i32 %240)
  store i64 -1, ptr %max_mr_size, align 8
  %notmask = shl nsw i64 -1, %sh_prom
  %page_size_cap = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 3
  %241 = ptrtoint ptr %page_size_cap to i32
  call void @__asan_store8_noabort(i32 %241)
  store i64 %notmask, ptr %page_size_cap, align 8
  %242 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %caps, align 8
  %add.ptr386 = getelementptr i32, ptr %243, i32 4
  %244 = ptrtoint ptr %add.ptr386 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %add.ptr386, align 4
  %and388 = and i32 %245, 31
  %shl389 = shl nuw i32 1, %and388
  %max_qp = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 7
  %246 = ptrtoint ptr %max_qp to i32
  call void @__asan_store4_noabort(i32 %246)
  store i32 %shl389, ptr %max_qp, align 4
  %247 = load ptr, ptr %caps, align 8
  %add.ptr395 = getelementptr i32, ptr %247, i32 4
  %248 = ptrtoint ptr %add.ptr395 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %add.ptr395, align 4
  %shr396 = lshr i32 %249, 16
  %and397 = and i32 %shr396, 255
  %shl398 = shl nuw i32 1, %and397
  %max_qp_wr = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 8
  %250 = ptrtoint ptr %max_qp_wr to i32
  call void @__asan_store4_noabort(i32 %250)
  store i32 %shl398, ptr %max_qp_wr, align 8
  %251 = load ptr, ptr %caps, align 8
  %add.ptr404 = getelementptr i32, ptr %251, i32 21
  %252 = ptrtoint ptr %add.ptr404 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %add.ptr404, align 4
  %and406 = lshr i32 %253, 4
  %div1323 = and i32 %and406, 4095
  %add.ptr412 = getelementptr i32, ptr %251, i32 20
  %254 = ptrtoint ptr %add.ptr412 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %add.ptr412, align 4
  %and414 = and i32 %255, 65535
  %256 = call i32 @llvm.umin.i32(i32 %and414, i32 512)
  %sub422 = add nsw i32 %256, -32
  %div4231324 = lshr i32 %sub422, 4
  %max_send_sge = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 10
  %257 = ptrtoint ptr %max_send_sge to i32
  call void @__asan_store4_noabort(i32 %257)
  store i32 %div4231324, ptr %max_send_sge, align 8
  %max_recv_sge = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 11
  %258 = ptrtoint ptr %max_recv_sge to i32
  call void @__asan_store4_noabort(i32 %258)
  store i32 %div1323, ptr %max_recv_sge, align 4
  %max_sge_rd = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 12
  %259 = ptrtoint ptr %max_sge_rd to i32
  call void @__asan_store4_noabort(i32 %259)
  store i32 30, ptr %max_sge_rd, align 8
  %260 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %caps, align 8
  %add.ptr429 = getelementptr i32, ptr %261, i32 6
  %262 = ptrtoint ptr %add.ptr429 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %add.ptr429, align 4
  %and431 = and i32 %263, 31
  %shl432 = shl nuw i32 1, %and431
  %max_cq = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 13
  %264 = ptrtoint ptr %max_cq to i32
  call void @__asan_store4_noabort(i32 %264)
  store i32 %shl432, ptr %max_cq, align 4
  %265 = load ptr, ptr %caps, align 8
  %add.ptr438 = getelementptr i32, ptr %265, i32 6
  %266 = ptrtoint ptr %add.ptr438 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %add.ptr438, align 4
  %shr439 = lshr i32 %267, 16
  %and440 = and i32 %shr439, 255
  %notmask1325 = shl nsw i32 -1, %and440
  %sub442 = xor i32 %notmask1325, -1
  %max_cqe = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 14
  %268 = ptrtoint ptr %max_cqe to i32
  call void @__asan_store4_noabort(i32 %268)
  store i32 %sub442, ptr %max_cqe, align 8
  %269 = load ptr, ptr %caps, align 8
  %add.ptr448 = getelementptr i32, ptr %269, i32 7
  %270 = ptrtoint ptr %add.ptr448 to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %add.ptr448, align 4
  %shr449 = lshr i32 %271, 16
  %and450 = and i32 %shr449, 63
  %shl451 = shl nuw i32 1, %and450
  %max_mr = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 15
  %272 = ptrtoint ptr %max_mr to i32
  call void @__asan_store4_noabort(i32 %272)
  store i32 %shl451, ptr %max_mr, align 4
  %273 = load ptr, ptr %caps, align 8
  %add.ptr457 = getelementptr i32, ptr %273, i32 25
  %274 = ptrtoint ptr %add.ptr457 to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %add.ptr457, align 4
  %shr458 = lshr i32 %275, 16
  %and459 = and i32 %shr458, 31
  %shl460 = shl nuw i32 1, %and459
  %max_pd = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 16
  %276 = ptrtoint ptr %max_pd to i32
  call void @__asan_store4_noabort(i32 %276)
  store i32 %shl460, ptr %max_pd, align 8
  %277 = load ptr, ptr %caps, align 8
  %add.ptr466 = getelementptr i32, ptr %277, i32 10
  %278 = ptrtoint ptr %add.ptr466 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %add.ptr466, align 4
  %shr467 = lshr i32 %279, 16
  %and468 = and i32 %shr467, 63
  %shl469 = shl nuw i32 1, %and468
  %max_qp_rd_atom = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 17
  %280 = ptrtoint ptr %max_qp_rd_atom to i32
  call void @__asan_store4_noabort(i32 %280)
  store i32 %shl469, ptr %max_qp_rd_atom, align 4
  %281 = load ptr, ptr %caps, align 8
  %add.ptr475 = getelementptr i32, ptr %281, i32 10
  %282 = ptrtoint ptr %add.ptr475 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %add.ptr475, align 4
  %and477 = and i32 %283, 63
  %shl478 = shl nuw i32 1, %and477
  %max_qp_init_rd_atom = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 20
  %284 = ptrtoint ptr %max_qp_init_rd_atom to i32
  call void @__asan_store4_noabort(i32 %284)
  store i32 %shl478, ptr %max_qp_init_rd_atom, align 8
  %285 = load ptr, ptr %caps, align 8
  %add.ptr484 = getelementptr i32, ptr %285, i32 5
  %286 = ptrtoint ptr %add.ptr484 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %add.ptr484, align 4
  %shr485 = lshr i32 %287, 16
  %and486 = and i32 %shr485, 31
  %shl487 = shl nuw i32 1, %and486
  %max_srq = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 33
  %288 = ptrtoint ptr %max_srq to i32
  call void @__asan_store4_noabort(i32 %288)
  store i32 %shl487, ptr %max_srq, align 4
  %289 = load ptr, ptr %caps, align 8
  %add.ptr493 = getelementptr i32, ptr %289, i32 4
  %290 = ptrtoint ptr %add.ptr493 to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %add.ptr493, align 4
  %shr494 = lshr i32 %291, 24
  %notmask1326 = shl nsw i32 -1, %shr494
  %sub497 = xor i32 %notmask1326, -1
  %max_srq_wr = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 34
  %292 = ptrtoint ptr %max_srq_wr to i32
  call void @__asan_store4_noabort(i32 %292)
  store i32 %sub497, ptr %max_srq_wr, align 8
  %293 = load ptr, ptr %caps, align 8
  %add.ptr503 = getelementptr i32, ptr %293, i32 13
  %294 = ptrtoint ptr %add.ptr503 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %add.ptr503, align 4
  %shr504 = lshr i32 %295, 16
  %296 = trunc i32 %shr504 to i8
  %conv506 = and i8 %296, 31
  %local_ca_ack_delay = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 39
  %297 = ptrtoint ptr %local_ca_ack_delay to i32
  call void @__asan_store1_noabort(i32 %297)
  store i8 %conv506, ptr %local_ca_ack_delay, align 2
  %mul = shl i32 %shl389, %and468
  %max_res_rd_atom = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 19
  %298 = ptrtoint ptr %max_res_rd_atom to i32
  call void @__asan_store4_noabort(i32 %298)
  store i32 %mul, ptr %max_res_rd_atom, align 4
  %sub509 = add nsw i32 %div1323, -1
  %max_srq_sge = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 35
  %299 = ptrtoint ptr %max_srq_sge to i32
  call void @__asan_store4_noabort(i32 %299)
  store i32 %sub509, ptr %max_srq_sge, align 4
  %300 = load ptr, ptr %caps, align 8
  %add.ptr515 = getelementptr i32, ptr %300, i32 8
  %301 = ptrtoint ptr %add.ptr515 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %add.ptr515, align 4
  %and517 = and i32 %302, 63
  %shl518 = shl nuw i32 1, %and517
  %max_fast_reg_page_list_len = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 36
  %303 = ptrtoint ptr %max_fast_reg_page_list_len to i32
  call void @__asan_store4_noabort(i32 %303)
  store i32 %shl518, ptr %max_fast_reg_page_list_len, align 8
  %div5201327 = lshr i32 %shl518, 1
  %max_pi_fast_reg_page_list_len = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 37
  %304 = ptrtoint ptr %max_pi_fast_reg_page_list_len to i32
  call void @__asan_store4_noabort(i32 %304)
  store i32 %div5201327, ptr %max_pi_fast_reg_page_list_len, align 4
  %305 = load ptr, ptr %caps, align 8
  %add.ptr526 = getelementptr i32, ptr %305, i32 6
  %306 = ptrtoint ptr %add.ptr526 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %add.ptr526, align 4
  %shr527 = lshr i32 %307, 24
  %max_sgl_rd = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 51
  %308 = ptrtoint ptr %max_sgl_rd to i32
  call void @__asan_store4_noabort(i32 %308)
  store i32 %shr527, ptr %max_sgl_rd, align 8
  %309 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load ptr, ptr %mdev1, align 8
  %arrayidx.i = getelementptr %struct.mlx5_core_dev, ptr %310, i32 0, i32 8, i32 0, i32 3
  %311 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %arrayidx.i, align 4
  %add.ptr.i = getelementptr i32, ptr %312, i32 5
  %313 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %add.ptr.i, align 4
  %add.ptr.i.i1355 = getelementptr i32, ptr %312, i32 4
  %315 = ptrtoint ptr %add.ptr.i.i1355 to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %add.ptr.i.i1355, align 4
  %add.ptr7.i.i = getelementptr i32, ptr %312, i32 2
  %317 = ptrtoint ptr %add.ptr7.i.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %add.ptr7.i.i, align 4
  %and13.i.i = and i32 %316, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and13.i.i)
  %cmp.i.i1356 = icmp eq i32 %and13.i.i, 3
  %319 = and i32 %314, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %319)
  %tobool.not.i.i1357 = icmp ne i32 %319, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %318)
  %tobool20.not.i.i = icmp ugt i32 %318, 1073741823
  %not.or.cond.i.i = and i1 %tobool.not.i.i1357, %cmp.i.i1356
  %or.cond25.i.i = select i1 %not.or.cond.i.i, i1 %tobool20.not.i.i, i1 false
  %spec.select.i.i = zext i1 %or.cond25.i.i to i32
  %320 = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 22
  %321 = ptrtoint ptr %320 to i32
  call void @__asan_store4_noabort(i32 %321)
  store i32 %spec.select.i.i, ptr %320, align 8
  %masked_atomic_cap = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 23
  %322 = ptrtoint ptr %masked_atomic_cap to i32
  call void @__asan_store4_noabort(i32 %322)
  store i32 0, ptr %masked_atomic_cap, align 4
  %323 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load ptr, ptr %caps, align 8
  %add.ptr534 = getelementptr i32, ptr %324, i32 24
  %325 = ptrtoint ptr %add.ptr534 to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load i32, ptr %add.ptr534, align 4
  %and536 = and i32 %326, 255
  %shl537 = shl nuw i32 1, %and536
  %max_mcast_grp = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 29
  %327 = ptrtoint ptr %max_mcast_grp to i32
  call void @__asan_store4_noabort(i32 %327)
  store i32 %shl537, ptr %max_mcast_grp, align 4
  %328 = load ptr, ptr %caps, align 8
  %add.ptr543 = getelementptr i32, ptr %328, i32 23
  %329 = ptrtoint ptr %add.ptr543 to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %add.ptr543, align 4
  %and545 = and i32 %330, 33554431
  %max_mcast_qp_attach = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 30
  %331 = ptrtoint ptr %max_mcast_qp_attach to i32
  call void @__asan_store4_noabort(i32 %331)
  store i32 %and545, ptr %max_mcast_qp_attach, align 8
  %mul548 = shl i32 %and545, %and536
  %max_total_mcast_qp_attach = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 31
  %332 = ptrtoint ptr %max_total_mcast_qp_attach to i32
  call void @__asan_store4_noabort(i32 %332)
  store i32 %mul548, ptr %max_total_mcast_qp_attach, align 4
  %max_ah = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 32
  %333 = ptrtoint ptr %max_ah to i32
  call void @__asan_store4_noabort(i32 %333)
  store i32 2147483647, ptr %max_ah, align 8
  %334 = load ptr, ptr %caps, align 8
  %add.ptr554 = getelementptr i32, ptr %334, i32 39
  %335 = ptrtoint ptr %add.ptr554 to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load i32, ptr %add.ptr554, align 4
  %conv557 = zext i32 %336 to i64
  %hca_core_clock = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 44
  %337 = ptrtoint ptr %hca_core_clock to i32
  call void @__asan_store8_noabort(i32 %337)
  store i64 %conv557, ptr %hca_core_clock, align 8
  %timestamp_mask = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 43
  %338 = ptrtoint ptr %timestamp_mask to i32
  call void @__asan_store8_noabort(i32 %338)
  store i64 9223372036854775807, ptr %timestamp_mask, align 8
  %odp_caps = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 13
  %339 = ptrtoint ptr %odp_caps to i32
  call void @__asan_load8_noabort(i32 %339)
  %340 = load i64, ptr %odp_caps, align 8
  %and558 = and i64 %340, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and558)
  %tobool559.not = icmp eq i64 %and558, 0
  br i1 %tobool559.not, label %if.end377.if.end563_crit_edge, label %if.then560

if.end377.if.end563_crit_edge:                    ; preds = %if.end377
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end563

if.then560:                                       ; preds = %if.end377
  call void @__sanitizer_cov_trace_pc() #18
  %341 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %341)
  %342 = load i64, ptr %device_cap_flags, align 8
  %or562 = or i64 %342, 2147483648
  store i64 %or562, ptr %device_cap_flags, align 8
  br label %if.end563

if.end563:                                        ; preds = %if.then560, %if.end377.if.end563_crit_edge
  %odp_caps564 = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 42
  %343 = call ptr @memcpy(ptr %odp_caps564, ptr %odp_caps, i32 24)
  br i1 %tobool.not, label %if.then567, label %if.end563.if.end579_crit_edge

if.end563.if.end579_crit_edge:                    ; preds = %if.end563
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end579

if.then567:                                       ; preds = %if.end563
  call void @__sanitizer_cov_trace_pc() #18
  %per_transport_caps = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 42, i32 1
  %344 = ptrtoint ptr %per_transport_caps to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %per_transport_caps, align 8
  %and569 = and i32 %345, -41
  store i32 %and569, ptr %per_transport_caps, align 8
  %uc_odp_caps = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 42, i32 1, i32 1
  %346 = ptrtoint ptr %uc_odp_caps to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load i32, ptr %uc_odp_caps, align 4
  %and572 = and i32 %347, -41
  store i32 %and572, ptr %uc_odp_caps, align 4
  %ud_odp_caps = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 42, i32 1, i32 2
  %348 = ptrtoint ptr %ud_odp_caps to i32
  call void @__asan_load4_noabort(i32 %348)
  %349 = load i32, ptr %ud_odp_caps, align 8
  %and575 = and i32 %349, -41
  store i32 %and575, ptr %ud_odp_caps, align 8
  %xrc_odp_caps = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 42, i32 1, i32 3
  %350 = ptrtoint ptr %xrc_odp_caps to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load i32, ptr %xrc_odp_caps, align 4
  %and578 = and i32 %351, -41
  store i32 %and578, ptr %xrc_odp_caps, align 4
  br label %if.end579

if.end579:                                        ; preds = %if.then567, %if.end563.if.end579_crit_edge
  %352 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %caps, align 8
  %add.ptr585 = getelementptr i32, ptr %353, i32 17
  %354 = ptrtoint ptr %add.ptr585 to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %add.ptr585, align 4
  %356 = and i32 %355, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %356)
  %tobool588.not = icmp eq i32 %356, 0
  br i1 %tobool588.not, label %if.end579.if.end592_crit_edge, label %if.then589

if.end579.if.end592_crit_edge:                    ; preds = %if.end579
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end592

if.then589:                                       ; preds = %if.end579
  call void @__sanitizer_cov_trace_pc() #18
  %357 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %357)
  %358 = load i64, ptr %device_cap_flags, align 8
  %or591 = or i64 %358, 134217728
  store i64 %or591, ptr %device_cap_flags, align 8
  br label %if.end592

if.end592:                                        ; preds = %if.then589, %if.end579.if.end592_crit_edge
  %coredev_type.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 1
  %359 = ptrtoint ptr %coredev_type.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %coredev_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %360)
  %cmp.i = icmp eq i32 %360, 1
  br i1 %cmp.i, label %if.then594, label %if.end592.if.end597_crit_edge

if.end592.if.end597_crit_edge:                    ; preds = %if.end592
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end597

if.then594:                                       ; preds = %if.end592
  call void @__sanitizer_cov_trace_pc() #18
  %361 = ptrtoint ptr %device_cap_flags to i32
  call void @__asan_load8_noabort(i32 %361)
  %362 = load i64, ptr %device_cap_flags, align 8
  %or596 = or i64 %362, 8589934592
  store i64 %or596, ptr %device_cap_flags, align 8
  br label %if.end597

if.end597:                                        ; preds = %if.then594, %if.end592.if.end597_crit_edge
  %363 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load ptr, ptr %mdev1, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %364, i32 0, i32 8
  %365 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %caps.i, align 8
  %add.ptr.i1359 = getelementptr i32, ptr %366, i32 13
  %367 = ptrtoint ptr %add.ptr.i1359 to i32
  call void @__asan_load4_noabort(i32 %367)
  %368 = load i32, ptr %add.ptr.i1359, align 4
  %369 = and i32 %368, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %369)
  %switch.selectcmp.i.i = icmp ne i32 %369, 256
  %brmerge1334 = select i1 %switch.selectcmp.i.i, i1 true, i1 %.not
  br i1 %brmerge1334, label %if.end597.if.end639_crit_edge, label %if.then604

if.end597.if.end639_crit_edge:                    ; preds = %if.end597
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end639

if.then604:                                       ; preds = %if.end597
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr611 = getelementptr i32, ptr %366, i32 28
  %370 = ptrtoint ptr %add.ptr611 to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load i32, ptr %add.ptr611, align 4
  %shr612 = lshr i32 %371, 16
  %and613 = and i32 %shr612, 31
  %shl614 = shl nuw i32 1, %and613
  %rss_caps615 = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 45
  %max_rwq_indirection_tables = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 45, i32 1
  %372 = ptrtoint ptr %max_rwq_indirection_tables to i32
  call void @__asan_store4_noabort(i32 %372)
  store i32 %shl614, ptr %max_rwq_indirection_tables, align 4
  %373 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load ptr, ptr %mdev1, align 8
  %caps617 = getelementptr inbounds %struct.mlx5_core_dev, ptr %374, i32 0, i32 8
  %375 = ptrtoint ptr %caps617 to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load ptr, ptr %caps617, align 8
  %add.ptr622 = getelementptr i32, ptr %376, i32 28
  %377 = ptrtoint ptr %add.ptr622 to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %add.ptr622, align 4
  %shr623 = lshr i32 %378, 8
  %and624 = and i32 %shr623, 31
  %shl625 = shl nuw i32 1, %and624
  %max_rwq_indirection_table_size = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 45, i32 2
  %379 = ptrtoint ptr %max_rwq_indirection_table_size to i32
  call void @__asan_store4_noabort(i32 %379)
  store i32 %shl625, ptr %max_rwq_indirection_table_size, align 8
  %380 = ptrtoint ptr %rss_caps615 to i32
  call void @__asan_store4_noabort(i32 %380)
  store i32 256, ptr %rss_caps615, align 8
  %381 = load ptr, ptr %mdev1, align 8
  %caps630 = getelementptr inbounds %struct.mlx5_core_dev, ptr %381, i32 0, i32 8
  %382 = ptrtoint ptr %caps630 to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %caps630, align 8
  %add.ptr635 = getelementptr i32, ptr %383, i32 27
  %384 = ptrtoint ptr %add.ptr635 to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load i32, ptr %add.ptr635, align 4
  %shr636 = lshr i32 %385, 24
  %and637 = and i32 %shr636, 31
  %shl638 = shl nuw i32 1, %and637
  %max_wq_type_rq = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 46
  %386 = ptrtoint ptr %max_wq_type_rq to i32
  call void @__asan_store4_noabort(i32 %386)
  store i32 %shl638, ptr %max_wq_type_rq, align 4
  br label %if.end639

if.end639:                                        ; preds = %if.then604, %if.end597.if.end639_crit_edge
  %387 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load ptr, ptr %caps, align 8
  %add.ptr645 = getelementptr i32, ptr %388, i32 47
  %389 = ptrtoint ptr %add.ptr645 to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %add.ptr645, align 4
  %391 = and i32 %390, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %391)
  %tobool648.not = icmp eq i32 %391, 0
  br i1 %tobool648.not, label %if.end639.if.end671_crit_edge, label %if.then649

if.end639.if.end671_crit_edge:                    ; preds = %if.end639
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end671

if.then649:                                       ; preds = %if.end639
  call void @__sanitizer_cov_trace_pc() #18
  %shr656 = lshr i32 %390, 8
  %and657 = and i32 %shr656, 31
  %notmask1328 = shl nsw i32 -1, %and657
  %sub659 = xor i32 %notmask1328, -1
  %max_num_tags = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 48, i32 1
  %392 = ptrtoint ptr %max_num_tags to i32
  call void @__asan_store4_noabort(i32 %392)
  store i32 %sub659, ptr %max_num_tags, align 4
  %393 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load ptr, ptr %caps, align 8
  %add.ptr665 = getelementptr i32, ptr %394, i32 4
  %395 = ptrtoint ptr %add.ptr665 to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load i32, ptr %add.ptr665, align 4
  %shr666 = lshr i32 %396, 16
  %and667 = and i32 %shr666, 255
  %shl668 = shl nuw i32 1, %and667
  %max_ops = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 48, i32 3
  %397 = ptrtoint ptr %max_ops to i32
  call void @__asan_store4_noabort(i32 %397)
  store i32 %shl668, ptr %max_ops, align 4
  %max_sge = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 48, i32 4
  %398 = ptrtoint ptr %max_sge to i32
  call void @__asan_store4_noabort(i32 %398)
  store i32 1, ptr %max_sge, align 4
  br label %if.end671

if.end671:                                        ; preds = %if.then649, %if.end639.if.end671_crit_edge
  %399 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load ptr, ptr %caps, align 8
  %add.ptr677 = getelementptr i32, ptr %400, i32 47
  %401 = ptrtoint ptr %add.ptr677 to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load i32, ptr %add.ptr677, align 4
  %403 = and i32 %402, 49152
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %403)
  %.not1384 = icmp eq i32 %403, 49152
  br i1 %.not1384, label %if.then691, label %if.end671.if.end694_crit_edge

if.end671.if.end694_crit_edge:                    ; preds = %if.end671
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end694

if.then691:                                       ; preds = %if.end671
  call void @__sanitizer_cov_trace_pc() #18
  %tm_caps692 = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 48
  %flags = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 48, i32 2
  %404 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %404)
  store i32 1, ptr %flags, align 4
  %405 = ptrtoint ptr %tm_caps692 to i32
  call void @__asan_store4_noabort(i32 %405)
  store i32 64, ptr %tm_caps692, align 4
  br label %if.end694

if.end694:                                        ; preds = %if.then691, %if.end671.if.end694_crit_edge
  %406 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %mdev1, align 8
  %caps696 = getelementptr inbounds %struct.mlx5_core_dev, ptr %407, i32 0, i32 8
  %408 = ptrtoint ptr %caps696 to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %caps696, align 8
  %add.ptr701 = getelementptr i32, ptr %409, i32 17
  %410 = ptrtoint ptr %add.ptr701 to i32
  call void @__asan_load4_noabort(i32 %410)
  %411 = load i32, ptr %add.ptr701, align 4
  %412 = and i32 %411, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %412)
  %tobool704.not = icmp eq i32 %412, 0
  br i1 %tobool704.not, label %if.end694.if.end707_crit_edge, label %if.then705

if.end694.if.end707_crit_edge:                    ; preds = %if.end694
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end707

if.then705:                                       ; preds = %if.end694
  call void @__sanitizer_cov_trace_pc() #18
  %cq_caps = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 49
  %413 = ptrtoint ptr %cq_caps to i32
  call void @__asan_store2_noabort(i32 %413)
  store i16 -1, ptr %cq_caps, align 8
  %max_cq_moderation_period = getelementptr inbounds %struct.ib_device_attr, ptr %props, i32 0, i32 49, i32 1
  %414 = ptrtoint ptr %max_cq_moderation_period to i32
  call void @__asan_store2_noabort(i32 %414)
  store i16 4095, ptr %max_cq_moderation_period, align 2
  br label %if.end707

if.end707:                                        ; preds = %if.then705, %if.end694.if.end707_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %cond)
  %cmp708 = icmp ugt i32 %cond, 39
  br i1 %cmp708, label %if.then710, label %if.end707.if.end1090_crit_edge

if.end707.if.end1090_crit_edge:                   ; preds = %if.end707
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1090

if.then710:                                       ; preds = %if.end707
  %415 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %415)
  %416 = load i32, ptr %response_length, align 4
  %add712 = add i32 %416, 8
  store i32 %add712, ptr %response_length, align 4
  %417 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %417)
  %418 = load ptr, ptr %mdev1, align 8
  %caps714 = getelementptr inbounds %struct.mlx5_core_dev, ptr %418, i32 0, i32 8
  %419 = ptrtoint ptr %caps714 to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load ptr, ptr %caps714, align 8
  %add.ptr719 = getelementptr i32, ptr %420, i32 45
  %421 = ptrtoint ptr %add.ptr719 to i32
  call void @__asan_load4_noabort(i32 %421)
  %422 = load i32, ptr %add.ptr719, align 4
  %and721 = and i32 %422, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and721)
  %tobool722.not = icmp eq i32 %and721, 0
  br i1 %tobool722.not, label %if.then710.if.end750_crit_edge, label %if.then723

if.then710.if.end750_crit_edge:                   ; preds = %if.then710
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end750

if.then723:                                       ; preds = %if.then710
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr730 = getelementptr i32, ptr %420, i32 46
  %423 = ptrtoint ptr %add.ptr730 to i32
  call void @__asan_load4_noabort(i32 %423)
  %424 = load i32, ptr %add.ptr730, align 4
  %and732 = and i32 %424, 65535
  %cqe_comp_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 4
  %425 = ptrtoint ptr %cqe_comp_caps to i32
  call void @__asan_store4_noabort(i32 %425)
  store i32 %and732, ptr %cqe_comp_caps, align 8
  %supported_format = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 4, i32 1
  %426 = ptrtoint ptr %supported_format to i32
  call void @__asan_store4_noabort(i32 %426)
  store i32 3, ptr %supported_format, align 4
  %427 = ptrtoint ptr %add.ptr719 to i32
  call void @__asan_load4_noabort(i32 %427)
  %428 = load i32, ptr %add.ptr719, align 4
  %429 = and i32 %428, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %429)
  %tobool743.not = icmp eq i32 %429, 0
  %spec.store.select1336 = select i1 %tobool743.not, i32 3, i32 7
  %430 = ptrtoint ptr %supported_format to i32
  call void @__asan_store4_noabort(i32 %430)
  store i32 %spec.store.select1336, ptr %supported_format, align 4
  br label %if.end750

if.end750:                                        ; preds = %if.then723, %if.then710.if.end750_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 56, i32 %cond)
  %cmp751 = icmp ult i32 %cond, 56
  %brmerge1338 = select i1 %cmp751, i1 true, i1 %.not
  br i1 %brmerge1338, label %if.end750.if.end825_crit_edge, label %if.then756

if.end750.if.end825_crit_edge:                    ; preds = %if.end750
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end825

if.then756:                                       ; preds = %if.end750
  %arrayidx759 = getelementptr %struct.mlx5_core_dev, ptr %3, i32 0, i32 8, i32 0, i32 12
  %431 = ptrtoint ptr %arrayidx759 to i32
  call void @__asan_load4_noabort(i32 %431)
  %432 = load ptr, ptr %arrayidx759, align 8
  %433 = ptrtoint ptr %432 to i32
  call void @__asan_load4_noabort(i32 %433)
  %434 = load i32, ptr %432, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %434)
  %tobool765.not = icmp sgt i32 %434, -1
  br i1 %tobool765.not, label %if.then756.if.end822_crit_edge, label %land.lhs.true766

if.then756.if.end822_crit_edge:                   ; preds = %if.then756
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end822

land.lhs.true766:                                 ; preds = %if.then756
  %435 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load ptr, ptr %caps, align 8
  %add.ptr772 = getelementptr i32, ptr %436, i32 16
  %437 = ptrtoint ptr %add.ptr772 to i32
  call void @__asan_load4_noabort(i32 %437)
  %438 = load i32, ptr %add.ptr772, align 4
  %439 = and i32 %438, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %439)
  %tobool775.not = icmp eq i32 %439, 0
  br i1 %tobool775.not, label %land.lhs.true766.if.end822_crit_edge, label %if.then776

land.lhs.true766.if.end822_crit_edge:             ; preds = %land.lhs.true766
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end822

if.then776:                                       ; preds = %land.lhs.true766
  %add.ptr782 = getelementptr i32, ptr %432, i32 2
  %440 = ptrtoint ptr %add.ptr782 to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load i32, ptr %add.ptr782, align 4
  %packet_pacing_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 5
  %qp_rate_limit_max = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 5, i32 1
  %442 = ptrtoint ptr %qp_rate_limit_max to i32
  call void @__asan_store4_noabort(i32 %442)
  store i32 %441, ptr %qp_rate_limit_max, align 4
  %443 = ptrtoint ptr %arrayidx759 to i32
  call void @__asan_load4_noabort(i32 %443)
  %444 = load ptr, ptr %arrayidx759, align 8
  %add.ptr790 = getelementptr i32, ptr %444, i32 3
  %445 = ptrtoint ptr %add.ptr790 to i32
  call void @__asan_load4_noabort(i32 %445)
  %446 = load i32, ptr %add.ptr790, align 4
  %447 = ptrtoint ptr %packet_pacing_caps to i32
  call void @__asan_store4_noabort(i32 %447)
  store i32 %446, ptr %packet_pacing_caps, align 8
  %supported_qpts795 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 5, i32 2
  %448 = ptrtoint ptr %supported_qpts795 to i32
  call void @__asan_load4_noabort(i32 %448)
  %449 = load i32, ptr %supported_qpts795, align 8
  %or796 = or i32 %449, 256
  store i32 %or796, ptr %supported_qpts795, align 8
  %450 = load ptr, ptr %arrayidx759, align 8
  %451 = ptrtoint ptr %450 to i32
  call void @__asan_load4_noabort(i32 %451)
  %452 = load i32, ptr %450, align 4
  %453 = and i32 %452, 100663296
  call void @__sanitizer_cov_trace_const_cmp4(i32 100663296, i32 %453)
  %.not1385 = icmp eq i32 %453, 100663296
  br i1 %.not1385, label %if.then816, label %if.then776.if.end822_crit_edge

if.then776.if.end822_crit_edge:                   ; preds = %if.then776
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end822

if.then816:                                       ; preds = %if.then776
  call void @__sanitizer_cov_trace_pc() #18
  %cap_flags = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 5, i32 3
  %454 = ptrtoint ptr %cap_flags to i32
  call void @__asan_load1_noabort(i32 %454)
  %455 = load i8, ptr %cap_flags, align 4
  %456 = or i8 %455, 1
  store i8 %456, ptr %cap_flags, align 4
  br label %if.end822

if.end822:                                        ; preds = %if.then816, %if.then776.if.end822_crit_edge, %land.lhs.true766.if.end822_crit_edge, %if.then756.if.end822_crit_edge
  %457 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load i32, ptr %response_length, align 4
  %add824 = add i32 %458, 16
  store i32 %add824, ptr %response_length, align 4
  br label %if.end825

if.end825:                                        ; preds = %if.end822, %if.end750.if.end825_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 59, i32 %cond)
  %cmp826 = icmp ugt i32 %cond, 59
  br i1 %cmp826, label %if.then828, label %if.end825.if.end1090_crit_edge

if.end825.if.end1090_crit_edge:                   ; preds = %if.end825
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1090

if.then828:                                       ; preds = %if.end825
  %arrayidx831 = getelementptr %struct.mlx5_core_dev, ptr %3, i32 0, i32 8, i32 0, i32 1
  %459 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load ptr, ptr %arrayidx831, align 4
  %461 = ptrtoint ptr %460 to i32
  call void @__asan_load4_noabort(i32 %461)
  %462 = load i32, ptr %460, align 4
  %463 = and i32 %462, 49152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %463)
  %tobool837.not = icmp eq i32 %463, 0
  br i1 %tobool837.not, label %if.then828.if.end839_crit_edge, label %if.then838

if.then828.if.end839_crit_edge:                   ; preds = %if.then828
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end839

if.then838:                                       ; preds = %if.then828
  call void @__sanitizer_cov_trace_pc() #18
  %mlx5_ib_support_multi_pkt_send_wqes = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 6
  %464 = ptrtoint ptr %mlx5_ib_support_multi_pkt_send_wqes to i32
  call void @__asan_store4_noabort(i32 %464)
  store i32 2, ptr %mlx5_ib_support_multi_pkt_send_wqes, align 8
  br label %if.end839

if.end839:                                        ; preds = %if.then838, %if.then828.if.end839_crit_edge
  %465 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %465)
  %466 = load ptr, ptr %arrayidx831, align 4
  %467 = ptrtoint ptr %466 to i32
  call void @__asan_load4_noabort(i32 %467)
  %468 = load i32, ptr %466, align 4
  %469 = and i32 %468, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %469)
  %tobool848.not = icmp eq i32 %469, 0
  br i1 %tobool848.not, label %if.end839.if.end855_crit_edge, label %if.then849

if.end839.if.end855_crit_edge:                    ; preds = %if.end839
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end855

if.then849:                                       ; preds = %if.end839
  call void @__sanitizer_cov_trace_pc() #18
  %mlx5_ib_support_multi_pkt_send_wqes850 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 6
  %470 = ptrtoint ptr %mlx5_ib_support_multi_pkt_send_wqes850 to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load i32, ptr %mlx5_ib_support_multi_pkt_send_wqes850, align 8
  %or851 = or i32 %471, 4
  store i32 %or851, ptr %mlx5_ib_support_multi_pkt_send_wqes850, align 8
  br label %if.end855

if.end855:                                        ; preds = %if.then849, %if.end839.if.end855_crit_edge
  %472 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %response_length, align 4
  %add854 = add i32 %473, 4
  store i32 %add854, ptr %response_length, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %cond)
  %cmp856 = icmp ugt i32 %cond, 63
  br i1 %cmp856, label %if.then858, label %if.end855.if.end1090_crit_edge

if.end855.if.end1090_crit_edge:                   ; preds = %if.end855
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1090

if.then858:                                       ; preds = %if.end855
  %474 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %474)
  %475 = load i32, ptr %response_length, align 4
  %add860 = add i32 %475, 4
  store i32 %add860, ptr %response_length, align 4
  %476 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %476)
  %477 = load ptr, ptr %caps, align 8
  %add.ptr866 = getelementptr i32, ptr %477, i32 45
  %478 = ptrtoint ptr %add.ptr866 to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load i32, ptr %add.ptr866, align 4
  %480 = and i32 %479, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %480)
  %tobool869.not = icmp eq i32 %480, 0
  br i1 %tobool869.not, label %if.then858.if.end873_crit_edge, label %if.then870

if.then858.if.end873_crit_edge:                   ; preds = %if.then858
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end873

if.then870:                                       ; preds = %if.then858
  call void @__sanitizer_cov_trace_pc() #18
  %flags871 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 7
  %481 = ptrtoint ptr %flags871 to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load i32, ptr %flags871, align 4
  %or872 = or i32 %482, 1
  store i32 %or872, ptr %flags871, align 4
  br label %if.end873

if.end873:                                        ; preds = %if.then870, %if.then858.if.end873_crit_edge
  %483 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load ptr, ptr %caps, align 8
  %add.ptr879 = getelementptr i32, ptr %484, i32 45
  %485 = ptrtoint ptr %add.ptr879 to i32
  call void @__asan_load4_noabort(i32 %485)
  %486 = load i32, ptr %add.ptr879, align 4
  %487 = and i32 %486, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %487)
  %tobool882.not = icmp eq i32 %487, 0
  br i1 %tobool882.not, label %if.end873.if.end886_crit_edge, label %if.then883

if.end873.if.end886_crit_edge:                    ; preds = %if.end873
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end886

if.then883:                                       ; preds = %if.end873
  call void @__sanitizer_cov_trace_pc() #18
  %flags884 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 7
  %488 = ptrtoint ptr %flags884 to i32
  call void @__asan_load4_noabort(i32 %488)
  %489 = load i32, ptr %flags884, align 4
  %or885 = or i32 %489, 2
  store i32 %or885, ptr %flags884, align 4
  br label %if.end886

if.end886:                                        ; preds = %if.then883, %if.end873.if.end886_crit_edge
  %490 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %490)
  %491 = load ptr, ptr %caps, align 8
  %add.ptr892 = getelementptr i32, ptr %491, i32 17
  %492 = ptrtoint ptr %add.ptr892 to i32
  call void @__asan_load4_noabort(i32 %492)
  %493 = load i32, ptr %add.ptr892, align 4
  %494 = and i32 %493, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %494)
  %tobool895.not = icmp eq i32 %494, 0
  br i1 %tobool895.not, label %if.end886.if.end902_crit_edge, label %if.then896

if.end886.if.end902_crit_edge:                    ; preds = %if.end886
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end902

if.then896:                                       ; preds = %if.end886
  call void @__sanitizer_cov_trace_pc() #18
  %flags897 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 7
  %495 = ptrtoint ptr %flags897 to i32
  call void @__asan_load4_noabort(i32 %495)
  %496 = load i32, ptr %flags897, align 4
  %or898 = or i32 %496, 4
  store i32 %or898, ptr %flags897, align 4
  br label %if.end902

if.end902:                                        ; preds = %if.then896, %if.end886.if.end902_crit_edge
  %flags900 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 7
  %497 = ptrtoint ptr %flags900 to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load i32, ptr %flags900, align 4
  %or901 = or i32 %498, 8
  store i32 %or901, ptr %flags900, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 71, i32 %cond)
  %cmp903 = icmp ugt i32 %cond, 71
  br i1 %cmp903, label %if.then905, label %if.end902.if.end1090_crit_edge

if.end902.if.end1090_crit_edge:                   ; preds = %if.end902
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1090

if.then905:                                       ; preds = %if.end902
  %499 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %499)
  %500 = load i32, ptr %response_length, align 4
  %add907 = add i32 %500, 8
  store i32 %add907, ptr %response_length, align 4
  %501 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %501)
  %502 = load ptr, ptr %arrayidx831, align 4
  %add.ptr913 = getelementptr i32, ptr %502, i32 1
  %503 = ptrtoint ptr %add.ptr913 to i32
  call void @__asan_load4_noabort(i32 %503)
  %504 = load i32, ptr %add.ptr913, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %504)
  %tobool916.not = icmp sgt i32 %504, -1
  br i1 %tobool916.not, label %if.then905.if.end955_crit_edge, label %if.then917

if.then905.if.end955_crit_edge:                   ; preds = %if.then905
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end955

if.then917:                                       ; preds = %if.then905
  %sw_parsing_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 8
  %505 = ptrtoint ptr %sw_parsing_caps to i32
  call void @__asan_load4_noabort(i32 %505)
  %506 = load i32, ptr %sw_parsing_caps, align 8
  %or918 = or i32 %506, 1
  store i32 %or918, ptr %sw_parsing_caps, align 8
  %507 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %507)
  %508 = load ptr, ptr %arrayidx831, align 4
  %add.ptr924 = getelementptr i32, ptr %508, i32 1
  %509 = ptrtoint ptr %add.ptr924 to i32
  call void @__asan_load4_noabort(i32 %509)
  %510 = load i32, ptr %add.ptr924, align 4
  %511 = and i32 %510, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %511)
  %tobool927.not = icmp eq i32 %511, 0
  br i1 %tobool927.not, label %if.then917.if.end932_crit_edge, label %if.then928

if.then917.if.end932_crit_edge:                   ; preds = %if.then917
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end932

if.then928:                                       ; preds = %if.then917
  call void @__sanitizer_cov_trace_pc() #18
  %or931 = or i32 %506, 3
  %512 = ptrtoint ptr %sw_parsing_caps to i32
  call void @__asan_store4_noabort(i32 %512)
  store i32 %or931, ptr %sw_parsing_caps, align 8
  br label %if.end932

if.end932:                                        ; preds = %if.then928, %if.then917.if.end932_crit_edge
  %513 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %513)
  %514 = load ptr, ptr %arrayidx831, align 4
  %add.ptr938 = getelementptr i32, ptr %514, i32 1
  %515 = ptrtoint ptr %add.ptr938 to i32
  call void @__asan_load4_noabort(i32 %515)
  %516 = load i32, ptr %add.ptr938, align 4
  %517 = and i32 %516, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %517)
  %tobool941.not = icmp eq i32 %517, 0
  %518 = ptrtoint ptr %sw_parsing_caps to i32
  call void @__asan_load4_noabort(i32 %518)
  %.pr = load i32, ptr %sw_parsing_caps, align 8
  br i1 %tobool941.not, label %if.end946, label %if.end946.thread

if.end946.thread:                                 ; preds = %if.end932
  call void @__sanitizer_cov_trace_pc() #18
  %or945 = or i32 %.pr, 4
  %519 = ptrtoint ptr %sw_parsing_caps to i32
  call void @__asan_store4_noabort(i32 %519)
  store i32 %or945, ptr %sw_parsing_caps, align 8
  br label %if.then950

if.end946:                                        ; preds = %if.end932
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool949.not = icmp eq i32 %.pr, 0
  br i1 %tobool949.not, label %if.end946.if.end955_crit_edge, label %if.end946.if.then950_crit_edge

if.end946.if.then950_crit_edge:                   ; preds = %if.end946
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then950

if.end946.if.end955_crit_edge:                    ; preds = %if.end946
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end955

if.then950:                                       ; preds = %if.end946.if.then950_crit_edge, %if.end946.thread
  %supported_qpts952 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 8, i32 1
  %520 = ptrtoint ptr %supported_qpts952 to i32
  call void @__asan_store4_noabort(i32 %520)
  store i32 256, ptr %supported_qpts952, align 4
  br label %if.end955

if.end955:                                        ; preds = %if.then950, %if.end946.if.end955_crit_edge, %if.then905.if.end955_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %cond)
  %cmp956 = icmp ult i32 %cond, 96
  %brmerge1341 = select i1 %cmp956, i1 true, i1 %.not
  br i1 %brmerge1341, label %if.end955.if.end995_crit_edge, label %if.then961

if.end955.if.end995_crit_edge:                    ; preds = %if.end955
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end995

if.then961:                                       ; preds = %if.end955
  %521 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %521)
  %522 = load i32, ptr %response_length, align 4
  %add963 = add i32 %522, 24
  store i32 %add963, ptr %response_length, align 4
  %523 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %523)
  %524 = load ptr, ptr %caps, align 8
  %add.ptr969 = getelementptr i32, ptr %524, i32 16
  %525 = ptrtoint ptr %add.ptr969 to i32
  call void @__asan_load4_noabort(i32 %525)
  %526 = load i32, ptr %add.ptr969, align 4
  %527 = and i32 %526, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %527)
  %tobool972.not = icmp eq i32 %527, 0
  br i1 %tobool972.not, label %if.then961.if.end995_crit_edge, label %if.then973

if.then961.if.end995_crit_edge:                   ; preds = %if.then961
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end995

if.then973:                                       ; preds = %if.then961
  call void @__sanitizer_cov_trace_pc() #18
  %striding_rq_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 9
  %528 = ptrtoint ptr %striding_rq_caps to i32
  call void @__asan_store4_noabort(i32 %528)
  store i32 6, ptr %striding_rq_caps, align 8
  %max_single_stride_log_num_of_bytes = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 9, i32 1
  %529 = ptrtoint ptr %max_single_stride_log_num_of_bytes to i32
  call void @__asan_store4_noabort(i32 %529)
  store i32 13, ptr %max_single_stride_log_num_of_bytes, align 4
  %530 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %530)
  %531 = load ptr, ptr %mdev1, align 8
  %caps976 = getelementptr inbounds %struct.mlx5_core_dev, ptr %531, i32 0, i32 8
  %532 = ptrtoint ptr %caps976 to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load ptr, ptr %caps976, align 8
  %add.ptr981 = getelementptr i32, ptr %533, i32 29
  %534 = ptrtoint ptr %add.ptr981 to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load i32, ptr %add.ptr981, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %535)
  %tobool984.not = icmp sgt i32 %535, -1
  %spec.select = select i1 %tobool984.not, i32 9, i32 3
  %536 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 9, i32 2
  %537 = ptrtoint ptr %536 to i32
  call void @__asan_store4_noabort(i32 %537)
  store i32 %spec.select, ptr %536, align 8
  %max_single_wqe_log_num_of_strides = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 9, i32 3
  %538 = ptrtoint ptr %max_single_wqe_log_num_of_strides to i32
  call void @__asan_store4_noabort(i32 %538)
  store i32 16, ptr %max_single_wqe_log_num_of_strides, align 4
  %supported_qpts993 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 9, i32 4
  %539 = ptrtoint ptr %supported_qpts993 to i32
  call void @__asan_store4_noabort(i32 %539)
  store i32 256, ptr %supported_qpts993, align 8
  br label %if.end995

if.end995:                                        ; preds = %if.then973, %if.then961.if.end995_crit_edge, %if.end955.if.end995_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 99, i32 %cond)
  %cmp996 = icmp ugt i32 %cond, 99
  br i1 %cmp996, label %if.then998, label %if.end995.if.end1090_crit_edge

if.end995.if.end1090_crit_edge:                   ; preds = %if.end995
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1090

if.then998:                                       ; preds = %if.end995
  %540 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load i32, ptr %response_length, align 4
  %add1000 = add i32 %541, 4
  store i32 %add1000, ptr %response_length, align 4
  %542 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %542)
  %543 = load ptr, ptr %arrayidx831, align 4
  %544 = ptrtoint ptr %543 to i32
  call void @__asan_load4_noabort(i32 %544)
  %545 = load i32, ptr %543, align 4
  %and1008 = and i32 %545, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1008)
  %tobool1009.not = icmp eq i32 %and1008, 0
  br i1 %tobool1009.not, label %if.then998.if.end1012_crit_edge, label %if.then1010

if.then998.if.end1012_crit_edge:                  ; preds = %if.then998
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1012

if.then1010:                                      ; preds = %if.then998
  call void @__sanitizer_cov_trace_pc() #18
  %tunnel_offloads_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 10
  %546 = ptrtoint ptr %tunnel_offloads_caps to i32
  call void @__asan_load4_noabort(i32 %546)
  %547 = load i32, ptr %tunnel_offloads_caps, align 8
  %or1011 = or i32 %547, 1
  store i32 %or1011, ptr %tunnel_offloads_caps, align 8
  br label %if.end1012

if.end1012:                                       ; preds = %if.then1010, %if.then998.if.end1012_crit_edge
  %548 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %548)
  %549 = load ptr, ptr %arrayidx831, align 4
  %add.ptr1018 = getelementptr i32, ptr %549, i32 1
  %550 = ptrtoint ptr %add.ptr1018 to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load i32, ptr %add.ptr1018, align 4
  %and1020 = and i32 %551, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1020)
  %tobool1021.not = icmp eq i32 %and1020, 0
  br i1 %tobool1021.not, label %if.end1012.if.end1025_crit_edge, label %if.then1022

if.end1012.if.end1025_crit_edge:                  ; preds = %if.end1012
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1025

if.then1022:                                      ; preds = %if.end1012
  call void @__sanitizer_cov_trace_pc() #18
  %tunnel_offloads_caps1023 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 10
  %552 = ptrtoint ptr %tunnel_offloads_caps1023 to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load i32, ptr %tunnel_offloads_caps1023, align 8
  %or1024 = or i32 %553, 4
  store i32 %or1024, ptr %tunnel_offloads_caps1023, align 8
  br label %if.end1025

if.end1025:                                       ; preds = %if.then1022, %if.end1012.if.end1025_crit_edge
  %554 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %554)
  %555 = load ptr, ptr %arrayidx831, align 4
  %556 = ptrtoint ptr %555 to i32
  call void @__asan_load4_noabort(i32 %556)
  %557 = load i32, ptr %555, align 4
  %558 = and i32 %557, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %558)
  %tobool1034.not = icmp eq i32 %558, 0
  br i1 %tobool1034.not, label %if.end1025.if.end1038_crit_edge, label %if.then1035

if.end1025.if.end1038_crit_edge:                  ; preds = %if.end1025
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1038

if.then1035:                                      ; preds = %if.end1025
  call void @__sanitizer_cov_trace_pc() #18
  %tunnel_offloads_caps1036 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 10
  %559 = ptrtoint ptr %tunnel_offloads_caps1036 to i32
  call void @__asan_load4_noabort(i32 %559)
  %560 = load i32, ptr %tunnel_offloads_caps1036, align 8
  %or1037 = or i32 %560, 2
  store i32 %or1037, ptr %tunnel_offloads_caps1036, align 8
  br label %if.end1038

if.end1038:                                       ; preds = %if.then1035, %if.end1025.if.end1038_crit_edge
  %561 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %561)
  %562 = load ptr, ptr %arrayidx831, align 4
  %add.ptr1044 = getelementptr i32, ptr %562, i32 1
  %563 = ptrtoint ptr %add.ptr1044 to i32
  call void @__asan_load4_noabort(i32 %563)
  %564 = load i32, ptr %add.ptr1044, align 4
  %565 = and i32 %564, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %565)
  %tobool1047.not = icmp eq i32 %565, 0
  br i1 %tobool1047.not, label %if.end1038.if.end1051_crit_edge, label %if.then1048

if.end1038.if.end1051_crit_edge:                  ; preds = %if.end1038
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1051

if.then1048:                                      ; preds = %if.end1038
  call void @__sanitizer_cov_trace_pc() #18
  %tunnel_offloads_caps1049 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 10
  %566 = ptrtoint ptr %tunnel_offloads_caps1049 to i32
  call void @__asan_load4_noabort(i32 %566)
  %567 = load i32, ptr %tunnel_offloads_caps1049, align 8
  %or1050 = or i32 %567, 8
  store i32 %or1050, ptr %tunnel_offloads_caps1049, align 8
  br label %if.end1051

if.end1051:                                       ; preds = %if.then1048, %if.end1038.if.end1051_crit_edge
  %568 = ptrtoint ptr %arrayidx831 to i32
  call void @__asan_load4_noabort(i32 %568)
  %569 = load ptr, ptr %arrayidx831, align 4
  %add.ptr1057 = getelementptr i32, ptr %569, i32 1
  %570 = ptrtoint ptr %add.ptr1057 to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load i32, ptr %add.ptr1057, align 4
  %572 = and i32 %571, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %572)
  %tobool1060.not = icmp eq i32 %572, 0
  br i1 %tobool1060.not, label %if.end1051.if.end1065_crit_edge, label %if.then1061

if.end1051.if.end1065_crit_edge:                  ; preds = %if.end1051
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1065

if.then1061:                                      ; preds = %if.end1051
  call void @__sanitizer_cov_trace_pc() #18
  %tunnel_offloads_caps1062 = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 10
  %573 = ptrtoint ptr %tunnel_offloads_caps1062 to i32
  call void @__asan_load4_noabort(i32 %573)
  %574 = load i32, ptr %tunnel_offloads_caps1062, align 8
  %or1063 = or i32 %574, 16
  store i32 %or1063, ptr %tunnel_offloads_caps1062, align 8
  br label %if.end1065

if.end1065:                                       ; preds = %if.then1061, %if.end1051.if.end1065_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 101, i32 %cond)
  %cmp1066 = icmp ugt i32 %cond, 101
  br i1 %cmp1066, label %if.then1068, label %if.end1065.if.end1090_crit_edge

if.end1065.if.end1090_crit_edge:                  ; preds = %if.end1065
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1090

if.then1068:                                      ; preds = %if.end1065
  call void @__sanitizer_cov_trace_pc() #18
  %575 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %575)
  %576 = load i32, ptr %response_length, align 4
  %add1070 = add i32 %576, 2
  store i32 %add1070, ptr %response_length, align 4
  %577 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %577)
  %578 = load ptr, ptr %caps, align 8
  %add.ptr1076 = getelementptr i32, ptr %578, i32 44
  %579 = ptrtoint ptr %add.ptr1076 to i32
  call void @__asan_load4_noabort(i32 %579)
  %580 = load i32, ptr %add.ptr1076, align 4
  %shr1077 = lshr i32 %580, 16
  %581 = trunc i32 %shr1077 to i8
  %conv1079 = and i8 %581, 31
  %dci_streams_caps = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 11
  %582 = ptrtoint ptr %dci_streams_caps to i32
  call void @__asan_store1_noabort(i32 %582)
  store i8 %conv1079, ptr %dci_streams_caps, align 4
  %583 = load i32, ptr %add.ptr1076, align 4
  %shr1086 = lshr i32 %583, 8
  %584 = trunc i32 %shr1086 to i8
  %conv1088 = and i8 %584, 31
  %max_log_num_errored = getelementptr inbounds %struct.mlx5_ib_query_device_resp, ptr %resp, i32 0, i32 11, i32 1
  %585 = ptrtoint ptr %max_log_num_errored to i32
  call void @__asan_store1_noabort(i32 %585)
  store i8 %conv1088, ptr %max_log_num_errored, align 1
  br label %if.end1090

if.end1090:                                       ; preds = %if.then1068, %if.end1065.if.end1090_crit_edge, %if.end995.if.end1090_crit_edge, %if.end902.if.end1090_crit_edge, %if.end855.if.end1090_crit_edge, %if.end825.if.end1090_crit_edge, %if.end707.if.end1090_crit_edge
  br i1 %tobool4.not, label %if.end1090.if.end1098_crit_edge, label %if.then1092

if.end1090.if.end1098_crit_edge:                  ; preds = %if.end1090
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1098

if.then1092:                                      ; preds = %if.end1090
  %586 = ptrtoint ptr %response_length to i32
  call void @__asan_load4_noabort(i32 %586)
  %587 = load i32, ptr %response_length, align 4
  %call1094 = call fastcc i32 @ib_copy_to_udata(ptr noundef %uhw, ptr noundef nonnull %resp, i32 noundef %587)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1094)
  %tobool1095.not = icmp eq i32 %call1094, 0
  br i1 %tobool1095.not, label %if.then1092.if.end1098_crit_edge, label %if.then1092.cleanup_crit_edge

if.then1092.cleanup_crit_edge:                    ; preds = %if.then1092
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then1092.if.end1098_crit_edge:                 ; preds = %if.then1092
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end1098

if.end1098:                                       ; preds = %if.then1092.if.end1098_crit_edge, %if.end1090.if.end1098_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end1098, %if.then1092.cleanup_crit_edge, %mlx5_query_vendor_id.exit.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %mlx5_query_system_image_guid.exit.cleanup_crit_edge, %mlx5_query_system_image_guid.exit.thread, %ib_is_udata_cleared.exit.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge, %cond.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end1098 ], [ -22, %cond.end.cleanup_crit_edge ], [ -22, %ib_is_udata_cleared.exit.cleanup_crit_edge ], [ %call3.i, %mlx5_query_system_image_guid.exit.cleanup_crit_edge ], [ %retval.0.i1350, %mlx5_query_vendor_id.exit.cleanup_crit_edge ], [ %call1094, %if.then1092.cleanup_crit_edge ], [ %retval.0.i.ph, %mlx5_query_system_image_guid.exit.thread ], [ -22, %land.lhs.true8.cleanup_crit_edge ], [ -22, %if.end.i.i.cleanup_crit_edge ], [ -22, %if.end16.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %resp) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_modify_device(ptr nocapture noundef %ibdev, i32 noundef %mask, ptr nocapture noundef readonly %props) #0 align 64 {
entry:
  %in = alloca %struct.mlx5_reg_node_desc, align 1
  %out = alloca %struct.mlx5_reg_node_desc, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %in) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %out) #16
  %0 = call ptr @memset(ptr %out, i32 255, i32 64)
  %and = and i32 %mask, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %and1 = and i32 %mask, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %node_desc = getelementptr inbounds %struct.ib_device_modify, ptr %props, i32 0, i32 1
  %1 = call ptr @memcpy(ptr %in, ptr %node_desc, i32 64)
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %call5 = call i32 @mlx5_core_access_reg(ptr noundef %3, ptr noundef nonnull %in, i32 noundef 64, ptr noundef nonnull %out, i32 noundef 64, i16 noundef zeroext 24577, i32 noundef 0, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %node_desc9 = getelementptr inbounds %struct.ib_device, ptr %ibdev, i32 0, i32 16
  %4 = call ptr @memcpy(ptr %node_desc9, ptr %node_desc, i32 64)
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end8 ], [ -95, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %call5, %if.end4.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %out) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %in) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @get_dev_fw_str(ptr nocapture noundef readonly %ibdev, ptr nocapture noundef writeonly %str) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %iseg.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %iseg.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %iseg.i, align 4
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %3) #16, !srcloc !413
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !414
  %conv = and i32 %4, 65535
  %5 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mdev, align 8
  %iseg.i10 = getelementptr inbounds %struct.mlx5_core_dev, ptr %6, i32 0, i32 12
  %7 = ptrtoint ptr %iseg.i10 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %iseg.i10, align 4
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %8) #16, !srcloc !413
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !415
  %shr.i = lshr i32 %9, 16
  %10 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mdev, align 8
  %iseg.i12 = getelementptr inbounds %struct.mlx5_core_dev, ptr %11, i32 0, i32 12
  %12 = ptrtoint ptr %iseg.i12 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %iseg.i12, align 4
  %cmdif_rev_fw_sub.i = getelementptr inbounds %struct.mlx5_init_seg, ptr %13, i32 0, i32 1
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %cmdif_rev_fw_sub.i) #16, !srcloc !413
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #16, !srcloc !416
  %conv6 = and i32 %14, 65535
  %call7 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %str, i32 noundef 32, ptr noundef nonnull @.str.59, i32 noundef %conv, i32 noundef %shr.i, i32 noundef %conv6)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_modify_port(ptr noundef %ibdev, i32 noundef %port, i32 noundef %mask, ptr nocapture noundef readonly %props) #0 align 64 {
entry:
  %ctx.i = alloca %struct.mlx5_hca_vport_context, align 8
  %attr = alloca %struct.ib_port_attr, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %attr) #16
  %0 = call ptr @memset(ptr %attr, i32 255, i32 72)
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %1 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mdev.i, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %caps.i, align 8
  %add.ptr.i = getelementptr i32, ptr %4, i32 13
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %add.ptr.i, align 4
  %7 = and i32 %6, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %switch.selectcmp2.i.i = icmp eq i32 %7, 0
  br i1 %switch.selectcmp2.i.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = and i32 %6, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool2.not = icmp eq i32 %8, 0
  br i1 %tobool2.not, label %if.end9, label %if.then4

if.then4:                                         ; preds = %if.end
  %clr_port_cap_mask = getelementptr inbounds %struct.ib_port_modify, ptr %props, i32 0, i32 1
  %9 = ptrtoint ptr %clr_port_cap_mask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %clr_port_cap_mask, align 4
  %11 = ptrtoint ptr %props to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %props, align 4
  %or = or i32 %12, %10
  %neg = xor i32 %10, -1
  %or7 = or i32 %12, %neg
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %ctx.i) #16
  %13 = call ptr @memset(ptr %ctx.i, i32 0, i32 80)
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %add.ptr.i, align 4
  %16 = and i32 %15, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %16)
  %switch.selectcmp.i.i.i.i = icmp eq i32 %16, 256
  %add.ptr.i.i.i.i = getelementptr i32, ptr %4, i32 48
  %17 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %19 = and i32 %18, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %20 = icmp ne i32 %19, 0
  %or.cond.i.i = select i1 %20, i1 %switch.selectcmp.i.i.i.i, i1 false
  br i1 %or.cond.i.i, label %if.end6.i.i, label %if.then4.mlx5_ib_get_native_port_mdev.exit.i_crit_edge

if.then4.mlx5_ib_get_native_port_mdev.exit.i_crit_edge: ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_get_native_port_mdev.exit.i

if.end6.i.i:                                      ; preds = %if.then4
  %port10.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %21 = ptrtoint ptr %port10.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %port10.i.i, align 8
  %sub.i.i = add i32 %port, -1
  %mpi_lock.i.i = getelementptr %struct.mlx5_ib_port, ptr %22, i32 %sub.i.i, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i.i) #16
  %23 = ptrtoint ptr %port10.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %port10.i.i, align 8
  %mp14.i.i = getelementptr %struct.mlx5_ib_port, ptr %24, i32 %sub.i.i, i32 1
  %25 = ptrtoint ptr %mp14.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mp14.i.i, align 4
  %tobool16.not.i.i = icmp eq ptr %26, null
  br i1 %tobool16.not.i.i, label %if.end6.i.i.if.end23.i.i_crit_edge, label %land.lhs.true.i.i

if.end6.i.i.if.end23.i.i_crit_edge:               ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

land.lhs.true.i.i:                                ; preds = %if.end6.i.i
  %unaffiliate.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %26, i32 0, i32 8
  %27 = ptrtoint ptr %unaffiliate.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %unaffiliate.i.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool17.not.i.i = icmp eq i8 %28, 0
  br i1 %tobool17.not.i.i, label %if.then18.i.i, label %land.lhs.true.i.i.if.end23.i.i_crit_edge

land.lhs.true.i.i.if.end23.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

if.then18.i.i:                                    ; preds = %land.lhs.true.i.i
  %mdev19.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %26, i32 0, i32 2
  %29 = ptrtoint ptr %mdev19.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mdev19.i.i, align 4
  %is_master.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %26, i32 0, i32 7
  %31 = ptrtoint ptr %is_master.i.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %is_master.i.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool20.not.i.i = icmp eq i8 %32, 0
  br i1 %tobool20.not.i.i, label %if.then21.i.i, label %if.then18.i.i.if.end23.i.i_crit_edge

if.then18.i.i.if.end23.i.i_crit_edge:             ; preds = %if.then18.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

if.then21.i.i:                                    ; preds = %if.then18.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %mdev_refcnt.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %26, i32 0, i32 6
  %33 = ptrtoint ptr %mdev_refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mdev_refcnt.i.i, align 8
  %inc.i.i = add i32 %34, 1
  store i32 %inc.i.i, ptr %mdev_refcnt.i.i, align 8
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %if.then21.i.i, %if.then18.i.i.if.end23.i.i_crit_edge, %land.lhs.true.i.i.if.end23.i.i_crit_edge, %if.end6.i.i.if.end23.i.i_crit_edge
  %mdev.0.i.i = phi ptr [ null, %land.lhs.true.i.i.if.end23.i.i_crit_edge ], [ %30, %if.then18.i.i.if.end23.i.i_crit_edge ], [ %30, %if.then21.i.i ], [ null, %if.end6.i.i.if.end23.i.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i.i) #16
  br label %mlx5_ib_get_native_port_mdev.exit.i

mlx5_ib_get_native_port_mdev.exit.i:              ; preds = %if.end23.i.i, %if.then4.mlx5_ib_get_native_port_mdev.exit.i_crit_edge
  %mdev_port_num.0.i = phi i32 [ 1, %if.end23.i.i ], [ %port, %if.then4.mlx5_ib_get_native_port_mdev.exit.i_crit_edge ]
  %retval.0.i.i = phi ptr [ %mdev.0.i.i, %if.end23.i.i ], [ %2, %if.then4.mlx5_ib_get_native_port_mdev.exit.i_crit_edge ]
  %tobool.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool.not.i, label %mlx5_ib_get_native_port_mdev.exit.i.set_port_caps_atomic.exit_crit_edge, label %if.end.i

mlx5_ib_get_native_port_mdev.exit.i.set_port_caps_atomic.exit_crit_edge: ; preds = %mlx5_ib_get_native_port_mdev.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %set_port_caps_atomic.exit

if.end.i:                                         ; preds = %mlx5_ib_get_native_port_mdev.exit.i
  %conv.i = trunc i32 %mdev_port_num.0.i to i8
  %call1.i = call i32 @mlx5_query_hca_vport_context(ptr noundef nonnull %retval.0.i.i, i8 noundef zeroext 0, i8 noundef zeroext %conv.i, i16 noundef zeroext 0, ptr noundef nonnull %ctx.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.out.i_crit_edge

if.end.i.out.i_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i

if.end4.i:                                        ; preds = %if.end.i
  %cap_mask1_perm.i = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %ctx.i, i32 0, i32 12
  %35 = ptrtoint ptr %cap_mask1_perm.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cap_mask1_perm.i, align 4
  %neg.i = xor i32 %36, -1
  %and.i44 = and i32 %or, %neg.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i44)
  %tobool5.not.i = icmp eq i32 %and.i44, 0
  br i1 %tobool5.not.i, label %if.end9.i, label %do.end.i

do.end.i:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %37 = getelementptr inbounds %struct.ib_device, ptr %ibdev, i32 0, i32 13
  %38 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 68
  %42 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %pid.i, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %37, ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.61, i32 noundef 1529, i32 noundef %43, i32 noundef %or, i32 noundef %36) #20
  br label %out.i

if.end9.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %cap_mask1.i = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %ctx.i, i32 0, i32 11
  %44 = ptrtoint ptr %cap_mask1.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %or7, ptr %cap_mask1.i, align 8
  %45 = ptrtoint ptr %cap_mask1_perm.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %or, ptr %cap_mask1_perm.i, align 4
  %call12.i = call i32 @mlx5_core_modify_hca_vport_context(ptr noundef nonnull %retval.0.i.i, i8 noundef zeroext 0, i8 noundef zeroext %conv.i, i32 noundef 0, ptr noundef nonnull %ctx.i) #16
  br label %out.i

out.i:                                            ; preds = %if.end9.i, %do.end.i, %if.end.i.out.i_crit_edge
  %err.0.i = phi i32 [ %call1.i, %if.end.i.out.i_crit_edge ], [ -22, %do.end.i ], [ %call12.i, %if.end9.i ]
  %46 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mdev.i, align 8
  %caps.i.i25.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %47, i32 0, i32 8
  %48 = ptrtoint ptr %caps.i.i25.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %caps.i.i25.i, align 8
  %add.ptr.i.i26.i = getelementptr i32, ptr %49, i32 13
  %50 = ptrtoint ptr %add.ptr.i.i26.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %add.ptr.i.i26.i, align 4
  %52 = and i32 %51, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %52)
  %switch.selectcmp.i.i.i27.i = icmp eq i32 %52, 256
  %add.ptr.i.i.i28.i = getelementptr i32, ptr %49, i32 48
  %53 = ptrtoint ptr %add.ptr.i.i.i28.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %add.ptr.i.i.i28.i, align 4
  %55 = and i32 %54, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %56 = icmp ne i32 %55, 0
  %or.cond.i29.i = select i1 %56, i1 %switch.selectcmp.i.i.i27.i, i1 false
  br i1 %or.cond.i29.i, label %if.end.i.i, label %out.i.set_port_caps_atomic.exit_crit_edge

out.i.set_port_caps_atomic.exit_crit_edge:        ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %set_port_caps_atomic.exit

if.end.i.i:                                       ; preds = %out.i
  %port2.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %57 = ptrtoint ptr %port2.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %port2.i.i, align 8
  %sub.i30.i = add i32 %port, -1
  %mpi_lock.i31.i = getelementptr %struct.mlx5_ib_port, ptr %58, i32 %sub.i30.i, i32 1, i32 1
  call void @_raw_spin_lock(ptr noundef %mpi_lock.i31.i) #16
  %59 = ptrtoint ptr %port2.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %port2.i.i, align 8
  %mp6.i.i = getelementptr %struct.mlx5_ib_port, ptr %60, i32 %sub.i30.i, i32 1
  %61 = ptrtoint ptr %mp6.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %mp6.i.i, align 4
  %is_master.i32.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %62, i32 0, i32 7
  %63 = ptrtoint ptr %is_master.i32.i to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %is_master.i32.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %tobool8.not.i.i = icmp eq i8 %64, 0
  br i1 %tobool8.not.i.i, label %if.end10.i.i, label %if.end.i.i.out.i.i_crit_edge

if.end.i.i.out.i.i_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i.i

if.end10.i.i:                                     ; preds = %if.end.i.i
  %mdev_refcnt.i33.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %62, i32 0, i32 6
  %65 = ptrtoint ptr %mdev_refcnt.i33.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %mdev_refcnt.i33.i, align 8
  %dec.i.i = add i32 %66, -1
  store i32 %dec.i.i, ptr %mdev_refcnt.i33.i, align 8
  %unaffiliate.i34.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %62, i32 0, i32 8
  %67 = ptrtoint ptr %unaffiliate.i34.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %unaffiliate.i34.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool11.not.i.i = icmp eq i8 %68, 0
  br i1 %tobool11.not.i.i, label %if.end10.i.i.out.i.i_crit_edge, label %if.then12.i.i

if.end10.i.i.out.i.i_crit_edge:                   ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i.i

if.then12.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %unref_comp.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %62, i32 0, i32 4
  call void @complete(ptr noundef %unref_comp.i.i) #16
  br label %out.i.i

out.i.i:                                          ; preds = %if.then12.i.i, %if.end10.i.i.out.i.i_crit_edge, %if.end.i.i.out.i.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %mpi_lock.i31.i) #16
  br label %set_port_caps_atomic.exit

set_port_caps_atomic.exit:                        ; preds = %out.i.i, %out.i.set_port_caps_atomic.exit_crit_edge, %mlx5_ib_get_native_port_mdev.exit.i.set_port_caps_atomic.exit_crit_edge
  %retval.0.i = phi i32 [ -19, %mlx5_ib_get_native_port_mdev.exit.i.set_port_caps_atomic.exit_crit_edge ], [ %err.0.i, %out.i.set_port_caps_atomic.exit_crit_edge ], [ %err.0.i, %out.i.i ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %ctx.i) #16
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %cap_mask_mutex = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %cap_mask_mutex, i32 noundef 0) #16
  %call10 = call i32 @ib_query_port(ptr noundef %ibdev, i32 noundef %port, ptr noundef nonnull %attr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.end9.out_crit_edge

if.end9.out_crit_edge:                            ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end13:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %port_cap_flags = getelementptr inbounds %struct.ib_port_attr, ptr %attr, i32 0, i32 7
  %69 = ptrtoint ptr %port_cap_flags to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %port_cap_flags, align 8
  %71 = ptrtoint ptr %props to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %props, align 4
  %or15 = or i32 %72, %70
  %clr_port_cap_mask16 = getelementptr inbounds %struct.ib_port_modify, ptr %props, i32 0, i32 1
  %73 = ptrtoint ptr %clr_port_cap_mask16 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %clr_port_cap_mask16, align 4
  %neg17 = xor i32 %74, -1
  %and18 = and i32 %or15, %neg17
  %75 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %mdev.i, align 8
  %conv = trunc i32 %port to i8
  %call20 = call i32 @mlx5_set_port_caps(ptr noundef %76, i8 noundef zeroext %conv, i32 noundef %and18) #16
  br label %out

out:                                              ; preds = %if.end13, %if.end9.out_crit_edge
  %err.0 = phi i32 [ %call10, %if.end9.out_crit_edge ], [ %call20, %if.end13 ]
  call void @mutex_unlock(ptr noundef %cap_mask_mutex) #16
  br label %cleanup

cleanup:                                          ; preds = %out, %set_port_caps_atomic.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %set_port_caps_atomic.exit ], [ %err.0, %out ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %attr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_query_gid(ptr noundef %ibdev, i32 noundef %port, i32 noundef %index, ptr noundef %gid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i, align 4
  %6 = and i32 %5, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %7 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %7)
  %switch.selectcmp.i.i.i = icmp eq i32 %7, 256
  %..i = select i1 %switch.selectcmp.i.i.i, i32 2, i32 1
  %retval.0.i = select i1 %.not.i, i32 0, i32 %..i
  %8 = zext i32 %retval.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.171)
  switch i32 %retval.0.i, label %entry.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call i32 @mlx5_query_mad_ifc_gids(ptr noundef %ibdev, i32 noundef %port, i32 noundef %index, ptr noundef %gid) #16
  br label %cleanup

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %conv = trunc i32 %port to i8
  %conv5 = trunc i32 %index to i16
  %call6 = tail call i32 @mlx5_query_hca_vport_gid(ptr noundef %1, i8 noundef zeroext 0, i8 noundef zeroext %conv, i16 noundef zeroext 0, i16 noundef zeroext %conv5, ptr noundef %gid) #16
  br label %cleanup

cleanup:                                          ; preds = %sw.bb4, %sw.bb, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %sw.bb4 ], [ %call3, %sw.bb ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_add_gid(ptr noundef %attr, ptr nocapture noundef readnone %context) #0 align 64 {
entry:
  %vlan_id.i = alloca i16, align 2
  %mac.i = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device, align 4
  %port_num = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 5
  %2 = ptrtoint ptr %port_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %port_num, align 8
  %index = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 4
  %4 = ptrtoint ptr %index to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %index, align 4
  %conv = zext i16 %5 to i32
  %gid = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %vlan_id.i) #16
  %6 = ptrtoint ptr %vlan_id.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %vlan_id.i, align 2
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %mac.i) #16
  %gid_type1.i = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 3
  %7 = call ptr @memset(ptr %mac.i, i32 255, i32 6)
  %8 = ptrtoint ptr %gid_type1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %gid_type1.i, align 8
  %tobool.not.i = icmp eq ptr %gid, null
  br i1 %tobool.not.i, label %entry.if.end4.i_crit_edge, label %if.then.i

entry.if.end4.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i

if.then.i:                                        ; preds = %entry
  %call.i = call i32 @rdma_read_gid_l2_fields(ptr noundef %attr, ptr noundef nonnull %vlan_id.i, ptr noundef nonnull %mac.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.not.i, label %if.then.i.if.end4.i_crit_edge, label %if.then.i.set_roce_addr.exit_crit_edge

if.then.i.set_roce_addr.exit_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %set_roce_addr.exit

if.then.i.if.end4.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.then.i.if.end4.i_crit_edge, %entry.if.end4.i_crit_edge
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.172)
  switch i32 %9, label %do.end.i [
    i32 1, label %if.end4.i.sw.epilog.i_crit_edge
    i32 2, label %sw.bb5.i
  ]

if.end4.i.sw.epilog.i_crit_edge:                  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.end4.i
  br i1 %tobool.not.i, label %sw.bb5.i.if.else.i_crit_edge, label %land.lhs.true.i

sw.bb5.i.if.else.i_crit_edge:                     ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %sw.bb5.i
  %11 = ptrtoint ptr %gid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gid, align 4
  %arrayidx2.i.i = getelementptr [4 x i32], ptr %gid, i32 0, i32 1
  %13 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx2.i.i, align 4
  %or.i.i = or i32 %14, %12
  %arrayidx4.i.i = getelementptr %struct.ib_gid_attr, ptr %attr, i32 0, i32 2, i32 0, i32 1
  %15 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx4.i.i, align 4
  %xor.i.i = xor i32 %16, 65535
  %or5.i.i = or i32 %or.i.i, %xor.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5.i.i)
  %cmp.i.i = icmp eq i32 %or5.i.i, 0
  br i1 %cmp.i.i, label %land.lhs.true.i.sw.epilog.i_crit_edge, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true.i.sw.epilog.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %sw.bb5.i.if.else.i_crit_edge
  br label %sw.epilog.i

do.end.i:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %17 = getelementptr inbounds %struct.ib_device, ptr %1, i32 0, i32 13
  %18 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 68
  %22 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pid.i, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %17, ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.63, i32 noundef 595, i32 noundef %23, i32 noundef %9) #20
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %do.end.i, %if.else.i, %land.lhs.true.i.sw.epilog.i_crit_edge, %if.end4.i.sw.epilog.i_crit_edge
  %roce_version.0.i = phi i8 [ 0, %do.end.i ], [ 2, %if.else.i ], [ 0, %if.end4.i.sw.epilog.i_crit_edge ], [ 2, %land.lhs.true.i.sw.epilog.i_crit_edge ]
  %roce_l3_type.0.i = phi i8 [ 0, %do.end.i ], [ 1, %if.else.i ], [ 0, %if.end4.i.sw.epilog.i_crit_edge ], [ 0, %land.lhs.true.i.sw.epilog.i_crit_edge ]
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %24 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mdev.i, align 8
  %26 = ptrtoint ptr %vlan_id.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %vlan_id.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 4096, i16 %27)
  %cmp.i = icmp ult i16 %27, 4096
  %conv13.i = trunc i32 %3 to i8
  %call14.i = call i32 @mlx5_core_roce_gid_set(ptr noundef %25, i32 noundef %conv, i8 noundef zeroext %roce_version.0.i, i8 noundef zeroext %roce_l3_type.0.i, ptr noundef %gid, ptr noundef nonnull %mac.i, i1 noundef zeroext %cmp.i, i16 noundef zeroext %27, i8 noundef zeroext %conv13.i) #16
  br label %set_roce_addr.exit

set_roce_addr.exit:                               ; preds = %sw.epilog.i, %if.then.i.set_roce_addr.exit_crit_edge
  %retval.0.i = phi i32 [ %call14.i, %sw.epilog.i ], [ %call.i, %if.then.i.set_roce_addr.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %mac.i) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %vlan_id.i) #16
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_del_gid(ptr nocapture noundef readonly %attr, ptr nocapture noundef readnone %context) #0 align 64 {
entry:
  %mac.i = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device, align 4
  %port_num = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 5
  %2 = ptrtoint ptr %port_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %port_num, align 8
  %index = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 4
  %4 = ptrtoint ptr %index to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %index, align 4
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %mac.i) #16
  %gid_type1.i = getelementptr inbounds %struct.ib_gid_attr, ptr %attr, i32 0, i32 3
  %6 = call ptr @memset(ptr %mac.i, i32 255, i32 6)
  %7 = ptrtoint ptr %gid_type1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %gid_type1.i, align 8
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.173)
  switch i32 %8, label %do.end.i [
    i32 1, label %entry.set_roce_addr.exit_crit_edge
    i32 2, label %sw.bb5.i
  ]

entry.set_roce_addr.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %set_roce_addr.exit

sw.bb5.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %set_roce_addr.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %10 = getelementptr inbounds %struct.ib_device, ptr %1, i32 0, i32 13
  %11 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 68
  %15 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pid.i, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %10, ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.63, i32 noundef 595, i32 noundef %16, i32 noundef %8) #20
  br label %set_roce_addr.exit

set_roce_addr.exit:                               ; preds = %do.end.i, %sw.bb5.i, %entry.set_roce_addr.exit_crit_edge
  %roce_version.0.i = phi i8 [ 0, %do.end.i ], [ 2, %sw.bb5.i ], [ 0, %entry.set_roce_addr.exit_crit_edge ]
  %roce_l3_type.0.i = phi i8 [ 0, %do.end.i ], [ 1, %sw.bb5.i ], [ 0, %entry.set_roce_addr.exit_crit_edge ]
  %conv = zext i16 %5 to i32
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %17 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mdev.i, align 8
  %conv13.i = trunc i32 %3 to i8
  %call14.i = call i32 @mlx5_core_roce_gid_set(ptr noundef %18, i32 noundef %conv, i8 noundef zeroext %roce_version.0.i, i8 noundef zeroext %roce_l3_type.0.i, ptr noundef null, ptr noundef nonnull %mac.i, i1 noundef zeroext false, i16 noundef zeroext -1, i8 noundef zeroext %conv13.i) #16
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %mac.i) #16
  ret i32 %call14.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_query_pkey(ptr noundef %ibdev, i32 noundef %port, i16 noundef zeroext %index, ptr noundef %pkey) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i.i, align 4
  %6 = and i32 %5, 536871680
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %.not.i = icmp eq i32 %6, 0
  %7 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %7)
  %switch.selectcmp.i.i.i = icmp eq i32 %7, 256
  %..i = select i1 %switch.selectcmp.i.i.i, i32 2, i32 1
  %retval.0.i = select i1 %.not.i, i32 0, i32 %..i
  %8 = zext i32 %retval.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.174)
  switch i32 %retval.0.i, label %entry.return_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %entry.sw.bb2_crit_edge
    i32 2, label %entry.sw.bb2_crit_edge9
  ]

entry.sw.bb2_crit_edge9:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2

entry.sw.bb2_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call i32 @mlx5_query_mad_ifc_pkey(ptr noundef %ibdev, i32 noundef %port, i16 noundef zeroext %index, ptr noundef %pkey) #16
  br label %return

sw.bb2:                                           ; preds = %entry.sw.bb2_crit_edge, %entry.sw.bb2_crit_edge9
  %add.ptr.i.i.i.i = getelementptr i32, ptr %3, i32 48
  %9 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %add.ptr.i.i.i.i, align 4
  %11 = and i32 %10, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %12 = icmp ne i32 %11, 0
  %or.cond.i.i = select i1 %12, i1 %switch.selectcmp.i.i.i, i1 false
  br i1 %or.cond.i.i, label %if.end6.i.i, label %sw.bb2.mlx5_ib_get_native_port_mdev.exit.i_crit_edge

sw.bb2.mlx5_ib_get_native_port_mdev.exit.i_crit_edge: ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_get_native_port_mdev.exit.i

if.end6.i.i:                                      ; preds = %sw.bb2
  %port10.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %13 = ptrtoint ptr %port10.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %port10.i.i, align 8
  %sub.i.i = add i32 %port, -1
  %mpi_lock.i.i = getelementptr %struct.mlx5_ib_port, ptr %14, i32 %sub.i.i, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i.i) #16
  %15 = ptrtoint ptr %port10.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %port10.i.i, align 8
  %mp14.i.i = getelementptr %struct.mlx5_ib_port, ptr %16, i32 %sub.i.i, i32 1
  %17 = ptrtoint ptr %mp14.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mp14.i.i, align 4
  %tobool16.not.i.i = icmp eq ptr %18, null
  br i1 %tobool16.not.i.i, label %if.end6.i.i.if.end23.i.i_crit_edge, label %land.lhs.true.i.i

if.end6.i.i.if.end23.i.i_crit_edge:               ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

land.lhs.true.i.i:                                ; preds = %if.end6.i.i
  %unaffiliate.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %18, i32 0, i32 8
  %19 = ptrtoint ptr %unaffiliate.i.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %unaffiliate.i.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool17.not.i.i = icmp eq i8 %20, 0
  br i1 %tobool17.not.i.i, label %if.then18.i.i, label %land.lhs.true.i.i.if.end23.i.i_crit_edge

land.lhs.true.i.i.if.end23.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

if.then18.i.i:                                    ; preds = %land.lhs.true.i.i
  %mdev19.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %18, i32 0, i32 2
  %21 = ptrtoint ptr %mdev19.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mdev19.i.i, align 4
  %is_master.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %18, i32 0, i32 7
  %23 = ptrtoint ptr %is_master.i.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %is_master.i.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool20.not.i.i = icmp eq i8 %24, 0
  br i1 %tobool20.not.i.i, label %if.then21.i.i, label %if.then18.i.i.if.end23.i.i_crit_edge

if.then18.i.i.if.end23.i.i_crit_edge:             ; preds = %if.then18.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i.i

if.then21.i.i:                                    ; preds = %if.then18.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %mdev_refcnt.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %18, i32 0, i32 6
  %25 = ptrtoint ptr %mdev_refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mdev_refcnt.i.i, align 8
  %inc.i.i = add i32 %26, 1
  store i32 %inc.i.i, ptr %mdev_refcnt.i.i, align 8
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %if.then21.i.i, %if.then18.i.i.if.end23.i.i_crit_edge, %land.lhs.true.i.i.if.end23.i.i_crit_edge, %if.end6.i.i.if.end23.i.i_crit_edge
  %mdev.0.i.i = phi ptr [ null, %land.lhs.true.i.i.if.end23.i.i_crit_edge ], [ %22, %if.then18.i.i.if.end23.i.i_crit_edge ], [ %22, %if.then21.i.i ], [ null, %if.end6.i.i.if.end23.i.i_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i.i) #16
  br label %mlx5_ib_get_native_port_mdev.exit.i

mlx5_ib_get_native_port_mdev.exit.i:              ; preds = %if.end23.i.i, %sw.bb2.mlx5_ib_get_native_port_mdev.exit.i_crit_edge
  %mdev_port_num.0.i = phi i32 [ 1, %if.end23.i.i ], [ %port, %sw.bb2.mlx5_ib_get_native_port_mdev.exit.i_crit_edge ]
  %retval.0.i.i = phi ptr [ %mdev.0.i.i, %if.end23.i.i ], [ %1, %sw.bb2.mlx5_ib_get_native_port_mdev.exit.i_crit_edge ]
  %tobool.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool.not.i, label %if.end.thread.i, label %if.then5.i

if.end.thread.i:                                  ; preds = %mlx5_ib_get_native_port_mdev.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mdev.i.i, align 8
  %call325.i = tail call i32 @mlx5_query_hca_vport_pkey(ptr noundef %28, i8 noundef zeroext 0, i8 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %index, ptr noundef %pkey) #16
  br label %return

if.then5.i:                                       ; preds = %mlx5_ib_get_native_port_mdev.exit.i
  %conv.i = trunc i32 %mdev_port_num.0.i to i8
  %call3.i = tail call i32 @mlx5_query_hca_vport_pkey(ptr noundef nonnull %retval.0.i.i, i8 noundef zeroext 0, i8 noundef zeroext %conv.i, i16 noundef zeroext 0, i16 noundef zeroext %index, ptr noundef %pkey) #16
  %29 = ptrtoint ptr %mdev.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %mdev.i.i, align 8
  %caps.i.i12.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %30, i32 0, i32 8
  %31 = ptrtoint ptr %caps.i.i12.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %caps.i.i12.i, align 8
  %add.ptr.i.i13.i = getelementptr i32, ptr %32, i32 13
  %33 = ptrtoint ptr %add.ptr.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %add.ptr.i.i13.i, align 4
  %35 = and i32 %34, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %35)
  %switch.selectcmp.i.i.i14.i = icmp eq i32 %35, 256
  %add.ptr.i.i.i15.i = getelementptr i32, ptr %32, i32 48
  %36 = ptrtoint ptr %add.ptr.i.i.i15.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %add.ptr.i.i.i15.i, align 4
  %38 = and i32 %37, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %39 = icmp ne i32 %38, 0
  %or.cond.i16.i = select i1 %39, i1 %switch.selectcmp.i.i.i14.i, i1 false
  br i1 %or.cond.i16.i, label %if.end.i.i, label %if.then5.i.return_crit_edge

if.then5.i.return_crit_edge:                      ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i:                                       ; preds = %if.then5.i
  %port2.i.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 22
  %40 = ptrtoint ptr %port2.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %port2.i.i, align 8
  %sub.i17.i = add i32 %port, -1
  %mpi_lock.i18.i = getelementptr %struct.mlx5_ib_port, ptr %41, i32 %sub.i17.i, i32 1, i32 1
  tail call void @_raw_spin_lock(ptr noundef %mpi_lock.i18.i) #16
  %42 = ptrtoint ptr %port2.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %port2.i.i, align 8
  %mp6.i.i = getelementptr %struct.mlx5_ib_port, ptr %43, i32 %sub.i17.i, i32 1
  %44 = ptrtoint ptr %mp6.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mp6.i.i, align 4
  %is_master.i19.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %45, i32 0, i32 7
  %46 = ptrtoint ptr %is_master.i19.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %is_master.i19.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool8.not.i.i = icmp eq i8 %47, 0
  br i1 %tobool8.not.i.i, label %if.end10.i.i, label %if.end.i.i.out.i.i_crit_edge

if.end.i.i.out.i.i_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i.i

if.end10.i.i:                                     ; preds = %if.end.i.i
  %mdev_refcnt.i20.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %45, i32 0, i32 6
  %48 = ptrtoint ptr %mdev_refcnt.i20.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %mdev_refcnt.i20.i, align 8
  %dec.i.i = add i32 %49, -1
  store i32 %dec.i.i, ptr %mdev_refcnt.i20.i, align 8
  %unaffiliate.i21.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %45, i32 0, i32 8
  %50 = ptrtoint ptr %unaffiliate.i21.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %unaffiliate.i21.i, align 1, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool11.not.i.i = icmp eq i8 %51, 0
  br i1 %tobool11.not.i.i, label %if.end10.i.i.out.i.i_crit_edge, label %if.then12.i.i

if.end10.i.i.out.i.i_crit_edge:                   ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out.i.i

if.then12.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %unref_comp.i.i = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %45, i32 0, i32 4
  tail call void @complete(ptr noundef %unref_comp.i.i) #16
  br label %out.i.i

out.i.i:                                          ; preds = %if.then12.i.i, %if.end10.i.i.out.i.i_crit_edge, %if.end.i.i.out.i.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %mpi_lock.i18.i) #16
  br label %return

return:                                           ; preds = %out.i.i, %if.then5.i.return_crit_edge, %if.end.thread.i, %sw.bb, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call1, %sw.bb ], [ -22, %entry.return_crit_edge ], [ %call325.i, %if.end.thread.i ], [ %call3.i, %if.then5.i.return_crit_edge ], [ %call3.i, %out.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_alloc_ucontext(ptr noundef %uctx, ptr nocapture noundef readonly %udata) #0 align 64 {
entry:
  %req = alloca %struct.mlx5_ib_alloc_ucontext_req_v2, align 8
  %resp = alloca %struct.mlx5_ib_alloc_ucontext_resp, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %uctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %uctx, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %req) #16
  %2 = call ptr @memset(ptr %req, i32 0, i32 32)
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %resp) #16
  %3 = call ptr @memset(ptr %resp, i32 0, i32 72)
  %ib_active = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %ib_active to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %ib_active, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %inlen = getelementptr inbounds %struct.ib_udata, ptr %udata, i32 0, i32 2
  %5 = ptrtoint ptr %inlen to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %inlen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %6)
  %cmp = icmp eq i32 %6, 8
  br i1 %cmp, label %if.end.if.end8_crit_edge, label %if.else

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %6)
  %cmp4 = icmp ugt i32 %6, 15
  br i1 %cmp4, label %if.else.if.end8_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else.if.end8_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end8:                                          ; preds = %if.else.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %ver.0 = phi i32 [ 0, %if.end.if.end8_crit_edge ], [ 2, %if.else.if.end8_crit_edge ]
  %7 = tail call i32 @llvm.umin.i32(i32 %6, i32 32)
  %8 = ptrtoint ptr %udata to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %udata, align 4
  call void @__check_object_size(ptr noundef nonnull %req, i32 noundef %7, i1 noundef zeroext false) #16
  call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 156) #16
  %call.i.i.i = call zeroext i1 @should_fail_usercopy() #16
  br i1 %call.i.i.i, label %if.end8.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end8.if.then11.i.i.i_crit_edge:                ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end8
  %10 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %9, i32 %7, i32 -1226833920) #21, !srcloc !417
  %asmresult.i.i.i228 = extractvalue { i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i228)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i228, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !411

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %req, i32 noundef %7) #16
  %11 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i.i.i.i.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 4
  %13 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #9, !srcloc !418
  %and.i.i.i.i.i = and i32 %13, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #16, !srcloc !419
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #16, !srcloc !420
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %req, ptr noundef %9, i32 noundef %7) #16
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %13) #16, !srcloc !419
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #16, !srcloc !420
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end14, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !411

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end8.if.then11.i.i.i_crit_edge
  %res.0.i.i.i271 = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ %7, %if.end8.if.then11.i.i.i_crit_edge ], [ %7, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 %7, %res.0.i.i.i271
  %add.ptr.i.i.i = getelementptr i8, ptr %req, i32 %sub.i.i.i
  %14 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i.i271)
  br label %cleanup

if.end14:                                         ; preds = %if.end.i.i.i
  %flags = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 2
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %tobool15.not = icmp ult i32 %16, 2
  br i1 %tobool15.not, label %if.end17, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end17:                                         ; preds = %if.end14
  %comp_mask = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 3
  %17 = ptrtoint ptr %comp_mask to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %comp_mask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool18.not = icmp eq i32 %18, 0
  br i1 %tobool18.not, label %lor.lhs.false, label %if.end17.cleanup_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end17
  %reserved0 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 5
  %19 = ptrtoint ptr %reserved0 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %reserved0, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool19.not = icmp eq i8 %20, 0
  br i1 %tobool19.not, label %lor.lhs.false20, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %reserved1 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 6
  %21 = ptrtoint ptr %reserved1 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %reserved1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool22.not = icmp eq i16 %22, 0
  br i1 %tobool22.not, label %lor.lhs.false23, label %lor.lhs.false20.cleanup_crit_edge

lor.lhs.false20.cleanup_crit_edge:                ; preds = %lor.lhs.false20
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %reserved2 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 7
  %23 = ptrtoint ptr %reserved2 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %reserved2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool24.not = icmp eq i32 %24, 0
  br i1 %tobool24.not, label %if.end26, label %lor.lhs.false23.cleanup_crit_edge

lor.lhs.false23.cleanup_crit_edge:                ; preds = %lor.lhs.false23
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end26:                                         ; preds = %lor.lhs.false23
  %25 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %req, align 8
  %add = add i32 %26, 1
  %and27 = and i32 %add, -2
  store i32 %and27, ptr %req, align 8
  %num_low_latency_bfregs = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 1
  %27 = ptrtoint ptr %num_low_latency_bfregs to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_low_latency_bfregs, align 4
  %sub = add i32 %and27, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %sub)
  %cmp30 = icmp ugt i32 %28, %sub
  br i1 %cmp30, label %if.end26.cleanup_crit_edge, label %if.end33

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end33:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool36.not = icmp eq i32 %16, 0
  br i1 %tobool36.not, label %if.end33.if.end44_crit_edge, label %if.then37

if.end33.if.end44_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

if.then37:                                        ; preds = %if.end33
  %call38 = call i32 @mlx5_ib_devx_create(ptr noundef %1, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %cmp39 = icmp slt i32 %call38, 0
  br i1 %cmp39, label %if.then37.cleanup_crit_edge, label %if.end42

if.then37.cleanup_crit_edge:                      ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end42:                                         ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #18
  %conv43 = trunc i32 %call38 to i16
  %devx_uid = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 7
  %29 = ptrtoint ptr %devx_uid to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %conv43, ptr %devx_uid, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.end42, %if.end33.if.end44_crit_edge
  %lib_caps = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 8
  %30 = ptrtoint ptr %lib_caps to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %lib_caps, align 8
  %32 = trunc i64 %31 to i8
  %and48 = and i64 %31, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and48)
  %tobool49.not = icmp eq i64 %and48, 0
  %bfregi51 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3
  br i1 %tobool49.not, label %if.end58, label %if.then53

if.then53:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  %33 = trunc i64 %and48 to i8
  %lib_uar_dyn56 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 5
  %34 = ptrtoint ptr %lib_uar_dyn56 to i32
  call void @__asan_load1_noabort(i32 %34)
  %bf.load57 = load i8, ptr %lib_uar_dyn56, align 4
  %bf.shl = shl nuw nsw i8 %33, 5
  %bf.clear = and i8 %bf.load57, -65
  %bf.set = or i8 %bf.clear, %bf.shl
  store i8 %bf.set, ptr %lib_uar_dyn56, align 4
  br label %uar_done

if.end58:                                         ; preds = %if.end44
  %and45 = and i64 %31, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and45)
  %tobool46 = icmp ne i64 %and45, 0
  %call60 = call fastcc i32 @calc_total_bfregs(ptr noundef %1, i1 noundef zeroext %tobool46, ptr noundef nonnull %req, ptr noundef %bfregi51)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.body, label %if.end58.out_devx_crit_edge

if.end58.out_devx_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_devx

do.body:                                          ; preds = %if.end58
  %lock = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 3
  call void @__mutex_init(ptr noundef %lock, ptr noundef nonnull @.str.64, ptr noundef nonnull @mlx5_ib_alloc_ucontext.__key) #16
  %lib_uar_4k66 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 5
  %35 = ptrtoint ptr %lib_uar_4k66 to i32
  call void @__asan_load1_noabort(i32 %35)
  %bf.load67 = load i8, ptr %lib_uar_4k66, align 4
  %bf.shl69 = shl i8 %32, 7
  %bf.clear70 = and i8 %bf.load67, 127
  %bf.set71 = or i8 %bf.clear70, %bf.shl69
  store i8 %bf.set71, ptr %lib_uar_4k66, align 4
  %total_num_bfregs72 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 8
  %36 = ptrtoint ptr %total_num_bfregs72 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %total_num_bfregs72, align 4
  %38 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %37, i32 4) #16
  %39 = extractvalue { i32, i1 } %38, 1
  br i1 %39, label %kcalloc.exit.thread, label %if.end7.i.i, !prof !408

kcalloc.exit.thread:                              ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %count274 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 2
  %40 = ptrtoint ptr %count274 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %count274, align 4
  br label %out_devx

if.end7.i.i:                                      ; preds = %do.body
  %41 = extractvalue { i32, i1 } %38, 0
  %call8.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %41, i32 noundef 3520) #22
  %count = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 2
  %42 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %call8.i.i, ptr %count, align 4
  %tobool75.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool75.not, label %if.end7.i.i.out_devx_crit_edge, label %if.end77

if.end7.i.i.out_devx_crit_edge:                   ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_devx

if.end77:                                         ; preds = %if.end7.i.i
  %num_sys_pages = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 6
  %43 = ptrtoint ptr %num_sys_pages to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %num_sys_pages, align 4
  %45 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %44, i32 4) #16
  %46 = extractvalue { i32, i1 } %45, 1
  br i1 %46, label %kcalloc.exit266.thread, label %if.end7.i.i264, !prof !408

kcalloc.exit266.thread:                           ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #18
  %47 = ptrtoint ptr %bfregi51 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %bfregi51, align 4
  br label %out_count

if.end7.i.i264:                                   ; preds = %if.end77
  %48 = extractvalue { i32, i1 } %45, 0
  %call8.i.i263 = call noalias align 128 ptr @__kmalloc(i32 noundef %48, i32 noundef 3520) #22
  %49 = ptrtoint ptr %bfregi51 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %call8.i.i263, ptr %bfregi51, align 4
  %tobool80.not = icmp eq ptr %call8.i.i263, null
  br i1 %tobool80.not, label %if.end7.i.i264.out_count_crit_edge, label %if.end82

if.end7.i.i264.out_count_crit_edge:               ; preds = %if.end7.i.i264
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_count

if.end82:                                         ; preds = %if.end7.i.i264
  %call83 = call fastcc i32 @allocate_uars(ptr noundef %1, ptr noundef %uctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %if.end82.uar_done_crit_edge, label %if.end82.out_sys_pages_crit_edge

if.end82.out_sys_pages_crit_edge:                 ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_sys_pages

if.end82.uar_done_crit_edge:                      ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #18
  br label %uar_done

uar_done:                                         ; preds = %if.end82.uar_done_crit_edge, %if.then53
  %tdn = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 5
  %devx_uid87 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 7
  %50 = ptrtoint ptr %devx_uid87 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %devx_uid87, align 8
  %call88 = call fastcc i32 @mlx5_ib_alloc_transport_domain(ptr noundef %1, ptr noundef %tdn, i16 noundef zeroext %51)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call88)
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %if.end91, label %uar_done.out_uars_crit_edge

uar_done.out_uars_crit_edge:                      ; preds = %uar_done
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_uars

if.end91:                                         ; preds = %uar_done
  %db_page_list = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 1
  %52 = ptrtoint ptr %db_page_list to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %db_page_list, ptr %db_page_list, align 4
  %prev.i = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 1, i32 1
  %53 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %db_page_list, ptr %prev.i, align 4
  %db_page_mutex = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 2
  call void @__mutex_init(ptr noundef %db_page_mutex, ptr noundef nonnull @.str.66, ptr noundef nonnull @mlx5_ib_alloc_ucontext.__key.65) #16
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %54 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %55, i32 0, i32 8
  %56 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %57, i32 15
  %58 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %add.ptr, align 4
  %conv96 = and i32 %59, 15
  %max_cqe_version = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 4
  %60 = ptrtoint ptr %max_cqe_version to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %max_cqe_version, align 8
  %conv99 = zext i8 %61 to i32
  %62 = call i32 @llvm.umin.i32(i32 %conv96, i32 %conv99)
  %conv108 = trunc i32 %62 to i8
  %cqe_version = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 4
  %63 = ptrtoint ptr %cqe_version to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %conv108, ptr %cqe_version, align 8
  %call109 = call fastcc i32 @set_ucontext_resp(ptr noundef %uctx, ptr noundef nonnull %resp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call109)
  %tobool110.not = icmp eq i32 %call109, 0
  br i1 %tobool110.not, label %if.end112, label %if.end91.out_mdev_crit_edge

if.end91.out_mdev_crit_edge:                      ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_mdev

if.end112:                                        ; preds = %if.end91
  %outlen = getelementptr inbounds %struct.ib_udata, ptr %udata, i32 0, i32 3
  %64 = ptrtoint ptr %outlen to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %outlen, align 4
  %66 = call i32 @llvm.umin.i32(i32 %65, i32 72)
  %response_length = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 12
  %67 = ptrtoint ptr %response_length to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %response_length, align 8
  %call121 = call fastcc i32 @ib_copy_to_udata(ptr noundef %udata, ptr noundef nonnull %resp, i32 noundef %66)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call121)
  %tobool122.not = icmp eq i32 %call121, 0
  br i1 %tobool122.not, label %if.end124, label %if.end112.out_mdev_crit_edge

if.end112.out_mdev_crit_edge:                     ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_mdev

if.end124:                                        ; preds = %if.end112
  %ver125 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 4
  %68 = ptrtoint ptr %ver125 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %ver.0, ptr %ver125, align 4
  %69 = ptrtoint ptr %num_low_latency_bfregs to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %num_low_latency_bfregs, align 4
  %num_low_latency_bfregs127 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 1
  %71 = ptrtoint ptr %num_low_latency_bfregs127 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %num_low_latency_bfregs127, align 4
  %72 = ptrtoint ptr %lib_caps to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %lib_caps, align 8
  %lib_caps129 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 6
  %74 = ptrtoint ptr %lib_caps129 to i32
  call void @__asan_store8_noabort(i32 %74)
  store i64 %73, ptr %lib_caps129, align 8
  call fastcc void @print_lib_caps(ptr noundef %1, i64 noundef %73)
  %75 = ptrtoint ptr %ib_active to i32
  call void @__asan_load1_noabort(i32 %75)
  %bf.load.i = load i8, ptr %ib_active, align 8
  %76 = and i8 %bf.load.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool.not.i = icmp eq i8 %76, 0
  br i1 %tobool.not.i, label %lor.rhs.i, label %if.end124.if.then132_crit_edge

if.end124.if.then132_crit_edge:                   ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then132

lor.rhs.i:                                        ; preds = %if.end124
  %77 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mdev, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %78, i32 0, i32 8
  %79 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %caps.i, align 8
  %add.ptr.i = getelementptr i32, ptr %80, i32 19
  %81 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %add.ptr.i, align 4
  %and.i = and i32 %82, 14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.not.i = icmp ne i32 %and.i, 0
  %83 = and i32 %82, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool11.i = icmp ne i32 %83, 0
  %or.cond = and i1 %cmp.not.i, %tobool11.i
  br i1 %or.cond, label %lor.rhs.i.if.then132_crit_edge, label %lor.rhs.i.cleanup_crit_edge

lor.rhs.i.cleanup_crit_edge:                      ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.rhs.i.if.then132_crit_edge:                   ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then132

if.then132:                                       ; preds = %lor.rhs.i.if.then132_crit_edge, %if.end124.if.then132_crit_edge
  %84 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %mdev, align 8
  %caps.i.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %85, i32 0, i32 8
  %86 = ptrtoint ptr %caps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %caps.i.i.i, align 8
  %add.ptr.i.i.i267 = getelementptr i32, ptr %87, i32 48
  %88 = ptrtoint ptr %add.ptr.i.i.i267 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %add.ptr.i.i.i267, align 4
  %90 = and i32 %89, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %.not.i = icmp eq i32 %90, 0
  %shr.i = lshr i32 %89, 16
  %and.i268 = and i32 %shr.i, 255
  %and.i268.op = add nsw i32 %and.i268, -1
  %sub135 = select i1 %.not.i, i32 0, i32 %and.i268.op
  %tx_port_affinity = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 8
  %port136 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 22
  %91 = ptrtoint ptr %port136 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %port136, align 8
  %tx_port_affinity138 = getelementptr %struct.mlx5_ib_port, ptr %92, i32 %sub135, i32 3, i32 3
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %tx_port_affinity138, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !421
  call void @llvm.prefetch.p0(ptr %tx_port_affinity138, i32 1, i32 3, i32 1) #16
  %93 = call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tx_port_affinity138, ptr %tx_port_affinity138, i32 1, ptr elementtype(i32) %tx_port_affinity138) #16, !srcloc !422
  %asmresult.i.i.i = extractvalue { i32, i32 } %93, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !423
  %call.i.i227 = call zeroext i1 @__kasan_check_write(ptr noundef %tx_port_affinity, i32 noundef 4) #16
  %94 = ptrtoint ptr %tx_port_affinity to i32
  call void @__asan_store4_noabort(i32 %94)
  store volatile i32 %asmresult.i.i.i, ptr %tx_port_affinity, align 4
  br label %cleanup

out_mdev:                                         ; preds = %if.end112.out_mdev_crit_edge, %if.end91.out_mdev_crit_edge
  %err.0 = phi i32 [ %call109, %if.end91.out_mdev_crit_edge ], [ %call121, %if.end112.out_mdev_crit_edge ]
  %95 = ptrtoint ptr %tdn to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %tdn, align 4
  %97 = ptrtoint ptr %devx_uid87 to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %devx_uid87, align 8
  call fastcc void @mlx5_ib_dealloc_transport_domain(ptr noundef %1, i32 noundef %96, i16 noundef zeroext %98)
  br label %out_uars

out_uars:                                         ; preds = %out_mdev, %uar_done.out_uars_crit_edge
  %err.1 = phi i32 [ %call88, %uar_done.out_uars_crit_edge ], [ %err.0, %out_mdev ]
  call fastcc void @deallocate_uars(ptr noundef %1, ptr noundef %uctx)
  br label %out_sys_pages

out_sys_pages:                                    ; preds = %out_uars, %if.end82.out_sys_pages_crit_edge
  %err.2 = phi i32 [ %err.1, %out_uars ], [ %call83, %if.end82.out_sys_pages_crit_edge ]
  %99 = ptrtoint ptr %bfregi51 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %bfregi51, align 4
  call void @kfree(ptr noundef %100) #16
  br label %out_count

out_count:                                        ; preds = %out_sys_pages, %if.end7.i.i264.out_count_crit_edge, %kcalloc.exit266.thread
  %err.3 = phi i32 [ %err.2, %out_sys_pages ], [ -12, %if.end7.i.i264.out_count_crit_edge ], [ -12, %kcalloc.exit266.thread ]
  %count144 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 2
  %101 = ptrtoint ptr %count144 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %count144, align 4
  call void @kfree(ptr noundef %102) #16
  br label %out_devx

out_devx:                                         ; preds = %out_count, %if.end7.i.i.out_devx_crit_edge, %kcalloc.exit.thread, %if.end58.out_devx_crit_edge
  %err.4 = phi i32 [ %err.3, %out_count ], [ %call60, %if.end58.out_devx_crit_edge ], [ -12, %if.end7.i.i.out_devx_crit_edge ], [ -12, %kcalloc.exit.thread ]
  %103 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %flags, align 8
  %and146 = and i32 %104, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and146)
  %tobool147.not = icmp eq i32 %and146, 0
  br i1 %tobool147.not, label %out_devx.cleanup_crit_edge, label %if.then148

out_devx.cleanup_crit_edge:                       ; preds = %out_devx
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then148:                                       ; preds = %out_devx
  call void @__sanitizer_cov_trace_pc() #18
  %devx_uid149 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 7
  %105 = ptrtoint ptr %devx_uid149 to i32
  call void @__asan_load2_noabort(i32 %105)
  %106 = load i16, ptr %devx_uid149, align 8
  call void @mlx5_ib_devx_destroy(ptr noundef %1, i16 noundef zeroext %106) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then148, %out_devx.cleanup_crit_edge, %if.then132, %lor.rhs.i.cleanup_crit_edge, %if.then37.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %lor.lhs.false23.cleanup_crit_edge, %lor.lhs.false20.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end17.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %if.then11.i.i.i, %if.else.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -11, %entry.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ -95, %if.end14.cleanup_crit_edge ], [ -95, %lor.lhs.false23.cleanup_crit_edge ], [ -95, %lor.lhs.false20.cleanup_crit_edge ], [ -95, %lor.lhs.false.cleanup_crit_edge ], [ -95, %if.end17.cleanup_crit_edge ], [ -22, %if.end26.cleanup_crit_edge ], [ 0, %if.then132 ], [ %call38, %if.then37.cleanup_crit_edge ], [ %err.4, %if.then148 ], [ %err.4, %out_devx.cleanup_crit_edge ], [ -14, %if.then11.i.i.i ], [ 0, %lor.rhs.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %resp) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %req) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_dealloc_ucontext(ptr nocapture noundef readonly %ibcontext) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ibcontext to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ibcontext, align 4
  %bfregi2 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %ibcontext, i32 0, i32 3
  %tdn = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %ibcontext, i32 0, i32 5
  %2 = ptrtoint ptr %tdn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tdn, align 4
  %devx_uid = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %ibcontext, i32 0, i32 7
  %4 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %devx_uid, align 8
  tail call fastcc void @mlx5_ib_dealloc_transport_domain(ptr noundef %1, i32 noundef %3, i16 noundef zeroext %5)
  %num_sys_pages.i = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %ibcontext, i32 0, i32 3, i32 6
  %6 = ptrtoint ptr %num_sys_pages.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_sys_pages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp14.not.i = icmp eq i32 %7, 0
  br i1 %cmp14.not.i, label %entry.deallocate_uars.exit_crit_edge, label %for.body.lr.ph.i

entry.deallocate_uars.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %deallocate_uars.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %num_static_sys_pages.i = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %ibcontext, i32 0, i32 3, i32 7
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.015.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %8 = ptrtoint ptr %num_static_sys_pages.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_static_sys_pages.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.015.i, i32 %9)
  %cmp2.i = icmp ult i32 %i.015.i, %9
  br i1 %cmp2.i, label %for.body.i.if.then.i_crit_edge, label %lor.lhs.false.i

for.body.i.if.then.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %10 = ptrtoint ptr %bfregi2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bfregi2, align 4
  %arrayidx.i = getelementptr i32, ptr %11, i32 %i.015.i
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %13)
  %cmp3.not.i = icmp eq i32 %13, -2147483648
  br i1 %cmp3.not.i, label %lor.lhs.false.i.for.inc.i_crit_edge, label %lor.lhs.false.i.if.then.i_crit_edge

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %for.body.i.if.then.i_crit_edge
  %14 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mdev.i, align 8
  %16 = ptrtoint ptr %bfregi2 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bfregi2, align 4
  %arrayidx5.i = getelementptr i32, ptr %17, i32 %i.015.i
  %18 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx5.i, align 4
  %20 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %devx_uid, align 8
  %call.i = tail call i32 @mlx5_cmd_uar_dealloc(ptr noundef %15, i32 noundef %19, i16 noundef zeroext %21) #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %lor.lhs.false.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.015.i, 1
  %22 = ptrtoint ptr %num_sys_pages.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_sys_pages.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %23
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.deallocate_uars.exit_crit_edge

for.inc.i.deallocate_uars.exit_crit_edge:         ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %deallocate_uars.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

deallocate_uars.exit:                             ; preds = %for.inc.i.deallocate_uars.exit_crit_edge, %entry.deallocate_uars.exit_crit_edge
  %24 = ptrtoint ptr %bfregi2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bfregi2, align 4
  tail call void @kfree(ptr noundef %25) #16
  %count = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %ibcontext, i32 0, i32 3, i32 2
  %26 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %count, align 4
  tail call void @kfree(ptr noundef %27) #16
  %28 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %devx_uid, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool.not = icmp eq i16 %29, 0
  br i1 %tobool.not, label %deallocate_uars.exit.if.end_crit_edge, label %if.then

deallocate_uars.exit.if.end_crit_edge:            ; preds = %deallocate_uars.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %deallocate_uars.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mlx5_ib_devx_destroy(ptr noundef %1, i16 noundef zeroext %29) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %deallocate_uars.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_mmap(ptr noundef %ibcontext, ptr noundef %vma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ibcontext to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ibcontext, align 4
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %2 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vm_pgoff, align 4
  %shr.i = lshr i32 %3, 8
  %and.i = and i32 %shr.i, 255
  %trunc = trunc i32 %shr.i to i8
  %4 = zext i8 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.175)
  switch i8 %trunc, label %sw.default [
    i8 2, label %entry.sw.bb_crit_edge
    i8 6, label %entry.sw.bb_crit_edge48
    i8 3, label %entry.sw.bb3_crit_edge
    i8 0, label %entry.sw.bb3_crit_edge49
    i8 1, label %entry.cleanup_crit_edge
    i8 5, label %sw.bb6
    i8 7, label %sw.bb16
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

entry.sw.bb3_crit_edge49:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3

entry.sw.bb_crit_edge48:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge48
  %wc_support = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 5
  %5 = ptrtoint ptr %wc_support to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %wc_support, align 8
  %6 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %sw.bb.cleanup_crit_edge, label %sw.bb.sw.bb3_crit_edge

sw.bb.sw.bb3_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb3:                                           ; preds = %sw.bb.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge49
  %call4 = tail call fastcc i32 @uar_mmap(ptr noundef %1, i32 noundef %and.i, ptr noundef %vma, ptr noundef %ibcontext)
  br label %cleanup

sw.bb6:                                           ; preds = %entry
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %7 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vm_end, align 4
  %9 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vma, align 4
  %sub = sub i32 %8, %10
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub)
  %cmp.not = icmp eq i32 %sub, 4096
  br i1 %cmp.not, label %if.end8, label %sw.bb6.cleanup_crit_edge

sw.bb6.cleanup_crit_edge:                         ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %sw.bb6
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %11 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vm_flags, align 4
  %and = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool9.not = icmp eq i32 %and, 0
  br i1 %tobool9.not, label %if.end11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %and13 = and i32 %12, -33
  %13 = ptrtoint ptr %vm_flags to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %and13, ptr %vm_flags, align 4
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %14 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mdev, align 8
  %iseg_base = getelementptr inbounds %struct.mlx5_core_dev, ptr %15, i32 0, i32 11
  %16 = ptrtoint ptr %iseg_base to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %iseg_base, align 8
  %add = add i32 %17, 4096
  %shr = lshr i32 %add, 12
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %18 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vm_page_prot, align 4
  %and14 = and i32 %19, -61
  %call15 = tail call i32 @rdma_user_mmap_io(ptr noundef %ibcontext, ptr noundef %vma, i32 noundef %shr, i32 noundef 4096, i32 noundef %and14, ptr noundef null) #16
  br label %cleanup

sw.bb16:                                          ; preds = %entry
  %vm_end.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %20 = ptrtoint ptr %vm_end.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vm_end.i, align 4
  %22 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vma, align 4
  %sub.i = sub i32 %21, %23
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i)
  %cmp.not.i = icmp eq i32 %sub.i, 4096
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %sw.bb16.cleanup_crit_edge

sw.bb16.cleanup_crit_edge:                        ; preds = %sw.bb16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %sw.bb16
  %vm_flags.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %24 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vm_flags.i, align 4
  %and.i40 = and i32 %25, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40)
  %tobool.not.i = icmp eq i32 %and.i40, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %if.end.i

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %lor.lhs.false.i
  %and.i.i.i = and i32 %3, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp1.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp1.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %and5.i = and i32 %25, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end3.i.cleanup_crit_edge

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i:                                        ; preds = %if.end3.i
  %and10.i = and i32 %25, -33
  %26 = ptrtoint ptr %vm_flags.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %and10.i, ptr %vm_flags.i, align 4
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %27 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %mdev.i, align 8
  %clock_info.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %28, i32 0, i32 28
  %29 = ptrtoint ptr %clock_info.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %clock_info.i, align 8
  %tobool11.not.i = icmp eq ptr %30, null
  br i1 %tobool11.not.i, label %if.end8.i.cleanup_crit_edge, label %if.end13.i

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13.i:                                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %31 = load ptr, ptr @mem_map, align 4
  %32 = ptrtoint ptr %30 to i32
  %sub17.i = add i32 %32, 1073741824
  %shr.i41 = lshr i32 %sub17.i, 12
  %add.ptr.i = getelementptr %struct.page, ptr %31, i32 %shr.i41
  %call19.i = tail call i32 @vm_insert_page(ptr noundef %vma, i32 noundef %23, ptr noundef %add.ptr.i) #16
  br label %cleanup

sw.default:                                       ; preds = %entry
  %and.i.i.i.i = and i32 %3, 255
  %shl.i.i.i = and i32 %shr.i, 65280
  %or.i.i.i = or i32 %shl.i.i.i, %and.i.i.i.i
  %and.i.i.i42 = shl i32 %shr.i, 16
  %conv3.i.i = and i32 %and.i.i.i42, 16711680
  %or.i.i = or i32 %or.i.i.i, %conv3.i.i
  %call2.i = tail call ptr @rdma_user_mmap_entry_get_pgoff(ptr noundef %ibcontext, i32 noundef %or.i.i) #16
  %tobool.not.i43 = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i43, label %sw.default.cleanup_crit_edge, label %if.end.i45

sw.default.cleanup_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i45:                                       ; preds = %sw.default
  %address.i = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call2.i, i32 0, i32 2
  %33 = ptrtoint ptr %address.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %address.i, align 8
  %shr.i44 = lshr i64 %34, 12
  %conv.i = trunc i64 %shr.i44 to i32
  %mmap_flag.i = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call2.i, i32 0, i32 1
  %35 = ptrtoint ptr %mmap_flag.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %mmap_flag.i, align 4
  %37 = zext i8 %36 to i64
  call void @__sanitizer_cov_trace_switch(i64 %37, ptr @__sancov_gen_cov_switch_values.176)
  switch i8 %36, label %if.else.i [
    i8 2, label %if.end.i45.if.then10.i_crit_edge
    i8 4, label %if.end.i45.if.then10.i_crit_edge50
  ]

if.end.i45.if.then10.i_crit_edge50:               ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then10.i

if.end.i45.if.then10.i_crit_edge:                 ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then10.i

if.then10.i:                                      ; preds = %if.end.i45.if.then10.i_crit_edge, %if.end.i45.if.then10.i_crit_edge50
  %vm_page_prot.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %38 = ptrtoint ptr %vm_page_prot.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %vm_page_prot.i, align 4
  %and.i46 = and i32 %39, -61
  br label %if.end14.i

if.else.i:                                        ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #18
  %vm_page_prot11.i = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %40 = ptrtoint ptr %vm_page_prot11.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %vm_page_prot11.i, align 4
  %and12.i = and i32 %41, -61
  %or13.i = or i32 %and12.i, 4
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.else.i, %if.then10.i
  %prot.0.i = phi i32 [ %and.i46, %if.then10.i ], [ %or13.i, %if.else.i ]
  %npages.i = getelementptr inbounds %struct.rdma_user_mmap_entry, ptr %call2.i, i32 0, i32 3
  %42 = ptrtoint ptr %npages.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %npages.i, align 4
  %mul.i = shl i32 %43, 12
  %call15.i = tail call i32 @rdma_user_mmap_io(ptr noundef %ibcontext, ptr noundef %vma, i32 noundef %conv.i, i32 noundef %mul.i, i32 noundef %prot.0.i, ptr noundef nonnull %call2.i) #16
  tail call void @rdma_user_mmap_entry_put(ptr noundef nonnull %call2.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end14.i, %sw.default.cleanup_crit_edge, %if.end13.i, %if.end8.i.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %sw.bb16.cleanup_crit_edge, %if.end11, %if.end8.cleanup_crit_edge, %sw.bb6.cleanup_crit_edge, %sw.bb3, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.end11 ], [ %call4, %sw.bb3 ], [ -1, %sw.bb.cleanup_crit_edge ], [ -38, %entry.cleanup_crit_edge ], [ -22, %sw.bb6.cleanup_crit_edge ], [ -1, %if.end8.cleanup_crit_edge ], [ %call19.i, %if.end13.i ], [ -22, %lor.lhs.false.i.cleanup_crit_edge ], [ -22, %sw.bb16.cleanup_crit_edge ], [ -95, %if.end.i.cleanup_crit_edge ], [ -1, %if.end3.i.cleanup_crit_edge ], [ -95, %if.end8.i.cleanup_crit_edge ], [ %call15.i, %if.end14.i ], [ -22, %sw.default.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_mmap_free(ptr noundef %entry1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ucontext = getelementptr inbounds %struct.rdma_user_mmap_entry, ptr %entry1, i32 0, i32 1
  %0 = ptrtoint ptr %ucontext to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ucontext, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %mmap_flag = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %entry1, i32 0, i32 1
  %4 = ptrtoint ptr %mmap_flag to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %mmap_flag, align 4
  %6 = zext i8 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.177)
  switch i8 %5, label %do.end [
    i8 1, label %entry.sw.bb_crit_edge
    i8 5, label %entry.sw.bb_crit_edge37
    i8 2, label %sw.bb6
    i8 3, label %entry.sw.bb8_crit_edge
    i8 4, label %entry.sw.bb8_crit_edge38
  ]

entry.sw.bb8_crit_edge38:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb8

entry.sw.bb8_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb8

entry.sw.bb_crit_edge37:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge37
  tail call void @mlx5_ib_dm_mmap_free(ptr noundef %3, ptr noundef %entry1) #16
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %var_table3 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %3, i32 0, i32 38
  tail call void @mutex_lock_nested(ptr noundef %var_table3, i32 noundef 0) #16
  %page_idx = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %entry1, i32 0, i32 3
  %7 = ptrtoint ptr %page_idx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %page_idx, align 8
  %bitmap = getelementptr inbounds %struct.mlx5_ib_dev, ptr %3, i32 0, i32 38, i32 1
  %9 = ptrtoint ptr %bitmap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bitmap, align 4
  tail call void @_clear_bit(i32 noundef %8, ptr noundef %10) #16
  tail call void @mutex_unlock(ptr noundef %var_table3) #16
  tail call void @kfree(ptr noundef %entry1) #16
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry.sw.bb8_crit_edge, %entry.sw.bb8_crit_edge38
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %3, i32 0, i32 1
  %11 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mdev, align 8
  %page_idx9 = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %entry1, i32 0, i32 3
  %13 = ptrtoint ptr %page_idx9 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %page_idx9, align 8
  %devx_uid = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %1, i32 0, i32 7
  %15 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %devx_uid, align 8
  %call10 = tail call i32 @mlx5_cmd_uar_dealloc(ptr noundef %12, i32 noundef %14, i16 noundef zeroext %16) #16
  tail call void @kfree(ptr noundef %entry1) #16
  br label %sw.epilog

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2146, i32 noundef 9, ptr noundef null) #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end, %sw.bb8, %sw.bb6, %sw.bb
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mlx5_ib_disassociate_ucontext(ptr nocapture noundef %ibcontext) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_alloc_pd(ptr nocapture noundef %ibpd, ptr noundef readonly %udata) #0 align 64 {
entry:
  %resp = alloca %struct.mlx5_ib_alloc_pd_resp, align 4
  %out = alloca [4 x i32], align 4
  %in = alloca [4 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.ib_pd, ptr %ibpd, i32 0, i32 2
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %resp) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %out) #16
  %2 = call ptr @memset(ptr %out, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %in) #16
  %3 = getelementptr inbounds i8, ptr %in, i32 4
  %4 = call ptr @memset(ptr %3, i32 0, i32 12)
  %tobool.not = icmp eq ptr %udata, null
  br i1 %tobool.not, label %entry.cond.end6_crit_edge, label %cond.end

entry.cond.end6_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end6

cond.end:                                         ; preds = %entry
  %context2 = getelementptr inbounds %struct.uverbs_attr_bundle, ptr %udata, i32 0, i32 3
  %5 = ptrtoint ptr %context2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %context2, align 4
  %tobool3.not = icmp eq ptr %6, null
  br i1 %tobool3.not, label %cond.end.cond.end6_crit_edge, label %cond.true4

cond.end.cond.end6_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end6

cond.true4:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %devx_uid = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %devx_uid, align 8
  br label %cond.end6

cond.end6:                                        ; preds = %cond.true4, %cond.end.cond.end6_crit_edge, %entry.cond.end6_crit_edge
  %cond7 = phi i16 [ %8, %cond.true4 ], [ 0, %cond.end.cond.end6_crit_edge ], [ 0, %entry.cond.end6_crit_edge ]
  %conv18 = zext i16 %cond7 to i32
  %or27 = or i32 %conv18, 134217728
  %9 = ptrtoint ptr %in to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or27, ptr %in, align 4
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %10 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mdev, align 8
  %call36 = call i32 @mlx5_cmd_exec(ptr noundef %11, ptr noundef nonnull %in, i32 noundef 16, ptr noundef nonnull %out, i32 noundef 16) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.end, label %cond.end6.cleanup_crit_edge

cond.end6.cleanup_crit_edge:                      ; preds = %cond.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %cond.end6
  %add.ptr39 = getelementptr inbounds i32, ptr %out, i32 2
  %12 = ptrtoint ptr %add.ptr39 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %add.ptr39, align 4
  %and40 = and i32 %13, 16777215
  %pdn = getelementptr inbounds %struct.mlx5_ib_pd, ptr %ibpd, i32 0, i32 1
  %14 = ptrtoint ptr %pdn to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %and40, ptr %pdn, align 4
  %uid41 = getelementptr inbounds %struct.mlx5_ib_pd, ptr %ibpd, i32 0, i32 2
  %15 = ptrtoint ptr %uid41 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %cond7, ptr %uid41, align 4
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.then43

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then43:                                        ; preds = %if.end
  %16 = ptrtoint ptr %resp to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %and40, ptr %resp, align 4
  %outbuf.i = getelementptr inbounds %struct.ib_udata, ptr %udata, i32 0, i32 1
  %17 = ptrtoint ptr %outbuf.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %outbuf.i, align 4
  call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #16
  %call.i.i.i = call zeroext i1 @should_fail_usercopy() #16
  br i1 %call.i.i.i, label %if.then43.if.then48_crit_edge, label %if.end.i.i.i

if.then43.if.then48_crit_edge:                    ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then48

if.end.i.i.i:                                     ; preds = %if.then43
  %19 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %18, i32 4, i32 -1226833920) #21, !srcloc !424
  %asmresult.i.i.i = extractvalue { i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %copy_to_user.exit.i, label %if.end.i.i.i.if.then48_crit_edge

if.end.i.i.i.if.then48_crit_edge:                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then48

copy_to_user.exit.i:                              ; preds = %if.end.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %resp, i32 noundef 4) #16
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef %18, ptr noundef nonnull %resp, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i.i)
  %tobool.not.i = icmp eq i32 %call.i12.i.i.i, 0
  br i1 %tobool.not.i, label %copy_to_user.exit.i.cleanup_crit_edge, label %copy_to_user.exit.i.if.then48_crit_edge

copy_to_user.exit.i.if.then48_crit_edge:          ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then48

copy_to_user.exit.i.cleanup_crit_edge:            ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then48:                                        ; preds = %copy_to_user.exit.i.if.then48_crit_edge, %if.end.i.i.i.if.then48_crit_edge, %if.then43.if.then48_crit_edge
  %20 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mdev, align 8
  %22 = ptrtoint ptr %pdn to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pdn, align 4
  %call52 = call i32 @mlx5_cmd_dealloc_pd(ptr noundef %21, i32 noundef %23, i16 noundef zeroext %cond7) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then48, %copy_to_user.exit.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %cond.end6.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %if.then48 ], [ %call36, %cond.end6.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %copy_to_user.exit.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %in) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %out) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %resp) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_dealloc_pd(ptr nocapture noundef readonly %pd, ptr nocapture noundef readnone %udata) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %device = getelementptr inbounds %struct.ib_pd, ptr %pd, i32 0, i32 2
  %0 = ptrtoint ptr %device to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %device, align 4
  %mdev2 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mdev2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev2, align 8
  %pdn = getelementptr inbounds %struct.mlx5_ib_pd, ptr %pd, i32 0, i32 1
  %4 = ptrtoint ptr %pdn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pdn, align 4
  %uid = getelementptr inbounds %struct.mlx5_ib_pd, ptr %pd, i32 0, i32 2
  %6 = ptrtoint ptr %uid to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %uid, align 4
  %call3 = tail call i32 @mlx5_cmd_dealloc_pd(ptr noundef %3, i32 noundef %5, i16 noundef zeroext %7) #16
  ret i32 %call3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_create_ah(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_query_ah(ptr noundef, ptr noundef) #2

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mlx5_ib_destroy_ah(ptr nocapture noundef readnone %ah, i32 noundef %flags) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_create_srq(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_modify_srq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_query_srq(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_destroy_srq(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_create_qp(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_modify_qp(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_query_qp(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_destroy_qp(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_create_cq(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_modify_cq(ptr noundef, i16 noundef zeroext, i16 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_destroy_cq(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_resize_cq(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_get_dma_mr(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_reg_user_mr(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_reg_user_mr_dmabuf(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_rereg_user_mr(ptr noundef, i32 noundef, i64 noundef, i64 noundef, i64 noundef, i32 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_dereg_mr(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_alloc_mr(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_alloc_mr_integrity(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_map_mr_sg(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_check_mr_status(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_mcg_attach(ptr nocapture noundef readonly %ibqp, ptr noundef %gid, i16 noundef zeroext %lid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ibqp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ibqp, align 4
  %pd = getelementptr inbounds %struct.ib_qp, ptr %ibqp, i32 0, i32 1
  %2 = ptrtoint ptr %pd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pd, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %uid4 = getelementptr inbounds %struct.mlx5_ib_pd, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %uid4 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %uid4, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i16 [ %5, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %flags = getelementptr inbounds %struct.mlx5_ib_qp, ptr %ibqp, i32 0, i32 9
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 8
  %and = and i32 %7, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %if.end13, label %do.body

do.body:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_mcg_attach.__UNIQUE_ID_ddebug583, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_mcg_attach, %if.then11)) #16
          to label %cleanup [label %if.then11], !srcloc !404

if.then11:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %8 = getelementptr inbounds %struct.ib_device, ptr %1, i32 0, i32 13
  %9 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 68
  %13 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_mcg_attach.__UNIQUE_ID_ddebug583, ptr noundef %8, ptr noundef nonnull @.str.98, ptr noundef nonnull @.str.97, i32 noundef 2410, i32 noundef %14) #16
  br label %cleanup

if.end13:                                         ; preds = %cond.end
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %15 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mdev, align 8
  %qp_num = getelementptr inbounds %struct.ib_qp, ptr %ibqp, i32 0, i32 19
  %17 = ptrtoint ptr %qp_num to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %qp_num, align 4
  %call14 = tail call i32 @mlx5_cmd_attach_mcg(ptr noundef %16, ptr noundef %gid, i32 noundef %18, i16 noundef zeroext %cond) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end13.cleanup_crit_edge, label %do.end19

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end19:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  %19 = getelementptr inbounds %struct.ib_device, ptr %1, i32 0, i32 13
  %20 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i38 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i38 to ptr
  %task22 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task22 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task22, align 8
  %pid23 = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 68
  %24 = ptrtoint ptr %pid23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %pid23, align 8
  %26 = ptrtoint ptr %qp_num to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %qp_num, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %19, ptr noundef nonnull @.str.99, ptr noundef nonnull @.str.97, i32 noundef 2417, i32 noundef %25, i32 noundef %27, ptr noundef %gid) #20
  br label %cleanup

cleanup:                                          ; preds = %do.end19, %if.end13.cleanup_crit_edge, %if.then11, %do.body
  %retval.0 = phi i32 [ -95, %if.then11 ], [ %call14, %do.end19 ], [ 0, %if.end13.cleanup_crit_edge ], [ -95, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_mcg_detach(ptr nocapture noundef readonly %ibqp, ptr noundef %gid, i16 noundef zeroext %lid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ibqp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ibqp, align 4
  %pd = getelementptr inbounds %struct.ib_qp, ptr %ibqp, i32 0, i32 1
  %2 = ptrtoint ptr %pd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pd, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %uid3 = getelementptr inbounds %struct.mlx5_ib_pd, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %uid3 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %uid3, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i16 [ %5, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mdev, align 8
  %qp_num = getelementptr inbounds %struct.ib_qp, ptr %ibqp, i32 0, i32 19
  %8 = ptrtoint ptr %qp_num to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %qp_num, align 4
  %call5 = tail call i32 @mlx5_cmd_detach_mcg(ptr noundef %7, ptr noundef %gid, i32 noundef %9, i16 noundef zeroext %cond) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %cond.end.if.end_crit_edge, label %do.end

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %10 = getelementptr inbounds %struct.ib_device, ptr %1, i32 0, i32 13
  %11 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 68
  %15 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pid, align 8
  %17 = ptrtoint ptr %qp_num to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %qp_num, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %10, ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.101, i32 noundef 2433, i32 noundef %16, i32 noundef %18, ptr noundef %gid) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %cond.end.if.end_crit_edge
  ret i32 %call5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_map_mr_sg_pi(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_enable_driver(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call1 = tail call i32 @mlx5_ib_test_wc(ptr noundef %dev) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5_ib_enable_driver.__UNIQUE_ID_ddebug594, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5_ib_enable_driver, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !404

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %1 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 68
  %5 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pid, align 8
  %wc_support = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 5
  %7 = ptrtoint ptr %wc_support to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load = load i8, ptr %wc_support, align 8
  %8 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool6.not = icmp eq i8 %8, 0
  %cond = select i1 %tobool6.not, ptr @.str.105, ptr @.str.104
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5_ib_enable_driver.__UNIQUE_ID_ddebug594, ptr noundef %0, ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.102, i32 noundef 3709, i32 noundef %6, ptr noundef nonnull %cond) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_query_ucontext(ptr nocapture noundef readonly %ibcontext, ptr noundef %attrs) #0 align 64 {
entry:
  %uctx_resp = alloca %struct.mlx5_ib_alloc_ucontext_resp, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %uctx_resp) #16
  %0 = call ptr @memset(ptr %uctx_resp, i32 0, i32 72)
  %call = call fastcc i32 @set_ucontext_resp(ptr noundef %ibcontext, ptr noundef nonnull %uctx_resp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %attr_present.i.i.i = getelementptr inbounds %struct.uverbs_attr_bundle, ptr %attrs, i32 0, i32 5
  %1 = ptrtoint ptr %attr_present.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %attr_present.i.i.i, align 4
  %3 = and i32 %2, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  %arrayidx.i.i = getelementptr %struct.uverbs_attr_bundle, ptr %attrs, i32 1, i32 1
  %retval.0.i.i = select i1 %tobool.i.not.i.i, ptr inttoptr (i32 -2 to ptr), ptr %arrayidx.i.i
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %retval.0.i.i to i32
  br label %uverbs_attr_get_len.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %len.i = getelementptr inbounds %struct.uverbs_ptr_attr, ptr %retval.0.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %len.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %len.i, align 8
  %conv.i = zext i16 %6 to i32
  br label %uverbs_attr_get_len.exit

uverbs_attr_get_len.exit:                         ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %4, %if.then.i ], [ %conv.i, %if.end.i ]
  %7 = call i32 @llvm.umin.i32(i32 %retval.0.i, i32 72)
  %response_length = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %uctx_resp, i32 0, i32 12
  %8 = ptrtoint ptr %response_length to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %response_length, align 8
  %call2 = call i32 @uverbs_copy_to_struct_or_zero(ptr noundef %attrs, i32 noundef 4096, ptr noundef nonnull %uctx_resp, i32 noundef 72) #16
  br label %cleanup

cleanup:                                          ; preds = %uverbs_attr_get_len.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %uverbs_attr_get_len.exit ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %uctx_resp) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hw_rev_show(ptr nocapture noundef readonly %device, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %owner.i = getelementptr inbounds %struct.ib_core_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %owner.i, align 8
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %rev_id = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %rev_id to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %rev_id, align 4
  %conv = zext i8 %5 to i32
  %call1 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.48, i32 noundef %conv) #16
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_emit(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hca_type_show(ptr nocapture noundef readonly %device, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %owner.i = getelementptr inbounds %struct.ib_core_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %owner.i, align 8
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %pdev = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 8
  %device1 = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %device1 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %device1, align 2
  %conv = zext i16 %7 to i32
  %call2 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.50, i32 noundef %conv) #16
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @board_id_show(ptr nocapture noundef readonly %device, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %owner.i = getelementptr inbounds %struct.ib_core_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %owner.i, align 8
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %board_id = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 6
  %call1 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.52, i32 noundef 64, ptr noundef %board_id) #16
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @fw_pages_show(ptr nocapture noundef readonly %device, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %owner.i = getelementptr inbounds %struct.ib_core_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %owner.i, align 8
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %fw_pages = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 17, i32 5
  %4 = ptrtoint ptr %fw_pages to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fw_pages, align 8
  %call1 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.54, i32 noundef %5) #16
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @reg_pages_show(ptr nocapture noundef readonly %device, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %owner.i = getelementptr inbounds %struct.ib_core_device, ptr %device, i32 0, i32 4
  %0 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %owner.i, align 8
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %reg_pages = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 17, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %reg_pages, i32 noundef 4) #16
  %4 = ptrtoint ptr %reg_pages to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %reg_pages, align 4
  %call2 = tail call i32 (ptr, ptr, ...) @sysfs_emit(ptr noundef %buf, ptr noundef nonnull @.str.54, i32 noundef %5) #16
  ret i32 %call2
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_post_send(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_post_recv(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_accel_ipsec_device_caps(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_get_flow_namespace(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ib_copy_to_udata(ptr nocapture noundef readonly %udata, ptr noundef %src, i32 noundef %len) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %outbuf = getelementptr inbounds %struct.ib_udata, ptr %udata, i32 0, i32 1
  %0 = ptrtoint ptr %outbuf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %outbuf, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp9.i.i = icmp slt i32 %len, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %entry
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.copy_to_user.exit.thread_crit_edge, label %if.then27.i.i, !prof !411

land.rhs16.i.i.copy_to_user.exit.thread_crit_edge: ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %copy_to_user.exit.thread

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.56, i32 noundef 230, i32 noundef 9, ptr noundef null) #16
  br label %copy_to_user.exit.thread

if.then.i.i.i:                                    ; preds = %entry
  tail call void @__check_object_size(ptr noundef %src, i32 noundef %len, i1 noundef zeroext true) #16
  tail call void @__might_fault(ptr noundef nonnull @.str.58, i32 noundef 174) #16
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #16
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %2 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1, i32 %len, i32 -1226833920) #21, !srcloc !424
  %asmresult.i.i = extractvalue { i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %src, i32 noundef %len) #16
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %1, ptr noundef %src, i32 noundef %len) #16
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %len, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %len, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.then27.i.i, %land.rhs16.i.i.copy_to_user.exit.thread_crit_edge
  %3 = phi i32 [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  ret i32 %3
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memdup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memchr_inv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_system_image_guid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_hca_vport_system_image_guid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_vendor_id(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_core_query_vendor_id(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_core_access_reg(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i16 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ib_query_port(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_set_port_caps(ptr noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_core_modify_hca_vport_context(ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_gids(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_hca_vport_gid(ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rdma_read_gid_l2_fields(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_core_roce_gid_set(ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, ptr noundef, ptr noundef, i1 noundef zeroext, i16 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_pkey(ptr noundef, i32 noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_hca_vport_pkey(ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i16 noundef zeroext, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_devx_create(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @calc_total_bfregs(ptr noundef %dev, i1 noundef zeroext %lib_uar_4k, ptr nocapture noundef %req, ptr nocapture noundef %bfregi) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %req, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %do.end4

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end4:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %1)
  %cmp6 = icmp ugt i32 %1, 512
  br i1 %cmp6, label %do.end4.cleanup_crit_edge, label %if.end8

do.end4.cleanup_crit_edge:                        ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %do.end4
  %add = add nuw nsw i32 %1, 1
  %and = and i32 %add, -2
  %2 = ptrtoint ptr %req to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %and, ptr %req, align 8
  %num_low_latency_bfregs = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_req_v2, ptr %req, i32 0, i32 1
  %3 = ptrtoint ptr %num_low_latency_bfregs to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_low_latency_bfregs, align 4
  %sub13 = add nsw i32 %and, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %sub13)
  %cmp14 = icmp ugt i32 %4, %sub13
  br i1 %cmp14, label %if.end8.cleanup_crit_edge, label %if.end16

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %div80 = lshr i32 %add, 1
  %num_static_sys_pages = getelementptr inbounds %struct.mlx5_bfreg_info, ptr %bfregi, i32 0, i32 7
  %5 = ptrtoint ptr %num_static_sys_pages to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %div80, ptr %num_static_sys_pages, align 4
  %num_dyn_bfregs = getelementptr inbounds %struct.mlx5_bfreg_info, ptr %bfregi, i32 0, i32 9
  %6 = ptrtoint ptr %num_dyn_bfregs to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1024, ptr %num_dyn_bfregs, align 4
  %7 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %req, align 8
  %add30 = add i32 %8, 1024
  %total_num_bfregs31 = getelementptr inbounds %struct.mlx5_bfreg_info, ptr %bfregi, i32 0, i32 8
  %9 = ptrtoint ptr %total_num_bfregs31 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %add30, ptr %total_num_bfregs31, align 4
  %div3381 = lshr i32 %add30, 1
  %num_sys_pages = getelementptr inbounds %struct.mlx5_bfreg_info, ptr %bfregi, i32 0, i32 6
  %10 = ptrtoint ptr %num_sys_pages to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %div3381, ptr %num_sys_pages, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @calc_total_bfregs.__UNIQUE_ID_ddebug570, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@calc_total_bfregs, %if.then40)) #16
          to label %cleanup [label %if.then40], !srcloc !404

if.then40:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  %11 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %12 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 68
  %16 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pid, align 8
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %18 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %19, i32 0, i32 8
  %20 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %21, i32 18
  %22 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %add.ptr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %23)
  %tobool43.not = icmp sgt i32 %23, -1
  %cond = select i1 %tobool43.not, ptr @.str.70, ptr @.str.69
  %cond46 = select i1 %lib_uar_4k, ptr @.str.69, ptr @.str.70
  %24 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %req, align 8
  %26 = ptrtoint ptr %total_num_bfregs31 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %total_num_bfregs31, align 4
  %28 = ptrtoint ptr %num_sys_pages to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_sys_pages, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @calc_total_bfregs.__UNIQUE_ID_ddebug570, ptr noundef %11, ptr noundef nonnull @.str.68, ptr noundef nonnull @.str.67, i32 noundef 1633, i32 noundef %17, ptr noundef nonnull %cond, ptr noundef nonnull %cond46, i32 noundef %1, i32 noundef %25, i32 noundef %27, i32 noundef %29) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then40, %if.end16, %if.end8.cleanup_crit_edge, %do.end4.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -12, %do.end4.cleanup_crit_edge ], [ -22, %if.end8.cleanup_crit_edge ], [ 0, %if.then40 ], [ 0, %if.end16 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @allocate_uars(ptr noundef %dev, ptr nocapture noundef readonly %context) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bfregi1 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3
  %num_static_sys_pages = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 7
  %0 = ptrtoint ptr %num_static_sys_pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_static_sys_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp71.not = icmp eq i32 %1, 0
  br i1 %cmp71.not, label %entry.for.cond12.preheader_crit_edge, label %for.body.lr.ph

entry.for.cond12.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond12.preheader

for.body.lr.ph:                                   ; preds = %entry
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %devx_uid = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 7
  %2 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  br label %for.body

for.cond12.preheader:                             ; preds = %for.inc.for.cond12.preheader_crit_edge, %entry.for.cond12.preheader_crit_edge
  %.lcssa = phi i32 [ 0, %entry.for.cond12.preheader_crit_edge ], [ %22, %for.inc.for.cond12.preheader_crit_edge ]
  %num_sys_pages = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 6
  %3 = ptrtoint ptr %num_sys_pages to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_sys_pages, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.lcssa, i32 %4)
  %cmp1374 = icmp ult i32 %.lcssa, %4
  br i1 %cmp1374, label %for.cond12.preheader.for.body14_crit_edge, label %for.cond12.preheader.cleanup_crit_edge

for.cond12.preheader.cleanup_crit_edge:           ; preds = %for.cond12.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond12.preheader.for.body14_crit_edge:        ; preds = %for.cond12.preheader
  br label %for.body14

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.072 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %5 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mdev, align 8
  %7 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bfregi1, align 4
  %arrayidx = getelementptr i32, ptr %8, i32 %i.072
  %9 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %devx_uid, align 8
  %call = tail call i32 @mlx5_cmd_uar_alloc(ptr noundef %6, ptr noundef %arrayidx, i16 noundef zeroext %10) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %do.body, label %for.cond20.preheader

for.cond20.preheader:                             ; preds = %for.body
  %i.276 = add i32 %i.072, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %i.276)
  %cmp2177 = icmp sgt i32 %i.276, -1
  br i1 %cmp2177, label %for.cond20.preheader.for.body22_crit_edge, label %for.cond20.preheader.cleanup_crit_edge

for.cond20.preheader.cleanup_crit_edge:           ; preds = %for.cond20.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond20.preheader.for.body22_crit_edge:        ; preds = %for.cond20.preheader
  br label %for.body22

do.body:                                          ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @allocate_uars.__UNIQUE_ID_ddebug571, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@allocate_uars, %if.then6)) #16
          to label %for.inc [label %if.then6], !srcloc !404

if.then6:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %11 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 68
  %15 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pid, align 8
  %17 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bfregi1, align 4
  %arrayidx9 = getelementptr i32, ptr %18, i32 %i.072
  %19 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx9, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @allocate_uars.__UNIQUE_ID_ddebug571, ptr noundef %2, ptr noundef nonnull @.str.72, ptr noundef nonnull @.str.71, i32 noundef 1651, i32 noundef %16, i32 noundef %20) #16
  br label %for.inc

for.inc:                                          ; preds = %if.then6, %do.body
  %inc = add nuw i32 %i.072, 1
  %21 = ptrtoint ptr %num_static_sys_pages to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_static_sys_pages, align 4
  %cmp = icmp ult i32 %inc, %22
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.cond12.preheader_crit_edge

for.inc.for.cond12.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond12.preheader

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body14:                                       ; preds = %for.body14.for.body14_crit_edge, %for.cond12.preheader.for.body14_crit_edge
  %i.175 = phi i32 [ %inc18, %for.body14.for.body14_crit_edge ], [ %.lcssa, %for.cond12.preheader.for.body14_crit_edge ]
  %23 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %bfregi1, align 4
  %arrayidx16 = getelementptr i32, ptr %24, i32 %i.175
  %25 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 -2147483648, ptr %arrayidx16, align 4
  %inc18 = add nuw i32 %i.175, 1
  %26 = ptrtoint ptr %num_sys_pages to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %num_sys_pages, align 4
  %cmp13 = icmp ult i32 %inc18, %27
  br i1 %cmp13, label %for.body14.for.body14_crit_edge, label %for.body14.cleanup_crit_edge

for.body14.cleanup_crit_edge:                     ; preds = %for.body14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body14.for.body14_crit_edge:                  ; preds = %for.body14
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body14

for.body22:                                       ; preds = %for.inc38.for.body22_crit_edge, %for.cond20.preheader.for.body22_crit_edge
  %i.278 = phi i32 [ %i.2, %for.inc38.for.body22_crit_edge ], [ %i.276, %for.cond20.preheader.for.body22_crit_edge ]
  %28 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mdev, align 8
  %30 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bfregi1, align 4
  %arrayidx25 = getelementptr i32, ptr %31, i32 %i.278
  %32 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx25, align 4
  %34 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %devx_uid, align 8
  %call27 = tail call i32 @mlx5_cmd_uar_dealloc(ptr noundef %29, i32 noundef %33, i16 noundef zeroext %35) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %for.body22.for.inc38_crit_edge, label %do.end32

for.body22.for.inc38_crit_edge:                   ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc38

do.end32:                                         ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #18
  %36 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i66 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i66 to ptr
  %task35 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %task35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task35, align 8
  %pid36 = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 68
  %40 = ptrtoint ptr %pid36 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pid36, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %2, ptr noundef nonnull @.str.73, ptr noundef nonnull @.str.71, i32 noundef 1663, i32 noundef %41, i32 noundef %i.278) #20
  br label %for.inc38

for.inc38:                                        ; preds = %do.end32, %for.body22.for.inc38_crit_edge
  %i.2 = add i32 %i.278, -1
  %cmp21 = icmp sgt i32 %i.2, -1
  br i1 %cmp21, label %for.inc38.for.body22_crit_edge, label %for.inc38.cleanup_crit_edge

for.inc38.cleanup_crit_edge:                      ; preds = %for.inc38
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.inc38.for.body22_crit_edge:                   ; preds = %for.inc38
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body22

cleanup:                                          ; preds = %for.inc38.cleanup_crit_edge, %for.body14.cleanup_crit_edge, %for.cond20.preheader.cleanup_crit_edge, %for.cond12.preheader.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %for.cond20.preheader.cleanup_crit_edge ], [ 0, %for.cond12.preheader.cleanup_crit_edge ], [ 0, %for.body14.cleanup_crit_edge ], [ %call, %for.inc38.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mlx5_ib_alloc_transport_domain(ptr noundef %dev, ptr noundef %tdn, i16 noundef zeroext %uid) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %3, i32 25
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr, align 4
  %6 = and i32 %5, 520093696
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call i32 @mlx5_cmd_alloc_transport_domain(ptr noundef %1, ptr noundef %tdn, i16 noundef zeroext %uid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %7 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mdev, align 8
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %caps6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %caps6, align 8
  %add.ptr11 = getelementptr i32, ptr %10, i32 13
  %11 = ptrtoint ptr %add.ptr11 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr11, align 4
  %13 = and i32 %12, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %13)
  %cmp.not = icmp eq i32 %13, 256
  br i1 %cmp.not, label %lor.lhs.false, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end4
  %add.ptr20 = getelementptr i32, ptr %10, i32 31
  %14 = ptrtoint ptr %add.ptr20 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %add.ptr20, align 4
  %16 = and i32 %15, 1610612736
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %lor.lhs.false.cleanup_crit_edge, label %if.end35

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end35:                                         ; preds = %lor.lhs.false
  %lb.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28
  tail call void @mutex_lock_nested(ptr noundef %lb.i, i32 noundef 0) #16
  %user_td.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 1
  %18 = ptrtoint ptr %user_td.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %user_td.i, align 4
  %inc.i = add i32 %19, 1
  store i32 %inc.i, ptr %user_td.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %inc.i)
  %cmp.i = icmp eq i32 %inc.i, 2
  br i1 %cmp.i, label %if.end35.if.then13.i_crit_edge, label %lor.lhs.false.i

if.end35.if.then13.i_crit_edge:                   ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then13.i

lor.lhs.false.i:                                  ; preds = %if.end35
  %qps11.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 2
  %20 = ptrtoint ptr %qps11.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %qps11.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %21)
  %cmp12.i = icmp eq i32 %21, 1
  br i1 %cmp12.i, label %lor.lhs.false.i.if.then13.i_crit_edge, label %lor.lhs.false.i.mlx5_ib_enable_lb.exit_crit_edge

lor.lhs.false.i.mlx5_ib_enable_lb.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_enable_lb.exit

lor.lhs.false.i.if.then13.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then13.i

if.then13.i:                                      ; preds = %lor.lhs.false.i.if.then13.i_crit_edge, %if.end35.if.then13.i_crit_edge
  %enabled.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 3
  %22 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %enabled.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool15.not.i = icmp eq i8 %23, 0
  br i1 %tobool15.not.i, label %if.then16.i, label %if.then13.i.mlx5_ib_enable_lb.exit_crit_edge

if.then13.i.mlx5_ib_enable_lb.exit_crit_edge:     ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_enable_lb.exit

if.then16.i:                                      ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mdev, align 8
  %call.i = tail call i32 @mlx5_nic_vport_update_local_lb(ptr noundef %25, i1 noundef zeroext true) #16
  %26 = ptrtoint ptr %enabled.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 1, ptr %enabled.i, align 4
  br label %mlx5_ib_enable_lb.exit

mlx5_ib_enable_lb.exit:                           ; preds = %if.then16.i, %if.then13.i.mlx5_ib_enable_lb.exit_crit_edge, %lor.lhs.false.i.mlx5_ib_enable_lb.exit_crit_edge
  %err.0.i = phi i32 [ 0, %if.then13.i.mlx5_ib_enable_lb.exit_crit_edge ], [ %call.i, %if.then16.i ], [ 0, %lor.lhs.false.i.mlx5_ib_enable_lb.exit_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lb.i) #16
  br label %cleanup

cleanup:                                          ; preds = %mlx5_ib_enable_lb.exit, %lor.lhs.false.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0.i, %mlx5_ib_enable_lb.exit ], [ 0, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @set_ucontext_resp(ptr nocapture noundef readonly %uctx, ptr noundef %resp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %uctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %uctx, align 4
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %5, i32 7
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr, align 4
  %8 = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then:                                          ; preds = %entry
  %dump_fill_mkey = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 21
  %call4 = tail call i32 @mlx5_cmd_dump_fill_mkey(ptr noundef %3, ptr noundef %dump_fill_mkey) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %comp_mask = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 11
  %9 = ptrtoint ptr %comp_mask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %comp_mask, align 4
  %or = or i32 %10, 2
  store i32 %or, ptr %comp_mask, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry.if.end7_crit_edge
  %11 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mdev, align 8
  %caps9 = getelementptr inbounds %struct.mlx5_core_dev, ptr %12, i32 0, i32 8
  %13 = ptrtoint ptr %caps9 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %caps9, align 8
  %add.ptr14 = getelementptr i32, ptr %14, i32 4
  %15 = ptrtoint ptr %add.ptr14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %add.ptr14, align 4
  %and16 = and i32 %16, 31
  %shl = shl nuw i32 1, %and16
  %17 = ptrtoint ptr %resp to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %shl, ptr %resp, align 8
  %wc_support = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 5
  %18 = ptrtoint ptr %wc_support to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load = load i8, ptr %wc_support, align 8
  %19 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool17.not = icmp eq i8 %19, 0
  br i1 %tobool17.not, label %if.end7.if.end29_crit_edge, label %if.then18

if.end7.if.end29_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then18:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mdev, align 8
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, ptr %21, i32 0, i32 8
  %22 = ptrtoint ptr %caps20 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %caps20, align 8
  %add.ptr25 = getelementptr i32, ptr %23, i32 19
  %24 = ptrtoint ptr %add.ptr25 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %add.ptr25, align 4
  %shr26 = lshr i32 %25, 16
  %and27 = and i32 %shr26, 31
  %shl28 = shl nuw i32 1, %and27
  %bf_reg_size = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 1
  %26 = ptrtoint ptr %bf_reg_size to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %shl28, ptr %bf_reg_size, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then18, %if.end7.if.end29_crit_edge
  %cache_line_size = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 3
  %27 = ptrtoint ptr %cache_line_size to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 128, ptr %cache_line_size, align 4
  %28 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mdev, align 8
  %caps31 = getelementptr inbounds %struct.mlx5_core_dev, ptr %29, i32 0, i32 8
  %30 = ptrtoint ptr %caps31 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %caps31, align 8
  %add.ptr36 = getelementptr i32, ptr %31, i32 20
  %32 = ptrtoint ptr %add.ptr36 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %add.ptr36, align 4
  %conv = trunc i32 %33 to i16
  %max_sq_desc_sz = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 4
  %34 = ptrtoint ptr %max_sq_desc_sz to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %conv, ptr %max_sq_desc_sz, align 8
  %35 = load ptr, ptr %mdev, align 8
  %caps40 = getelementptr inbounds %struct.mlx5_core_dev, ptr %35, i32 0, i32 8
  %36 = ptrtoint ptr %caps40 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %caps40, align 8
  %add.ptr45 = getelementptr i32, ptr %37, i32 21
  %38 = ptrtoint ptr %add.ptr45 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %add.ptr45, align 4
  %conv48 = trunc i32 %39 to i16
  %max_rq_desc_sz = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 5
  %40 = ptrtoint ptr %max_rq_desc_sz to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %conv48, ptr %max_rq_desc_sz, align 2
  %41 = load ptr, ptr %mdev, align 8
  %caps50 = getelementptr inbounds %struct.mlx5_core_dev, ptr %41, i32 0, i32 8
  %42 = ptrtoint ptr %caps50 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %caps50, align 8
  %add.ptr55 = getelementptr i32, ptr %43, i32 4
  %44 = ptrtoint ptr %add.ptr55 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %add.ptr55, align 4
  %shr56 = lshr i32 %45, 16
  %and57 = and i32 %shr56, 255
  %shl58 = shl nuw i32 1, %and57
  %max_send_wqebb = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 6
  %46 = ptrtoint ptr %max_send_wqebb to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %shl58, ptr %max_send_wqebb, align 4
  %47 = load ptr, ptr %mdev, align 8
  %caps60 = getelementptr inbounds %struct.mlx5_core_dev, ptr %47, i32 0, i32 8
  %48 = ptrtoint ptr %caps60 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %caps60, align 8
  %add.ptr65 = getelementptr i32, ptr %49, i32 4
  %50 = ptrtoint ptr %add.ptr65 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %add.ptr65, align 4
  %shr66 = lshr i32 %51, 16
  %and67 = and i32 %shr66, 255
  %shl68 = shl nuw i32 1, %and67
  %max_recv_wr = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 7
  %52 = ptrtoint ptr %max_recv_wr to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %shl68, ptr %max_recv_wr, align 8
  %53 = load ptr, ptr %mdev, align 8
  %caps70 = getelementptr inbounds %struct.mlx5_core_dev, ptr %53, i32 0, i32 8
  %54 = ptrtoint ptr %caps70 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %caps70, align 8
  %add.ptr75 = getelementptr i32, ptr %55, i32 4
  %56 = ptrtoint ptr %add.ptr75 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %add.ptr75, align 4
  %shr76 = lshr i32 %57, 24
  %shl78 = shl nuw i32 1, %shr76
  %max_srq_recv_wr = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 8
  %58 = ptrtoint ptr %max_srq_recv_wr to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %shl78, ptr %max_srq_recv_wr, align 4
  %cqe_version = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 4
  %59 = ptrtoint ptr %cqe_version to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %cqe_version, align 8
  %cqe_version79 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 13
  %61 = ptrtoint ptr %cqe_version79 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %60, ptr %cqe_version79, align 4
  %log_uar_size = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 18
  %62 = ptrtoint ptr %log_uar_size to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 12, ptr %log_uar_size, align 8
  %63 = load ptr, ptr %mdev, align 8
  %caps91 = getelementptr inbounds %struct.mlx5_core_dev, ptr %63, i32 0, i32 8
  %64 = ptrtoint ptr %caps91 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %caps91, align 8
  %add.ptr96 = getelementptr i32, ptr %65, i32 18
  %66 = ptrtoint ptr %add.ptr96 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %add.ptr96, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %67)
  %tobool99.not = icmp sgt i32 %67, -1
  br i1 %tobool99.not, label %if.end29.cond.end_crit_edge, label %cond.true

if.end29.cond.end_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.true:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr106 = getelementptr i32, ptr %65, i32 41
  %68 = ptrtoint ptr %add.ptr106 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %add.ptr106, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end29.cond.end_crit_edge
  %cond109 = phi i32 [ %69, %cond.true ], [ 1, %if.end29.cond.end_crit_edge ]
  %num_uars_per_page = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 19
  %70 = ptrtoint ptr %num_uars_per_page to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %cond109, ptr %num_uars_per_page, align 4
  %71 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %mdev, align 8
  %call111 = tail call i32 @mlx5_accel_ipsec_device_caps(ptr noundef %72) #16
  %and112 = and i32 %call111, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and112)
  %tobool113.not = icmp eq i32 %and112, 0
  br i1 %tobool113.not, label %cond.end.if.end159_crit_edge, label %if.then114

cond.end.if.end159_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end159

if.then114:                                       ; preds = %cond.end
  %73 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %mdev, align 8
  %call116 = tail call ptr @mlx5_get_flow_namespace(ptr noundef %74, i32 noundef 13) #16
  %tobool117.not = icmp eq ptr %call116, null
  br i1 %tobool117.not, label %if.then114.if.end122_crit_edge, label %if.then118

if.then114.if.end122_crit_edge:                   ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end122

if.then118:                                       ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #18
  %flow_action_flags = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 10
  %75 = ptrtoint ptr %flow_action_flags to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %flow_action_flags, align 2
  %77 = or i16 %76, 1
  store i16 %77, ptr %flow_action_flags, align 2
  br label %if.end122

if.end122:                                        ; preds = %if.then118, %if.then114.if.end122_crit_edge
  %78 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %mdev, align 8
  %call124 = tail call i32 @mlx5_accel_ipsec_device_caps(ptr noundef %79) #16
  %and125 = and i32 %call124, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and125)
  %tobool126.not = icmp eq i32 %and125, 0
  br i1 %tobool126.not, label %if.end122.if.end132_crit_edge, label %if.then127

if.end122.if.end132_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end132

if.then127:                                       ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  %flow_action_flags128 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 10
  %80 = ptrtoint ptr %flow_action_flags128 to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %flow_action_flags128, align 2
  %82 = or i16 %81, 2
  store i16 %82, ptr %flow_action_flags128, align 2
  br label %if.end132

if.end132:                                        ; preds = %if.then127, %if.end122.if.end132_crit_edge
  %83 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %mdev, align 8
  %arrayidx136 = getelementptr %struct.mlx5_core_dev, ptr %84, i32 0, i32 8, i32 0, i32 7
  %85 = ptrtoint ptr %arrayidx136 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx136, align 4
  %add.ptr139 = getelementptr i32, ptr %86, i32 26
  %87 = ptrtoint ptr %add.ptr139 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %add.ptr139, align 4
  %89 = and i32 %88, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %tobool142.not = icmp eq i32 %89, 0
  br i1 %tobool142.not, label %if.end132.if.end148_crit_edge, label %if.then143

if.end132.if.end148_crit_edge:                    ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end148

if.then143:                                       ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #18
  %flow_action_flags144 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 10
  %90 = ptrtoint ptr %flow_action_flags144 to i32
  call void @__asan_load2_noabort(i32 %90)
  %91 = load i16, ptr %flow_action_flags144, align 2
  %92 = or i16 %91, 4
  store i16 %92, ptr %flow_action_flags144, align 2
  br label %if.end148

if.end148:                                        ; preds = %if.then143, %if.end132.if.end148_crit_edge
  %93 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %mdev, align 8
  %call150 = tail call i32 @mlx5_accel_ipsec_device_caps(ptr noundef %94) #16
  %and151 = and i32 %call150, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and151)
  %tobool152.not = icmp eq i32 %and151, 0
  br i1 %tobool152.not, label %if.end148.if.end159_crit_edge, label %if.then153

if.end148.if.end159_crit_edge:                    ; preds = %if.end148
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end159

if.then153:                                       ; preds = %if.end148
  call void @__sanitizer_cov_trace_pc() #18
  %flow_action_flags154 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 10
  %95 = ptrtoint ptr %flow_action_flags154 to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %flow_action_flags154, align 2
  %97 = or i16 %96, 16
  store i16 %97, ptr %flow_action_flags154, align 2
  br label %if.end159

if.end159:                                        ; preds = %if.then153, %if.end148.if.end159_crit_edge, %cond.end.if.end159_crit_edge
  %lib_uar_dyn = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 5
  %98 = ptrtoint ptr %lib_uar_dyn to i32
  call void @__asan_load1_noabort(i32 %98)
  %bf.load160 = load i8, ptr %lib_uar_dyn, align 4
  %99 = and i8 %bf.load160, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %99)
  %tobool164.not = icmp eq i8 %99, 0
  br i1 %tobool164.not, label %cond.false166, label %if.end159.cond.end167_crit_edge

if.end159.cond.end167_crit_edge:                  ; preds = %if.end159
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end167

cond.false166:                                    ; preds = %if.end159
  call void @__sanitizer_cov_trace_pc() #18
  %total_num_bfregs = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 8
  %100 = ptrtoint ptr %total_num_bfregs to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %total_num_bfregs, align 4
  %num_dyn_bfregs = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 9
  %102 = ptrtoint ptr %num_dyn_bfregs to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %num_dyn_bfregs, align 4
  %sub = sub i32 %101, %103
  br label %cond.end167

cond.end167:                                      ; preds = %cond.false166, %if.end159.cond.end167_crit_edge
  %cond168 = phi i32 [ %sub, %cond.false166 ], [ 0, %if.end159.cond.end167_crit_edge ]
  %tot_bfregs = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 2
  %104 = ptrtoint ptr %tot_bfregs to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %cond168, ptr %tot_bfregs, align 8
  %num_ports = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 3
  %105 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %num_ports, align 8
  %conv169 = trunc i32 %106 to i16
  %num_ports170 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 9
  %107 = ptrtoint ptr %num_ports170 to i32
  call void @__asan_store2_noabort(i32 %107)
  store i16 %conv169, ptr %num_ports170, align 8
  %cmds_supp_uhw = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 14
  %108 = ptrtoint ptr %cmds_supp_uhw to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %cmds_supp_uhw, align 1
  %110 = or i8 %109, 3
  store i8 %110, ptr %cmds_supp_uhw, align 1
  %111 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %mdev, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %112, i32 0, i32 8
  %113 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %caps.i, align 8
  %add.ptr.i = getelementptr i32, ptr %114, i32 13
  %115 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %add.ptr.i, align 4
  %117 = and i32 %116, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %117)
  %switch.selectcmp.i.i = icmp eq i32 %117, 256
  br i1 %switch.selectcmp.i.i, label %if.then176, label %cond.end167.if.end179_crit_edge

cond.end167.if.end179_crit_edge:                  ; preds = %cond.end167
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end179

if.then176:                                       ; preds = %cond.end167
  call void @__sanitizer_cov_trace_pc() #18
  %eth_min_inline = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 15
  tail call void @mlx5_query_min_inline(ptr noundef %112, ptr noundef %eth_min_inline) #16
  %118 = ptrtoint ptr %eth_min_inline to i32
  call void @__asan_load1_noabort(i32 %118)
  %119 = load i8, ptr %eth_min_inline, align 2
  %inc = add i8 %119, 1
  store i8 %inc, ptr %eth_min_inline, align 2
  br label %if.end179

if.end179:                                        ; preds = %if.then176, %cond.end167.if.end179_crit_edge
  %120 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %mdev, align 8
  %clock_info = getelementptr inbounds %struct.mlx5_core_dev, ptr %121, i32 0, i32 28
  %122 = ptrtoint ptr %clock_info to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %clock_info, align 8
  %tobool181.not = icmp eq ptr %123, null
  br i1 %tobool181.not, label %if.end179.if.end183_crit_edge, label %if.then182

if.end179.if.end183_crit_edge:                    ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end183

if.then182:                                       ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #18
  %clock_info_versions = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 16
  %124 = ptrtoint ptr %clock_info_versions to i32
  call void @__asan_store1_noabort(i32 %124)
  store i8 1, ptr %clock_info_versions, align 1
  br label %if.end183

if.end183:                                        ; preds = %if.then182, %if.end179.if.end183_crit_edge
  %comp_mask184 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 11
  %125 = ptrtoint ptr %comp_mask184 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %comp_mask184, align 4
  %or185 = or i32 %126, 1
  store i32 %or185, ptr %comp_mask184, align 4
  %hca_core_clock_offset = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 17
  %127 = ptrtoint ptr %hca_core_clock_offset to i32
  call void @__asan_store8_noabort(i32 %127)
  store i64 0, ptr %hca_core_clock_offset, align 8
  %128 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %mdev, align 8
  %caps187 = getelementptr inbounds %struct.mlx5_core_dev, ptr %129, i32 0, i32 8
  %130 = ptrtoint ptr %caps187 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %caps187, align 8
  %add.ptr192 = getelementptr i32, ptr %131, i32 5
  %132 = ptrtoint ptr %add.ptr192 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %add.ptr192, align 4
  %134 = and i32 %133, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %134)
  %tobool195.not = icmp eq i32 %134, 0
  br i1 %tobool195.not, label %if.end183.if.end199_crit_edge, label %if.then196

if.end183.if.end199_crit_edge:                    ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end199

if.then196:                                       ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #18
  %or198 = or i32 %126, 5
  %135 = ptrtoint ptr %comp_mask184 to i32
  call void @__asan_store4_noabort(i32 %135)
  store i32 %or198, ptr %comp_mask184, align 4
  br label %if.end199

if.end199:                                        ; preds = %if.then196, %if.end183.if.end199_crit_edge
  %136 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %mdev, align 8
  %caps201 = getelementptr inbounds %struct.mlx5_core_dev, ptr %137, i32 0, i32 8
  %138 = ptrtoint ptr %caps201 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %caps201, align 8
  %add.ptr206 = getelementptr i32, ptr %139, i32 34
  %140 = ptrtoint ptr %add.ptr206 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %add.ptr206, align 4
  %shr207 = lshr i32 %141, 30
  %142 = add nsw i32 %shr207, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %142)
  %143 = icmp ult i32 %142, 2
  br i1 %143, label %land.lhs.true, label %if.end199.if.end237_crit_edge

if.end199.if.end237_crit_edge:                    ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end237

land.lhs.true:                                    ; preds = %if.end199
  %shr218 = lshr i32 %141, 28
  %and219 = and i32 %shr218, 3
  %144 = add nsw i32 %and219, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %144)
  %145 = icmp ult i32 %144, 2
  br i1 %145, label %land.lhs.true222, label %land.lhs.true.if.end237_crit_edge

land.lhs.true.if.end237_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end237

land.lhs.true222:                                 ; preds = %land.lhs.true
  %arrayidx226 = getelementptr %struct.mlx5_core_dev, ptr %137, i32 0, i32 8, i32 0, i32 4
  %146 = ptrtoint ptr %arrayidx226 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %arrayidx226, align 8
  %148 = ptrtoint ptr %147 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %147, align 4
  %and231 = and i32 %149, 3
  %150 = add nsw i32 %and231, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %150)
  %151 = icmp ult i32 %150, 2
  br i1 %151, label %if.then234, label %land.lhs.true222.if.end237_crit_edge

land.lhs.true222.if.end237_crit_edge:             ; preds = %land.lhs.true222
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end237

if.then234:                                       ; preds = %land.lhs.true222
  call void @__sanitizer_cov_trace_pc() #18
  %152 = ptrtoint ptr %comp_mask184 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %comp_mask184, align 4
  %or236 = or i32 %153, 16
  store i32 %or236, ptr %comp_mask184, align 4
  br label %if.end237

if.end237:                                        ; preds = %if.then234, %land.lhs.true222.if.end237_crit_edge, %land.lhs.true.if.end237_crit_edge, %if.end199.if.end237_crit_edge
  %num_dyn_bfregs238 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %uctx, i32 0, i32 3, i32 9
  %154 = ptrtoint ptr %num_dyn_bfregs238 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %num_dyn_bfregs238, align 4
  %num_dyn_bfregs239 = getelementptr inbounds %struct.mlx5_ib_alloc_ucontext_resp, ptr %resp, i32 0, i32 20
  %156 = ptrtoint ptr %num_dyn_bfregs239 to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 %155, ptr %num_dyn_bfregs239, align 8
  %157 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %mdev, align 8
  %caps241 = getelementptr inbounds %struct.mlx5_core_dev, ptr %158, i32 0, i32 8
  %159 = ptrtoint ptr %caps241 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %caps241, align 8
  %add.ptr246 = getelementptr i32, ptr %160, i32 16
  %161 = ptrtoint ptr %add.ptr246 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %add.ptr246, align 4
  %163 = and i32 %162, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %163)
  %tobool249.not = icmp eq i32 %163, 0
  br i1 %tobool249.not, label %if.end237.cleanup_crit_edge, label %if.then250

if.end237.cleanup_crit_edge:                      ; preds = %if.end237
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then250:                                       ; preds = %if.end237
  call void @__sanitizer_cov_trace_pc() #18
  %164 = ptrtoint ptr %comp_mask184 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %comp_mask184, align 4
  %or252 = or i32 %165, 8
  store i32 %or252, ptr %comp_mask184, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then250, %if.end237.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.then.cleanup_crit_edge ], [ 0, %if.then250 ], [ 0, %if.end237.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_lib_caps(ptr noundef %dev, i64 noundef %caps) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @print_lib_caps.__UNIQUE_ID_ddebug567, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@print_lib_caps, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !404

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %1 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 68
  %5 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pid, align 8
  %and = and i64 %caps, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool4.not = icmp eq i64 %and, 0
  %cond = select i1 %tobool4.not, ptr @.str.77, ptr @.str.76
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @print_lib_caps.__UNIQUE_ID_ddebug567, ptr noundef %0, ptr noundef nonnull @.str.75, ptr noundef nonnull @.str.74, i32 noundef 1588, i32 noundef %6, ptr noundef nonnull %cond) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mlx5_ib_dealloc_transport_domain(ptr noundef %dev, i32 noundef %tdn, i16 noundef zeroext %uid) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i32, ptr %3, i32 25
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr, align 4
  %6 = and i32 %5, 520093696
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  tail call void @mlx5_cmd_dealloc_transport_domain(ptr noundef %1, i32 noundef %tdn, i16 noundef zeroext %uid) #16
  %7 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mdev, align 8
  %caps3 = getelementptr inbounds %struct.mlx5_core_dev, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %caps3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %caps3, align 8
  %add.ptr8 = getelementptr i32, ptr %10, i32 13
  %11 = ptrtoint ptr %add.ptr8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr8, align 4
  %13 = and i32 %12, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %13)
  %cmp.not = icmp eq i32 %13, 256
  br i1 %cmp.not, label %lor.lhs.false, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

lor.lhs.false:                                    ; preds = %if.end
  %add.ptr17 = getelementptr i32, ptr %10, i32 31
  %14 = ptrtoint ptr %add.ptr17 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %add.ptr17, align 4
  %16 = and i32 %15, 1610612736
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %lor.lhs.false.return_crit_edge, label %if.end32

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end32:                                         ; preds = %lor.lhs.false
  %lb.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28
  tail call void @mutex_lock_nested(ptr noundef %lb.i, i32 noundef 0) #16
  %user_td.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 1
  %18 = ptrtoint ptr %user_td.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %user_td.i, align 4
  %dec.i = add i32 %19, -1
  store i32 %dec.i, ptr %user_td.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dec.i)
  %cmp.i = icmp eq i32 %dec.i, 1
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end32.mlx5_ib_disable_lb.exit_crit_edge

if.end32.mlx5_ib_disable_lb.exit_crit_edge:       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_disable_lb.exit

land.lhs.true.i:                                  ; preds = %if.end32
  %qps11.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 2
  %20 = ptrtoint ptr %qps11.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %qps11.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp12.i = icmp eq i32 %21, 0
  br i1 %cmp12.i, label %if.then13.i, label %land.lhs.true.i.mlx5_ib_disable_lb.exit_crit_edge

land.lhs.true.i.mlx5_ib_disable_lb.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_disable_lb.exit

if.then13.i:                                      ; preds = %land.lhs.true.i
  %enabled.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 28, i32 3
  %22 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %enabled.i, align 4, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool15.not.i = icmp eq i8 %23, 0
  br i1 %tobool15.not.i, label %if.then13.i.mlx5_ib_disable_lb.exit_crit_edge, label %if.then16.i

if.then13.i.mlx5_ib_disable_lb.exit_crit_edge:    ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mlx5_ib_disable_lb.exit

if.then16.i:                                      ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %mdev, align 8
  %call.i = tail call i32 @mlx5_nic_vport_update_local_lb(ptr noundef %25, i1 noundef zeroext false) #16
  %26 = ptrtoint ptr %enabled.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 0, ptr %enabled.i, align 4
  br label %mlx5_ib_disable_lb.exit

mlx5_ib_disable_lb.exit:                          ; preds = %if.then16.i, %if.then13.i.mlx5_ib_disable_lb.exit_crit_edge, %land.lhs.true.i.mlx5_ib_disable_lb.exit_crit_edge, %if.end32.mlx5_ib_disable_lb.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %lb.i) #16
  br label %return

return:                                           ; preds = %mlx5_ib_disable_lb.exit, %lor.lhs.false.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @deallocate_uars(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %context) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bfregi1 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3
  %num_sys_pages = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 6
  %0 = ptrtoint ptr %num_sys_pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_sys_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp14.not = icmp eq i32 %1, 0
  br i1 %cmp14.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %num_static_sys_pages = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 7
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %devx_uid = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 7
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.015 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %num_static_sys_pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_static_sys_pages, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %i.015, i32 %3)
  %cmp2 = icmp ult i32 %i.015, %3
  br i1 %cmp2, label %for.body.if.then_crit_edge, label %lor.lhs.false

for.body.if.then_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false:                                    ; preds = %for.body
  %4 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bfregi1, align 4
  %arrayidx = getelementptr i32, ptr %5, i32 %i.015
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %7)
  %cmp3.not = icmp eq i32 %7, -2147483648
  br i1 %cmp3.not, label %lor.lhs.false.for.inc_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %for.body.if.then_crit_edge
  %8 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mdev, align 8
  %10 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bfregi1, align 4
  %arrayidx5 = getelementptr i32, ptr %11, i32 %i.015
  %12 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx5, align 4
  %14 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %devx_uid, align 8
  %call = tail call i32 @mlx5_cmd_uar_dealloc(ptr noundef %9, i32 noundef %13, i16 noundef zeroext %15) #16
  br label %for.inc

for.inc:                                          ; preds = %if.then, %lor.lhs.false.for.inc_crit_edge
  %inc = add nuw i32 %i.015, 1
  %16 = ptrtoint ptr %num_sys_pages to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_sys_pages, align 4
  %cmp = icmp ult i32 %inc, %17
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_devx_destroy(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #13

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_uar_alloc(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_uar_dealloc(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_alloc_transport_domain(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_dump_fill_mkey(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_query_min_inline(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_cmd_dealloc_transport_domain(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @uar_mmap(ptr noundef %dev, i32 noundef %cmd, ptr noundef %vma, ptr noundef %context) unnamed_addr #0 align 64 {
entry:
  %pfn = alloca i32, align 4
  %uar_index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bfregi1 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pfn) #16
  %0 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pfn, align 4, !annotation !403
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %uar_index) #16
  %1 = ptrtoint ptr %uar_index to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %uar_index, align 4, !annotation !403
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %cmd)
  %cmp = icmp eq i32 %cmd, 6
  %num_sys_pages = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 6
  %num_static_sys_pages = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 7
  %cond.in = select i1 %cmp, ptr %num_sys_pages, ptr %num_static_sys_pages
  %2 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %cond = load i32, ptr %cond.in, align 4
  %lib_uar_dyn = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 5
  %3 = ptrtoint ptr %lib_uar_dyn to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %lib_uar_dyn, align 4
  %4 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool2.not = icmp eq i8 %4, 0
  br i1 %tobool2.not, label %if.end, label %entry.cleanup107_crit_edge

entry.cleanup107_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup107

if.end:                                           ; preds = %entry
  %vm_end = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 1
  %5 = ptrtoint ptr %vm_end to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vm_end, align 4
  %7 = ptrtoint ptr %vma to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vma, align 4
  %sub = sub i32 %6, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub)
  %cmp3.not = icmp eq i32 %sub, 4096
  br i1 %cmp3.not, label %if.end6, label %if.end.cleanup107_crit_edge

if.end.cleanup107_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup107

if.end6:                                          ; preds = %if.end
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 13
  %9 = ptrtoint ptr %vm_pgoff to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vm_pgoff, align 4
  %and.i.i = and i32 %10, 255
  br i1 %cmp, label %if.then8, label %if.end6.if.end12_crit_edge

if.end6.if.end12_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %11 = lshr i32 %10, 8
  %shl.i = and i32 %11, 65280
  %12 = ptrtoint ptr %num_static_sys_pages to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_static_sys_pages, align 4
  %or.i = add i32 %13, %and.i.i
  %add = add i32 %or.i, %shl.i
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.end6.if.end12_crit_edge
  %idx.0 = phi i32 [ %add, %if.then8 ], [ %and.i.i, %if.end6.if.end12_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %idx.0, i32 %cond)
  %cmp13.not = icmp ult i32 %idx.0, %cond
  br i1 %cmp13.not, label %if.end17, label %do.end

do.end:                                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %14 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %15 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 68
  %19 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pid, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %14, ptr noundef nonnull @.str.78, ptr noundef nonnull @.str.79, i32 noundef 2178, i32 noundef %20, i32 noundef %idx.0, i32 noundef %cond) #20
  br label %cleanup107

if.end17:                                         ; preds = %if.end12
  %21 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.178)
  switch i32 %cmd, label %if.end17.cleanup107_crit_edge [
    i32 2, label %if.end17.sw.bb_crit_edge
    i32 6, label %if.end17.sw.bb_crit_edge186
    i32 0, label %if.end17.sw.bb_crit_edge187
    i32 3, label %sw.bb18
  ]

if.end17.sw.bb_crit_edge187:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

if.end17.sw.bb_crit_edge186:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

if.end17.sw.bb_crit_edge:                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

if.end17.cleanup107_crit_edge:                    ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup107

sw.bb:                                            ; preds = %if.end17.sw.bb_crit_edge, %if.end17.sw.bb_crit_edge186, %if.end17.sw.bb_crit_edge187
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %22 = ptrtoint ptr %vm_page_prot to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vm_page_prot, align 4
  %and = and i32 %23, -61
  %or = or i32 %and, 4
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %vm_page_prot19 = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 7
  %24 = ptrtoint ptr %vm_page_prot19 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vm_page_prot19, align 4
  %and20 = and i32 %25, -61
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb18, %sw.bb
  %prot.0 = phi i32 [ %and20, %sw.bb18 ], [ %or, %sw.bb ]
  br i1 %cmp, label %if.then23, label %if.else66

if.then23:                                        ; preds = %sw.epilog
  %mul28 = shl i32 %idx.0, 1
  %total_num_bfregs = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 8
  %26 = ptrtoint ptr %total_num_bfregs to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %total_num_bfregs, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %mul28, i32 %27)
  %cmp29.not = icmp ult i32 %mul28, %27
  br i1 %cmp29.not, label %if.end40, label %do.end34

do.end34:                                         ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #18
  %28 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %29 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i174 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i174 to ptr
  %task37 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %task37 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %task37, align 8
  %pid38 = getelementptr inbounds %struct.task_struct, ptr %32, i32 0, i32 68
  %33 = ptrtoint ptr %pid38 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %pid38, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %28, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.79, i32 noundef 2203, i32 noundef %34, i32 noundef %mul28, i32 noundef %27) #20
  br label %cleanup107

if.end40:                                         ; preds = %if.then23
  %lock = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 3
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #16
  %count = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 3, i32 2
  %35 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %count, align 4
  %arrayidx = getelementptr i32, ptr %36, i32 %mul28
  %37 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool41.not = icmp eq i32 %38, 0
  br i1 %tobool41.not, label %if.end51, label %do.end45

do.end45:                                         ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  %39 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %40 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i175 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i175 to ptr
  %task48 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %task48 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task48, align 8
  %pid49 = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 68
  %44 = ptrtoint ptr %pid49 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pid49, align 8
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %39, ptr noundef nonnull @.str.84, ptr noundef nonnull @.str.79, i32 noundef 2212, i32 noundef %45, i32 noundef %idx.0, i32 noundef %mul28) #20
  tail call void @mutex_unlock(ptr noundef %lock) #16
  br label %cleanup107

if.end51:                                         ; preds = %if.end40
  %46 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 1, ptr %arrayidx, align 4
  tail call void @mutex_unlock(ptr noundef %lock) #16
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %47 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mdev, align 8
  %devx_uid = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 7
  %49 = ptrtoint ptr %devx_uid to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %devx_uid, align 8
  %call55 = call i32 @mlx5_cmd_uar_alloc(ptr noundef %48, ptr noundef nonnull %uar_index, i16 noundef zeroext %50) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.end51.if.end68_crit_edge, label %cleanup

if.end51.if.end68_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end68

cleanup:                                          ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #18
  %51 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %52 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i176 = and i32 %52, -16384
  %53 = inttoptr i32 %and.i176 to ptr
  %task63 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 2
  %54 = ptrtoint ptr %task63 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %task63, align 8
  %pid64 = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 68
  %56 = ptrtoint ptr %pid64 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %pid64, align 8
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %51, ptr noundef nonnull @.str.87, ptr noundef nonnull @.str.79, i32 noundef 2223, i32 noundef %57) #20
  br label %free_bfreg

if.else66:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %58 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %bfregi1, align 4
  %arrayidx67 = getelementptr i32, ptr %59, i32 %idx.0
  %60 = ptrtoint ptr %arrayidx67 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx67, align 4
  %62 = ptrtoint ptr %uar_index to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %uar_index, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %if.end51.if.end68_crit_edge
  %bfreg_dyn_idx.0 = phi i32 [ 0, %if.else66 ], [ %mul28, %if.end51.if.end68_crit_edge ]
  %63 = ptrtoint ptr %uar_index to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %uar_index, align 4
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %65 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %mdev.i, align 8
  %bar_addr.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %66, i32 0, i32 13
  %67 = ptrtoint ptr %bar_addr.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %bar_addr.i, align 8
  %shr2.i = lshr i32 %68, 12
  %add.i = add i32 %shr2.i, %64
  %69 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %add.i, ptr %pfn, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @uar_mmap.__UNIQUE_ID_ddebug580, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@uar_mmap, %if.then75)) #16
          to label %do.end82 [label %if.then75], !srcloc !404

if.then75:                                        ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #18
  %70 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %71 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i177 = and i32 %71, -16384
  %72 = inttoptr i32 %and.i177 to ptr
  %task78 = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 2
  %73 = ptrtoint ptr %task78 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %task78, align 8
  %pid79 = getelementptr inbounds %struct.task_struct, ptr %74, i32 0, i32 68
  %75 = ptrtoint ptr %pid79 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %pid79, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @uar_mmap.__UNIQUE_ID_ddebug580, ptr noundef %70, ptr noundef nonnull @.str.89, ptr noundef nonnull @.str.79, i32 noundef 2231, i32 noundef %76, i32 noundef %idx.0, ptr noundef nonnull %pfn) #16
  br label %do.end82

do.end82:                                         ; preds = %if.then75, %if.end68
  %77 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %pfn, align 4
  %call83 = call i32 @rdma_user_mmap_io(ptr noundef %context, ptr noundef %vma, i32 noundef %78, i32 noundef 4096, i32 noundef %prot.0, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %if.end94, label %do.end88

do.end88:                                         ; preds = %do.end82
  %79 = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 13
  %80 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i178 = and i32 %80, -16384
  %81 = inttoptr i32 %and.i178 to ptr
  %task91 = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 2
  %82 = ptrtoint ptr %task91 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %task91, align 8
  %pid92 = getelementptr inbounds %struct.task_struct, ptr %83, i32 0, i32 68
  %84 = ptrtoint ptr %pid92 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %pid92, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %cmd)
  %86 = icmp ult i32 %cmd, 4
  br i1 %86, label %switch.lookup, label %do.end88.mmap_cmd2str.exit_crit_edge

do.end88.mmap_cmd2str.exit_crit_edge:             ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #18
  br label %mmap_cmd2str.exit

switch.lookup:                                    ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #18
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table.uar_mmap, i32 0, i32 %cmd
  %87 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %87)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %mmap_cmd2str.exit

mmap_cmd2str.exit:                                ; preds = %switch.lookup, %do.end88.mmap_cmd2str.exit_crit_edge
  %retval.0.i179 = phi ptr [ %switch.load, %switch.lookup ], [ null, %do.end88.mmap_cmd2str.exit_crit_edge ]
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %79, ptr noundef nonnull @.str.91, ptr noundef nonnull @.str.79, i32 noundef 2238, i32 noundef %85, i32 noundef %call83, ptr noundef %retval.0.i179) #20
  br i1 %cmp, label %if.end103, label %mmap_cmd2str.exit.cleanup107_crit_edge

mmap_cmd2str.exit.cleanup107_crit_edge:           ; preds = %mmap_cmd2str.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup107

if.end94:                                         ; preds = %do.end82
  br i1 %cmp, label %if.then96, label %if.end94.cleanup107_crit_edge

if.end94.cleanup107_crit_edge:                    ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup107

if.then96:                                        ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #18
  %88 = ptrtoint ptr %uar_index to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %uar_index, align 4
  %90 = ptrtoint ptr %bfregi1 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %bfregi1, align 4
  %arrayidx98 = getelementptr i32, ptr %91, i32 %idx.0
  %92 = ptrtoint ptr %arrayidx98 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %89, ptr %arrayidx98, align 4
  br label %cleanup107

if.end103:                                        ; preds = %mmap_cmd2str.exit
  call void @__sanitizer_cov_trace_pc() #18
  %93 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %mdev.i, align 8
  %devx_uid105 = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %context, i32 0, i32 7
  %95 = ptrtoint ptr %devx_uid105 to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %devx_uid105, align 8
  %call106 = call i32 @mlx5_cmd_uar_dealloc(ptr noundef %94, i32 noundef %idx.0, i16 noundef zeroext %96) #16
  br label %free_bfreg

free_bfreg:                                       ; preds = %if.end103, %cleanup
  %bfreg_dyn_idx.1 = phi i32 [ %mul28, %cleanup ], [ %bfreg_dyn_idx.0, %if.end103 ]
  %err.1 = phi i32 [ %call55, %cleanup ], [ %call83, %if.end103 ]
  call void @mlx5_ib_free_bfreg(ptr noundef %dev, ptr noundef %bfregi1, i32 noundef %bfreg_dyn_idx.1) #16
  br label %cleanup107

cleanup107:                                       ; preds = %free_bfreg, %if.then96, %if.end94.cleanup107_crit_edge, %mmap_cmd2str.exit.cleanup107_crit_edge, %do.end45, %do.end34, %if.end17.cleanup107_crit_edge, %do.end, %if.end.cleanup107_crit_edge, %entry.cleanup107_crit_edge
  %retval.1 = phi i32 [ -22, %do.end ], [ %err.1, %free_bfreg ], [ -22, %entry.cleanup107_crit_edge ], [ -22, %if.end.cleanup107_crit_edge ], [ -22, %if.end17.cleanup107_crit_edge ], [ 0, %if.then96 ], [ 0, %if.end94.cleanup107_crit_edge ], [ %call83, %mmap_cmd2str.exit.cleanup107_crit_edge ], [ -22, %do.end34 ], [ -22, %do.end45 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %uar_index) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pfn) #16
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rdma_user_mmap_io(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_free_bfreg(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vm_insert_page(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rdma_user_mmap_entry_get_pgoff(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rdma_user_mmap_entry_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_dm_mmap_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_exec(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_dealloc_pd(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_attach_mcg(ptr noundef, ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_detach_mcg(ptr noundef, ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_test_wc(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @uverbs_copy_to_struct_or_zero(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @var_is_supported(ptr nocapture noundef readonly %device) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %device, i32 0, i32 1
  %0 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr = getelementptr i64, ptr %3, i32 16
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %add.ptr, align 8
  %and = and i64 %5, 8192
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool = icmp ne i64 %and, 0
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mmap_obj_cleanup(ptr nocapture noundef readonly %uobject, i32 noundef %why, ptr nocapture noundef readnone %attrs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %object = getelementptr inbounds %struct.ib_uobject, ptr %uobject, i32 0, i32 3
  %0 = ptrtoint ptr %object to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %object, align 8
  tail call void @rdma_user_mmap_entry_remove(ptr noundef %1) #16
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rdma_user_mmap_entry_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_handler_MLX5_IB_METHOD_VAR_OBJ_ALLOC(ptr noundef %attrs) #0 align 64 {
entry:
  %mmap_offset = alloca i64, align 8
  %length = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %attr_present.i.i.i = getelementptr inbounds %struct.uverbs_attr_bundle, ptr %attrs, i32 0, i32 5
  %0 = ptrtoint ptr %attr_present.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %attr_present.i.i.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not.i.i = icmp eq i32 %2, 0
  %arrayidx.i.i = getelementptr %struct.uverbs_attr_bundle, ptr %attrs, i32 1, i32 1
  %retval.0.i.i = select i1 %tobool.i.not.i.i, ptr inttoptr (i32 -2 to ptr), ptr %arrayidx.i.i
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.uverbs_attr_get_uobject.exit_crit_edge, label %if.end.i

entry.uverbs_attr_get_uobject.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %uverbs_attr_get_uobject.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %3 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %retval.0.i.i, align 8
  br label %uverbs_attr_get_uobject.exit

uverbs_attr_get_uobject.exit:                     ; preds = %if.end.i, %entry.uverbs_attr_get_uobject.exit_crit_edge
  %retval.0.i = phi ptr [ %4, %if.end.i ], [ %retval.0.i.i, %entry.uverbs_attr_get_uobject.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %mmap_offset) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %length) #16
  %ufile.i = getelementptr inbounds %struct.uverbs_attr_bundle, ptr %attrs, i32 0, i32 2
  %5 = ptrtoint ptr %ufile.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ufile.i, align 8
  %call.i = tail call ptr @ib_uverbs_get_ucontext_file(ptr noundef %6) #16
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %uverbs_attr_get_uobject.exit
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %call.i to i32
  br label %cleanup

if.end:                                           ; preds = %uverbs_attr_get_uobject.exit
  %8 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %call.i, align 8
  %var_table2.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %9, i32 0, i32 38
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3520, i32 noundef 40) #19
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end.if.then8_crit_edge, label %if.end.i41

if.end.if.then8_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then8

if.end.i41:                                       ; preds = %if.end
  tail call void @mutex_lock_nested(ptr noundef %var_table2.i, i32 noundef 0) #16
  %bitmap.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %9, i32 0, i32 38, i32 1
  %11 = ptrtoint ptr %bitmap.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bitmap.i, align 4
  %num_var_hw_entries.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %9, i32 0, i32 38, i32 4
  %13 = ptrtoint ptr %num_var_hw_entries.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %num_var_hw_entries.i, align 8
  %conv.i = trunc i64 %14 to i32
  %call5.i = tail call i32 @_find_first_zero_bit_be(ptr noundef %12, i32 noundef %conv.i) #16
  %conv6.i = zext i32 %call5.i to i64
  %15 = ptrtoint ptr %num_var_hw_entries.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %num_var_hw_entries.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %16, i64 %conv6.i)
  %cmp.not.i = icmp ugt i64 %16, %conv6.i
  br i1 %cmp.not.i, label %if.end11.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i41
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef %var_table2.i) #16
  br label %end.i

if.end11.i:                                       ; preds = %if.end.i41
  %17 = ptrtoint ptr %bitmap.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bitmap.i, align 4
  tail call void @_set_bit(i32 noundef %call5.i, ptr noundef %18) #16
  tail call void @mutex_unlock(ptr noundef %var_table2.i) #16
  %hw_start_addr.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %9, i32 0, i32 38, i32 2
  %19 = ptrtoint ptr %hw_start_addr.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %hw_start_addr.i, align 8
  %stride_size.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %9, i32 0, i32 38, i32 3
  %21 = ptrtoint ptr %stride_size.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %stride_size.i, align 8
  %mul.i = mul i32 %22, %call5.i
  %conv14.i = zext i32 %mul.i to i64
  %add.i = add i64 %20, %conv14.i
  %address.i = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call7.i.i.i, i32 0, i32 2
  %23 = ptrtoint ptr %address.i to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %add.i, ptr %address.i, align 8
  %page_idx15.i = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call7.i.i.i, i32 0, i32 3
  %24 = ptrtoint ptr %page_idx15.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %call5.i, ptr %page_idx15.i, align 8
  %mmap_flag.i = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call7.i.i.i, i32 0, i32 1
  %25 = ptrtoint ptr %mmap_flag.i to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 2, ptr %mmap_flag.i, align 4
  %26 = load i32, ptr %stride_size.i, align 8
  %call.i.i = tail call i32 @rdma_user_mmap_entry_insert_range(ptr noundef %call.i, ptr noundef nonnull %call7.i.i.i, i32 noundef %26, i32 noundef 589824, i32 noundef 16777215) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool18.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool18.not.i, label %if.end11.i.alloc_var_entry.exit_crit_edge, label %err_insert.i

if.end11.i.alloc_var_entry.exit_crit_edge:        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %alloc_var_entry.exit

err_insert.i:                                     ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_lock_nested(ptr noundef %var_table2.i, i32 noundef 0) #16
  %27 = ptrtoint ptr %bitmap.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bitmap.i, align 4
  tail call void @_clear_bit(i32 noundef %call5.i, ptr noundef %28) #16
  tail call void @mutex_unlock(ptr noundef %var_table2.i) #16
  %phi.cast.i = inttoptr i32 %call.i.i to ptr
  br label %end.i

end.i:                                            ; preds = %err_insert.i, %if.then9.i
  %err.0.i = phi ptr [ inttoptr (i32 -28 to ptr), %if.then9.i ], [ %phi.cast.i, %err_insert.i ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #16
  br label %alloc_var_entry.exit

alloc_var_entry.exit:                             ; preds = %end.i, %if.end11.i.alloc_var_entry.exit_crit_edge
  %retval.0.i42 = phi ptr [ %err.0.i, %end.i ], [ %call7.i.i.i, %if.end11.i.alloc_var_entry.exit_crit_edge ]
  %cmp.i43 = icmp ugt ptr %retval.0.i42, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i43, label %alloc_var_entry.exit.if.then8_crit_edge, label %if.end10

alloc_var_entry.exit.if.then8_crit_edge:          ; preds = %alloc_var_entry.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then8

if.then8:                                         ; preds = %alloc_var_entry.exit.if.then8_crit_edge, %if.end.if.then8_crit_edge
  %retval.0.i4246 = phi ptr [ %retval.0.i42, %alloc_var_entry.exit.if.then8_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.if.then8_crit_edge ]
  %29 = ptrtoint ptr %retval.0.i4246 to i32
  br label %cleanup

if.end10:                                         ; preds = %alloc_var_entry.exit
  %start_pgoff.i = getelementptr inbounds %struct.rdma_user_mmap_entry, ptr %retval.0.i42, i32 0, i32 2
  %30 = ptrtoint ptr %start_pgoff.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %start_pgoff.i, align 8
  %and4.i = and i32 %31, 65535
  %conv5.i = zext i32 %and4.i to i64
  %32 = shl nuw nsw i64 %conv5.i, 8
  %shl.i = and i64 %32, 16711680
  %33 = lshr i32 %31, 8
  %34 = and i32 %33, 16776960
  %shl7.i = zext i32 %34 to i64
  %or.i = or i64 %shl.i, %shl7.i
  %and8.i = and i64 %conv5.i, 255
  %or9.i = or i64 %or.i, %and8.i
  %shl10.i = shl nuw nsw i64 %or9.i, 12
  %35 = ptrtoint ptr %mmap_offset to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %shl10.i, ptr %mmap_offset, align 8
  %npages = getelementptr inbounds %struct.rdma_user_mmap_entry, ptr %retval.0.i42, i32 0, i32 3
  %36 = ptrtoint ptr %npages to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %npages, align 4
  %mul = shl i32 %37, 12
  %38 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %mul, ptr %length, align 4
  %object = getelementptr inbounds %struct.ib_uobject, ptr %retval.0.i, i32 0, i32 3
  %39 = ptrtoint ptr %object to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %retval.0.i42, ptr %object, align 8
  tail call void @uverbs_finalize_uobj_create(ptr noundef %attrs, i16 noundef zeroext 4096) #16
  %call12 = call i32 @uverbs_copy_to(ptr noundef %attrs, i32 noundef 4097, ptr noundef nonnull %mmap_offset, i32 noundef 8) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool.not = icmp eq i32 %call12, 0
  br i1 %tobool.not, label %if.end14, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  %page_idx = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %retval.0.i42, i32 0, i32 3
  %call15 = call i32 @uverbs_copy_to(ptr noundef %attrs, i32 noundef 4099, ptr noundef %page_idx, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end18:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  %call19 = call i32 @uverbs_copy_to(ptr noundef %attrs, i32 noundef 4098, ptr noundef nonnull %length, i32 noundef 4) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.end14.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.then8, %if.then
  %retval.0 = phi i32 [ %7, %if.then ], [ %29, %if.then8 ], [ %call19, %if.end18 ], [ %call12, %if.end10.cleanup_crit_edge ], [ %call15, %if.end14.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %length) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %mmap_offset) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @uverbs_finalize_uobj_create(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @uverbs_copy_to(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ib_uverbs_get_ucontext_file(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rdma_user_mmap_entry_insert_range(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @uverbs_destroy_def_handler(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_handler_MLX5_IB_METHOD_UAR_OBJ_ALLOC(ptr noundef %attrs) #0 align 64 {
entry:
  %uar_index.i = alloca i32, align 4
  %mmap_offset = alloca i64, align 8
  %length = alloca i32, align 4
  %_val = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %attr_present.i.i.i = getelementptr inbounds %struct.uverbs_attr_bundle, ptr %attrs, i32 0, i32 5
  %0 = ptrtoint ptr %attr_present.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %attr_present.i.i.i, align 4
  %2 = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not.i.i = icmp eq i32 %2, 0
  %arrayidx.i.i = getelementptr %struct.uverbs_attr_bundle, ptr %attrs, i32 1, i32 1
  %retval.0.i.i = select i1 %tobool.i.not.i.i, ptr inttoptr (i32 -2 to ptr), ptr %arrayidx.i.i
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.uverbs_attr_get_uobject.exit_crit_edge, label %if.end.i

entry.uverbs_attr_get_uobject.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %uverbs_attr_get_uobject.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %3 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %retval.0.i.i, align 8
  br label %uverbs_attr_get_uobject.exit

uverbs_attr_get_uobject.exit:                     ; preds = %if.end.i, %entry.uverbs_attr_get_uobject.exit_crit_edge
  %retval.0.i = phi ptr [ %4, %if.end.i ], [ %retval.0.i.i, %entry.uverbs_attr_get_uobject.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %mmap_offset) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %length) #16
  %ufile.i = getelementptr inbounds %struct.uverbs_attr_bundle, ptr %attrs, i32 0, i32 2
  %5 = ptrtoint ptr %ufile.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ufile.i, align 8
  %call.i = tail call ptr @ib_uverbs_get_ucontext_file(ptr noundef %6) #16
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %uverbs_attr_get_uobject.exit
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %call.i to i32
  br label %cleanup

if.end:                                           ; preds = %uverbs_attr_get_uobject.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %_val) #16
  %8 = ptrtoint ptr %_val to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 -1, ptr %_val, align 8, !annotation !403
  %call6 = call i32 @_uverbs_get_const_unsigned(ptr noundef nonnull %_val, ptr noundef %attrs, i32 noundef 4097, i64 noundef 4294967295, ptr noundef null) #16
  %9 = ptrtoint ptr %_val to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %_val, align 8
  %conv = trunc i64 %10 to i32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %_val) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %conv)
  %switch = icmp ult i32 %conv, 2
  br i1 %switch, label %if.end13, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %if.end8
  %11 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %call.i, align 8
  %wc_support = getelementptr inbounds %struct.mlx5_ib_dev, ptr %12, i32 0, i32 5
  %13 = ptrtoint ptr %wc_support to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load = load i8, ptr %wc_support, align 8
  %14 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool15.not = icmp eq i8 %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv)
  %cmp17 = icmp eq i32 %conv, 0
  %or.cond = select i1 %tobool15.not, i1 %cmp17, i1 false
  br i1 %or.cond, label %if.end13.cleanup_crit_edge, label %if.end20

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end20:                                         ; preds = %if.end13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %uar_index.i) #16
  %15 = ptrtoint ptr %uar_index.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -1, ptr %uar_index.i, align 4, !annotation !403
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %16 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %16, i32 noundef 3520, i32 noundef 40) #19
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %alloc_uar_entry.exit.thread, label %if.end.i65

alloc_uar_entry.exit.thread:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %uar_index.i) #16
  br label %if.then23

if.end.i65:                                       ; preds = %if.end20
  %17 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %call.i, align 8
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %mdev.i, align 8
  %devx_uid.i = getelementptr inbounds %struct.mlx5_ib_ucontext, ptr %call.i, i32 0, i32 7
  %21 = ptrtoint ptr %devx_uid.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %devx_uid.i, align 8
  %call4.i = call i32 @mlx5_cmd_uar_alloc(ptr noundef %20, ptr noundef nonnull %uar_index.i, i16 noundef zeroext %22) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.end7.i, label %if.end.i65.end.i_crit_edge

if.end.i65.end.i_crit_edge:                       ; preds = %if.end.i65
  call void @__sanitizer_cov_trace_pc() #18
  br label %end.i

if.end7.i:                                        ; preds = %if.end.i65
  %23 = ptrtoint ptr %uar_index.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %uar_index.i, align 4
  %page_idx.i = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call7.i.i.i, i32 0, i32 3
  %25 = ptrtoint ptr %page_idx.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %page_idx.i, align 8
  %26 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mdev.i, align 8
  %bar_addr.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %27, i32 0, i32 13
  %28 = ptrtoint ptr %bar_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %bar_addr.i.i, align 8
  %mul.i.i = shl i32 %24, 12
  %add.i.i = add i32 %29, %mul.i.i
  %conv.i.i = zext i32 %add.i.i to i64
  %address.i = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call7.i.i.i, i32 0, i32 2
  %30 = ptrtoint ptr %address.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %conv.i.i, ptr %address.i, align 8
  %spec.select.i = select i1 %cmp17, i8 3, i8 4
  %31 = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %call7.i.i.i, i32 0, i32 1
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %spec.select.i, ptr %31, align 4
  %call.i.i = call i32 @rdma_user_mmap_entry_insert_range(ptr noundef %call.i, ptr noundef nonnull %call7.i.i.i, i32 noundef 4096, i32 noundef 589824, i32 noundef 16777215) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool13.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool13.not.i, label %if.end7.i.alloc_uar_entry.exit_crit_edge, label %err_insert.i

if.end7.i.alloc_uar_entry.exit_crit_edge:         ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %alloc_uar_entry.exit

err_insert.i:                                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  %33 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mdev.i, align 8
  %35 = ptrtoint ptr %uar_index.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %uar_index.i, align 4
  %37 = ptrtoint ptr %devx_uid.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %devx_uid.i, align 8
  %call18.i = call i32 @mlx5_cmd_uar_dealloc(ptr noundef %34, i32 noundef %36, i16 noundef zeroext %38) #16
  br label %end.i

end.i:                                            ; preds = %err_insert.i, %if.end.i65.end.i_crit_edge
  %err.0.i = phi i32 [ %call4.i, %if.end.i65.end.i_crit_edge ], [ %call.i.i, %err_insert.i ]
  call void @kfree(ptr noundef nonnull %call7.i.i.i) #16
  %39 = inttoptr i32 %err.0.i to ptr
  br label %alloc_uar_entry.exit

alloc_uar_entry.exit:                             ; preds = %end.i, %if.end7.i.alloc_uar_entry.exit_crit_edge
  %retval.0.i67 = phi ptr [ %39, %end.i ], [ %call7.i.i.i, %if.end7.i.alloc_uar_entry.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %uar_index.i) #16
  %cmp.i68 = icmp ugt ptr %retval.0.i67, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i68, label %alloc_uar_entry.exit.if.then23_crit_edge, label %if.end25

alloc_uar_entry.exit.if.then23_crit_edge:         ; preds = %alloc_uar_entry.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then23

if.then23:                                        ; preds = %alloc_uar_entry.exit.if.then23_crit_edge, %alloc_uar_entry.exit.thread
  %retval.0.i6771 = phi ptr [ inttoptr (i32 -12 to ptr), %alloc_uar_entry.exit.thread ], [ %retval.0.i67, %alloc_uar_entry.exit.if.then23_crit_edge ]
  %40 = ptrtoint ptr %retval.0.i6771 to i32
  br label %cleanup

if.end25:                                         ; preds = %alloc_uar_entry.exit
  %start_pgoff.i = getelementptr inbounds %struct.rdma_user_mmap_entry, ptr %retval.0.i67, i32 0, i32 2
  %41 = ptrtoint ptr %start_pgoff.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %start_pgoff.i, align 8
  %and4.i = and i32 %42, 65535
  %conv5.i = zext i32 %and4.i to i64
  %43 = shl nuw nsw i64 %conv5.i, 8
  %shl.i = and i64 %43, 16711680
  %44 = lshr i32 %42, 8
  %45 = and i32 %44, 16776960
  %shl7.i = zext i32 %45 to i64
  %or.i = or i64 %shl.i, %shl7.i
  %and8.i = and i64 %conv5.i, 255
  %or9.i = or i64 %or.i, %and8.i
  %shl10.i = shl nuw nsw i64 %or9.i, 12
  %46 = ptrtoint ptr %mmap_offset to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %shl10.i, ptr %mmap_offset, align 8
  %npages = getelementptr inbounds %struct.rdma_user_mmap_entry, ptr %retval.0.i67, i32 0, i32 3
  %47 = ptrtoint ptr %npages to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %npages, align 4
  %mul = shl i32 %48, 12
  %49 = ptrtoint ptr %length to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %mul, ptr %length, align 4
  %object = getelementptr inbounds %struct.ib_uobject, ptr %retval.0.i, i32 0, i32 3
  %50 = ptrtoint ptr %object to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %retval.0.i67, ptr %object, align 8
  call void @uverbs_finalize_uobj_create(ptr noundef %attrs, i16 noundef zeroext 4096) #16
  %call27 = call i32 @uverbs_copy_to(ptr noundef %attrs, i32 noundef 4098, ptr noundef nonnull %mmap_offset, i32 noundef 8) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %if.end25.cleanup_crit_edge

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end30:                                         ; preds = %if.end25
  %page_idx = getelementptr inbounds %struct.mlx5_user_mmap_entry, ptr %retval.0.i67, i32 0, i32 3
  %call31 = call i32 @uverbs_copy_to(ptr noundef %attrs, i32 noundef 4100, ptr noundef %page_idx, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %if.end30.cleanup_crit_edge

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end34:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  %call35 = call i32 @uverbs_copy_to(ptr noundef %attrs, i32 noundef 4099, ptr noundef nonnull %length, i32 noundef 4) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %if.end30.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %if.then23, %if.end13.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %7, %if.then ], [ %40, %if.then23 ], [ %call35, %if.end34 ], [ %call6, %if.end.cleanup_crit_edge ], [ -95, %if.end8.cleanup_crit_edge ], [ -95, %if.end13.cleanup_crit_edge ], [ %call27, %if.end25.cleanup_crit_edge ], [ %call31, %if.end30.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %length) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %mmap_offset) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_uverbs_get_const_unsigned(ptr noundef, ptr noundef, i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_node_desc(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_mad_ifc_node_guid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_hca_vport_node_guid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_query_nic_vport_node_guid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bitmap_zalloc(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bitmap_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_rep_query_port(ptr nocapture noundef readonly %ibdev, i32 noundef %port, ptr nocapture noundef %props) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mlx5_query_port_roce(ptr noundef %ibdev, i32 noundef %port, ptr noundef %props)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_port_rep_immutable(ptr noundef %ibdev, i32 noundef %port_num, ptr nocapture noundef writeonly %immutable) #0 align 64 {
entry:
  %attr = alloca %struct.ib_port_attr, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %attr) #16
  %0 = call ptr @memset(ptr %attr, i32 255, i32 72)
  %core_cap_flags = getelementptr inbounds %struct.ib_port_immutable, ptr %immutable, i32 0, i32 2
  %1 = ptrtoint ptr %core_cap_flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 16777216, ptr %core_cap_flags, align 4
  %call = call i32 @ib_query_port(ptr noundef %ibdev, i32 noundef %port_num, ptr noundef nonnull %attr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %pkey_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %attr, i32 0, i32 11
  %2 = ptrtoint ptr %pkey_tbl_len to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %pkey_tbl_len, align 8
  %conv = zext i16 %3 to i32
  %4 = ptrtoint ptr %immutable to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %conv, ptr %immutable, align 4
  %gid_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %attr, i32 0, i32 5
  %5 = ptrtoint ptr %gid_tbl_len to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %gid_tbl_len, align 8
  %gid_tbl_len2 = getelementptr inbounds %struct.ib_port_immutable, ptr %immutable, i32 0, i32 1
  %7 = ptrtoint ptr %gid_tbl_len2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %gid_tbl_len2, align 4
  %8 = ptrtoint ptr %core_cap_flags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 16777216, ptr %core_cap_flags, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %attr) #16
  ret i32 %call
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @mlx5_ib_rep_query_pkey(ptr nocapture noundef readnone %ibdev, i32 noundef %port, i16 noundef zeroext %index, ptr nocapture noundef writeonly %pkey) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pkey to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %pkey, align 2
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_ib_create_wq(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_destroy_wq(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_modify_wq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_create_rwq_ind_table(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_destroy_rwq_ind_table(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mlx5_lag_is_active(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_create_vport_lag(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_create_lag_demux_flow_table(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_destroy_vport_lag(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_destroy_flow_table(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__ib_alloc_pd(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__ib_create_cq(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_xrcd_alloc(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pkey_change_handler(ptr nocapture noundef readonly %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -4
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mlx5_ib_gsi_pkey_change(ptr noundef nonnull %1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ib_destroy_srq(ptr noundef %srq) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 @ib_destroy_srq_user(ptr noundef %srq, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end28_crit_edge, label %land.rhs

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b38 = load i1, ptr @ib_destroy_srq.__already_done, align 1
  br i1 %.b38, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !411

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @ib_destroy_srq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 3688, i32 noundef 9, ptr noundef nonnull @.str.124) #16
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_cmd_xrcd_dealloc(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ib_create_srq_user(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_gsi_pkey_change(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ib_destroy_srq_user(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ib_destroy_cq_user(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ib_dealloc_pd_user(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_event(ptr noundef %nb, i32 noundef %event, ptr noundef %param) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 2592, i32 noundef 60) #19
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__init_work(ptr noundef nonnull %call7.i, i32 noundef 0) #16
  %1 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -64, ptr %call7.i, align 8
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.32, ptr noundef nonnull @mlx5_ib_event.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry5 = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 1
  %2 = ptrtoint ptr %entry5 to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %entry5, ptr %entry5, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 1, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %entry5, ptr %prev.i, align 8
  %func = getelementptr inbounds %struct.work_struct, ptr %call7.i, i32 0, i32 2
  %4 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @mlx5_ib_handle_event, ptr %func, align 4
  %add.ptr = getelementptr i8, ptr %nb, i32 -2788
  %5 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr, ptr %5, align 4
  %is_slave = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 2
  %7 = ptrtoint ptr %is_slave to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %is_slave, align 8
  %param7 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 4
  %8 = ptrtoint ptr %param7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %param, ptr %param7, align 8
  %event8 = getelementptr inbounds %struct.mlx5_ib_event_work, ptr %call7.i, i32 0, i32 3
  %9 = ptrtoint ptr %event8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %event, ptr %event8, align 4
  %10 = load ptr, ptr @mlx5_ib_event_wq, align 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %10, ptr noundef nonnull %call7.i) #16
  br label %cleanup

cleanup:                                          ; preds = %do.body, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %do.body ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mlx5_get_uars_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_put_uars_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_alloc_bfreg(ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_free_bfreg(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_mr_cache_cleanup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ib_free_cq(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ib_destroy_qp_user(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ib_register_device(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ib_unregister_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ib_modify_qp(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sema_init(ptr noundef %sem) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %wait_list1 = getelementptr inbounds %struct.semaphore, ptr %sem, i32 0, i32 2
  %0 = ptrtoint ptr %sem to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %sem, align 4
  %.compoundliteral.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 4
  %1 = ptrtoint ptr %.compoundliteral.sroa.2.0..sroa_idx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -559067475, ptr %.compoundliteral.sroa.2.0..sroa_idx, align 4
  %.compoundliteral.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 8
  %2 = ptrtoint ptr %.compoundliteral.sroa.3.0..sroa_idx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %.compoundliteral.sroa.3.0..sroa_idx, align 4
  %.compoundliteral.sroa.4.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 12
  %3 = ptrtoint ptr %.compoundliteral.sroa.4.0..sroa_idx to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %.compoundliteral.sroa.4.0..sroa_idx, align 4
  %.compoundliteral.sroa.5.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 16
  %4 = call ptr @memset(ptr %.compoundliteral.sroa.5.0..sroa_idx, i32 0, i32 12)
  %.compoundliteral.sroa.6.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 28
  %5 = ptrtoint ptr %.compoundliteral.sroa.6.0..sroa_idx to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @.str.139, ptr %.compoundliteral.sroa.6.0..sroa_idx, align 4
  %.compoundliteral.sroa.7.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 32
  %6 = ptrtoint ptr %.compoundliteral.sroa.7.0..sroa_idx to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %.compoundliteral.sroa.7.0..sroa_idx, align 4
  %.compoundliteral.sroa.75.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 33
  %7 = ptrtoint ptr %.compoundliteral.sroa.75.0..sroa_idx to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 2, ptr %.compoundliteral.sroa.75.0..sroa_idx, align 1
  %.compoundliteral.sroa.8.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 34
  %8 = call ptr @memset(ptr %.compoundliteral.sroa.8.0..sroa_idx, i32 0, i32 10)
  %.compoundliteral.sroa.86.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 44
  %9 = ptrtoint ptr %.compoundliteral.sroa.86.0..sroa_idx to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 128, ptr %.compoundliteral.sroa.86.0..sroa_idx, align 4
  %10 = ptrtoint ptr %wait_list1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %wait_list1, ptr %wait_list1, align 4
  %.compoundliteral.sroa.10.0..sroa_idx = getelementptr inbounds i8, ptr %sem, i32 52
  %11 = ptrtoint ptr %.compoundliteral.sroa.10.0..sroa_idx to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %wait_list1, ptr %.compoundliteral.sroa.10.0..sroa_idx, align 4
  tail call void @lockdep_init_map_type(ptr noundef %.compoundliteral.sroa.5.0..sroa_idx, ptr noundef nonnull @.str.140, ptr noundef nonnull @sema_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_mr_cache_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__ib_alloc_cq(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ib_create_qp_kernel(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5r_probe(ptr nocapture noundef %adev, ptr nocapture noundef readnone %id) #0 align 64 {
entry:
  %val.i = alloca %union.devlink_param_value, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_adev, ptr %adev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  %caps = getelementptr inbounds %struct.mlx5_core_dev, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 8
  %add.ptr2 = getelementptr i32, ptr %3, i32 13
  %4 = ptrtoint ptr %add.ptr2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr2, align 4
  %6 = and i32 %5, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %6)
  %switch.selectcmp.i = icmp eq i32 %6, 256
  %and10 = and i32 %5, 255
  %add.ptr16 = getelementptr i32, ptr %3, i32 48
  %7 = ptrtoint ptr %add.ptr16 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr16, align 4
  %shr17 = lshr i32 %8, 8
  %and18 = and i32 %shr17, 255
  %9 = tail call i32 @llvm.umax.i32(i32 %and10, i32 %and18)
  %call21 = tail call ptr @_ib_alloc_device(i32 noundef 10224) #16
  %tobool.not = icmp eq ptr %call21, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end7.i.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7.i.i:                                      ; preds = %entry
  %10 = mul nuw nsw i32 %9, 196
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %10, i32 noundef 3520) #22
  %port = getelementptr inbounds %struct.mlx5_ib_dev, ptr %call21, i32 0, i32 22
  %11 = ptrtoint ptr %port to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call8.i.i, ptr %port, align 8
  %tobool26.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool26.not, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @ib_dealloc_device(ptr noundef nonnull %call21) #16
  br label %cleanup

if.end28:                                         ; preds = %if.end7.i.i
  %mdev29 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %call21, i32 0, i32 1
  %12 = ptrtoint ptr %mdev29 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %1, ptr %mdev29, align 8
  %num_ports30 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %call21, i32 0, i32 3
  %13 = ptrtoint ptr %num_ports30 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %9, ptr %num_ports30, align 8
  br i1 %switch.selectcmp.i, label %land.lhs.true, label %if.end28.if.else_crit_edge

if.end28.if.else_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true:                                    ; preds = %if.end28
  %call.i = tail call ptr @priv_to_devlink(ptr noundef %1) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %val.i) #16
  %14 = call ptr @memset(ptr %val.i, i32 255, i32 32)
  %call1.i = call i32 @devlink_param_driverinit_value_get(ptr noundef %call.i, i32 noundef 9, ptr noundef nonnull %val.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %caps, align 8
  %add.ptr.i = getelementptr i32, ptr %16, i32 16
  %17 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %add.ptr.i, align 4
  %shr.i = lshr i32 %18, 2
  %and.i = and i32 %shr.i, 1
  br label %mlx5_is_roce_init_enabled.exit

cond.false.i:                                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %val.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %val.i, align 4, !range !402
  %21 = zext i8 %20 to i32
  br label %mlx5_is_roce_init_enabled.exit

mlx5_is_roce_init_enabled.exit:                   ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %and.i, %cond.true.i ], [ %21, %cond.false.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i)
  %tobool3.i.not = icmp eq i32 %cond.i, 0
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %val.i) #16
  br i1 %tobool3.i.not, label %mlx5_is_roce_init_enabled.exit.if.end34_crit_edge, label %mlx5_is_roce_init_enabled.exit.if.else_crit_edge

mlx5_is_roce_init_enabled.exit.if.else_crit_edge: ; preds = %mlx5_is_roce_init_enabled.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

mlx5_is_roce_init_enabled.exit.if.end34_crit_edge: ; preds = %mlx5_is_roce_init_enabled.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end34

if.else:                                          ; preds = %mlx5_is_roce_init_enabled.exit.if.else_crit_edge, %if.end28.if.else_crit_edge
  br label %if.end34

if.end34:                                         ; preds = %if.else, %mlx5_is_roce_init_enabled.exit.if.end34_crit_edge
  %profile.0 = phi ptr [ @pf_profile, %if.else ], [ @raw_eth_profile, %mlx5_is_roce_init_enabled.exit.if.end34_crit_edge ]
  %profile1.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %call21, i32 0, i32 27
  %22 = ptrtoint ptr %profile1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %profile.0, ptr %profile1.i, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end34
  %i.035.i = phi i32 [ 0, %if.end34 ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [20 x %struct.mlx5_ib_stage], ptr %profile.0, i32 0, i32 %i.035.i
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i66 = icmp eq ptr %24, null
  br i1 %tobool.not.i66, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %call.i67 = call i32 %24(ptr noundef nonnull %call21) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i67)
  %tobool5.not.i = icmp eq i32 %call.i67, 0
  br i1 %tobool5.not.i, label %if.then.i.for.inc.i_crit_edge, label %while.cond.preheader.i

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

while.cond.preheader.i:                           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.035.i)
  %tobool8.not37.i = icmp eq i32 %i.035.i, 0
  br i1 %tobool8.not37.i, label %while.cond.preheader.i.if.then37_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.if.then37_crit_edge:       ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

for.inc.i:                                        ; preds = %if.then.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.035.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 20
  br i1 %exitcond.not.i, label %if.end40, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

while.body.i:                                     ; preds = %if.end16.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %i.138.i = phi i32 [ %dec.i, %if.end16.i.while.body.i_crit_edge ], [ %i.035.i, %while.cond.preheader.i.while.body.i_crit_edge ]
  %dec.i = add nsw i32 %i.138.i, -1
  %cleanup.i = getelementptr [20 x %struct.mlx5_ib_stage], ptr %profile.0, i32 0, i32 %dec.i, i32 1
  %25 = ptrtoint ptr %cleanup.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %cleanup.i, align 4
  %tobool11.not.i = icmp eq ptr %26, null
  br i1 %tobool11.not.i, label %while.body.i.if.end16.i_crit_edge, label %if.then12.i

while.body.i.if.end16.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

if.then12.i:                                      ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  call void %26(ptr noundef nonnull %call21) #16
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then12.i, %while.body.i.if.end16.i_crit_edge
  %tobool8.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool8.not.i, label %if.end16.i.if.then37_crit_edge, label %if.end16.i.while.body.i_crit_edge

if.end16.i.while.body.i_crit_edge:                ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

if.end16.i.if.then37_crit_edge:                   ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then37

if.then37:                                        ; preds = %if.end16.i.if.then37_crit_edge, %while.cond.preheader.i.if.then37_crit_edge
  %27 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %port, align 8
  call void @kfree(ptr noundef %28) #16
  call void @ib_dealloc_device(ptr noundef nonnull %call21) #16
  br label %cleanup

if.end40:                                         ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  %ib_active.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %call21, i32 0, i32 5
  %29 = ptrtoint ptr %ib_active.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %bf.load.i = load i8, ptr %ib_active.i, align 8
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %ib_active.i, align 8
  %driver_data.i.i = getelementptr inbounds %struct.device, ptr %adev, i32 0, i32 8
  %30 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %call21, ptr %driver_data.i.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %if.then37, %if.then27, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then37 ], [ 0, %if.end40 ], [ -12, %if.then27 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5r_remove(ptr nocapture noundef readonly %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.device, ptr %adev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %profile = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 27
  %2 = ptrtoint ptr %profile to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %profile, align 8
  %ib_active.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %ib_active.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %ib_active.i, align 8
  %bf.clear.i = and i8 %bf.load.i, 127
  store i8 %bf.clear.i, ptr %ib_active.i, align 8
  br label %while.body.i

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %entry
  %stage.addr.014.i = phi i32 [ %dec.i, %if.end.i.while.body.i_crit_edge ], [ 20, %entry ]
  %dec.i = add nsw i32 %stage.addr.014.i, -1
  %cleanup.i = getelementptr [20 x %struct.mlx5_ib_stage], ptr %3, i32 0, i32 %dec.i, i32 1
  %5 = ptrtoint ptr %cleanup.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cleanup.i, align 4
  %tobool2.not.i = icmp eq ptr %6, null
  br i1 %tobool2.not.i, label %while.body.i.if.end.i_crit_edge, label %if.then.i

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void %6(ptr noundef %1) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body.i.if.end.i_crit_edge
  %tobool.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i, label %__mlx5_ib_remove.exit, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

__mlx5_ib_remove.exit:                            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %port.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %1, i32 0, i32 22
  %7 = ptrtoint ptr %port.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %port.i, align 8
  tail call void @kfree(ptr noundef %8) #16
  tail call void @ib_dealloc_device(ptr noundef %1) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @_ib_alloc_device(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @priv_to_devlink(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_param_driverinit_value_get(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_non_default_cb(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @ib_set_device_ops(ptr noundef %dev, ptr noundef nonnull @mlx5_ib_dev_port_ops) #16
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_ib_odp_init_one(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mlx5_ib_odp_cleanup_one(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_ib_stage_delay_drop_init(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %raw_packet_caps = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 22, i32 47
  %0 = ptrtoint ptr %raw_packet_caps to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %raw_packet_caps, align 8
  %and = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  %delay_drop = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26
  %lock = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 2
  tail call void @__mutex_init(ptr noundef %lock, ptr noundef nonnull @.str.142, ptr noundef nonnull @mlx5_ib_stage_delay_drop_init.__key) #16
  %2 = ptrtoint ptr %delay_drop to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev, ptr %delay_drop, align 8
  %activate = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 4
  %3 = ptrtoint ptr %activate to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %activate, align 8
  %timeout = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 3
  %4 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 100000, ptr %timeout, align 4
  %delay_drop_work = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 1
  tail call void @__init_work(ptr noundef %delay_drop_work, i32 noundef 0) #16
  %5 = ptrtoint ptr %delay_drop_work to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -64, ptr %delay_drop_work, align 4
  %lockdep_map = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 1, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.144, ptr noundef nonnull @mlx5_ib_stage_delay_drop_init.__key.143, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry13 = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 1, i32 1
  %6 = ptrtoint ptr %entry13 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %entry13, ptr %entry13, align 4
  %prev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 1, i32 1, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %entry13, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 1, i32 2
  %8 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @delay_drop_handler, ptr %func, align 4
  %rqs_cnt = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %rqs_cnt, i32 noundef 4) #16
  %9 = ptrtoint ptr %rqs_cnt to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 0, ptr %rqs_cnt, align 4
  %events_cnt = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 5
  %call.i.i50 = tail call zeroext i1 @__kasan_check_write(ptr noundef %events_cnt, i32 noundef 4) #16
  %10 = ptrtoint ptr %events_cnt to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 0, ptr %events_cnt, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mlx5_debugfs_root to i32))
  %11 = load ptr, ptr @mlx5_debugfs_root, align 4
  %tobool20.not = icmp eq ptr %11, null
  br i1 %tobool20.not, label %do.body.cleanup_crit_edge, label %if.end22

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end22:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %mdev = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 1
  %12 = ptrtoint ptr %mdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mdev, align 8
  %dbg_root = getelementptr inbounds %struct.mlx5_core_dev, ptr %13, i32 0, i32 17, i32 20
  %14 = ptrtoint ptr %dbg_root to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dbg_root, align 8
  %call = tail call ptr @debugfs_create_dir(ptr noundef nonnull @.str.145, ptr noundef %15) #16
  %dir_debugfs = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 7
  %16 = ptrtoint ptr %dir_debugfs to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call, ptr %dir_debugfs, align 4
  tail call void @debugfs_create_atomic_t(ptr noundef nonnull @.str.146, i16 noundef zeroext 256, ptr noundef %call, ptr noundef %events_cnt) #16
  tail call void @debugfs_create_atomic_t(ptr noundef nonnull @.str.147, i16 noundef zeroext 256, ptr noundef %call, ptr noundef %rqs_cnt) #16
  %call29 = tail call ptr @debugfs_create_file(ptr noundef nonnull @.str.148, i16 noundef zeroext 384, ptr noundef %call, ptr noundef %delay_drop, ptr noundef nonnull @fops_delay_drop_timeout) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %do.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5_ib_stage_delay_drop_cleanup(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %raw_packet_caps = getelementptr inbounds %struct.ib_device, ptr %dev, i32 0, i32 22, i32 47
  %0 = ptrtoint ptr %raw_packet_caps to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %raw_packet_caps, align 8
  %and = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %delay_drop_work = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 1
  %call = tail call zeroext i1 @cancel_work_sync(ptr noundef %delay_drop_work) #16
  %dir_debugfs = getelementptr inbounds %struct.mlx5_ib_dev, ptr %dev, i32 0, i32 26, i32 7
  %2 = ptrtoint ptr %dir_debugfs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dir_debugfs, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %if.end.return_crit_edge, label %if.end4

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @debugfs_remove(ptr noundef nonnull %3) #16
  %4 = ptrtoint ptr %dir_debugfs to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %dir_debugfs, align 4
  br label %return

return:                                           ; preds = %if.end4, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5_port_immutable(ptr noundef %ibdev, i32 noundef %port_num, ptr nocapture noundef writeonly %immutable) #0 align 64 {
entry:
  %attr = alloca %struct.ib_port_attr, align 8
  %rep = alloca %struct.mlx5_hca_vport_context, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %attr) #16
  %0 = call ptr @memset(ptr %attr, i32 255, i32 72)
  %mdev.i = getelementptr inbounds %struct.mlx5_ib_dev, ptr %ibdev, i32 0, i32 1
  %1 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mdev.i, align 8
  %caps.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %caps.i, align 8
  %add.ptr.i = getelementptr i32, ptr %4, i32 13
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %add.ptr.i, align 4
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %rep) #16
  %7 = call ptr @memset(ptr %rep, i32 0, i32 80)
  %call2 = call i32 @ib_query_port(ptr noundef %ibdev, i32 noundef %port_num, ptr noundef nonnull %attr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = and i32 %6, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %switch.selectcmp2.i.i = icmp eq i32 %8, 0
  br i1 %switch.selectcmp2.i.i, label %if.then3, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then3:                                         ; preds = %if.end
  %9 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mdev.i, align 8
  %conv = trunc i32 %port_num to i8
  %call4 = call i32 @mlx5_query_hca_vport_context(ptr noundef %10, i8 noundef zeroext 0, i8 noundef zeroext %conv, i16 noundef zeroext 0, ptr noundef nonnull %rep) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then3.if.end8_crit_edge, label %if.then3.cleanup_crit_edge

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then3.if.end8_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end8:                                          ; preds = %if.then3.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %pkey_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %attr, i32 0, i32 11
  %11 = ptrtoint ptr %pkey_tbl_len to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %pkey_tbl_len, align 8
  %conv9 = zext i16 %12 to i32
  %13 = ptrtoint ptr %immutable to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv9, ptr %immutable, align 4
  %gid_tbl_len = getelementptr inbounds %struct.ib_port_attr, ptr %attr, i32 0, i32 5
  %14 = ptrtoint ptr %gid_tbl_len to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %gid_tbl_len, align 8
  %gid_tbl_len11 = getelementptr inbounds %struct.ib_port_immutable, ptr %immutable, i32 0, i32 1
  %16 = ptrtoint ptr %gid_tbl_len11 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %gid_tbl_len11, align 4
  %17 = ptrtoint ptr %mdev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mdev.i, align 8
  %caps.i.i = getelementptr inbounds %struct.mlx5_core_dev, ptr %18, i32 0, i32 8
  %19 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %caps.i.i, align 8
  %add.ptr.i.i = getelementptr i32, ptr %20, i32 13
  %21 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %add.ptr.i.i, align 4
  %23 = and i32 %22, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %switch.selectcmp2.i.i.i = icmp eq i32 %23, 0
  %arrayidx.i = getelementptr %struct.mlx5_core_dev, ptr %18, i32 0, i32 8, i32 0, i32 4
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx.i, align 8
  %add.ptr.i28 = getelementptr i32, ptr %25, i32 4
  %26 = ptrtoint ptr %add.ptr.i28 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %add.ptr.i28, align 4
  %grh_required.i = getelementptr inbounds %struct.mlx5_hca_vport_context, ptr %rep, i32 0, i32 23
  %28 = ptrtoint ptr %grh_required.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %grh_required.i, align 2, !range !402
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool14.not.i = icmp eq i8 %29, 0
  %spec.select.i = select i1 %tobool14.not.i, i32 0, i32 32768
  br i1 %switch.selectcmp2.i.i.i, label %if.then16.i, label %if.end18.i

if.then16.i:                                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %or17.i = or i32 %spec.select.i, 1052695
  br label %get_core_cap_flags.exit

if.end18.i:                                       ; preds = %if.end8
  %add.ptr.i.i.i = getelementptr i32, ptr %20, i32 48
  %30 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr.i.i.i, align 4
  %32 = and i32 %31, -16712192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %.not.i = icmp eq i32 %32, 0
  %or21.i = or i32 %spec.select.i, 16777216
  %spec.select62.i = select i1 %.not.i, i32 %or21.i, i32 %spec.select.i
  %33 = and i32 %27, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 393216, i32 %33)
  %.not64.i = icmp eq i32 %33, 393216
  br i1 %.not64.i, label %if.end32.i, label %if.end18.i.get_core_cap_flags.exit_crit_edge

if.end18.i.get_core_cap_flags.exit_crit_edge:     ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %get_core_cap_flags.exit

if.end32.i:                                       ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  %and34.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34.i)
  %tobool35.not.i = icmp eq i32 %and34.i, 0
  %or37.i = or i32 %spec.select62.i, 2109445
  %spec.select63.i = select i1 %tobool35.not.i, i32 %spec.select62.i, i32 %or37.i
  %and40.i = and i32 %27, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40.i)
  %tobool41.not.i = icmp eq i32 %and40.i, 0
  %or43.i = or i32 %spec.select63.i, 8400901
  %ret.3.i = select i1 %tobool41.not.i, i32 %spec.select63.i, i32 %or43.i
  br label %get_core_cap_flags.exit

get_core_cap_flags.exit:                          ; preds = %if.end32.i, %if.end18.i.get_core_cap_flags.exit_crit_edge, %if.then16.i
  %retval.0.i = phi i32 [ %or17.i, %if.then16.i ], [ %ret.3.i, %if.end32.i ], [ %spec.select62.i, %if.end18.i.get_core_cap_flags.exit_crit_edge ]
  %core_cap_flags = getelementptr inbounds %struct.ib_port_immutable, ptr %immutable, i32 0, i32 2
  %34 = ptrtoint ptr %core_cap_flags to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %retval.0.i, ptr %core_cap_flags, align 4
  %max_mad_size = getelementptr inbounds %struct.ib_port_immutable, ptr %immutable, i32 0, i32 3
  %35 = ptrtoint ptr %max_mad_size to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 256, ptr %max_mad_size, align 4
  br label %cleanup

cleanup:                                          ; preds = %get_core_cap_flags.exit, %if.then3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %get_core_cap_flags.exit ], [ %call2, %entry.cleanup_crit_edge ], [ %call4, %if.then3.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %rep) #16
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %attr) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @delay_drop_handler(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -4
  %events_cnt = getelementptr i8, ptr %work, i32 144
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %events_cnt, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %events_cnt, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %events_cnt, ptr %events_cnt, i32 1, ptr elementtype(i32) %events_cnt) #16, !srcloc !425
  %lock = getelementptr i8, ptr %work, i32 44
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #16
  %1 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %add.ptr, align 4
  %timeout = getelementptr i8, ptr %work, i32 136
  %3 = ptrtoint ptr %timeout to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %timeout, align 4
  %call = tail call i32 @mlx5_core_set_delay_drop(ptr noundef %2, i32 noundef %4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr, align 4
  %7 = getelementptr inbounds %struct.ib_device, ptr %6, i32 0, i32 13
  %8 = tail call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 68
  %12 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pid, align 8
  %14 = ptrtoint ptr %timeout to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %timeout, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %7, ptr noundef nonnull @.str.149, ptr noundef nonnull @.str.150, i32 noundef 2603, i32 noundef %13, i32 noundef %15) #20
  %activate = getelementptr i8, ptr %work, i32 140
  %16 = ptrtoint ptr %activate to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 0, ptr %activate, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @debugfs_create_dir(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_create_atomic_t(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @debugfs_create_file(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5_core_set_delay_drop(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @delay_drop_timeout_read(ptr nocapture noundef readonly %filp, ptr noundef %buf, i32 noundef %count, ptr noundef %pos) #0 align 64 {
entry:
  %lbuf = alloca [20 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %lbuf) #16
  %timeout = getelementptr inbounds %struct.mlx5_ib_delay_drop, ptr %1, i32 0, i32 3
  %2 = call ptr @memset(ptr %lbuf, i32 255, i32 20)
  %3 = ptrtoint ptr %timeout to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %timeout, align 4
  %call = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %lbuf, i32 noundef 20, ptr noundef nonnull @.str.151, i32 noundef %4)
  %call2 = call i32 @simple_read_from_buffer(ptr noundef %buf, i32 noundef %count, ptr noundef %pos, ptr noundef nonnull %lbuf, i32 noundef %call) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %lbuf) #16
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @delay_drop_timeout_write(ptr nocapture noundef readonly %filp, ptr noundef %buf, i32 noundef %count, ptr nocapture noundef readnone %pos) #0 align 64 {
entry:
  %var = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %var) #16
  %2 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %var, align 4, !annotation !403
  %call = call i32 @kstrtouint_from_user(ptr noundef %buf, i32 noundef %count, i32 noundef 0, ptr noundef nonnull %var) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %var to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %var, align 4
  %add = add i32 %4, 99
  %5 = urem i32 %add, 100
  %mul = sub i32 %add, %5
  %6 = call i32 @llvm.umin.i32(i32 %mul, i32 100000)
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %4)
  %cmp2.not = icmp eq i32 %6, %4
  br i1 %cmp2.not, label %if.end.if.end12_crit_edge, label %do.body

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @delay_drop_timeout_write.__UNIQUE_ID_ddebug586, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@delay_drop_timeout_write, %if.then9)) #16
          to label %if.end12 [label %if.then9], !srcloc !404

if.then9:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %9 = getelementptr inbounds %struct.ib_device, ptr %8, i32 0, i32 13
  %10 = call i32 @llvm.read_register.i32(metadata !392) #16
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 68
  %14 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pid, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @delay_drop_timeout_write.__UNIQUE_ID_ddebug586, ptr noundef %9, ptr noundef nonnull @.str.153, ptr noundef nonnull @.str.152, i32 noundef 3125, i32 noundef %15, i32 noundef %6) #16
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %do.body, %if.end.if.end12_crit_edge
  %timeout13 = getelementptr inbounds %struct.mlx5_ib_delay_drop, ptr %1, i32 0, i32 3
  %16 = ptrtoint ptr %timeout13 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %6, ptr %timeout13, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %count, %if.end12 ], [ -14, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %var) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_open(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_read_from_buffer(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtouint_from_user(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debugfs_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mlx5r_mp_probe(ptr nocapture noundef %adev, ptr nocapture noundef readnone %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdev1 = getelementptr inbounds %struct.mlx5_adev, ptr %adev, i32 0, i32 1
  %0 = ptrtoint ptr %mdev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdev1, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 104) #19
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %mdev2 = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %call7.i.i, i32 0, i32 2
  %3 = ptrtoint ptr %mdev2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %mdev2, align 4
  %sys_image_guid = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %call7.i.i, i32 0, i32 5
  %call3 = tail call i32 @mlx5_query_nic_vport_system_image_guid(ptr noundef %1, ptr noundef %sys_image_guid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

if.end6:                                          ; preds = %if.end
  tail call void @mutex_lock_nested(ptr noundef nonnull @mlx5_ib_multiport_mutex, i32 noundef 0) #16
  %.pn65 = load ptr, ptr @mlx5_ib_dev_list, align 4
  %cmp.not67 = icmp eq ptr %.pn65, @mlx5_ib_dev_list
  br i1 %cmp.not67, label %if.end6.if.then24_crit_edge, label %if.end6.for.body_crit_edge

if.end6.for.body_crit_edge:                       ; preds = %if.end6
  br label %for.body

if.end6.if.then24_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then24

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %if.end6.for.body_crit_edge
  %.pn68 = phi ptr [ %.pn, %for.cond.backedge.for.body_crit_edge ], [ %.pn65, %if.end6.for.body_crit_edge ]
  %sys_image_guid10 = getelementptr i8, ptr %.pn68, i32 8
  %4 = ptrtoint ptr %sys_image_guid10 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %sys_image_guid10, align 8
  %6 = ptrtoint ptr %sys_image_guid to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %sys_image_guid, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %5, i64 %7)
  %cmp12 = icmp eq i64 %5, %7
  br i1 %cmp12, label %if.then13, label %for.body.for.cond.backedge_crit_edge

for.body.for.cond.backedge_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.backedge

if.then13:                                        ; preds = %for.body
  %dev.069 = getelementptr i8, ptr %.pn68, i32 -9544
  %call14 = tail call fastcc zeroext i1 @mlx5_ib_bind_slave_port(ptr noundef %dev.069, ptr noundef nonnull %call7.i.i)
  br i1 %call14, label %for.end.thread, label %if.then13.for.cond.backedge_crit_edge

if.then13.for.cond.backedge_crit_edge:            ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.then13.for.cond.backedge_crit_edge, %for.body.for.cond.backedge_crit_edge
  %8 = ptrtoint ptr %.pn68 to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn = load ptr, ptr %.pn68, align 4
  %cmp.not = icmp eq ptr %.pn, @mlx5_ib_dev_list
  br i1 %cmp.not, label %for.cond.backedge.if.then24_crit_edge, label %for.cond.backedge.for.body_crit_edge

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.cond.backedge.if.then24_crit_edge:            ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then24

for.end.thread:                                   ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @rdma_roce_rescan_device(ptr noundef %dev.069) #16
  %ibdev = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %call7.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %ibdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ibdev, align 8
  %ib_active = getelementptr inbounds %struct.mlx5_ib_dev, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %ib_active to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load = load i8, ptr %ib_active, align 8
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %ib_active, align 8
  br label %if.end34

if.then24:                                        ; preds = %for.cond.backedge.if.then24_crit_edge, %if.end6.if.then24_crit_edge
  %12 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @mlx5_ib_unaffiliated_port_list, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %12, ptr noundef nonnull @mlx5_ib_unaffiliated_port_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then24.list_add_tail.exit_crit_edge

if.then24.list_add_tail.exit_crit_edge:           ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  store ptr %call7.i.i, ptr getelementptr inbounds (%struct.list_head, ptr @mlx5_ib_unaffiliated_port_list, i32 0, i32 1), align 4
  %13 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @mlx5_ib_unaffiliated_port_list, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %12, ptr %prev3.i.i, align 4
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %call7.i.i, ptr %12, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.then24.list_add_tail.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mlx5r_mp_probe.__UNIQUE_ID_ddebug601, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mlx5r_mp_probe, %if.then32)) #16
          to label %if.end34 [label %if.then32], !srcloc !404

if.then32:                                        ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %1, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mlx5r_mp_probe.__UNIQUE_ID_ddebug601, ptr noundef %17, ptr noundef nonnull @.str.156) #16
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %list_add_tail.exit, %for.end.thread
  tail call void @mutex_unlock(ptr noundef nonnull @mlx5_ib_multiport_mutex) #16
  %driver_data.i.i = getelementptr inbounds %struct.device, ptr %adev, i32 0, i32 8
  %18 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call7.i.i, ptr %driver_data.i.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %if.then5, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.then5 ], [ 0, %if.end34 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mlx5r_mp_remove(ptr nocapture noundef readonly %adev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.device, ptr %adev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @mlx5_ib_multiport_mutex, i32 noundef 0) #16
  %ibdev = getelementptr inbounds %struct.mlx5_ib_multiport_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ibdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ibdev, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @mlx5_ib_unbind_slave_port(ptr noundef nonnull %3, ptr noundef %1)
  br label %if.end

if.else:                                          ; preds = %entry
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %1) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.else.list_del.exit_crit_edge

if.else.list_del.exit_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.else.list_del.exit_crit_edge
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %1, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %if.then
  tail call void @mutex_unlock(ptr noundef nonnull @mlx5_ib_multiport_mutex) #16
  tail call void @kfree(ptr noundef %1) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rdma_roce_rescan_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @mlx5_ib_odp_init() local_unnamed_addr #8 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mlx5r_rep_init() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__auxiliary_driver_register(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #13

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 227)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 227)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind readonly }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { nounwind allocsize(2) }
attributes #20 = { cold nounwind }
attributes #21 = { nounwind readnone }
attributes #22 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !9, !11, !13, !15, !17, !18, !19, !21, !22, !23, !24, !25, !27, !28, !29, !30, !31, !33, !34, !35, !36, !38, !39, !40, !42, !43, !45, !46, !48, !49, !51, !52, !54, !55, !57, !58, !60, !61, !62, !64, !65, !67, !68, !70, !72, !73, !74, !76, !77, !78, !79, !80, !82, !83, !85, !86, !87, !88, !89, !91, !92, !93, !95, !96, !97, !99, !100, !102, !104, !105, !106, !107, !109, !110, !112, !113, !114, !116, !117, !119, !120, !122, !124, !126, !128, !130, !132, !134, !136, !137, !139, !141, !142, !144, !146, !147, !149, !151, !152, !154, !156, !157, !159, !160, !162, !164, !166, !168, !169, !170, !171, !173, !174, !175, !176, !178, !179, !181, !182, !184, !185, !186, !187, !188, !190, !191, !192, !194, !195, !196, !198, !199, !200, !201, !202, !204, !205, !206, !207, !209, !210, !211, !213, !214, !215, !217, !218, !219, !221, !222, !224, !225, !226, !228, !230, !232, !234, !236, !237, !238, !240, !241, !242, !244, !245, !246, !247, !249, !250, !251, !252, !253, !255, !257, !258, !259, !260, !262, !263, !264, !265, !267, !268, !270, !271, !273, !274, !276, !277, !279, !280, !282, !283, !285, !286, !288, !290, !292, !293, !295, !296, !297, !299, !300, !302, !303, !305, !307, !308, !309, !310, !312, !314, !316, !317, !318, !320, !321, !323, !324, !326, !327, !329, !330, !332, !333, !335, !336, !337, !339, !341, !343, !345, !347, !349, !351, !353, !354, !356, !357, !359, !361, !363, !365, !367, !368, !369, !370, !372, !374, !376, !377, !378, !380, !382, !384, !386, !387, !388, !390}
!llvm.named.register.sp = !{!392}
!llvm.module.flags = !{!393, !394, !395, !396, !397, !398, !399, !400}
!llvm.ident = !{!401}

!0 = !{ptr @__UNIQUE_ID_author558, !1, !"__UNIQUE_ID_author558", i1 false, i1 false}
!1 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 54, i32 1}
!2 = !{ptr @__UNIQUE_ID_description559, !3, !"__UNIQUE_ID_description559", i1 false, i1 false}
!3 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 55, i32 1}
!4 = !{ptr @__UNIQUE_ID_file560, !5, !"__UNIQUE_ID_file560", i1 false, i1 false}
!5 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 56, i32 1}
!6 = !{ptr @__UNIQUE_ID_license561, !5, !"__UNIQUE_ID_license561", i1 false, i1 false}
!7 = !{ptr @raw_eth_profile, !8, !"raw_eth_profile", i1 false, i1 false}
!8 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4327, i32 30}
!9 = !{ptr @__initcall__kmod_mlx5_ib__604_4568_mlx5_ib_init6, !10, !"__initcall__kmod_mlx5_ib__604_4568_mlx5_ib_init6", i1 false, i1 false}
!10 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4568, i32 1}
!11 = !{ptr @__exitcall_mlx5_ib_cleanup, !12, !"__exitcall_mlx5_ib_cleanup", i1 false, i1 false}
!12 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4569, i32 1}
!13 = !{ptr @mlx5_ib_event_wq, !14, !"mlx5_ib_event_wq", i1 false, i1 false}
!14 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 73, i32 33}
!15 = !{ptr @.str, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 79, i32 8}
!17 = !{ptr @.str.1, !16, !"<string literal>", i1 false, i1 false}
!18 = !{ptr @mlx5_ib_multiport_mutex, !16, !"mlx5_ib_multiport_mutex", i1 false, i1 false}
!19 = !{ptr @.str.2, !20, !"<string literal>", i1 false, i1 false}
!20 = !{!"../include/linux/mlx5/driver.h", i32 1194, i32 3}
!21 = !{ptr @.str.3, !20, !"<string literal>", i1 false, i1 false}
!22 = !{ptr @.str.4, !20, !"<string literal>", i1 false, i1 false}
!23 = !{ptr @mlx5_get_gid_table_len._entry, !20, !"_entry", i1 false, i1 false}
!24 = !{ptr @mlx5_get_gid_table_len._entry_ptr, !20, !"_entry_ptr", i1 false, i1 false}
!25 = !{ptr @.str.5, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1223, i32 3}
!27 = !{ptr @.str.6, !26, !"<string literal>", i1 false, i1 false}
!28 = !{ptr @.str.7, !26, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @.str.8, !26, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @translate_active_width.__UNIQUE_ID_ddebug566, !26, !"__UNIQUE_ID_ddebug566", i1 false, i1 false}
!31 = !{ptr @.str.9, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1240, i32 3}
!33 = !{ptr @.str.10, !32, !"<string literal>", i1 false, i1 false}
!34 = !{ptr @mlx5_mtu_to_ib_mtu._entry, !32, !"_entry", i1 false, i1 false}
!35 = !{ptr @mlx5_mtu_to_ib_mtu._entry_ptr, !32, !"_entry_ptr", i1 false, i1 false}
!36 = distinct !{null, !37, !"__warned", i1 false, i1 false}
!37 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!38 = !{ptr @.str.11, !37, !"<string literal>", i1 false, i1 false}
!39 = !{ptr @.str.12, !37, !"<string literal>", i1 false, i1 false}
!40 = distinct !{null, !41, !"__warned", i1 false, i1 false}
!41 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!42 = !{ptr @.str.13, !41, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @mlx5_ib_stage_init_init.__key, !44, !"__key", i1 false, i1 false}
!44 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3662, i32 3}
!45 = !{ptr @.str.14, !44, !"<string literal>", i1 false, i1 false}
!46 = !{ptr @mlx5_ib_stage_init_init.__key.15, !47, !"__key", i1 false, i1 false}
!47 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3663, i32 3}
!48 = !{ptr @.str.16, !47, !"<string literal>", i1 false, i1 false}
!49 = !{ptr @mlx5_ib_stage_init_init.__key.17, !50, !"__key", i1 false, i1 false}
!50 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3686, i32 2}
!51 = !{ptr @.str.18, !50, !"<string literal>", i1 false, i1 false}
!52 = !{ptr @mlx5_ib_stage_init_init.__key.19, !53, !"__key", i1 false, i1 false}
!53 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3688, i32 2}
!54 = !{ptr @.str.20, !53, !"<string literal>", i1 false, i1 false}
!55 = !{ptr @mlx5_ib_stage_init_init.__key.21, !56, !"__key", i1 false, i1 false}
!56 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3693, i32 2}
!57 = !{ptr @.str.22, !56, !"<string literal>", i1 false, i1 false}
!58 = !{ptr @.str.23, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3292, i32 5}
!60 = !{ptr @.str.24, !59, !"<string literal>", i1 false, i1 false}
!61 = !{ptr @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug589, !59, !"__UNIQUE_ID_ddebug589", i1 false, i1 false}
!62 = !{ptr @.str.25, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3294, i32 5}
!64 = !{ptr @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug590, !63, !"__UNIQUE_ID_ddebug590", i1 false, i1 false}
!65 = !{ptr @.str.26, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3300, i32 4}
!67 = !{ptr @mlx5_ib_init_multiport_master.__UNIQUE_ID_ddebug591, !66, !"__UNIQUE_ID_ddebug591", i1 false, i1 false}
!68 = !{ptr @mlx5_ib_unaffiliated_port_list, !69, !"mlx5_ib_unaffiliated_port_list", i1 false, i1 false}
!69 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 74, i32 8}
!70 = !{ptr @.str.27, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3207, i32 3}
!72 = !{ptr @.str.28, !71, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @mlx5_ib_bind_slave_port.__UNIQUE_ID_ddebug588, !71, !"__UNIQUE_ID_ddebug588", i1 false, i1 false}
!74 = !{ptr @.str.29, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3224, i32 3}
!76 = !{ptr @.str.30, !75, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @.str.31, !75, !"<string literal>", i1 false, i1 false}
!78 = !{ptr @mlx5_ib_bind_slave_port._entry, !75, !"_entry", i1 false, i1 false}
!79 = !{ptr @mlx5_ib_bind_slave_port._entry_ptr, !75, !"_entry_ptr", i1 false, i1 false}
!80 = !{ptr @mlx5_ib_event_slave_port.__key, !81, !"__key", i1 false, i1 false}
!81 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2749, i32 2}
!82 = !{ptr @.str.32, !81, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @.str.33, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2707, i32 3}
!85 = !{ptr @.str.34, !84, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @.str.35, !84, !"<string literal>", i1 false, i1 false}
!87 = !{ptr @mlx5_ib_handle_event._entry, !84, !"_entry", i1 false, i1 false}
!88 = !{ptr @mlx5_ib_handle_event._entry_ptr, !84, !"_entry_ptr", i1 false, i1 false}
!89 = !{ptr @.str.36, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3186, i32 2}
!91 = !{ptr @.str.37, !90, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @mlx5_ib_unbind_slave_port.__UNIQUE_ID_ddebug587, !90, !"__UNIQUE_ID_ddebug587", i1 false, i1 false}
!93 = !{ptr @.str.38, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3191, i32 3}
!95 = !{ptr @mlx5_ib_unbind_slave_port._entry, !94, !"_entry", i1 false, i1 false}
!96 = !{ptr @mlx5_ib_unbind_slave_port._entry_ptr, !94, !"_entry_ptr", i1 false, i1 false}
!97 = !{ptr @init_completion.__key, !98, !"__key", i1 false, i1 false}
!98 = !{!"../include/linux/completion.h", i32 87, i32 2}
!99 = !{ptr @.str.39, !98, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @mlx5_ib_dev_list, !101, !"mlx5_ib_dev_list", i1 false, i1 false}
!101 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 75, i32 8}
!102 = !{ptr @.str.40, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2774, i32 6}
!104 = !{ptr @.str.41, !103, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @set_has_smi_cap._entry, !103, !"_entry", i1 false, i1 false}
!106 = !{ptr @set_has_smi_cap._entry_ptr, !103, !"_entry_ptr", i1 false, i1 false}
!107 = !{ptr @xa_init_flags.__key, !108, !"__key", i1 false, i1 false}
!108 = !{!"../include/linux/xarray.h", i32 378, i32 2}
!109 = !{ptr @.str.42, !108, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @.str.43, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3327, i32 5}
!112 = !{ptr @.str.44, !111, !"<string literal>", i1 false, i1 false}
!113 = !{ptr @mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug592, !111, !"__UNIQUE_ID_ddebug592", i1 false, i1 false}
!114 = !{ptr @.str.45, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3337, i32 2}
!116 = !{ptr @mlx5_ib_cleanup_multiport_master.__UNIQUE_ID_ddebug593, !115, !"__UNIQUE_ID_ddebug593", i1 false, i1 false}
!117 = !{ptr @mlx5_ib_stage_caps_init.__key, !118, !"__key", i1 false, i1 false}
!118 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3878, i32 3}
!119 = !{ptr @.str.46, !118, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @mlx5_ib_dev_ipoib_enhanced_ops, !121, !"mlx5_ib_dev_ipoib_enhanced_ops", i1 false, i1 false}
!121 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3784, i32 35}
!122 = !{ptr @mlx5_ib_dev_sriov_ops, !123, !"mlx5_ib_dev_sriov_ops", i1 false, i1 false}
!123 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3788, i32 35}
!124 = !{ptr @mlx5_ib_dev_mw_ops, !125, !"mlx5_ib_dev_mw_ops", i1 false, i1 false}
!125 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3796, i32 35}
!126 = !{ptr @mlx5_ib_dev_xrc_ops, !127, !"mlx5_ib_dev_xrc_ops", i1 false, i1 false}
!127 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3803, i32 35}
!128 = !{ptr @mlx5_ib_dev_ops, !129, !"mlx5_ib_dev_ops", i1 false, i1 false}
!129 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3714, i32 35}
!130 = !{ptr @mlx5_attr_group, !131, !"mlx5_attr_group", i1 false, i1 false}
!131 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2511, i32 37}
!132 = !{ptr @mlx5_class_attributes, !133, !"mlx5_class_attributes", i1 false, i1 false}
!133 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2502, i32 26}
!134 = !{ptr @.str.47, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2489, i32 8}
!136 = !{ptr @dev_attr_hw_rev, !135, !"dev_attr_hw_rev", i1 false, i1 false}
!137 = !{ptr @.str.48, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2487, i32 25}
!139 = !{ptr @.str.49, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2479, i32 8}
!141 = !{ptr @dev_attr_hca_type, !140, !"dev_attr_hca_type", i1 false, i1 false}
!142 = !{ptr @.str.50, !143, !"<string literal>", i1 false, i1 false}
!143 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2477, i32 25}
!144 = !{ptr @.str.51, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2500, i32 8}
!146 = !{ptr @dev_attr_board_id, !145, !"dev_attr_board_id", i1 false, i1 false}
!147 = !{ptr @.str.52, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2497, i32 25}
!149 = !{ptr @.str.53, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2459, i32 8}
!151 = !{ptr @dev_attr_fw_pages, !150, !"dev_attr_fw_pages", i1 false, i1 false}
!152 = !{ptr @.str.54, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2457, i32 25}
!154 = !{ptr @.str.55, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2469, i32 8}
!156 = !{ptr @dev_attr_reg_pages, !155, !"dev_attr_reg_pages", i1 false, i1 false}
!157 = distinct !{null, !158, !"__already_done", i1 false, i1 false}
!158 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!159 = !{ptr @.str.56, !158, !"<string literal>", i1 false, i1 false}
!160 = !{ptr @.str.57, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!162 = !{ptr @.str.58, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../include/linux/uaccess.h", i32 174, i32 2}
!164 = !{ptr @.str.59, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2989, i32 40}
!166 = !{ptr @.str.60, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1528, i32 3}
!168 = !{ptr @.str.61, !167, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @set_port_caps_atomic._entry, !167, !"_entry", i1 false, i1 false}
!170 = !{ptr @set_port_caps_atomic._entry_ptr, !167, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @.str.62, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 595, i32 3}
!173 = !{ptr @.str.63, !172, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @set_roce_addr._entry, !172, !"_entry", i1 false, i1 false}
!175 = !{ptr @set_roce_addr._entry_ptr, !172, !"_entry_ptr", i1 false, i1 false}
!176 = !{ptr @mlx5_ib_alloc_ucontext.__key, !177, !"__key", i1 false, i1 false}
!177 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1918, i32 2}
!178 = !{ptr @.str.64, !177, !"<string literal>", i1 false, i1 false}
!179 = !{ptr @mlx5_ib_alloc_ucontext.__key.65, !180, !"__key", i1 false, i1 false}
!180 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1946, i32 2}
!181 = !{ptr @.str.66, !180, !"<string literal>", i1 false, i1 false}
!182 = !{ptr @.str.67, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1629, i32 2}
!184 = !{ptr @.str.68, !183, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @calc_total_bfregs.__UNIQUE_ID_ddebug570, !183, !"__UNIQUE_ID_ddebug570", i1 false, i1 false}
!186 = !{ptr @.str.69, !183, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @.str.70, !183, !"<string literal>", i1 false, i1 false}
!188 = !{ptr @.str.71, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1651, i32 3}
!190 = !{ptr @.str.72, !189, !"<string literal>", i1 false, i1 false}
!191 = !{ptr @allocate_uars.__UNIQUE_ID_ddebug571, !189, !"__UNIQUE_ID_ddebug571", i1 false, i1 false}
!192 = !{ptr @.str.73, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1663, i32 4}
!194 = !{ptr @allocate_uars._entry, !193, !"_entry", i1 false, i1 false}
!195 = !{ptr @allocate_uars._entry_ptr, !193, !"_entry_ptr", i1 false, i1 false}
!196 = !{ptr @.str.74, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 1587, i32 2}
!198 = !{ptr @.str.75, !197, !"<string literal>", i1 false, i1 false}
!199 = !{ptr @print_lib_caps.__UNIQUE_ID_ddebug567, !197, !"__UNIQUE_ID_ddebug567", i1 false, i1 false}
!200 = !{ptr @.str.76, !197, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @.str.77, !197, !"<string literal>", i1 false, i1 false}
!202 = !{ptr @.str.78, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2177, i32 3}
!204 = !{ptr @.str.79, !203, !"<string literal>", i1 false, i1 false}
!205 = !{ptr @uar_mmap._entry, !203, !"_entry", i1 false, i1 false}
!206 = !{ptr @uar_mmap._entry_ptr, !203, !"_entry_ptr", i1 false, i1 false}
!207 = !{ptr @.str.81, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2202, i32 4}
!209 = !{ptr @uar_mmap._entry.80, !208, !"_entry", i1 false, i1 false}
!210 = !{ptr @uar_mmap._entry_ptr.82, !208, !"_entry_ptr", i1 false, i1 false}
!211 = !{ptr @.str.84, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2212, i32 4}
!213 = !{ptr @uar_mmap._entry.83, !212, !"_entry", i1 false, i1 false}
!214 = !{ptr @uar_mmap._entry_ptr.85, !212, !"_entry_ptr", i1 false, i1 false}
!215 = !{ptr @.str.87, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2223, i32 4}
!217 = !{ptr @uar_mmap._entry.86, !216, !"_entry", i1 false, i1 false}
!218 = !{ptr @uar_mmap._entry_ptr.88, !216, !"_entry_ptr", i1 false, i1 false}
!219 = !{ptr @.str.89, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2231, i32 2}
!221 = !{ptr @uar_mmap.__UNIQUE_ID_ddebug580, !220, !"__UNIQUE_ID_ddebug580", i1 false, i1 false}
!222 = !{ptr @.str.91, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2236, i32 3}
!224 = !{ptr @uar_mmap._entry.90, !223, !"_entry", i1 false, i1 false}
!225 = !{ptr @uar_mmap._entry_ptr.92, !223, !"_entry_ptr", i1 false, i1 false}
!226 = !{ptr @.str.93, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2087, i32 10}
!228 = !{ptr @.str.94, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2089, i32 10}
!230 = !{ptr @.str.95, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2091, i32 10}
!232 = distinct !{null, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2093, i32 10}
!234 = !{ptr @.str.97, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2410, i32 3}
!236 = !{ptr @.str.98, !235, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @mlx5_ib_mcg_attach.__UNIQUE_ID_ddebug583, !235, !"__UNIQUE_ID_ddebug583", i1 false, i1 false}
!238 = !{ptr @.str.99, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2416, i32 3}
!240 = !{ptr @mlx5_ib_mcg_attach._entry, !239, !"_entry", i1 false, i1 false}
!241 = !{ptr @mlx5_ib_mcg_attach._entry_ptr, !239, !"_entry_ptr", i1 false, i1 false}
!242 = !{ptr @.str.100, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2432, i32 3}
!244 = !{ptr @.str.101, !243, !"<string literal>", i1 false, i1 false}
!245 = !{ptr @mlx5_ib_mcg_detach._entry, !243, !"_entry", i1 false, i1 false}
!246 = !{ptr @mlx5_ib_mcg_detach._entry_ptr, !243, !"_entry_ptr", i1 false, i1 false}
!247 = !{ptr @.str.102, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3708, i32 2}
!249 = !{ptr @.str.103, !248, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @mlx5_ib_enable_driver.__UNIQUE_ID_ddebug594, !248, !"__UNIQUE_ID_ddebug594", i1 false, i1 false}
!251 = !{ptr @.str.104, !248, !"<string literal>", i1 false, i1 false}
!252 = !{ptr @.str.105, !248, !"<string literal>", i1 false, i1 false}
!253 = !{ptr @mlx5_ib_defs, !254, !"mlx5_ib_defs", i1 false, i1 false}
!254 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3624, i32 37}
!255 = !{ptr @mlx5_ib_flow_action, !256, !"mlx5_ib_flow_action", i1 false, i1 false}
!256 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3607, i32 1}
!257 = !{ptr @_object_methods_UVERBS_OBJECT_FLOW_ACTION3612, !256, !"_object_methods_UVERBS_OBJECT_FLOW_ACTION3612", i1 false, i1 false}
!258 = !{ptr @mlx5_ib_method_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE, !256, !"mlx5_ib_method_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE", i1 false, i1 false}
!259 = !{ptr @_method_attrs_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE, !256, !"_method_attrs_UVERBS_METHOD_FLOW_ACTION_ESP_CREATE", i1 false, i1 false}
!260 = !{ptr @mlx5_ib_query_context, !261, !"mlx5_ib_query_context", i1 false, i1 false}
!261 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3614, i32 1}
!262 = !{ptr @_object_methods_UVERBS_OBJECT_DEVICE3622, !261, !"_object_methods_UVERBS_OBJECT_DEVICE3622", i1 false, i1 false}
!263 = !{ptr @mlx5_ib_method_UVERBS_METHOD_QUERY_CONTEXT, !261, !"mlx5_ib_method_UVERBS_METHOD_QUERY_CONTEXT", i1 false, i1 false}
!264 = !{ptr @_method_attrs_UVERBS_METHOD_QUERY_CONTEXT, !261, !"_method_attrs_UVERBS_METHOD_QUERY_CONTEXT", i1 false, i1 false}
!265 = !{ptr @mlx5_ib_object_MLX5_IB_OBJECT_VAR, !266, !"mlx5_ib_object_MLX5_IB_OBJECT_VAR", i1 false, i1 false}
!266 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3472, i32 1}
!267 = !{ptr @_object_methods_MLX5_IB_OBJECT_VAR3475, !266, !"_object_methods_MLX5_IB_OBJECT_VAR3475", i1 false, i1 false}
!268 = !{ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_ALLOC, !269, !"mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_ALLOC", i1 false, i1 false}
!269 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3449, i32 1}
!270 = !{ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_ALLOC, !269, !"_method_attrs_MLX5_IB_METHOD_VAR_OBJ_ALLOC", i1 false, i1 false}
!271 = !{ptr @mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_DESTROY, !272, !"mlx5_ib_method_MLX5_IB_METHOD_VAR_OBJ_DESTROY", i1 false, i1 false}
!272 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3465, i32 1}
!273 = !{ptr @_method_attrs_MLX5_IB_METHOD_VAR_OBJ_DESTROY, !272, !"_method_attrs_MLX5_IB_METHOD_VAR_OBJ_DESTROY", i1 false, i1 false}
!274 = !{ptr @mlx5_ib_object_MLX5_IB_OBJECT_UAR, !275, !"mlx5_ib_object_MLX5_IB_OBJECT_UAR", i1 false, i1 false}
!275 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3602, i32 1}
!276 = !{ptr @_object_methods_MLX5_IB_OBJECT_UAR3605, !275, !"_object_methods_MLX5_IB_OBJECT_UAR3605", i1 false, i1 false}
!277 = !{ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_ALLOC, !278, !"mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_ALLOC", i1 false, i1 false}
!278 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3576, i32 1}
!279 = !{ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_ALLOC, !278, !"_method_attrs_MLX5_IB_METHOD_UAR_OBJ_ALLOC", i1 false, i1 false}
!280 = !{ptr @mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_DESTROY, !281, !"mlx5_ib_method_MLX5_IB_METHOD_UAR_OBJ_DESTROY", i1 false, i1 false}
!281 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3595, i32 1}
!282 = !{ptr @_method_attrs_MLX5_IB_METHOD_UAR_OBJ_DESTROY, !281, !"_method_attrs_MLX5_IB_METHOD_UAR_OBJ_DESTROY", i1 false, i1 false}
!283 = !{ptr @mlx5_ib_init_var_table.__key, !284, !"__key", i1 false, i1 false}
!284 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3829, i32 2}
!285 = !{ptr @.str.121, !284, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @mlx5_ib_dev_port_rep_ops, !287, !"mlx5_ib_dev_port_rep_ops", i1 false, i1 false}
!287 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3903, i32 35}
!288 = !{ptr @mlx5_ib_dev_common_roce_ops, !289, !"mlx5_ib_dev_common_roce_ops", i1 false, i1 false}
!289 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3915, i32 35}
!290 = !{ptr @mlx5_ib_dev_res_init.__key, !291, !"__key", i1 false, i1 false}
!291 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2864, i32 3}
!292 = !{ptr @.str.122, !291, !"<string literal>", i1 false, i1 false}
!293 = distinct !{null, !294, !"__already_done", i1 false, i1 false}
!294 = !{!"../include/rdma/ib_verbs.h", i32 3688, i32 2}
!295 = !{ptr @.str.123, !294, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @.str.124, !294, !"<string literal>", i1 false, i1 false}
!297 = distinct !{null, !298, !"__already_done", i1 false, i1 false}
!298 = !{!"../include/rdma/ib_verbs.h", i32 3936, i32 2}
!299 = !{ptr @.str.125, !298, !"<string literal>", i1 false, i1 false}
!300 = distinct !{null, !301, !"__already_done", i1 false, i1 false}
!301 = !{!"../include/rdma/ib_verbs.h", i32 3498, i32 2}
!302 = !{ptr @.str.126, !301, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @mlx5_ib_event.__key, !304, !"__key", i1 false, i1 false}
!304 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2729, i32 2}
!305 = !{ptr @.str.127, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4039, i32 3}
!307 = !{ptr @.str.128, !306, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry, !306, !"_entry", i1 false, i1 false}
!309 = !{ptr @mlx5_ib_stage_pre_ib_reg_umr_cleanup._entry_ptr, !306, !"_entry_ptr", i1 false, i1 false}
!310 = !{ptr @.str.129, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4027, i32 10}
!312 = !{ptr @.str.130, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4029, i32 10}
!314 = !{ptr @.str.131, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4076, i32 3}
!316 = !{ptr @.str.132, !315, !"<string literal>", i1 false, i1 false}
!317 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug595, !315, !"__UNIQUE_ID_ddebug595", i1 false, i1 false}
!318 = !{ptr @.str.133, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4083, i32 3}
!320 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug596, !319, !"__UNIQUE_ID_ddebug596", i1 false, i1 false}
!321 = !{ptr @.str.134, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4097, i32 3}
!323 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug597, !322, !"__UNIQUE_ID_ddebug597", i1 false, i1 false}
!324 = !{ptr @.str.135, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4107, i32 3}
!326 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug598, !325, !"__UNIQUE_ID_ddebug598", i1 false, i1 false}
!327 = !{ptr @.str.136, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4117, i32 3}
!329 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug599, !328, !"__UNIQUE_ID_ddebug599", i1 false, i1 false}
!330 = !{ptr @.str.137, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4125, i32 3}
!332 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init.__UNIQUE_ID_ddebug600, !331, !"__UNIQUE_ID_ddebug600", i1 false, i1 false}
!333 = !{ptr @.str.138, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4136, i32 3}
!335 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init._entry, !334, !"_entry", i1 false, i1 false}
!336 = !{ptr @mlx5_ib_stage_post_ib_reg_umr_init._entry_ptr, !334, !"_entry_ptr", i1 false, i1 false}
!337 = !{ptr @sema_init.__key, !338, !"__key", i1 false, i1 false}
!338 = !{!"../include/linux/semaphore.h", i32 33, i32 31}
!339 = !{ptr @.str.139, !340, !"<string literal>", i1 false, i1 false}
!340 = !{!"../include/linux/semaphore.h", i32 34, i32 28}
!341 = !{ptr @.str.140, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../include/linux/semaphore.h", i32 35, i32 39}
!343 = !{ptr @.str.141, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4516, i32 10}
!345 = !{ptr @mlx5r_driver, !346, !"mlx5r_driver", i1 false, i1 false}
!346 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4515, i32 32}
!347 = !{ptr @pf_profile, !348, !"pf_profile", i1 false, i1 false}
!348 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4264, i32 37}
!349 = !{ptr @mlx5_ib_dev_port_ops, !350, !"mlx5_ib_dev_port_ops", i1 false, i1 false}
!350 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3892, i32 35}
!351 = !{ptr @mlx5_ib_stage_delay_drop_init.__key, !352, !"__key", i1 false, i1 false}
!352 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4170, i32 2}
!353 = !{ptr @.str.142, !352, !"<string literal>", i1 false, i1 false}
!354 = !{ptr @mlx5_ib_stage_delay_drop_init.__key.143, !355, !"__key", i1 false, i1 false}
!355 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4174, i32 2}
!356 = !{ptr @.str.144, !355, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @.str.145, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4181, i32 28}
!359 = !{ptr @.str.146, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4184, i32 26}
!361 = !{ptr @.str.147, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4186, i32 26}
!363 = !{ptr @.str.148, !364, !"<string literal>", i1 false, i1 false}
!364 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4188, i32 22}
!365 = !{ptr @.str.149, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 2602, i32 3}
!367 = !{ptr @.str.150, !366, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @delay_drop_handler._entry, !366, !"_entry", i1 false, i1 false}
!369 = !{ptr @delay_drop_handler._entry_ptr, !366, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @fops_delay_drop_timeout, !371, !"fops_delay_drop_timeout", i1 false, i1 false}
!371 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3132, i32 37}
!372 = !{ptr @.str.151, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3107, i32 37}
!374 = !{ptr @.str.152, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 3124, i32 3}
!376 = !{ptr @.str.153, !375, !"<string literal>", i1 false, i1 false}
!377 = !{ptr @delay_drop_timeout_write.__UNIQUE_ID_ddebug586, !375, !"__UNIQUE_ID_ddebug586", i1 false, i1 false}
!378 = !{ptr @mlx5r_id_table, !379, !"mlx5r_id_table", i1 false, i1 false}
!379 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4500, i32 41}
!380 = !{ptr @.str.154, !381, !"<string literal>", i1 false, i1 false}
!381 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4509, i32 10}
!382 = !{ptr @mlx5r_mp_driver, !383, !"mlx5r_mp_driver", i1 false, i1 false}
!383 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4508, i32 32}
!384 = !{ptr @.str.155, !385, !"<string literal>", i1 false, i1 false}
!385 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4420, i32 3}
!386 = !{ptr @.str.156, !385, !"<string literal>", i1 false, i1 false}
!387 = !{ptr @mlx5r_mp_probe.__UNIQUE_ID_ddebug601, !385, !"__UNIQUE_ID_ddebug601", i1 false, i1 false}
!388 = !{ptr @mlx5r_mp_id_table, !389, !"mlx5r_mp_id_table", i1 false, i1 false}
!389 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4495, i32 41}
!390 = !{ptr @.str.157, !391, !"<string literal>", i1 false, i1 false}
!391 = !{!"../drivers/infiniband/hw/mlx5/main.c", i32 4530, i32 21}
!392 = !{!"sp"}
!393 = !{i32 1, !"wchar_size", i32 2}
!394 = !{i32 1, !"min_enum_size", i32 4}
!395 = !{i32 8, !"branch-target-enforcement", i32 0}
!396 = !{i32 8, !"sign-return-address", i32 0}
!397 = !{i32 8, !"sign-return-address-all", i32 0}
!398 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!399 = !{i32 7, !"uwtable", i32 1}
!400 = !{i32 7, !"frame-pointer", i32 2}
!401 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!402 = !{i8 0, i8 2}
!403 = !{!"auto-init"}
!404 = !{i64 2148608473, i64 2148608478, i64 2148608491, i64 2148608535, i64 2148608569, i64 2148608590}
!405 = !{i64 2149596321}
!406 = !{i64 1188555, i64 1188616}
!407 = !{i64 1191287}
!408 = !{!"branch_weights", i32 1, i32 2000}
!409 = !{i64 1191572}
!410 = !{i64 2149596587}
!411 = !{!"branch_weights", i32 2000, i32 1}
!412 = !{i64 2148633660, i64 2148633940, i64 2148634274, i64 2148634608}
!413 = !{i64 6037653}
!414 = !{i64 2158996950}
!415 = !{i64 2158997421}
!416 = !{i64 2158997912}
!417 = !{i64 2152296354, i64 2152296379}
!418 = !{i64 4791909}
!419 = !{i64 4792106}
!420 = !{i64 2152277339}
!421 = !{i64 2148869310}
!422 = !{i64 2148784595, i64 2148784627, i64 2148784656, i64 2148784690, i64 2148784721, i64 2148784744}
!423 = !{i64 2148869539}
!424 = !{i64 2152297035, i64 2152297060}
!425 = !{i64 2148783875, i64 2148783901, i64 2148783930, i64 2148783964, i64 2148783995, i64 2148784018}
